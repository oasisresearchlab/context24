Cultural Clash : Exploring How Studio - Based Pedagogy Impacts Learning for Students in HCI Classrooms Vanessa Oguamanam 1 , Taneisha Lee 2 , Tom McKlin 2 , Zane Cockran 1 , Gregory Abowd 1 , Betsy DiSalvo 1 1 Georgia Tech , Atlanta , Georgia , USA { vanogu , zcochran3 , edisalvo3 , gabowd } @ gatech . edu 2 The Findings Group , Decatur , Georgia , USA { taneisha , tom } @ theﬁndingsgroup . org ABSTRACT A number of computing departments have adapted studio - based pedagogy for teaching Human - Computer Interaction ( HCI ) to help students develop creative design skills . These efforts have shown promise , however , some challenges that emerge when integrating studio - based pedagogy into com - puting programs have been neglected by researchers . This research focuses on these challenges in the implementation and evaluation of a studio - based approach integrated into three HCI - related courses . This study is based on 6 classes , 44 interviews with students , observations , and interviews with members of the teaching team . Findings supported many pos - itive outcomes from previous studio - based implementations . Nevertheless , students felt the change in pedagogy frustrating and it may have hindered their creativity , motivation , and en - gagement . This paper highlights these conﬂicting narratives , comparing computing culture with studio - based pedagogy . We conclude with considerations for future implementations . Author Keywords Studio - based pedagogy , HCI , design education , classroom culture , learning outcomes CCS Concepts • Human - centered computing → Human computer inter - action ( HCI ) ; • Social and professional topics → Comput - ing education ; INTRODUCTION As HCI continues to evolve as a ﬁeld without boundaries [ 41 , 31 ] , the number of pedagogical approaches shaping how design education is taught today also continues to rise [ 48 ] . Some examples of current approaches for teaching design in HCI include integrating values [ 29 ] , community - based service Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page . Copyrights for components of this work owned by others than the author ( s ) must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , topostonserversortoredistributetolists , requirespriorspeciﬁcpermission and / or a fee . Request permissions from permissions @ acm . org . DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands © 2020 Copyright held by the owner / author ( s ) . Publication rights licensed to ACM . ISBN 978 - 1 - 4503 - 6974 - 9 / 20 / 07 . . . $ 15 . 00 DOI : https : / / doi . org / 10 . 1145 / 3357236 . 3395544 projects [ 32 ] , sustainability [ 28 ] , and design activism [ 23 ] . Despite this variability , HCI instruction tends to share a few commonalities : ( 1 ) they are often taught in lecture - format within computing departments by faculty with technical back - grounds and ( 2 ) course curricula are focused primarily on user - centered design , neglecting subject matter central to traditions in design studio [ 48 ] . Furthermore , in a recent international survey of HCI faculty , instructors reported on intentions to teach both approaches to design , yet in practice , centered their course content around traditional user - centered design [ 48 ] . This is an issue not because one approach to design education is better than the other , rather , in order to best prepare the next generation of HCI practitioners , students must be trained in both traditional HCI and more creative design approaches [ 48 ] . As Hendrix et . al highlight , it is vital that new approaches to HCI design education motivate , engage , and develop the creative practices of students in ways that facilitates learning in computing education [ 24 ] . Currently , however , there exists a lack of knowledge in HCI on how to teach students creative design approaches . Studio - based pedagogy has proven to be a promising approach for enhancing design education and facilitating learning for students in HCI classrooms [ 40 , 44 , 13 , 31 ] . A studio - based pedagogical approach stems from traditions in studio arts and is generally comprised of a combination of the following : project - based activities , creation of artifacts , long class ses - sions , collaboration between students and faculty , teaching in the form of critique sessions , and learning in the form of self - reﬂections [ 48 , 40 , 13 , 24 , 15 ] . Studies show that studio - based pedagogy helps foster creativity [ 13 , 31 ] and increases student collaboration [ 45 , 4 , 40 ] in the learning environment . By immersing in creative design practices ( i . e . hands - on ac - tivities , design critiques , reﬂection , and visibility of work ) , students are more engaged and motivated . Therefore , student ownership of the design and learning process [ 46 , 45 , 4 , 40 ] as well as the self - efﬁcacy of their design skills [ 47 ] increases . Although , most of the research on studio - based pedagogy in HCI is positive , there are challenges with integrating this approach into traditional HCI classrooms . For example , in - frastructural challenges emerge when taking a studio - based approach in traditional HCI classrooms due to the large class 1 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1131 size of computing courses and the lack of studio space [ 40 ] . Pedagogical challenges also emerge , such as instructors’ strug - gle with balancing lecture - format and hands - on work . This clash of classroom cultures between traditional HCI and studio - based pedagogy and the effects it has on the learning outcomes of students is under - explored . We argue that in order for de - sign education in HCI to fully beneﬁt from creative design praxis , such as studio - based pedagogical approaches , these challenges must be addressed and not overlooked . In this paper , we present ﬁndings from three courses that sought to integrate creative design praxis ( i . e . , a maker - studio approach ) into undergraduate and graduate HCI curricula within a computing program . This maker - studio approach is comprised of : ( 1 ) six project - based maker - activities and ( 2 ) two studio - based learning techniques . The learning objec - tives of the maker - studio approach align with how creative design praxis has been deﬁned and include the following : ( L1 ) to enrich the community of learners in the classroom by in - creasing student collaboration and communication , ( L2 ) to have students develop a deeper understanding of their work by increasing visibility and extending project - based learning to maker activities in HCI classrooms , ( L3 ) to foster creativity by enhancing the creative practices of students , and ( L4 ) to increase student motivation and engagement by shifting their focus from grades to valuing the learning and design process . Previous work has addressed L1 [ 45 ] and L2 [ 11 , 26 ] , iden - tifying that elements of the maker - studio approach ( i . e . , in - class hands - on group activities , regular scaffolded interactions through critiques and discussions , and the visibility of work ) enhanced the students’ learning experiences and left them with a positive feeling about the class and their classmates . However , there were challenges with implementing this studio - based approach into traditional HCI curricula . Hence , this paper focuses on L3 and L4 . Speciﬁcally , we ask , How does integrating studio - based learning into computing curricula inﬂuence : ( R1 ) : the creative practices of students ? ( R2 ) : student motivation and engagement ? Through observations , interviews with students , and feedback from instructors and teaching assistants , we sought to answer these questions and provide design considerations for future implementations of studio - based design in HCI classrooms . RELATED WORK Design Pedagogy in HCI HCI is a multidisciplinary ﬁeld " without boundaries " [ 41 ] that continues to expand with theories , methods , and tools at the intersection of social science , technology , and design . Accord - ingly , there are countless textbooks and topics for HCI educa - tors to choose from . Within the work of deﬁning HCI , there has been a long discourse surrounding the question , what is de - sign in HCI ? [ 34 , 49 , 17 ] . One distinction that has been made among HCI design scholars is between engineering design and creative design [ 34 ] . For HCI education programs associ - ated with the ACM and in popular HCI textbooks , researchers have identiﬁed an emphasis on development of curriculum for engineering design skills , or what is known as formal iterative design [ 48 ] . Formal - Iterative Design in HCI Education . Teaching formal iterative design is a valuable approach to HCI education , how - ever it differs from teaching creative design practices . In for - mal iterative design curriculum there is generally a sequenced ordering of methods ( i . e . , identiﬁcation of users , functional goals , and business requirements ) followed by a sequence of design based upon speciﬁcation ( i . e . , evaluation of an artifact ) , and ﬁnally a focus on iterative evidence - based design choices . Creative Design in HCI Education . Creative design curricu - lum differs from the formal iterative design approach in that it more closely aligned with traditions in studio arts and ar - chitecture ( i . e . , pursuing multiple directions at once , iterating through continual culling and expanding of ideas , and develop - ing students expertise in identifying and articulating qualities of design ) . Creative design pedagogies focus on the devel - opment of students’ creative skills by leveraging generative methods to explore envisioned solutions , encouraging many parallel design directions to create a more divergent set of con - cepts [ 16 ] . Though both approaches are seen as appropriate for teaching HCI design , it was recently reported that most HCI faculty were unlikely to have experience with creative design praxis because they had degrees in computer science , information science , or engineering [ 48 ] . These factors sug - gest that in computing departments , both the current practices in HCI design education and the capabilities of faculty are limited to a formal iterative design pedagogy . In design studios , it is expected that a creative designer will be capable of communicating what is " good design " and " poor design . " Cultivating that practice - oriented discourse is the role of educators , and in the studio , take shape in the form of cri - tiques and reﬂection [ 21 , 39 ] . This experience is achieved by engaging in design , but is also gained through the process of analyzing and critiquing other designs [ 15 , 27 , 43 ] . There have been a handful of creative design approaches to teach - ing HCI that leverage generative practices and critiques , as outlined below . However , the more traditional mechanisms for feedback in HCI classes are more similar to the stress - ful juried critiques in architecture [ 1 ] , with students giving formal presentations , poster sessions , and design documents that are typically used as summative assessments , rather than formative assessments provided in more informal studio style critiques ( e . g . , one - on - one desk crits , informal peer critiques , and pin - ups [ 21 ] ) . Studio - Based Praxis in HCI Education . Previous researchers and educators have adopted studio - based learning as an ap - proach to increase creative design in HCI [ 10 ] , to improve student discourse about design [ 21 ] and to increase engage - ment [ 44 ] . Studies show that HCI students beneﬁt from the " learning by doing " approach of studio work as well as from the more interactive , collaborative , and reﬂective practices [ 40 , 25 , 24 ] . For example , Vorvoreanu et al . implemented a studio - based intervention into an undergraduate UX course and saw early signs that students were building valuable skills including an increase in students’ self - efﬁcacy in their de - sign abilities and use of design methodologies [ 47 ] . Rather 2 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1132 than relying on implementing full studio courses , other re - searchers have explored integrating pedagogical principles of studio - based learning such as design - crits , or critique sessions , and having students construct their own artifacts [ 44 ] . These studies argue for the beneﬁts of studio - based learning in HCI design education , ﬁnding that students were able to seek help and offer opinions to their classmates , [ 40 , 45 ] as well as ben - eﬁt from the design expertise of the instructor [ 31 ] . They also identiﬁed that students took on full ownership of their work [ 40 , 45 ] and engaged in authentic practices that are similar to what they would engage in for their profession [ 31 ] . Though these ﬁndings are promising , studio - based learning has its limitations . Blevis et . al mentioned that the limitations of studio - based learning included its lack of scalability , lack of rigor ( i . e . , failure to include concepts and methods of HCI ) , and its perceived lack of structure for assignments that are outside of the comfort of both students and professors who are used to the lecture - style approach to teaching [ 6 ] . Though Koutsabasis et . al did see some beneﬁts such as an increase in communication and collaboration , there were technical issues that they faced during their intervention with the choice of technology and software they used [ 30 ] . Similarly , Reimer and Douglas [ 40 ] tell us that students felt studio - based HCI had un - clear grading and undeﬁned goals . These issues are important to consider when developing studio - based learning for HCI . As summarized by Wilcox et al . [ 48 ] : CS students are con - ditioned to fear the open unstructured nature of studio - based learning due to the defensive climate of traditional comput - ing courses and faculty having little training on how to teach studio - based approaches . There is little research that explores the effects that the studio - based learning approach has in the current culture of computing environments and how it might change that culture . Challenges in Computing Environments Computing culture is often described in regards to who partic - ipates in the learning environment , how students interact with one another , and how they are evaluated . Participation refers to who is participating in computing . Computing classrooms tend to lack diversity of students and are often described as " boy’s clubs " [ 35 , 19 , 8 ] . This lack of representation , particu - larly from underrepresented ( i . e . women and minorities ) stu - dents , results in these students lacking conﬁdence and feeling as though they do not belong in the computing environments [ 3 , 35 ] . Additionally , there exists a small number of faculty from underrepresented backgrounds and a lack of role mod - els who do not identify as White or Asian males [ 9 , 12 , 22 ] . This in turn causes high attrition rates and low enrollment and retention of women and minority students [ 3 , 4 ] . Interaction refers to how students interact with one another in the classroom . Students do not often work together on projects in computing environments nor are they able to re - ﬂect on learning ( i . e . , making work visible ) with each other because of concerns with academic dishonesty [ 3 , 2 ] . Rather than being measured by the fostering of a " community of learners " [ 42 ] , learning is measured on an individual level and students often miss opportunities to improve collaboration and communication skills [ 45 ] . Evaluation often refers to how students are evaluated . Fac - ulty are responsible for grading assignments , projects , and exams based on a rubric . Course curricula , particularly in introductory courses have a heavy emphasis on programming [ 14 ] . Students are evaluated essentially on how well they can program and build algorithms . An " informal hierarchy " is es - tablished in the classroom as underrepresented students often compare themselves to the higher achieving students in the classroom who tend to have previous programming experience prior to taking the course [ 3 ] . Faculty tend to highlight the achievement of these students often causing more isolation and distinction between who belongs and does not belong in computing [ 3 ] . HCI courses in computing classrooms are not the standard " computing class " , however , this paper high - lights how computing culture has inﬂuence on what computing students expect in a classroom . METHODS Context and Study Population The maker - studio approach was integrated into 6 semesters of classes within a CS department at a large technical institution in the United States . The courses included : two semesters of Human - Computer Interaction , two semesters of Mobile and Ubiquitous Computing , and two semesters of Prototyping Interactive Systems . Human - Computer Interaction ( HCI ) . This course introduced undergraduate students to human - centered computing con - cepts , principles , and techniques . Students were expected to learn a variety of qualitative and quantitative methods for designing , implementing , and evaluating user interfaces . Mobile and Ubiquitous Computing ( MUC ) . This course aimed to provide undergraduate and graduate students with an overview of the foundations and history of mobile computing , the internet of things , context - awareness computing , and novel computing architectures . Prototyping Interactive Systems ( PROTO ) . In this course , grad - uate students learned how to build interactive prototypes through programming , to communicate effectively , and ar - ticulate their design choices within a software team . Study Population Course Semester Class Size Level HCI Fall 2015 68 UGrad MUC Spring 2015 38 UGrad , Grad HCI Fall 2016 69 UGrad PROTO Fall 2016 24 Grad MUC Spring 2017 32 UGrad , Grad PROTO Fall 2017 25 Grad Table 1 . The maker - studio approach was integrated into three HCI - related courses spanning six semesters Previously , these courses were taught similar to how HCI design education is typically taught in computing classrooms . That is , a large portion of class time was devoted to lectures , review of research publications , and demonstrations based 3 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1133 on a formal iterative approach to design . While this lecture - centric model was modiﬁed in these maker - studio versions of the courses , some things remained similar . The HCI and MUC courses assigned several design projects requiring students to engage in group work outside of class , create prototypes , and present semester - long projects to the class at the end of the semester . Students self - selected into groups based upon interest in a project or topic . The PROTO course consisted of a series of individual projects resulting in low - to mid - ﬁdelity prototypes . Courses were held twice a week for 80 minute sessions or three times a week for 50 minutes sessions . Total course enrollment was larger than previous semesters with 30 and 70 students for HCI and MUC and between 20 and 30 for PROTO . These courses enrolled graduate students and 3rd / 4th year undergraduate students primarily majoring in computer science , but also in industrial engineering , elec - trical engineering , computer engineering , and computational communications . For most students , this course was their ﬁrst encounter with a more creative approach to HCI design instruction . The maker - studio approach was integrated fully into the HCI and MUC courses ( semester - long ) and as a supplement to the PROTO course ( 2 weeks - long ) . The implementation occurred for two semesters per course yielding a total of six classes . In total , the study involved three faculty , four teaching assistants , and 256 students over the course of six semesters ( See Table 1 ) . Each semester gave us an opportunity to learn from our mistakes and improve for the next implementation of the study based on the feedback from students and what seemed to be working and needing improvement . The Maker - Studio Approach The maker studio approach comprised of two components : ( a ) six maker modules to experience hands - on learning and gen - erative design practices and ( b ) two studio - based techniques . The development of this approach was based on the research team’s experiences as both instructors and students in HCI and design and art studio courses , observations in studio courses and maker spaces , interviews with makers [ 26 ] , and previ - ous literature on integrating studio - based pedagogy into HCI courses . Six Maker Modules The maker modules were : ( 1 ) rapid manual prototyping , ( 2 ) 2D design and fabrication , ( 3 ) 3D design and fabrication , ( 4 ) wearable technology prototyping , ( 5 ) interactive prototyping with Arduino , and ( 6 ) deconstruction of technology . Each module had three primary characteristics . First , the module introduced a theoretical foundation . Second , the module in - cluded at least one warm - up activity to get students familiar with tools and software . The module concludes with a design challenge that allows students to build on the skills acquired from the theoretical foundation and the warm - up activity . Stu - dents worked in teams of 3 - 5 on the in - class activities for each module . All six modules were integrated in the MUC course . However , only modules 1 - 3 and 6 were integrated in the HCI course and modules 2 - 3 in the PROTO course . Figure 1 . Student group artifacts from the ( a ) rapid manual prototyping and the ( b ) 2D design and fabrication maker modules . Figure 2 . Student group artifacts from the ( c ) 3D design and fabrication and the ( d ) wearable technology prototyping maker modules . Two Studio - Based Techniques The implementation of the maker - studio approach leveraged previous research on project - and problem - based learning [ 37 , 18 , 5 ] , establishing a community of learners [ 42 ] , and two speciﬁc studio - based pedagogical principles of brainstorm - ing and iteration and critique sessions . In prior work , we describe in detail how the project is grounded in project - and problem - based learning [ 11 ] and community of learners [ 45 ] . In this paper , the focus is on the two studio - based learning techniques : ( 1 ) . brainstorming and iteration and ( 2 ) . cri - tique sessions . These two techniques are cornerstones of a studio education and were selected based on meeting criteria of a studio - based learning environment that include iterations , feedback , critiques , and reﬂection [ 30 , 40 , 47 ] . The learning goals of adding studio - based techniques were multi - fold and stemmed from previous ﬁndings that identiﬁed how studio - based techniques encourage students to be more collaborative [ 45 ] , better at identifying and communicating what is good design [ 21 ] , increasing student ownership of projects [ 40 , 45 ] , and improving their creativity by leveraging generative meth - ods and encouraging many parallel design directions [ 16 ] . Brainstorming and Iteration . In brainstorming and iteration activities , students learned that the generation of many ideas that are then culled , expanded , and combined can help them ﬁnd the appropriate avenue for exploration . These types of brainstorming and iteration practice are often part of a design 4 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1134 studio pedagogy but less frequently integrated into HCI classes taught in computing departments [ 48 ] . For the maker - studio approach , instructors led several brain - storming activities during the courses and were clear about the learning goals and beneﬁts of generative methods and parallel design directions . For example , in one activity students were asked to develop 100 ideas for a design problem , while ignor - ing technical ability and constraints , to work with a partner to reﬁne their ideas , and share with the class their best or most outrageous ideas . This provided students with the freedom to think outside of expectations for functional design . Other design activities focused on exploratory practices . For example , the rapid manual prototyping activity inspired by Frens’ dissertation work on Rich Interaction Design [ 20 ] , was designed to teach exploratory practices . The problem space was situated around creating a lamp that responded to emo - tions . The goals were ( a ) to move students to think beyond interactions , such as pushing a labeled button [ 20 ] , and ( b ) to think about inputs that could detect less intentional actions and outputs that would produce unexpected results . Students were encouraged to use similar brainstorming and exploratory tech - niques to start all of their design activities and encouraged to use these techniques in conjunction with the " double diamond " approach to iteration [ 33 ] , often used in HCI courses . Critique Sessions . For design and art studio majors , critiquing is a skill they begin developing in entry - level courses . Typi - cally critiques take several formats in studio courses , ranging from formal presentations at key points in a semester with both students and instructors giving feedback , to informal pin - ups where students post working ideas to a board and the instruc - tors lead the class in discussing them , to casual one - on - one interactions between students or a student and instructor . By participating in critique sessions , students learn to critically reﬂect on their own work and that of others . These skills are essential for good design practices and identifying and articulating what is good design . Prior to the maker - studio approach , the three HCI courses had mid - term and / or ﬁnal presentations by each project team , where the instructor and a few members of the class may have offered suggestions or criticisms of the work . In the new version of the courses , critiques were more frequent and included pin - up type presentations , more casual critiques , and the end of the semester presentations . In most critiques , in - vited expert guests , TAs , and other students were included , asking questions that would encourage reﬂection on design choices , process for conceptualizing , and other perspectives or directions that the work might take . Studio design courses are often small and meet for longer blocks of time than CS courses . Instructors found conducting critiques with 60 - 80 students in 50 - 80 minute class periods challenging . Over two semesters , instructors iterated conﬁgu - rations until ﬁnding a " round robin " style pin - up presentation . In the round robin , half of the student groups’ sketches or low - ﬁdelity prototypes were pinned up around the room . Student teams stayed with their pin - ups while the other half of the class , in small groups of 8 - 10 ( led by the instructor , guests , or TAs ) , walked around the room visiting each pin - up . The presentations were short with more time for questions and feedback to encourage reﬂective practice . Instructors also iterated on tools to help scaffold the students’ ability to critique . Initially they provided no scaffolds for students to learn critique techniques , which resulted primarily in the instructors speaking . The instructors modiﬁed this by providing worksheets that asked students to write something ; they liked about the project , that could be improved upon , and the presenter should consider . Students turned these in at the end of class . The instructors continued to modify the critique scaffolds to encourage students to engage with classmates and eventually landed on handing out cards that had one of the three phrases . Research Methods The full study of these studio - based approaches included over 100 hours of observations , student evaluations , and interviews with students and the teaching team . In this paper , we report on semi - structured interviews with 44 students over the course of the six semesters . Students were offered extra credit to participate in the interviews and had alternative options for extra credit . Participants represented a range of high and low performing students . We interviewed equally students who identify as male or female and found no patterns of differences in their responses . Interviews lasted between 30 minutes and one hour . All names in the paper are pseudonyms . The inter - views were conducted by a few researchers including authors 4 and 6 . The students were aware that the researchers were not involved with grading and that all observations and interviews were conducted in accordance to a research protocol approved by our Institutional Review Board . Authors of the paper were both insiders and outsiders to the design and implementation of the project . Authors 4 , 5 and 6 were involved in the design implementation , helping in cri - tiques , and teaching the course with author 5 as the instructor of record for 3 courses . Author 1 conducted analysis of the interviews after the project was completed and authors 2 , and 3 were external evaluators on the project . Observations and instructor interviews were secondary in this analysis , but were used to help illuminate aspects that emerged from the student interviews . Participant observations were made by authors 4 and 6 as they were involved in instruction and critiques for approximately half of the classes . They recorded the observations by writing notes each day after class . Observations and instructor interviews were conducted by authors 2 and 3 , the outside evaluators , who observed the HCI and MUC classes 2 - 3 times each semester . The team met bi - weekly through out the study to discuss the observations and patterns that emerged . Authors 1 , 2 , and 3 were external to the implementation of the project and led the analysis and interviews with instructors . These three researchers independently read through the data to develop structural codes , content - based or conceptual phrases , representing the topic of discussion and then created a code book to code the remaining interviews . They then indepen - dently read through and coded the all of the interviews based 5 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1135 on this code book . Next , the researchers met to compare and discuss their codes and then returned to the data to reanalyze the data separately . Next , codes were independently synthe - sized to form high - level themes by Author 1 and Author 2 . The analysis was validated by the three authors who were involved in the instruction who added information from their observations to help clarify when needed . As noted earlier , this analysis is part of a larger project in - formed by our previous work . We highlight the prevalence of tensions between students’ expectations of classroom norms and their experience with these studio - based techniques . The analysis identiﬁed tensions that ﬁt broadly under two cate - gories : institutional tensions and cultural tensions . Though this analysis touches upon institutional tensions , the focus is on cultural tensions . Speciﬁcally , the ﬁndings that fall under this category are organized around three themes : tensions with evaluation expectations , tensions with interaction expectations , and tensions with in - class activity expectations . FINDINGS In prior work , we reported on a number of positive outcomes observed in the studio - based learning environment , such as students seeking out and offered help more frequently because they could see each others’ progress during hands - on activities , the frequent group work encouraged students to learn with each other , and the visual and more open nature of the learning community resulted in a frequent exchange of design ideas and inspiration [ 45 ] . A review of the student evaluations of the courses supported this ﬁnding . For instance , in the MUC and HCI courses , the interpolated median score was at least an 80 % for how well students felt the course assignments fa - cilitated learning and the course met objectives . Instructors indicated that students improved their level of design capabil - ity and design awareness of tangible " everyday things " [ 36 ] . However , for most students , this was their introduction to studio - based learning techniques , such as critique sessions and more open - ended design objectives and there were a num - ber of institutional and cultural tensions . While the analysis presented here focuses on the cultural tensions , we begin by re - viewing institutional challenges because they intertwine with the cultural issues of integrating a studio - based pedagogy in a computing classroom . Institutional Tensions Similar to previous work by Bliven [ 7 ] and Cochran [ 11 ] , some of the challenges identiﬁed were institutional in nature ; meaning that the size , timing , and location of the courses made implementing a studio - based approach difﬁcult for students and instructors . The most commonly cited challenge was centered around the lack of time for critique sessions , maker activities , ﬁnal project , brainstorming and iteration activities . Traditional studio courses are 3 - hour blocks or longer . The computing department did not have the ﬂexibility to offer any other classes except short class blocks of 50 to 80 minutes ; this meant less one - on - one instruction and much of the class period being taken up by distributing and cleaning up hands - on material . Time also was a constraint because of the number of students . Booming enrollment in computing dramatically impacted the courses . HCI course enrollment was expected to top out at 40 , which would have been difﬁcult , but with classes of 60 + students , instructors ( as outlined in the methods section ) spent a great deal of time creating structures that allowed for critiques and greater one - on - one feedback . Finally , because the computing department does not have dedicated space , students could not store projects or tools and instructors carried large amounts of supplies to and from class each day . Cultural Tensions Intertwined with institutional tensions were cultural tensions where the studio - based pedagogy was in conﬂict with the class - room culture that most students were accustomed to . While some students appreciated this change , many students were made uncomfortable by critiques , unclear grading expecta - tions , and new work practices . Our analysis showed that while students beneﬁted from a studio - based approach , they strug - gled to see value in many of the practices they were introduced and were frustrated by others . In this section , we present key ﬁndings from the studio techniques that both supported and hindered student creativity , motivation and engagement within the learning environments . Tensions with Evaluation Expectations Studio - based pedagogy was often met with frustration from our students because the grading system was unlike that of pre - vious CS courses . This was particularly seen in a discomfort with the critique process . Critiques as Mechanism for Grading . While critiques are used in a traditional studio pedagogy to help students enhance their design creative process , consider multiple perspectives , and to reﬂect on what is good design , few students in these computing courses saw those advantages . During the initial introduction to the critiques , the instructors told students that the process was not about right or wrong answers , but was an opportunity to reﬂect on their design choices , learn from others work , and spark new ideas . However , instructors did not repeat these objectives regularly throughout the class . Many students ex - pressed that they interpreted the critique sessions as a grading mechanism only . They found little value in learning from critiques beyond getting feedback to improve their project to receive a better grade . This resulted in students dismissing critiques from those other than the instructor : " So , they had good feedback in general of their opinion of the thing , but they didn’t have as much critique as far as how it relates to the project , which can be good and bad because it’s a different point of view . But it’s not necessarily as helpful if you’re going for the grade . " ( Salem , MUC’16 ) . Participating In Others Critiques . A signiﬁcant goal of cri - tiques is for students to learn about how to look at others designs and to help them develop a sense of what good de - sign is based on seeing and talking about a variety of work . While most students’ feedback on critiques was about their experience presenting , a few students described learning from other teams’ critique sessions . However rather than focus on the design and learning process , the focus remained on how this helped them achieve better grades : " I like the fact that we didn’t go ﬁrst a lot of the time because we could see everyone else’s and kind of get a feel for what is a good project , what is 6 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1136 not such a good project , like what do we have to do . That was really helpful . It was kind of grading ourselves before he gave us an actual grade . " ( Suri , HCI’16 ) . Instructors worried that the forms used in the early iteration of the critique were a distraction , and the student interviews supported that observation , " I would have preferred to have actually be able to listen to what people were saying instead of worrying about getting a critique form ﬁlled out . " ( Jian , HCI’15 ) . We also noted that students often interpreted the purpose of the critiques as a way to take attendance or earn class participation points : " I know it was more for attendance , making people speak . Some people were probably like , " Okay , I can come here . I already got my attendance . I can just listen and zone out . " ( Skyer , HCI’15 ) . In later iterations , students were given one of three cards to read . The cards were playful and disrupted the way that CS classrooms often operate , where a few students dominate and even intimidate the class [ 3 ] . In observations , we saw that frequently the most talkative students would notice that others still had cards in their hand , and hold off their comments until everyone had a chance to talk . Instructors eventual felt that students had internalized the questions and the cards were no longer needed . In these later iterations , students no longer mentioned that participating in other teams critiques was used for attendance or affecting their class participation grades . Stress from Critique Process . Computing students have more experience with asynchronous feedback and with opportunities to prepare for formal presentations , rather than many small in - formal critique sessions over the course of the semester . While some students expressed that they valued what they learned from critiques , when asked about their overall feelings about the critique sessions , participants often used negative adjec - tives such as “intense” or “uncomfortable” in their descriptions of the technique . “So , I think that was a bit overwhelming , and most of the time I felt unprepared with the critiques . . . But I think it was great for sparking ideas . ” ( Jaziah , HCI’16 ) . Many felt the negative criticism wasn’t helpful , and they were unsure if students’ , teaching assistants’ or guests’ insights helped them . For example one older student described his experience : " I’m a little older so maybe that’s why I was able to brush it off . But they were brutal to me . But I deserve it . . . I should have prepared in a way that was more concise . . . It was a disaster . The feedback was about 50 % helpful . . . But what I found across the board was that anybody who had negative feedback wasn’t very helpful . " ( Lennon , HCI’15 ) . Tensions with Interaction Expectations Computing students are accustom to working individually and receiving feedback from instructors or graders . Within the studio - based learning environments , students frequently collaborated with other students and received feedback from instructors , expert guests , TAs , and other students . Receiv - ing multiple perspectives and working collaboratively with students often frustrated students and hindered learning . Multiple Perspectives . Receiving various , and sometimes con - ﬂicting feedback from multiple people , often resulted in stu - dents doubting their abilities to make design decisions . While some students struggled with making a decision all together , other students tried to incorporate all of the feedback . " I think one of the problems we might have had was changing it too quickly and not really seeing if everyone else felt the same way . . . and try to accommodate everything in a new prototype or something . . . I think that may have hurt us , because we kept trying to iterate on everyone’s feedback . " ( Jaziah HCI’16 ) . The multiple perspectives they received in critiques also made students uncomfortable , and even angry , because they interpreted feedback from others as dampening their cre - ativity rather than encouraging reﬂection on their design choices . " When you’re dealing with design criteria and stuff like that and the creative process , you can’t really have a structured approach as the TAs and the professor have . Their structured approach isn’t systematic . They’re not all on the same shit . . . They all kind of have a , I don’t know , a superiority complex about what they think is the absolute best . They are the design kings . . . I just think that it’s been kind of disrup - tive for the creative process having opposing feedback from different people . " ( Oakley HCI’15 ) . Public Work and Comparisons . The critiques and hands - on activities , as reported in a previous study [ 45 ] , increased the visibility of students work and helped students identify when they needed seek help or offer assistance to other students they saw struggling . However , this increase in visibility also resulted in students comparing themselves to other students and , in a number of cases , disparaging or patronizing other students , particularly those who came from non - computing majors . Anuj in HCI’15 compared himself to the members in his group : " I feel like I was usually helping people . Especially the Industrial Engineers because they weren’t used to it . . . It’s been interesting working with other majors because sometimes it feels like they focus on the wrong thing . Not to stereotype them , but they feel very type - A and we feel very type - B . They like to delegate a lot , and we [ CS majors ] just like to work . " This type of competitive practice echos ﬁndings from tradi - tional computing classrooms , and while the more open and transparent nature of the student work had advantages , it also may encourage competitive elements that discourage some students or give others a false conﬁdence in their ability - thus not striving to push themselves to learn . Student Collaboration . Generally hands - on activities helped increase collaboration amongst the students . Students actively sought out help for prototyping with the Arduino because they could easily see they were not as skilled as their classmates . Students helping each other learn was something we often observed during the maker activities , as one student told us , " I guess for one of the activities when half the class couldn’t ﬁgure it out , the other half would just get up and help them . " ( Jael , MUC’15 ) . The student teams were often heterogeneous , consisting of student from different majors , ability level , gen - der , sex , race and ethnicity . Participants worked in groups of four or ﬁve for all the HCI and MUC maker activities and for the ﬁnal project . We observed this diversity of perspectives was beneﬁcial for some groups , sparking innovative ideas and creativity . However , this diversity also was frustrating for many students . 7 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1137 For some students , an imbalance in work came from the dif - fering ability . If students realized that members of their team were not experts in the maker activities , they often opted to take on the bulk of the work themselves . Sidney ( HCI’15 ) mentioned how he volunteered to do most of the work during the 3D printing prototyping activity because none of his team members had any experience with digital fabrication tools . This division of labor was also created because students did not see how a team could contribute equally to the project - based maker activities . The diverse skills and imbalance in the work hindered learning because participants did not practice the various skills being taught . This meant that some students gained experience or developed design skills , while others observed them or served as the project manager . One student described her role as the " glue " of the group , " So , I make sure everything happens and each person knows what they’re doing . . . Usually I’m the one who has to be like , ’Okay . Here’s a reminder . This is due so - and - so day . Let’s start working on this part . Can you do this , and this , and this ? ’ " ( Ryley , HCI’16 ) . When asked why she did not contribute to other aspects she said : " I think it does have to do a lot with the strengths . . . I was like , ’Okay , I can write as much as you want me to , but don’t make me cut foam core because it’s not going to end up looking like a ﬂowerpot type of thing . ’ " Ryley was typical of many students who did not push themselves to learn new skills . Tensions with In - Class Activity Expectations Computing students often work on solo project that are fully screen based . Whereas in studio - based environments , engag - ing in the creation of tangible physical artifacts is considered common practice . Physical Artifacts . Many students expressed pride in the phys - ical artifacts they made or told us they sparked " creative " or " innovative " ideas . One student mentioned how she pur - chased her own Arduino kit based on the one that was used in class and described her plan for designing a do - it - yourself " disco - light " project at home ( Bobby , MUC’15 ) . For many students this was their ﬁrst experience working with digital fabrication tools or designing tangible objects so the maker activities had them thinking of ideas that seemed futuristic at the time such as " computational skins . " As one student said , " It’s the ﬁrst time I’ve actually had to think about technology that doesn’t even exist now . So , it’s kind of hard to wrap your mind around that . I know our group had a lot of trouble with that . " ( Nikita , HCI’16 ) . This type of response was evidence that students were able to think beyond designing buttons for interaction design [ 20 ] but also indicated that students were at times frustrated with the challenge . Students reported other frustrations with making physical arti - facts . When asked about their overall satisfaction with their ﬁnal projects , many participants mentioned they would have made it look more aesthetically pleasing if they had more time . Due to lack of time and of proper training , many students defaulted to making things that was just enough for them to pass the class : " We kind of had ambitious goals for the lamp that we had to , like , scale down because of the time . " ( Yael , MUC’2016 ) . Students didn’t feel supported in meeting the ambitious goals that they set for themselves with the resources and knowledge that the courses offered them . Many hands - on activities did not seem useful to students because they found them difﬁcult to master and a ﬁnal deliverable difﬁcult to produce . " It seemed irrelevant to an interface class . if your building technology you’re not always building a wearable or a phone . This class was supposed to be more about the interface . I felt like it was cool , but the for the deliverable nobody had an actual physical prototype because it would be really difﬁcult to do something like that . " ( Justice , HCI’15 ) . While these students , at times , enjoyed hands - on activities , and indicated making physical artifacts increased their creativity , they did not experience the feeling of ownership that often mo - tivates integration of maker activities and studio - based work in non - studio classrooms [ 38 , 47 , 40 ] . Findings indicated that a lack of ownership might be based on a focus on grades through " deliverables " and a lack of support for skill develop - ment needed for the physical prototyping . Balancing Skill Development with Exposure . Hands - on maker activities were a way to integrate visible design activities into a computing classroom . Many participants described how these hands - on activities enhanced the learning environment , thus making it more engaging than traditional computing classes : " lecture would have been boring if there had not been these activities . " ( Charlie , HCI’15 ) . However , students did not see equal value to the various skills that were presented and often felt like some skills that were taught were a " waste of time . " For some students computational elements , such as the Ar - duino maker module , were valuable but non - computational elements , such as 2D design and fabrication ( see Figure 1b ) or 3D fabrication and design ( see Figure 2c ) , were not . Others wanted instruction time spent on the 3D fabrication and design module so that their groups would have been more prepared for the ﬁnal project : " I thought the in - class activities , they hon - estly felt , like , really out of the blue , especially the Arduino . . . We were kind of playing around with the idea of making a 3D model . So , I feel like more time could have been spent with that particular activity . " ( Kei , HCI’16 ) . Another student describes how not having the proper train - ing during the Wearable Technology module ( see Figure 2d ) , made it difﬁcult for her group to fully realize the vest that they wanted to design . " So , I think like Clint’s ( a visiting instructor ) sewing demonstration was kind of useful . But there was no hands - on activity with that . Then we learned about all of the conductive velcro and everything like that on the ﬂy . Then when it came to the end when we were actually putting the vest together , it was like we thought we could use conductive thread for the Arduino , but then we couldn’t because it wasn’t strong enough . " ( Jadyn , MUC’15 ) The broad range of phys - ical prototyping activities were intended to give students an opportunity to explore different aspects of design . The quotes above represent ways that students did not see value in the range of activities and would have preferred those activities directly address skills for their particular project . Unfamiliarity with Creative Practices . The brainstorming and iterative components integrated into the class were generally well received . For the brainstorming and iteration technique , 8 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1138 the goal was for students to go through a process of conver - gence and divergence of ideas . Participants found these tech - nique to be " useful " , especially for coming up with many ideas and that it " helped with giving guidelines with what is appro - priate and good practices for brainstorming . " ( Royal , HCI’15 ) . A number of participants mentioned that the class sparked start - up business ideas , with some speciﬁcally mentioning the brainstorming activities . However , brainstorming and iterative practices were also met with student frustrations . We observed that students lacked knowledge about how and when to apply these techniques to their own project . Findings reveal that many student groups did not iterate on ideas and instead would just " pick [ their ] favorites " . As one Participant describes her group’s brain - storming session : " I don’t think we built on each other’s ideas very much . We just kept throwing them out until someone had one that we were all like , ’Whoa ! That was really good ! ’ Then we did that one . " ( Suri , HCI’16 ) . Many participants did not describe a design process of brainstorming together as a group and iterating on their ideas . Rather , students would brainstorm ideas individually , share with the group , and then select an idea . Royal , a student in HCI’15 , mentioned the " back and forth confusion " her group experienced while brainstorming and iterating ideas because no one kept a record of the ideas that everyone came up with during the in - class activities . It was observed that often with brainstorming and iteration activities , one student would dominate the design decisions for the group rather than work through the collaborative creative processes outlined in class . Students’ that reported that their groups did not work well together , often also reported that one person spearheaded the design . DISCUSSION Previous research would suggest that students in computing programs expect courses to focus on abstract concepts and opportunities to demonstrate this knowledge through concrete problem sets . This focus has often resulted in a defensive cli - mate [ 3 ] , where there is little open dialogue amongst students and little room for creative exploration . Instead , students and faculty are focused on a right or wrong answer , grading , and a small number of students , who often dominate discussions , make other students feel out of place or less qualiﬁed . While this is problematic for all computing courses , it is particularly counter to learning goals where exploration and reﬂective practices are critical . Previous literature highlighted the poten - tial of studio - based pedagogy . However , this long - term study within a computing department , across several HCI courses , identiﬁed many challenges with implementing studio - based pedagogy in the culture of computing education . We found while some students ﬂourished , others were often confused as to the value of open dialogue in the classroom and what creative exploration might entail . In this discussion of tensions between studio - based learning goals and the culture of computing classrooms we speciﬁcally , seek to discuss how the ﬁndings address the initial research questions : How does integrating studio - based learning ( SBL ) into computing curricula inﬂuence : ( R1 ) the creative practices of students ? and ( R2 ) student motivation and engagement ? Based upon this discussion we take up a set of design consid - erations for future implementations of studio - based design in HCI classrooms . SBL techniques inﬂuence creative practices One intention of integrating critique sessions was to develop students’ creative practices . Most design , visual arts , creative writing , or performing arts students would readily agree that the critique practices are harsh , uncomfortable and stressful , and yet , they would also see them as valuable in improving their creative process [ 1 , 15 ] . The student interviews expressed similar challenges , however they lacked and understanding of the value critiques could bring . While instructors gave ini - tial guidance on critiques , it is clear this did not adequately scaffold students’ use of critiques to beneﬁt their creative de - sign practice . The important reﬂective practices that critiques should prompt [ 43 ] , were less likely to occur when students were focused on getting things " right " to earn a grade rather than learning to question their choices and view their design from different perspectives . Often students changed their de - signs to please others , rather than learning to critically evaluate multiple perspectives in their design choices . Learning to be more creative with design , requires an ability to think critically and talk about design beyond reﬂection of ones’ own work . However , it was not clear to students why they were asked to contribute to critiques and students , at ﬁrst , thought that the critique practice was for attendance and class participation points . The change in strategy for prompting critiques , moving from written forms to the more playful cards that eventually fell away from scaffolding the experience , is one example of how careful instruction can positively shape the creative experience . While students enjoyed some creative practices taught , it was clear that most teams had difﬁculty implementing this outside of a structured in - class activity . Integrating creative prac - tices with teams is difﬁcult , and perhaps more - so , with young people trained in computing , where efﬁciency rather than ex - ploration is rewarded . Their group work suffered as well , when one student spearheaded all creative choices or students engaged in a divide and conquer approach that encouraged competitive and defensive behavior rather than creative collab - oration . Students felt that the physical artifacts , encouraged creativity and made them think about " technology that doesn’t even exist . " However , the lack of time on learning the physical skills , hampered student ability to create what they wanted , instead of often opting to create what was easiest and dampening student creativity . Integrating studio - based learning into computing curricula fell short in improving the creative practice of students . These ﬁndings indicate that HCI courses can not simply add studio - based learning techniques to the curricula because the majority of students have little experience with these techniques that do not ﬁt in with the traditions of the computing culture they are comfortable with . If we desire to improve the creative practices in computing courses , instructors will need to de - 9 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1139 velop methods to help students leverage the creative beneﬁts of critiques and brainstorming and iterative practices . SBL techniques inﬂuence on motivation and engagement Many of the studies that have reported on implementing studio - based learning , claim that the sense of ownership that students feel is greater , improving their motivation and engagement [ 40 , 45 ] . While our ﬁndings supported this sense of owner - ship among some students , there were challenges to this sense of ownership among other students . Similar to its impact on creativity , a lack of skill development discouraged owner - ship . If students realized that they could not make what they wanted , they gave up and made what was easiest to ﬁt class requirement . In addition , the dysfunction of a group contributed to a lack of ownership and motivation . When one student was spearhead - ing all creative choices , the rest of the team felt less invested and motivated to learn . When the team set a course to di - vide and conquer , things were often unevenly distributed , thus frustrating team members . While these ﬁndings on group dynamics could be applied to many group organized class ac - tivities , if we are seeking to encourage ownership of creative work in HCI courses , studio - based learning needs to scaffold team work that goes beyond completing a project , but also helps students contribute in a way they ﬁnd meaningful . This would include structures to help groups organize their creative process and time and motivation for teams to build the skill level of all members . Considerations for Studio - Based Computing Classrooms While the implementation of studio - based learning had a num - ber of positive outcomes for the participants , there were sig - niﬁcant tensions . Students , who were trained in the culture of computing classroom , were uncomfortable and studio - based practices were not always leveraged to improve their learning , creative development , and motivation and engagement . We see a number of areas for improvement focused on critiques , creative practices , and skill development . Provide Critique Scaffolds for Students and Instructors Of the changes made to the classroom structure , the critiques received the most negative feedback . While instructors gave initial instruction on the critiques , it will be critical in future iterations , that instructors give this instruction multiple times , in verbal and written form . There are also opportunities for modeling the behavior for how critiques could be helpful , showing students how both receiving , giving , and listening to critiques can improve their ability to design and think about design . Computing instructors may need to seek out coaching for studio - based learning to develop these skills . Two of the practices described in methods section , that were developed for critiques were successful . The practice of using cards asking for a comment about something you like , something that could be improved , or something that should be considered were effective scaffolds to teach students how to interact during critiques and balance the people who spoke . Additionally , the use of the round robin style pin - up presentation allowed for teams to receive , give , and observe rapid informal critiques of a wide range of projects in large classes . Incorporate Team - Building Skills into Creative Practices While students appreciated the brainstorming and iterative design activities , they had a difﬁcult time applying this to their group projects . In future implementations of studio - based learning , a set of team building skills for creative work could be incorporated . This should provide students with structures for the double - diamond approach to design , helping teams work on generating a wide range of design ideas , converging on one or two ideas , pushing those ideas to pursue multiple design directions at once , and ﬁnally converging on a ﬁnal project design . Narrow Down Skill Development Objectives One of the most challenging aspects of the course , felt by stu - dents and instructors , was a lack of time for skill development . In future iterations , we suggest keeping a wide range of hands - on activities in the class , but narrowing the skills that could be used in the ﬁnal project . This would allow for students to gain exposure and hopefully , inspiration , to continue learning the wide range of prototyping skills . Additionally , it will allow instructors to focus on developing a narrow set of skills so students can realize their projects with craftsmanship . While this is not a comprehensive list of considerations for new studio - based learning in HCI , these are promising di - rections for the development of students’ creative practices , engagement and motivation . Transferring These Findings Our ﬁndings span six semesters across three distinct courses . Thus there exists a limit to the transferability of our ﬁndings . The sample size ( 44 ) accounts for approximately 20 percent of the students , and while responses indicated saturation of perspective , because the courses were modiﬁed each semester , some elements , such as frustration with the rubric and lack of scaffolding for critiques were addressed over time . Some challenges identiﬁed will be more transferable in larger institutions that have large classes , little ﬂexibility with sched - ules , and access to maker spaces on campus . However , ﬁnd - ings that studio - based learning conﬂicted with the norms of computing classroom cultural will likely be found in most in - stitutes of higher education . If we hope to encourage creativity and ownership among computing students , we need to do more than add studio - based approaches , but to also actively work to change their expectations and participation in the classroom . CONCLUSION This study offers an example of how moving towards studio - based learning in HCI can be both productive and challeng - ing . The ﬁndings supported previous research that suggests that studio - based adaptations to learning is a promising ap - proach for HCI design education . However , the frustrations and challenges to learning that emerged in the classroom , due to students expectations of computing classrooms , should be considered and factored in when designing , implementing , and evaluating these studio - based approaches for HCI . ACKNOWLEDGEMENTS We would like to thank the students , teaching team , and DIS re - viewers . This work was funded by NSF DUE award 1431984 . 10 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1140 REFERENCES [ 1 ] Kathryn H Anthony . 1991 . Design juries on trial : The renaissance of the design studio . Van Nostrand Reinhold . [ 2 ] Lecia J Barker and Kathy Garvin - Doxas . 2004 . Making visible the behaviors that inﬂuence learning environment : A qualitative exploration of computer science classrooms . Computer Science Education 14 , 2 ( 2004 ) , 119 – 145 . [ 3 ] Lecia Jane Barker , Kathy Garvin - Doxas , and Michele Jackson . 2002 . Defensive climate in the computer science classroom . ACM SIGCSE Bulletin 34 , 1 ( 2002 ) , 43 – 47 . [ 4 ] Lecia J Barker , Kathy Garvin - Doxas , and Eric Roberts . 2005 . What can computer science learn from a ﬁne arts approach to teaching ? ACM SIGCSE Bulletin 37 , 1 ( 2005 ) , 421 – 425 . [ 5 ] Brigid JS Barron , Daniel L Schwartz , Nancy J Vye , Allison Moore , Anthony Petrosino , Linda Zech , and John D Bransford . 1998 . Doing with understanding : Lessons from research on problem - and project - based learning . Journal of the learning sciences 7 , 3 - 4 ( 1998 ) , 271 – 311 . [ 6 ] Eli Blevis . 2010 . Design challenge based learning ( DCBL ) and sustainable pedagogical practice . interactions 17 , 3 ( 2010 ) , 64 – 69 . [ 7 ] Eli Blevis , Yvonne Rogers , Martin Siegel , William Hazlewood , and Amanda Stephano . 2004 . Integrating HCI and design : HCI / d at IUB , a design education case story . In Zimmerman , J . , Evenson , S . , Baumann , K . , & Purgathofer , P . Workshop on the relationship between design and HCI . ACM CHI 2004 conference on Human factors and computing systems . Vienna , Austria . http : / / k2 . iguw . tuwien . ac . at , Vol . 8080 . [ 8 ] Leah Buechley , Mike Eisenberg , Jaime Catchen , and Ali Crockett . 2008 . The LilyPad Arduino : using computational textiles to investigate engagement , aesthetics , and diversity in computer science education . In Proceedings of the SIGCHI conference on Human factors in computing systems . ACM , 423 – 432 . [ 9 ] Graham Button and Wes Sharrock . 1996 . Project work : the organisation of collaborative design and development in software engineering . Computer Supported Cooperative Work ( CSCW ) 5 , 4 ( 1996 ) , 369 – 386 . [ 10 ] Katherine Cennamo , Sarah A Douglas , Mitzi Vernon , Carol Brandt , Brigitte Scott , Yolanda Reimer , and Margarita McGrath . 2011 . Promoting creativity in the computer science design studio . In Proceedings of the 42nd ACM technical symposium on Computer science education . ACM , 649 – 654 . [ 11 ] Zane Cochran and Betsy DiSalvo . 2016 . Exploring traditional and workbench - style kits to support project - and problem - based learning . In 2016 IEEE Frontiers in Education Conference ( FIE ) . IEEE , 1 – 7 . [ 12 ] J McGrath Cohoon . 2002 . Recruiting and retaining women in undergraduate computing majors . ACM SIGCSE Bulletin 34 , 2 ( 2002 ) , 48 – 52 . [ 13 ] Alma Leora Culén , Henry Mainsah , and Sisse Finken . 2014 . Design practice in human computer interaction design education . ( 2014 ) . [ 14 ] Computing Curricula . 2001 . Computer Science , Final Report , The Joint Task Force on Computing Curricula . IEEE Computer Society and Association for Computing Machinery , IEEE Computer Society ( 2001 ) . [ 15 ] Meredith Davis . 2017 . Teaching Design . Allworth Press . [ 16 ] Steven P Dow , Alana Glassco , Jonathan Kass , Melissa Schwarz , Daniel L Schwartz , and Scott R Klemmer . 2010 . Parallel prototyping leads to better design results , more divergence , and increased self - efﬁcacy . ACM Transactions on Computer - Human Interaction ( TOCHI ) 17 , 4 ( 2010 ) , 18 . [ 17 ] Daniel Fallman . 2003 . Design - oriented Human - computer Interaction . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( CHI ’03 ) . ACM , New York , NY , USA , 225 – 232 . DOI : http : / / dx . doi . org / 10 . 1145 / 642611 . 642652 [ 18 ] Ning Fang . 2012 . Improving engineering students’ technical and professional skills through project - based active and collaborative learning . International Journal of Engineering Education 28 , 1 ( 2012 ) , 26 – 36 . [ 19 ] Allan Fisher and Jane Margolis . 2002 . Unlocking the clubhouse : the Carnegie Mellon experience . ACM SIGCSE Bulletin 34 , 2 ( 2002 ) , 79 – 83 . [ 20 ] Johannes Willem Frens . 2006 . Designing for rich interaction : Integrating form , interaction , and function . In conference ; 3rd symposium of design research ; 2006 - 11 - 17 ; 2006 - 11 - 18 . Swiss Design Network , 91 – 106 . [ 21 ] Colin M Gray . 2013 . Informal peer critique and the negotiation of habitus in a design studio . Art , Design & Communication in Higher Education 12 , 2 ( 2013 ) , 195 – 209 . [ 22 ] Susan M Haller and Timothy V Fossum . 1998 . Retaining women in CS with accessible role models . ACM SIGCSE Bulletin 30 , 1 ( 1998 ) , 73 – 76 . [ 23 ] Sabrina Hauser , Audrey Desjardins , and Ron Wakkary . 2013 . Design activism in the HCI classroom . In CHI’13 Extended Abstracts on Human Factors in Computing Systems . ACM , 2119 – 2128 . [ 24 ] Dean Hendrix , Lakshman Myneni , Hari Narayanan , and Margaret Ross . 2010 . Implementing studio - based learning in CS2 . In Proceedings of the 41st ACM technical symposium on Computer science education . ACM , 505 – 509 . 11 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1141 [ 25 ] Christopher D Hundhausen , Dana Fairbrother , and Marian Petre . 2012 . An empirical study of the â ˘AIJprototype walkthroughâ ˘A ˙ I : a studio - based activity for HCI education . ACM Transactions on Computer - Human Interaction ( TOCHI ) 19 , 4 ( 2012 ) , 26 . [ 26 ] Parisa Roshan Khanapour , Kayla DesPortes , Zane Cochran , and Betsy DiSalvo . 2017 . Framing makerspace communities . In Proceedings of the 7th annual conference on creativity and fabrication in education . 1 – 4 . [ 27 ] Helen Klebesadel and Lisa Kornetsky . 2009 . Critique as signature pedagogy in the arts . Exploring signature pedagogies : Approaches to teaching disciplinary habits of mind ( 2009 ) , 99 – 120 . [ 28 ] Brandin Knowles , Lynne Blair , Paul Coulton , and Mark Lochrie . 2014 . Rethinking plan A for sustainable HCI . ( 2014 ) . [ 29 ] Jes A Koepﬂer , Luke Stark , Paul Dourish , Phoebe Sengers , and Katie Shilton . 2014 . Values & design in HCI education . In CHI’14 Extended Abstracts on Human Factors in Computing Systems . ACM , 127 – 130 . [ 30 ] Panayiotis Koutsabasis and Spyros Vosinakis . 2012 . Rethinking HCI education for design : problem - based learning and virtual worlds at an HCI design studio . International Journal of Human - Computer Interaction 28 , 8 ( 2012 ) , 485 – 499 . [ 31 ] Panayiotis Koutsabasis , Spyros Vosinakis , Modestos Stavrakis , and Panagiotis Kyriakoulakos . 2018 . Teaching HCI with a studio approach : lessons learnt . In Proceedings of the 22nd Pan - Hellenic Conference on Informatics . ACM , 282 – 287 . [ 32 ] Jonathan Lazar . 2011 . Using community - based service projects to enhance undergraduate HCI education : 10 years of experience . In CHI’11 Extended Abstracts on Human Factors in Computing Systems . ACM , 581 – 588 . [ 33 ] Y - C Liu , Amaresh Chakrabarti , and T Bligh . 2003 . Towards an â ˘AŸidealâ ˘A´Zapproach for concept generation . Design studies 24 , 4 ( 2003 ) , 341 – 355 . [ 34 ] Jonas Löwgren . 1995 . Applying Design Methodology to Software Development . In Proceedings of the 1st Conference on Designing Interactive Systems : Processes , Practices , Methods , & Techniques ( DIS ’95 ) . ACM , New York , NY , USA , 87 – 95 . DOI : http : / / dx . doi . org / 10 . 1145 / 225434 . 225444 [ 35 ] Jane Margolis and Allan Fisher . 2002 . Unlocking the clubhouse : Women in computing . MIT press . [ 36 ] Don Norman . 2013 . The design of everyday things : Revised and expanded edition . Constellation . [ 37 ] Michael J Oâ ˘A´ZGrady . 2012 . Practical problem - based learning in computing education . ACM Transactions on Computing Education ( TOCE ) 12 , 3 ( 2012 ) , 10 . [ 38 ] Soﬁa Papavlasopoulou , Michail N Giannakos , and Letizia Jaccheri . 2017 . Empirical studies on the Maker Movement , a promising approach to learning : A literature review . Entertainment Computing 18 ( 2017 ) , 57 – 78 . [ 39 ] Christine Percy . 2004 . Critical absence versus critical engagement . Problematics of the crit in design learning and teaching . Art , Design & Communication in Higher Education 2 , 3 ( 2004 ) , 143 – 154 . [ 40 ] Yolanda Jacobs Reimer and Sarah A Douglas . 2003 . Teaching HCI design with the studio approach . Computer science education 13 , 3 ( 2003 ) , 191 – 205 . [ 41 ] Yvonne Rogers . 2012 . HCI theory : classical , modern , and contemporary . Synthesis Lectures on Human - Centered Informatics 5 , 2 ( 2012 ) , 1 – 129 . [ 42 ] Barbara Rogoff . 1994 . Developing understanding of the idea of communities of learners . Mind , culture , and activity 1 , 4 ( 1994 ) , 209 – 229 . [ 43 ] Donald A Schön . 1938 . The reﬂective practitioner . New York 1083 ( 1938 ) . [ 44 ] Paula Alexandra Silva , Martha E Crosby , and Blanca J Polo . 2014 . Studio - based learning as a natural ﬁt to teaching human - computer interaction . In International Conference on Human - Computer Interaction . Springer , 251 – 258 . [ 45 ] Amber Solomon , Vanessa Oguamanam , Mark Guzdial , and Betsy DiSalvo . 2019 . Making CS Learning Visible : Case Studies on How Visibility of Student Work Supports a Community of Learners in CS Classrooms . In Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education . ACM , 161 – 167 . [ 46 ] Jaime Urquiza - Fuentes and Maximiliano Paredes - Velasco . 2017 . Investigating the effect of realistic projects on students’ motivation , the case of Human - Computer interaction course . Computers in Human Behavior 72 ( 2017 ) , 692 – 700 . [ 47 ] Mihaela Vorvoreanu , Colin M Gray , Paul Parsons , and Nancy Rasche . 2017 . Advancing UX Education : A Model for Integrated Studio Pedagogy . In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems . ACM , 1441 – 1446 . [ 48 ] Lauren Wilcox , Betsy DiSalvo , Dick Henneman , and Qiaosi Wang . 2019 . Design in the HCI Classroom : Setting a Research Agenda . In Proceedings of the 2019 on Designing Interactive Systems Conference . ACM , 871 – 883 . [ 49 ] Tracee Vetting Wolf , Jennifer A . Rode , Jeremy Sussman , and Wendy A . Kellogg . 2006 . Dispelling “Design” As the Black Art of CHI . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( CHI ’06 ) . ACM , New York , NY , USA , 521 – 530 . DOI : http : / / dx . doi . org / 10 . 1145 / 1124772 . 1124853 12 Learning , Education , and Instruction DIS ’20 , July 6 – 10 , 2020 , Eindhoven , Netherlands 1142