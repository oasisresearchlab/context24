1 Cop yright © 2000 by ASME Proceedings of DETC’00 ASME 2000 Design Engineering Technical Conferences and Computers and Information in Engineering Conference Baltimore , Maryland , September 10 - 13 , 2000 DETC2000 / CIE - 14617 SIGNPOSTING : AN AI APPROACH TO SUPPORTING HUMAN DECISION MAKING IN DESIGN Martin Stacey Department of Computer and Information Sciences De Montfort University , Milton Keynes , UK P John Clarkson Engineering Design Centre Engineering Department Cambridge University , Cambridge , UK Claudia Eckert Engineering Design Centre Engineering Department Cambridge University , Cambridge , UK ABSTRACT Artificial intelligence provides powerful techniques for formalising the art of engineering problem solving : for modelling products , describing task structures , and representing problem solvingexpertise as inference knowledge and control knowledge . Signpostingsystems extend the scope of these methods beyond automatic design by using them to provide both information and guidance for decision - making by human designers . This paper outlines the application of AImethods according to cognitive engineering considerations , to the development of knowledge management tools for engineering design . These tools go beyond conventional knowledge management and decision support approaches by supplying both inference knowledge and strategic problem solving knowledge to the user , as well as information about the state of the design . By focusing on tasks and on the dependencies between design parameters , signposting systems support contingent and flexible organisation of activities . Such tools can support product modelling , design process planning and capturingexpert design knowledge , in a form that can be used directly to guide the organisation of design activities and the performance of individualtasks . A key element of this approach is the incremental acquisition of product models , task structures and problem solving knowledge by defining variant cases . 1 INTRODUCTION One way to view symbolic artificial intelligence is that it is the attempt to understand the art of problem solving in rigorous computational terms . This view of the AI project , focusing on knowledge and mechanism , is broader than the behaviour - centred view of AI as the construction of intelligent systems . It offers a different perspective on how to apply the concepts and methods of AI to problems too subtle and open - ended for independent AI reasoning systems , such as conceptual design in engineering , which we are applying in the development of signposting systems . The demands an d pressures on many engineering designers are rapidly increasing , as they have to obey more and more regulations , consider a wider variety of factors and best practice procedures ( see for instance Huang , 1996 ) , and strive ever harder to reduce lead times and avoid mistakes that cause costly revisions . But many engineering companies possess a great deal of experience and expertise ; the challenge is to retain this expertise despite staff turnover , develop it , and deploy it where and when it is needed . But how can effective corporate knowledge management in design be achieved ? While expert designers have a wide knowledge of facts and examples , their essential expertise lies in skills for analysing and solving particular kinds of problems . While obtaining information is a major drain on engineers’ time , possessing the necessary range of expertise to integrate this information considering all the important issues can be a much less tractable problem . Knowledge management and decision support systems can provide far more assistance to designers by supporting problem analysis and design synthesis as well as fact gathering . AI has been applied to corporate management of problem solving expertise : one important commercial purpose for expert systems is to make explicit and encode the problem - solving skills of human expertsfor reuse by non - experts . This can be motivated by the desire to 2 Cop yright © 2000 by ASME preserve and exploit the intellectual assets of a company whose employees may leave or retire . Automatic design systems can now tackle some significant tasks , but in many situations where companies might want to encode and reuse the skills of expert designers , using automatic design systems is impossible or yields inadequate results . The skills of expert designers include the perceptual recognition and evaluation of subtle features that defy analysis and computational representation ( see Eckert et al . , 1999a ) . But these perceptual skills are combined with knowledge of what inferences to make and what procedures to follow that can be articulated , recorded and passed on . Control knowledge ( Task election ) Inference knowledge ( Guidelines ) Task structure ( Tasks ) Product model ( Parameters ) Knowledgeacquisition Inference engine Completed design Figure 1 The Signposting concept The approach ( illustrated in Figure 1 ) taken to capturing and reusing expert problem solving knowledge in signposting systems is to combine knowledge bases created with the knowledge acquisition and knowledge description techniques of artificial intelligence , with an inference engine capable of complex pattern analysis and synthesisoperations , and solving ill - structured problems with incomplete information : a human designer . Signposting systems provide a human user with problem - state information , the task structure and the state of the design . They also provide within - task problem - solving knowledge in the form of design guidelines , and strategic problem - solving knowledge in the form of task selections and rankings , and task selection guidelines . They thus make corporate knowledge of how to design a resource for designers to draw on , actively presented when apposite to the problem in hand . This approach applies to decision support the analyses of the structure of problem solving developed for knowledge engineering forexpert systems , notably in the CommonKADS methodology ( for instance A . Schreiber et al . , 1993 ; G . Schreiber et al . , 1999 ) , emphasising the distinctions between domain knowledge , inference knowledge , task knowledge and strategic knowledge . As Smithers ( 1996 , 1998 ) argues , modelling design activities in terms of the knowledge and information agents require to perform them provides the type of understanding required for building effective design support systems . Section 2 introduces the signposting idea in the context of its antecedents . Section 3 discusses how signposting can be used to manage expert design knowledge , and points out some cognitive engineering issues that have to be addressed in developing design support systems . In section 4 we outline the architecture of a signposting system we are currently implementing , that takes an AI approach to knowledge management for design ; we discuss in passing how the signposting approach relates to problems stemming from the limitations of human cognitive abilities and organisational practices . 2 SIGNPOSTING DESIGN TASKS The signposting approach t o supporting design decision making comes out of the realisation that many important design processes have structures that defy conventional linear process descriptions . They involve complex interdependencies between design choices , so that designers have to estimate parameter values , backtrack , and repeat some tasks many times before all the parameters have satisfactory and mutually consistent values , even when what the parameters are is well understood . Such processes can be complex and important enough to require systematic planning , and challengingenough to gain from expert guidance and decision support . The core ideas of signposting ( Clarkson and Hamilton , 1999 , in press ) emerged during a study of a good example of such a process : helicopter rotor design ( Hamilton , 1999 ; Hamilton et al . , 1997 ) . Form , material and production method are indivisible in a rotor blade , which may be used for years in diverse environments . About 40 engineers with a wide range of expertise participated in the rotor blade development project observed by Hamilton , and no one had a good understanding of all aspects of the design , despite the fact that the company is a world leader in rotor blade design . This made project management and planning extremely difficult . While the fundamental stages of the design process were easy to identify , more detailed analysis revealed a nest of information dependency loops andintertwined and repeated tasks . Process - centred modelling techniques such as those presented by Pahl and Beitz ( 1996 ) proved too coarse - grained or failed to capture the nature of the interdependencies . Signposting is founded on the hypothesis that in situations involving complex interdependencies between different aspects of a design , both general - purpose problem structuring techniques and domain - specific expert knowledge can be applied to achieve a linear ordering of tasks and design decisions . This involves creating sequences of tasks to make collections of interdependent decisions , by making estimates of parameter values and then using those estimates to refine each other until they converge to a set of satisfactory and mutually consistent values . Signposting embodies thefurther hypotheses that designers and managers could benefit from timely advice from a computer support system both about identifying and choosing tasks , and about how to perform them . This guidance is supplied by recognising situations when tasks are possible , and when guidelines are appropriate . This assumes that one can identify the design decisions tha t need to be made , that is , the parameters of the design . The signposting approach is being applied initially to variant design tasks , where the form of the product is known from previous designs , but obtaining theright parameter values is highly complex . We are now generalising the approach to cover the design of ranges of similar products , where identifying the parameters of a design and their interactions is an integral part of designing ( see section 3 ) . In addition we are investigating customisation and change design , again important in the aerospace industry , where creating new products involves patching or partial redesign , and estimating the scope of the changes required to achieve a modification is essential ( Eckert and Clarkson , 2000 ; Clarkson et al . , 2000b ) . 3 Cop yright © 2000 by ASME 2 . 1 Units of analysis : parameters , dependencies and tasks Key concepts in the signposting approach are tasks , parameters , dependencies and confidences , for which we use the operational definitions described here . A parameter is an aspect of a design that needs to be determined , and hence embodies a decision about the design . While parameters may have single numerical values , we don’t limit the term to such simple cases . Parameter values may be symbolic , or have internal structure ( such as complex shapes ) , or be clusters of related parameters that we want to treat as a unit . Users can model products simply as flat parameter lists , but the more advanced signposting system proposed in section 4 is designed to support hierarchical product modelling . We treat derived information about a design , that does not embody any decisions , as derived parameters ; whether or not they are included in product models or in task descriptions is an issue of convenience . The values of parameters are often dependent on other parameters . A dependency is a causal or constraint relationship linking one parameter to another . Dependencies can be one - way or mutual ; we treat mutual dependencies as pairs of one - way dependencies . The confidence in a parameter value is an indication of how far it is to be trusted as an indication of the final value . How to describe confidence in a form both suitable for AI uncertainty reasoning and intuitive and useful for designers is a subject of ongoing research ( see section 4 . 4 ) . The current running signposting systems use simple unitary qualitative confidence values . Tasks are the units of analysis of design processes . A task is an activity that takes the values and confidences of certain parameters as inputs , and generates or updates the values and confidences of other parameters ( possibly including the input parameters ) . Task descriptions include confidence matrices ( see Figure 2 ) , naming their input and output parameters , and describing the confidences required for the input values and expected for the output values . We envisage that the users of the advanced signposting system outlined in section 4 will describe tasks hierarchically , first creating high level tasks and then adding the subtasks that are performed within them . Confidence mapping Rigid - body blade - loads h l m transfer matr l m blade - loads m m if at least medium confidence in blade - loads and at least medium confidence in transfer matrix then at most high confidence in blade - loads if rigid - body test positive Output Inputs at most medium confidence in blade - loads if rigid - body test positive then at least low confidence in transfer matrix and at least medium confidence in blade - loads if Task : Rigid - body - refinement of blade load data Inputs : blade - loads , transfer matrix Output : blade - loads Low ( l ) - an initial un - proven estimate Medium ( m ) - a feasible estimate High ( h ) - a final design value Figure 2 Confidence Matrix Signposting systems support decision making withi n tasks by presenting guidelines . Guidelines have no fixed form ; but they are typically descriptions of principles , considerations , and problem - solv - ing procedures that are useful for performing the currently active task . 2 . 2 Designing with interacting parameters In many important design processes , performing variant design and change design , much of the structure of the design is known in advance . Moreover , a lot of conceptual design proceeds middle - out : major elements are selected from available products , or imagined in considerable detail based on prior experiences of similar systems , and the rest of the design is created around them . In these situations , the parameters of the design are known or can be identified relatively straightforwardly . What can make such processes difficult and complex are the interactions between the parameters and tight , conflicting constraints on the form of the design . Conceptual - onwardsprocess analyses , for instance following Pahl and Beitz ( 1996 ) , and the design support systems based on them , for instance P ROSUS ( Blessing , 1994 ) are too coarse - grained for unpacking the activities involved in finding consistent parameter values . Similarly abstract - downwards approaches , for instance from Andreasen ( 1980 ) , and design support systems using functional models , for instance Schemebuilder ( Bracewell and Sharpe , 1996 ) and M AX ( de Vries , 1994 ) , are irrelevant to these problems . By using tasks as the unit of analysis , design processes can be modelled bottom - up from known atomic tasks , or middle - out from larger tasks , where considering input - output relationships and decomposing them into subtasks reveals holes in the analysis . This approach enables the analyst to recognise situations where the same goal can be achieved by alternative task sequences , and where the same generic tasks are performed repeatedly and in different situations , for instance finite element analysis or stress calculation . Modelling tasks in terms of their input - output behaviour enables them to be selected according to the states of their input parameters . In the prototype signposting system ( Clarkson and Hamilton , 1999 , inpress ) a task is highlighted as a productive next step if ( a ) the users have sufficient confidence in the input parameters , and ( b ) if the task will increase confidence in one or more output parameters . In the interface shown in Figure 3 , the traffic light colours red , amber and green indicate the progress that can be made by peforming a task : red means ‘insufficient information to do the task’ ; amber means ‘possible , but would not advance the design’ ; and green means ‘possible and useful’ . Figure 3 Signposting interface Designers do not always need to have high confidence in the accuracy and reliability of the information they use ; they often make provisional decisions based on partial information , and the results of these decisions are used to reconsider the decisions and assumptions they were based on . Clarkson et al . ( 2000a ) discuss an example of the prototype signposting system supporting this refinement process . 4 Cop yright © 2000 by ASME Novice designers using the tool were better able to reach a design solution than a control group without it , and followed a task sequence closer to that of an expert . The dependencies be tween the parameters are used to identify the linear order of tasks and decisions . But when parameters are directly or indirectly interdependent , the task ordering contains loops ( see Figure 4 ) . Here heuristics for breaking dependency loops , plus domain - specific expert knowledge , are needed to propose tasks for estimating parameter values and progressively refining them until consistent and satisfactory values are established . ( i ) Precedence b ( ii ) Mutual dependence a b a ( iii ) Influence context ( iv ) Independence a b b a Figure 4 Dependency relationships between tasks In complex real - life design processes , many tasks may be competing for limited resources , and the order in which parameter values become available cannot always be predicted . Some tasks may be delayed , or prove harder than expected , so parameter values may not be generated at the expected times with the expected confidences . The design process has to be adapted on the fly . The signposting systems encourage designers to perform the most urgent tasks that arepossible with the information available . 2 . 3 Related approaches to supporting engineering design A variety of approaches to computer support for design have used process models comprising networks of tasks . Traditional workflow systems provide a framework for controlling business processes and are used to mediate the flow of responsibility in those processes from person to person and from task to task ( Prasad et al . , 1998 ) . This matching of resource to need is suited to well behaved business processes where a standardisation of procedure can bring about increases in process efficiency . However , the engineering design process is not a well behaved process and even in the case of variant design , where a new artefact is very similar to previously designed products , there can be considerable changes in the process that generates the design information ( Dong and Goh , 1998 ) . Signposting provides an approach to manage such processes by enabling a situation - driven guidance engine . As well as being used for retrieving cases for adaptive design using case - based reasoning ( Göker , 1999 ) , networks of dependencies between parameters have been used for computing task networks for activity planning . Petri net models . McMahon and Xianyi ( 1996 ) use petri nets ( essentially , directed graphs whose nodes are functions and arcs are parameter values ) to create parameter driven design process models . In a parameter driven process the design process defines task sequences which are executed in response to parameters being available . Contextual task knowledge is not required ( or at least , not included in the model ) . However , such task network models are static in nature and must be carefully defined for each new type of product . Design Structure Matrices . DSMs ( Steward , 1981 ) , represent information dependency relationships as cells in matrices whose rows and columns are the independent and dependent parameters ; in this notation the functions that are nodes in Petri nets are only implicit . They have been used by Eppinger ( for instance Eppinger et al . , 1994 ) and others to generate task networks as prescriptive process models for management purposes ; this involves explicitly defining the precedence order of tasks . The signposting approach extends this by introducing the notion of parameter confidence as a means to differentiate between similar tasks and break dependency loops through estimating and iterative refinement . The dynamic nature of task selection in signposting does away with the need to explicitly define task precedence . Signposting can also include the use of requirements and other contextual information in task selection . 3 A SIGNPOSTING APPROACH TO MANAGING DESIGN KNOWLEDGE A signposting system combines a variety of different types of knowledge about how to design the types of product its knowledge base is built for . The structure of the product . The parameter set constitutes a model of the form of the product ; with the degree of detail and completeness appropriate for supporting designing . This may , but need not , include functional and structural decomposition trees . An outline requirements analysis . The outcome of requirements analysis is a set of requirement and constraint parameters , which can be reasoned with in the same way as the product parameters . The network of information dependencies . The network of dependencies between parameters embodies knowledge about the constraints imposed on the design process by the structure of the product . The dynamic task structure space . The task network ( and the resources for extending it at design - time ) embody knowledge about how to organise the design process dynamically in response to contingent events . Problem - solving knowledge . The guidelines for performing individual tasks embody a variety of types of general and task - specificknowledge about how to design , such as what issues should be considered and which should be given priority ( for instance Design for X guidelines , Huang , 1996 ) , how to meet legal requirements , what design choices are most likely to be successful and why , strategies for formulating and solving problems , and so on . This sort of corporate knowledge is a valuable asset , especially if it can be articulated for reuse . The activity of articulating such knowledge can be a spur to clarifying understanding and uncovering hidden assumptions , so a system that facilitates knowledge formulation as well as the reuse of previously codified design knowledge would be a useful tool for knowledge management in design . In the remainder of this paper we describe how a signposting system can achieve this goal . 3 . 1 Knowledge reuse by variant description The approach we take is to identify design knowledge , and extend and refine it , by describing products as variants of earlier products , and tasks as variants of generic tasks or comparable tasks in earlier design processes . Searching for similarities and differences first between past designs and new demands , then for differences in the inputs to tasks , focuses attention on how widely design knowledge can be applied . Knowledge elicitation by provoking analysis of scope is applied to combinations of parameters , task sequences , individual tasks , and guidelines for performing tasks . This 5 Cop yright © 2000 by ASME approach to reuse suits situations where companies do variant design , or create ranges of similar products . It is also suits design by customisation . The initial signposting systems ( Clarkson and Hamilton , 1999 , in press ) were designed for variant design with fixed parameter sets ; the research described here is on extending the signposting approach to support the reuse of design knowledge across different but comparable products . In using a signposting system to design a product with a new parameter structure , creating the product model and identifying the interdependencies between parameters is an integral part of embodiment design and process planning . In designing such a signposting system , there is no clear separation between designing a new product and eliciting design knowledge for reuse . Reusing designs is a vitally important part of engineering ( for instance , Duffy and Duffy , 1996 ) . As Eckert et al . ( 2000 ) point out , selecting and adapting sources of ideas to meet the demands of new situations is an integral and inescapable part of all designing . Computer support for reuse has attracted a very large amount of research using a wide variety of approaches , and its own conferences ( Sivaloganathan and Shahin , 1998 ) . The signposting approach focuses on reusing tasks rather than on reusing components , and is thus limited to designs developed using the system ( though other reuse methods might be used in performing design - time tasks ) . We assume that searching the tree of variants to identify the most appropriate design to adapt is straightforward . If not , useful case retrieval methods have been developed for case - based reasoning ( see Kolodner , 1993 ; Voss et al . , 1996 ) , notably by Göker ( 1999 ) . 3 . 2 Cognitive engineering of design support systems The term “design” is customarily used in two distinct meanings . ( 1 ) Design as a style of problem solving is characterised by a cycle of problem refinement , holistic solution synthesis , and solution evaluation ( Asimow , 1962 ) . ( 2 ) Design as a process that produces a description of a new artefact , covering all the different problem solving activities involved in creating the new artefact description . Developing successful engineering design support systems requires effective cognitive engineering , so that they fit both human design thinking and industrial design practices ( see Eckert et al . , 1999a ) . Knowledge - intensive tools like signposting systems must also be designed so that knowledge - encoding activities are not only smooth and efficient , but also clearly cost - effective for the people developing the knowledge bases . 3 . 3 Cognitive engineering issues : design thinking Some aspects of human cognition that influence ho w engineers design and hence what computer support they need . Premature focus . Designers seldom explore the space of possible designs , but instead zoom into detailed design of their first satisfactory - looking conceptual design . Similarly , people often designby modifying similar products when reconsidering the problem and searching for alternatives would lead to better products . The primary purpose of prescriptive design methodologies ( most famously Pahl and Beitz , 1996 , see also Ehrlenspiel , 1995 ) and design support systems based on them , for instance P ROSUS ( Blessing , 1994 ) , Schemebuilder ( Bracewell and Sharpe , 1996 ) , and M AX ( de Vries , 1994 ) , is to encourage designers to consider a wider range of alternatives at a higher level of abstraction . Following habitual paths . Experienced designers learn standard procedures for solving familiar problems , by repeating what works ( for instance , Anderson , 1983 ) . Such expertise increases efficiency but can reduce designers’ effectiveness if the procedures become less appropriate to a new situation , without being obviously wrong ( Eckert et al . , 1999b ) . Situated knowledge . The recall and use of problem - solving knowledge is embedded in the contexts in which it is learnt and used ( Suchman , 1987 ; Clancey , 1997 ) . It can be difficult to generalise knowledge and recognise its applicability in other contexts . Much of designers’ ‘factual’ knowledge about design principles and inferences , while not completely tacit , is only triggered by specific problem contexts and so is difficult to find and make explicit ( Christiaans , 1999 ) . Opportunistic problem - solving . As Suchman ( 1987 ) points out , people only make plans in unusual situations , and when they do , don’t follow them slavishly but use them as another resource for guiding opportunistic action . Designing is a mixture of plan - driven and opportunistic action ( for instance , Visser , 1994 ) ; designers suspend goals and jump between tasks . Computer systems that impose an ordering on decisions and tasks can disrupt designers’ working practices and force premature commitments to decisions . This can influence the products that are designed ( see Stacey and Eckert , 1999 ) . Tacit decision - making . Designers typically think about and describe new designs with reference to previous similar designs ( see Eckert and Stacey , in press ) . These carry with them assumptions and expectations about products and processes , and focus designers’ recall of ideas and experiences . Thus they cause designers to consider some options and ignore others , for reasons they are not conscious of . This is particularly important at the early stages of the design process when designers are working with incomplete and tentative information . Indeed , designers’ thinking is channelled by their recollection of similar artefacts , even when they try to escape from their influence ( Jansson and Smith , 1991 ; Purcell and Gero , 1996 ) . Limited ability to reason about uncertainty . Humans are extremely bad at using probabilities in decision making ( see Ayton and Pascoe , 1995 ) ; and have problems following probabilistic argu - ments even if a computer program generates them for them . Training in probability theory alleviates this somewhat , but most people find qualitative probability terms easier to reason with ( see Fox , 1994 ) . 3 . 4 Cognitive engineering issues : design processes Some aspects of industrial design practice , stemming from the complexity and multidisciplinary nature of modern engineering development processes , that influence how products are designed and hence what computer support for design is needed , as well as how design processes should be managed . Information flow in concurrent engineering . Concurrent engineering approaches to design increase the number of factors to be considered in decision making processes , thus increasing both the number of constraints on design decisions and the number of applicable rules and principles . The need to reduce lead times exerts pressure to parallelise design tasks and minimise backtracking and iterative refinement . These challenges increase the need for computer supported provision of pertinent principles and inferences as well as information , and support for designing with imprecise and provisionalinformation . The signposting approach was originally motivated by 6 Cop yright © 2000 by ASME the desire to achieve ‘right - as - soon - as - possible’ where ‘right - first - time’ is intrinsically impossible . Design revision . Despite the effectiveness of concurrent engineering methods , major problems can sometimes emerge at late stages including prototyping and testing , forcing revision of the design with catastrophic effects on lead times . And some design processes are still highly iterative , because of information dependencyloops , lack of information , and the need to evaluate the product through testing . Loss of the big picture . In big projects , managers may be unable to maintain a good understanding of all parts of the development process , and may be unable to understand what the specialists are doing . At the same time , specialist designers may lose track of how their tasks fit into the context of the development of the entire product . They know what the people they interact with do , and what information they require , but not how this information is used further downstream . For example designing a new helicopter takes several thousand person - years over about five years and each designer is onlyinvolved in a small part of this process . Need for different representations . Designers with different specialisms may have very different thinking styles , interests and responsibilities , ranging from mathematical modelling to material selection and drawing . They have different conceptions of the form , composition and behaviour of the product and its environment – what Bucciarelli ( 1988 , 1994 ) terms object worlds . So they have different information needs . So design information needs to be translated into avariety of different visual representations , that facilitate different types of design thinking . Problematic interactions between designers . Designers may have difficulty communicating their ideas to their colleagues , who may have trouble seeing the implications for their own areas of respon - sibility . In the seemingly simple case of knitwear design , Eckert ( 1997 , 1999 ) identified several different reasons why the interaction between knitwear designers and technicians is problematic , leading toinefficient processes and suboptimal products . The critical issues were the lack of adequate notational conventions for expressing essential information , and lack of recognition of the problem . 3 . 5 Cognitive engineering issues : knowledge acquisition Some aspects of the knowledge acquisition problem that influence the feasibility of building and using knowledge - intensive design support systems , and their effectiveness in use . Translation cost . The effort and difficulty of knowledge acquisition is partly determined by how much translation is needed from the terms in which experts think , into forms in which the system can use the knowledge . In engineering , an important issue is constructing product models in forms that are intuitive for the users : supporting hierarchical descriptions but not requiring them when they are not needed for designing . Situated knowledge acquisition . As we note above , a lot of important design expertise only surfaces in the contexts where it is used , so the knowledge acquisition process needs to support both opportunistic acquisition and searching for situated knowledge . Incremental development and maintenance . It is increasingly widely recognised by expert system developers that knowledge acquisition should not be treated as a one - time - only process creating arigid static knowledge structure , as such a structure will contain errors and go out of date . So knowledge - intensive systems need to be designed for ease of revision and maintenance ( Menzies , 1999 ) . Indeed , development and maintenance should not be regarded as separate ( Menzies , 1998 ; Richards and Compton , 1998 ) . Incremental revision is a lot more feasible if it can be done by the system’s users rather than by specialist knowledge engineers . A major weakness of the approach to parameter - driven task modelling taken by Eppinger et al . ( 1994 ) is that it requires an outside knowledge engineer to create a static task structure . Cost - benefit ratio for knowledge acquisition . The effort involved in formulating and encoding knowledge in the system must not only be cost - effective for the company , but also seen to be cost - effective for the person doing the work . So it must either be directly rewarded , or it must be an activity that itself has direct and immediate benefits besides the encoding of knowledge for future use . 4 OUTLINE OF A KNOWLEDGE MANAGEMENT TOOL FOR ENGINEERING DESIGN This section describes our ongoing research on signposting systems that integrate support for process planning with support for task execution . While the original signposting systems ( Clarkson and Hamilton , 1999 , in press ) grew out of practical experience of engineering design , this work is grounded in cognitive psychology , and addresses the cognitive engineering issues outlined in the previous section . It uses knowledge acquisition and knowledge repre - sentation techniques to formulate information that is presented , in the form of parameter and task descriptions , task choices , and guidelines , to a human designer who acts as the system’s inference engine . 4 . 1 Knowledge acquisition by ripple down modelling We address the need for incremental knowledge acquisition for signposting by extending the ripple down rules method of developing expert systems , developed by Paul Compton and colleagues at the University of New South Wales ( Compton and Jansen , 1990 ; see for instance Richards and Compton , 1998 ; Menzies , 1998 , 1999 ) . In situations where the existing ruleset is not adequate , a new rule is added as a variant of an existing rule . Product models comprise sets of parameters . The user is free to describe products with flat lists of parameters . But hierarchical product models can be developed incrementally top - down , bottom - up , or middle - out , ( 1 ) by redefining a general parameter as comprising a set of child parameters ; and ( 2 ) by adding links to one or more super - parameters to an existing lower - level parameter , to assert that it is part of a larger structure . Product models for variant designs and similar products are created using ripple down modelling . Only the parameters that are different ( usually because they have different decompositions into subparameters ) are defined separately ; the new variant parameters are created by modifying the root - variants , and have links back to them , and rationales for splitting them off . Similarly the user is free to create flat lists of tasks , or create a task decomposition hierarchy by iterative refinement . Variant tasks for different situations ( at different points in one product or in different products ) are created by modifying root - variants , with rationales for making the splits including a description of the scope ofapplicability of the task . As engineering design involves many standard activities used in many different situations , such as finite element analysis , tasks can be created by drawing on a stock of generic tasks not associated with any particular product . 7 Cop yright © 2000 by ASME As tasks are specified in terms of input and output parameters , attention is focused during knowledge acquisition on information needs , and on the assumptions about design choices and task performance implicit in information choices . Considering input and output of information also focuses explicit attention on how different members of design teams performing different tasks need to exchangeinformation , and thus on situations where people are providing insufficient or inappropriate information . It also highlights situations where there is a mismatch in the form of the parameter values , and where automatic translation between alternative representations would be useful . Considering task sequences encourages users to make standard procedures explicit , and so reconsider their appropriateness . A guideline for task performance is associated with a task – its scope . When a new variant task is created , it inherits the guidelines belonging to its root . The user can create variant guidelines for the new task ( including null forms if guidelines are simply inappropriate for the new variant task ) . Although creating and modifying guidelinesis not an intrinsic part of creating and varying product models and task structures , ripple down modelling focuses attention on the similarities and differences between task situations . It thus creates appropriate conditions for recalling and encoding situated task - specific problem solving knowledge . 4 . 2 A tool for process planning and design guidance In the signposting approach , identifying the parameters of a new design ( that is , developing a product model ) is tightly bound to identifying the tasks needed to design it . An essential requirement for a signposting system that can be used for new types of product , is that it should function as a useful tool for process planning ; and moreover that knowledge acquisition for task performance guidelines should be a relatively painless extension of this . Thus a signposting system has build - time and design - time modes , corresponding to two functions of a human design manager , first planning the expected tasks and assigning resources to them , and then coordinating the process and guiding the activities of junior teammembers . At build - time , the user constructs both a product model andan outline task structure by identifying the parameters and the dependencies between them . Build - time use of the signposting systemcan be interleaved with design - time use . What parameters the design has may depend on earlier design decisions ( that is , the values of other parameters ) . Similarly , appropriate tasks and task sequences for later stages of the design process may have to be planned according tothe results ( parameter values ) from earlier tasks . 4 . 3 Design guidance In a signposting system , design - time guidance takes two forms . The first is highlighting tasks that are possible with the available information ( see section 2 . 2 ) ; we are working on extending this with user guidelines and a back - end reasoning module for identifying the most urgent tasks . This approach facilitates flexible opportunistic task choice , while focusing attention on productive actions and warning against attempting tasks with inadequate information . The second form of design - time guidance is through guidelines that are presented when the user undertakes a task . These can include reminders to check facts , possible solution principles , strategic problem - solving advice , methodological advice , and design for X guidelines . How guidelines should be presented to the user is an open research question . In the present implementations , the system presents a list of applicable guidelines in a special window . Specifying the scope of guidelines is an essential part of the signposting approach . Even so , for some tasks there may be an infeasably large number of guidelines , so we are considering taking a critiquing approach ( see Silverman , 1992 ; Fischer et al . , 1993 ) to select guidelines according to the state of the design , and using user models to choose guidelines according to a designer’s expertise and experience . Research on how active critiquing systems are used reveals that the timing of advice can influence designing behaviour ( Lemke and Fischer , 1990 ) . 4 . 4 Support for human uncertainty reasoning A design support system dealing with situations where designers work with uncertain information should propagate uncertainty information and assist with probabilistic reasoning . It should also enable designers to use terms for uncertainty information they find intuitive and easy . The choice of method depends on the nature of the uncertainty and the task . Signposting systems are concerned with using uncertain information as inputs to user - performed processes to derive uncertain outputs . The existing signposting implementations use simple qualitative estimates of how much a value can be trusted as being close to its final value , with a simple non - Bayesian propagation algorithm . However what information engineers want and can generate about the trustworthiness of parameter values , and how it can be propagated using AI uncertainty reasoning techniques , are open research questions , which we intend to explore experimentally using signposting systems as testbeds . The following uncertainty concepts are potentially significant in design thinking . Confidence . The degree to which a parameter value can be relied as being satisfactory . ( The product of input confidence and understanding . ) Input Confidence . The degree to which the assumptions and inputs from which the parameter value is derived are stable and reliable . Understanding . The extent to which the user has sufficient information and expertise to derive the parameter value from the input information . Commitment ( the opposite of provisionality ) . The degree to which the project is committed to keeping the current value of the parameter ( and conversely , how easily it can be changed to meet otherneeds ) . Precision . How exact the value is . ( Does x = 10 mean 9 . 998 < x < 10 . 002 or 8 < x < 12 ? ) Typicality . The extent to which the parameter value is typical or central in the range of acceptable values . Sensitivity . How far the value can be changed without significantly affecting the rest of the design , and the consequences of changing it more than that . Stacey and Eckert ( 2000 ) discuss this typology of uncertainty concepts with reference to the need for design support tools to enable the expression of provisional and imprecise design ideas and the role of ambiguity in design communication . 4 . 5 Proposed system architecture Figure 5 shows a system architecture for a signposting knowledge management tool we are currently developing . This 8 Cop yright © 2000 by ASME employs a blackboard architecture to handle interaction between different interface modules and reasoning modules . Build - time functionality is shown on the left , and design - time functionality on the right . The tasks including their confidence mappings are stored in the task base , which also includes product - independent generic tasks . The task hierarchy display shows how higher level tasks are composed of sets of lower level tasks . The user records information about the active task using the task interface . The user can select a task in the task selector , which displays the currently possible and useful tasks . The signposting engine identifies tasks that are possible with the available information . It generates the task map – equivalent to a petri net . This can be displayed to show the interactions between the tasks through their input and output parameters and their current states . When the system has a hierarchical product model and a hierarchical task structure , the task map can be generated for differentlevels of detail . The task hierarchy display and the task map helps the user understand the context in which particular tasks are carried out , and see how the task structure handles information dependency loops and iterative activities . The structure of the design ( the product model ) is stored in the parameter base and requirements base . ( Parameters and requirements are essentially the same thing for knowledge representation purposes , but are differentiated here for conceptual clarity . ) The version base holds the variant selections and individual parameter values for particular designs . The version manager controls interaction with the version base . Parameters , requirements , tasks and guidelines are created and varied with their own editors . The task proposer uses the dependencies between parameters and the input - output specifications of existing tasks , to identify missing tasks , and to recognise information dependency loops . It applies general task structuring heuristics to propose linear sequences of tasks for estimating and refining interacting parameter values . There are no limits to how much the task interface can be customised for individual tasks . Useful functionality for frequently - used generic tasks would include special purpose visual representations of aspects of the design , and calls to appropriate CAD systems . The only restriction is that the tasks should generate output descriptions comprising parameter values that are in the form expected by later tasks , and follow the system’s conventions for describing confidence in parameter values . Callouts to AI modules and other programs for performing algorithmic or computationally tractable design activities are treated as individual tasks , that are created at build - time using the task editor , and are proposed at design - time when the necessary inputs are available . Editor Product model Database User interface Building Using Version description Product model Tasks Taskeditor Guidelines Guideline editor Guideline base Taskbase Parameter editor Parameter base Requirements editor Requirements base Productdisplay Version manager Product model Version base Guideline handler Guideline display Guidelines State ofthe design User model Product model Guidelines Design decisions Task proposer Missing tasks Task display State ofthe design Task hierarchy Designrationale Next task Task map Task map Signposting engine Taskmap Task selector Task hierarchy Possible tasks Task handler Tasks Parameters Task interface Parameters Design rationale Next task Tasks Product model Figure 5 System Architecture 9 Cop yright © 2000 by ASME 5 CONCLUSIONS The key challenges for knowledge management and decision support for engineering designers are in identifying , encapsulating and deploying inferences , reasoning principles and procedures , both those codified in regulations and guides to best practice ( see Huang , 1996 ) and those developed by expert designers . Artificial intelligence ( and specifically knowledge engineering ) offers concepts and tools that can be applied to providing resources for human reasoning . In this paper we have outlined the signposting approach to using artificial intelligence techniques for modelling design knowledge and presenting it to human designers in forms that they can use . This approach emphasises the knowledge engineering distinction between domain knowledge , inference knowledge , task knowledge and strategy knowledge . This knowledge takes the form of models of the structures of products as sets of parameters and the dependencies of parameters on each other ; the tasks required to generate parameter values ; guidelines for performing the tasks ; and guidelines for selecting tasks . The signposting systems we are developing are intended to support not only the capture and deployment of design knowledge for humans to use , but also the smooth integration of AI modules and other computational tools for performing specific tasks into human design processes . At the core of the signposting approach is modelling the structure of the design process as a network of tasks , each of which is a mapping from input parameters with particular confidence values to output parameters with particular confidence values . The tasks are derived from the dependencies between parameters , using general heuristics and task - specific knowledge to propose task sequences that break information dependency loops by iteratively estimating and refining parameter values . In this approach specifying the outline form of the design is tightly coupled to process planning . The signposting approach avoids specifying the form that the representations of a design should take , or even imposing the requirement that it should have a coherent hierarchical structure . By adapting the ripple down rules method of expert system development ( Compton and Jansen , 1990 ) , knowledge bases for product models , tasks , and design guidelines can be developed incrementally as a part of the concept selection and process planning stage of design . By focusing attention on the input information required by design activities and the output information they generate , planning the design process by specifying tasks not only encodes corporate knowledge of how to design , but encourages designers to make explicit situated knowledge and tacit skills . ACKNOWLEDGEMENTS This research has been supported by the EPSRC rolling grant for the Cambridge University Engineering Design Centre . It has benefited from conversations with other members of the Signposting project at the Cambridge EDC : Jamie Hamilton , Andy Connor , Jerome Jarrett and Andres Melo ; as well as with numerous engineers at GKN Westland . Andy Connor commented helpfully on an earlier draft . REFERENCES Anderson , J . R . , 1983 , The Architecture of Cognition , Harvard University Press , Cambridge , MA . Andreasen , M . M . , 1980 , Syntesemetoder på systemgrundlag , PhD thesis , Lunds Tekniska Högskola , Denmark . Asimow , M . , 1962 , Introduction to Design , Prentice - Hall , Englewood Cliffs , NJ . Ayton , P . and Pascoe , E . , 1995 , “Bias in human judgement under uncertainty ? ” , Knowledge Engineering Review , Vol . 10 , pp . 21 - 41 . Blessing , L . T . M . , 1994 , A Process - Based Approach to Computer Supported Engineering Design , PhD thesis , University of Twente , Enschede , Netherlands . Bracewell , R . H . and Sharpe , J . E . E . , 1996 , “Functional descriptions used in computer support for qualitative scheme generation – “ Schemebuilder”” , Artificial Intelligence in Engineering Design , Analysis and Manufacturing , Vol . 10 , pp . 333 - 346 . Bucciarelli , L . L . , 1988 , “An ethnographic perspective on engineering design” , Design Studies , Vol . 9 , pp . 159 - 168 . Bucciarelli , L . L . , 1994 , Designing Engineers , MIT Press , Cambridge , MA . Christiaans , H . H . C . M . , 1999 , “Designer’s Knowledge Base and Structure : An Analysis of Argumentation in Design” , Proceedings of the 12th International Conference on Engineering Design , Munich , Vol . 2 , pp . 977 - 982 . Clancey , W . J . , 1997 , Situated Cognition , Cambridge University Press , Cambridge , UK . Clarkson , P . J . , Connor , A . and Melo , A . F . , 2000a , “ Signposting for design process improvement” , in J . S . Gero and A . Christian , ed . , Artificial Intelligence in Design ’00 , Kluwer Academic Publishers , Dordrecht , Netherlands . Clarkson , P . J . , Simons , C . and Eckert , C . M . , 2000b , “Change Propagation in the Design of Complex Products” , Proceedings of the Engineering Design Conference 2000 , Brunel University , Uxbridge , UK . Clarkson , P . J . and Hamilton , J . R . , 1999 , “‘Signposting’ the design process” , Proceedings of the 12th International Conference on Engineering Design , Munich , Vol . 1 , pp . 107 - 112 . Clarkson , P . J . and Hamilton , J . R . , in press , “Knowledge modelling in aerospace design” , Research in Engineering Design . Compton , P . and Jansen , R . , 1990 , “A philosophical basis for know - ledge acquisition” , Knowledge Acquisition , Vol . 2 , pp . 241 - 257 . Dong , Y . and Goh , A . , 1998 , “An intelligent database for engineering applications” , Artificial Intelligence in Engineering , Vol . 12 , pp . 1 - 14 . Duffy , A . H . B . and Duffy , S . M . , 1996 , “Learning for design reuse” , Artificial Intelligence in Engineering Design , Analysis and Manufacturing , Vol . 10 , pp . 139 - 142 . Eckert , C . M . , 1997 , Intelligent Support for Knitwear Design , PhD thesis , Department of Design and Innovation , The Open University , Milton Keynes , UK . Eckert C . M . , 1999 , “Managing Effective Communication in Knitwear Design” , Design Journal , Vol . 2 No . 3 , pp . 29 - 42 . Eckert , C . M . and Clarkson , P . J . , 2000 , “ Customisation and Change Processes in Engineering” , Technical report CUED / C - EDC / TR88 , Department of Engineering , Cambridge University , Cambridge , UK . Eckert , C . M . , Kelly , I . and Stacey , M . K . , 1999a , “Interactive generative systems for conceptual design : an empirical 10 Cop yright © 2000 by ASME approach” , Artificial Intelligence in Engineering Design , Analysis and Manufacturing , Vol . 13 , pp . 303 - 320 . Eckert , C . M . and Stacey , M . K . , in press , “Sources of Inspiration : A Language of Design” , Design Studies , Vol . 21 . Eckert , C . M . , Stacey , M . K . and Clarkson , P . J . , 2000 , “Algorithms and Inspirations : Creative Reuse of Design Experience” , Proceedings of Greenwich 2000 : Digital Creativity Symposium , Greenwich University , Greenwich , UK , pp . 1 - 10 . Eckert , C . M . , Stacey , M . K . and Wiley , J . , 1999b , “Expertise and Designer Burnout” , Proceedings of the 12th International Conference on Engineering Design , Technical University of Munich , Munich , Vol . 1 , pp . 195 - 200 . Ehrlenspiel , K . , 1995 , Integrierte Produktentwicklung , Carl Hansen , Munich , Germany . Eppinger , S . D , Whitney , D . E . , Smith , R . P . and Gebala , D . A . , 1994 , “A model - based method for organising tasks in product develop - ment” , Research in Engineering Design , Vol . 6 , pp . 1 - 13 . Fischer , G . , Nakakoji , K . , Ostwald , J . , Stahl , G . and Sumner , T . , 1993 , “Embedding critics in design environments” , Knowledge Engineering Review , Vol . 8 , pp . 285 - 307 . Fox , J . , 1994 , “On the necessity of probability , reason to believe and grounds for doubt” , in G . Wright and P . Ayton , ed . , Subjective Probability , John Wiley , Chichester , UK . Göker , M . H . , 1999 , “Retrieving Adaptable Solutions from a Design Repository” , Proceedings of the 12th International Conference on Engineering Design , Munich , Vol . 3 , pp . 1389 - 1394 . Hamilton , J . R . , 1999 , The capture and representation of knowledge to support adaptive aerospace design , PhD thesis , Cambridge University Engineering Department , Cambridge , UK . Hamilton , J . R . , Clarkson , P . J . and Burgess , S . , 1997 , “The modelling of design knowledge for computer supported aerospace design” , Proceedings of the 11th International Conference on Engineering Design , Tampere , Finland , Vol . 1 , pp . 235 - 240 . Huang , G . Q . , ed . , 1996 , Design for X , Concurrent Engineering Imperatives , Chapman and Hall , London , UK . Jansson , D . G . & Smith , S . M . , 1991 , “Design Fixation” , Design Studies , Vol . 12 , pp . 3 - 11 . Kolodner , J . , 1993 , Case - Based Reasoning , Morgan Kaufmann , San Mateo , CA . Lemke . A . C . and Fischer , G . , 1990 , “A cooperative problem solving system for user interface design” , Proceedings of CHI ’90 , ACM Press , New York , NY , pp . 479 - 484 . McMahon , C . A . and Xianyi , M . , 1996 , “A Network Approach to Parametric Design Integration” . Research in Engineering Design , Vol . 8 , pp . 14 - 32 . Menzies , T . J . , 1998 , “Towards situated knowledge acquisition” , International Journal of Human - Computer Studies , 49 , 867 - 893 . Menzies , T . J . , 1999 , “Knowledge maintenance : the state of the art” , Knowledge Engineering Review , Vol . 14 , pp . 1 - 46 . Pahl , G . and Beitz , W . , 1996 , Engineering Design , 2nd ed . , trans . K . M . Wallace , L . T . M . Blessing and F . Bauert , Springer , London . Prasad , B . , Wang , F . and Deng J . , 1998 , “A concurrent workflow management process for integrated product development” , Journal of Engineering Design , Vol . 9 , pp . 121 - 135 . Purcell , A . T . and Gero , J . S . , 1996 , “Design and other types of fixation” , Design Studies , Vol . 17 , pp . 363 - 383 . Richards , D . and Compton , P . , 1998 , “Taking up the situated cognition challenge with ripple down rules” , International Journal of Human - Computer Studies , Vol . 49 , pp . 895 - 926 . Schreiber , A . Th . , Wielinga . B . J . & Breuker J . A . , ed . , 1993 , KADS : A Principled Approach to Knowledge - Based System Development , Academic Press , London , UK . Schreiber , G . , Akkermans , H . , Anjewierden , A . , de Hoog , R . , Shadbolt , N . , Van de Velde , W . & Wielinga , R . , 1999 , Knowledge Engineering and Management , MIT Press , Cambridge , MA . Silverman , B . G . , 1992 , “Survey of Expert Critiquing Systems : Practical and Theoretical Frontiers” , Communications of the ACM , Vol . 35 ( 4 ) , pp . 106 - 127 . Sivaloganathan , S . and Shahin , T . M . M . , ed . , 1998 , Design Reuse , Professional Engineering Publishing , Bury St . Edmunds , UK . Smithers , T . , 1996 , “On knowledge level theories of design processes” , in J . S . Gero and F . Sudweeks , eds . , Artificial Intelligence in Design ’96 , Kluwer Academic Publishers , Dordrecht , Netherlands . Smithers , T . , 1998 , “Towards a knowledge level theory of designprocess” , in J . S . Gero and F . Sudweeks , eds . , Artificial Intelligence in Design ’98 , Kluwer Academic Publishers , Dordrecht , Netherlands . Stacey , M . K . and Eckert , C . M . , 1999 , “CAD System Bias in Engineering Design” , Proceedings of the 12th International Conference on Engineering Design , Technical University of Munich , Munich , Vol . 3 , pp . 1413 - 1418 . Stacey , M . K . and Eckert , C . M . , 2000 , “Against Ambiguity” , COOP 2000 Workshop on Objects in Design Communication , Sophia Antipolis , France . Steward , D . V . , 1981 , “The Design Structure System : A Method for Managing the Design of Complex Systems” , IEEE Transactions on Engineering Management , Vol . 28 , pp . 71 - 74 . Suchman , L . A . , 1987 , Plans and Situated Actions , Cambridge University Press , Cambridge , UK . Visser , W . , 1994 , “The organisation of design activities : opportunistic , with hierarchical episodes” , Interacting with Computers , Vol . 6 , pp . 235 - 274 . Voss , A . , Bartsch - Spörl , B . and Oxman , R . , 1996 , “A study of case adaptation systems” , in J . S . Gero and F . Sudweeks , ed . , Artificial Intelligence in Design ’96 , Kluwer Academic Press , Dordrecht , Netherlands , pp . 173 - 189 . Vries , T . J . A . de , 1994 , Conceptual Design of Controlled Electro - mechanical Systems : a Modeling Perspective , PhD thesis , University of Twente , Enschede , Netherlands . ADDRESSES Martin Stacey : Department of Computer and Information Sciences , De Montfort University , Milton Keynes , MK7 6HP , United Kingdom . mstacey @ dmu . ac . uk . John Clarkson and Claudia Eckert : Engineering Design Centre , University of Cambridge , Trumpington Street , Cambridge , CB2 1PZ , United Kingdom . { pjc10 , cme26 } @ eng . cam . ac . uk .