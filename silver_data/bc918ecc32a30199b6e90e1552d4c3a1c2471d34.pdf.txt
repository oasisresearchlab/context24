Ontologies for Knowledge Management : An Information Systems Perspective 1 Igor Jurisica , John Mylopoulos , Eric Yu University of Toronto , Toronto , Ontario , Canada Abstract Knowledge management research focuses on concepts , methods , and tools supporting the management of human knowledge . The main objective of this paper is to survey basic concepts that have been used in Computer Science for the representation of knowledge and summarize some of their advantages and draw - backs . A secondary objective is to relate these techniques to Information Science theory and practice . The survey classifies the concepts used for knowledge representation into four broad ontological catego - ries . Static ontologies describe static aspects of the world , i . e . , what things exist , their attributes and rela - tionships . A dynamic ontology , on the other hand , describes the changing aspects of the world in terms of states , state transitions and processes . Intentional ontologies encompass the world of things agents be - lieve in , want , prove or disprove , and argue about . Finally , s ocial ontologies cover social settings – agents , positions , roles , authority , permanent organizational structures or shifting networks of alliances and inter - dependencies . 1 . INTRODUCTION Knowledge management is concerned with the representation , organization , acquisition , creation , use , and evolution of knowledge in its many forms . To build effective technologies for knowledge management , we need to further our understanding of how individuals , groups and organizations use knowledge . Given that more and more knowledge is represented in computer - readable forms , we also need to build tools that can effectively search databases , files , web sites and the like , to extract information , capture its meaning , organ - ize and analyze it , and make it useful . This paper focuses on the concepts used in computer - based informa - tion systems to capture and exploit the meaning of information . Information Science , as it exists today , already provides many of the foundations for knowledge manage - ment . After all , the documentation tradition has a long history of developing methods and practices for or - ganizing the vast expanses of human knowledge so that it is accessible by diverse users . The computational side of Information Science has developed powerful techniques for retrieving documents through different forms of computer - based processing and search ( Buckland , 1999 ) . Information Science has also been build - ing on the technologies of information systems to manage the vast amounts of information – initially for catalogues and bibliographic information , then for full - text documents , and most recently for distributed , heterogeneous information sources . Nevertheless , many significant challenges remain . Historically , Information Science has focused on the “document” as the primary unit of information . Docu - ments have traditionally been paper - based , consisting primarily of published books and articles . The con - tents of such documents have been individually meaningful , at least at a literal , surface level . Deeper mean - ings however do require interpretation in relation to inter - connected documents as well as social and cul - tural contexts . These connections are usually relatively sparse ( e . g . , a few dozen references in an academic article ) and have little built - in semantics . For instance , a reference simply leads to another document , much 1 This is an extended and revised version of : Jurisica , I . , Mylopoulos , J . , Yu , E . , “Using Ontologies for Knowledge Management : An Information Systems Perspective” , Proceedings Annual Conference of the American Society for Information Sciences ( ASIS ' 99 ) , Washington DC , November 1999 . like untyped hypertext links that dominate today’s World Wide Web ( WWW ) . Moreover , documents have traditionally been fairly stable , and new ones took considerable time and effort to create . Finally , documents were primarily used by humans , who read , interpreted and acted on them . The digital media have changed all that . “Documents” can now be arbitrarily large , as they can be compos - ites of volumes or even libraries of material . More importantly , they can be arbitrarily small – paragraphs , text fragments , pieces of data , video or audio clips , etc . They are documents not so much in the common sense usage of the term , but rather logically identifiable and locatable packages of information . This change in the granularity of information units has increased the number of units that need to be managed by many orders of magnitude . In addition , today ' s documents tend to be much more densely connected , referring or relating to each other in multiple ways . Moreover , documents are continuously created and revised , post - it notes are attached , detached , re - attached in a different context , or discarded . Documents can even be active , with em - bedded software code ( e . g . , applets and software agents ) that exhibit dynamic or even self - activating behav - ior . Today’s knowledge work relies heavily on digital media . This means that research on knowledge man - agement must deal with this new , much more demanding notion of a “document” . In contrast , the field of Information Systems has historically started off from the other end of the information unit spectrum . Information in information systems comes in small chunks – e . g . , bank account balances , ticket reservations , etc . Such information can change quickly and frequently , so the management of dynamic information has always been fundamental to information systems . Information items usually need to be in - terpreted in relation to other items , e . g . , “London” by itself on a ticket is quite meaningless unless you know that it is a departure or destination city , on what date , what airline , for which passenger , etc . These relation - ships need to be formally defined so that the network of connected information can be navigated and oper - ated on by automated procedures , in order to produce a ticket within seconds . Now that fast and reliable information processing has become commonplace , people have come to expect equally powerful technolo - gies for managing much more complex knowledge structures . As in the case of Information Science , some foundations have been laid in Information Systems for managing knowledge , but there are considerable challenges too . Perhaps the most important among these is the development of techniques for exploiting meaning to produce computationally useful results . Section 2 of the paper discusses basic approaches to capture the meaning of information , while section 3 introduces ontologies and discusses four categories of ontological elements . In section 4 we discuss applications of ontologies in medicine . Section 5 includes discussion and summarization of the main points of the paper . 2 . EXPLOITING MEANING IN INFORMATION SYSTEMS Interestingly , within the field of Computer Science there has been a gradual movement towards what one might call “knowledge orientation” or " semantic processing " . This has been taking place over the past 20 to 30 years , long before the term or concept of “knowledge management” became fashionable . Although there is no consensus on a notion of knowledge or knowledge - based processing in Computer Science , the terms are used usually in contradistinction with data or data processing to highlight the need to clarify the rela - tionship between symbols stored in computers and what they represent in the world outside . The terms also imply technologies that deal explicitly and formally with the semantics of such representations and their manipulations . An assortment of techniques for representing and managing codified knowledge has emerged from several areas in Computer Science , notably Artificial Intelligence , Databases , Software Engineering , and Information Systems . This movement towards knowledge orientation has not been organized into a coherent research methodology , as it has come about for a variety of reasons . From a practical standpoint , the growing com - plexity of application domains and the increasing intertwining of machine and human processes have all contributed to the recognition of knowledge orientation as a promising research direction that can address open knowledge management problems . However , the movement has also been motivated by the search for solid foundations in various computing disciplines ( Bubenko , 1980 ; Newell , 1982 ; Ullman , 1988 ) . Artificial Intelligence has developed techniques for representing knowledge in forms that can be exploited by computational procedures and heuristics . Research on databases has produced techniques that support the representation and management of large amounts of relatively simple information . Supporting mecha - nisms include relational databases and associated technologies . Software Engineering has developed elabo - rate techniques for capturing knowledge that relates to the requirements , design decisions and rationale for a software system . The area of Information Systems has benefited directly or indirectly from these develop - ments . In computer - based information systems , the meaning of information is usually captured in terms of concep - tual information models that offer semantic terms for modeling applications and structuring information ( My - lopoulos , 1998 ) . These models build on primitive concepts such as entity , activity , agent and goal . In addi - tion , the models support mechanisms for organizing information along generic abstraction dimensions , such as generalization , aggregation and classification ( Mylopoulos , Jurisica & Yu , 1998 ) . Defining terms and mechanisms for information modeling and organization in conceptual models requires assumptions about the applications to be modeled . For example , if we assume that our applications will consist of interrelated entities , it makes sense to build terms such as entity and relationship into our conceptual model , and to allow computation based on the semantics of those terms , i . e . , to support navigation , search , retrieval , up - date , and inference which are consistent with the meaning of those terms . The identification of the right con - cepts for modeling a world for which one would like to do computations ( or knowledge management opera - tions ) has come to be known as an ontology within Computer Science . 3 . ONTOLOGIES Ontology is a branch of Philosophy concerned with the study of what exists . Formal ontologies have been proposed since the 18 th century , including recent ones such as those by Carnap ( 1967 ) and Bunge ( 1977 ) . In Computer Science , ontologies have come in a variety of forms , ranging from lexicons , to dictionaries and thesauri , or even first order logical theories . Lexicons provide a standardized dictionary of terms for use dur - ing , for example , indexing or retrieval . Dictionaries can be organized according to specific relations to form hierarchies ( taxonomies , meronomies , etc . ) . Thesauri add related terms to any given term . In any of these forms , ontologies are useful because they encourage standardization of the terms used to represent knowl - edge about a domain . When ontologies are formalized in first order logic or a subset thereof , they can also support inference mechanisms . For a given collection of facts , these mechanisms can be used to derive new facts or check for consistency . Such computational aids are clearly useful for knowledge management , espe - cially when one is dealing with large amounts of knowledge . For example , if one is interested in health care - related knowledge , then patient , disease , symptom , diagnosis , and treatment might be among the primitive concepts upon which one might want to describe the applica - tion domain . These concepts and their meanings together define an ontology for health care . Such an ontol - ogy can be used as common knowledge that facilitates communication among health workers . It can also be used during development of hospital information systems or decision - support systems . Similarly , an ontol - ogy for manufacturing may include the concepts of ( industrial ) process , resource , schedule , product and the like ( Vernadat , 1996 ) . Brazma et al . ( 2001 ) proposes a flexible and open specification language called MIAME ( Minimum Information About Microarray Experiments ) to represent microarray experiment . Although details for particular experiments may be different , MIAME aims to define the core that is common to most experi - ments . MIAME is not a formal specification language , but a set of guidelines , which encourages users to provide their own qualifiers and values identifying the source of their terminology . It promotes the use of controlled vocabularies and external ontologies . Early work in computational ontologies includes the Cyc project ( Lenat & Guha , 1990 ) and the ARPA Knowledge Sharing effort ( Neches et al . , 1991 ) . The Knowledge Interchange Format effort provides a de - clarative language for describing knowledge ( Genesereth , 1991 ) . Research within Artificial Intelligence has formalized interesting specialized ontologies and has developed techniques for using them to represent and analyze knowledge . Well - designed ontologies need to be address properly deep and long - standing prob - lems in philosophy , such as the problems of identity and unity . The designer of ontologies needs to provide answers to questions such as : • Do entities have any essential properties ? • Does a change of parts affect identity ? • When does an entity count as one ? Guarino and Welty ( 2001 ) offer an elegant account of how such issues can be taken into consideration in the design of taxonomies of concepts . Along a very different path , Wand ( 1989 ; 1990 ) studied the adequacy of conceptual models to describe applications based on a general ontology , such as that proposed by Bunge ( 1977 ) . To characterize and classify current work on ontologies we propose four broad ontological categories , which respectively deal with static , dynamic , intentional and social aspects of the world . Our claim is that for a large class of applications , the representation of relevant knowledge can be based on primitive con - cepts derived from these four ontological categories . For example , if we want to model a university environ - ment , we may choose entities and relations to model static aspects of the domain and processes to model dynamic aspects . For a multi - agent system , on the other hand , we may want to use concepts such as agent , team , goal and social dependency to model social and intentional aspects of the application . Of course , agents and goals could be represented simply as entities . Such representations , however , miss important properties of agency ( e . g . , an agent’s intentionality and autonomy ) and lead to incomplete forms of infer - ence . For example , representations that use elements of dynamic ontologies are amenable to simulation , a special form of inference not supported by static ontologies . Likewise , formal goal models support their own special forms of reasoning – e . g . , ( Giorgini , Mylopoulos , Nicchiarelli , Sebastiani , 2002 ) – that go beyond inference mechanisms for entities and relationships . Our classification of ontological concepts into four categories has been derived from a broad survey of modeling techniques in Computer Science ( Mylopoulos , 1998 ) . The rest of the section briefly reviews the four categories . A static ontology describes things that exist , their attributes and relationships . A dynamic ontology describes the world in terms of states , state transi - tions and processes . An intentional ontology encompasses the world of agents , things agents believe in , want , prove or disprove , and argue about . Finally , a social ontology covers social settings , permanent or - ganizational structures or shifting networks of alliances and interdependencies . 3 . 1 Static Ontologies A static ontology describes static aspects of the world , i . e . , what things exist , their attributes and relation - ships . Most knowledge representation frameworks assume that the world is populated by entities that are endowed with a unique and immutable identity , a lifetime , a set of attributes , and relationships to other enti - ties . Basic as this ontology may seem , it is by no means universal . For instance , Hayes ( 1985 ) offers an on - tology for different classes of applications modeling of material substances where entities ( say , a liter of water and a pound of sugar ) can be merged resulting in a different entity . Also note that some successful models , such as Statecharts ( Harel , 1987 ) , do not support elements from a static ontology , because they are intended for real - time systems . Static ontologies are not trivial . For certain applications it is useful to distin - guish between different modes of existence for entities , including physical existence , such as that of the authors of this paper , abstract existence , such as that of the number 7 , nonexistence , characteristic of Santa Claus or John’s canceled trip to Japan , and impossible existence , such as that of the square root of - 1 or the proverbial square circle ( Hirst , 1989 ) . As an example , a partial static ontology for a hospital expressed in the KAOS modeling language ( Dardenne , van Lamsweerde & Fickas , 1993 ) is presented in Figure 1 . According to the example , an entity Hospital is defined with associated attributes admitted , released , registered , available and specialty . The first three attributes take as values sets of instances of Patient , available takes as values sets of instances of Doctor , and specialty takes as values sets of instances of Subject . The definition includes one set - theoretic invari - ant constraint , which states that admitted is a subset of registered for every instance hosp of Hospital . In addition , admitted and released are mutually exclusive sets at one instance of time . Next we define the rela - tionship class Treating , which relates a patient to a hospital entity , has associated cardinality constraints and an invariant . The invariant states that if a patient is treated in the hospital and the patient is in the hos - pital , then the patient is eventually released . Many domains require support for description and analysis of image data . For example , an ontology for an in vitro fertilization ( IVF ) clinic needs concepts for patient , diagnosis , treatment , and morphological charac - teristics of sperms , oocytes and embryos ( Jurisica et al . , 1998 ) . Spatial information is also important for applications that involve physical world , such as geographic infor - mation systems , e . g . , ( Croner , Sperling & Broome , 1996 ) . Spatial information has been modeled in terms of 2D and 3D points or larger units , such as spheres , cubes , or pyramids . Formal spatial ontologies enable com - putational and reasoning operations such as rotation and occlusion to be provided . One such class of applications deals with representing 2D and 3D formations of proteins . Proteins are large , complex molecules composed of long chains of molecules , called amino acids . They provide the structural components of cells and enzymes for essential biochemical reactions . The subcellular localization of proteins specifies where they are and determines their ability to interact with other proteins and small metabolites in their local envi - ronment . One can then define an ontology for biological function using molecular interactions ( Karp , 2000 ) , which then enables computation with biological function . Subcellular localization of proteins is another key functional characteristic . Gene Ontology addresses this issue at the cellular level by providing a hierarchy of cellular component concepts such as organelles , membranes and protein complexes ( Ashburner et al . , 2000 ) . These concepts are used to annotate the location of gene products ( Xie et al . , 2002 ) . 3 . 2 Dynamic Ontologies Dynamic ontologies describe changing aspects of the world . Typical primitive concepts include state , state transition and process . Various flavors of finite state machines and Petri nets have been offered since the 1960’s as appropriate modeling tools for dynamic discrete processes . Such models are well understood and have been used extensively to describe real - time applications in telecommunications and other fields . State - charts constitute a more recent proposal for specifying large finite state machines ( Harel , 1987 ) . A statechart is also defined in terms of states and transitions , but more than one state may be “on” at any one time , and states can be defined as AND or OR compositions of other statecharts . As a result , statecharts have been proven much more effective in defining and simulating large finite state machines compared to conventional modeling methods . The statecharts model is supported by a popular CASE tool called Statemate . To take another example from the reproductive medicine domain , an IVF procedure consists of patient selec - tion by diagnosis of infertility , controlled ovarian stimulation for multiple oocyte recruitment and maturation , close monitoring of follicular development by ultrasound and hormonal assessment , oocyte retrieval , in - semination of oocytes in vitro , determination of fertilization , assessment of embryo development and qual - ity , assessment of endometrial quality , and intrauterine transfer of one or more cleaved embryos ( Jurisica et Entity Hospital Has admitted , registered , released : setOf [ Patient ] specialty : setOf [ Subject ] , available : setOf [ Doctor ] Invariant ( " hosp : Hospital ) ( hosp . admitted ˝ hosp . registered (cid:217) hosp . admitted ˙ hosp . released = ˘ ) . . . end Hospital Relationship Treating Links Patient [ Role isTreated , Card 0 : : 1 ] Hospital [ Role treats , Card 0 : : N ] Invariant ( " hosp : Hospital , patient : Patient ) ( Treating ( hosp , patient ) (cid:217) patient ˛ hosp . admitted (cid:222) (cid:224) ( patient ˛ hosp . released ) . . . end Treating Figure 1 . An example of a partial static ontology for a hospital in KAOS modeling language ( Dardenne , van Lamsweerde & Fickas , 1993 ) . al . , 1998 ) . During the treatment , decisions at a particular state depend on results of previous states . To de - scribe such a process , we could use the ConGolog language ( Levesque et al . , 1997 ) . ConGolog is a high - level specification language for defining concurrent processes . Primitive actions can be defined in terms of pre - and post - conditions . Primitive actions can be composed into procedures using modeling constructs such as sequencing ( ‘ ; ’ ) , conditional ( if - then ) , iteration ( while < condition > do ) , concurrent activity ( ‘ | | ’ ) , non - deterministic choice ( choose ) , etc . Although ConGolog offers programming language - like structures for de - scribing processes , its distinctive feature is that the underlying logic is designed to support reasoning with respect to process specifications and simulations , even when the initial state for the process is only partially specified . Figure 2 shows how one could use ConGolog to define a process for determining IVF action after successful oocyte fertilization . During the process , the physician has to consider the patient’s characteristics ( her re - sponse to hormonal therapy , treatment history , age , etc . ) and morphological properties of embryos . These two actions are to be carried out in parallel . Since the quality of individual embryos varies , one has to con - sider them iteratively to decide on the action . Temporal information is often needed when describing dynamic worlds . A temporal ontology can be based on time points and associated relations . An event can be represented as a single time point or multiple time points . Relations such as before or after can be used to relate individual points . Allen ( 1984 ) proposes a different ontology for time based on intervals , with thirteen associated relations such as overlap , meet , be - fore , and after . Causality is a concept that is closely related to time . Causality imposes existence constraints on events : if event A causes event B and A has been observed , B can be expected as well , possibly with some time de - lay . For example , if a patient has an oocyte of lower quality , it is expected that it will develop into an embryo of a lower quality . In this context , one may need to explore properties such as probability and transitivity . 3 . 3 Intentional Ontologies Intentional ontologies encompass the world of motivations , intents , goals , beliefs , alternatives , choices , etc . Typical primitive concepts include issue , goal , supports , denies , subgoalOf , agent , etc . An intentional on - tology enables alternate realities to be expressed and reasoned about . The subject of agents having beliefs and goals and being capable of carrying out actions has been studied extensively . For example , Maida procedure determineIVFAction ( patient ) consultPatientFile ( patient ) ; % concurrently obtain patient cahracteristics and embryo morphology [ request ( IVF _ patient _ DB , doPatientAssessment ( patient ) ) ] | | if PatientHasSuccessfulFertilization ( patient ) then [ request ( IVF _ image _ DB , doEmbryoMorphologyAnalysis ( patient ) ) ] ; consultPatientAssessmentReport ( patient ) ; consultMorhologyAnalysisReport ( patient ) ; while ( embryosAvailable ) do [ if highQuality ( embryo ) then freezeEmrbyo ( patient ) ; if lowerQuality ( embryo ) then transferEmbryo ( patient ) ; if lowQuality ( embryo ) then donateEmbryoToResearch ( patient ) ] ; recordFinalReport ( patient ) ; end procedure Figure 2 . ConGolog ( Levesque et al . , 1997 ) specification of the process of IVF action after successful oocyte fertilization . The physician has to in parallel consider patient’s characteristics and morphological properties of embryos . ( 1982 ) addresses the problem of representing propositional attitudes , such as beliefs , desires and intentions for agents . Modeling the issues that arise during complex decision - making is discussed in Conklin and Begeman ( 1988 ) . The application of such a framework to software design , intended to capture the arguments pro and con , and the decisions they result in , has been a fruitful research direction since it was first proposed in Potts and Bruns ( 1988 ) , with notable refinements described in MacLean et al . ( 1991 ) , Lee and Lai ( 1991 ) . For exam - ple , MacLean et al . ( 1991 ) models design rationale in terms of questions ( Q ) , options ( O ) and criteria ( C ) . Figure 3 shows the structure of a decision space concerning the design of an Automated Teller Machine ( ATM ) . The four questions raised , have associated options . Choice among them will be done by using an associated list of criteria . For example , for the question of what range of services will be offered ( by the ATM under design ) , there are two options , full range and cash only , and two criteria for choosing among them . The cash - only option raises an auxiliary question , whether services can be restricted by having switchable machines , where services can be “masked out” , or by having machines which are inherently lim - ited in the services they offer . On a complementary front , Gotel and Finkelstein ( 1995 ) study the types of contributions a stakeholder can make to an argumentation structure such as the one shown in Figure 3 . Q : What range of services to offer ? Q : How to select cash amount ? Q : Where to retrieve cash and receipt from ? Q : How to initiate the transaction ? O : Full range O : Cash only O : Same slot O : Identify customer O : Select cash amount O : Same slot as receipt O : Different slots O : Defaults O : Typing & defaults O : Type in amount C : Speed C : Variety of services Q : How are services restricted ? O : Fixed machines O : Switchable machines C : Fast C : Obvious C : Variety of amount C : Fast C : Low cost C : Obvious C : Fast C : Low error Figure 3 : Modeling design rationale in terms of questions ( Q ) , options ( O ) and criteria ( C ) . The importance of the notion of goals and agents , especially for situations involving concurrent actions , has a long tradition in requirements modeling , beginning with Feather ( 1987 ) and continuing with influential proposals , such as Dardenne ( 1993 ) and Chung ( 1993 ) . Software non - functional requirements ( NFRs ) , such as software usability , security , reliability , user - friendliness , performance , etc . , can be modeled using softgoals ( Chung , 1993 ; Mylopoulos , Chung & Yu , 1999 ) . Softgoals are goals whose criteria for satisfaction are not crisply defined a priori . The softgoal con - cept extends intentional ontologies for capturing design rationale ( Potts & Bruns , 1988 ) . Making available intentional information such as pro and con arguments and resulting decisions can be very useful during design and maintenance of information systems . It has been shown that softgoals can play an important role in many design tasks , by guiding the designer through alternative design choices . Jurisica and Nixon ( 1998 ) show how one would use softgoals to build quality into complex medical decision - support systems . Consider an example of an information system for IVF clinic , with the aim to fulfill both clinical and research purposes . Suppose potential users rate performance as an important factor for the system . Further assume that good performance is characterized as fast response time when accessing patient records , for reasoning as well as patient record updates . This requirement is represented as a softgoal : Time [ Patient Records and Reasoning ] , as shown at the top of Figure 4 . Time is the type of the softgoal and [ Patient Records and Reasoning ] is the topic . This goal may be synergistic or competing with other goals , such as Time [ Research Reasoning ] , which requires fast response time for inference operations done by researchers . Using methods and catalogues of knowledge ( for performance , case - based reasoning , IVF , etc . ) , goals can be refined into more specialized goals . Here , the developer uses knowledge of the IVF domain to refine the time goal for patient information into two subgoals , one for good response time for updating patient records and the other for good response time for the retrieval and decision making process . These two subgoals are connected by an And relationship to the parent goal . This means that if both subgoals are satisficed , then the parent goal is satisficed as well . Since , by nature , softgoals are not formalizable , we say that they are satisficed rather than satisfied . Satisficing implies “good enough” rather than complete solutions to a given problem . The figure also shows an example of recording design rationale – the reasons behind design decisions – using NFR Framework claims ( Chung et al . , 2000 ) . As part of the development graph , recorded claims are available when making further decisions and changes . It is important to note that the developers use their expertise to determine what to refine , how to refine it , to what extent to refine it , as well as when to refine it . The NFR Framework and its associated tool can help the developer do consistency checking and keep track of decisions , but it is the developer who controls development process ( Chung et al . , 2000 ) . 3 . 4 Social Ontologies A social ontology covers social settings , organizational structures , or shifting networks of alliances and interdependencies ( Galbraith , 1973 ; Mintzberg , 1979 ; Scott , 1987 ) . Traditionally , social ontologies have been Figure 4 . Representing performance requirements for an IVF decision - support system using softgoals from the NFR Framework ( Chung et al . , 2000 ) . Non - functional requirements ( initially represented as NFR softgoals ) are refined until implementable solutions are identified ( repre - sented as Operationalizing Softgoals ) . Subgoals may contribute positively or negatively , to dif - ferent extents , towards higher goals – MAKE means sufficiently positive , BREAK means suffi - ciently negative , HELP and HURT denote partial contributions . The contribution types are used to propagate the evaluation of solution alternatives towards the higher goals . characterized in terms of concepts such as actor , position , role , authority , commitment , etc . Speech acts theory offers an ontology for modeling communication among actors ( Medina & Mora , 1992 ) . Social ontolo - gies are also of interest in Distributed Artificial Intelligence . Some of the concepts have been formalized us - ing a specialized logic ( Castelfranchi , 1993 ) . A set of concepts that focus on strategic dependencies between actors is proposed by Yu in the i * frame - work for organization modeling ( Yu , 1993 ; 1995 ) . Such a dependency exists when an actor is committed to satisfying a goal or softgoal , carry out a task , or deliver a resource . Using these concepts , one can create organizational models that provide answers to questions such as “why does a fertility specialist work within a clinic rather than as an independent operator ? ” . Creating these models enables the analysis of an organiza - tional setting , which is an important step in the re - design of business processes and the subsequent development of information systems ( Yu , Mylopoulos & Lesperance , 1996 ) . Reasoning about the inter - dependency relationships among strategic actors is also important for enterprise mo deling and analysis ( Yu , 1999 ) . Health care involves some of the most complex social and organizational structures and processes in our society . In developing systems to support health care , it is important to understand the social context in order to identify and select appropriate technical solutions . Although the social issues can be very complex , adopting a suitable social ontology can provide assistance in organizing and discerning the many issues , and to support analysis and argumentation . Figure 5 shows a simple example of a strategic dependency graph involving three actors : an IVF Patient , a Clinic , and a Fertility Specialist . The patient depends on the specialist to achieve the goal of pregnancy . The clinic depends on the specialist to perform procedures and also to uphold and enhance its good reputa - tion . The specialist depends on the clinic for facilities and remuneration , while the latter depends on the patient for the payment of fees . One can use this kind of social ontology to model and explore alternative approaches to health care delivery . Figure 6 shows alternative arrangements by which health care costs may be covered . The patient’s goal Health Costs Be Covered may be met by paying the clinic directly , by buying private insurance , or by hav - ing the government pay for it via public health insurance . The patient ultimately pays for health costs since every patient is also a taxpayer . The three methods of payment are modeled as tasks in the i * framework . While each task can meet the functional goal that Health Costs Be Covered , they contribute differently to the patient’s non - functional goals . A prominent goal in this context is that the clinic’s services be affordable at the time the need arises . Both insurance approaches provide timely affordability , whereas this is a main drawback of the Pay Direct approach . The public insurance approach contributes negatively to the tax bur - den , while the other alternatives are positive . This type of modeling can help generate the space of alterna - tives to be considered . Goals can be refined into subgoals by elaborating on the network of means - ends Figure 5 . Strategic dependencies between actors . relationships , as illustrated in Figure 4 . The patient may look for other ways to achieve timely affordability ( e . g . , by maintaining personal savings ) , and to reduce tax burden ( e . g . , take advantage of tax incentive schemes ) . In elaborating on the reasoning structure of intentional relationships , the nature of the contribu - tion may not be known initially . In the example of Figure 6 , the contributions of the three payment methods towards reducing overall health costs for the patient are initially unknown . This is because the model has not been sufficiently refined . In this case , the refinement can also be done by considering specialization on the classes of social actors – e . g . , patients as belonging to high or low healthcare usage groups , and tax - payers according to tax brackets . The model needs to be elaborated sufficiently to differentiate among al - ternatives , thus guiding what areas to further explore , until satisfactory solutions are found . In a social con - text , the exploration and consideration of alternatives need to be done from the viewpoint of each of the stakeholders . Their choices and reasoning may influence each other . For example , the government may have to balance many competing goals such as assuring a healthy citizenry , equitable access , and cost con - tainment . Again , classification and specialization may be used to differentiate how different governments and societies may different tradeoffs among goals , and thus focus on different branches when exploring alternatives . More detailed evaluation ( e . g . , quantitative metrics ) may be introduced once the range of alter - natives has been narrowed down to a manageable number . The use of a social ontology aids in identifying the right set of issues to address . The social ontology from i * modeling concepts has been applied to re - quirements engineering ( Yu , 1997 ) , business process analysis ( Yu , Mylopoulos & Lesperance , 1996 ) , manu - facturing ( Petit , 1999 ) , software processes ( Briand et al . , 1998 ) , data warehouse management processes ( Va s - siliadis et al . , 2001 ) , analyzing trust ( Yu & Liu , 2001 , Gans et al . , 2002 ) , and intellectual property management ( Yu , Lin & Li , 2001 ) . Figure 6 . Strategic rationale for patient payment alternatives . As an example for another social ontology intended for a different level of analysis , we may consider the Action Workflow approach to business process modeling ( Flores et al . , 1988 ; Medina - Mora et al . , 1992 ; Agostini et al . , 1993 ; Denning & Medin - Mora , 1995 ) . The focus here is on the coordination among social actors interacting in a collaborative work process . The primary unit for modeling is the cycle of events that take place between someone who wants to get something done ( the customer ) and the person who provides that service or product ( the performer ) . The cycle is taken to consist of four phases : requesting , committing , performing , and acceptance . Diagrammatically , a four - phased loop is drawn between the names of the cus - tomer and the performer , with the work to be done identified in the middle . Delegation and other auxiliary processes can occur at any of the four phases , depicted as branching and returning arrows from the loop . Figure 7 shows an example of an Action Workflow model for a dental treatment that involves a pre - authorization from the insurance company during the agreement phase in the main loop , and a delegation to the lab for part of the work during the performance phase . The analysis focuses on identifying who are the relevant actors involved in a workflow , who is the customer and who is the performer for each relationship , whether the four phases are properly attended to in each customer - performer relationship , and what breakdowns might occur and where . This approach differs from more conventional workflow modeling techniques that provide basically dynamic ontologies , e . g . , activity sequences , synchronization , and information flow . The Action Workflow approach focuses instead on so - cial mechanisms such as negotation , commitment , coordination , and evaluation and satisfactory achieve - ment of results . On the other hand , constructs from intentional ontologies such as goals or decision criteria , means - ends relationships and alternatives are not explicitly incorporated . A more detailed comparison with the i * approach may be found in ( Yu , 1995b ) . Figure 7 . An Action Workflow model . 4 . DEVELOPMENT AND APPLICATION OF ONTOLOGIES IN MEDICINE For a given domain , the representation of relevant knowledge can be based on primitive concepts derived from any one or all of the proposed four ontological categories . Regardless of which category is used to cover particular application domain , information system development benefits from using tools that support ontology design and integration processes . For example , DAML and OIL define a semantic markup lan - guage for Web resources ( Connolly et al . , 2001 ; Horrocks et al . , 2002 ) . DAML ( the DARPA Agent Markup Language ) has been designed as an extension of XML ( eXtended Markup Language ) and RDF ( Resource Description Framework ) . It offers a language and tools developed to facilitate the concept of the semantic web . OIL ( an Ontology Interface Layer ) provides classification using constructs from frame - based AI , com - bined with the expressiveness and reasoning power of description logics . DAML + OIL provides modeling primitives similar to ones defined in frame - based languages , and a set of constructs for creating ontologies . Ontolingua supports authoring ontologies by providing tools for assembling and enhancing a library of modular , reusable ontologies ( Gruber , 1992 ) . Once ontologies are defined for one or several domains , they may be organized into libraries , thereby enhancing their reusability ( Heijst et al . , 1995 ) . Such libraries can be used to build information systems by supporting requirements acquisition and design ( Tu et al . , 1995 ) . When ontologies get large , tools must be used for their management . Analysis tools can help with ontology verification and validation . Verification checks whether an ontology ( or any formal model , for that matter ) satisfies particular constraints . For example , verification tools can check cardinality constraints for entity - relationship models or semantic consistency of rules and constraints such as “patient cannot have more embryos than she had oocytes” . Validation checks the consistency of a model with respect to its applica - tion . Since the application is informal , validation has to be done manually , or at best semi - automatically . Other supporting tools include ontology editors , viewers and servers to support creation , maintenance and use of ontologies ( Cimino , 2000 ; Kahn , 1998 ) . For example , NEON ( Networked - based Editor for ONtologies ) has been designed to standardize radiology appropriateness criteria ( Kahn , 1998 ) . Individual concepts are represented in a semantic network and the system supports import and export of ontologies using SGML . Individual entities include concept name , abbreviation , synonym , and links such as affectedBy , hasPart , partOf and imagedBy . This approach can help to not only standardize terminology but also organize exis t - ing vocabularies . On the application side , the most prevalent ontology - based activity is developing static ontologies , such as taxonomies or controlled vocabularies ( Ashburner et al . , 2000 ; Gennari , 1995 ; Godfray , 2002 ; Musen , 1998 ; Musen , 2002 ; Oliver , 1998 ) . The goal is to standardize terminology and taxonomically organize concepts in specific domains to enable information sharing and system cooperation . For example , an agent in a system for medical diagnosis may use an ontology of clinical concepts , both during structured data entry and deci - sion support . A diagnostic agent may need to cooperate with a bibliographic agent that uses an ontology for bibliographies to associate literature references with particular diseases . Over the years , many of these static ontologies turned into standard medical vocabularies , such as the In - ternational Classification of Diseases ( ICD - 9 - CM ) , Systematized Nomenclature of Human and Veterinary Medicine ( SNOMED ) , Medical Subject Headings ( MeSH ) , Read Codes of clinical terms , Current Procedural Terminology ( CPT ) , Unified Medical Language System ( UMLS ) , Generalized Architecture for Languages , Encyclopedia and Nomenclatures in medicine ( GALEN ) , etc . However , none of these standards is suffi - ciently comprehensive and accepted to meet the full needs of the electronic health record ( Shortliffe , 1998 ; Langlotz et al . , 2002 ; Strang et al . , 2002 ) . Despite standardization efforts , combining and synchronizing individual versions of existing medical vo - cabularies remains an open problem ( Oliver , 1998 ) . For this reason , the National Library of Medicine has created a UMLS ( Humphreys , 1998 ) , which is a composite of about 60 vocabularies that contain 870 , 853 concepts and 2 . 27 million concept names in its source vocabularies ( UMLS 2002 AC ) . UMLS is available via an UMLS knowledge source server ( UMLSKS ) that provides a set of web - based interaction tools as well as an API to access the UMLS biomedical terminologies . The current UMLSKS release comprises three knowl - edge sources : UMLS Metathesaurus ( UMLS - MT ) , Semantic Network ( UMLS - SN ) and Specialist Lexicon ( UMLS - SL ) . UMLS - MT comprises information about biomedical concepts from diverse controlled vocabu - laries , as well as classifications used in patient records , administrative health data , bibliographic and full - text databases , and decision - support systems . A consistent categorization of all concepts from UMLS - MT is supported by semantic types defined in UMLS - SN . The links between the semantic types represent rela - tionships in the biomedical domain and thus provide the structure for the Network . UMLS - SL is an English language lexicon containing syntactic , morphological , and orthographic information for biomedical con - cepts . The Medical Ontology Group of the Italian National Research Council has been working on integrating and reusing existing terminological ontologies in medicine ( Steve , Gangemi & Pisanelli , 1997 ) . Steve et al . have designed an ontology library ON9 , which is written in Ontolingua ( Gruber , 1992 ) and Loom ( MacGregor , 1993 ) . It includes thousands of medical concepts and organizes them into domain , generic and meta - level theories . They use a methodology called ONIONS to aid construction of ontologies starting from existing , contextually heterogeneous terminologies . This work led to a successful integration of five medical termi - nology systems : the UMLS - SN ( about 170 semantic types and relations , and their 890 defined combina - tions ) , SNOMED - III ( about 600 most general concepts ) , Gabrieli Medical Nomenclature ( about 700 most general concepts ) , ICD10 ( about 250 most general concepts ) , and the Galen Core Model - 5g ( about 2000 items ) . Another problem that must be addressed is complexity of controlled medical vocabularies . It is important to provide tools and techniques to facilitate the design and organization of such vocabularies . Earlier models , such as ICD - 9 - CM , DSM , SNOMED , and Read codes Version 2 ( CTV2 – Clinical Terms Version 2 of the Read Codes ) use the code not only to identify a concept uniquely , but also to indicate where a concept lies in the hierarchy , which thus has a tree structure . As a result , particular concept can be associated only with one node of the hierarchy . In addition , the number of levels in the hierarchy is usually limited , since existing codes have a fixed number of alphanumeric characters and each character indicates a level . For example , A - - - specifies infectious and parasitic diseases , A1 - - specifies tuberculosis , A130 specifies tuberculosis meningi - tis , while F00 - in a different part of the hierarchy specifies bacterial meningitis , and F004 meningitis - tuber - culous . This results in duplication where the same concepts are represented by two different codes . Alterna - tively , some systems do not use code to indicate hierarchical location , e . g . , Read codes Version 3 ( CTV3 ) , the MED ( Medical Entities Dictionary ) and SNOMED - RT . The alphanumeric codes are a label for the con - cept and no longer represent the hierarchical relationship . Li . et al . ( 2002 ) describes a DAG structure enrich - ment of the tree - structured Semantic Network of the UMLS . Gu et al . ( 1999 ) proposes a methodology to par - tition vocabularies into contexts where each context contains an isA tree hierarchy . Liu et al . ( 1999 , 2002 ) shows how to partition an existing MED dictionary , which comprises 48 , 000 concepts , over 61 , 000 isA links and over 71 , 000 additional links ( e . g . , categoryOf , roleOf ) . Based on the partioning into sets of concepts with the same sets of properties , MED has been implemented using a commercial object - oriented database management system ( ONTOS ) . Ontologies are also becoming an integral part of bioinformatics since they encourage common terminology for describing complex and evolving biological knowledge ( Schulze - Kremer , 1998 ; Stevens et al . , 2002 ) . On - tologies can be used to support a common access to diverse information repositories . One such example from biology is called TAMBIS – Transparent Access to Multiple Bioinformatics Information Sources ( Baker et al . 1998 ) . In this work , a uniform global schema and query interface is achieved by using an ontol - ogy ( called TaO ) that describes diverse bioinformatics tasks and resources ( Baker et al . 1999 ) . The TaO schema does not have materialized instances . Instead , instances are extracted from several distributed data - bases . Along similar lines , Boulos et al . ( 2002 ) describes the use of Doublin Core for creating a semantic medical web , to link medical web resources in a novel way to support enhanced retrieval and navigation . A step further in this direction is PharmaGKB , frame - based ontology for pharmacogenomics ( Oliver et al . , 2002 ) , which was designed to support heterogeneous data integration and data acquisition . Automating data acquisition and ontology creation further requires text mining and natural language processing ( Hahn , Romacker & Schulz , 2002 ) . The trend is slowly moving into automating the process of ontology creation and using the existing ontologies during reasoning and simulation . This trend will result in development of new ontologies , especially dynamic and intentional . Application of reasoning systems in medicine will require introduction of social ontologies . 5 . DISCUSSION Current literature on knowledge management generally agrees that the main challenges ahead lie in the realm of organizational culture and practices ( Ruggles , 1998 ) . However , the impact and potential of advanced in - formation technologies , both positive and negative , should not be underestimated . Given today’s vast , complex and dynamic information environments , the potential for using information technology to help dis - cover , deliver and manage knowledge is enormous ( Jurisica et al . , 2001 ) . Unfortunately , the pitfalls are also plentiful . This is why the complementary use of concepts and techniques from information science and in - formation systems is crucial . The ontological approach with an information modeling bias described in this paper derives its power from formal models of domain knowledge . Such models can be formally analyzed and processed for useful pur - poses . However , many domains resist precise formalization . In such domains , formalization can become a straitjacket . For this reason , formal modeling techniques need to be integrated with informal ones . For in - stance , the Unified Modeling Language ( UML ) has gained a foothold in software engineering practice , even though parts of it are informal . Informal models can help understanding a domain and bring consensus among collaborating software engineers . The challenge is therefore to blend the two approaches so that they can be used together in a seamless way . For example , consider the design of a form . If the content of the form fields can be arbitrary text strings , then there is little to be formalized . Consequently , little computational leverage can be derived from the formaliza - tion . At the same time , such a format is highly flexible and can accommodate a broad range of inputs . How - ever , if a field content is restricted to a finite set of pre - defined values , which obey specific rules , these rules can facilitate automated consistency checking , albeit at a loss in flexibility . In an e - mail message , the format of the address and date fields is formally defined and can be operated on by automated procedures , such as those for routing and sorting . One can hardly imagine an e - mail system that requires human intervention to interpret addresses to manually sort and route the mail through the Internet . To gain the benefit of speedy communication , we have learned to live with the inflexibility of formally defined email addresses . The mes - sage body , however , is arbitrary text that requires human interpretation . When one is faced with thousands of messages week after week , some kind of technology support becomes desirable . There can be many shades in between full formalization ( and the computational support it entails ) and no formalization , as well as many forms of interactive , semi - automated support . One can do string - based re - trieval , filter out unwanted messages , or file them automatically into pre - defined folders . To do more power - ful processing , one would need to attribute more meaning to the content . For example , one could define pat - terns , which would be recognized as dates within a message body . One could define concepts related to meetings so as to recognize meeting announcements . One could then have reminders automatically inserted into an appointments calendar . In order to achieve this , one needs to define an ontology of appointment dates ( the concept of dates and available time slots in the context of appointments ) , and perhaps also an ontology of meeting scheduling – what constitutes a scheduling conflict , when is a meeting room available , who can approve or cancel a scheduled meetings , and the like . This example illustrates that ontologies are often not about an objective world , but are based on social con - ventions and agreements . Concepts , meanings , and interpretations are relative to some community and can change over time . Community boundaries and identities can also be dynamic . Here again , the experience and expertise in Information Science for dealing with much more open - ended kinds of human knowledge can be invaluable . Technical frameworks are increasingly paying attention to these factors , as exemplified in the intentional and social ontologies outlined above . However , technological support for dealing with these issues , such as contextual mechanisms for knowledge scoping and sharing , multiple perspectives and mean - ings , negotiation support , knowledge evolution , etc . , can only be partial – again due to inherent limits to the formalization of human knowledge . 6 . CONCLUSIONS The technologies of information systems have been progressing at a rapid pace . Information systems are now being called upon to support knowledge management , and not just to process data or information . Many advances contribute to taking information systems beyond mere data into the realm of knowledge . These include : cooperative query processing ( Chu et al . , 1996 ) , similarity - based retrieval and browsing ( Jurisica , Glasgow & Mylopoulos , 2000 ) , data mining and knowledge discovery ( Jurisica et al . , 2001 ) , text understanding ( Hahn , Romacker & Schulz , 2002 ; Riloff , 1996 ) , data translation services ( Gruber , 1993 ) , and knowledge sharing ( Orthner , Scherrer & Dahlen , 1994 ) , to name a few . However , the key to providing useful support for knowledge management is founded on how meaning is embedded in information models as defined in terms of ontologies . In this paper , we have surveyed some of the basic concepts found under four ontological categories . We outlined the benefits and limitations of the ontology - based approach , and argued for the need to combine techniques from Information Science and Information Systems . Acknowledgements . Greg McArthur offered valuable feedback to an earlier draft of this paper . This research has been supported in part by the Natural Sciences and Engineering Research Council ( NSERC ) of Canada , Communication and Information Technologies Ontario ( CITO ) , and the Institute for Robotics and Intelligent Systems ( IRIS ) . REFERENCES Agostini , A . , G . De Michelis , M . A . Grasso , S . Patriarca , Reengineering a business process with an innova - tive workflow management system : a case study , Proceedings of the Conference on Cooperative Office Computing Systems , ( COOCS ' 93 ) , Hayward , CA November 1993 , 154 - 165 . Allen . ( 1984 ) . Towards a general theory of action and time . Artificial Intelligence , 23 , 123 - 154 . Ashburner , M . , C . A . Ball , et al . ( 2000 ) . Gene ontology : tool for the unification of biology . The Gene Ontol - ogy Consortium . Nature Genetics 25 ( 1 ) : 25 - 9 . Baker , P . G . , A . Brass , S . Bechhofer , C . Goble , N . Paton , and R . Stevens ( 1998 ) . TAMBIS : Transparent Access to Multiple Bioinformatics Information Sources . An Overview . In Proceedings of the Sixth International Conference on Intelligent Systems for Molecular Biology ( ISMB ' 98 ) , pages 25 - 34 , Menlow Park , California , AAAI Press . Baker , P . G . , C . A . Goble , S . Bechhofer , N . W . Paton , R . Stevens , and A Brass ( 1999 ) . An Ontology for bioin - formatics Applications . Bioinformatics , 15 ( 6 ) : 510 - 520 . Boulos , M . , A . Roudsari , et al . ( 2002 ) . Towards a semantic medical Web : HealthCyberMap ' s tool for building an RDF metadata base of health information resources based on the Qualified Dublin Core Metadata Set . Med Sci Monit 8 ( 7 ) : MT124 - 36 . Brazma , A . , P . Hingamp , et al . ( 2001 ) . Minimum information about a microarray experiment ( MIAME ) - toward standards for microarray data . Nature Genetics 29 ( 4 ) : 365 - 71 . Bubenko , J . A . ( 1980 ) . Information Modeling in the Context of System Development , in Proceedings IFIP Congress , pp . 395 - 411 . Buckland , M . ( 1999 ) . The Landscape of Information Science : The American Society for Information Science at 62 . J . Amer . Soc . Info . Sci . , Special Issue . Bunge . ( 1977 ) Treatise on Basic Philosophy : Ontology I - The Furniture of the World . Reidel . Carnap , R . ( 1967 ) The Logical Structure of the World : Pseudoproblems in Philosophy . University of Cali - fornia Press . Castelfranchi , C . & Mueller , J . - P . , ( Eds ) . ( 1993 ) . From Reaction to Cognition . Fifth European Workshop on Modeling Autonomous Agents in a Multi - Agent World , MAAMAW ' 93 , Neuchatel , Switzerland , August 25 - 27 , 1993 . Published as Lecture Notes in Computer Science , 957 . Springer . Chu , W . W . , H . Yang , K . Chiang , M . Minock , G . Chow & C . Larson . ( 1996 ) . CoBase : A scalable and extensi - ble cooperative information system . Journal of Intelligent Information Systems , 6 . Chung , L . ( 1993 ) . Representing and Using Non - Functional Requirements : A Process - Oriented Approach . Ph . D . thesis , Department of Computer Science , University of Toronto . Chung , L . , Nixon , B . A . , Yu , E . & Mylopoulos , J . ( 2000 ) . Non - Functional Requirements in Software Engi - neering . Kluwer . Cimino , J . J . ( 2000 ) . From data to knowledge through concept - oriented terminologies : experience with the Medical Entities Dictionary . J Am Med Inform Assoc 7 ( 3 ) : 288 - 97 . Clamen , S . M . ( 1994 ) . Schema evolution and integration . Distributed and Parallel Databases . 2 ( 1 ) : 101 - 126 . Coetzee , S . & Bishop , J . ( 1998 ) . A new way to query GISs on the Web . IEEE Software , 1998 . 15 ( 3 ) : 31 . Conklin , J . & Begeman , M . ( 1988 ) . gIBIS : A hypertext tool for exploratory policy discussion . Transactions on Office Information Systems , 6 ( 4 ) , 281 - 318 . Connolly , D . , van Harmelen , F . , Horrocks , I . , McGuinness , D . L . , Patel - Schneider , P . F . , & Stein L . A . ( 2001 ) . DAML + OIL ( March 2001 ) Reference Description . Croner , C . M . , Sperling , J . , & Broome , F . R . ( 1996 ) . Geographic information systems ( GIS ) : New perspectives in understanding human health and environmental relationships . Stat Med , 15 ( 17 - 18 ) : 1961 - 77 . Curtis , B . , Kellner , M . , & Over , J . ( 1992 ) . Process modeling . Communications of the ACM , 35 ( 9 ) . Dardenne , A . , van Lamsweerde , A . , & Fickas , S . ( 1993 ) . Goal directed requirements acquisition . Science of Computer Programming , 20 , 3 - 50 . Denning , Peter , and Raul Medina - Mora , Completing the Loops , Interfaces 25 : 3 May - June 1995 , 42 - 57 . Falasconi , S . & Lanzola , G . ( 1997 ) . Ontology and terminology servers in agent - based health - care information systems . Methods Inf Med , 36 ( 1 ) : 30 - 43 , . Feather , M . , ( 1987 ) . Language support for the specification and derivation of concurrent systems . ACM Transactions on Programming Languages , 9 ( 2 ) , 198 - 234 . Fensel , D . M . & Rousset , C . ( 1998 ) . Workshop on comparing description and frame logics . Data & Knowl - edge Engineering , 25 ( 3 ) : 347 - 352 . Flores , Fernando , Michael Graves , Brad Hartfield and Terry Winograd , Computer systems and the design of organizational interactions , ACM Transactions on Office Information Systems 6 : 2 ( April , 1988 ) , 153 - 172 . Galbraith , J . ( 1973 ) . Designing Complex Organizations . Addison Wesley . Genesereth , M . R . ( 1991 ) . Knowledge Interchange Format . Principles of Knowledge Representation and Rea - soning , Proceedings of the Second International Conference , Cambridge , MA , pp . 599 - 600 , Morgan Kauf - mann . Gennari , J . H . & Oliver , D . E . ( 1995 ) . A web - based architecture for a medical vocabulary server . 19 th Annual Symposium on Computer Applications in Medical Care , New Orleans , LA . Giorgini , P . , Mylopoulos , J . , Nicchiarelli , E . , Sebastiani , R . ( 2002 ) . Reasoning with Goals . Proceedings Twenty - First International Conference on Conceptual Modeling ( ER ' 02 ) , Tampere , October 2002 . Godfray , H . C . ( 2002 ) . Challenges for taxonomy . Nature 417 ( 6884 ) : 17 - 9 . Gotel , O . and Finkelstein , A . ( 1995 ) Contribution structures . Proceedings Second IEEE International Sympo - sium on Requirements Engineering , York , England . Gruber , T . R . ( 1992 ) . Ontolingua : A mechanism to support portable ontologies . Technical Report KSL - 91 - 66 , Stanford University , Knowledge Systems Laboratory . Gruber , T . R . ( 1993 ) . A translation approach to portable ontology specification . Knowledge Acquisition , 5 ( 2 ) : 199 - 220 . Gu , H . , Perl , Y . , Geller , J . , Halper , M . & Singh , M . ( 1999 ) . A methodology for partitioning a vocabulary hierar - chy into trees . Artificial Intelligence in Medicine , 15 , pp . 77 - 98 . Guarino , N . and Welty , C . ( 2000 ) . Ontological analysis of taxonomic relations . A . Länder and V . Storey ( eds . ) , Proceedings of ER - 2000 : The International Conference on Conceptual Modeling , Springer Verlag LNCS 1920 . Hahn , U . , M . Romacker , et al . ( 2002 ) . Creating knowledge repositories from biomedical reports : the MEDSYNDIKATE text mining system . Pac Symp Biocomput : 338 - 49 . Harel , D . ( 1987 ) . State charts : A visual formalism for complex systems . Science of Computer Programming , 8 . Hayes , P . ( 1985 ) . The second naive physics manifesto . In Hobbs , J . & Moore , R . ( Eds . ) . Formal Theories of the Commonsense World , Ablex Publishing Corp . , Norwood , N . J . , 1 - 36 . Heijst , G . Van , Falasconi , S . , Abu - Hanna , A . , Schreiber , G . & Stefanelli , M . ( 1995 ) . A case study in ontology library construction . Artificial Intelligence in Medicine , 7 , pp . 227 - 255 . Hewett , M . , D . E . Oliver , et al . ( 2002 ) . PharmGKB : the Pharmacogenetics Knowledge Base . Nucleic Acids Res 30 ( 1 ) : 163 - 5 . Hirst , G . ( 1989 ) . Ontological assumptions in knowledge representation . Proceedings First International Conference on Principles of Knowledge Representation and Reasoning , Toronto , 157 - 169 . Horrocks , I . , P . F . Patel - Schneider , and F . van Harmelen . ( 2002 ) . Reviewing the Design of { DAML + OIL } : An Ontology Language for the Semantic Web . Presented at 18th Nat . Conf . on Artificial Intelligence ( AAAI’2002 ) . Humphreys , B . L . & Lindberg , D . A . ( 1998 ) . The Unified Medical Language System : An informatics research collaboration . Journal of the American Medical Informatics Association , 5 ( 1 ) : 1 - 11 . Jurisica , I . , Rogers , P . , Glasgow , J . , Collins , R . , Wolfley , J . , Luft , J . , DeTitta , G . T . ( 2001 ) . Improving objectivity and scalability in protein crystallization : Integrating image analysis with knowledge discovery . IEEE Intelli - gent Systems Journal , Special issue on Intelligent Systems in Biology , November / December , pp . 26 - 34 . Jurisica , I . , Rogers , P . , Glasgow , J . , Fortier , S . , Luft , J . , Wolfley , J . , Bianca , M . , Weeks , D . , DeTitta , G . T . ( 2001 ) . Intelligent Decision Support for Protein Crystal Growth . IBM Systems Journal , Special issue on Deep Computing for Life Sciences , 40 ( 2 ) : 394 - 409 . Jurisica , I . , Glasgow , J . & Mylopoulos , J . ( 2000 ) . Building Efficient Conversational CBR Systems . Incremental Iterative Retrieval and Browsing . International Journal of Applied Intelligence 12 , 251 - 268 . Jurisica , I . & Nixon , B . ( 1998 ) . Building quality into case - based reasoning systems . In Lecture Notes in Com - puter Science , Conference on Advance Information Systems Engineering , CAiSE ' 98 . Pisa , Italy : Springer - Verlag , pp . 363 - 380 . Jurisica , I . , Mylopoulos , J . , Glasgow , J . , Shapiro , H & Casper , R . ( 1998 ) . Cased - based reasoning in IVF : Pre - diction and knowledge mining , Artificial Intelligence in Medicine , 12 ( 1 ) : 1 - 24 . Kahn , C . ( 1998 ) . An Internet - based ontology editor for medical appropriateness criteria . Computer Methods and Programs in Biomedicine , 56 , pp . 31 - 36 . Karp , P . D . ( 2000 ) . An ontology for biological function based on molecular interactions . Bioinformatics 16 ( 3 ) : 269 - 85 . Langlotz , C . P . and S . A . Caldwell ( 2002 ) . The completeness of existing lexicons for representing radiology report information . J Digit Imaging 15 Suppl 1 : 201 - 5 . Lee , J . and K - Y . Lai . ( 1991 ) . What is design rationale ? . Human - Computer Interaction 6 ( 3 - 4 ) . Lenat , D . B . , & Guha , R . V . ( 1990 ) . Building Large Knowledge Bases . Addison - Wesley , Reading , MA . Levesque , H . , Reiter , R . , Lesperance , Y . & Lin , F . ( 1997 ) . GOLOG : A logic programming language for dynamic domains . Journal of Logic Programming , pp . 59 - 84 . Li , Z . , Perl , Y . , Geller , J . , Halper , M . , Cimino , J . J . ( 2002 ) . Enriching the structure of the UMLS Semantic Net - work . Proc . of the 2002 AMIA Annual Symposium , Nov 2002 , pp 939 - 943 . Liu , L . , Halper , M . , Geller , J . , Perl , Y . ( 1999 ) . Controlled Vocabularies in OODBs : Modeling Issues and Imple - mentation . Parallel and Distibuted Databases , 7 ( 1 ) : 37 - 65 . Liu , L . , Halper , M . , Geller , J . , Perl , Y . ( 2002 ) . Using OOBD Modeling to Partition a Vocabulary into structur - ally and Semantically Uniform Concept Groups . IEEE Transactions on knowledge and data engineering , 14 ( 4 ) : 850 - 866 . MacGregor , R . M . ( 1993 ) . Representing reified relations in Loom . Journal of Experimental and Theoretical Artificial Intelligence . 5 : 179 - 183 . Maida , A . & Shapiro , S . ( 1982 ) . Intensional Concepts in Propositional Semantic Networks . Cognitive Sci - ence , 6 , 291 - 330 . MacLean , A . , R . Young , V . Bellotti , and T . Moran . ( 1991 ) . Questions , options , criteria : Elements of design space analysis . Human - Computer Interaction 6 ( 3 - 4 ) . Medina - Mora , R . , Winograd , T . , Flores , R . & Flores , F . ( 1992 ) . The Action Workflow Approach to Workflow Management Technology . Proc . Conf . on Comp . Supported Cooperative Work , pp . 281 - 288 . Mintzberg , H . ( 1979 ) . The Structuring of Organizations . Prentice Hall . Musen , M . A . ( 1998 ) . Modern architectures for intelligent systems : Reusable ontologies and problem - solving methods . AMIA Fall Symposium , Orlando , FL . Musen , M . A . ( 2000 ) . Design and use of clinical ontologies : curricular goals for the education of health - telematics professionals . Stud Health Technol Inform 72 : 40 - 7 . Musen , M . A . ( 2002 ) . Medical informatics : searching for underlying components . Methods Inf Med 41 ( 1 ) : 12 - 9 . Mylopoulos , J . ( 1998 ) Information modeling in the time of the revolution . Information Systems , 23 ( 3 / 4 ) : 127 - 155 . Mylopoulos , J . , Chung , L . & Yu , E . ( 1999 ) . From Object - Oriented to Goal - Oriented Requirements Analysis . Communications of the ACM , 42 ( 1 ) : 31 - 37 . Mylopoulos , J . , Jurisica , I . & Yu , E . ( 1998 ) . Computational mechanisms for knowledge organization . Proceed - ings of the 5 th International Conference of the International Society on Knowledge Organization ( ISKO ' 98 ) , Lille , France , Ergon Verlag . Neches , R . , Fikes , R . , Finin , T . , Gruber , T . , Patil , R . , Senator , T . , & Swartout , W . R . ( 1991 ) . Enabling technol - ogy for knowledge sharing . AI Magazine , 12 ( 3 ) : 16 - 36 . Newell , A . ( 1982 ) . The Knowledge Level , Artificial Intelligence , 18 ( 1 ) : 87 - 127 . Oliver , D . E . ( 1998 ) . Synchronization of diverging versions of a controlled medical terminology . Stanford , CA , Stanford University School of Medicine , Technical Report SMI 98 - 0741 . Oliver , D . E . , Shahar , Y . , Shortliffe , E . H . & Musen , M . A . ( 1999 ) . Representation of change in controlled medical terminologies , Artificial Intelligence in Medicine , 15 , pp . 53 - 76 . Oliver , D . E . , D . L . Rubin , et al . ( 2002 ) . Ontology development for a pharmacogenetics knowledge base . Pac Symp Biocomput : 65 - 76 . Orthner , H . F . , Scherrer , J . R . & Dahlen , R . ( 1994 ) . Sharing and communicating health care information : sum - mary and recommendations . Int J Biomed Comput . 34 ( 1 - 4 ) : 303 - 318 . Potts , C . & Bruns , G . ( 1988 ) . Recording the reasons for design decisions . Proceedings of the 10 th Interna - tional Conference on Software Engineering , Singapore . Rector , A . L . & Bechhofer , S . B . ( 1997 ) . The GRAIL concept modeling language for medical terminology . Artificial Intelligence in Medicine , 9 , pp . 139 - 171 . Rillof , E . ( 1996 ) . An empirical study of automated dictionary construction for information extraction in three domains . Artificial Intelligence in Medicine , 85 , pp . 101 - 134 . Rubin , D . L . , Hewett , M . , Oliver , D . E . , Klein , T . E . & Altman , R . B . ( 2002 ) . Automating data acquisition into ontologies from pharmacogenetics relational data sources using declarative object definitions and XML . Pac Symp Biocomput , 88 - 99 . Rubin , D . L . , Shafa , F . , Oliver , D . E . , Hewett , M . & Altman , R . B . ( 2002 ) . Representing genetic sequence data for pharmacogenomics : an evolutionary approach using ontological and relational models . Bioinformatics 18 Suppl 1 , S207 - 15 . Ruggles , R . ( 1998 ) . The State of the Notion : Knowledge Management in Practice . California Management Review , 40 , 3 . Schulze - Kremer . S . ( 1998 ) . Ontologies for Molecular Biology . In Proceedings of the Third Pacific Sympo - sium on Biocomputing , pages 693 - 704 . AAAI Press . Scott , W . ( 1987 ) . Organizations : Rational , Natural or Open Systems . Prentice Hall , second edition . Shortliffe , E . H . ( 1998 ) . The evolution of health - care records in the era of the Internet . MEDINFO ' 98 . Steve , G . , Gangemi , A . & Pisanelli , D . M . ( 1997 ) . Integrating medical terminologies with ONIONS methodol - ogy . http : / / www . saussure . irmkant . rm . cnr . it / onto / publ / onions97 / onions97 . pdf . To be published by IOS - Press . Stevens , R . , C . Goble , et al . ( 2002 ) . Building a bioinformatics ontology using OIL . IEEE Trans Inf Technol Biomed 6 ( 2 ) : 135 - 41 . Strang , N . , M . Cucherat , et al . ( 2002 ) . Which coding system for therapeutic information in evidence - based medicine . Comput Methods Programs Biomed 68 ( 1 ) : 73 - 85 . Studer , R . & Benjamins , V . R . ( 1998 ) . Knowledge Engineering : Principles and methods . Data & Knowledge Engineering , 25 ( 1 - 2 ) : 161 - 197 . Tu , S . W . , Eriksson , H . , Gennari , J . H . , Shahar , Y . & Musen , M . A . ( 1995 ) . Ontology - based configuration of problem - solving methods and generation of knowledge - acquisition tools : Application of PROTEGE - II to protocol - based decision support . Artificial Intelligence in Medicine , 7 , pp . 257 - 289 . Ullman , J . D . ( 1988 ) . Principles of database and knowledge - base systems , vol . 1 , Computer Science Press . Vickery , B . C . ( 1997 ) , Ontologies , Journal of Information Science , 23 ( 4 ) : 277 - 286 . Vernadat , F . ( 1996 ) . Enterprise Modeling and Integration , Chapman & Hall . Wand , Y . ( 1989 ) . A proposal for a formal model of objects . In Kim , W . & Lochovsky , F . ( Eds . ) . Object - Oriented Concepts , Databases and Applications . Addison - Wesley . Wand , Y . & Weber , R . ( 1990 ) . An ontological model of an information system . IEEE Transactions on Soft - ware Engineering , 16 , 1282 - 1292 . Xie , H . , A . Wasserman , et al . ( 2002 ) . Large - scale protein annotation through gene ontology . Genome Res 12 ( 5 ) : 785 - 94 . Yu , E . ( 1993 ) . Modeling organizations for information systems requirements engineering . Proceedings IEEE International Symposium on Requirements Engineering , San Diego , IEEE Computer Society Press , pp . 34 - 41 . Yu , E . ( 1995 ) . Modeling Strategic Relationships for Process Reengineering . Ph . D . thesis , Department of Computer Science , University of Toronto . Yu , E . ( 1995b ) . Models for Supporting the Redesign of Organizational Work . Proceedings , Conf . on Organ - izational Computing Systems ( COOCS ' 95 ) August 13 - 16 , 1995 , Milpitas , California , USA . pp . 225 - 236 . Yu , E . ( 1999 ) . Strategic Modeling for Enterprise Integration . Proceedings 14 th World Congress of the Inter - national Federation of Automatic Control , July 5 - 9 , 1999 , Beijing , China . Yu , E . , Mylopoulos , J . & Lesperance , Y . ( 1996 ) . AI Models for Business Process Reengineering . IEEE Ex - pert : Intelligent Systems and Their Applications , 11 ( 4 ) , pp . 16 - 23 .