January / February 2009 1541 - 1672 / 09 / $ 25 . 00 © 2009 IEEE 37 Published by the IEEE Computer Society S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n Semantic Support for Quantitative Research Processes Hajo Rijgersberg , Jan Top , and Marcel Meinders , Wageningen University and Research Centre The proposed Ontology of Quantitative Research lets scientists express the meaning of data and models and supports automated invocation of computational methods from a conceptual level . S cientific research aims to describe and understand real - world phenomena and their underlying mechanisms in a transparent , reproducible way . Expressing this knowledge quantitatively lets scientists abstract the information in terms of objec - tified mathematics and numbers . Quantitative research expresses scientific knowledge in quantities , units of measurement , measurement scales , mathematical relations and operations , ta - bles , graphs , and so on . Computer tools process the numerical data . Both science and engineering have used computers primarily for numerical processing for years , and this usage has determined scientific software’s development direction . However , the downside of emphasizing numeri - cal aspects of data and models is that most contex - tual knowledge remains implicit . By stating PV = nRT in a scientific publication , we assume that the reader recognizes the ideal gas law , but this isn’t guaranteed in any way . Moreover , if we provide a table with numbers expressing a set of associated observations , a correct interpretation requires con - siderable context information on the quantities used , units , experimental setup , assumptions , and so on . In the case of individual research or small teams , personal memory and contacts might be sufficient to provide the missing information . However , this doesn’t scale in today’s global collaborations . The current volume and complexity of scientific infor - mation is so large that computer support is becom - ing ever more important , not only with respect to numerical data but also in terms of the contextual interpretation . Over the past five years , we’ve supported exper - imental food scientists in working together across locations , projects , and disciplines . We’ve observed that ways of sharing quantitative information are certainly not self - evident . Generally speaking , quantitative information ( such as in experimen - tal data , mathematical equations , programming code , data files , and graphs ) is difficult to find , in - terpret , and execute . For example , scientists might not be able to interpret numbers for lack of clarity about the units of measurement or the method used to measure certain properties . Often they can’t ex - ecute a model because it isn’t in a suitable input for - mat for the preferred mathematical software and so requires manual adaptation . Although neither com - pleteness in all contextual details nor full automa - tion is feasible , opportunities for improvement in this situation are abundant . To express contextual scientific information , we need a suitable vocabulary . M . V . Krishnamurthy 38 www . computer . org / intelligent Ieee InTeLLIGenT SySTeMS S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n and Francis Smith have argued that con - ventional computer languages aren’t fit for specifying scientific knowledge . 1 This holds even if we consider only quantitative scientific knowledge . For example , if we look at how models are usually specified , we see that it’s mostly in terms of program - ming code , with little or no explanation of variables or contextual assumptions . The programming code only expresses numeri - cal processing . Data is usually specified in spreadsheets in free formats or in databases with assumed interpretation of the tables and fields . Explanatory information usually remains at the level of papers and reports , which are only loosely coupled to the un - derlying quantitative information . 2 As far as we know , there is no extensive research into the requirements and design of a comprehensive quantitative research vocabulary . To take a step in this direction , we discuss some key elements of the quan - titative research process and build a model of quantitative research according to estab - lished tenets of the philosophy of science . On the basis of this model , we design an on - tology for quantitative research and demon - strate its adequacy for expressing scientific research in food science ( see the sidebar ) . Finally , we report on the ontology’s appli - cation in Quest , a prototype quantitative e - Science tool . Quantitative Research Considerations Before expanding on the ontology and its application , let’s first look further at quan - titative research to explain our overall view on this subject . Quantitative research follows a certain structured , often iterative process whereby scientists evaluate evidence , refine hypoth - eses and theories , and advance knowledge in the field . Of course , this procedure isn’t rigid in practice because it involves trial and error , unexpected findings , and organiza - tional and socioeconomic issues . Figure 1 shows an example overall pro - cess structure . The process order in this graph is less important than the steps it con - tains because the steps determine the con - tent and structure of the ontology proposed later . We base this figure on the work of Hugh Gauch 3 and Pat Langley . 4 It includes the following steps : Formulate a research question based on a specific context and existing knowl - edge reported in text . A research ques - tion is usually an open statement , which additional hypotheses and assumptions specify further . An example question in our food research case was , “Which fac - tors control sensory creaminess of may - onnaise ? ” Researchers subsequently de - compose questions into subquestions , until they reach a level where they hope to find some kind of answer . Select and define the objects and phe - nomena to be studied—in our case , may - onnaise , the different kinds ( for example , commercial and specially prepared ) , and ingredients such as oil and egg yolk . Define quantitative concepts ( parameters , variables , and measures ) to measure the studied phenomena and to quantify the • • • Experimental design Studied situation Data ( extensive ) Supported hypothesis Generic model Knowledge in text Realize Data ( extensive ) Perform measurements Process / simulate Test and revise hypothesis Generalize / conclude Describein text Reproduce Studied phenomenon Research question Quantitative concepts Hypothesis Models , assumptions Hypothetical data ( extensive ) Formulate research question Define quantitative concepts Formulatehypothesis Collect data and models Predict from hypothesis Design experiment Qualitative concepts Define qualitative concepts Figure 1 . Typical structure of the quantitative research process . Ellipses denote research steps ; rectangles are real - world phenomena and statements . Arrows indicate input / output relations . In daily practice , researchers will perform steps in different order , repeat some steps , omit others , and so on . January / February 2009 www . computer . org / intelligent 39 relations between them . Parameters in our example include oil content , creami - ness , and viscosity . Formulate hypotheses—for example , “Fat controls sensory creaminess . ” Model the studied phenomena and col - lect available data and models from literature . Derive a hypothetical “fact”—preferably a more specific statement that can actu - ally be tested experimentally ( in reality or by simulation ) to support or reject one or more hypotheses . For example , “Fat controls the sensory creaminess of these six mayonnaise samples . ” Compare such a fact to available or newly obtained data or models . Researchers must often design experiments for this purpose . Construct the studied phenomenon , usu - ally in a laboratory setting . In our exam - ple , the researchers prepared different mayonnaise samples with differences in oil content . Observe or measure the phenomena of interest—in this case , a trained sensory panel tested the creaminess of the may - onnaise samples . Process the obtained data , using sta - tistical methods or model simulations . Creaminess was related to oil content us - ing principal component analysis ( PCA ) , a mathematical method that transforms a number of possibly correlated variables into a ( smaller ) number of uncorrelated variables . Compare the processed data or mod - els with the hypothesis , which is sub - sequently considered to be supported , rejected , or revised . In our research ex - ample , the hypothesis was considered to be supported on the basis of the result that oil content explained more than 98 percent of the creaminess variance . Generalize the obtained knowledge—for example , the relation also applies to other foods and other conditions . Many pub - lications omit making this step explicit , making it unclear under which conditions the generalization is allowed . Describe and publish the results , meth - ods , and ideas , enabling other research - ers to Interpret and ( sometimes ) experimentally reexamine them . This framework isn’t the only way to categorize scientific activity . The ultimate • • • • • • • • • • • model of scientific research is still a subject of debate in epistemology and the philoso - phy of science—for example , see Alexander Hars 5 and John Sowa . 6 Computer Support of Quantitative Research We can view the decomposition as a work - flow model . Many tools and methods are available to support workflows , but we would like their significance toned down in scientific practice . First , workflow tools that support docu - ment flow in organizations are probably too rigid for scientific process dynamics . They are typically designed for administrative processes where , for example , authoriza - tion is important . This isn’t the highest con - cern in science , although a mechanism for registering claims would be most welcome . But more important , these workflow sys - tems don’t explicitly use scientific notions such as hypothesis , model , and theory . We don’t know of any realistic experiment in this direction . Another type of workflow tool focuses on chaining computational methods . Such tools are relevant to our approach because they also automate the invocation of such meth - ods . We have applied Taverna—a promi - nent workflow tool for Web services—to access and control services related to units of measurement ( conversion , consistency of equations , and so on ) . The Quest tool we de - scribe later in this article implements work - flow control in this sense . However , chain - ing computational steps is not enough in itself for representing the full scientific pro - cess . Some steps , such as experiments and creative thinking , necessarily take place outside the computer . A proper approach should enable both types of workflow in a highly flexible way . On the basis of the sketchy model given in Figure 1 , we can show how the computer supports quantitative research in general at this time . To this end , we first aggregate various steps : Formulate research questions and hypo - theses . Collect data and models . Design an experiment or observation . Realize the intended physical phenomena and laboratory conditions . Perform measurements . Analyze the obtained data . Test the hypothesis ; generalize and re - port the results . With this simplified workflow model of quantitative research , we can position the tools and systems presently used in sci - ence . For example , researchers use comput - ers to store background information , which is usually specified in text documents— papers , reports , logs , and so on . They sometimes specify experimental infor - mation formally—for instance , in labora - tory information management systems . For • • • • • • • M odern food science aims to identify new material , mechanisms , and processes to support development of high - quality food products . Con - cerns about obesity have increased interest in reducing the fat or oil content of food products without loss of sensory pleasure . This is difficult be - cause oil plays an important role in the perceived creaminess of many products . Creaminess appears to be a highly appreciated sensation in taste perception . The aim of the study considered in this article was to better control creami - ness of food products . To this end , the researchers had to first understand the concept of creaminess . They did this through sensory experiments conducted by expert panels . Subsequently , they had to find the parameters that affect cream - iness , such as rheological and mechanical properties under deformation—for example , viscosity , stress , and shear moduli . They used instrumental measure - ments to determine these parameters . The study focused on mayonnaises and custards . 1 Reference 1 . R . A . De Wijk and J . F . Prinz , “Fatty versus Creamy Sensations for Custard Desserts , White Sauces , and Mayonnaises . ” Food Quality and Preference , vol . 18 , 2007 , pp . 641 – 650 . food Science research example 40 www . computer . org / intelligent Ieee InTeLLIGenT SySTeMS S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n measurements and logging observations , they use data acquisition systems that con - tain logic and analysis software to improve data quality . Researchers often store their measure - ments ( raw data ) in spreadsheets and dedi - cated databases . They perform subsequent computations in spreadsheet tools or sta - tistical and mathematical packages such as SPSS , R , Matlab , or Mathematica , or in dedicated software implementations . These computations are numerical , which means that the quantitative data are in stripped form , leaving only what is needed to per - form calculations on . The computational methods themselves are usually specified in computer code . Researchers can also use computational - workflow software such as Kepler and Taverna to control these com - putations . The results are usually stored in specific file formats , spreadsheets , and da - tabases again . These different systems are seldom tightly linked . Whether the results include contextual information and explanations depends on the respective researcher’s me - ticulousness and are mostly specified in nat - ural language . Some software packages do have support at a more conceptual level , but this support is normally an intrinsic part of the software and can’t be extended to other systems . As a result , a computer can’t ad - equately specify the full extent of quan - titative research , at least not in a way that would realize integral computer support . The Semantic Web offers the possibility to define vocabulary external to computer systems . It accomplishes this using lan - guages such as XML , RDF , and OWL . The use of standard formats and vocabulary is an important prerequisite for sharing vocab - ulary across multiple computer systems and platforms and , therefore , for reusing infor - mation . Well - known mathematical Seman - tic Web initiatives in the area of e - Science are OpenMath and MathML . Currently , these approaches are extended toward units of measure and related concepts , such as quantities and dimensions . Two examples of upper ontologies intended as foundations for computer information processing sys - tems are SUMO ( suggested upper merged ontology ) and OpenCyc . Applied scientific disciplines such as geoscience and bioinfor - matics also create scientific vocabularies . 4 , 7 A Quantitative Research Model To create a vocabulary for quantitative re - search , we need some understanding of the fundamental mechanisms of scientific re - search , in addition to the practical work - flow we presented earlier . Constructing a model of science has been a major topic in the philosophy of science for a long time . However , an ultimate model hasn’t yet been achieved . So , we should be under no illu - sion as to whether we can build the ultimate model of science in our quest to develop e - Science tools and vocabularies . However , any vocabulary should draw carefully on the established philosophy of science where possible . In particular , we should explore the quantitative aspects of science in this model more deeply . Philosophers like Karl Popper , Ernest Nagel , Robert Dubin , and Mario Bunge have played a dominant role in developing a scientific research model . 5 In general , such models distinguish three key concepts : the physical phenomena under consi - deration , statements about these phenomena , and reasoning steps and activities that lead to these statements . Many philosophical models don’t promi - nently feature the third concept—that is , the reasoning steps and activities that lead to statements about phenomena . The analy - ses mostly stay at an abstract level and are concerned with major argumentation struc - tures . Although also relevant for e - Science , such philosophical studies don’t give de - tailed observations at the operational level . Stipulating the underlying obtainment pro - cesses is crucial to automating the interpre - tation of scientific knowledge . Only after you’ve detailed the processes can you gen - erate reasoning steps and statement chains to reflect realistic workflows ( such as in Figure 1 ) . Other e - Science researchers , such as Boyan Brodaric , 7 have also recognized the importance of modeling scientific rea - soning processes . For our purpose here , we consider only those elements of the philo - sophical accounts that we view as relevant to operational e - Science . Popper’s model is the most well - known . 8 Figure 2 illustrates it in simplified form . In this model , the notion of an “occurrence” refers to a physical phenomenon in the real world . On the other hand , Popper also de - fines “concepts . ” A “statement” describes relationships between occurrences and con - cepts . Popper distinguishes different kinds of statements—in particular , laws and hy - potheses . He defines theories as systems ( or collections ) of statements and methodolo - gies as a special kind of theory . Nagel 9 and Dubin 10 propose some mod - ifications to Popper’s model , but we won’t consider them further in this article . Bunge presents a considerably more extended model ; 11 for example , he defines the con - cept “datum . ” He also clearly indicates that data have a basis in the form of scientific experiences , such as observation , measure - ment , and the actions they involve . Data are evidence for statements . Figure 3 illus - trates Bunge’s model . Like Figure 2 , Fig - ure 3 is simplified ; in particular , we show those concepts that correspond to concepts in Popper’s model . • • • < c o n t a i n s Theory Occurrence Hypothesis Law Statement Methodology Concept Figure 2 . A simplified UML class diagram of Karl Popper’s model of scientific research . An “occurrence” refers to a real - world phenomenon . January / February 2009 www . computer . org / intelligent 41 Given these two models , we propose a combined view that also lets us add some operational concepts needed in e - Science practice . Like Popper , we define occurrences and statements in our model ( see Figure 4 ) . Inspired by Bunge , we define an additional class , “scientific reasoning . ” Scientific rea - soning operations produce statements that are based on already existing statements and occurrences . Occurrences are inputs to measurements and observations , making the transition from real - world phenomena to the descriptions of these phenomena . In our approach , the different subclasses of scientific reasoning can have a number of properties . For example , “hypothesis formu - lation” has a property , “hypothesis . ” Such properties indicate the input or output of a particular reasoning step . In the same way , some reasoning steps have theories or laws as output properties ( not shown in the fig - ure ) , such as “theory formulation” and “law formulation . ” We did this because a state - ment can have different levels of validity within different studies or scientific reason - ing steps . For example , a statement that’s considered a hypothesis in one study might be a proven fact ( or rather , a supported hy - pothesis ) in another . In existing models of the scientific process , hypothesis , law , and theory usually appear as classes . The disad - vantage of such an approach is that a state - ment can play only a single role at a time , given the class assigned to it . One of the Figure 4 model’s aspects needs specific attention . This is related to the general question of how to link software procedures to ontologies . In modern quan - titative research , computational methods play a central role . To appreciate and verify quantitative statements that originate from numerical computations requires knowing which computational routine has been used , from which package , and so on . Therefore , a quantitative research ontology should con - tain knowledge about software , functions , services , and other such computational methods and tools . Usually , an ontology implements numerical methods as wrap - pers around external calculation algorithms , using interface variables to connect to in - puts and outputs . We assert that regardless of the nature of the computational method , the ontology must provide and store the val - ues of the interface variables directly at the ontology’s instance level . This requirement is important when developing the actual vocabulary . Building a Quantitative Vocabulary The Ontology of Quantitative Research ( OQR ) is based on the model illustrated in Figure 4 and the additional requirement of invocation of computational methods . Figure 5 shows the OQR’s structure . We < evidence for g e n e r a t e d b y > involves > < c o n t a i n s Theory Measurement Observation Experiment Concept Variable Factual hypothesis Law Scientific experience Datum Action Figure 3 . A simplified UML class diagram of Mario Bunge’s model of scientific research . < contains < c o n t a i n s h y po t h es i s > Statement Occurrence Concept Hypothesis formulation Observation Measurement Computation Scientific reasoning … < m e a s u r e m e n t Figure 4 . A simplified UML class diagram of our proposed model . Scientific reasoning ( and activities ) are more prominent in this model . Statement roles , such as hypotheses and laws , are modeled as properties ( or relations ) rather than classes . 42 www . computer . org / intelligent Ieee InTeLLIGenT SySTeMS S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n deliberately organize the subontologies in categories , not hierarchically as they would be in when specified as subclasses . Figure 6 shows some of the ontology’s classes and properties . OQR is modeled in OWL . The ontology consists of five modules : Scientific reasoning . This subontology includes scientific reasoning operations and activities such as hypothesis test - ing , measurement , deduction , and defi - • nition . Together with the computations subontology , this module relates to “sci - entific reasoning” at the center of the proposed model for science illustrated in Figure 4 . Quantities and related concepts . This module includes units of measure , mea - surement scales , dimensions , and so on . The subontology is based on existing e - Science approaches , such as EngMath , 12 and is published separately as the Ontology • of Units of Measure ( OUM ) and related concepts . Together with the “mathematical concepts” and “programming constructs” subontologies , this ontology corresponds to the “concept” in the proposed model . Mathematical concepts . This subon - tology defines elementary mathemati - cal operations and concepts , such as mathematical relations , arithmetic , logic , and numbers . It’s based on existing ap - proaches such as OpenMath , MathML , • Mathematicalrelations Matlab 7 . 0 . 4 elfun functions Matlab 7 . 0 . 4 ops functions … … … … Scientificreasoning • Deduction • Measurement • Evaluation • Literature reference • Experiment • Derivation • Inference • … • Array • List • Table • … • If - then • While • Repeat • … • Plus • Minus • Times • … • Abs • Exp • Sin • … • Addition • Subtraction • Multiplication • … • Zero • One • Two • … • And • Or • Not • … • Equation • Greater than • Inequation • … Quantities and related concepts Arithmetic Numbers Logic Mathematicalconcepts Data structures Controlflow Quantitativeresearch Programmingconstructs Computations Figure 5 . The structure of the Ontology of Quantitative Research ( OQR ) . Arrows indicate import ( subontology ) relations . Thing Object property Datatype property OWL Number ontology Arithmetic ontology Number Logic ontology Logical implication Data structures ontology Table Addition Subtraction … … … Arithmetic ontology Term … Scientific reasoning ontology Hypothesisformulation … Replicatenumber … Mathematical relation ontology Equation Inequation … Quantities and related concepts ontology Mass … Unit of measure Quantity … Figure 6 . A UML class diagram of the OQR . Only a limited number of classes and subontologies are shown . January / February 2009 www . computer . org / intelligent 43 and mathematical constructs in program - ming languages . The “ Mathematical relations” subontology contains equa - tions , inequalities , and the like and cor - responds to the class “statement” in the proposed model . The rest of this subon - tology , together with the quantities and related concepts and the programming constructs subontologies , correspond to “concept” in the proposed model . Programming constructs . This subontol - ogy defines abstract computer program - ming statements and data structures , such as if - then , while , table , and array , together with mathematical constructs required in specifying computational al - gorithms . The subontology is based on existing programming languages . Computations . This module contains mathematical and statistical methods im - plemented in specific computer languages , such as Matlab and R . This subontology implements specific reasoning steps in terms of numerical computations . For ex - ample , computing the values of a time - de - pendent equation is a form of deduction , which is common practice in quantitative research . Together with the Scientific rea - soning subontology , the Computations subontology corresponds to “scientific reasoning” in the proposed model . OQR doesn’t include subclasses of spe - cific physical phenomena ( “occurrences” ) . As Figure 7 shows , specific studies must import subject - related ontologies together with OQR . An important OQR principle is that mathematical and programming constructs can have implementations in external ap - plication software . For example , “addition” can employ “plus” of the “Matlab 7 . 0 . 4 ops functions”—a computations subontology— as its underlying method ( Figure 8 ) . In this • • way , quantitative concepts are executable , and a quantitative e - Science tool that uses OQR , such as Quest , can be equipped with this external application software . When researchers invoke computational methods , they should be able to set the methods’ input and output variables . Inter - facing to a method means that ( some of ) its aspects are given specific values . For this purpose , we model variables as properties ( in OWL ) . When a computer system exe - cutes an operation , it replaces the specified variables by their values and evaluates the operation . Because quantities might be used as input or output variables , we have also modeled them as properties . OQR Food Science Example We can now illustrate the use of OQR with our food science example ( see the sidebar ) . We specify the case of creaminess in may - onnaises and custards in further detail and see how well the vocabulary fits the case . First , we need to borrow vocabulary on specific food products , measuring devices , and other concepts that aren’t part of the ge - neric OQR . We import such ontologies , to - gether with OQR , into a dedicated ontology created specifically for this research case ( see Figure 7 ) . Figure 9 illustrates how to specify the research study : Figure 9a . We start by formulating ( 1 ) our hypothesis ( 2 ) and deriving ( 3 ) a hy - pothetical fact ( 4 ) . Figure 9b . Subsequently , we create six mayonnaise samples ( 5 ) and a trained sensory panel ( 6 ) as phenomena . The six mayonnaise samples are created as “These used ingredients” ( 7 ) , in a table that is also specified . This table and the • • mayonnaise samples are related ( 8 ) in the sense that the samples occur in some of the table cells . The trained panel judges the samples ( 9 ) . The “panel” property ( 10 ) of “These trained sensory panel judgments” is set to “This trained sensory panel . ” The six mayonnaise samples are input ( 11 ) to the judgment , and sensory data ( 12 ) are obtained as output ( 13 ) . Figure 9c . Next , we process the data and calculate mean values . We constructed an extended version of the averaging op - eration to define the table variables over which the averaging has taken place , called “mean per over . ” A mean - per - over instance ( 14 ) has the sensory data as its input ( 15 ) and returns ( 16 ) the results of computing the proper average values ( 17 ) . Figure 9d . These data are input ( 18 ) to a PCA routine ( 19 ) , which returns oil - fat content ( 20 ) as the first principal compo - nent ( 21 ) . The “explanation percentage” is 98 percent ( 22 ) . Figure 9e . Finally , our hypothesis is con - sidered to be supported ( 23 ) , which ev - idence is added ( 24 ) to the particular statement . In summary , the basic steps of the scien - tific process in this example are properly reflected in the OQR’s different formal concepts . All concepts needed for this and similar cases are available . Of course , OQR might not yet cover all cases , but the cur - rent structure provides a convenient starting point for extending the ontology . The Quest Prototype Tool Application We used the OQR to implement the soft - ware demonstrator Quest for supporting • • • Study “Causes of creaminess of mayonaise and custard” Measuringinstruments Food OQR . . . Figure 7 . The OQR and other ontologies in a dedicated research ontology . Arrows indicate import ( subontology ) relations . Arithmetic Matlab 7 . 0 . 4 ops functions Addition Term1Term2 … Plus Varargin … bod y / m e t hod > Term1 plus term2 Varagin : Term1 Varagin : Term2 imports Figure 8 . A UML class diagram of an OQR implementation of the mathematical concept “addition” in Matlab . The grey arrow at the bottom indicates an import ( subontology ) relation . 44 www . computer . org / intelligent Ieee InTeLLIGenT SySTeMS S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n Thing ( a ) Derivation 3 . This derivation < Output < Input Hypothesis formulation 1 . A hypothesis formulation 2 . Fat controls sensory creaminess Subject : Oil - fat content Object : Mayonnaise 4 . Fat controls sensory creaminess Subject : Oil - fat content Object : These six mayonnaise samples Controls < Output Thing Sensory panel Mayonnaise Table Observation Table Mean per over Observation Judgment HasPanel ( c ) ( d ) ( e ) 15 . < Input 18 . < Input 16 . < Output 14 . This mean per over operation 17 . These mean sensory data 12 . These sensory data Thing PCA 19 . This PCA Observation 98 % Quantity Object property 20 . Oil - fat content 17 . These mean sensory data Thing Considered to be supported 22 . Explanation percentage > 21 . PC 1 > < 24 . Subject < Output PCA 19 . This PCA Hypothesis formulation 1 . A hypothesis formulation 23 . A considered to be supported Controls 2 . Fat controls sensory creaminess Subject : Oil - fat content Object : Mayonnaise < Evidence Thing ( b ) Trained sensory panel judgment 10 . < Panel 8 . 11 . < Input 6 . This trained sensory panel 13 . < Output 7 . These used ingredients 12 . These sensory data 5 . These six mayonnaise samples 9 . These trained sensory panel judgments Table Measure Figure 9 . A UML class diagram specifying the creaminess of mayonnaises and custards in OQR . Instances and properties are underlined . Details for figure components ( a ) through ( e ) are called out in bullets in the main text . January / February 2009 www . computer . org / intelligent 45 quantitative e - Science . Figure 10 shows a screenshot of the implementation . In the prototype system , you can instan - tiate the concepts needed to describe a cer - tain scientific situation and execute computa - tional processes that derive new statements . The top - left pane in the figure shows the OQR concepts available , and the bottom - left pane shows the selected concept in its con - text . The right pane shows details of the se - lected concept . The figure shows a selected instance of “mean per over . ” This class com - putes the average values for a selected set of quantities , skipping some irrelevant quanti - ties . In this case , averages are computed for all quantities in the table for each type of mayonnaise , while skipping the quantities’ judge , replication , and presentation position . The latter represent the experimental setup and aren’t part of the observed quantities . The computation assumes input in the form of an instance of “table , ” which in turn is a specific kind of statement . The input properties of the method “mean per over” are further restricted , such that the mathematical software can perform the operation—that is , execute the calculation routine . The proper - ties “input table , ” “per , ” and “over” are speci - fied in , respectively , a table of measurements , the class “model mayonnaise , ” and some objects over which we wish to calculate the mean—namely , “replicate , ” “judge , ” and “presentation position . ” Pushing the “eval - uate” button generates a new output table , which the prototype automatically translates into a new statement in the ontology . Quest applies OQR to support the user applying computational methods . When the user invokes an external numerical method , Quest strips OQR’s semantically rich quan - titative information to a numerical level . After the numerical method has returned the answer , Quest upgrades the result again ( or rather , regrades it ) to the OQR seman - tic level , adding units of measurement and so on . At this time , we assume that tools such as Quest handle this issue specifically for each required numerical method . In the future , such tools can use standard terms to indicate how to automatically translate ev - ery particular variable on the basis of the input and output variables as specified by the numerical software routines . This is still a research topic . We evaluated Quest in an iterative pro - cess with representatives from the intended target group . To these users , the demon - strated way of invoking computational methods appeared intuitive . They appreci - ated the model of science used by Quest and the additional feature to define interface variables ( and quantities ) as properties . Further Quest development must visual - ize the reasoning steps and statements . How should we show quantitative research infor - mation to the user ? We must represent de - tails in an orderly way , while keeping all relevant information within view . The re - search map in the bottom - left pane of Figure 10 helps in this task by showing the selected concept in its context . It shows a workflow diagram that includes the statements that follow from every scientific reasoning step or activity ( and can be input to the follow - ing step ) . We would like to transform the diagram into something that looks more like a real road map and supports zooming in or out , depending on the required over - view level . We also need to show more de - tails than just scientific reasoning and state - ments . In our user environment , “overview” is the most frequently requested feature . O ur proposed model of science fea - tures scientific reasoning and ac - tions prominently . This is important with regard to research transparency in general and to interpreting the validity of scientific knowledge statements in particular . Imag - ine that we could set future science publi - cations in the form of ontological models in the spirit of OQR rather than in natural language . These “active” articles would tre - mendously expand the possibilities to link , verify , and apply expressed knowledge . We don’t claim to have yet reached this state of maturity with OQR , but we do believe it provides more than a starting point for such an approach . The model also represents hypotheses , laws , and theories as roles in scientific rea - soning , rather than independent concepts . This is important because scientific state - ments are always set within the scope of a certain scientific reasoning or study . Some - thing that’s a theory in one scientific school might be a ( yet unsupported ) hypothesis in another . OQR differs from existing approaches to implementing e - Science tools in its sup - port for executing quantitative operations . For this purpose , as we already mentioned , we define interface variables of compu - tational methods as properties . Scientists specify the values of these properties when a method is instantiated in the ontology . Figure 10 . Prototype Quantitative e - Science Tool ( Quest ) . The user selects a scientific reasoning operation , “Mean per Ma - series or Mb - series mayonnaise over replicate , judge , and presentation position , ” which then processes a table containing judges’ sensory observations on several mayonnaise samples . 46 www . computer . org / intelligent Ieee InTeLLIGenT SySTeMS S e m a n t i c S c i e n t i f i c K n o w l e d g e i n t e g r a t i o n The properties then appear as inputs and outputs of the underlying computational methods . Furthermore , the ontology’s mathematical and programming constructs can have implementations in any external software . We admit that modeling quantities as properties is a daring approach , but we have good reasons to do so . We can use quan - tities as interface properties of computa - tional methods just as we can use variables in general . From the viewpoint that prop - erties are relations and quantities are nor - mally classes ( or instances of classes ) , this might seem strange . In a way , a quantity is a strange thing indeed because it links the variable aspect , which should be quantified ( the metrological aspect ) , to the phenom - enon that this aspect relates to . For exam - ple , the mass of a table is a quantity that has “table” as a phenomenon rather than a table that has “mass” as a metrological aspect . We can still add many mathematical op - erations and computational functions of specific software packages to the OQR , but our objective isn’t to be complete in this sense . We extend OQR on an as - needed basis , and others are free to propose their contributions as well . The proposed ontol - ogy can serve as a discussion vehicle and a step toward an improved , extended ontol - ogy of science . The model still needs the “method development” concept , an impor - tant pillar in scientific research , as well as “study” and “research” as classes . Scientific reasoning and scientific activities should be distinguished and , subsequently , linked to each other . Now such concepts ( for exam - ple , “induction” and “experiment” ) are not distinguished . We have demonstrated the quality of OQR on a detailed research case . That the design fits this specific research case is an important result , a step forward , because the matter has proved to be difficult , espe - cially considering the many years of epis - temological research in modeling science . Science ontologies are only beginning to be designed and used in e - Science . As more developers realize the use of a collective and independent vocabulary in research supporting computer applications , the im - pact on scientific research and engineering practice could be huge . Acknowledgments We carried out this work within the context of the Virtual Laboratory for e - Science project ( VL - e , www . vl - e . nl ) , in the Food Informatics subprogram . The project was supported by a BSIK grant from the Dutch Ministry of Educa - tion , Culture and Science and was part of the EU’s Information and Communication Tech - nologies innovation program of the Ministry of Economic Affairs . The Dutch Ministry of Ag - riculture provided additional funding . Thanks to the anonymous reviewers of the article’s first version for valuable comments and reflections . References 1 . M . V . Krishnamurthy and F . J . Smith , “In - tegration of Scientific Data and Formulae in an Object - Oriented Knowledge - Based System , ” Knowledge - Based Systems , vol . 7 , no . 2 , 1994 , pp . 135 – 141 . 2 . R . M . Keller and J . L . Dungan , “Meta - Mod - eling : A Knowledge - Based Approach to Facilitating Process Model Construction and Reuse , ” Ecological Modelling , vol . 119 , 1999 , pp . 89 – 116 . 3 . H . G . Gauch , Scientific Method in Practice , Cambridge Univ . Press , 2003 . 4 . P . Langley , “The Computational Support of Scientific Discovery , ” Int’l J . Human - Com - puter Studies , vol . 53 , 2000 , pp . 393 – 410 . 5 . A . Hars , “Designing Scientific Knowledge Infrastructures : The Contribution of Epis - temology , ” Information Systems Frontiers , vol . 3 , no . 1 , 2001 , pp . 63 – 73 . 6 . J . F . Sowa , “The Challenge of Knowl - edge Soup , ” Research Trends in Science , Technology and Mathematics Education , J . Ramadas and S . Chunawala , eds . , Homi Bhabha Centre for Science Education , 2006 , pp . 55 – 90 ; www . hbcse . tifr . res . in / episteme1 / all - proceedings . pdf . 7 . B . Brodaric , Science Knowledge Infra - structure Ontology , v . 3 . 0 , tech . report UKeS - 2008 , Nat’l e - Science Inst . , 2008 . 8 . K . Popper , The Logic of Scientific Discov - ery , 3rd ed . , Hutchinson , 1968 . 9 . E . Nagel , The Structure of Science , Har - court , Brace & York , 1961 . 10 . R . Dubin , Theory Building . Free Press , 1978 . 11 . M . Bunge , Philosophy of Science , vols . 1 – 2 . Transaction Publishers , 1998 . 12 . T . R . Gruber and G . R . Olsen , “An Ontol - ogy for Engineering Mathematics , ” Proc . 4th Int’l Conf . Principles of Knowledge Representation and Reasoning , Morgan Kaufmann , 1994 . For more information on this or any other com - puting topic , please visit our Digital Library at www . computer . org / csdl . t h e a u t h o r S Hajo rijgersberg is a researcher at Wageningen University & Research Centre’s Agrotechnol - ogy and Food Sciences Group in the Department of Information Management , and a PhD student in computer science at Vrije Universiteit Amsterdam . His research interests vary from informa - tion analysis to computer system design and development and include e - Science and risk analysis of food safety in supply chains . Contact him at hajo . rijgersberg @ wur . nl . Jan Top is a professor of knowledge management at Vrije Universiteit Amsterdam , and a re - search coordinator at Wageningen UR . He is also the project manager for knowledge transfer at Top Institute Food and Nutrition . His research focuses on developing Semantic Web technology , with applications in the agricultural and food domain . He is particularly interested in e - Science as a way to support ( food ) research and knowledge transfer to industry . Top received his PhD in computer science from Twente University . Contact him at jan . top @ wur . nl . Marcel Meinders is a senior researcher at Wageningen University & Research Centre and TI Food and Nutrition . His research interests include the behavior of complex systems , including the structure - function relationships of complex food systems such as foams and emulsions , sys - tem Earth , and the mechanical and fracture properties as well as water absorption and transport properties of cellular solid foods . Meinders received his PhD in solid - state physics from the Uni - versity of Groningen . Contact him at marcel . meinders @ wur . nl . next issue : ai & cultural heritage This issue will explore the problems and solutions of cultural heritage in the digital age . To what extent can computers , and particularly knowledge - based technologies , facilitate authentication , preservation , and archiving of physical and digital artifacts ? www . computer . org / intelligent