Working Paper Series H EARIN C ENTER F OR E NTERPRISE S CIENCE HCES - 08 - 03 A New Modeling and Solution Approach for the Number Partitioning Problem by Bahram Alidaee Fred Glover Gary A . Kochenberger Cesar Rego T he u niversity of M ississippi Director , Keith Womer School of Business Administration The University of Mississippi Post Office Box 1848 University , MS 38677 - 1848 ( 662 ) 915 - 5820 http : / / hces . bus . olemiss . edu A New Modeling and Solution Approach for the Number Partitioning Problem Bahram Alidaee a , Fred Glover b , Gary Kochenberger c and Cesar Rego d a Hearin Center for Enterprise Science , School of Business , University of Mississippi , University , MS 38677 , USA . balidaee @ bus . olemiss . edu b Leeds School of Business , University of Colorado at Boulder , Boulder , CO 80304 , USA Fred . Glover @ Colorado . edu c . School of Business , University of Colorado at Boulder , Boulder , CO 80217 , USA Gary . Kochenberger @ cudenver . edu d . Hearin Center for Enterprise Science , School of Business , University of Mississippi , University , MS 38677 , USA . crego @ bus . olemiss . edu Latest Revision : November , 2003 . Abstract —The number partitioning problem has proven to be a challenging problem for both exact and heuristic solution methods . In this paper we present a new modeling and solution approach that consists of re - casting the problem as an unconstrained quadratic binary program that can be solved by efficient metaheuristic methods . Our approach readily accommodates both the common two - subset partition case as well as the more general case of multiple subsets . Preliminary computational experience is presented illustrating the attractiveness of the method . 1 . Introduction : The number partitioning problem ( NPP ) , being one of Garey and Johnson’s [ 3 ] six basic NP - complete problems , has been the subject of considerable research in recent years . In the simplest case , the problem consists of partitioning a set of numbers into two subsets such that the sums of the numbers in each subset are as close as possible . The more general case of NPP seeks to partition the original set into n subsets ( n > 2 ) such that the sums for each set are as close to each other as possible . Most of the work reported in the literature has been directed to the two - subset case . This problem is known to be computationally challenging and except for small instances , is most productively approached by heuristic means . The literature contains several papers describing methods for solving NPP . One of the most widely referenced methods is the differencing method ( DM ) of Karmarkar and Karp [ 11 ] which in O ( n log n ) for the 2 - subset case . Several computational studies , including those of Johnson , et . al . , [ 10 ] and Arguello et . al . , [ 1 ] report that DM outperforms , in terms of both solution quality and computation time , alternative methods such as Simulated Annealing and GRASP . Due to it’s effectiveness , Korf [ 13 ] employs DM to produce initial solutions for an improvement method that is reported to be very successful on a large variety of partitioning problems . An analysis of various published methods for NPP can be found in the paper by Gent and Walsh [ 4 ] . In this paper we present a new way of modeling and solving a variety of NPPs . Several versions of the number partitioning problem , each a generalization of the one preceding it , are considered . We show that each version of NPP can be cast into the common modeling framework of the unconstrained quadratic binary program ( UQP ) . In turn , this common formulation enables solutions by recently developed metaheuristics for this model . The unconstrained quadratic program can be written in the form : UQP : xQx x f = ) ( min where Q is an n by n matrix of constants and x is an n - vector of binary variables . UQP is notable for its ability to represent a significant number of important problems . A discussion of a wide variety of applications can be found in Kochenberger , Glover , Alidaee , and Rego [ 12 ] . Our purpose here is to show how this versatile model can be used to model and solve number partitioning problems . In the sections below , we illustrate the use of UQP for various number partitioning problems . Preliminary computational experience is presented for the two - subset case . 2 . The Two Subset Case : The most common version of NPP involves partitioning a set of numbers into two subsets such that the subset sums are as close to each other as possible . We model this problem as follows : Consider a set of numbers { } 1 2 3 , , , . . . , m S s s s s = . The goal is to partition S into two subsets such that the subset sums are as close to each other as possible . Let 1 j j x if s = is assigned to subset 1 ; 0 otherwise . Then 1 sum , subset 1’s sum is 1 1 m j j j sum s x = = ∑ and the sum for subset 2 is 2 1 1 m m j j j j j sum s s x = = = − ∑ ∑ . The difference in the sums is then given by 1 1 1 2 2 m m m j j j j j j j j diff s s x c s x = = = = − = − ∑ ∑ ∑ . We approach the goal of minimizing the absolute value of diff by minimizing 2 2 2 1 2 4 m j j j diff c s x c xQx =   = − = +     ∑ where ( ) ii i i ij i j q s s c q s s = − = Dropping the additive and multiplicative constants , our optimization problem becomes simply : min UQP xQx As a foundation for applying the UQP model to solve NPP , we first review solution methodologies created for UQP . 2 . 1 Solution Approaches for UQP : Due to its computational challenge and application potential , UQP has been the focus of a considerable number of research studies in recent years , including both exact and heuristic solution approaches . These various papers approach UQP by branch and bound , decomposition , semidefinite programming and cutting planes , tabu search , simulated annealing , evolutionary methods such as genetic algorithms and scatter search , as well as simple one - pass heuristic methods . Each of these approaches exhibits some degree of success and could in principle be utilized to solve problems reformulated as UQP . However , the exact methods degrade rapidly with problem size , and have meaningful application to general UQP problems with no more than a few hundred variables . For larger problems , heuristic methods are required . Below we highlight our tabu search heuristic [ 5 , 6 ] which has proven to be very successful on a wide variety of UQP instances and that was used to produce the computational results presented later in the paper . Reference [ 12 ] gives an overview of other solution approaches for UQP . 2 . 2 Tabu Search Overview : Our TS method for UQP is centered around the use of strategic oscillation , which constitutes one of the primary strategies of tabu search . The variant of strategic oscillation we employ may be sketched in overview as follows . The method alternates between constructive phases that progressively set variables to 1 ( whose steps we call “add moves” ) and destructive phases that progressively set variables to 0 ( whose steps we call “drops moves” ) . To control the underlying search process , we use a memory structure that is updated at c ritical events , identified by conditions that generate a subclass of locally optimal solutions . Solutions corresponding to critical events are called critical solutions . A parameter span is used to indicate the amplitude of oscillation about a critical event . We begin with span equal to 1 and gradually increase it to some limiting value . For each value of span , a series of alternating constructive and destructive phases is executed before progressing to the next value . At the limiting point , span is gradually decreased , allowing again for a series of alternating constructive and destructive phases . When span reaches a value of 1 , a complete span cycle has been completed and the next cycle is launched . The search process is typically allowed to run for a pre - set number of span cycles . Information stored at critical events is used to influence the search process by penalizing potentially attractive add moves ( during a constructive phase ) and inducing drop moves ( during a destructive phase ) associated with assignments of values to variables in recent critical solutions . Cumulative critical event information is used to introduce a subtle long term bias into the search process by means of additional penalties and inducements similar to those discussed above . A complete description of the framework for the method is given in Glover , Kochenberger , Alidaee and Amini [ 5 ] . Example : We illustrate the approach on a simple example . Consider the set of 8 numbers { } 25 , 7 , 13 , 31 , 42 , 17 , 21 , 10 S = Following the development above , we have that 2 27 , 556 c = and the equivalent UQP problem is 0 min x xQx = with 3525 175 325 775 1050 425 525 250 175 1113 91 217 294 119 147 70 325 91 1989 403 546 221 273 130 775 217 403 4185 1302 527 651 310 1050 294 546 1302 5208 714 882 420 425 119 221 527 714 2533 357 170 525 147 273 651 882 357 3045 210 250 70 130 310 420 1 Q − − − − = − − − 70 210 1560                       −     Solving with our tabu search heuristic gives ( ) 0 , 0 , 0 , 1 , 1 , 0 , 0 , 1 x = for which 0 6889 x = − yielding perfectly matched sums of 83 . 2 . 3 Computational Experience : The standard comparison in the literature for new approaches to the number partitioning problem is with the differencing method ( DM ) of Karmarker and Karp [ 11 ] , which has proven to be both fast and effective in several comparative studies . Due to its prominence in the literature , we include it here as a benchmark as well . The results reported here are on modest sized random problems of size m = 25 and m = 75 . Five instances of each size are considered with the elements drawn randomly from the interval ( 50 , 100 ) . Each of the 10 problems was solved by our UQP approach as well as the method of Karmarker and Karp . The results are shown in Table 1 below . For each problem , our tabu search heuristic was run for 20 “span” cycles . SUM difference DM SUM difference xQx ID via DM time via xQx time NP25 . 1 30 < 1 sec 0 < 1 sec NP25 . 2 36 < 1 sec 0 < 1 sec Np25 . 3 35 < 1 sec 1 < 1 sec NP25 . 4 28 < 1 sec 0 < 1 sec NP25 . 5 26 < 1 sec 0 < 1 sec NP75 . 1 23 < 1 sec 1 1 sec NP75 . 2 31 < 1 sec 1 1 sec NP75 . 3 25 < 1 sec 1 1 sec NP75 . 4 24 < 1 sec 0 1 sec NP75 . 5 23 < 1 sec 1 1 sec Table 1 . Subset sum differences and times The solutions shown in table 1 indicate that our method dominates DM in terms of solution quality . For five of the problem instances , our approach found partitions with equal sums ( differences of 0 ) . For the other five problems , our method produced partitions whose sums differed by only 1 . We suspect these later results are optimal as well . In contrast to this , DM was unable to produce equal sum partitions for any of the problems , yielding solutions with unequal sums of substantial margins across all ten problems . Solution times , shown in seconds on a Pentium 333 laptop , are roughly the same for both methods . 3 . Partitioning with Multiple Subsets : The problem of the previous section can be generalized to accommodate n > 2 partitions . As before , the goal is to assign numbers to subsets such that the subset sums are as close to each other as possible . For this more general case , we start with a constrained model containing assignment equations ensuring that each number is assigned to one of the subsets . This constrained model is then re - cast into the form of UQP by introducing quadratic infeasibility penalties into the objective function as an alternative to the explicit imposition of the assignment constraints . This approach , shown by Kochenberger , Glover , Alidaee , and Rego [ 12 ] to be very successful in a wide variety of other problem classes , is presented below : As before , we start with a set of m numbers { } 1 2 , , . . . . , m S s s s = to be partitioned into n subsets . Let 1 ij x = if element i s is assigned to subset j , 0 otherwise . The sum for subset j ( j sum ) is given by 1 n j i ij i sum s x = = ∑ and we seek to minimize ( ) ( ) ( ) 2 2 2 0 1 2 1 3 1 . . . m m x sum sum sum sum sum sum − = − + − + + − ( 1 ) subject to 1 1 1 , n ij j x i m = = = ∑ ( 2 ) Since the objective of ( 1 ) is quadratic in the assignment variables , we can re - write ( 1 ) as 0 x xQx = where x is the binary vector of length m by n ( ) 11 12 1 21 , , . . . , , , . . . , n mn x x x x x x = and Q is the square , symmetric matrix resulting from combining terms in ( 1 ) . Our model is now of the form 0 min x xQx = subject to Ax b x binary = This constrained model , following the general reformulation put forth by Hammer and Rudeana [ 7 ] , can then be re - cast as an unconstrained quadratic model by imposing the constraints implicitly via quadratic penalties added to the objective function . Specifically , for a positive scalar P , we have ( ) ( ) b Ax b Ax P xQx x t − − + = 0 c xDx xQx + + = c xQx + = ˆ where the matrix D and the additive constant c result directly from the matrix multiplication indicated . Dropping the additive constant , the equivalent unconstrained version of our constrained problem becomes binary x xQx PEN UQP , ˆ min : ) ( and we see that the multiple subset case considered in this section , like the two subset case of section 2 , can be modeled by UQP . A suitable choice of the scalar penalty P , for the general application of this re - formulation approach , can always be chosen so that the optimal solution to UQP ( PEN ) is the optimal solution to the original constrained problem . ( Hammer and Rudeanu [ 7 ] , Hansen [ 8 ] , Hansen , et . , al . [ 9 ] and Boros and Hammer [ 2 ] ) . We illustrate the procedure in the following example . 3 . 1 Multiple Subset Examples : Consider the set of numbers { } 15 , 3 , 7 , 11 , 7 , 5 , 21 , 9 , 13 , 7 , 5 , 15 , 23 , 14 , 13 , 13 , 27 , 15 , 9 , 9 , 17 , 10 , 11 , 19 , 8 S = to be partitioned into subsets of size n = 3 , 4 , & 5 such that their subset sums are as close as possible . ( i . e . , 3 separate problems . ) For each case , the transformation to ˆ xQx is accomplished using an arbitrarily chosen penalty value of P = 900 . Solving UQP for each case results in the assignments shown in Table 2 below . For each case , the numbers in the “subset assignment” column are the subset indices of the assignments made . For example , for the n = 3 case , the first number ( 15 ) is assigned to subset # 3 , the second number ( 3 ) is assigned to subset # 1 , and so forth . The assignments shown are very well balanced with subset sums of 102 , 102 , and 102 respectively for the n = 3 case , 76 , 76 , 77 , and 77 for the n = 4 case , and 62 , 61 , 61 , 61 and 61 for the n = 5 case . n = 3 case n = 4 case n = 5 case Number Subset Subset Subset Index Number Assignment Assignment Assignment 1 15 3 2 2 2 3 1 3 1 3 7 3 1 3 4 11 2 2 1 5 7 1 3 5 6 5 1 4 2 7 21 2 3 1 8 9 2 2 4 9 13 2 2 3 10 7 3 4 3 11 5 3 1 5 12 15 3 3 4 13 23 3 4 3 14 14 2 4 5 15 13 3 3 5 16 13 1 4 5 17 27 1 1 4 18 15 2 4 2 19 9 2 2 2 20 9 1 1 5 21 17 3 1 2 22 10 2 3 4 23 11 1 1 3 24 19 1 2 1 25 8 1 3 1 Table 2 . Multiple subset results The results given in table 2 show the assignment of all elements ( numbers ) , confirming that the penalty used was in fact sufficiently large to yield feasible assignments . Note that the UQP problems solved to produce the results of table 2 were of size 75 variable , 100 variable , and 125 variables respectively . The largest of these were solved in less than 2 seconds on a Pentium 333 laptop by our tabu search heuristic [ 5 ] . 4 . 0 Non - Homogeneous Case : To motivate this section , consider a machine loading problem where a set of m jobs must be assigned to n machines such that the aggregate loading of the machines is as level as possible . If the machines are identical , job times are independent of the assignments made and the problem can be correctly modeled and solved by the representation given in the previous section . A more general machine loading problem , however , would allow for non - identical machines and machine dependent job times . The development of the previous section can easily be modified to accommodate this more general problem setting as indicated below : Our problem is to level the loading of m jobs assigned to n machines where ij t = the time required to accomplish job i on machine j . Following our earlier development , let 1 ij x = if job i is assigned to machine j , 0 otherwise . Then the total time ( load ) of the jobs assigned to machine j is : 1 1 , m j ij ij i T t x j n = = = ∑ and we want to minimize the aggregate squared deviation , 0 T ( ) ( ) ( ) 2 2 2 0 1 2 1 3 1 . . . n n T T T T T T T − = − + − + + − subject to 1 1 1 , n ij j x i m = = = ∑ By exactly the development of the previous section , this model can be re - cast into the form of ˆ min xQx Note that for the machine loading problem context considered here , we may have additional constraints that job assignments must satisfy in addition to simply ensuring that each job gets assigned . Such constraints , provided that they are linear , can be “folded” into the ˆ Q matrix via additional quadratic penalties to once again yield an equivalent representation in the form of ˆ xQx . 4 . 1 Related Applications : Our focus in the development given above was to indicate how various versions of the number partitioning problem seeking equal subset sums could be modeled and solved via the common UQP framework . Additional partitioning problems , closely related to those considered above , can also be productively addressed by this approach . For instance , consider the problem where each subset has a pre - determined target sum , j tar , and we seek a partition of the original set into n subsets that minimizes the aggregate deviation from these target values . Utilizing j sum and ij x as defined earlier , we have the problem ( ) ( ) ( ) 2 2 2 0 1 1 2 2 min . . . n n x sum tar sum tar sum tar = − + − + + − subject to 1 1 1 , n ij j x i m = = = ∑ which by the developments illustrated earlier can be readily re - cast into UQP . 5 . Summary : In this paper we have introduced the unconstrained quadratic program ( UQP ) as a new and fruitful representation of various forms of the number partitioning problem . This model ( xQx ) is shown to be robust in its ability to accommodate problem variations , affording an opportunity to solve any or all problem versions by a single solution method . In addition to introducing a new model for this class of problems , we have presented preliminary computational experience demonstrating the attractiveness of our tabu search method for solving number partitioning problems via the xQx representation . Our outcomes show that this approach is both conceptually and computationally attractive . References : Arguello , M . , T . Feo , and O . Goldschmidt , “Randomized Methods for the Number Partitioning Problem , ” Computers and OR , 23 ( 2 ) , ( 1996 ) , 103 - 111 . Boros , E . , and P . Hammer , “Pseudo - Boolean Optimization , ” Disctrete Applied Mathematics , 123 ( 1 - 3 ) , ( 2002 ) , pp . 155 - 225 . Garay , M . R . , and D . S . Johnson , Computers and Intractability : A guide to the Theory of NP - completeness , W . H . Freenman , ( 1979 ) . Gent , I . P . , and T . Walsh , “Analysis of Heuristics for Number Partitioning , ” Computational Intelligence , Vol . 14 , # 3 , ( 1998 ) , pp . 430 - 451 . Glover , F . , G . Kochenberger , B . Alidaee , and M . M . Amini , “Tabu with Search Critical Event Memory : An Enhanced Application for Binary Quadratic Programs , ” In : Meta - Heuristics : Advances and Trends in Local Search Paradigms for Optimization , ( Eds . ) S . Voss , S . Martello , I . Osman , and C . Roucairol . Kluwer Academic Publisher , Boston , 1999 . Glover , F . , G . Kochenberger . , and B . Alidaee , “Adaptive Memory Tabu Search for Binary Quadratic Programs , ” Management Science , 44 : 3 , 336 - 345 , 1998 . Hammer , P . , and S . Rudeanu , Boolean Methods in Operations Research , Springer - Verlag , New York , 1968 . Hansen , P . B . , “Methods of Nonlinear 0 - 1 Programming , ” Annals Discrete Math , vol . 5 , pp . 53 - 70 , 1979 . Hansen , P , B . Jaumard . , and V . Mathon , “Constrained Nonlinear 0 - 1 Programming , ” INFORMS Journal on Computing , 5 : 2 , 97 - 119 , 1993 . Johnson , D . , C . Aragon , L . McGeoh , and C . Schevon , “ Optimization by Simulated Annealing : An Experimental Evaluation ; Part II , Graph coloring and Number Partitioning . ” OR , Vol . 39 , # 3 ( 1991 ) , pp . 378 - 406 . Karmarkar , N . , and R . Karp , “The differencing Method of Set Partitioning , ” Report # UCB / CSD 82 / 113 , Computer Science Division , University of California , Berkely , CA , ( 1982 ) . Kochenberger , G . , F . Glover , B . Alidaee , and C . Rego , “An Unconstrained Quadratic Binary Programming Approach to Modeling and Solving Combinatorial Optimization Problems , ” University of Colorado Working Paper , 2002 . Korf , R . , “A Complete Anytime Algorithm for Number Partitioning , ” Artificial Intelligence , 106 , ( 1998 ) , pp . 181 - 203 .