Physical reservoir computing in a soft swimming robot Yuta Horii 1 , Katsuma Inoue 1 , Satoshi Nishikawa 1 , Kohei Nakajima 1 , Ryuma Niiyama 1 , and Yasuo Kuniyoshi 1 1 The University of Tokyo , Tokyo 113 - 8656 , Japan horii @ isi . imi . i . u - tokyo . ac . jp Abstract In recent years , swimming robots have been developed to achieve efﬁcient propulsion and high maneuverability that are possessed naturally by ﬁsh . Previous studies have attempted to achieve swimming similar to ﬁsh by control based on phys - ical models and top - down architectures , but have encountered problems due to the high complexity of the underwater envi - ronment . Several research works have tried to overcome these problems by exploiting embodiment—that is , by mimicking the physical properties of ﬁsh . To achieve more intelligent swimming from the perspective of the embodiment , we fo - cused on a framework called physical reservoir computing ( PRC ) . This framework allows us to utilize physical dynam - ics as a computational resource . In this study , we propose a soft sheet - like swimming robot and a PRC - based architecture that can be used to emulate swimming motions by exploit - ing its own body dynamics for closed - loop control . Through experiments , we demonstrated that our system satisﬁes the properties required for learning swimming motion through supervised learning . We also succeeded in robust motion gen - eration and environmental state estimation , opening up future prospects for more intelligent robot control and sensing . I . Introduction Regarding underwater swimming , a screw propeller is the most common propulsion mechanism . However , it is known that the propulsion efﬁciency , maneuverability , and environ - mental adaptability of this system is inferior to those of nat - ural ﬁsh . Many swimming robots have been developed to re - alize swimming capabilities similar to ﬁshes using engineer - ing approaches ( Aminur et al . , 2018 ) . Many of these robots have adopted methods such as controlling multiple actuators using physical models ( Lighthill , 1960 ) based on the theo - ries of ﬁsh swimming ( Ding et al . , 2013 ; Yu et al . , 2004 ) , or introducing hierarchical architectures that switch behav - ior top - down based on sensor information ( Liu et al . , 2006 ; Wang et al . , 2019 ) . However , dynamic control in a liquid environment is in general very challenging for conventional control schemes ( see , for example , ( Borlaug et al . , 2019 ) for recent attempts ) . Meanwhile , Beal et al . showed that ﬁsh might solve such difﬁcult problems bottom - up by using their own body as a computational resource ( Beal et al . , 2006 ) . They found that a dead ﬁsh can passively produce swimming motion in vortex wakes . Focusing on this idea of embodi - ment , other studies have achieved swimming with high efﬁ - ciency and high maneuverability by adopting soft materials and mimicking the physical properties of ﬁsh ( Salumae and Kruusmaa , 2011 ; Takada et al . , 2010 ; Ziegler et al . , 2005 ) . However , these researches still have room for improvement in terms of high environmental adaptability and complex decision - making ability that ﬁsh possess naturally . We think that to achieve adaptive motion learning / generation—a task that usually requires complex information processing—it is important to come up with a novel scheme that can further exploit natural dynamics of soft body as a part of the control architecture . To realize such system , we focused on physical reservoir computing ( PRC ) , a machine learning framework that uses physical dynamics as a computational resource ( Nakajima , 2020 ) . In the ﬁeld of PRC , the dynamics of physical com - ponents such as octopus arms made of silicone ( Nakajima et al . , 2013 , 2014 , 2015 , 2018 ; Judd et al . , 2019 ) , a ﬂexi - ble spine of quadruped robots ( Zhao et al . , 2013 ) , soft wings of a ﬂying robot ( Tanaka et al . , 2021 ) , spring - mass systems ( Hauser et al . , 2012 ) , and tensegrity structures ( Caluwaerts et al . , 2013 ) have been exploited to achieve emulation tasks of complex nonlinear dynamical systems , or feedback con - trol of the component itself . Reservoir computing ( RC ) , which is the premise of PRC , is a framework for recur - rent neural network ( RNN ) training that consists of an in - put layer , an intermediate layer called the reservoir , and an output layer . RC is characterized such that training can be performed by updating only the readout weights , while the weights inside the reservoir are usually ﬁxed during train - ing . Owing to this setting , any dynamical system , including physical dynamics , that has appropriate properties , such as the separation property ( SP ) , approximation property ( AP ) , and echo state property ( ESP ) , can be used as a reservoir . SP and AP are common functions in RNNs , requiring the sys - tem to distinguish different inputs and map them correctly ( Maass et al . , 2002 ) . ESP requires the output of the reser - voir to depend only on the previous input sequence and not D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021 on its initial state ( Jaeger , 2001 ; Yildiz et al . , 2012 ) . Thus , a system that satisﬁes the ESP has a state forgetting prop - erty . However , these conditions do not guarantee that the system works sufﬁciently for the desired task ( Schrauwen et al . , 2007 ) . Therefore , it is important to conduct physical experiments to check feasibility . In this study , we aim to show that the swimming system , including dynamics in wa - ter and body , meets the speciﬁed conditions and can be used as a computational resource in motion emulation as well as in environmental state estimation . Thus , we made a sheet - like swimming robot and conducted experiments . In section II , we explain the design of our robot and its learning / control rules . In section III , we discuss the results of the experiment on learning swimming motions and gen - erating them through closed - loop control in a ﬁxed environ - ment . In section IV , we discuss the results of the experiment on environmental state estimation while generating motion through an open - loop control . In section V , we discuss the results of the experiment on switching closed - loop control – driven motion depending on the environmental states . II . Robot and training / control rule Robot design The robot we used is illustrated in Fig . 1 . It sways a sil - icone rubber sheet with a servomotor to produce propul - sive force . The waterproof RC servomotor HS - 646WP from Hitec Multiplex Japan , Inc . was adopted . Eight bend sensors ( four pairs , MB060 - N - 221 - A02 from Taiwan Alpha Elec - tronic Co . , Ltd . ) were embedded in the rubber sheet . The sensor can only detect one side of the bend , so two sensors facing the opposite side were used as a pair . Fig . 2 shows the details , with respect to the numbers assigned to each sensor on the rubber sheet , sensors 0 and 1 , 2 and 3 , 4 and 5 , and 6 and 7 are installed in the same position along the length - ier side of the sheet , but are facing sides opposite to each other . The number of sensors we used is the largest number possible under manufacturing restrictions . The resistance of the bend sensor changed in response to the bending . This change in resistance is detected through the change in po - tential difference between the sensor terminals ; however , be - cause the change in resistance during operation is small , the voltage change was ampliﬁed using a Wheatstone bridge cir - cuit and the instrumentation ampliﬁer INA126 from Texas Instruments , Inc . The initial value of resistance is different for each sensor , so one of the resistors in the Wheatstone bridge circuit was made semi - ﬁxed and adjustable . We also installed a semi - ﬁxed resistor to adjust the gain of the ampli - ﬁer . These semi - ﬁxed resistors were adjusted manually by using screwdrivers at the beginning of each experiment . This procedure was needed since the resistance of the sensors we used altered through time . The change in resistance during one experiment was ignorable enough . As a controller , the Teensy® 4 . 0 Development Board from PJRC . COM , LLC . was adopted . Figure 1 : The proposed swimming robot . It consists of a ser - vomotor , a plastic head case , a plastic joint , a rubber sheet , and seven plastic ﬂoats . Plastic parts are made by 3D print - ing . Floats are attached to the rubber sheet to prevent the sheet from sinking below the water surface . Figure 2 : The rubber sheet in the robot . Made by silicone casting using Dragon Skin 10 fast from Smooth - On , Inc . Eight bend sensors are embedded within . Learning rule and feedback control Based on the general setup of RC ( Schrauwen et al . , 2007 ; Luko ˇ sevi ˇ cius and Jaeger , 2009 ) , we implemented supervised learning . The architecture we used is illustrated in Fig . 3 . The reservoir dynamics can be expressed using the follow - ing equation : r ( t + 1 ) = f ( y ( t ) , r ( t ) , q ( t ) ) , ( 1 ) x ( t ) = h ( r ( t ) ) , ( 2 ) where r ( t ) is the reservoir state , y ( t ) is the target motor com - mand , and q ( t ) is the environmental state that we controlled externally in the later experiments via a lever that is con - nected to the robot by a string . The precise deﬁnition of q ( t ) and its setup will be explained in section IV . x ( t ) is the partial observation of r ( t ) expressed as a vector of sensor outputs . In this study , we deﬁned the reservoir as an en - tire system consisting of a robot and the surrounding water . This is because in the case of swimming , there is always a mutual interaction between the robot and water , as can be seen in the ﬁgure . In addition , the ﬂuid environment itself is a highly complex network , making it a desirable compu - tational resource , as seen in the original concept of a “liquid computer” ( Natschl¨ager et al . , 2002 ) . D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021 Water tank ～～～～～～～～～～～ ～～～～～～～～～～～ ～～～～～～～～～～～ ～～～～～～～～～～～ ～～～～～～～～～～～ Σ Sensory outputs Interaction between the robot and surrounding water Estimated motor command Lever S t r i n g Environmentalstate ～～～～～～～～～～～ Target motor command Update b , W Fixed b , W b Open - loop training Closed - loop motion generation Figure 3 : The architecture used for learning and generat - ing motion . While training ( shown in green ) , the system is driven by open - loop control using the target motor com - mand . b and W are learned by linear regression . While in motion generation ( shown in blue ) , b and W are ﬁxed , and the system is driven by closed - loop control using the esti - mated motor command . The readout function in our architecture is a simple linear combination , as shown in the following equation : (cid:98) y ( t + 1 ) = W x ( t + 1 ) + b , ( 3 ) where W is the weight matrix and b is the bias , both derived via linear regression using time series data of x ( t ) and y ( t ) . (cid:98) y ( t ) is the estimated motor command . Learning was not performed in real time , but used data accumulated over a certain period of time in a teacher - forcing condition . The exact way in which data was accumulated will be explained in the next section . After learning , motion generation was performed by closed - loop control using (cid:98) y ( t + 1 ) calculated from the sensor output x ( t ) of the previous timestep as an input signal instead of y ( t + 1 ) . III . Experiment on emulating swimming motions in a ﬁxed environment ( closed - loop ) To investigate whether our system satisﬁes the necessary conditions for emulating swimming motions , and whether there are differences in performance depending on the mo - tion to be learned , we conducted an experiment in which swimming motions were learned and generated in a ﬁxed environment . The experiment was conducted using the fol - lowing procedure : Figure 4 : Experiment setting . The robot is loosely con - nected to the water tank with three strings , one of which can be manipulated by a servomotor driven lever . The di - mensions are shown in the ﬁgure . 1 . Obtain the applied motor commands and the correspond - ing sensor outputs for 6000 timesteps . 2 . Learn weights by linear regression using the training data obtained above . 3 . Drive the robot with closed - loop control using the weights obtained above , and thereafter acquire data . The robot was loosely ﬁxed with three strings as shown in Fig . 4 . The target motor command y [ ◦ ] was given as a sinusoid as shown in the following equation : y ( t ) = A sin (cid:18) 2 π t T (cid:19) + ϕ ( 4 ) The offset ϕ [ ◦ ] was ﬁxed at a value such that the posi - tion of the sheet was at the center of the robot head when t = 0 . Time t was given as a timestep rather than a con - tinuous value . The length of timestep τ was ﬁxed at 10 ms . The variable parameters in the experiment were wavelength T [ ms ] ( 600 - 1100 ms ) and amplitude A [ ◦ ] ( 30 - 50 ◦ ) . Sen - sor outputs were acquired ﬁve times during one timestep , at 2 ms intervals , and the average was used as the sensor output during that timestep . Five training datasets and one test dataset were obtained , as shown in Fig . 5 . For each training dataset , estimation was performed for the test data using the learned weight W in an open - loop manner , and thereafter the accuracy was evalu - ated by the coefﬁcient of determination R 2 = 1 − (cid:80) ni = 1 ( y i − (cid:98) y i ) 2 / (cid:80) ni = 1 ( y i − ¯ y ) 2 . The W with the largest R 2 was ex - tracted to be used for motion generation using closed - loop control . The largest R 2 values are shown in Fig . 6 . The closer R 2 is to 1 , the higher the accuracy . In most condi - tions , the value is greater than 0 . 99 , indicating that estimat - ing the motor command while driven by open - loop control can be achieved with a high accuracy . However , this does not guarantee that the closed - loop control will succeed . The D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021 5 training data sets ( 800 timesteps ) 1 test data set ( 400 * 5 = 2000 timesteps ) Data through 6000 consecutive timesteps Figure 5 : Five training datasets each include data from 800 consecutive timesteps . The test dataset is a combination of ﬁve data from 400 consecutive timesteps each . The reason for extracting the test data from multiple locations this way is to prevent the test data from being too close to a particular training data . The test data was used for evaluating the ﬁve obtained sets of weights in an open - loop manner . The set of weights with the best performance was used for closed - loop control . One set of weights includes eight weights and one bias , corresponding to the number of sensors . system driven by closed - loop control must possess not only a high emulating ability but also robustness in order to main - tain motion in a noisy underwater environment . Fig . 7 shows the time variation of the sensor outputs and motor commands during the closed - loop control using W obtained by learning , with the target motion set as ( T , A ) = ( 600 , 30 ) . Both the sensor outputs and motor commands show periodic waveforms . For the other ( T , A ) conditions , the estimated motor com - mand was analysed by curve ﬁtting . A sinusoid was ﬁt - ted to the time series data of (cid:98) y , and the average wavelength and amplitude T (cid:48) [ ms ] and A (cid:48) [ ◦ ] , respectively , of the ﬁtting curve were obtained . The errors of T (cid:48) and A (cid:48) , compared to T and A , respectively , are plotted in Fig . 8 . The grayed - out areas in the ﬁgure are the data that were excluded from the graph as incomparable because T (cid:48) was greater than 3000 ms or A (cid:48) was less than 3 ◦ . The incomparable motion was ob - served when T is large , and A is small . Here , the speed of motion , proportional to A / T , is small , meaning that the reservoir dynamics is small . In this case , it may be that the system does not have sufﬁcient input separability to perform the task . This is a possible reason why closed - loop control failed under these conditions . In contrast , in conditions where the system was able to generate a motion close to the target motion , it was highly probable that the system had the necessary conditions for learning . As for the wavelength , the error is at most ap - proximately 10 % , thus the accuracy is relatively high . This shows that the system can emulate a certain temporal task . However , for the amplitude , the error is at most approxi - mately 73 % . In the condition of ( T , A ) = ( 800 , 30 ) , where the error is the largest , the system generates a motion with a larger amplitude than the learning motion . Because the tar -                           T   > P V @                A    >    @                          R 2 Figure 6 : Coefﬁcient of determination R 2 for each training conditions .                                   9  R  O  W  D J  H    >  9  @                                           7 L P H  > V @               $  Q  J  O  H    >    @ Figure 7 : Sensory outputs ( up ) and estimated motor com - mand ( down ) . The target motion was set as ( T , A ) = ( 600 , 30 ) . The label numbers of the sensory outputs cor - respond to the numbers printed on the sensors in Fig . 1 . get motion for condition ( T , A ) = ( 800 , 30 ) is a relatively slow motion , the nonlinearity of the system might not have been sufﬁcient for accurate learning . However , the system was still able to produce a periodic motion , unlike in the grayed - out conditions . In light of these results , it may be possible to say that during motion generation for condition ( T , A ) = ( 800 , 30 ) , and maybe even for other conditions around , too , the nonlinearity of the system is maintained by generating an “exaggerated” motion . Motion generation under manual perturbations Here , we consider the change in motion when an external perturbation is applied to the reservoir during closed - loop control . A manual perturbation was given to the rubber sheet , as shown in the upper ﬁgure in Fig . 9 . The lower ﬁgure in Fig . 9 shows the change in the estimated motor commands . D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021                           T   > P V @                A    >    @  ( U U R U  R I  T 0   > P V @                      >  @                           T   > P V @                A    >    @  ( U U R U  R I  A 0   >  @                      >  @ Figure 8 : Average error of wavelength ( up ) and amplitude ( down ) between target / estimated motor commands for dif - ferent ( T , A ) conditions . The grayed - out areas in the ﬁgure are the data that were excluded from the graph as incompa - rable because T (cid:48) was greater than 3000 ms or A (cid:48) was less than 3 ◦ . It can be seen that the motion is disturbed by the perturba - tion but returns to the original periodic motion in a short time . Considering that the sensor output when the perturba - tion is added is not included in the training or test data , this resilience that is achieved is spontaneous . The reason for this resilience may be the resilient properties of the rubber sheet and the surrounding water , such as elasticity . This re - sult indicates that the system has a state forgetting property because the effect of perturbation is mitigated over time . Generating a triangle wave motion The system was also able to emulate a triangular wave mo - tion using the same architecture . The equation for the mo -                      7 L P H  > V @                $  Q  J  O  H    >    @ Figure 9 : External perturbation ( up ) and estimated motor command during perturbation ( down ) . Target motion was set as ( T , A ) = ( 600 , 30 ) . tion is as follows : y ( t ) =   2 At T − A 2 + ϕ (cid:32) 0 < t ≤ T 2 (cid:33) − 2 At T + 3 A 2 + ϕ (cid:32) T 2 < t ≤ T (cid:33) , ( 5 ) The upper ﬁgure in Fig . 10 shows the estimated motor commands during closed - loop control for the target motion set as ( T , A ) = ( 600 , 30 ) . The lower ﬁgure in Fig . 10 shows a sinusoidal counterpart for comparison . The produced mo - tions exhibit the characteristic of each target waveform . IV . Experiment on environmental state estimation ( open - loop ) To investigate whether the robot can discriminate the state q of the environment through its motion , we conducted an ex - periment . The robot ﬁrst performs a sinusoid motion gener - ated by an open - loop control under different q s . The system then learns the weight W q to estimate q from the sensor out - put through logistic regression . We used logistic regression for learning because the target output takes a binary value as we explain below , and logistic regression is a useful method D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021                           7 L P H  > V @             $  Q  J  O  H    >    @  7 U L D Q J X O D U  Z D Y H                           7 L P H  > V @         $  Q  J  O  H    >    @  6 L Q X V R L G Figure 10 : Estimated motor command . Target motions were a triangular wave ( up ) and a sinusoid ( down ) , both set as ( T , A ) = ( 600 , 30 ) . when estimating a binary value . In this experiment , q corre - sponds to the state of the string connected to the robot head ( Fig . 11 ) . Two states UP and DOWN were switched by us - ing a servomotor driven lever connected to the string . This setup is expressing the case in which the robot is under the inﬂuence of an external force . In the DOWN state , the robot is swimming freely , and in the UP state , the robot is resist - ing an upward force . For logistic regression , q was deﬁned numerically as follows : q ( t ) = (cid:26) 1 ( UP ) 0 ( DOWN ) , ( 6 ) The equation for the logistic regression is as follows : h ( t + 1 ) = 1 1 + exp ( − ( W (cid:48) x ( t + 1 ) + b (cid:48) ) ) , ( 7 ) (cid:98) q ( t + 1 ) = (cid:26) 1 ( h ( t + 1 ) > 0 . 5 ) 0 ( h ( t + 1 ) ≤ 0 . 5 ) , ( 8 ) where h ( t ) is the assumption function and (cid:98) q ( t ) is the esti - mated state . The W (cid:48) and b (cid:48) were to be learned . We used the L2 regularization , in which the regularization parameter was ﬁxed to 100 . For both states UP and DOWN , one training dataset and one test dataset were acquired , both through 3000 consecu - tive timesteps . Thereafter the two training datasets and the two test datasets were combined . The learning and evalua - tion was done by using these combined datasets . The con - ditions ( T , A ) chosen in this experiment were ( 640 , 40 ) and ( 800 , 50 ) . These two motions have different T and A , but the motion speed , proportional to A / T , is the same . Figure 11 : Different environmental states . The left ﬁgure shows the UP state , where the lever is at the upper position and the tip of the robot head is pulled above the water sur - face . The right ﬁgure shows the DOWN state , where the lever is at the lower position and the robot head can move more freely compared to the UP state . As for ( T , A ) = ( 640 , 40 ) , the estimation accuracy was 0 . 991 , which can be taken as a high enough accuracy . How - ever , as for ( T , A ) = ( 800 , 50 ) , the accuracy was 0 . 529 . Since the accuracy will be 0 . 5 for a completely random guess , this indicates that estimation has failed . We will dis - cuss the cause of this problem , considering the properties that the reservoir must satisfy . First , we examine whether differences in the environment are reﬂected in the sensor outputs . Under each condition ( T , A ) , Fig . 12 shows the waveform of the sensor output for each lever state . In both conditions ( T , A ) , the sensor output in the UP state has high - frequency noise compared to the DOWN state . A difference can also be seen in the waveform and offset . Thus , the sensor output sequences do not seem to lack information needed for distinguishing the states . Next , we decided to determine what properties are not enough for successful emulation by seeing if we can com - pensate for this by changing the readout part . In the exper - iments above , we estimated the environmental state or mo - tor command using sensor outputs from only one timestep . Here , we performed the same environmental state estima - tion , except that we used sensor outputs from the past timesteps . The results are presented in Fig . 13 . In both conditions , the accuracy gets overall larger when more data from the past timesteps are used . As for ( T , A ) = ( 640 , 40 ) , the accuracy reaches 1 . 0 at 52 timesteps . As for ( T , A ) = ( 800 , 50 ) , the accuracy starts to increase at around 20 timesteps , reaches approximately 0 . 85 at around 80 timesteps , but the increasing stops from there . The reason why the accuracy increased can be explained by memory ca - pacity and dimensionality . The system as a whole must pos - D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021          7 L P H  > V @                      9  R  O  W  D J  H    >  9  @           8 3          7 L P H  > V @                      9  R  O  W  D J  H    >  9  @           ' 2 : 1          7 L P H  > V @                          9  R  O  W  D J  H    >  9  @           8 3          7 L P H  > V @                          9  R  O  W  D J  H    >  9  @           ' 2 : 1 Figure 12 : Sensor outputs during open - loop control at dif - ferent ( T , A ) conditions and states . sess sufﬁcient memory capacity to distinguish past inputs . In this altered setup , the memory of the reservoir is sup - plemented by the computer . In addition , in the latter case , the dimensionality of the sensor outputs is increased by the computer . The rich information is important for labeling dif - ferent outputs and mapping them—that is , to satisfy the AP . Thus , it is highly probable that in the former setup , the num - ber of dimensions of the sensor outputs ( eight in this case ) was insufﬁcient to satisfy the AP . As a result , the architecture ﬁrst proposed in this study did not sufﬁciently satisfy some properties , thus the readout part needs to be modiﬁed in order to perform accurate es - timation . In actual ﬁsh , not all computational processing is done by the body , and processing in the brain also plays an important role in determining behavior . In the future , it will be necessary to ﬁnd an appropriate balance between the role of the body and the role of the controller by trying differ - ent kinds of setups . In addition , given that the accuracy was very different between the two conditions with or without the readout modiﬁcation , the type of motion used for esti - mation may also be a key factor for good estimation .                  1 X P E H U  R I  W L P H V W H S V                                      $  F F  X  U  D  F  \                           1 X P E H U  R I  W L P H V W H S V                          $  F F  X  U  D  F  \          Figure 13 : The accuracy of environmental state estimation when we used the sensor outputs of the past timesteps for training at different ( T , A ) conditions . V . Experiment on motion switching depending on environmental states ( closed - loop ) In the previous experiment , we showed that environmen - tal state estimation is possible by setting appropriate read - outs . However , estimation itself is not sufﬁcient for swim - ming with environmental adaptability . There are two ways to realize adaptability . The simple idea is that the controller switches the readout weight parameter set depending on the estimation . However , this method requires the controller to divide the state space . To achieve ﬁsh - like intelligence in the real world by this method , a great number of sets of weight parameters would be needed , or it is not even pos - sible . A smarter solution is to allow the body to demonstrate adaptability—that is , to realize switching of motion without changing the readout weight . In this experiment , we inves - tigated whether the system could emulate different motions under different environmental states . The deﬁnition of q was same as in the estimation experiment . For conditions ( q , T , A ) = ( 1 , T UP , A UP ) and ( q , T , A ) = ( 0 , T DOWN , A DOWN ) , the weights W UP and W DOWN for generating closed - loop control was D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021 obtained in the same way as in the experiment in a ﬁxed en - vironment . Then , the training data used for obtaining W UP and W DOWN were combined and used to obtain weight W BOTH through linear regression , a weight that is expected to demonstrate motion switching when used for closed - loop control . Using these three weights , closed - loop control was performed under both UP and DOWN states . The average wavelength T (cid:48) and amplitude A (cid:48) of the estimated motor commands are shown in Table 1 . The conditions ( T UP , A UP , T DOWN , A DOWN ) chosen in this experiment were ( 640 , 40 , 800 , 50 ) and ( 800 , 50 , 640 , 40 ) . We refer to them as Conditions 1 and 2 . Under Condition 1 , T (cid:48) when driven by W BOTH is approx - imately 10 % larger than T when UP and approximately 5 % smaller than T when DOWN . The values are shifted in a way that ﬁlls the difference in wavelength between the two states , and the amount of change in motion due to the change in state is reduced , but the magnitude relationship is main - tained . As for A (cid:48) , the error from A is within 5 % in both states , which is a relatively high accuracy . These results alone seem to indicate that motion switching has been suc - cessful . However , under Condition 2 , the change in the val - ues of both T (cid:48) and A (cid:48) due to the change in the environmental state is less than 3 % , which is almost no change at all . Look - ing at A (cid:48) when driven by W UP and W DOWN at Condition 1 , A (cid:48) at DOWN is larger than A (cid:48) at UP by about 10 ◦ , even though these cases use weights obtained from only one con - dition . Therefore , it seems that the observed motion switch - ing was not the result of learning , but was just a manifesta - tion of the characteristics of the original motion . In fact , the values of T (cid:48) and A (cid:48) driven by W BOTH , W UP , and W DOWN , indicate that an intermediate motion between the two target motions was generated for each condition . VI . Conclusion Using the PRC framework , we succeeded in emulating swimming motions by closed - loop control for a soft sheet - like swimming robot . In addition , we were able to make the system distinguish between two different environmental states through motion by altering the readout part . These results indicate that the robotic swimming system satisﬁes the properties necessary for reservoirs within the scope of the experiments conducted in this study . It is also interest - ing to note that in some biological systems , such as in the nematode worm Caenorhabditis elegans , it was shown that a closed - loop control without a central pattern generator is used for swimming in different media with the same neural circuit ( Berri et al . , 2009 ) , which is similar to our proposed control scheme . In each experiment , we used simple control signals such as sinusoidal and triangle waves . However , ﬁsh can pro - duce more complex and non - periodical motions . To ﬁnd out if this system can generate such motions , further research would be needed . Condition 1 : ( 640 , 40 , 800 , 50 ) T (cid:48) [ ms ] A (cid:48) [ ◦ ] UP DOWN UP DOWN Target 640 800 40 50 W BOTH 705 758 38 . 2 49 . 6 W UP 632 638 32 . 3 42 . 8 W DOWN 760 806 44 . 9 54 . 4 Condition 2 : ( 800 , 50 , 640 , 40 ) T (cid:48) [ ms ] A (cid:48) [ ◦ ] UP DOWN UP DOWN Target 800 640 50 40 W BOTH 767 749 50 . 8 51 . 7 W UP 834 841 56 . 2 58 . 9 W DOWN 654 645 39 . 6 40 . 2 Table 1 : The average wavelength T (cid:48) and amplitude A (cid:48) of the estimated motor commands using dif - ferent weights for closed - loop control at different ( T UP , A UP , T DOWN , A DOWN ) conditions . The cells in gray are the conditions where values are not necessarily close to the target because the state during closed - loop control is different from that during training . In the ﬁnal experiment , the desired motion switching was not observed . However , it has been conﬁrmed that the be - havior changes in some way depending on the environmen - tal input . It is expected that meaningful behavior switching will be implemented in the future by changing the way the conditions are selected , the way the behavior is switched , and the learning method . In addition , in this study , we did not focus on swimming speed , acceleration , or posture . In the future , it is expected that swimming optimization targeting these factors will be achieved through reinforcement learning . Finally , we expect our proposed architecture to be applied to other soft swimming robots . Our architecture is charac - teristic in that it does not require knowledge of the sensor type and position , making the architecture highly versatile . By changing the robot shape and sensor types , it is highly probable that a more intelligent robot will be realized in the future . Acknowledgements This work was supported by the JSPS KAKENHI Grant - in - Aid for Scientiﬁc Research on Innovative Areas “Soft Robotics” project under Grant Numbers JP18H05466 , JP18H05472 . This work was also partially based on re - sults obtained from a project commissioned by the New En - ergy and Industrial Technology Development Organization ( NEDO ) . D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021 References Aminur , R . B . , Hemakumar , B . , and Prasad , M . P . ( 2018 ) . Robotic Fish Locomotion Propulsion in Marine Environment : A Sur - vey . In 2nd International Conference on Power , Energy and Environment : Towards Smart Technology , pages 1 – 6 . IEEE . Beal , D . , Hover , F . , Triantafyllou , M . , Liao , J . , and Lauder , G . ( 2006 ) . Passive Propulsion in Vortex Wakes . Journal of Fluid Mechanics , 549 : 385 – 402 . Berri , S . , Boyle , J . H . , Tassieri , M . , Hope , I . A . , and Cohen , N . ( 2009 ) . Forward locomotion of the nematode c . elegans is achieved through modulation of a single gait . HFSP Journal , 3 ( 3 ) : 186 – 193 . Borlaug , I . - L . , Sverdrup - Thygeson , J . , Pettersen , K . , and Grav - dahl , J . ( 2019 ) . Combined kinematic and dynamic control of an underwater swimming manipulator . IFAC - PapersOnLine , 52 ( 21 ) : 8 – 13 . Caluwaerts , K . , D’Haene , M . , Verstraeten , D . , and Schrauwen , B . ( 2013 ) . Locomotion Without a Brain : Physical Reservoir Computing in Tensegrity Structures . Artiﬁcial Life , 19 ( 1 ) : 35 – 66 . Ding , R . , Yu , J . , Yang , Q . , and Tan , M . ( 2013 ) . Dynamic modelling of a cpg - controlled amphibious biomimetic swimming robot : Regular paper . International Journal of Advanced Robotic Systems , 10 . Hauser , H . , Ijspeert , A . J . , Fuchslin , R . M . , Pfeifer , R . , and Maass , W . ( 2012 ) . Towards a theoretical foundation for morphologi - cal computation with compliant bodies . Biological cybernet - ics , 105 : 355 – 370 . Jaeger , H . ( 2001 ) . The “echo state” approach to analysing and training recurrent neural networks - with an erratum note . Bonn , Germany : German National Research Center for In - formation Technology GMD Technical Report , 148 ( 34 ) : 13 . Judd , E . , Soter , G . , Rossiter , J . , and Hauscr , H . ( 2019 ) . Sensing through the body - non - contact object localisation using mor - phological computation . In 2nd IEEE International Confer - ence on Soft Robotics , pages 558 – 563 . Lighthill , M . J . ( 1960 ) . Note on the swimming of slender ﬁsh . Journal of Fluid Mechanics , 9 ( 2 ) : 305 – 317 . Liu , J . , Hu , H . , and Gu , D . ( 2006 ) . A Hybrid Control Architecture for Autonomous Robotic Fish . In IEEE / RSJ International Conference on Intelligent Robots and Systems , pages 312 – 317 . Luko ˇ sevi ˇ cius , M . and Jaeger , H . ( 2009 ) . Reservoir computing ap - proaches to recurrent neural network training . Computer Sci - ence Review , 3 ( 3 ) : 127 – 149 . Maass , W . , Natschl ¨ ager , T . , and Markram , H . ( 2002 ) . Real - time computing without stable states : A new framework for neu - ral computation based on perturbations . Neural computation , 14 : 2531 – 60 . Nakajima , K . ( 2020 ) . Physical reservoir computing - an intro - ductory perspective . Japanese Journal of Applied Physics , 59 ( 6 ) : 060501 . Nakajima , K . , Hauser , H . , Kang , R . , Guglielmino , E . , Caldwell , D . G . , and Pfeifer , R . ( 2013 ) . A soft body as a reservoir : case studies in a dynamic model of octopus - inspired soft robotic arm . Frontiers in computational neuroscience , 7 : 91 . Nakajima , K . , Hauser , H . , Li , T . , and Pfeifer , R . ( 2015 ) . Infor - mation processing via physical soft body . Scientiﬁc Reports , 5 : 10487 . Nakajima , K . , Hauser , H . , Li , T . , and Pfeifer , R . ( 2018 ) . Exploiting the Dynamics of Soft Materials for Machine Learning . Soft Robotics , 5 : 339 – 347 . Nakajima , K . , Li , T . , Hauser , H . , and Pfeifer , R . ( 2014 ) . Exploiting short - term memory in soft body dynamics as a computational resource . Journal of The Royal Society Interface , 11 ( 100 ) . Natschl¨ager , T . , Maass , W . , and Markram , H . ( 2002 ) . The “liquid computer” : A novel strategy for real - time computing on time series . Telematik , 8 ( 39 ) . Salumae , T . and Kruusmaa , M . ( 2011 ) . A Flexible Fin with Bio - Inspired Stiffness Proﬁle and Geometry . Journal of Bionic Engineering , 8 ( 4 ) : 418 – 428 . Schrauwen , B . , Verstraeten , D . , and Campenhout , J . ( 2007 ) . An overview of reservoir computing : Theory , applications and implementations . In Proceedings of the 15th European Symp - sosium on Artiﬁcial Neural Networks , pages 471 – 482 . Takada , Y . , Nakanishi , Y . , and Araki , R . ( 2010 ) . Effect of Material and Thickness about Tail Fins on Propulsive Performance of a Small Fish Robot . Journal of Aero Aqua Bio - mechanisms , 1 ( 1 ) : 51 – 56 . Tanaka , K . , Yang , S . - H . , Tokudome , Y . , Minami , Y . , Lu , Y . , Arie , T . , Akita , S . , Takei , K . , and Nakajima , K . ( 2021 ) . Flapping - wing dynamics as a natural detector of wind direction . Ad - vanced Intelligent Systems , 3 : 2000174 . Wang , W . , Gu , D . , and Xie , G . ( 2019 ) . Autonomous Optimization of Swimming Gait in a Fish Robot with Multiple Onboard Sensors . IEEE Transactions on Systems , Man , and Cybernet - ics : Systems , 49 ( 5 ) : 891 – 903 . Yildiz , I . , Jaeger , H . , and Kiebel , S . ( 2012 ) . Re - visiting the echo state property . Neural networks : the ofﬁcial journal of the International Neural Network Society , 35 : 1 – 9 . Yu , J . , Tan , M . , Wang , S . , and Chen , E . ( 2004 ) . Development of a biomimetic robotic ﬁsh and its control algorithm . IEEE Transactions on Systems , Man , and Cybernetics , Part B ( Cy - bernetics ) , 34 ( 4 ) : 1798 – 1810 . Zhao , Q . , Nakajima , K . , Sumioka , H . , Hauser , H . , and Pfeifer , R . ( 2013 ) . Spine dynamics as a computational resource in spine - driven quadruped locomotion . In IEEE / RSJ Interna - tional Conference on Intelligent Robots and Systems , pages 1445 – 1451 . IEEE . Ziegler , M . , Iida , F . , and Pfeifer , R . ( 2005 ) . “Cheap” Underwater Locomotion : Morphological Properties and Behavioral Di - versity . IROS05 Workshop on Morphology , Control and Pas - sive Dynamics . D o w n l oaded f r o m h tt p : / / d i r e c t . m i t . edu / i s a l / p r o c eed i ng s - pd f / i s a l / 33 / 92 / 1929987 / i s a l _ a _ 00426 . pd f b y gue s t on 01 A ugu s t 2021