56 IEEE SOFTWARE | PUBLISHED BY THE IEEE COMPUTER SOCIETY 0740 - 7459 / 11 / $ 26 . 00 © 2011 IEEE FOCUS : CLIMATE CHANGE SOFTWARE COMPUTATIONAL SIMULATION MODELS help support scientifically grounded “what if” analyses by trans - lating specialized knowledge into tools that can project the likely future impact of current actions . Models have thus become important in a variety of policy domains . In recent years , several soft - ware platforms for environmental pol - icy - making and urban planning have added simulation models to decision support tools to provide stakeholders with direct access to these models . This trend is continuing to gain ground . 1 – 3 Models also play a central role for climate change policy - makers , but are so complex and computationally de - manding that experts must run them and interpret their results , creating a bottleneck between models and stake - holders . This reduces the flexibility that individual stakeholders have to explore alternative scenarios and lim - its the number of stakeholders that can query the models . It also makes models more opaque to stakeholders because experts summarize model results and tend to omit details about the models’ assumptions . Complexity and opac - ity , in turn , reduce public confidence in such models . Drawing inspiration from open source development practices , we wanted to address these problems by providing support for modularization of and open access to models that can inform climate policy deliberations . We thus developed a publicly acces - sible Web service called ROMA ( Radi - cally Open Modeling Architecture ) that allows anyone to create , combine , and run modular simulations . ROMA currently provides the modeling func - tionality in the Climate CoLab ( http : / / climatecolab . org ) , a collective intelli - gence application in which large num - bers of people work together to develop proposals to address climate change . 4 , 5 In time , we hope that ROMA will sup - port a community focused on model development and analysis . Design We initially developed ROMA as part of the Climate CoLab , where commu - nity members run models to predict the outcomes of proposals to address cli - mate change . Modeling in the CoLab helped crystallize two of ROMA’s tech - nical design challenges . First , it had to simplify complex , computationally ex - pensive models for a broad , Web - based Enabling Open Development Methodologies in Climate Change Assessment Modeling Joshua Introne , Robert Laubacher , and Thomas Malone , MIT Center for Collective Intelligence / / The Radically Open Modeling Architecture ( ROMA ) lets climate change policy stakeholders create and run surrogate simulations and composite models . / / NOVEMBER / DECEMBER 2011 | IEEE SOFTWARE 57 community ; models must execute rap - idly and without great loss of accu - racy , and we must be able to fl exibly tune any model’s interface to meet di - verse users’ needs . Our second design challenge was how to use modeling functionality to support collective in - telligence . Research has demonstrated that large groups of diverse individuals can fi nd better solutions than similarly sized groups of experts , but only if the individuals have a basic understanding of the domain and are free to explore the space . 6 Thus , ROMA must provide modeling capabilities that could inject expertise into users’ exploration of the domain yet still let individuals try out ideas that model creators haven’t foreseen . ROMA provides two core function - alities to meet these design challenges . It provides tools for generating and run - ning surrogate simulations of much larger integrated assessment models ( IAMs ; integrative models that predict the impacts of climate change across a variety of domains ) . Clients can run surrogate models very quickly and eas - ily customize them to reduce input num - ber and complexity . ROMA also offers a uniform API and componentized view of models and stored model runs and lets clients combine components to cre - ate executable composite models . These features let stakeholders ex - plore climate and integrated assess - ment models directly ; the design also supports a division of labor in which experts in different subspecialties can easily add new component models that stakeholders can then combine with others to explore competing assump - tions about the world . ROMA Service Architecture ROMA describes simulation models by their inputs and outputs . These variables can be of any standard data type ( for ex - ample , integers , doubles , or text ) and can represent vector or scalar values . A model can also be associated with other metadata ( such as a name and descrip - tion ) . ROMA publishes its own URL that clients can use to run models . When a model runs , ROMA gener - ates and stores a dataset called a sce - nario that contains all the concrete in - put and output values and a reference to the model that generated it . For com - posite models , the scenario will also contain subscenarios corresponding to the inputs and outputs of each compo - nent model in the composite . Because it maintains a connection between scenarios and the models that create them , ROMA can semi - automatically update stored scenarios if a model changes . It can also swap out subscenarios or replace component models to update a composite scenario . This enables less tightly coupled work - fl ows around the creation of scenarios . For example , a team developing a sce - nario for a global emissions policy in the CoLab can plug in different na - tional policy scenarios that were devel - oped elsewhere . Figure 1 shows a class diagram that describes ROMA’s core compo - nents . ROMA exposes the four main elements—models , variables , scenarios , and tuples—via a RESTful interface that lets Web clients retrieve XML de - scriptions of these entities . All other functionality is available through a set of Web forms . ROMA offers two kinds of support for combining models : mapped models can transform other models’ inputs and outputs , and composite models can con - tain other models and maintain connec - tions among them . Figure 2 shows how ROMA uses these types of models . The use of mapped models allows several transformations : • Replication . A model can be re - peated n times over incoming values with higher cardinality . For exam - ple , a mapped model with a repli - cation value of n > 1 can transform a model that accepts scalar values into a model that accepts vectors with a cardinality n . 0 . . * 1 . . * inputs Components Mapped models Model NameDescriptionAuthorVersionURL ExternalName : String ExternalName : String run ( List < Tuple > : Scenario MappedModel ReplicationSamplingFrequencyMappingFunction CompositeModel VariableMappingExecutionOrder Variable NameDescriptionUnitCardinalityDataTypePrecisionLabel Tuple Values Scenario NameAuthorVersion 0 . . * 1 . . * outputs FIGURE 1 . Partial class diagram for the modeling service . The model and associated variable classes capture metadata about models known to ROMA . A scenario captures data for a particular run of a model in tuples . Both models and scenarios support versioning . 58 IEEE SOFTWARE | WWW . COMPUTER . ORG / SOFTWARE FOCUS : CLIMATE CHANGE SOFTWARE • Subsampling . Users can reduce any model’s output cardinality by sub - sampling its outputs at a given fre - quency . For example , a user can sample a model that provides pre - dictions for atmospheric CO 2 for each year over the course of a cen - tury at a period of 10 years to gen - erate data for another model that requires decadal CO 2 values as inputs . • Many - to - one mapping . Users can also reduce any model’s output car - dinality by applying a many - to - one mapping function—for example , sum , average , fi rst , and last . If users want to combine these transfor - mations , ROMA applies them sequen - tially as ordered in the preceding list . Thus , ROMA fi rst repeats a model over its inputs , subsamples the results of that operation , and fi nally combines them using the many - to - one mapping func - tion if one is specifi ed . Composite models arrange their component models in a series of ordered , connected steps . Each step can contain any number of models as long as they have no dependencies on each other . A set of connection descriptors specifi es connections from the composite model inputs to steps , connections between steps , and from steps to the compos - ite model’s outputs . ROMA allows us - ers to connect only those variables that have the same units , data type , and car - dinality . More sophisticated compat - ibility checking is left to the composite model creator . Connections between steps must be from output variables in an earlier step to input variables in a later ( though not necessarily adjacent ) step so that cycles can’t occur . When a user runs a composite model , ROMA executes the steps in order . Running a composite model pro - duces a composite scenario that con - tains references to scenarios generated by each of the component models . Us - ers can replace component scenarios ( that don’t have their inputs determined by upstream models ) after ROMA has generated a composite scenario , in which case the system will calculate all downstream changes and update the composite scenario’s version number . Similarly , users can replace a compo - nent model in a composite model with a new model that has the same inputs and outputs and request that the system update all scenarios to the new com - posite model . Surrogate Models Other domains often use surrogate mod - els when “real” models are too expen - sive to run for all parameter combina - tions of interest or when model authors prefer to control access to their technol - ogy . 7 Researchers construct surrogate models by interpolating between known data points that the actual model gen - erated . In practice , a surrogate model is often elaborated as a researcher ex - plores a model’s parameter space . In the case of climate and integrated assess - ment models , though , we generally have access to published data instead of the actual models , so we construct surro - gate models based on this data . To simplify generating surrogate models in ROMA , the service accepts scenario - based data—a form com - monly used for presenting data from IAMs—and automatically generates surrogate models . We’re currently de - veloping a user interface that will make it easy for anyone with access to such a set of scenarios ( for instance , a model creator ) to create a surrogate model within ROMA . Surrogate models provide users with a very rapid estimate of much larger models for a bounded region of their parameter space . Of course , these esti - mates are only approximations , the ac - curacy of which depend on the curve - fi tting algorithm used , the amount of data available , the complexity of the output surface , and other factors . Us - ers must weigh the trade - offs between speed and accuracy for each particular application and domain in which they employ surrogate models . Composite model Step 3 Step 2 Step 1 Mapped model Model ∑ FIGURE 2 . A notional schematic illustrating how to connect models . A composite model consists of several steps that embed component models . NOVEMBER / DECEMBER 2011 | IEEE SOFTWARE 59 Model Execution and Spreadsheet Models We intended for ROMA to work with models that run on other servers . For it to run an external model , the model provider must present a URL that ac - cepts a form post with values for each input variable in the model and be able to return data to ROMA . Although ROMA is agnostic with respect to the technology that runs individual mod - els , no provision is currently made for models that have long execution times ( greater than the HTTP request time - out ) or that require scheduling . In addition to externally hosted models , ROMA includes functional - ity that can transform a spreadsheet into an executable model . Spreadsheet models map input and output vari - ables to cells and cell ranges ; the user defi nes this association when upload - ing a spreadsheet to ROMA and user - supplied functions embedded in the spreadsheet perform all model calcula - tions . The system uses the spreadsheet engine available from the open source Apache POI project ( http : / / poi . apache . org ) to run this type of model . Although they’re computationally limited , spreadsheets are widely un - derstood , and many people use them to create informal models that support decision - making . Thus , spreadsheets provide an easy way to “open up” mod - eling to a broad community without re - quiring users to learn a domain - specifi c language for building models . ROMA Application in the Climate CoLab In the Climate CoLab , some kinds of user proposals must be attached to a ROMA - generated scenario that pre - dicts the impacts of that proposal . The CoLab uses the XML data ROMA pro - vides to generate an interface that lets users enter input variables , run models , and view stored results . So far , all proposals that require models in the CoLab have been for a global agreement to address climate change , and contributors have used one of three variants of a single composite model to develop scenarios . The com - posite model combines a climate simu - lation with models that predict eco - nomic and physical systems’ impacts ( see Figure 3 ) . The model’s variants differ in the degree of granularity with which users specify emissions reduction commitments for the world’s nations . To run the model , users specify global land use goals and emissions commitments broken out as inputs by region . They can choose to specify emissions targets for three ( developed countries , rapidly developing countries , and other developing countries ) , seven ( with larger economies broken out ) , or 15 regions . Models in the seven - and 15 - region variants of the composite model transform the emissions inputs into the three regions accepted by the C - Learn Climate Model . The MIT composite model feeds emissions commitments for three re - gions and land use goals into the C - Learn climate simulation . C - Learn is a version of the Climate Rapid Overview and Decision - support Simulation ( C - ROADS ) , 8 a lightweight climate model developed by Climate Interactive ( http : / / climateinteractive . org ) that can run on personal computers . C - Learn runs as a separate Web service hosted on an internal server and produces pre - dictions for several indicators includ - ing the climate outputs in Figure 3 . C - Learn outputs are for each year from 2000 to 2100 inclusive . Two physical impact models pro - duce a brief textual summary of the anticipated effects of temperature change on geophysical ( water , land , ecosystems , and singular events ) and human systems ( health and food / ag - riculture ) . This information is derived from published research that provides predictions for each Celsius degree of change . 10 , 11 The CoLab model then captures this information as a simple spreadsheet model that looks up the appropriate output based on the tem - perature change by 2100 , and uses a mapped model to transform the vector outputs from C - Learn into the scalar output that the physical impacts mod - els require . Composite model C - Learn climatemodel 7 region Land use Afforestation Deforestation Emissions change Option : 3 region Option : 15 region Option : 7 region User - provided inputs Climate Regional emissions Atmospheric CO 2 Sea level Temperature Ouputs GDP : Gross Domestic Product Energy Modeling Forum - 22 mitigation cost ( 7 surrogate models ) Damage cost ( 2 surrogate models ) Physical impacts ( 2 models ) % GDP mitigation % GDP damage Sea level Temperature Economic Water , food , etc . Physical systems FIGURE 3 . MIT composite model inputs , modules , and outputs . The three - , seven - , and 15 - region inputs for emissions are interface options that let the user specify emissions reductions at different levels of granularity . 60 IEEE SOFTWARE | WWW . COMPUTER . ORG / SOFTWARE FOCUS : CLIMATE CHANGE SOFTWARE Based on data generated by a hand - ful of well - known IAMs , several sur - rogate models can compute economic outputs . Typically , IAMs report two types of economic costs : damage cost ( the cost of climate change reported as a percentage deviation from anticipated future Gross Domestic Product [ GDP ] if climate change were not to occur 9 , 11 ) and mitigation cost ( the cost of reduc - ing emissions , also reported as percent deviation GDP from an anticipated baseline ) . The MIT composite reports seven predictions using surrogate mod - els based on data from the Stanford Energy Modeling Forum’s ( EMF ) 22 exercise . 12 Preparing Mitigation Cost Surrogate Models We based mitigation cost models in the CoLab on data generated during the EMF 22 exercise . Modeling teams who participated in EMF 22 simulated a group of scenarios that refl ected a range of potential global mitigation policy approaches plus a reference , called a business as usual ( BAU ) sce - nario with no mitigation policy . Each scenario involved stabilizing green - house gas concentrations at a particu - lar target level . Data reported included greenhouse gas ( GHG ) emissions and sequestration and a variety of eco - nomic indicators such as GDP . We created surrogate models to predict the effect of emissions reduc - tion on anticipated GDP from 2000 to 2100 . We chose changes in GHG emis - sions as input because emission reduc - tions are the primary mechanism by which to achieve GHG stabilization and because actions to reduce emis - sions will be the primary driver of mit - igation policy costs . To construct the surrogates , we used two sets of data for each model : percentage change in fossil fuel CO 2 emissions versus 2005 levels and per - centage reduction in GDP versus the reference scenario ( no policy or BAU ) . Thus , for each model in each year , we had n points that associate an emis - sions level with a percent deviation in GDP , where n is the number of sce - narios our analysis used for that model ( see Figure 4 ) . To determine the impact on GDP for any emissions level in a particular year , we located the point on a curve that best fit the n data points avail - able for that year and then used linear piecewise interpolation to approxi - mate this curve . More sophisticated approaches ( for example , higher - order polynomials ) are possible , but we didn’t feel they were justified without additional data . If emissions levels are lower than the most ag - gressive scenario in a particular year , the surrogate model doesn’t report a value . If emission levels are higher than BAU ( the scenario for which mitigation cost is zero ) , the model simply reports zero percent change in anticipated GDP . For policy proposals in the CoLab that are too aggressive to be simulated with a particular surrogate mitigation model ( for example , emissions levels are too low in a particular year ) , the system reports that the modeling team in question likely judges the policy sce - nario to be technically or economically infeasible . Some inaccuracies arose for the Co - Lab mitigation cost models because emissions values generated by C - Learn and used as inputs to the surrogate models didn’t correspond in every de - tail with the emissions values the origi - nal mitigation models used . For ex - ample , CoLab users could specify land use goals to manipulate emissions lev - els , but the surrogate models didn’t in - corporate this as a source of emissions . Land use accounted for approximately 8 percent of total CO 2 emissions in 2010 , so differences in land use policy would have an incremental impact on both environmental and economic out - comes . To enhance the system’s accu - racy , we’re exploring the incorporation of land use emissions in a future sur - rogate model . Business as usual Scenario A Scenario B % 2005 emissions Year 2080 Y ea r 2080 % G D P % Emissions × GDP % G D P FIGURE 4 . Development of mitigation cost surrogate . For each year , emissions values in each scenario are plotted against Gross Domestic Product ( GDP ) values . Surrogate models use the resultant curve to infer GDP over the entire range of emissions values for that year . NOVEMBER / DECEMBER 2011 | IEEE SOFTWARE 61 T he modeling functionality ROMA offers to Climate Co - Lab users is only a subset of its potential . We plan to introduce more advanced functionality as we develop organizational processes to help scaf - fold its use . Throughout 2011 , the Co - Lab will launch a series of contests to create both national and global pro - posals for emissions reduction . Occur - ring in parallel , these contests will be phased with interim evaluations at the end of each phase . Within the CoLab , the validity of the models has been established via a centrally administered review process with a panel of experts . To support the vision of an open - modeling community , we hope to design processes and techni - cal support to better leverage the collec - tive intelligence of the community . For instance , the community could be in - vited to look for obvious errors ( infi nite or impossible values at the extrema of the input space ) for each model . Model creators and experts might attach key assumptions to individual models , and experts could weigh in on the validity of those assumptions . These assess - ments could be summarized to provide policy - makers with indications about model maturity and uncertainty . The hurdles to creating community processes around model creation , anal - ysis , and validation are as much social and organizational as they are tech - nical . Integrated assessment models have traditionally been implemented as monolithic software projects devel - oped by small teams of experts , and these development processes have led to the complexity and opacity that cur - rently cause diffi culties . By emphasiz - ing modularity and offering a set of features that allow stakeholders to be - come more directly involved in climate and assessment modeling , we hope ROMA will enable the social and orga - nizational processes that ultimately im - prove our chances of creating solutions to climate change . References 1 . M . Matthies , C . Giupponi , and B . Ostendorf , “Environmental Decision Support Systems : Current Issues , Methods and Tools , ” Environmental Modelling & Software , vol . 22 , no . 2 , 2007 , pp . 123 – 127 . 2 . I . S . Mayer et al . , “Collaborative Decision Making for Sustainable Urban Renewal Projects : A Simulation - Gaming Approach , ” Environment and Planning B : Planning and Design , vol . 32 , no . 3 , 2005 , pp . 403 – 423 . 3 . B . Friedman et al . , “Laying the Foundations for Public Participation and Value Advocacy : Interaction Design for a Large - Scale Urban Simulation , ” Proc . 2008 Int’l Conf . Digital Govt . Research , Digital Gov’t Soc . North America , 2008 , pp . 305 – 314 . 4 . T . W . Malone , R . Laubacher , and C . Dellarocas , “The Collective Intelligence Genome , ” Sloan Management Rev . , vol . 51 , no . 3 , 2010 , pp . 21 – 31 . 5 . J . Introne et al . , “The Climate CoLab : Large Scale Model - Based Collaborative Planning , ” Proc . 2011 Conf . Collaboration Technologies and Systems , IEEE CS Press , 2011 , pp . 40 – 47 . 6 . L . Hong and S . E . Page , “Groups of Diverse Problem Solvers Can Outperform Groups of High - Ability Problem Solvers , ” Proc . Nat’l Academy of Sciences of the United States of America , Nat’l Academy of Sciences , vol . 101 , no . 46 , 2004 , pp . 16385 – 16389 . 7 . D . Gorissen et al . , “A Surrogate Modeling and Adaptive Sampling Toolbox for Computer - Based Design , ” J . Machine Learning Research , vol . 11 , 2010 , pp . 2051 – 2055 . 8 . T . Fiddaman et al . , C - ROADS Simulator Reference Guide , Climate CoLab , 2011 . 9 . P . W . D . Nordhaus , A Question of Balance : Weighing the Options on Global Warming Policies , Yale Univ . Press , 2008 . 10 . M . L . Parry , O . F . Canziani , and J . P . Palutikof , “Technical Summary . Climate Change 2007 : Impacts , Adaptation and Vulnerability . Contribution of Working Group II to the 4th Assessment Report of the Intergovernmental Panel on Climate Change , ” Report of the Intergovernmental Panel on Climate Change , M . L . Parry et al . , eds . , Cambridge Univ . Press , 2007 , pp . 23 – 78 . 11 . N . H . Stern , The Economics of Climate Change : The Stern Review , Cambridge Univ . Press , 2007 . 12 . L . Clarke et al . , “International Climate Policy Architectures : Overview of the EMF 22 International Scenarios , ” Energy Economics , vol . 31 , no . 2 , 2009 , pp . S64 – S81 . JOSHUA INTRONE is a research scientist at the MIT Center for Collective Intelligence and the software architect of the Climate CoLab . His research interests include the design of mediating tools to improve collaborative and collective performance , the impact of social network structure on collaborative information processing , and the development of sociotechnical architectures for problem - solving . Introne has a PhD in computer science from Brandeis University . Contact him at jintrone @ mit . edu . ROBERT LAUBACHER is a research scientist and associate direc - tor at the MIT Center for Collective Intelligence , where he manages the Climate CoLab project . His research interests include developing approaches that can make complex simulation models accessible to interested citizens . Laubacher has an MA in modern history from Harvard . Contact him at rjl @ mit . edu . THOMAS W . MALONE is the Patrick J . McGovern Professor of Management at the MIT Sloan School of Management and the found - ing director of the MIT Center for Collective Intelligence . His research interests include collective intelligence , organizational design , and computer - supported cooperative work . Malone has a PhD in cogni - tive and social psychology from Stanford University . Contact him at malone @ mit . edu . A B O U T T H E A U T H O R S Selected CS articles and columns are also available for free at http : / / ComputingNow . computer . org .