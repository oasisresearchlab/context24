Articial Intelligence for Engineering Design , Analysis and Manufacturing http : / / journals . cambridge . org / AIE Additional services for Articial Intelligence for Engineering Design , Analysis and Manufacturing : Email alerts : Click here Subscriptions : Click here Commercial reprints : Click here Terms of use : Click here From handicraft prototypes to limited serial productions : Exploiting knowledge artifacts to support the industrial design of high quality products S . Bandini and F . Sartori Articial Intelligence for Engineering Design , Analysis and Manufacturing / Volume 24 / Special Issue 01 / February 2010 , pp 17 - 34 DOI : 10 . 1017 / S089006040999014X , Published online : 29 January 2010 Link to this article : http : / / journals . cambridge . org / abstract _ S089006040999014X How to cite this article : S . Bandini and F . Sartori ( 2010 ) . From handicraft prototypes to limited serial productions : Exploiting knowledge artifacts to support the industrial design of high quality products . Articial Intelligence for Engineering Design , Analysis and Manufacturing , 24 , pp 17 - 34 doi : 10 . 1017 / S089006040999014X Request Permissions : Click here Downloaded from http : / / journals . cambridge . org / AIE , IP address : 216 . 138 . 114 . 138 on 22 Mar 2015 From handicraft prototypes to limited serial productions : Exploiting knowledge artifacts to support the industrial design of high quality products S . BANDINI AND F . SARTORI CSAI—Complex Systems and Artificial Intelligence Research Center , University of Milano , Milan , Italy ( R ECEIVED October 25 , 2008 ; A CCEPTED July 3 , 2009 ) Abstract This paper presents a conceptual and computational framework to support experts in the design and manufacturing of high quality products . The framework is based on the development of specific knowledge artifacts characterized by tools for the management of functional , procedural , and experiential knowledge . As a case study , the GUITAR HERO project is pre - sented . The project aims at building a knowledge - based system to support experts of a handicraft enterprise involved in the design and manufacturing of electric guitars characterized by an aluminum body . The domain of the project is extremely innovative , because electric guitars are typically manufactured with different kinds of wood rather than metals or other materials . To this aim , an ontological representation of the electric guitar has been implemented exploiting NavEditOW , a computational framework for the codification , navigation , and querying of ontologies over the Internet , based on the OWL language . Keywords : Functional and Procedural Knowledge Management ; Knowledge Artifact 1 . INTRODUCTION In this paper we present a conceptual and computational framework for the development of knowledge - based systems to support experts of small and handicraft enterprises in - volved in the design and manufacturing of high quality pro - ducts for limited serial productions . The paper investigates how functional knowledge can be profitably acquired and represented through the usage of a specific knowledge artifact ( KA ; Salazar - Torres et al . , 2008 ) composed of four conceptual tools : ontologies , SA * - Nets , T - Matrix , and Task Structures for Complex Object Design ( TS - CODE ) . Ontologies are one of the most suitable ap - proaches to represent functional knowledge about a domain . In our framework , ontologies are used to specify the structure of a product with respect to the functional nature of the relationships existing among its parts . SA * - Nets are useful in the specification of how the design process is represented in terms of design phases and relationships among them . The T - Matrix tool allows representing how different struc - tural components of a product can be aggregated from the functional point of view , as well as the relationships existing between functions and the final performances the product must have to be successful . Finally , TS - CODEs allow the de - scription of how a specific design phase is managed by expert designers according to their experience . This framework is particularly suitable to develop support - ing systems for handicraft enterprises involved in the design of innovative products , especially when such products are because of the collaboration among networks of small and medium enterprises ( SMEs ) . To make clearer the theoretical aspects of this approach and the benefits for networked SMEs , a case study related to the GUITAR HERO project will be presented . The project is the result of the collaboration between CSAI ( www . csai . disco . unimib . it ) and NOAH Guitars ( www . noahguitars . com ) , an Italian SME leader in the production of high quality guitars . An electric guitar is a complex product in which each part has a precise function , and some of them influence others . For ex - ample , body is the main part of the guitar ; different from acoustic guitars , the body of electric guitars has no significant role from the musical point of view , but it is responsible for connecting all other components . Although electric guitar bodies are traditionally made of wood , NOAH guitar body design and manufacturing are based on the adoption of aluminum . Reprint requests to : S . Bandini , Complex Systems and Artificial Intelli - gence Research Center , University of Milano , Bicocca , Viale Sarca 336 , Milan U14 20126 , Italy . E - mail : bandini @ csai . disco . unimib . it Artificial Intelligence for Engineering Design , Analysis and Manufacturing ( 2010 ) , 24 , 17 – 34 . Copyright # Cambridge University Press , 2010 . 0890 - 0604 / 10 $ 25 . 00 doi : 10 . 1017 / S089006040999014X 17 The aim of the GUITAR HERO project is to build a knowl - edge model of the decisional process of NOAH experts . To do this , we have decided to follow the methodological approach exploited in the IDS project ( Bandini & Sartori , 2006 ) , with the definition of three different levels of knowledge to be acquired and represented : 1 . ontological knowledge , related to the definition of structural and functional relationships ( Colombo et al . , 2007 a ) among guitar parts ; 2 . procedural knowledge ( Friedland , 1981 ) , related to the description of how the guitar components are manufac - tured , as well as which factors influence the different steps of the process ; and 3 . experiential knowledge , devoted to represent into a homogeneous conceptual framework the heuristic rules adopted by the different kinds of expert involved . The paper will be organized as follows : after a brief intro - duction to clarify the motivations of the work , a review of lit - erature will be provided , from both the existing ontological approaches to support design and the KA adoption . Then , the paper will describe the domain of the case study : a brief literature review about knowledge management ( KM ) to sup - port SMEs and networks of SMEs , and the results of the knowledge acquisition campaign conducted with NOAH ex - perts . Moreover , the KA introduced to give a characterization of NOAH guitars will be described . Another section ofthe paper will be devoted to computational aspects of the GUITAR HERO project , to show how the KAs developed can become an effective knowledge - based system to support NOAH experts in their decision making process . In particular , this part of the paper will focus on the NavEditOW tool , anapplicationforNavigating , Editing , andQueryingOntol - ogies over the Web and its use in the GUITAR HERO project . Finally , conclusions and future works will end the paper . 2 . MOTIVATIONS Knowledge - based system applications have a big potential to reduce cost and time for repetitive engineering tasks , but require a relevant effort to collect and formalize the required knowledge in an opportune scheme . In this field , generally referred to as engineering design , one of the most known examples of appli - cation to the industrial planning of complex objects has been proposed by Gero and Maher ( 1997 ) : they defined specific knowledge representation schemes , the so - called prototypes ( Gero , 1990 ) , for describing the conceptualization and ideation process generally followed by a draftsman . In this framework , the case - based design paradigm has been suggested to reuse previous solutions to solve similar design problems ( Maher et al . , 1995 ) . Engineering design can be considered an articulate pro - cess composed of phases , where each phase represents a combinatorial action on the parts the composite object is constituted of : to realize an object meeting the desired market requirements , designers have to deal at the same time with different kinds of knowledge coming from at least two epis - temological sources : ontological knowledge ( Guarino , 1998 ) , which is often represented in a declarative form , and procedural knowledge , about processes of design . Many references in the literature , like Deng ( 2002 ) , Kita - mura ( 2002 ) , Bracewell and Wallace ( 2001 ) , and Umeda et al . ( 1996 ) , indicate that the competence of engineering de - signers is related to their ability in considering functional con - straints over the parts of the objects they are designing . Ac - cording to our viewpoint , this expert designers’ competence gives the ability to navigate ontological and procedural knowledge considering different kinds of relationships among parts of the desired object . The central role of heuris - tics in performing design tasks mainly resides in this capabil - ity to shift through different epistemological dimensions . We look at design heuristics as a set of competencies , growing from experience , which bridge the gap between ontological and procedural knowledge and makes designers able to ar - ticulate the design process referring to functional constraints . Therefore , the development of knowledge - based systems supporting engineering design activities must take into ac - count the formal representation of both these knowledge sides as described by Umeda and Tomiyama ( 1997 ) : function plays a crucial role , because the results of the design depend en - tirely on the decomposition of the function and on the design - er’s capability to build the appropriate object realizing that function . As a result , the designer obtains a hierarchy of func - tions that are projected on the aggregate of parts the com - posite objects is constituted of . Thus , when designers speak about the “function” held by an object or by one of its components , they can speak about it because they have sufficient knowledge for associating functions to a suitable object structure . The nature of the functional relations , however , can widely vary . Understanding these relations allows engineers to rea - son about the artifacts and to make clearer the sets of onto - logical and procedural constraints necessary to meet market requirements . Despite many frameworks for engineering , de - sign KMs have been developed , for example , the EDIT methodology by Ahmed et al . ( 2007 ) . Based on the adoption of functional ontologies , our approach is radically different from them , because we have adopted a KM perspective based on the integration of multiple tools : ontologies , for the de - scription of object structure with the aim to identify func - tional systems , SA * - Nets , for the description of engineering design steps from the procedural point of view , and T - Ma - trixes and TS - CODEs for the definition of object perfor - mance on the basis of designers’ experience . The composi - tion of such tools defines our KA for engineering design . 3 . CONCEPTUAL TOOLS FOR FUNCTIONAL KM : ONTOLOGIES The first shared knowledge structure allowing the contracting activity in common problem solving can be represented using S . Bandini and F . Sartori 18 the ontology approach ( Guarino , 1995 ) . At a first glance , the hierarchical structural decomposition of an object to design ( is - a , part - of relations ) could represent the right structure of this kind of knowledge , because of the classificatory capabil - ities of the senior design professionals . The mere joining of this ontological setup with knowledge involving the functionalities ( not captured by is - a , part - of relations ) of the involved object parts can be conceptually complicated and sometimes not feasible . A different and more suitable conceptualization has been adopted as shown in Figure 1 . The object to design is requested to perform different func - tions : each conceptual part of the product that performs a specific function is called functional system . An object can be considered as a collection of one or more functional systems . Functional systems , however , can be fairly complex . Some - times , designers conceive them as a composition of lower level aggregates , which are semimanufactured components to be grouped together for making simpler and faster the design of a functional system . Finally , elements are ( atomic ) elementary parts ; their role can be different according tothe aggregate ( and , consequently , functional system ) they belong to . 4 . CONCEPTUAL TOOLS FOR PROCEDURAL KNOWLEDGE : SA * - NETS The functional ontology introduced above clearly describes the different components of the object to design and their functions . Procedural knowledge concerns the design of sin - gle parts , focusing on precedence constraints that must be taken into account to avoid possible mistakes in the design task . These constraints can be because of manufacturers’ guidelines as well as geometric considerations . To properly represent procedural knowledge we have adopted a specialization of Superposed Automata Nets ( SA - Nets ) . This specialization is called SA * - Nets . SA - Nets ( De Cindio et al . , 1981 ) are formal tools for the analysis of concurrent systems . The main idea behind the adoption of such tool in the knowl - edge - based system context is that the design of object parts can beconsideredassequencesofsteps , whichareexecutedeitherse - quentiallyorcontemporary . Duringthisprocess , itispossiblethat a design step is influenced by the results of another one related to a different part , generating a synchronization between two distinct components : each design step can be represented by a transition in aformalism like a Petri Net . To take care of synchro - nizations , opportune relationships are considered ( see Fig . 2 ) . 4 . 1 . Definition 1 ( SA * - Nets ) A SA * - Net is a 4 - tuple k S , T , A , R l where † S is a set of states ( i . e . , circles in Fig . 2 ) ; † T is a set of transitions ( i . e . , rectangles in Fig . 2 ) ; † A is a set of arcs , links between states and transitions of a SA * - Net ( i . e . , solid arrows in Fig . 2 ) or between tran - sitions belonging to different SA * - Nets ( i . e . , the dashed arrow in Fig . 2 ) ; and † R is a set of rules to describe how precedence relation - ships among die parts are established . The set S contains two special states begin and end , which identify the starting and ending points of a product design . It is important to notice that states of SA * - Nets are completely dif - ferent from statesofPetri - Nets or SA - Nets . In fact , states in SA * - Nets allow identifying all the design steps already executed : in this sense , a marker on a state of a SA * - Net does not indicate Fig . 1 . An object can be decomposed , according to three different levels of complexity , into several functional systems , aggregates , and elements . A framework to support high quality products design 19 the possibility for the outgoing transition to fire , but it does indi - cate that the design step above it has been already accomplished . Transitions represent design steps and are bounded to states above and behind them by means of arcs . There exist two par - ticular transitions , namely , fork and join , that are used to identify points where concurrency among distinct sequences of design steps begins or finishes , respectively . Arcs are not labeled and can have two semantics : they can represent a se - quential flow in the execution of design step with reference to an object part or precedence constraints between two design steps that are in the same or different SA * - Nets . Finally , rules specify how the SA * - Net is browsed and used . Rules can belong to the following three categories , as shown in Figure 3 : † Rule number 1 : within a SA * - Net , given an executed tran - sition , all the transitions above it must be already visited ; † Rule number 2 : if a transition T 1 of a given SA * - Net is bounded to a transition T 2 of another SA * - Net by a prece - dence constraint , the transition T 2 must be already visited ; † Rulenumber3 : ifatransition T 1 istheresultofajoinamong transitions T 2 , . . . , T n , transition T 1 can be executed if and onlyifallthetransitions T 2 , . . . , T n havebeenalreadyvisited . Starting from the ontological representation of the object , a SA * - Net for every functional system identified must be pro - duced . Such net completely describes the different design steps needed to design the functional system it refers to , by means of aggregates and elements usage and configuration . The compo - sition of all the SA * - Nets through the fork / join transitions al - lows the designer to give a clear and complete description of the main object design process , following a bottom - up strategy . 5 . CONCEPTUAL TOOLS FOR EXPERIENTIAL KNOWLEDGE : T - MATRIX AND TS - CODE Given a complete SA * - Net , Experiential Knowledge concerns how the different design steps are effectively accomplished by the designer , according to his / her own style . Each transition in theSA * - Netisthenfurtherspecifiedbya groupofspecific tools , Fig . 2 . The design steps of two mechanical object parts : the dashed arrow linking design step 1 of object part 2 and design step 2 of object part 1 indi - cates that design step 1 must be accomplished before . Fig . 3 . A representation of the three categories of rules adopted in the framework . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] S . Bandini and F . Sartori 20 in terms of preconditions to be verified and actions to be done . Typical actions are the evaluation of geometric parameters and suggestions about an aggregate ( or element ) to include in the project with respect to another one . Preconditions typically con - cern precedence constraints among transitions or object parts . In our framework , two kinds of tools have been considered : T - Matrix ( Colombo & Sartori , 2003 ) and TS - CODE . T - Matrix aims at the representation of relationships among ontological elements , aggregates , functional systems , and ob - ject performances . The result is atablewhere it is possible to de - fine which correlation ( i . e . , weak , good , strong , or none ) exists between a group of elements and the functional system they be - long to , together with the related proportionality ( i . e . , direct or inverse ) ; then , a deeper functional analysis can be made by ana - lyzing which kind of relationship existsbetween groups of func - tionalsystems ( i . e . , arepresentationofobjectpropertiesfromthe designer point of view ) and object performances ( i . e . , a repre - sentation of object properties from the user perspective ) . The re - sult is a T - like structure similar to the one depicted in Figure 4 . Ontology elements and aggregates are listed in the matrix rows , as well as object performances . Functional systems are put on the columns . Looking at the example in the figure it is deduced that Aggregate 1 , Element n , and Aggregate l belong to Functional System j , because their correlations with it are strong , good , and good , respectively . This means that object functions de - livered by Functional System j widely vary by changing Aggregate 1 , Element n , and Aggregate l attributes . In particular , although an improvement of Aggregate 1 and Element n would improve Functional System j characteristics accordingly because of their direct proportionality value , an increment of Aggregate l features would induce a decrement on Functional System j , be - cause they are inversely correlated : as a consequence , the de - signer could operate on Aggregate 1 and / or Element n parameters to preserve Functional System j functionality . A similar interpretation is possible for the upper part of the table , concerning relationships among functional systems ( i . e . , functions defined by object designer ) and performances defined by the object user : for example , Functional System 2 , Functional System j 2 1 and Functional System j have influence on Performance m 2 1 , whereas Functional System 1 has not . Although T - Matrix is useful in the definition of functional relationships on ontologies according to the knowledge of ex - perts , another conceptual tool has been thought to represent knowledge involved in design steps’ specification . This tool is Task Structure for Complex Object Design ( TS - CODE ) , a specialization of Task Structures introduced by Chan - drasekaran ( 1989 ) . According to its definition , a Task Structure should concern a portion of the knowledge model , giving a syn - thetic description of inputs , outputs , and a body describing the problem solving strategy to get outputs from inputs . In our framework , aTS - CODEisusedtospecifyadesignstepinvolved in the definition of a functional system , as shown in Figure 5 . 5 . 1 . Definition 2 ( TS - CODE ) A TS - CODE is a 4 - tuple k L , I , O , B l where † L is the label of the task , that is , the name of the func - tional system or design step it refers to ; Fig . 4 . The T - Matrix representation . A framework to support high quality products design 21 † I is a set of inputs , that is , values that must be used in the body to obtain expected results ; † O is the output of the task , that is , a value representing the expected result of the knowledge model part defined by the task ; and † B is the body of the task , that is , a set of instructions spe - cifying the problem solving strategy adopted to obtain expected results from given inputs . In case of precedence constraints between two design steps , the TS - CODE representing the influenced task will contain a call to the TS - CODE representing the other task . Finally , a distinction between task and subtask has been made : a task is the representation of a functional system , a sub - task is a representation of a part of that functional system , that is , a given design step . In other words , whereas the task body ends returning the output O of the functional system , a subtask calcu - lates a partial value that is necessary to obtain that output . A sub - task is identified in the task bodyas a procedure call . In this way , it is possible to give a clear and understandable structure to the knowledge model involved in the design of a functional system , reusing the code for a subtask in more than one task . As high - lighted in Figure 5 , subtasks’ inputs are subsets of the task input set , and the task output is the result of a MERGE function that exploits the partial results elaborated by subtasks . 6 . PUTTING ALL TOGETHER : KAs FOR COMPLEX OBJECT DESIGN The three kinds of tools introduced so far can be used to build a specific KA for Design , through which uniform and integrated models of distinct types of knowledge concerning design can be developed . The notion of artifact has many meanings in literature : for example , in Hilpinen ( 2008 ) we find that an artifact is an ob - ject that has been intentionally produced for a specific pur - pose . Moreover , according to De Michelis ( 1998 ) , an artifact is the result of a disciplined human activity , following rules and based on training and experience . As a consequence , every artifact has an author and a purpose . Artifacts can be evaluated in terms of how their actual fea - tures match the features intended by their authors and the pur - poses to which they are built . Given a purpose P , an author A devises an artifact and obtains an invention , an idea or a pro - ject that describes the artifact at an abstract level . We can refer to this object , resulting from the author intellectual work , using the symbol I . Finally , the actual artifact R is used for the purpose P . It should be noticed that the purpose that has produced both the design of I and the implementation of the artifact R could differ from the purpose of the user of an artifact . The artifact R described by I is the real object . The author would like R to have the intended features to fit the original purpose P . The description I of the artifact is clearly the result of a design process . It is a formal and abstract representation of an actual object R . The devised artifact needs to be imple - mented , to produce the actual artifact R that is going to be used . As presented in Figure 6 , P , I , and R are related through de - sign , implementation , and utilization . A successful set of re - lationships is that in which a design leads to an I that perfectly matches a given purpose P , whose implementation leads to an Fig . 5 . TS - CODE representation . S . Bandini and F . Sartori 22 R that perfectly matches I , and such that the utilization of R also perfectly matches P . One interesting point to be noticed is that the arrows in Fig - ure 6 are one - to - many relations . In fact , a purpose P can lead to a variety of designed artifacts I 1 , I 2 , and so forth . Summarizing , an artifact is hence characterized by a par - ticular triple k I , R , P l , in which a design I is implemented as an actual object R that is used for a purpose P . The separate elements I , R , and P can be put together in a triple k I , R , P l that is the “artifact in the context” view of the artifact R . Our focus is not on artifacts in general but on KAs , which are artifacts designed and implemented with the aim to repre - sent expert knowledge in the object - manufacturing field . For this reason , a KA suitable for the framework proposed in this paper should be able to bind ontological description of the object and procedural one ( as previously described ) through the acquisition and representation of expert knowledge in - volved in this task . Thus , we can now define a KA for the design and manufacturing of complex objects as follows : 6 . 1 . Definition 2 ( KA ) A KA for the design and manufacturing of complex objects is a triple k P , I , R l where † P is the set of functional systems that defines the object , as described by the ontology ; † I is a set of design steps to define how each functional system is projected , as described by the SA * - Net ; and † R is a set of conceptual tools to represent expert knowl - edge involved in the definition of functional properties of the object , like the T - Matrix , or to describe how each design step is accomplished by the object designer , like TS - CODE . 7 . COMPUTATIONAL TOOLS TO MANAGE KAs : NavEditOW Up to now , we have presented an approach for the modeling of conceptual KAs involved in design . Of course , this methodological approach should be properly mapped on a collection of suitable computational tools to build effective knowledge - based systems based on it . T - Matrix and TS - CODE can be naturally implemented by means of production rules of a rule - based systems approach . In fact , they are char - acterized by a set of preconditions to be verified and a set of actions to make in case of positive pattern matching on pre - conditions . SA * - Nets must be supported by ad hoc editors , which allow specifying the rules concerning the management of procedural knowledge . To represent ontological knowledge , we have developed a specific tool based on semantic Web technology , named NavEditOW ( Bonomi et al . , 2007 ) . This part of the paper is devoted to describe the main aspects of such tool , both from the theoretical and practical standpoints . Before developing a new system , we have analyzed the prin - cipal tools of this area . One of the most popularontologyeditor is Prote´ge´ . It is a free , open - source ontology editor and knowl - edge - based framework . A detailed description of Prote´ge´ is out of the scope of this paper and can be found in Knublauch et al . ( 2004 ) . Prote´ge´ allows editing of ontologies expressed in OWL . Prote´ge´ is one of the best OWL editors , but its user in - terface is too complex for a user with no experience of onto - logical languages and lacks some useful functions like the in - spection of the elements ( e . g . , via hyperlinks ) and comfortable edit / visualization facilities for the individuals . NavEditOW ( see Fig . 7 ) allows overcoming these prob - lems exploring the concepts and their relational dependencies as well as the instances by means of hyperlinks ; moreover , it provides a front end to query the repository with the SPARQL 1 query language . More details about NavEditOW usage will be supplied after the introduction of the framework scenario in the context of GUITAR HERO project ( see Section 8 ) . 8 . FRAMEWORK SCENARIO : SUPPORTING HANDICRAFT ENTERPRISES As briefly explained in the introduction , the framework has been thought to support experts of small and medium and han - dicraft enterprises in the design of their products , to help them to capitalize their knowledge , and make simpler and more effi - cient communication with partners and suppliers . In particular , the framework is devoted to support the building of common jargon and understanding of a product inside networks of SMEs involved in its design and manufacturing . Many researches have been carried out in the KM context , both from the theoretical and the practical standpoint to sup - port SMEs in their day - by - day activities and to join SME net - works . From the theoretical point of view , many conceptual frameworks have been developed , starting from the well - known work by Nonaka and Takeuchi ( 1995 ) , who distin - guish between tacit and explicit knowledge and adopt the knowledge creation spiral to represent them . This model describes a dynamic environment where tacit and explicit knowledge are continuously exchanged and transformed Fig . 6 . Design , implementation , and utilization of an artifact . 1 SPARQL is an RDF Query Language standardized by the World Wide Web Consortium ; see http : / / www . w3 . org / TR / rdf - sparql - query A framework to support high quality products design 23 through socialization , combination , externalization , and in - ternalization . Another important contribute comes from Handzic ( 2006 ) , who highlights the relevance of KM for SMEs , given that typ - ically they have no more than 50 employers . Handzic argues that although the small size of an enterprise is a benefit from the agility perspective , in contrast , it is a drawback thinking at the consequent vulnerability in terms of loss of key personnel . This is probably the key aspect to deal with in the develop - ment of KM systems for supporting SMEs : a KM application must take into account the creation of a knowledge model helping the SME to survive in case of absence of one or more experts . This is particularly true in the case of net - worked SMEs , where experts are geographically distributed : the loss of communication between two members of the clus - ter should not generate loss of time ( and consequently , money ) in the whole decision - making process . The main aim of a KM project in the networked SMEs should be the representation of knowledge to create shared models that can help each SME to keep the current state of the project under control , without delays in receiving inputs and producing outputs . From the practical standpoint , many researchers have focused on the development of decision support systems to allow SMEs increasing their technological level in many dif - ferent fields . For example , the Symphony project ( Bandini et al . , 2007 ) was funded by European Community to develop a KM system to support experts of human resources of SMEs in the employer selection process . In that experience , candi - date profiles were compared according to a case - based rea - soning approach ( Kolodner , 1993 ) . At any rate , it is still very difficult to build effective KM systems for networked SMEs , because of logistic problems in acquiring , representing , and implementing knowledge owned by experts who are not physically in the same place : typically , these systems are characterized by the fusion of dif - ferent kinds of computer - based applications into an unique computational framework . A significant experience in this sense comes from the KNOW - CONSTRUCT project ( Soares et al . , 2006 ) , which aims at providing SMEs of the construction sector with a sophisticated information management platform and commu - nity building tools for knowledge sharing . The KNOW - CONSTRUCT system exploits ontologies for building reusable pieces of domain knowledge to be structured and classified according to their use into specific meta models , suitable to build knowledge repositories for construction industries , called Construction Industry Knowledge . Fig . 7 . NavEditOW Web Interface developed for the GUITAR HERO project . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] S . Bandini and F . Sartori 24 This model contains information and knowledge about products , processes , problems , best practices , legislative is - sues , and so forth , and it is used by the system for exporting two kinds of functionalities : Customer Needs Management and Knowledge Community Support . The second functionality is the more interesting from the KM perspective , because it concerns the development of technologies , methods , and tools to support knowledge shar - ing and maintenance over a Web - based architecture . To this aim semantic Web technologies are fundamental to provide systems with capability to retrieve complex and heteroge - neous information , generated both internally and externally to the knowledge community . In the following , we will present an approach similar to the one adopted by KNOW - CONSTRUCT developers , where functional ontologies are used to build a meta model of a com - plex product , namely , an electric guitar , that is the result of col - laboration among a collection of SMEs located into a small Italian regional cluster . Through the use of a proper KA it has been possible to help the network to overcome problems in communication because ofthe lack of an opportune techno - logical infrastructure . As a consequence , the development of a shared model of knowledge involved in the decision - making process has been possible . This has allowed the clear definition of roles and the implementation of ERP functionalities that are very useful to solve organizational problems . 9 . FRAMEWORK APPLICATION : THE GUITAR HERO PROJECT The guitar is a relatively recent kind of musical instrument : the first models of guitars where built by Antonio Torres Jurado in the 19th century . The guitaracquires importance in the 20th cen - tury and , in particular , in the period between 1930 and 1950 , when American manufacturers like Fender and Gibson gave very important stimulus to the development of guitar acoustics . A very important point of break is the birth of electric guitars , whose acoustic properties depend on specific electric components rather than on properties of materials and guitar morphology . These components are called pickups , and they are able to “capture the vibrations” of strings moved by the player conveying them to amplifiers . 9 . 1 . The guitar components An electric guitar is generally composed of the following parts ( see Fig . 8 ) . Body is the main part of the guitar , where the pickups and bridge are located . Bridge is an area of the guitar through which the strings are connected to the body . Very often , strings are placed on saddles . Saddles are config - urable and can be single ( i . e . , each saddle is devoted to the connection and regulation of one and only one string ) or double ( i . e . , each saddle is devoted to the connection and reg - ulation of two strings ) . There exist many different kinds of bridge , some of the most used are tremolo bridges ( e . g . Wilk - inson or Bigsby ) , adjustable bridges , and fixed bridges . Frets are vertical metal wires that sit vertically on the guitar neck . Headstock is the area of the guitar at the end of the neck where the strings are fixed and tuned , and neck is the long narrow part of the guitar where notes are fretted . Located between the body and headstock of the guitar , the neck is usually a wooden part : to limit negative effects of deformations , an adjustable steel bar called a truss - rod is placed inside it . The truss - rod can be adjustable at the headstock or adjustable at the body . Nut is the point on the guitar neck where the strings touch the neck and join the headstock . The pickup switch is located on the body of the guitar used to select different pickups for different tones and sounds . The pickup is a magnet wrapped in copper wires that sits on the face of an electric guitar , underneath the strings . When the strings move , they interfere with the magnetic field of the pickup , and that impulse is sent to the amplifier . There are many kinds of pickups according to the number of coils they are made up of . Typically , single - coil ( more subject to noise ) or multicoil ( humbuckers ) ( less subject to noise ) pickups are adopted ; tremolo ( i . e . , whammy bar ) is a bar connected to the bridge of the guitar . By moving the tremolo bar up or down the bridge moves con - sequently , thus changing the pitch by loosening the tension of strings . Tuning pegs are the pegs located at the headstock , which are used to tune the guitar . The machine heads have gears that can tighten or loosen the string when turned . Volume and tone control are control knobs located on the body of the guitar and used to adjust guitar volume and tone . In the next section , we will describe the object of the GUI - TAR HERO project , that is , an aluminum guitar designed and manufactured by NOAH , an Italian small – medium enterprise that creates handicraft guitar used by some of the most famous players in the world . 9 . 2 . Aluminum guitars versus wooden guitars : The NOAH case study Generally , electric guitars’ components are made of different kinds of wood ( e . g . , rosewood , maple tree ) according to their function . This is because of both historical reasons ( in ancient time , wood was the only suitable material ) and practical ones ( touching wood is a pleasure for players’ hands , wood Fig . 8 . The main components of an electric guitar . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] A framework to support high quality products design 25 is light , etc . ) . The usage of wood has some drawbacks : first of all , wood is an “alive material” that modifies its character - istics . To avoid such problems , wood that is employed in the manufacturing of electric guitars is typically seasoned and expensive . Another problem of wood is that it can be damaged very easily in case of collisions . To solve such problems , guitar manufacturers have experimented with other materials . In particular , metals are considered good substitutes of wood , because they are not deformable . Unfortunately , the adoption of metals leads in most case to obtain too heavy products . Moreover , metals are cold , and they cause bad feelings in gui - tar users who touch them when playing . For this reasons , wood is still the most suitable raw material to use in the manufacturing of electric guitars . Some excep - tions can be found : NOAH Guitars is the Italian leader in the design and manufacturing of aluminum guitars . NOAH experts have devised a process to produce guitars with char - acteristics very similar to more traditional ones exploiting their know - how in working with aluminum . 9 . 3 . The NOAH guitar : A collaboration within a network of SMEs It is important to notice that the NOAH method concerns the design and manufacturing of guitar bodies : other parts , like for example , the neck and headstock are still made of wood . Moreover , although NOAH is responsible for the de - sign of every part , their manufacturing is contracted out to a set of SMEs chosen by NOAH on the basis of two main principles : geographical closeness , to reduce transportation timing and costs , and excellence , to guarantee the maximum level of quality of manufactured parts . The body is obtained from a unique piece of aluminum that is roughly processed by a Finite Element Machine according to a computer - aided design ( CAD ) model . The result is a hol - low body where other guitar components ( pickups , bridge , volume , tone controls , etc . ) will be located . The body is then refined to delete imperfections , to round off edges , and make aluminum polished . An example of a typical NOAH guitar is shown in Figure 9 . The adoption of aluminum provides NOAH guitar bodies with a natural capability to minimize noises because of the interference caused by pickups . Moreover , aluminum bodies can be maintained very easily : because the body is a sort of box where most of the functional parts of the guitar are placed ( e . g . , bridge , pickups , controls ) , the body has been designed and manufac - tured to allow an easy access to such components in case of need , for example , to substitute a broken part . Although this is difficult in the case of wooden guitars , because wooden bodies are built up starting form a unique piece of wood , without junctions , NOAH guitar bodies are made of two dis - tinct parts , the frontal container and a cover , that are fixed to the frontal container by means of screws . In this way , it is really simple to manage other components of the guitar by re - moving the cover . This kind of solution is not applicable to wooden guitars , because the body profile is too thin to allow the realization of holes for screws . Another important innovation by NOAH experts is their at - tempt to reduce the bad feelings in players because of the con - tact with cold surfaces , both from the manufacturing process and raw material adoption perspectives . The last phase of the manufacturing process is anodizing , through which the alu - minum assumes characteristics less unfamiliar in terms of touching perception by the user . Moreover , NOAH experts research is continued in the field of raw material testing , with the experimentation of new types of aluminum and their adoption in case of success . Finally , NOAH electric guitars are also appealing from the aesthetic point of view . Aluminum is buffed by hand to delete imperfections , and also the mounting of other components like pickups and bridges on it are the result of deep analysis . Thus , we can say that the final product is the result of an intense negotiation process among NOAH experts where three distinct competencies emerge : † functional competencies , concerning the property of the guitar from the playing point of view , for example , the reduction of noise ; † procedural competencies , concerning how to design the body exploiting CAD technologies to properly feed ma - chineries that will produce them starting from pieces of aluminum and preserving its functional features ; and † aesthetic competencies , related to the design of guitars that can be appealing for a customer and can characterize them as artistic objects as well as good musical instru - ments . Each of these competence is owned by subgroups of experts in NOAH , as shown in Figure 10 , where it is possible to iden - tify people skilled in playing guitars who are able to recog - nize benefits / drawbacks on the sound quality coming from the adoption of a specific design choice ( i . e . , the performance designer ) , expert people in the field of aluminum properties analysis and metal treatment ( i . e . , the production process de - signer ) and people with deep know - how in the design of ar - tistic objects ( i . e . , the features and shape designer ) . More - over , as introduced above , NOAH collaborates with a small set of enterprises for the manufacturing of different guitar parts . This collaboration has become crucial when the num - ber of guitars to produce has grown , thanks to the success of the product . At the moment , three main partners can be Fig . 9 . A NOAH guitar with an aluminum body . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] S . Bandini and F . Sartori 26 distinguished : two mechanical workshops ( i . e . , MW in Fig . 10 ) in Milan and a maker of stringed instruments in Cremona ( i . e . , MSI in Fig . 10 ) , a small town near Milan worldwide famous for the high quality of its professionals . Although the two mechanical workshops are responsible for the manufacturing of all the guitar’s aluminum compo - nents ( from the body to the screws ) by means of finite element machines and according to NOAH requirements , the maker of stringed elements produces the neck , the head - stock , and the wooden parts to preserve quality and appeal of the final product . This set of SMEs constitutes the network involved in the design and manufacturing of NOAH guitars . The interest on NOAH and its network from the KM per - spective derives from the nature of collaboration among these people to make possible to integrate all competencies into a unique final product : the most important aim of the GUITAR HERO project is the definition of a common jargon and a shared knowledge model that makes possible to classify NOAH and its network as a Community of Practice , accord - ing to the classical definition by Wenger ( 1998 ) . In fact , functional , procedural and aesthetic competencies are not considered in a synchronous way during the design and manufacturing of a new product , but as different and complementary aspects of the same problem . For this reason , the task to produce a new guitar is not considered as a se - quence of atomic steps but as a negotiation process during which each competence is taken into account at the same time . Thus , we can state that creativity in the context of NOAH is the capability of people belonging to the network to uni - formly consider the different aspects of the knowledge in - volved that results into the reification of a concrete object that meets both functional and aesthetic requirements accord - ing to a manufacturing process that allows to preserve them . The exploitation of this model should allow the develop - ment of useful functionalities to support NOAH in taking under control the manufacturing flow of their product , in the crucial switch from a handicraft production of few units per year to a limited serial production of some tens of product per year . To reach this scope , the rest of the paper focuses on the rep - resentation of knowledge involved by means of ontologies , SA * - Nets , T - Matrix , and TS - CODE . 9 . 4 . Structural and functional representation : Ontology and T - Matrix The first objective of the project has been the complete char - acterization of electric guitar from the structural and func - tional point of view . To this aim , an ontology of the guitar has been defined and implemented in NavEditOW . The hierarchical organization of the different concepts and individuals of the ontology is graphically represented as a dy - namic tree . The aim of the navigation tree is to explore the on - tology , to view classes and instances , to discover the relation between them . The tree not only represents a hierarchy of classes con - nected by Is - A binary relations ( shown in Fig . 11a ) but also treelike connections of individuals for domain dependent classes of properties ( e . g . , Part - Of , isMadeOf ) . The parts of a guitar can be considered as classes connected by Is - A rela - tion ( e . g . , a potentiometer is an electronic component , an electronic component is a hardware component , a hardware component is a main component ) . As an example , shown in Figure 11b , the parts of a “phys - ical” guitar can be linked to the guitar by a Part - Of relation . In this way , it is possible to group components under the subtree representing the main part they are all subparts of ( e . g . , start - ing from a guitar instance , it is possible to reach the potenti - ometer through the slim body node ) . The root of the navigation tree is the OWL class Thing , and the rest of the tree is organized as follows : under the root Fig . 10 . The network of SMEs involved in the NOAH Guitar design and manufacturing . A framework to support high quality products design 27 node , there are the top - level classes ( i . e . , direct subclasses of Thing ) ; each class can be expanded to show its subclass hier - archy and its individual members ; individual - to - individual tree connections are defined according to a number of selected properties ( e . g . , Part - Of ) . To distinguish between classes and individuals , they are represented with different colors and markers : a yellow circle for the classes , a violet square for the individuals . More individual properties ( e . g . , MadeOf , not shown in the figure ) are considered by the system and blue squares are used to represent them . The application allows the users to create , edit , and remove individuals of the ontology , their properties and , in particular , their labels . In fact , to ensure multilanguage support , it is pos - sible to introduce several labels in different languages for ev - ery instance . Moreover , contextual editing , that is , the editing of individuals while browsing the ontology , is supported . Although end - users may not be familiar with query languages , the possibility to perform expressive queries is supported . From one hand , a language as much as similar to well - known query languages for relational databases language should be preferred . On the other hand , interfaces enabling not expert users to query the ontology should be developed ( e . g . , query forms ) . One kind of query interface is the SPARQL free query form , where users can write queries in the SPARQL language , display results in paginated tabular form , and navigate through results via hyperlinks . This interface is very flexible because the users can write arbitrary queries but is not suitable for end users who are not expert on the ontology domain . Another kind of query interface is based on a predefined set of queries : Each query is composed of a description in natural language , a SPARQL query with optional parameters . Every parameter has a label , a type and , eventually , a restriction on the values ( e . g . , a parameter can only be valued with instances of a given class ) . For this interface , users can select a query by its description , define the query parameters’ value and exe - cute it . The NavEditOW tool has allowed building a complete structural model of the guitar , from elementary components ( screws , jacks , switches , etc . ) to the most complex aggregates ( body , neck , bridge , etc . ) . Anyway , this model has been use - ful only in the first part of the project , to understand which were the main components of the guitar . The real aim of the ontology we are developing is the definition of functional relationships and constraints among the different parts , to identify the functional systems that are responsible for the product performances from the user standpoint . To this aim a second knowledge acquisition and represen - tation campaign has been conducted with the scope to com - pile a T - Matrix , like the one depicted in Figure 12 . The T - Matrix has been developed with the support of gui - tar users : this step has been crucial to define what kind of relationships exists between performances expected by the user and how the different components are arranged in the optimal configuration to meet the requirements . In Figure 12 , three complete samples of such phase of knowledge rep - resentation are presented . Given the structural ontology pre - viously defined , the aim of the first part of the T - Matrix is the identification of guitar functional systems , that is , the aggre - gations of guitar components that allow satisfying a specific function . For example , the function named Precision , that is , the guitar capability to maintain the string tuning when played hard , is supplied by a functional system made of neck , body , bridge , strings , saddles , pickup , and truss - rod . Al - though neck , body , and bridge are aggregates ( they are semi - manufactured parts produced by the network of SMEs ac - cording to a negotiation process ) , saddles , strings , pickup , and truss - rod are represented as elements in our ontology ; at any rate , they are all arranged in the rows of the matrix , be - cause they concur to the characterization of the Precision functional system . Fig . 11 . ( a ) The Is - A - Tree of the guitar ontology , where each component is identified by a circle . ( b ) The Part - Of - Tree of the guitar ontology , where each part is identified by a rumble . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] S . Bandini and F . Sartori 28 The second part of the T - Matrix allows representing how the combination of functions , and consequently , of functional systems , influence the guitar performances . For instance , the style of the player is strongly influenced by the functional systems determining the Precision of the instrument and weakly influenced by the functional systems involved in vest - ibility ( i . e . , the guitar capability to be played comfortably ) and timbre ( the distinctive properties of the guitar sound ) functions . The definition of functions and functional systems is cru - cial to guarantee usage flexibility of the system by the user , because it allows enriching the guitar ontology with trans - versal relationships among parts . In this way , the user can be guided in the definition of more complex properties , configuring a new guitar not only in terms of features derived from simple aggregation or specification of parts ( i . e . , Part - Of and Is - A re - lations ) , but also of complex characteristics deriving from their combination to obtain given results ( e . g . , the guitar tim - bre must be clear ) . 9 . 5 . Procedural and experiential knowledge representation : SA * - Nets and TS - CODEs According to what we stated before , the definition of func - tional systems identification allow developing the procedural knowledge model involved in their design . In our framework , each functional system must be properly represented in terms of specific SA * - Nets , with the possibility to synchronized different design flows in case of need . In the GUITAR HERO context , the procedural knowledge model starts from a CAD model of the guitar components . The NOAH expert involved in this fundamental step is the production process designer : on the basis of his experience , a complete SA * - Net has been projected , with a specific sub - net for each functional system described in the functional on - tology . Figure 13 shows a sketch of such net concerning the Pre - cision function . On the basis of ontology , Precision is because of a functional system made of five components : bridge , neck , saddles , strings , and truss - rod . Body , bridge , and neck need a specific process that can be divided into de - sign steps ( i . e . , they are aggregates ) , each one represented by a transition in their SA * - Nets . The only transition in the truss - rod , saddle , and string SA * - Nets concerns the choice of a product from the market ( i . e . , truss - rod , saddle , and string are atomic elements ) . The fork transition specifies that each part can be designed asynchronously . Anyway , there are some influences among components suggesting the design of some parts before . Because the body is the component where every other part is fixed , it is very important that its de - sign takes care of the exact number and position of other parts . For this reason , pickups and bridge should have been already defined when the body design process starts . For the same reason , the neck design depends on the kind of truss - rod to use , because it is crucial to know how the truss - rod will be positioned . Moreover , there is a very impor - tant dependency between body and neck : because the neck must be attached to the body , and they are made of different Fig . 12 . A sketch of the T - Matrix for the acquisition and representation of functions and performances in the GUITAR HERO project . A framework to support high quality products design 29 materials , the only way to put them together is by means of screws . Neck must be fixed very precisely and its dimensions must allow it to join perfectly the body in the right place : Pre - cision would be significantly compromised in case of imper - fections concerning this step . It is important to note that influences among components should be respected whenever a new guitar is going to be pro - jected , whereas classical models are characterized by well - known parameterizations that allow the expert to design each part independently . The whole process ends when the join transition can be activated after the completion of every sub - net specified . The SA * - Net is a complete guide to the codification of knowledge based systems : each transition can be exploded into a collection of TS - CODEs to represent the experiential knowledge involved in its execution . Figure 14 shows an ex - ample of how the SA * - Net related to the Precision functional system can be explained by means of TS - CODEs . The main task is obtained as the merge of a collection of subtasks , each one identifying an aggregate shown in Figure 13 . The output of the task is the right parameterization of the CAD models concerning the guitar parts on the basis of the desired precision value ( HIGH , MEDIUM , or LOW ) . Every subtask receives this value in input , and it is respon - sible for the right determination of parameters related to the guitar component represented by it ( e . g . , the body in Figure 13 ) . Possible influences among subtasks are represented as procedure calls to the related subtask : for this reason , the cor - rect definition of body attributes depends not only on the Fig . 13 . An SA * - Net representation of the design steps for the Precision functional system . Fig . 14 . A TS - CODE sketch for the Precision functional system . S . Bandini and F . Sartori 30 precision value received in input but also on the pickup and bridge parameters calculated by the related subtasks . Analo - gously , the body parameters will influence the definition of neck CAD model attributes in the Neck subtask . 9 . 6 . Implementation : Managing guitar ontology by means of the NavEditOW tool Up to now , the interest was mainly in the conceptual represen - tation of knowledge involved in the guitar design . On the basis of it , a knowledge - based system to support the NOAH net - work is going to be developed . Indeed , the conceptual model is useful to uniform the different point of views of the network actors in representing the guitar parts : for example , it is impor - tant that the maker of stringed instruments , who is responsible for the manufacturing of the neck , conceives his / her activity not as a stand - alone step , but as a phase that must be strictly correlated to others to avoid mistakes or misunderstandings . Anyway , as introduced above , the conceptual model must necessarily be mapped onto a suitable computational model : ontologies and SA * - Nets , from the knowledge engineering perspective , act as guidelines for knowledge acquisition and representation aiming at the definition of knowledge - based system development . As a first step in the development of such system , an explicit representation of the domain ontology in the OWL language ( see Fig . 15 ) has been proposed , exploiting the NavEditOw tool . This representation allows describing every concept into a formal language and to give each term a unique and explicit definition . This definition could be shared within the network , among experts , suppliers and customers ( i . e . , the guitar users ) . With an ontological representation of the components con - stituting a guitar , it is possible to automatically generate the complete set of the physical elements required to manufacture the product . The generated bill of material ( BOM ) accurately lists all parts and raw materials needed to make a unit of product , as depicted in Figure 16 . An interesting aspect is the flexibility of this ontology - based BOM : for instance , if we assert that a guitar body requires a bridge , we will be able to choose either a Bigsby or a fixed bridge , because both Bigsby and fixed bridge are subclasses of bridge . Thus , an OWL reasoner will be able to infer that the instances of subclasses are also instances of a superclass . Another feature provided by OWL , and inherited by NavEditOW , is the ability to automatically classify the in - stances of the ontology . In the guitar domain ( see Fig . 17 ) , a “LowNoiseGuitar” has been defined as a guitar with an alu - minum body or a guitar with a multicoil pickup . NavEditOW is able to discover every guitar with these features and to as - sert that it is a low noise guitar . One more example : a “FineTuningGuitar” is defined as a guitar with single saddles or truss - rod adjustable on the head - stock . The first definition concerns the regulation of strings : as introduced above , single saddles allow a more precise regula - tion than double ones . The second definition regards the regu - lation of neck against deformations according to the principle that a truss - rod adjustable on the headstock is more efficient than a truss - rod adjustable on the body . Every guitar with at least one of these features is an instance of this class . Because the two classes “LowNoiseGuitar” and “FineTuningGuitar” are not disjoint , a guitar can be classified at the same time as low noise and fine - tuning . To understand the improvement given by the knowledge - based approach to support the decision - making process in the design and manufacturing of electric guitars , the use case shown in Figure 18 may be useful . Let us suppose that a customer asks NOAH for a guitar with specific features : a low noise guitar . NOAH has two possibilities to meet require - ments : searching for an existing guitar with such features in the ontological repository or designing a totally new guitar . Generally , a good choice could be to check the existing ar - chive of products and decide to build a new one if and only if there is no product presenting the required features . NOAH can extract the list of the individuals belonging to the Fig . 15 . The guitar ontology and an example of consistency check on it . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] A framework to support high quality products design 31 “LowNoiseGuitar” class . Thanks to the automatic classifica - tion provided by NavEditOW , all the guitars that are classi - fied as “low noise” will be inferred as a set of instances of the “LowNoiseGuitar” class . If the set would be empty , NOAH will be notified , building a totally new guitar . Otherwise , NOAH will be able to select a guitar class from the ontology , compute the BOM , and select all the compo - nents . Then , the system will check for the selection of all the required components , and eventually notify the user in case of omissions . The new guitar will be automatically added to the ontological repository , so that it will be chosen in the future if a new customer requires a guitar with the same features . 9 . 7 . Discussion The GUITAR HERO project can be considered from different perspectives , as knowledge - based system concerning an in - novative domain , a design support system , a system for the preservation of cultural patrimony and creativity of handicraft and SMEs . About the first point , it is important to highlight that guitar domain has been already explored by computer science ( see , e . g . , Radicioni and Lombardo , 2005 ) , but previous works in this field were mainly characterized by the analysis and repro - duction of fingering methods for learning systems ( Motokawa and Saito , 2006 ) , classification of playing styles ( Izumi , 2002 ; Kerdvibulvech and Saito , 2007 ) , or tablature generation for electronic simulation of melodies ( Miura et al . , 2004 ; Tuohy & Potter , 2006 ) rather than the attempt tobuild completeknowl - edge models for supporting the manufacturing of products . With respect to the cited works , the GUITAR HERO pro - ject is devoted to the application of knowledge engineering and management techniques rather than traditional CSP and vision - based ones adopted in this field . Fig . 16 . Example of BOM generation . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] Fig . 17 . Automatic classification . The reasoner infersthat Body001 is an instance of AluminumBody , and thus Guitar001 is an instance of LowNoiseGuitar . [ A color version of this figure can be viewed online at journals . cambridge . org / aie ] S . Bandini and F . Sartori 32 About the second point , the main interesting feature of GUITAR HERO project is the adoption of ontologies for rep - resenting complex objects from the functional point of view . In this sense , the project exploits a conceptual framework ( Colombo et al . , 2007 b ) already tested in the past ( Colombo et al . , 2007 a ; Bandini et al . , 2008 ) . This framework is very suitable to deal with design and manufacturing problems , because it allows giving a complete representation of sub - systems a complex object is composed of , describing their role in delivering functionalities . The third issue is probably the more interesting , because it concerns the development of support systems for organiza - tions characterized by scarce level of computer science tech - nology . Indeed , the real innovation of the GUITAR HERO project is the product it is focused on , which is the result of a completely handicraft manufacturing process . The chal - lenge is how to build an effective knowledge - based system for a problem where no formal representation of the deci - sion - making process is available , and creativity of experts is the key factor for success . The functional representation adopted allows describing the properties of a complex object as they emerge from the un - derlying structure of relationships among functional subsys - tems : in this way , the system is able to classify the request of a NOAH customer according to the archive of already man - ufactured products , suggest which kind of raw material or semimanufactured parts to buy and keep NOAH people in touch with collaborators , like guitar players or makers of stringed instruments . 10 . CONCLUSIONS AND FUTURE WORKS This paper has presented a conceptual and computational framework to support networks of SMEs in the design and manufacturing of handicraft products . This framework is based on the integration of tools to ac - quire and represent three different kinds of knowledge in - volved : ontologies for functional knowledge , SA * - Nets for procedural knowledge , T - Matrix and TS - CODE for experien - tial knowledge . The combination of these four tools allows describing a complete KA for design . From the computational point of view , the NavEditOW ap - plication has been introduced as a very flexible and usable tool to browse , edit , and query ontologies written in the OWL language . The most interesting feature of NavEditOW is the possibility to invoke its functionalities over the Web , with great benefits about the sharing of knowledge among networks of SMEs involved in the manufacturing of a product . As a case study the GUITAR HERO project has been pre - sented , which is a collaboration between the Research Center on Complex System and Artificial Intelligence of the Univer - sity of Milan – Bicocca and NOAH Guitars . The project scope is to design and implement a knowledge - based system for supporting the creativity of NOAH experts in designing and manufacturing electric guitars with alumi - num bodies . The decision - making process in this field involves differ - ent kinds of knowledge , which must be properly captured to understand how the different components of the guitar can be related to each other , influencing final product fea - tures . In this sense , the adoption of ontologies as a conceptual framework for the representation and integration of knowl - edge is strategic , as well as the exploitation of NavEditOW to guarantee their easy navigation and management . The adoption of NavEditOW has led to an easy and quick access to the system through the Internet : this possibility is a great benefit for NOAH , which should allow a more efficient management of orders to suppliers , communication among people , and so forth . Moreover , the definition of a knowledge model shared among the SMEs belonging to the NOAH network is a signif - icant support in the generation of common jargon among them . This is the first step toward the creation of a community of practice involved in the design and manufacturing of elec - tric guitars rather than a simple network of collaborators . At this point , feedbacks received by experts are encouraging : the ontological model of electric guitars is consistent and ex - pressive . At any rate , a lot of work must be done to reach the final goal : in particular , computational SA * - Nets must be imple - mented starting from the conceptual model created up to Fig . 18 . A use case . A framework to support high quality products design 33 now . The implementation of SA * - Nets as a collection of tagged XML files is currently ongoing ; then an opportune SA * - Manager will be designed and coded to describe compu - tationally the navigation of the SA * - Nets according to the rules previously introduced . ACKNOWLEDGMENTS The authors thank NOAH experts for their support in writing the pa - per , and in particular , Gianni Melis and Mauro Moia , whose compe - tencies and expertise we have tried to model in the current version of the system . Special thanks to Andrea Bonomi and Andrea Fulciniti for their work on the implementation of the system . REFERENCES Ahmed , S . , Kim , S . , & Wallace , K . M . ( 2007 ) . A methodology for creating ontologies for engineering design . Journal of Computing and Informa - tion Science in Engineering 7 ( 2 ) , 132 – 140 . Bandini , S . , Manzoni , S . , & Sartori , F . ( 2008 ) . Core knowledge management in a designer community of the automotive field . Proc . Knowledge Man - agement in Action , IFIP 20th World Computer Congress , pp . 3 – 15 . Bos - ton : Springer . Bandini , S . , Mereghetti , P . , Merino , E . , & Sartori , F . ( 2007 ) . Case - based sup - port to small – medium enterprises : The Symphony Project . Proc . AI * IA 2007 , LNCS , Vol . 4733 , pp . 483 – 494 . Berlin : Springer . Bandini , S . , & Sartori , F . ( 2006 ) . Industrial mechanical design : the IDS case study . Proc . 2nd Int . Conf . Design Computing and Cognition ( DCC’06 ) , pp . 141 – 160 . Dordrecht : Springer . Bonomi , A . , Mosca , A . , Palmonari , M . , & Vizzari , G . ( 2007 ) . NavEditOW— a system for navigating , editing and querying ontologies through the Web . Proc . KES 2007 , pp . 686 – 694 . Berlin : Springer . Bracewell , R . , & Wallace , K . ( 2001 ) . Designing a representation to support function means based synthesis of mechanical design solutions . Proc . ICED 2001 . Chandrasekaran , B . ( 1989 ) . Task – structures , knowledge acquisition and learning . Machine Learning , 4 , 339 – 345 . Colombo , G . , Mosca , A . , Palmonari , M . , & Sartori , F . ( 2007 a ) . An upper - level functional ontology to support distributed design . Proc . ONTOSE 07 . Colombo , G . , Mosca , A . , & Sartori , F . ( 2007 b ) . Towards the design of intel - ligent CAD systems : An ontological approach . Advanced Engineering Informatics , 2 , 153 – 168 . Colombo , E . , & Sartori , F . ( 2003 ) . Kept : A knowledge elicitation tool to support communities of practice . Proc . 12th IEEE Int . Workshops on Enabling Technologies Infrastructure for Collaborative Enterprises ( WETICE 03 ) , pp . 346 – 351 . IEEE Computer Society . De Cindio , F . , De Michelis , G . , Pomello , L . , & Simone , C . ( 1981 ) . Super - posed automata nets . Application and Theory of Petri Nets , Selected Pa - pers from the First and the Second European Workshop on Application and Theory of Petri Nets , Strasbourg , September 23 – 26 , 1980 . De Michelis , G . ( 1998 ) . Aperto , Molteplice , Continuo . Milano : Dunod . Deng , Y . ( 2002 ) . Function and behaviour representation in conceptual me - chanical design . Artificial Intelligence for Engineering Design , Analysis and Manufacturing 16 , 343 – 362 . Friedland , P . ( 1981 ) . Acquisition of procedural knowledge from domain ex - perts . Proc . Int . Joint Conf . Artificial Intelligence , pp . 856 – 861 . Gero , J . ( 1990 ) . Design prototypes : a knowledge representation schema for design Artificial Intelligence Magazine 11 ( 4 ) , 26 – 36 . Gero , J . , & Maher , M . L . ( 1997 ) . A framework for research in design comput - ing . Proc . 15th ECAADE Conf . Guarino , N . ( 1995 ) . Formal ontology , conceptual analysis and knowledge representation . International Journal of Human – Computer Studies 43 ( 5 – 6 ) , 625 – 640 . Guarino , N . ( 1998 ) . Some ontological principles for designing upper level lexical resources . Proc . 1st Int . Conf . Lexical Resources and Evaluation , Granada , Spain . Handzic , M . ( 2006 ) . Knowledge management in SMEs—practical guide - lines . CACCI Journal 1 , 1 . Hilpinen , R . ( 2008 ) . Artifact . The Stanford Encyclopedia of Philosophy ( Zalta , E . N . , Ed . ) . Accessed at http : / / plato . stanford . edu / archives / fall2008 / entries / artifact / Izumi , T . ( 2002 ) . Cognitivelyoriented designof a multimedia system to learn guitar fingering . Proc . Int . Conf . Computers in Education , pp . 789 – 791 . Kerdvibulvech , C . , & Saito , H . ( 2007 ) . Vision - baseddetectionof guitarplay - ers’ fingertips without markers . Proc . Computer Graphics , Imaging and Visualisation , pp . 419 – 428 . Washington , DC : IEEE Computer Society . Kitamura , Y . , Sano , T . , Namba , K . , & Mizoguchi , R . ( 2002 ) . A functional concept ontology and its application to automatic identification of func - tional structures . Advanced Engineering Informatics 16 ( 2 ) , 145 – 163 . Knublauch , H . , Musen , M . A . , & Rector , A . L . ( 2004 ) . Editing description lo - gic ontologies with the Prote´ge´ OWL plugin . Proc . Description Logics , CEUR Workshop , p . 104 . Kolodner , J . ( 1993 ) . Case - Based Reasoning . SanMateo , CA : MorganKauff - mann . Maher , M . L . , Balanchandran , B . , & Zhang , D . M . ( 1995 ) . Case - Based Rea - soning in Design . Mahwah , NJ : Erlbaum . Miura , M . , Hirota , I . , Hama , N . , & Yanagida , M . ( 2004 ) . Constructing a sys - tem for finger - position determinationand tablature generation for playing melodies on guitars . Systems and Computers in Japan 35 ( 6 ) , 10 – 19 . Motokawa , Y , & Saito , H . ( 2006 ) . Support system for guitar playing using augmented reality display . Int . Symp . Mixed and Augmented Reality 2006 , pp . 243 – 244 . Washington , DC : IEEE / ACM . Nonaka , I . , & Takeuchi , H . ( 1995 ) . The Knowledge Creating Company : How Japanese Companies Create the Dynamics of Innovation . New York : Oxford University Press . Radicioni , D . P . , & Lombardo , V . ( 2005 ) . A CSP approach for modeling the hand gestures of a virtual guitarist . Proc . AI * IA 2005 , pp . 470 – 473 . Berlin : Springer . Salazar - Torres , G . , Colombo , E . , Correa da Silva , F . S . , Noriega , C . A . , & Bandini , S . ( 2008 ) . Design issues for knowledge artifacts . Knowledge Based Systems 21 ( 8 ) , 856 – 867 . Soares , A . L . , Simoes , D . , Silva , M . , & Madureira , R . ( 2006 ) . Developing en - terprise sponsored virtual communities : the case of a SME’s knowledge community . Proc . OTM Workshops 2006 , pp . 269 – 278 . Berlin : Springer – Verlag . Tuohy , D . R . , & Potter , W . D . ( 2006 ) . Generating guitar tablature with LHF notation via DGA and ANN . Proc . Int . Conf . Industrial , Engineering & Other Applications of Applied Intelligent Systems IEA / AIE ’06 , pp . 244 – 253 . Berlin : Springer – Verlag . Umeda , Y . , Ishii , M . , Yoshioka , M . , Shimomura , Y . , & Tomiyama , T . ( 1996 ) . Supporting conceptual design based on the function – behaviour – state modeler . Artificial Intelligence for Engineering Design , Analysis and Manufacturing 10 , 275 – 288 . Umeda , Y . , & Tomiyama , T . ( 1997 ) . Functional reasoning in design . IEEE Expert : Intelligent Systems and Their Applications 12 ( 2 ) , 42 – 48 . Wenger , E . ( 1998 ) . Communityof Practice : Learning , Meaning and Identity . Cambridge : Cambridge University Press . Stefania Bandini is a Professor in the Department of Computer Science , Systems , and Communication at the University of Milano – Bicocca , where she teaches artificial intelligence and knowledge engineering and expert systems courses . Her research activity concerns artificial intelligence , knowledge - based systems , KM , and discrete dynamical sys - tems . She is the founder and Director of the Complex Systems and Artificial Intelligence Research Centre . Fabio Sartori is an Assistant Professor in the Department of Computer Science , Systems , and Communication at the Uni - versity of Milan – Bicocca . He received a PhD in computer sci - ence from the University of Milan – Bicocca in 2005 . He is in - volved in research and teaching activities . Dr . Sartori has taken part in many research projects in the knowledge manage - ment area , involving both academic and industrial partners . S . Bandini and F . Sartori 34