City , University of London Institutional Repository Citation : Jones , S . , Lynch , P . , Maiden , N . & Lindstaedt , S . ( 2008 ) . Use and Influence of Creative Ideas and Requirements for a Work - Integrated Learning System . Proceedings of the 16th IEEE International Requirements Engineering Conference , pp . 289 - 294 . doi : 10 . 1109 / RE . 2008 . 54 ISSN 1090 - 705X This is the unspecified version of the paper . This version of the publication may differ from the final published version . Permanent repository link : http : / / openaccess . city . ac . uk / 2801 / Link to published version : http : / / dx . doi . org / 10 . 1109 / RE . 2008 . 54 Copyright and reuse : City Research Online aims to make research outputs of City , University of London available to a wider audience . Copyright and Moral Rights remain with the author ( s ) and / or copyright holders . URLs from City Research Online may be freely distributed and linked to . City Research Online : http : / / openaccess . city . ac . uk / publications @ city . ac . uk City Research Online Use and Influence of Creative Ideas and Requirements for a Work - Integrated Learning System Sara Jones , Perry Lynch , Neil Maiden , Stefanie Lindstaedt 1 Centre for HCI Design , City University . London , UK 1 Know - Center , Inffeldgasse 21a , 8010 Graz , Austria saraj @ soi . city . ac . uk , sbbb556 @ soi . city . ac . uk , cc559 @ soi . city . ac . uk , slind @ know - center . at Abstract In this paper , we describe a creativity workshop that was used in a large research project , called APOSDLE , to generate creative ideas and requirements for a work - integrated learning system . We present an analysis of empirical data collected during and after the workshop . On the basis of this analysis , we conclude that the work - shop was an efficient way of generating ideas for future system development . These ideas , on average , were used at least as much as requirements from other sources in writing use cases , and 18 months after the workshop were seen to have a similar degree of influence on the project to other requirements . We make some observations about the use of more and less creative ideas , and about the techniques used to generate them . We end with sugges - tions for further work . 1 . Introduction According to many commentators , creativity is the new key economic activity . Indeed the UK government has declared that in the current climate , innovation can be seen as crucial to both productivity growth and social gain [ 18 ] . This is true for the development of software - intensive systems as much as it is anywhere else in the economy , and so we must look for ways of bringing greater creativity into the software development process . As we have reported previously [ 7 , 10 ] , requirements engineering can be seen as a fundamentally creative process in which stakeholders and engineers work togeth - er to create ideas for new software systems that are even - tually expressed as requirements . However , while most current requirements processes and research activities support problem analysis and system specification , inven - tion is often perceived as part of the design process that follows requirements engineering [ 6 ] , and little support for this is provided at the requirements stage . We have developed an approach to integrating crea - tivity into our RESCUE requirements process through the use of what we call creativity workshops . Previous work has reported on the way in which such workshops are conducted , and the kinds of ideas that are typically gener - ated [ 7 , 8 , 9 , 10 ] . However , there has so far been little in - vestigation of the relative contributions from different techniques used to stimulate creativity during the work - shops , the way in which ideas generated during the course of such workshops are used later in the project , or the extent to which they influence later development work . In this paper , we present some preliminary findings on these three issues based on data gathered during and 18 months after a previously unreported creativity workshop . This workshop was conducted as part of the requirements process for the APOSDLE project . APOSDLE ( see www . aposdle . org ) is an on - going European project , funded under the Framework 6 programme , whose aim is to ‘enhance knowledge worker productivity by providing learning support integrated into the work tasks and the computational work environment’ . As such , APOSDLE is a real project , with real constraints on time and resources , and where the quality of the requirements process will be fundamental to the success of the project as a whole . The remainder of this paper is structured as follows . In section 2 , we provide a brief review of related work , in - cluding other creativity workshops that have employed techniques similar to those used in the workshop reported here . Section 3 describes the APOSDLE workshop itself , as well as the use case authoring process that followed the workshop . Section 4 describes our approach to collecting data , and section 5 presents our analysis of this data . Fi - nally , in section 6 , we draw some conclusions , and identi - fy directions for further research . 2 . Creativity in the Requirements Process 2 . 1 Related Work There has been considerable interest in creativity with - in the software engineering community as a whole over the last decade . Much of the work reported has come from the HCI or CSCW communities , and has focused on crea - tivity in design [ 3 , 4 ] , and supporting collaborative design activities [ 19 ] . While those involved in requirements en - gineering can learn from much of this work , little RE re - search has addressed creative thinking directly [ 7 , 9 ] and there is also a need for more research in this area . A small number of empirical studies have been carried out to in - vestigate the use of creativity by requirements engineers . For example , Mich et al [ 11 ] report a study in a controlled environment , which compared the use of the elementary pragmatic model from communication theory with stan - dard brainstorming techniques for triggering combina - tional creativity during requirements acquisition . Schmid [ 16 ] has presented some preliminary findings from a small - scale study , which used creativity triggers [ 14 ] to help workshop participants invent requirements . Howev - er , we are not aware of any other longitudinal studies , such as the one reported in this paper , evaluating the up - take of creative ideas during later stages of a software development project . 2 . 2 Creativity Workshops in RESCUE RESCUE is a concurrent requirements engineering process that we have developed , in which different mod - eling and analysis processes take place in parallel [ 6 ] . Creativity workshops are an important part of the RESCUE requirements process , and normally take place after a requirements team has specified the system boun - daries and before it specifies use cases . The main purpose of a creativity workshop is to discover and invent the re - quirements and ideas needed to specify use cases . These ideas are the main workshop outputs . The workshop activities are designed using 3 estab - lished models of creativity from cognitive and social psy - chology . This is described in detail in [ 8 ] . Briefly , a workshop is designed to support the divergence from and convergence towards ideas as described in the CPS model [ 12 ] , using 3 basic types of creativity identified by Boden [ 1 ] – exploratory , combinational and transformational creativity - and encouraging 4 essential creative processes reported in [ 13 ] : preparation , incubation , illumination and verification . A two - day workshop is usually composed of 4 half - day creativity periods . In each period we use a different creativity technique to encourage different types of crea - tivity . For example , in one period we might use analogical reasoning to encourage combinational creativity , or con - straint removal to encourage transformational creativity . Further details of the way in which this was done in the APOSDLE workshop will be given below . 3 . The APOSDLE Creativity Workshop The APOSDLE project is an EU funded project , aimed at developing a work - integrated learning environment for knowledge workers . The project will run for 4 years and involves 12 partner organizations from 7 different coun - tries . The APOSDLE creativity workshop was conducted in month 4 of the project , when a system context diagram , use case diagram and short use case précis of one para - graph each had already been developed . One facilitator , 2 scribes , and 16 stakeholders attended the APOSDLE workshop . Each stakeholder was from one of the project partners , with some representing ‘technical’ partners , or organizations who would develop the system , and others representing ‘application’ partners – organiza - tions that would use the systems developed in the project . The layout of the room in which the workshop took place , and the basic ground rules were the same as for previous - ly reported workshops ( see , for example , [ 8 ] ) . 3 . 1 Structure of the workshop The overall structure of the APOSDLE workshop , in - corporating a small number of sessions each using a dif - ferent technique to stimulate creativity , was the same as for previous workshops , as feedback from participants had suggested that this worked well . On day - 1 , the morning period activities began with a ‘ round - robin’ session in which each stakeholder was asked to come up with one or two ‘big ideas’ for the sys - tem . This was essentially a warm - up session , and lasted approximately half an hour . This was followed by a ses - sion designed to support exploratory creativity [ 1 ] by ask - ing participants to work with the creativity triggers de - fined in [ 14 ] . Participants worked in groups of 4 with each group including representatives of both technical and application partners from different organizations . The session lasted for approximately 2 hours , with each group choosing one of the five triggers , and using this to gener - ate new ideas for APOSDLE . The afternoon session on day 1 was based around the idea of constraint removal . This session was designed to support transformational creativity [ 1 ] . At the beginning of the session , participants were divided into 4 different groups of 4 , still maintaining a mix of application and technical partners from different organizations in each group . One facilitator then led a brainstorming session involving all participants to discover 35 constraints on the future system . Each group worked with 7 or 8 constraints , being asked to envisage the removal of each constraint , and to consider what would be possible for the new sys - tem in the absence of the relevant constraint . This session lasted for approximately 3 hours . On the morning of day 2 , participants listened to 4 dif - ferent solution presentations from technology partners , each lasting approximately 5 minutes , and used these as triggers for further ideas . This session was designed to support combinational creativity [ 1 ] , in that it provided the opportunity for combining ideas about the application of particular technologies with ideas about problems or needs as experienced by application partners . In the final session on the afternoon of day 2 , use cases were prioritized and four final groups took the 4 highest priority use cases and constructed storyboards for them using as many as possible of the ideas that had been asso - ciated with the those use cases during the workshop . Following the workshop , all workshop outputs were recorded in a single document , the APOSDLE creativity workshop report . All the ideas generated during the work - shop were transcribed , verbatim , and those that had been associated with use cases during the workshop appeared in the report alongside the revised use case précis , in rea - diness for the use case authoring process described below . All ideas identified during the workshop were listed in an appendix to the report . 3 . 2 Writing use cases following the workshop Following the creativity workshop , the APOSDLE use cases were rationalized – some were split into several different parts , and some were combined – to produce a coherent set . This set of use cases was prioritized , so that 10 would be worked on in the first phase of the project , and others would be worked on at a later stage . In month 5 of the project , one month after the workshop , the project partners began the process of writing use case specifica - tions . The process was as follows . The set of use cases to be developed during the first phase of the project were divided up into 4 groups depending on the functionality they would specify . Each group was allocated to a pair of project members – usually comprising one person from a technical partner organization , and one from an applica - tion partner . Each pair was given a template for each of their use cases , where templates included all the informa - tion that had been associated with the use cases during the creativity workshop . This usually included the title , the précis and whatever requirements and ideas had been as - sociated with the use case . The pair was first asked to identify what they thought were the ‘big ideas’ for each of their use cases . They were then asked to look through all the requirements which had so far been identified as part of the project , as well as all the ideas from the creativity workshop that had been left at ‘system level’ , to see whether any of these seemed appropriate to their use case now that they had had more time to reflect . These re - quirements and ideas were then included into the tem - plate . Finally , they wrote the complete use case specifica - tion , using both the précis and all of the associated ideas to guide them . The completed specifications , together with the associated ideas from the creativity workshop were then passed to developers for use in more detailed system specification . 3 . 3 Developing APOSDLE prototypes According to the APOSDLE project plan , 3 prototypes were to be developed . Mock - ups were not initially planned for but research partners soon felt the need for a concrete ‘object to think with’ . The role of the mock - ups was to illustrate which requirements , ideas , and ultimately features should make it into the corresponding prototype . In addition , the mock - ups helped to develop a first com - mon look and feel for the prototype . The requirements and creative ideas from the creativity workshop and else - where in the project were provided as inputs into the de - velopment of both mock - ups and prototypes . The first mock - up was developed in month 2 of the project using the requirements that existed at that time . This mock - up then underwent a multitude of iterative changes to include new requirements and ideas from the creativity workshop , right up to the deliverable of the software architecture document in month 8 . The first inte - grated prototype was delivered in month 12 . For the second prototype we followed a similar process . The second mock - up was delivered in month 18 , and based on this , the new software architecture was delivered in month 20 and the second prototype in month 24 . Prototype 2 is currently undergoing user evaluation , and the third proto - type is planned for month 36 . 4 . Data Collection The main sources of data for this paper were workshop and project documentation , and questionnaires completed by workshop participants , and key project stakeholders , as described below . 4 . 1 Data about how creative our ideas were Soon after the workshop , we asked participants to complete a questionnaire about a representative sample of the ideas generated during the workshop , in order to give us data about which ideas were perceived to be the most and least creative . Questionnaires were completed by 14 out of the 16 workshop participants . This enables us to comment on the relative use and influence of ideas judged to be more and less creative as described below . Questionnaires were constructed as follows . Each questionnaire included 40 different ideas – 10 ideas from each of the 4 main sessions in which ideas were generat - ed : round robin ( RR ) , creativity triggers ( CT ) , constraint removal ( CR ) and solution presentation ( SP ) . These ideas were randomly selected , and in half the questionnaires , they were presented in reverse order , to minimize any ordering effects in questionnaire responses . From a review of the literature on creativity , we de - termined that most definitions of creativity include two dimensions such as newness , or novelty and value , or importance . For example , Boden [ 2 ] defines creativity as ‘The ability to come up with ideas or artefacts that are new , surprising and valuable’ , and Sternberg and Lubart [ 17 ] define creativity as ‘the ability to produce work that is both novel ( i . e . original , unexpected ) and appropriate ( i . e . useful , adaptive concerning task constraints ) ’ . For each of the 40 ideas , respondents were therefore asked to provide a rating , on a scale of 1 – 5 for novelty and im - portance , as explained below . To obtain participants’ views on the novelty of ideas generated , we asked ‘How new , surprising or exciting do you think this idea is ? ’ , with responses ranging from 1 ( ‘not at all new’ ) to 5 ( ‘very new’ ) . ‘Appropriateness’ or ‘value’ was interpreted in terms of an idea’s usefulness or importance to the success of the project , and to assess this we asked ‘How important do you think the incorporation of this idea would be to the overall success of APOSDLE ? ’ , with responses from 1 ( ‘not at all impor - tant’ ) to 5 ( ‘very important’ ) . 4 . 2 Data about influence of ideas At month 22 of the project , 18 months after the crea - tivity workshop , and during the process of developing the second prototype , a further questionnaire was constructed in order to assess the impact of workshop ideas on the development of project prototypes . These questionnaires were completed by three key project ‘experts’ , who were managing and co - ordinating development work in the project as a whole , and in particular of the development of the project mock - ups and prototypes . The questionnaires included the same 40 ideas as the first questionnaire , and an additional 10 requirements , which were also available at the time of the creativity workshop and use case author - ing process , but had been collected using other require - ments acquisition techniques . These requirements acted as a control condition , allowing comparison of ideas gener - ated during the workshop with requirements identified elsewhere in the project . In this second questionnaire , we simply asked respon - dents , for each idea or requirement , to answer the ques - tion ‘How much influence do you think this idea / requirement has had on the development of the APOSDLE prototype so far ? ’ , again using a rating scale of 1 – 5 , where 1 denoted ‘no influence’ , and 5 represented ‘a lot of influence’ . 5 . Results During the two day APOSDLE creativity workshop , a total of 195 ideas were generated . This compares very favorably with the total of 172 requirements that had been identified in the first 4 months of the project using other , more standard requirements elicitation techniques , includ - ing interviews and visits to the users’ workplaces as well as some preliminary context modeling . In the rest of this section , we present data relating to the three main areas of interest , identified in section 1 . 5 . 1 Allocation of ideas to use cases First we present data relating to the allocation of ideas to use cases , both during the workshop , as described in sec - tion 3 . 1 , and as part of the use case authoring process de - scribed in section 3 . 2 . Table 1 shows the total numbers of ideas generated during the workshop using each of the individual tech - niques described in section 3 . 1 : round robin ( RR ) , creativ - ity triggers ( CT ) , constraint removal ( CR ) and solution presentations ( SP ) , as well as the numbers and propor - tions of those ideas which were associated with the 10 phase 1 use cases either during or after the workshop . The total number of ideas , and overall proportion of ideas from the workshop that were allocated to use cases is also shown . Finally , for comparison , we show the total number of requirements from other sources that were available at that stage in the project , and the proportion of those that were associated with use cases . RR CT CR SP All ideas from workshop All reqts : other sources Total generated 22 38 108 27 195 172 Associated with use cases 11 ( 50 % ) 22 ( 58 % ) 24 ( 22 % ) 13 ( 48 % ) 70 ( 36 % ) 58 ( 34 % ) Table 1 : Proportions of ideas associated with use cases We can see from Table 1 that the overall proportions of ideas from the creativity workshop and requirements from elsewhere in the project that were associated with use cases are very similar . However , there appear to be consi - derable differences in the proportions of ideas generated using the different techniques that were judged relevant to any use cases . The proportions of ideas from the round robin , solution presentation and , in particular , creativity triggering sessions that were associated with use cases are considerably higher than the overall average for both ideas from the workshop and requirements from other sources . However , the proportion of ideas from the con - straint removal session that was associated with use cases is much lower . The differences between the proportions of ideas used from each of the sessions are partly accounted for by the differences in numbers of ideas generated . For example , although only 22 % of ideas from the constraint removal session were associated with use cases , the total number of ideas generated in this session was very high ( 108 ) , so that the number of ideas from that session that were used in use case writing compares favorably with the numbers of ideas from other sessions . The low proportion of con - straint removal ideas associated with use cases may also be a reflection of the range of different kinds of ideas aris - ing from this session , as reported in [ 8 ] : for example , ‘ideas’ that simply describe overall advantages of the APOSDLE system are unlikely to be seen as particularly useful during use case authoring . However , there may also be other reasons for the apparently low use of ideas from this session , as discussed below . 5 . 2 Influence of ideas on later work Here we discuss the apparent influence of ideas generated during the creativity workshop on the development of prototypes , 18 months after the workshop took place , us - ing data collected as described in section 4 . 3 . Table 2 shows the average ( mean ) ratings of influence for ideas generated by different techniques during the workshop on a scale of 1 – 5 and , for comparison , for requirements from elsewhere in the project . Using the number of times ideas and requirements in the question - naire were rated N / A , to denote that they were not unders - tood , we have also calculated the proportion of ideas from each session that were understood by our 3 expert respon - dents , 18 months after the workshop . RR CT CR SP All ideas from workshop All reqts : other sources Mean influence 2 . 8 3 . 0 1 . 3 2 . 4 2 . 4 2 . 7 Range 1 – 5 1 – 5 1 – 4 1 – 5 1 – 5 1 - 5 Std devia - tion 1 . 62 1 . 39 1 . 38 1 . 33 1 . 56 1 . 89 % ideas or reqts understood 90 % 97 % 63 % 100 % 88 % 83 % Table 2 : Ratings of influence for ideas and requirements Here we can see a similar pattern to that in Table 1 . Once again , the overall average ratings of influence for ideas from the creativity workshop and requirements from other project sources are similar ( 2 . 4 and 2 . 7 respective - ly ) . But once again , there appear to be substantial differ - ences between the influence ratings for ideas generated by different techniques in the workshop . The mean ratings for influence of ideas from the round robin and creativity triggering sessions are higher than that for requirements from elsewhere , whereas the rating for ideas from the constraint removal session is noticeably lower . The per - centages of ideas and requirements that were understood provides some explanation for this , and possibly also the results reported in section 5 . 1 . Only 63 % of the ideas from the constraint removal session were understood , compared with 100 % of ideas from the solution presenta - tion session . If ideas are simply not understood , they will not be used in the use case authoring process , or influence prototype development . The average influence of ideas from the constraint removal session that were understood is 2 . 1 , which is closer to the average for requirements from elsewhere , but still lower . Once again , this may be partly explained by the mix of different kinds of ideas which arose from the constraint removal session . Howev - er , they may be additional factors at work as described below . 5 . 3 Analysis of creative and ‘uncreative’ ideas As stated above , we used a definition of creativity as being a function of both novelty and importance . We were curious to know whether different techniques tended to produce ideas that were judged by participants to be more or less creative . Table 3 shows the numbers of ideas from each of the workshop sessions that were rated as creative ( novel and important ) and not creative ( neither novel nor important ) , according to data collected using the ques - tionnaires described in section 4 . 1 . The numbers of crea - tive ideas , shown in the top row of Table 3 , were calcu - lated by looking for ideas that scored either 4 or 5 ( on a scale of 1 – 5 ) for both novelty and importance . By con - trast , numbers of ‘uncreative’ ideas , shown in the bottom row , were calculated by looking for ideas that scored ei - ther 1 or 2 for both novelty and importance . Numbers of important but not novel , and novel but unimportant ideas were calculated in a similar way . RR CT CR SP No . of novel , important ideas 27 27 10 26 No . of novel but not important ideas 9 2 16 10 No . of important but not novel ideas 25 26 20 15 No . of unimportant and not novel ideas 15 16 18 18 Table 3 : Creativity of ideas ( most and least creative shown highlighted ) The rows in which the constraint removal session ap - pears to be something of an outlier are the first and second . Here we can see that the constraint removal ses - sion generated less creative ideas ( only 10 , compared with 26 or 27 from other sessions ) , and more novel but unim - portant , or ‘whacky’ ideas ( 16 compared with 2 , 9 and 10 from other sessions ) . Finally , we adopt a more stringent definition of crea - tivity in order to investigate the impact of the most and least creative ideas from the workshop . In total , an idea included in the first questionnaire was rated by a respon - dent as being 5 for novelty and 5 for importance 14 times . This involved 10 different ideas ( 3 of these ideas were rated as 5 / 5 by more than one subject ) . Of those 10 ideas , 5 were associated with use cases worked on in the first phase of the project , and a further 4 were associated with use cases to be developed at a later stage in the project . In other words , 9 out of the 10 most creative ideas were as - sociated with use cases . In contrast , we can consider the ideas rated as 1 / 1 . In total , an idea in the questionnaire was rated by a respon - dent as being 1 for novelty and 1 for importance 18 times . This involved 15 different ideas ( 3 of these ideas were rated as 1 / 1 by more than one subject ) . Of these 15 ideas , only 1 was associated with use cases worked on in the first phase of the project , with a further 6 being associated with use cases to be developed at a later stage in the project . In other words , only 1 of the 15 least creative ideas was associated with use cases to be tackled in the first phase , and less than half the least creative ideas were associated with use cases at all . This suggests that creative ideas ( i . e . ideas rated 5 / 5 ) were used proportionately more in the use case writing process . 6 . Conclusions Overall , results from the APOSDLE project confirm the conclusion tentatively drawn in [ 8 ] that ‘ RESCUE creativity workshops have the capacity to discover both novel and unoriginal ideas that can be integrated into use case descriptions ’ . They also echo the observation made in [ 15 ] that creativity workshops seem to be a very effi - cient way of generating ideas . Ideas from the APOSDLE creativity workshop were , on average , used at least as much as requirements from other sources in writing use cases , and , according to the subjective ratings provided by our three project experts , had a similar degree of influence on the project to other requirements . In future studies , it will be interesting to investigate whether these observa - tions can be substantiated using more objective measures of influence . Looking at the different techniques used in the work - shop to generate ideas , we can see some differences , for the APOSDLE workshop at least , in the proportions of ideas from each technique that were judged to be relevant during use case authoring , and the average degree of in - fluence of the ideas . It appears from the data above that the constraint removal technique produced less useful and influential ideas than other sessions . However , we would argue that the session using this technique may have ful - filled an important role in promoting divergent thinking – generating the whacky ideas – which is commonly recog - nized as an important part of the creative process [ 12 ] . Of course , the results reported in this paper come from a single workshop , conducted as part of a particular project , subject to the influences of the particular individ - uals and organizations involved . Furthermore , since APOSDLE is a non - commercial research project , devel - oping a unique application , it has not been possible to investigate issues such as return on investment or the im - pact of creativity techniques on profit or commercial suc - cess . However , the commonality with findings from other reported workshops [ 8 , 15 ] lead us to be hopeful that our findings may be replicated in future studies . 7 . Acknowledgements APOSDLE is partially funded under the FP6 of the Eu - ropean Commission within the IST work program 2004 ( FP6 - IST - 2004 - 027023 ) . The Know - Center is funded within the Austrian COMET Program - Competence Cen - ters for Excellent Technologies - under the auspices of the Austrian Ministry of Transport , Innovation and Technol - ogy , the Austrian Ministry of Economics and Labor and by the State of Styria . 8 . References [ 1 ] Boden M . A . , 1990 , The Creative Mind , Abacus , London [ 2 ] Boden M . A . , 2004 , The Creative Mind : Myths and Me - chanisms’ ( 2 nd ed . ) , Routledge . [ 3 ] Bonnardel , N . , 1999 , ‘Creativity in Design Activities : The Role of Analogies in a Constrained Cognitive Environ - ment’ , in Proc . Creativity and Cognition 1999 , ACM , 158 - 165 . [ 4 ] Cross , N . , 2002 , ‘Creative Cognition in Design : Processes for Exceptional Designers’ , in Proc . Creativity and Cogni - tion 2002 , ACM , 14 - 19 . [ 5 ] Heitmeyer C . , 2005 , ‘System Designers , Not Analysts , Should Design’ , IEEE Software 22 ( 1 ) , 49 - 51 . [ 6 ] Jones S . V . and Maiden N . A . M . , 2005 , ‘RESCUE : An Inte - grated Method for Specifying Requirements for Complex Socio - Technical Systems’ , in ‘Requirements Engineering for Socio - Technical Systems’ , ed . J . L . Mate & A . Silva , Ideas Group , 245 - 265 . [ 7 ] Maiden N . A . M . , Manning S . , Robertson S . & Greenwood J . , 2004 , ‘Integrating Creativity Workshops into Structured Requirements Processes’ , in Proc . DIS 2004 , Cambridge Mass , ACM , 113 - 122 . [ 8 ] Maiden N . A . M . , Ncube , C . and Robertson , S . , 2007 , ‘Can Requirements Be Creative ? Experiences with an Enhanced Air Space Management System’ , in Proc . ICSE 2007 , ACM , 632 – 641 . [ 9 ] Maiden N . A . M . & Robertson S . , 2005 , ‘Integrating Crea - tivity into Requirements Processes : Experiences with an Air Traffic Management System’ , in Proc . RE05 , IEEE CS , 105 – 114 . [ 10 ] Maiden N . , Robertson S . & Gizikis A . , 2004 , ‘Provoking Creativity : Imagine What Your Requirements Could be Like’ , IEEE Software 21 ( 5 ) , 68 - 75 . [ 11 ] Mich L . , Anesi C & Berry D . M . , 2004 , ‘Requirements Engineering and Creativity : An Innovative Approach Based on a Model of the Pragmatics of Communication’ , in Proc . REFSQ 2004 , Essener Informatik Beiträge , ISBN 3 - 922602 - 91 - 6 . [ 12 ] Osborn A . F . , 1953 , ‘Applied Imagination : Principles and Procedures of Creative Problem Solving’ , Charles Scribn - er’s Sons , New York . [ 13 ] Poincare H . , 1982 , The Foundations of Science : Science and Hypothesis , The Value of Science , Science and Me - thod , Univ . Press of America , Washington . [ 14 ] Robertson , J . and Robertson , S . , 2004 , ‘Requirements and Creativity Tutorial’ at RE04 , Kyoto , IEEE . [ 15 ] Schlosser , C . , Jones , S . and Maiden , N . A . M . , ‘Using a Creativity Workshop to Generate Requirements for an Event Database Application’ , to appear in Proc . REFSQ 2008 . [ 16 ] Schmid , K . , 2006 , ‘A Study on Creativity in Requirements Engineering’ , available from http : / / pi . informatik . uni - siegen . de / stt / 26 _ 1 / index . html [ 17 ] Sternberg and Lubart , 1999 , ‘The Concept of Creativity : Prospects and Paradigms’ in ‘Handbook of Creativity’ , Sternberg , R . J . ( Ed . ) , Cambridge University Press . [ 18 ] HM Treasury , 2002 , ‘Investing in Innovation : A Strategy for Science , Engineering and Technology’ , from http : / / www . hm - treasury . gov . uk [ 19 ] Warr , A . and O’Neill , E . , 2005 , ‘Understanding Design as a Social Creative Process’ in Proc . Creativity and Cognition 2005 , ACM , 118 - 127 .