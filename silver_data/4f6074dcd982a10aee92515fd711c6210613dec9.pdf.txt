Developing A Creative Travel Management System Based on Software Reuse and Abstraction Techniques Sicong Ma and Hongji Yang Centre for Creative Computing Bath Spa University Corsham , UK Sicong . ma13 , h . yang @ bathspa . ac . uk Meiyu Shi * Tourism Institute Beijing Union University Beijing 100101 , China Shimeiyu72 @ 163 . com Abstract —Tourism became a common topic while the level of tourist requirements increased dramatically . Generally traditional travel websites provided general information or price list of hotel , transport tickets , etc . These kinds of information cannot satisfy travelers any more . A challenge for travel websites is to present creative and special travel plans to users . In order to achieve this target , relying on software reuse and abstraction techniques , this paper demonstrates a new system , aiming to generate creative travel plans . This system can be divided into three part ( Information Abstraction , Information Reuse , Information Formulation ) . Firstly , the system is to derive the characteristic query into different travel components with a high level of abstraction . Secondly , the system is to reuse different elements from different travel components to comprise a creative travel plan . Finally , the system builds a creativity metrics system to rank the derived plans based on the level of creativity . (cid:3) Keywords—Resue , Travel Plas , Abstraction Techniques , Creative Computing I . I NTRODUCTION With social development , tourism industry became a famous topic . Most of people chose travel as a relax way in their holidays . Thus , the tourist needs increased strongly . Generally , traditional travel websites presented general travel information , which are price of hotel , price of transport ticket or general introduction of travel plan . These kinds of information are not enough . Furthermore , the travel websites offered merely piece of travel information , users need to incorporate and generate a travel plan by themselves . Based on input query , the traditional systems are hard to produce a travel plan . Besides , more and more people are willing to choose creative and disinvite travel plan , which is based on their interest and habits . Accordingly , it is necessary to study on query analysis deeply and comprehensively for researchers . Software reuse is used to reuse existing assets to improve the quantity of software or the quality of software . The methods of software users are to change the algorithms , design pattern , or components , aiming to amend existing software to meet special requirement . This is a set of change based on current software . The slightly amendment is not adjusted user’s habits . Furthermore , it is accepted that people use an old habit to use creative software and creative results . Hence , to employ the software reuse in this paper , it requires further study to the method and usefulness of the travel plan generation . DARE , domain analysis and reuse environment , is a method of reuse techniques exacting data from current code and documents to do domain engineering . The main aim of DARE is to distinguish that how much information can be analysed by automation and how much information can be analysed by a repeatable process in the procedure of domain analysis . The process of DARE based on three kinds of information , which are code , documents and domain models . Extraction information builds domain models are based on these three kinds of information . DARE has been widely used in industry . In this project , DARE is used to exact information from different kinds of domain models and analyse the value of these kinds of information . Abstraction technique is to derive the data from a lower level of abstraction to a higher level of abstraction based on special characteristics . In other words , according to abstract rules and algorithms , abstraction technology is a procedure that transfers the data from objective data to ambiguous conception . For example , a word “apple” , abstraction technology considers “eatable” as an abstract characteristic , the data “apple” extract into “fruit” is a process that from a lower abstract level to a higher abstract level . If abstract rules consider “shape” is the characteristic , the result of data “apple” is the concept of “ellipse” . Furthermore , the query is sentence , there might be more characteristic can be used . Thus the results must be various . Generally , existing computing algorithms can compute these kinds of results easily . However , it is hard to rank them based on current requirements . Abstraction Technology designs the abstract rules and algorithms based on current requirements . Thus , it can analyse query more deeply and achieve the user’s requirements . The aim of this research is to propose a plan refinement framework to generate creative ideas on tourism area , to satisfy customers’ requirement . The paper is organised as following : Section II presents related work of creative computing , abstraction technology and software reuses . Section III describes the approach of generation creative travel plan with explanations of different phases . Section IV introduce travel creative plans generation system as a case study , which describes how the system using abstraction techniques and creative techniques * Corresponding author 2017 IEEE 41st Annual Computer Software and Applications Conference 0730 - 3157 / 17 $ 31 . 00 © 2017 IEEE DOI 10 . 1109 / COMPSAC . 2017 . 107 419 generates creative plans in tourism area . Section V concludes this paper . II . R ELATED WORK This section studies the current research relating to abstraction techniques , Creative Computing and software reuse are reviewed , concluding the challenging issues of this paper describe in the next part paper . A . Creative Techniques and Creativity Creative computing is a novel research era , aiming to study more comprehensively . It is to propose procedure more creativity and effectively to promote human creativity . Simply , the aim of creative computing is to “unite and conquer” [ 16 ] and to combine knowledge from different research field revaluating computing [ 17 , 18 ] . Creative computing has different braches , which are creative thinking , creative design , creative collaboration , creative requirement engineering and so on . There kinds of branch developed dramatically [ 15 , 16 ] . Results from computer science are based on a set of compute or probability . In other words , results are generated by accuracy compute or the highest probabilistic by probability . These kinds of results are generated by programming , can be predicted in advance and lack of creativity [ 1 , 2 , 3 , 4 ] . Meanwhile the results from creative computing is cannot be predicted and novel . It is a tough process of people to cognise the meaning of creative products and results . If people can find relationship between novel and creativity products and tradition products , they considered it is not creativity . In order to distinguish the difference between creativity and “aha” moment , a critical creativity standard need to be built up [ 5 , 6 ] . Another important point is to keep the balance between creativity and tradition . Creativity always happens . However , it is hard to change their old habits to creativity way , when people cognised it is a kind of creativity [ 7 , 8 ] . For example , based on research in psychology , when people use computer , he or his focus on the four corners of screen and then browser the middle of screen . Thus , according to theory of psychology , systems put the important coins on the four corners should be a kind of creativity . However , people are used to browser the coins from left to right and from the top to bottom . Thus , this kind of creativity is hard accepted by people . Furthermore , creativity need to build on the acceptable and employ of human’s habits . Accordingly , creativity from most of researchers are based on existing conditions and changed details improving the quality of ideas . Software reuse is based on existing assets and changed design pattern , component or algorithms generating special product . In other words , software reuse as a kind of technology is to reuse existing asset , generating product with creativity and effectiveness [ 9 ] . The aim of creative travel plans is not only to generate plans with creativity , but also is to accept and employ . Thus , it is necessary to establish a critical system , evaluating the creative travel plan to achieve the level of creativity and acceptable . Besides , the system also amends existing travel plans to make them more creativity . At the same time , the amendments are not changed human’s tourist objectives . B . Software Reuse The software reuse is to aim to save cost ( time and resources ) by use existing assets in some form to develop new software produce process . Assets not only means code , but also promotes software lifecycle which are software components , test suites , designs , documentation and so on . The method of software reuse is to adapt existing assets to satisfy specific need from system . In other words , it modifies the previous procedure to generate a new production based scratch information . Generally , there are two main strategies in software reuse , which are to improve the quality of software and to increase the quantity of software . After decades’ effort , many targets have been achieved on software reuse . Especially , they have studied next parts : 1 ) software reuse design pattern [ 10 , 11 , 12 , 13 ] , for example , F . Barros [ 12 ] promoted software reuse design pattern based on factory method and abstract factory , aiming to improve the software quality of hierarchical topology ; 2 ) software reuse libraries [ 14 , 15 , 16 , 17 ] for example , Lillie [ 17 ] proposed a software reuse library is the kneel part of reuse program and it makes a great contribution in the system of libraries distributed ; 3 ) software reuse framework [ 18 , 19 , 20 , 21 ] for example , the role of software reuse framework techniques has been implemented in the influence elements of using open source software analysation in this paper [ 18 ] ) software components reuse [ 22 , 23 , 24 , 25 ] for example , it is to present the relationship between object - oriented and software components reuse and propose a method that extracts components based on software components reuse technology in this paper [ 22 ] . Studies in Software Reuse developed flourishingly in last decades . Meanwhile , it is hard to ensure the reusable of software effectively and successfully . The newly research are focusing on promotion of software reuse design pattern and library . For example , Hu et al . [ 27 ] proposed that powertrain control system accurately and efficiently measures the rapid control prototype simulation based on software reuse library [ 26 , 27 ] . Thus , it is important to revolution methods to research on the software reuse . From other disciplines of perspective , the novel methods to research on software reuse can be regarded as the creative product . C . Abstraction Technology Model abstraction is a way not so much as a solution . As a method , it is used to reduce the complexity of a simulation and maintain the validity of the simulation results [ 28 , 29 , 30 ] . As one keyword has different kinds of meaning , different kinds of meaning can be applied in different application . In order to distinguish different meaning from same keyword , abstraction technology is based on special requirement and characteristics designing the algorithms and rules to deriving raw data into higher level of abstraction . It is to analyse the keyword more deeply and specially [ 31 ] . Lower level abstractions describe two parts of information that consists of atomic and static information [ 32 ] . Atomic and static information can be gained from a single local sensor stream such as type , range , and capabilities with data collection and the combination of data and meta information . In this context , atomic refers to the lowest abstraction level after original sensor data is processed . Static , however , describes that the abstraction is a single and independent observation which is 420 conducted at fixed time , excluding information about observation sequence . Researchers [ 33 ] illustrates that “it is the smallest atomic quantity of information with semantic meaning in some situations . ” For example , the sensor of the door can test two types of status which is door’s opening and closing respectively on condition that the door must be either opened or closed with no half - open states . Both of the abstractions mean that it is not sequential actions and can be no further abstracted as times passed , whereas it completely refers to the situation . The use of data processing techniques can make data information to be gained . For example , the techniques of pattern and event detection can obtain data information by analysing the original sensor data of a single node and then make a notification of the occurrence of the event to the user / network . However , higher level abstractions can obtain global images of generated activities and varied occurrences by looking into a few of sources of lower level abstractions , which can be subsequently deduced [ 34 ] . Specific modes of access control ( opened and closed doors ) during the certain period of time and other lower level abstractions can result in higher level abstractions from the beginning of the business day to the end . The use of machine - learning techniques which consist of classification and clustering of lower level abstractions as an example can gain higher level abstractions . Also , different method can be applied to achieve the goals . For instance , the approach of logical inference can be used on the basis of the inference mechanisms and rule - based system . Eventually , the kneel process of abstraction technology is to derive query from lower level of abstraction to higher level of abstraction , transferring the data from human readable to machine readable . Abstraction Technology is a technique which is applied in the comprehension and analysation of data . Currently , the biggest problem is how to analyse the customer’s requirements reasonably and comprehensively in terms of the search of travel information . In consequence , it can be used in the system of travel information search as a proposal in this paper so as to completely comprehend and analyse queries . Also , it will more beneficial that systems can generate creative travel information for users . D . Summary It is well accepted that general travel plans cannot be completely meet user’s needs . Therefore , it is proposed that Abstraction Technology is used to deal with ambiguous requirements from users , while Software Reuse is used to deal with creative travel plans generation . Furthermore , Creative Computing is used to formulate feasibility creative travel plans . In the next section , a new system process comprising Abstraction Technology and Software Reuse is proposed first and then how to utilise these two technologies to generate creative travel plans is suggested . III . T HE P ROPOSAL This paper proposes a creative travel management system as in Figure 3 . There are three kernel phases to generate creative travel plans including “Information Abstraction” , “Information Reuse” and “Information Formulation” . This paper focus on the first phase and the third phase , as its main function is to derive travel information from travel components based on input query by abstraction techniques and to generate creative travel plans by software reuse . The following section is more information on these three phases . A . Information Abstraction Phase 1 : Information Abstraction . There are four steps in this phase , which are data collection , query abstraction , property abstraction and mapping rules , as Figure 4 shows . In particular , the abstraction section runs as next illustration . Firstly , the system measures the subjective input query as raw data . The aim of this step is to select underlying choice , reducing the computational burden and preparing for further process . The system proposes the calculated formula ( 1 ) is as follow : (cid:1842)(cid:1870)(cid:1867)(cid:1855)(cid:1857)(cid:1871)(cid:1871)(cid:1861)(cid:1866)(cid:1859)(cid:3)(cid:1848)(cid:1857)(cid:1855)(cid:1872)(cid:1867)(cid:1870)(cid:3) (cid:4666) (cid:2034) (cid:4667) (cid:3404) (cid:1827)(cid:1870)(cid:1855)(cid:1860)(cid:1861)(cid:1872)(cid:1857)(cid:1855)(cid:1872)(cid:1873)(cid:1870)(cid:1857)(cid:3)(cid:1844)(cid:1853)(cid:1872)(cid:1857)(cid:3) (cid:4666) (cid:1827)(cid:1870) (cid:4667) (cid:3)(cid:3402)(cid:1842)(cid:1870)(cid:1867)(cid:1855)(cid:1857)(cid:1871)(cid:1871)(cid:1861)(cid:1866)(cid:1859)(cid:3)(cid:1844)(cid:1853)(cid:1872)(cid:1857)(cid:3)(cid:4666)(cid:2010)(cid:4667)(cid:3)(cid:3)(cid:4666)(cid:883)(cid:4667) (cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:1850) (cid:6)(cid:4) (cid:3404) (cid:1850) (cid:23)(cid:4) (cid:3402)(cid:2034)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:4666)(cid:884)(cid:4667)(cid:3) (cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:1829) (cid:4) (cid:3404) (cid:4668)(cid:1827)(cid:4666)(cid:1877)(cid:4667)(cid:513)(cid:1877) (cid:3404) (cid:883)(cid:2034)(cid:481)(cid:884)(cid:2034)(cid:481)(cid:485)(cid:481)(cid:1850) (cid:6)(cid:4) (cid:3398)(cid:883)(cid:2034)(cid:4669)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:4666)(cid:885)(cid:4667)(cid:3)(cid:3) Where (cid:1850) (cid:6)(cid:4) is amount of choice architectures , (cid:1850) (cid:23)(cid:4) is total amount of architecture in travelling domains , C A is a kind of choice architecture A . Secondly , the characteristics of the travelling domain are abstracted from the raw data based on Density - Based Clustering algorithms . A characteristic (cid:2011) is defined and the dense region need to be constructed based on the minimum amount of points . It begins with a random beginning point , which were unmarked . Neighbourhood of the point need to be remedied . If it includes enough number of points , a cluster is used . Or noise is marked on this point . Furthermore , the FAT ( File Allocation Tables ) file system uses to set up the abstraction layers in each domains . There are three parts in this system , which are Boot Sector , File Allocation Table and the Data Area . Boot Sector calculates the value of size and location in the particular file system . File Allocation Table transfers similar data into one domain based on the value of size and location . Data Area is an ontology that contains continuous sectors . Each sector stores the information in a file or directory . Finally , the abstracted domain data is matched into travelling domains based on mapping rules . Data mapping is original to build data element matching between two different data models . The data mapping vectors score the relevance of metadata to the query and the vectors evaluate the relevant level of between the query and metadata . For each keyword from the query represent a data from the metadata . The data owns the weighted score from Fig . 3 . Creative Travel Plans Process 421 the metadata . The total relevant of the metadata is the sum of weighted scores for keyword in the query . T ABEL 1 M APPING RULES IN C REATIVE T RAVEL P LAN P ROCESS S r # Vecto r 1 Vecto r 2 …… Vecto r n Tourist Reaso n 0 . 8 0 . 6 …… 0 . 5 Travelling Days 0 . 5 0 . 7 …… 0 . 7 Budget 0 . 4 0 . 6 …… 0 . 6 Transport Types 0 . 9 0 . 5 …… 0 . 4 Accommodation Types 0 . 8 0 . 9 …… 0 . 3 Local Transport Types 0 . 6 0 . 4 …… 0 . 7 Food Types 0 . 4 0 . 5 …… 0 . 9 Total Score 4 . 4 4 . 2 …… 4 . 1 Fig . 4 . Information Abstraction in Creative Travel Plan Process Fig . 5 . Information Reuse in Creative Travel Plan Process Travel plan is comprised by seven parts as travelling domains which are Tourist Reason , Travelling Days , Budget , Transport Types , Accommodation Types , Local Transport Types and Food Types : • Tourist Reason : Holiday and Business ; • Holiday Types : Adventure , Culture , Beach , Wildlife , Art , Region and Other Special Interests ; • Travelling Days : 1 - 2 , 3 - 6 , or 7 - 15 ; • Budget ; • Transport Types : Airplane , Train , Ferry , Coach and Self - Drive ; • Accommodation Types : Hotel , Cottages , Cursing , Caravan , Villa and Resorts ; • Local Transport Types : Bus , Bicycle , Self - Drive , Walk and Taxi ; and • Food Types : Local Food , Chinese Food , South Korean Food , Spanish Food , British Food , Japanese Italy Food and so on . B . Information Resuse Phase 2 : Information Reuse . Its aims to generate plans . According to collected and abstracted travelling domains’ data from last phase , the system generates raw plans based rules and algorithms of software reuse . Building these travelling domains from zero is limited to collect information and wasted time . Furthermore , based on existing research , travelling domains are more efficient to reuse existing data to promote generation creative travel plans . There are three important activities to creative raw travel plans which are design pattern , libraries and frameworks as Figure 5 shows . Design pattern process is to recur query analysing to seek the relative data . Library process is to convert , classify and manipulate data as Table 1 shows . The algorithm of reuse library is return the relevant file and manipulate the data . Framework involves technology of creative computing and abstraction technology to reuse the data from travelling domains . These three sets of activities support the foundation of the techniques to produce data and raw travel plans . The results from one rule can be computed by another rule , generating plans by multi - rules . Nonetheless , it is not necessary to employ all three sets of rules to generate travel plans . T ABEL 2 R EUSE L IBRARY IN C REATIVE T RAVEL P LAN P ROCESS S r # Domain Files Query Presenting Functionalit y A . Tourist Reaso n Query a1 , Query a2 , … Query ax B . Travelling Days Query b1 , Query b2 , … Query bx C . Budget Query c1 , Query c2 , … Query cx D . Transport Types Query d1 , Query d2 , … Query dx E . Accommodation Types Query e1 , Query e2 , … Query ex F . Local Transport Types Query f1 , Query f2 , … Query fx G . Food Types Query g1 , Query g2 , … Query gx C . Information Formulation Phase 3 : Information Formulation . It contains pre - disposing , feasibility , creativity , scored and selection as Figure 6 shows . Pre - disposing is to regulate the raw travel plan as a flow sentences based on language aspect . The procedure of pre - disposing is based on Natural Language Processing techniques . Then is is feasibility part that is to measure the raw travel plans based on designed rules , which are travelling dates , browsed order , budget and accommodation types . If the raw travel plans cannot achieve the level of feasibility , the system have to delete this a set of raw travel plans . After feasibility , the raw travel plans enter creativity part . There are three elements to score the raw travel plans , which are novel , surprising and valuable , as Figure 7 shows . The define of these three creativity elements and calculation of creativity value are presented in earlier accept paper . Fig . 6 . Information Formulation in Creative Travel Plan Process 422 Fig . 7 . Creativity Elements and Sub Dimensions IV . C ASE S TUDY The travel plans generation framework presented in the previous parts are employed and developed into a prototype system , Creative Travel Agency ( CTA ) . CTA presents procedure and proves that are feasible to produce creative travel plans based on abstraction technology and software reuse , promoting further research in this topic . CTA needs a user to input a travel place as the query . Figure 8 presents the system’s input interface . Then , CTA computes in the background as the procedures of plans generation to produce some creative travel plans . Especially , it begins at information abstraction to extract characteristics to tourist domains . Based on previous section , this research builds special abstraction rules following the rule of the information abstraction phase . In the information reuse phase , raw travel plans are generated based on travelling domains and user’s query . There are seven parts comprise a travel plan which are tourism reason , travelling days , budget , transport types , accommodation types and local transport types . Each travelling domain contains sets of data . Based on the data from last phase , a special algorithm designs and supports to extract relevant data from travelling domain in turn and to combine data abstraction from other travelling domains , generating various travel plan . As paper limitations , this paper merely presents this special algorithm . Fig . 8 . CTA Input Screenshot Fig . 9 . CTA Output Screenshot To evaluate the feasibility and creativity of the travel plan , the information formulation phase is to provide a rule to delete the unfeasibility travel plan and to support an algorithm to calculate degrees of the creativity elements , which presents in the earlier accept paper . Based on the designed algorithms , raw travel plans from last phase are calculated by creativity elements . Finally , according to the value of creativity , it ranks and presents to user . This research proves the procedure can be used into online travel websites , aiming to inspire further studies on software reuse . V . C ONCLUSIONS Nowadays , researchers studied hard in the field of semantic query analysis aiming to transfer the query from human readable to machine readable . However , the users cannot describe their query clearly . In other words , they merely got a travel idea , but they may not realise which kinds of requirement are necessary . Besides , a general travel plan without creativity and personalisation is hard to satisfy the user’s requirement . Thus , the problem of online travel system is based on general travel ideas to generate a creative and personal travel plan . Simply , the travel system has to generate a creative travel plan based on ambiguous ideas . Creative Computing as a kind of technology is to propose creative results based on objective computes and subjective ideas . It is very accepted that creative computing applies online travel system to generate travel plans . In this paper , a creative travel plan generation system is to proposed to generate creative travel plans , aiming to satisfy users’ explicit requirements . Furthermore , creative techniques design an evaluation rules to formulate creative travel plans that generates from this novel system . In addition , this paper demonstrates the Creative Travel Agency ( CTA ) that it generates creative travel plans . These a set of plans are to satisfy the user’s ambiguous ideas . Abstraction Technology is used to exact the characteristics of query and distribute these sets of characteristics into different kinds of travel components . In addition , Software Reuse is used to combine different travel options from different travel components to generate different travel plans . Finally , Creative Techniques are to evaluate the plans whether achieve the level of creativity . There two ways to improve and promote this research : ( 1 ) further work is to combine more travel components into travel plan , and ( 2 ) to 423 formulate additional creative algorithms in personalisation perspective . Acknowledgement This work was supported in part by Natural Science Foundation of China ( Grant no . 71473018 ) R EFERENCES [ 1 ] A . Hugill and H . Yang , “The Creative Turn : New Challenges for Computing” , International Journal of Creative Computing , vol . 1 , no . 1 , Inderscience Enterprises Ltd . , 2013 , pp . 4 – 19 . [ 2 ] H . Yang , " Editorial , " International Journal of Creative Computing , vol . 1 no . 1 , Inderscience Enterprises Ltd . , 2013 , pp . 1 - 3 . [ 3 ] R . E . Mayer , “Fifty Years of Creativity Research” , Handbook of Creativity , R . J . Sternberg , Ed . Cambridge : Cambridge University Press , 1999 , pp . 449 – 460 . [ 4 ] E . A . Carroll , C . Latulipe , R . Fung , and M . Terry , “Creativity Factor Evaluation : Towards A Standardised Survey Metric for Creativity Support , ” 7th ACM Conference on Creativity and Cognition , ACM Press , New York , 2009 , pp . 127 – 136 . [ 5 ] D . Janssen , T . Schlegel , M . Wissen , and J . Ziegler , “MetaCharts - Using Creativity Methods in A CSCW Environment , ” Human - Computer Interaction Theory and Practice ( Part II ) , CRC Press , 2003 , pp . 939 – 943 . [ 6 ] T . R . G . Green , Cognitive Dimensions of Notations , Cambridge University Press , Cambridge , 1989 . [ 7 ] M . A . Boden , “Artificial Intelligence Creativity and Artificial Intelligence , ” Artificial Intelligence , vol . 103 , no . 1 – 2 , Amsterdan , 1998 , pp . 347 – 356 . [ 8 ] D . L . Dean , J . M . Hender , T . L . Rodgers , and E . L . Santanen , “Identifying Quality , Novel , and Creative Ideas : Constructs and Scales for Idea Evaluation , ” Jounral of Association for Information Systems , vol . 7 , no . 10 , IEEE Press , New York , 2006 , pp . 646 – 698 . [ 9 ] A . Hugill , “Creative Computing Processes : Musical Composition , ” IEEE 8th International Symposium on Service Oriented System Engineering , IEEE Press , New York , 2014 , pp . 459 – 464 . [ 10 ] S . Sundaravadivelu , A . Vaidyanathan and S . Ramaswamy , “Knowledge Reuse of Software Architecture Design Decisions and Rationale within the Enterprise” , International Conference on Issues and Challenges in Intelligent Computing Techniques IEEE Press , Ghaziabad , 2014 , pp . 253 - 261 . [ 11 ] T . Li , L . Xiao and F . Hui , “CAD System Design on Standard Part Based on Software Reuse” , International Symposium on Knowledge Acquisition and Modeling , IEEE Press , Sanya , 2011 , pp . 229 - 232 . [ 12 ] F . Barros , “Increasing Software Quality Through Design Reuse” , International Conference on the Quality of Information and Communications Technology , IEEE Press , Porto , 2010 , pp . 236 - 241 . [ 13 ] M . Youxin , M . Xiaoghai and Y . Weimin , “Component Based Software Reuse Key Technology Research and Design” , International Forum on Information Technology and Applications , IEEE Press , 2009 , PP . 89 - 92 . [ 14 ] A . Alnusair , R . Mohammed , F . Alhamid and M . Hossian , “Reusing Software Libraries Using Semntic Graphs” , 17 th International Confernece on Information Reuse and Integration , IEEE Press , Pennsylvania , 2016 , pp . 531 - 540 . [ 15 ] J . W . Moore , “Debate on Software Reuse Libraries” , 3 rd International Conference on Software Reuse , IEEE Press , New York , 1994 , pp . 203 - 204 . [ 16 ] T . R . Huber , “Reducing Business and Legal Risks in Software Reuse Libraries” , 3 rd International Conference on Software Reuse , IEEE Press , New York , 1994 , pp . 110 - 117 . [ 17 ] C . W . Lilie , “Distrbuted Network of Reuse Libraries Offers the Best Approah to Successful Software Reuse” , 3rd International Conference on Software Reuse , IEEE Press , New York , 1994 , pp . 207 - 208 . [ 18 ] Y . Tung , C . Chuang and H . Shan , “A Framework of Code Reuse in Open Source Software” , 16th Internation Conference on Asia - Pacific Network Operations and Management Symposium , IEEE Press , Tokyo , 2014 , pp . 1 - 6 [ 19 ] G . S . Neves and P . Vilain , “Test Logic Reuse Through Unit Test Patterns a Test Automation Framework for Software Product Lines” , 15 th International Conference on Infromation Reuse and Integration , Califormia , 2014 , pp . 28 - 35 . [ 20 ] S . Maccanti , J . AI - Jaroodi and A . Sirinterlikci , “Knowledge Management Framework for Software Reuse” , 40 th International Conference on Computer Software and Applications , IEEE Press , Atlanta , 2016 , pp . 155 - 160 . [ 21 ] S . A . Amjad and S . A . Khan , “A Framework for Enhancing Readability and Opportunistic Resue of Enterprise Software” , 6 th International Conference on Software Engineering and Service Science , IEEE Press , New York , 2015 , pp . 48 - 53 . [ 22 ] X . Beibei , W . Haitao and Z . Fengwang , “Research on Software Reuse Methods Based on the Object - Oriented Components” , 2 nd International Conference on Computer Science and Network Technology , IEEE Press , Beijing , 2012 , pp . 1857 - 1860 . [ 23 ] C . Atkinason , P . Bostan and F . Fink , “Reuse - Oriented Deployment of Software Compoents : Congregation in Service - Oriented Deveploment , ” 4 th International Conference on Software Engineering Advances , Porto , 2009 , p . 65 - 72 . [ 24 ] M . Kessel and C . Atkinson , “Ranking Software Components for Pragmatic Reuse” , 6 th International Conference on Emerging Trends in Software Metrics , IEEE Press , Florence , 2015 , pp . 63 - 66 . [ 25 ] S . Vaikar , M . M . Jha and F . Brunner , “Using Architectural Constraints to Drive Software Component Reuse While adding and Enhancing Features : In a Global Software Engineering Team” , 11 th International Conference on Global Software Engineering , IEEE Press , California , 2016 , 193 - 143 . [ 26 ] E . F . Mohamed and A . F . Charles , “Unified Software Engineering Reuse ( USER ) using stable analysis , design and architectural patterns” , International Conference on Future Technologies Conference , IEEE Press , San Francisco , 2016 , pp . 706 - 711 . [ 27 ] M . Hu , Y . Huang , C . Zhao , B . Liu , X . Dai and H . Li , “Design and Verification of Software Components Model Libray for Integrated Powertrain Control System” , International Conference on Expo Transportation Electrification Asia - Pacific , IEEE Press , Beijing , 2014 , pp . 1 - 5 . [ 28 ] S . Yukun , C . Kuai and Z . Duoli , “The Research on System - Level Modeling technology of Mixed - Level Abstraction , ” International Conference on Anti - Counterfeiting , Security and Identification , IEEE Press , Macau , 2014 , pp . 1 - 4 [ 29 ] T . Reichelt , N . Oswald and A . Windisch , S . Forster and H . Moser , “IP Based Transport Abstraction for Middleware Technologies” , 3 rd International Conference on Networking and Services , IEEE Press , New York , 2007 , pp . 39 - 39 . [ 30 ] J . Ezingeard , M . Gomes , R . Grieve , P . Race , J . Vaux and S . Woolgar , “Technology Transfer Models : An Understandable but Useless Abstraction of Reality ? , ” International Conference on Management and Technology IEEE Press , New York , pp . 950 - 955 . [ 31 ] F . K . Frantz , “A Taxonomy of Model Abstraction Techniques , ” International Conference on Winter Simulation , IEEE Press , New York , 1995 , pp . 1413 - 1420 . [ 32 ] S . Safarpour and A . Veneries , “Abstraction and Reinement Techniques in Automated Design Debugging , ” International Journal on Computer - Aided Design of Integrated Circuits and Systems , Vol . 28 , No . 10 , IEEE Press , New York , 2009 , pp . 1597 - 1608 . [ 33 ] T . Gezgin , S . Henkler , A . Rettberg and I . Stierand , “Abstraction Techniques for Compositional State - based Scheduling Analysis” , International Conference on Computing System Engineering , IEEE Press , Natal , 2012 , pp . 166 - 171 . [ 34 ] Q . Liu , N . Ghani and M . Kok , “Application of Topology Abstraction Techniques in Multi - Domain Optical Networks” , 15 th International Conference on Computer Communications and Networks , IEEE Press , Arlington , 2006 , pp . 1 - 6 . 424