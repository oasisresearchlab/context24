SUPPORTING COLLABORATION IN NOTECARDS Randall H . Trigg Lucy A . Suchman Frank G . Halasz * Intelligent Systems Laboratory Xerox Palo Alto Research Center 3333 Coyote Hill Road Palo Alto , CA 94304 Abstract This paper describes a project underway to investigate computer support for collaboration . In particular , we focus on experience with and extensions to NoteCards , a hypertext - based idea structuring system . The forms of collaboration discussed include draft - passing , simultaneous sharing and online presentations . The requirement that mutual intelligibility be maintained between collaborators leads to the need for support of annotative and procedural as well as substantive activities . Introduction In the Intelligent Systems Lab ( ISL ) at Xerox PARC , we are engaged in a two - part project to study collaboration in naturally occurring research settings and to design technology that better supports it . This paper focuses on supporting collaboration in NoteCards , a hypertext - based idea structuring system . The work examining collaboration is described in Suchman & Trigg 86 . The term hypertext describes any system employing non - linear structuring of text , graphics , and other media . Hypertext systems are often implemented using linked network structures with data ( usually text or graphics ) at the nodes and occasionally typing information on the links . ( See Delisle & Schwartz 86 and Yankelovich et al 85 for overviews of existing hypertext systems . ) For the most part , these systems have been single - user . A few have supported shared Idea Bases ( to use a term coined by Norman Meyrowitz ) , but none , to our knowledge , have provided tools that deal explicitly with the social interactions arising in collaborative settings . Instead , most of the work in multi - user environments has focused on system level support for capabilities such as simultaneous access to distributed databases . This paper directly addresses system supported collaboration at the social interaction level . Rather than presenting a finished product that fully meets the needs of collaborators , we describe prelimir ~ ary work done with a particular idea structuring system . Hypertext systems can be broadly classified into those designed to support browsing of existing databases and those designed to support creation and modification . Idea structuring systems are examples of the latter . They are designed to support the early * Frank Halasz , MCC , Kaleido # 2 , 9390 Research Blvd , Austin , Texas 78759 . 153 stages of idea generation , development and organization , as well as later document preparation . Such systems are becoming prevalent not only in research environments , but in the personal computing market as well . They have been applied in areas as diverse as education , writing and software management . NoteCards Halasz et al 87 is an idea structuring hypertext system . It was not initially designed with collaboration in mind , yet there were times when users had to work together in NoteCards . Their experiences coercing NoteCards into supporting collaboration provide valuable insight into capabilities lacking in NoteCards and eventually , perhaps , into general requirements for collaborative idea structuring systems . The following sections introduce the notion of mutual intelligibility and discuss techniques designed to help NoteCards users maintain the mutual intelligibility of their work over the course of a collaboration . We restrict our focus to three modes of collaboration : draft passing , simultaneous sharing and online presentation . Mutual intelligibility A crucial requirement of collaboration is that the participants find ways to make their work mutually intelligible . Along with the production of substantive work , participants in a collaboration engage in activities done expressly to maintain the coherence of their interaction . Consider the following scenario . Two researchers share an office , but work different shifts and so are never there at the same time . They decide to work collaboratively on a project using the office whiteboard as a shared project notebook . Very soon , they realize that in the absence of other forms of communication , the whiteboard will have to contain discussion about their work at the board as well as the substance of the work . In part , this discussion includes commentary and annotations on one another ' s work . But in addition , it includes communication about conventions for use of the medium , for example , which color marker or portion of the whiteboard to reserve for which subject area . Such meta - communication makes the substantive work intelligible to each of the participants . This scenario illustrates three kinds of activities occuring in collaboration : substantive , annotative and procedural . Substantive activities are those that constitute the work at hand . When writing a paper , the substance of the work is the ideas expressed in the paper ' s actual text . In design , the substance is the plan and implementation of the artifact , in research discussions the problem or topic of interest . The mutual intelligibility of the substantive work is supported through annotative and procedural activities . Annotative activities are about the work and include commenting , critiquing , questioning and otherwise annotating the work itself . There are a few systems that explicitly support these activities . For example , Annoland ( designed by Richard Burton and described in Brown 85 ) is a window - based system that allows the attachment of pieces of text to an existing document . The user interface includes a graph - based browser of annotations organized according to time of creation . Procedural activities include discussions about conventions for use of the medium or technology , logistics of turn - taking , record keeping , etc . No systems that we know of adequately support these activities . However , many hypertext systems , by their very nature , are well suited to providing such support . The requirement here is that the information base being created be able to include procedural discussion along with substance and annotations . Furthermore the procedural 154 discussion should be linked to the relevant parts of the substance . Use of a whiteboard in a draft - passing setting bears some similarity to collaborative use of an online hypertext system . Both share the qualities of non - linearity and novelty . Whiteboards are almost always used as a resource in face - to - face conversations where the collaborators rely on other communication channels . Similarly , we ' ve had very little experience with hypertext systems as the sole media for collaboration . Because of this , collaborators using hypertext systems will have to discuss and adopt various conventions regarding use of the medium . Ideally , these discussions should go on within the medium , especially in the absence of other communication channels . N o t e C a r d s There are several reasons for our decision to use NoteCards as the environment for testing our ideas on computer support for collaboration : ( 1 ) NoteCards is a fairly stable system that is being used widely in our lab , ( 2 ) the tailorable nature of NoteCards makes it particularly well suited to incremental extensions in support of collaboration and ( 3 ) the members of the collaboration project include one NoteCards designer and one experienced user . ( 2 ) and ( 3 ) make it convenient for us to design prototype collaborative tools in NoteCards while ( 1 ) makes it likely that these tools will have a user community . The basic object in NoteCards is an electronic notecard containing text , graphics , images , etc . Different kinds of notecards are defined in an inheritance hierarchy of notecard types ( e . g . , text cards , sketch cards , query cards , etc . ) . On the screen , multiple cards can be simultaneously displayed , each one in a separate window having an underlying editor appropriate to the card type . Individual notecards can be connected to other notecards by arbitrarily typed links , forming networks of related cards . It is up to each user to utilize the link types to organize the notecard network . Individual links are represented by link icons ( usually boxed titles ) in the card ' s substance . NoteCards also includes a filing mechanism ( implemented by the FileBox notecard type ) for building hierarchical structures using system - defined card and link types . There are also Browser cards containing node - link diagrams ( i . e . , maps ) of arbitrary pieces of the notecard network and Sketch cards for spatially organizing information in the form of drawings , text and links . All of the functionality in NoteCards is accessible through a set of well - documented Lisp functions , allowing the programming user to create new types of notecards , develop programs that monitor or process the notecard network , and / or integrate other programs into the NoteCards environment . A complete description of NoteCards can be found in Halasz et al 87 . There are other hypertext systems similarly well - suited to supporting collaboration . The Neptune system Delisle & Schwartz 86 has functionality that overlaps to a large degree with that of NoteCards and is being used in multi - user computer aided design and software management tasks . Other hypertext systems that have attempted to support collaboration are Intermedia at Brown University Yankelovich et al 85 , Xanadu Nelson 81 and Textnet Trigg & Weiser 86 . The Augment system conceived by Doug Engelbart in the 60 ' s was perhaps not strictly hypertext , but nonetheless made impressive strides in collaborative authoring and teleconferencing Engelbart 84 . Finally , support for hypertext versioning ; the storing , maintaining and accessing of prior versions of nodes and links , can be found in systems like 155 Neptune and PIE Goldstein & Bobrow 81 . Draft passing The most prevalent form of collaboration in NoteCards to date is draft passing . This is because NoteCards currently does not allow multiple users to simultaneously access a notefile ( but see the description of simultaneous sharing in the next section ) . Thus , collaborators sharing a notefile agree to take turns . Often , this involves file copying between servers and workstations coordinated through electronic mail . The amount of time any one user holds onto a notefile tends to vary from several hours to several days . In this section , we focus on a particular draft - passing collaboration centering around a NoteCards notefile belonging to two of the authors ( Trigg and Suchman ) . At the substantive level , this notefile serves as a project notebook . In the project , we are engaged in a study of collaboration in the research lab , as well as in an ongoing discussion of how NoteCards might support collaboration . The notefile provides a medium for documenting the study of collaboration and for project plans and directions . It includes a dialogue on ideas , slides for talks , drafts of papers , the results of interviews , etc . Figure 1 shows a NoteCards screen snapshot of the collaboration project notefile . The top level filebox for the notefile is called " Contents " and contains sub - fileboxes corresponding to various projects , topic categories , mechanisms and activities happening in the notefile . In using the notefile as a projecl notebook , we have discovered several techniques that support our annotative and procedural activities as well . Our most common annotative activity is commenting o ~ each other ' s work . Initially , we inserted comments directly into the card bein ~ critiqued . In order to distinguish cerumen1 from substance , we used different fonts . In the ; : : : ' , : . m . ~ . ~ . ~ . ~ , . W . ~ ' ~ . . . ~ : ~ . , . : . , ; , . ; " 6 . ~ W ~ , 6 , : 4 , £ , ' . . i ~ L ~ h ' t - . , ' £ , ~ : : : ' , . . . . . . . . . . . . . . . . . . . . . . . . , ' , ' , ' . ' . ' , ' , ' . ' . ' . ' . ' . ' . ' , ' , ' . ' . . . : . ' : j ~ , ~ ; ; j ~ y , . , , , . , . . . , . , , , . , , , . , . . . , . , , , , , , , , v , , . . . . . . . . . : , : . : . : , ' , , ' , , : , : . . . . . . . . . . . . . . . . . . . . . . . . . . . , , , . , : , h , , , . : . : . : . . . . . P , , IF ~ i ~ / I ~ I ~ , ~ ~ ° ~ , , , ~ , ~ , ~ . . . ~ i ~ mr ~ . ~ L ~ _ ~ . ~ . . . . . - . . . . . . . . . . ~ , ~ r . ~ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ' , ~ ; : : " : : : : ; 1 A , , . . let ill 1 1 : : : : : : : : : : : : : : : : : : : : : . . . . . . . . . . . , : , , : : : 1 : : : : I . ote , l . use I T , , , 0 , o0 , . , . gs to do , o . . , , oint sessioo , , , , , , , , , , , ; , , : , : . . , : , ' : ' , : 2 Added ~ ' . . . . . ; . . . . . . . . . . . . : : : : : : : : J 1130186 R : History of areas visiteo , : : : : • : : . : - - iiiiii I ' ' " BeoH ~ : o ' : , : j2 , l _ 2 I ho ~ , e a major , c ~ ange , tt ~ at I ¢t I ke to see . in , - ~ - _ _ Thouqhts on collaboration " J , As i , . Found ~ filebox and filed i ~ in ~ ' Y ' iil Contents box . ~ I would fike to see thisfileboxreservedforoenerallssuesa ~ cut ! ; : ! 1 I Z collaboration , independent of specifics about Notecarde or this notefile . If : : : : : : : : : : J 2 . Created , ne : ~ sages ~ you take alook at Thoughts browser I you ' l see that atthe rnornent t ' s a : : " Z / 16 / 86 R ' Advocatn 9 use of Messages I ~ rnixofthetwo , We couldeffectthechangebyturnng : I . _ ~ - t . . . . . . . . . . . . 9 I ; 3 ' . , : . . I . . . . . _ _ _ , - _ Constructing a shard l ! lle | ie | loJieszeJ . l eli eie l | lP , Xt | le | : : 1 2116196 R : On titles for comment cards " ~ ' i - ~ . , " ' " : : : 1 ' - - i Creating a notefile f , ~ ' m all or your propose ~ reorganizagion i ! i ! i i J 2116 / 86 R : Advocating multiple filing J , i , , Of the filebox , I was all set . to do it ! iii 2116186 It : Things To Do filebox ? ~ Link types Narnin ~ now but I ' m not sure where you want : : ! : : ! il ' : : ~ the new fileboxes to live . I gather ~ zou t ' , i ' , : ; ' , | . . . . . . . . . . . r . . . . ! : ii ' , . . . ~ - - - - - ~ want . new ftleboxes " Constructin ~ a ' ~ l ~ Leti WUeStlOn on re uses reor anlZatlon OO ~ , " % r , / e could the¢ ~ ~ r . o : ' iiii | , ~ ' " " L P P g " " I : ~ i : ~ ii , " " shared notefile " and " Farms o£ ' nd tri zest ~ on ~ tu puttF , ~ erds tntelaCtlOn e i ! ! . . . . . . . ii - . ~ : ' ' ' , " Would thes . liveia i | 615186 L : Proposed reorqanzation of the Thouohts e ji ! ~ " Contents " or " Thoughts on : ; : ? j ? | . . . . i : i ' ~ collaboration " ? , ~ , , i ; : < Response > Maybe we should save this job / ' or our , Created LAurccd ill response to Response i next joint session ~ ' Figure 1 : The collaboration project notefile . 156 limit , however , this leads to either proliferating fonts or confusion over the historical order of annotations . Currently , we create all annotations in separate cards and link them to the cards being annotated with the link icon at the appropriate place . This provides both distinction of comment from substance and a history of commentary creation . Furthermore , annotation cards have titles describing their substance , while link types are used to capture the relation between the annotation card and the card annotated . ( Annotative link types include Comment , Response and Argument . ) In Figure 1 , for example , the comment card " Question on proposed reorganization " is linked from " 6 / 5 / 86 L : Proposed reorganization . . . " via a " Response " link which appears as a link icon at the bottom of the card . Procedural activities include record keeping , message posting and convention adoption . Record keeping in the project notefile consists of recording each entry into the notefile and the changes made during that session . We use History cards to keep such records . In addition to providing a long term historical record of activity in the notefile , they allow one participant to easily see what the other has done during a session . When using the notefile , we each create one History card per session . This card is titled with the date and initialed by the particular collaborator ( or by more than one if the session is joint ) . The card ' s text contains brief descriptions of the work done in that session and links to the cards that were created or modified . All history cards are filed in the history filebox and kept in chronological order . This allows one collaborator to review the work done by the other and follow links to the affected cards . In Figure 1 , the history filebox appears in the upper middle part of the figure . Two individual history cards are displayed on the left . Notice that the various cards created during a session are linked from the session ' s history card . For example , the session of 2 / 13 / 86 contains a link to " 6 / 5 / 86 L : Proposed reorganization . . . " , a card created during that session . In a later session , the response to that proposal was captured in " Question on proposed reorganization . " Again , notice that the entire interchange is recorded via links and descriptive text in the session history cards . Another procedural activity involves message posting . We occasionally need to direct a question or suggestion directly to the other collaborator . This is the kind of communication that happens routinely in face to face collaboration , but that we also want to be supported online and within the medium . We do this through Message cards . These resemble notes left on a bulletin board , waiting to be read by the recipient the next time he or she visits the notefile . In Figure 1 , the Message card " 2 / 16 / 86 R : On titles for comment cards " is one of several created in the session of 2 / 16 / 86 and linked from that session ' s history card . Perhaps the most important procedural activity involves creating , proposing and adopting conventions . We ' ve found this to be a four - stage process , mostly occuring through the use of Message cards . First , one collaborator begins the discussion by proposing a convention , often arising from previous discussion concerning some procedural difficulty encountered in using the notefile . This is followed by an interchange concerning the merits of the proposal and possible alternatives . At some point , the discussion reaches closure and the collaborators agree to adopt a convention . Finally , after a trial period , a piece of software may be created to automate the mechanism captured by the convention . We have already adopted several conventions in the collaboration project notefile . In one case , one of us proposed that 157 different fonts be used in our text cards so that we could easily ascertain a card ' s author . After some discussion , we settled on three fonts , one each for our individual sessions and one for those times that we work on the notefile together ( sharing a terminal ) . A tool to support this could simply set the default text card font based on the identity of the user when the notefile is opened . In another case , we discussed the issue of when it was reasonable for one person to reshape another ' s card . The decision in this case was to adopt no convention . That is , we would reshape cards at will . It should be noted that there are certain procedural matters that cannot currently be accomodated within the shared notefile . For example , the logistics of turn taking for use of the note file is coordinated via real time conversations or electronic mail . Simultaneous sharing In simultaneous sharing , several collaborators work contemporaneously on a single notefile . Simultaneous sharing is similar to draft passing in the substantive , annotative , and procedural activities that can occur . However , simultaneous sharing highlights three additional procedural issues regarding support for collaborative interactions . Access contention . Access to information stored in a draft passing notefile can be restrictive . In particular , the mechanics of draft passing prevents collaborators from simultaneously working on a single notefile , even if the sets of cards that they need to access are entirely disjoint . Simultaneous sharing changes the nature of access contention , moving the contention from the level of the whole notefile to some finer - grained level . Real - time monitoring . Because draft - passing collaborators are not working contemporaneously , each collaborator usually does a substantial amount of work before passing the " draft " off to the other collaborators . During this period , the other collaborators cannot review the ongoing work , and hence cannot affect or modify its real - time progress . In a setting of simultaneous shared access , real - time monitoring is possible . Note , however , that special mechanisms need to be designed into any system intended to support such monitoring . Real - time communication . The communication between draft - passing collaborators occurs by placing information in the shared notefile and expecting the other collaborators to locate and read this information at some later point in time . This communication occurs across time and space with consequent loss of mutual context , timeliness , etc . Simultaneous information space sharing allows for the possibility oi remote real - time communication between collaborators , thereby changing the nature of their communications . Again , special mechanisms beyond simple simultaneous access are required to support such communication . In order to study collaboration through simultaneous access to a shared information space , we have designed and are currently implementing a distributed version of NoteCards . Distributed NoteCards will allow users simultaneous shared access from theil workstation to the notefiles residing on any machine attached to the same local - area network . Distributed NoteCards provides contention resolution at the level of individua cards . The system allows any number of users simultaneously to read and display a given card . However , permission to make modifications to the card is restricted to one user at a time . All readers of the card are notified when certain modification events occur . Following Stefik et al 87 we notify readers as soon as possible that a card they are 158 accessing may be changed . Readers are provided with three levels of modification notices . First , when one person requests write permission for a card , all readers of that card are notified that someone has declared an intention to modify the card . Second , when the writer actually writes the modified card onto the shared notefile , all readers of the card receive a notification that the card they see is now out - of - date . Finally , when a writer deletes a card , all readers of the card receive notification that the card has been deleted . NoteCards prevents any further operations using the card , but users can continue to examine the card displayed on the screen . Distributed NoteCards provides no special mechanism for dealing with access collisions at the individual card level ; exclusive write permission is simply allocated for an unlimited period of time on a first - come , first - served basis . The expectation is that users sharing a notefile will in general be working in different regions of the network and hence will not be subject to access contention at the individual card level . This situation may in fact occur frequently when the system is being used by a group of collaborators focused on a common task , as often occurs in face - to - face meetings . In this case , the users could devise some form of draft passing convention for individual cards . Note , however , that preliminary observations of the Colab in Stefik et al 87 suggest that participants may sometimes need to monitor modifications below the card level as they occur in real - time . The primary goal of the Distributed NoteCards project is to eliminate some of the more tedious mechanical aspects of sharing note files and to move access contention from entire notefiles down to the more natural level of individual cards . In its present design , Distributed NoteCards does not address in detail the issue of real - time collaborative interactions . The notification procedure built into the system provides a very minimal monitoring tool ; users know when a card on the screen is about to be modified or has been modified . This was intended more as a way of marking outdated information than as a tool for monitoring the activities of other users . As a result , there is no monitoring of read accesses to cards , and there is no tool for monitoring modifications to cards not on the screen . A more sophisticated monitoring tool might , for example , provide an overview browser of some user determined subnetwork in the notefile . Cards about to be modified or recently modified ( or read ) could be highlighted on this browser . Distributed NoteCards also does not specifically address the problem of communication between collaborators . The tools and techniques available for such communication are the same as those described in the draft passing section above ; there is no special communications channel for simultaneous users of a notefile . However , future plans call for a Talk card in which all of the current users of a notefile could carry on ( as well as record ) a real - time written conversation . Since Distributed NoteCards is still being implemented , we have no observations on its use . Like draft passing , we expect that using a simultaneously shared notefile will require the development of conventions , methods , and further tools to adequately support collaborative work . In particular , we expect the need for better monitoring facilities and for better communications channels to become apparent as people try to use Distributed NoteCards for real collaborative activities . Online presentation Though online presentations are not usually thought of as collaborative , their support imposes requirements similar to those outlined above for draft passing and simultaneous sharing . In online 159 presentations , the author has to make his or her work intelligible to a future , often unknown reader . The system must provide means for the author to document conventions adopted in the presentation in order that the substance of the presentation be intelligible . Documentation can be either at the annotative level , and thus about the substance , or at the procedural level , about using the medium . For example , the text in a " README " card filed in a filebox might describe the contents of that filebox and thus provide annotative documentation . A separate card instructing the reader to always look first for " README " cards when bringing up a filebox would be an example of procedural documentation . A more dynamic form of documentation might be called a guided tour . Guided tours are created by the notefile ' s author and used by the reader . They provide paths that visit certain landmark cards in a notefile . Figure 2 shows part of a tutorial notefile . Novice users learn about NoteCards by reading the cards found along documented paths through this notefile . The documentation takes the form of text surrounding each link icon ( many resembling small buttons ) representing the tour ' s links . We imagine future guided tours being tailored according to the reader of the notefile . For example , users might choose different tours based on their expertise in the area or on the time they have available . At any point during the tour , the reader could venture off the path to inspect cards of interest . : ! ; (cid:127)(cid:127)K ; ! : ! : ! (cid:127) ; : (cid:127) : ; : ! (cid:127) ! : ! : ! : ! : ! : ! (cid:127) ! : ! : (cid:127) ; ! : (cid:127) : (cid:127) : ! (cid:127)(cid:127) : ! : ! : ! : ! (cid:127) ! : ! : ! : (cid:127) : ! : ! : ! ; ! (cid:127)i : (cid:127) : ! : ; : ! : ! : ! : ! : ; : ! : ! : ! (cid:127) ! : (cid:127)(cid:127) ! : ! : (cid:127) ; (cid:127)(cid:127) ! : K : ! : ! (cid:127) ! : ! : ! (cid:127) ! : ! : ! : ! (cid:127) ! (cid:127) ! : ! : (cid:127) : (cid:127)(cid:127)(cid:127)(cid:127)(cid:127) : (cid:127) : (cid:127) : ii ! ii N o t e C a r d s + : + : : < , > > : ~ iiiiiiii , 4 ' : ' : ' : An Environment For . . . . . . . . . Information Structuring i : : i : : i : : i : : i ( click here to go on ) i , i ! iiiil i : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : , = i : = i = : i ! i ! ' vVl - + . b . ! ' . . . ' , : , Ll SEe , : , N " / , DLlr . sc : reen nc , w is the l ' lote , : ZJar , d . : . Main Menu . It looks like this : Close / Delete Create 8how Box I The Main Menu allc , v , , , ' s yOL ! tO interact with the top level of l " . JoteOards functionality ~ SL | ch aS C ' f : ~ el - lil - ~ ! and clOSiNg ' ~ C , Llr r ' 4oteFile database ( NoleFile Ops ' } wall4ing tt - , roL ( ; - your dat ; aL , ase ( Show Box ) , creating new cards ( Create . ) , and c losirg or deletil i , : j . set : ~ ~ _ ff cards ( Close / Delete ) . ( Clicl . ' . here to c : ontir ~ ue ) i + : : ~ : ~ : ~ : ~ : ~ : ~ : : : : : . . : : : : : : : : : : : : : : : : : ~ : : : ; : ~ : ~ : : : ~ : : : ~ : ~ : ~ : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : ~ : ~ : : : ~ : ~ : ~ : ~ : ~ : ~ : ~ : ~ : ~ : ~ : : : ~ : : : : : ~ : ~ ! ~ : ! : ~ : ~ i ! : : : ~ ; ~ : ~ : : : ~ : ~ : : : ~ : : : : : ~ : ~ . ~ i ~ : ! i ~ : ~ ` : ~ i ~ : : : ~ : ~ : : : ~ : ~ . ~ . ~ . ~ . ~ : : l qoteOards was developed in response to the needs implicit in c , : _ - , mplex multiple sour , : . e information organization tasks . t qoteCards provides a rich erwiror , ment for capturing ideas without il - 4tial structural constraints . So , at - , unstructured set of ideas and notes may be ordered gradually as a conceptual framework becomes apparent . Various competing organizations may be explored . A NoteFile may grow , evolve , and extend utntil it becomes a full representation of a goal problem space . ( cli < _ ? . 14 here to explore a more complete presentation of the lqoteCards model . ) ( click here tc , see sorne examples of ~ otecards and filebox structures . ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . • l ~ iit ~ i ~ | ll _ , i ~ i ' i FT ~ # ~ _ ~ " " " ~ " " ~ i " " ' ' : llt ~ . + . : ~ . . . . . . . . . . . : " ~ " " ' : : ; : ; " ; " ' i / ; . i " : ; # . : " ? . : ? ' ; ; : " ' " ; ~ , 7 " : ' ; q ; ~ : : ; ~ . ~ { , : k ~ ~ ~ . ~ ( ~ ~ i . ~ , ~ . ~ : ~ . . . . . . . . . . . . : ; ' " : : ' . " : ; ; ~ : ~ ; " i ~ i " ; ; " ' . : ; " ; : ' " ~ . i ; ; " ~ ' : . ; . . 5 : ; i : ; qi ; The NoteOards system is based on the following model : Sources > > > > Notes > > > > Structures > > > > Products Bul this one - way llow is a simplification ol what goes on durhg the authoring process when it is observed empirically . . . < Explanation ) . , . , . . , . , . . , . , . , , , . . . , . , . , , . , . , . . . , . , , , , . . . . , , . , , . , . , . , . , . , . , . , . , . , . , . . . , , . . . . . . , . . . . . . . , . , . , . , . , . , . . . , . . . , , . . . . . . . . . . , . , . , . , , , . , . , . , . , . . , , . , . . . , . . . . . . . . + . , , . . , . . , . , , , . , . . . , . . . . . . . . . , . . . . . . . , . , , , , , , . , . , . , , . . . . , . . . . . . . . , . , . , . , . , . , , , , , , . , , , . , , , , - . . ~ + ~ + ~ . . . , ~ + ~ * I ~ 8i ~ . ~ ` ~ . ` ` ; . : ~ . . . ` . * ! ~ + ~ { . , ~ { ~ + . + . ~ , ? ? ~ ` ~ I ~ : ~ : ~ # ~ Ideall ' . . ' Sources are electronic forms of the reports , rnail , and other " material the analyst starts with to perform a task . . 1 ' 4oteCards rnay take advantage of Kurzweil arid other types of scartnir , g devices to help provide sources . I ~ Exarnple ) Kurzweil Sample - Spacecraft Paper I I < Example ) Spacecraft Image ( Enhanced ) I r , - . IoteCards r - nairltains SoL ~ r , ce links to aid in establishing produc ' t credibility . Figure 2 : A tutorial notefile . 160 Concluding remarks In order for peopl e to collaborate , they must be able to make their work mutually intelligible . This requires annotative and procedural discussion as well as substantive work . Ideally , computer systems designed to support collaboration should capture both sorts of discussion and store them in the same medium as the work itself . Hypertext systems , by nature , provide a good starting point . For example , NoteCards can contain multiple interlocking hierarchies allowing users to maintain different organizations of the shared information simultaneously ( as opposed to a single outline , say , when writing a paper ) . Furthermore , annotative and procedural discussion can be linked to the appropriate parts of the work . However , pure hypertext is not enough . In order to enable mutual intelligibility during draft passing , we must provide online facilities that specially support various annotative and procedural activities such as record keeping and the adoption of conventions . During simultaneous sharing , the collaborators should be able to monitor one another ' s work in real time . And finally , when creating online presentations of structured hypertext idea bases , authors must be able easily to link in documentation of various sorts . Looking to the future , providing further support for mutual intelligibility will require building a bridge between the two parts of our collaboration project ; studying collaboration and designing computer tools . By looking hard at the collaborative activities of our potential users we hope to locate those places that are both in need of and amenable to computer support . References Brown 85 Brown , J . S . , " Process versus Product : A Perspective on Tools for Communal and Informal Electronic Learning , " Journal of Educational Computing Research , 1 ( 2 ) , 1985 , 179 - 201 . Delisle & Schwartz 86 Delisle , N . and M . Schwartz , " Neptune : a Hypertext System for CAD Applications , " Proceedings of ACM SIGMOD ~ 6 , Washington , D . C . , May 28 - 30 , 1986 , 132 - 142 . Engelbart 84 Engelbart , D . C . , " Authorship Provisions in Augment , " IEEE 1984 COMPCOM Proceedings , Spring 1984 , 465 - 472 . Goldstein & Bobrow 81 Goldstein , I . and D . Bobrow , " An Experimental Description - Based Programming Environment : Four Reports , " CSL - 81 - 3 Xerox Palo Alto Research Center , Mar . 1981 . Halasz et al 87 Halasz , F . G . , T . Moran , and R . H . Trigg , " NoteCards in a Nutshell , " submitted to CHI ÷ GI ~ 7 Conference , Toronto , Canada , April 5 - 9 , 1987 . Nelson 81 Nelson , T . H . , Literary Machines , T . H . Nelson , Swarthmore , PA . , 1981 . Stefik et al 87 Stefik , M . , G . Foster , D . G . Bobrow , K . M . Kahn , S . Lanning and L . A . Suchman , " Beyond the Chalkboard : Using Computers to Support Collaboration and Problem Solving in Meetings , " CACM , 30 ( 1 ) , Jan . 1987 . Suchman & Trigg 86 Suchman , L . A . and R . H . Trigg , " A Framework for Studying Research Collaboration , " Proceedings of the Conference on Computer Supported Cooperative Work , Austin , Texas , December 3 - 5 , 1986 . 161 [ Trigg & Weiser 86 ] Trigg , R . H . and M . Weiser , " TEXTNET : A Network - Based Approach to Text Handling , " ACM Transactions on Office Information Systems , 4 ( 1 ) , Jan . 1986 . [ Yankelovich et al 85 ] Yankelovich , N . , N . Meyrowitz , and A . van Dam , " Reading and Writing the Electronic Book , " Computer 18 ( 10 ) , Oct . 1985 , 15 - 30 . 162