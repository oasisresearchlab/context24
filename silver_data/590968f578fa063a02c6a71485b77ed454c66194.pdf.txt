Business language analysisforobject - oriented information systems by D . W . McDavid Business language analysis grows out of a philosophy that treats business organizations as living systems . A key concern is the meaning of business information that provides adaptive survival advantage and strategic leverage . Popular object - oriented methodologies correctly recognize the need to identify business objects by analyzing the problem domain . The approach described in this paper fills in the details that are implied , but not specified by other methods . It builds a business language model that clarifies both the content and structure of the terminology actually used in the business . Simple examples of business language analyses are given . Deeper insight is offered in a discussion of lexical semantic and category theory and in the proposed notion of business language patterns . I nformation is an essential dimension of any bus - iness . In fact , " . . . organisations , themselves are information systems . " 1 Communication of informa - tion within and among organizations comes in the form of conversations , commitments , contracts , and transactions . Industries and professions often com - municate in a jargon that is incomprehensible to out - siders . The challenge for information systems is to facilitate organizational communication , sometimes translating one group ' s jargon into terms that are meaningful to others . The information systems pro - fession willonly be successful in this endeavor to the extent that it builds systems based on a fundamental appreciation for the meaning of business language . An accurate and timely understanding of informa - tion needs is a prerequisite for effective enterprise - wide information systems , whether object - based or procedure - data applications . Businesslanguage anal - ysis identifies domain - specific business terms from documents and conversations . It draws on predefined patterns of generic business concepts to classifyand linkbusiness terms into a semantic network . This net - work of terms then provides the basis for object mod - eling , user interface design , persistent data manage - ment design , and test case generation . Business language analysis produces models of the information that is used and exchanged among bus - iness organizations . It follows an engineering tradi - tion of separating analysis from design and using models to create shared understanding across teams of people working on a technical problem . It isalwaysimportant to understand the purpose and intended audience of any model or modeling activ - ity . Various aspects of the business domain can be modeled . Requirements models treat essential , or logical , aspects of data and data processing systems . Design models explore physical aspects of informa - tion systems . There are also models of objective re - ality , including business process models , organiza - tion charts , charts of accounts , and plant layouts . And , finally , there are models of the information rep - " - " Copyright 1996 by International Business Machines Corpora - tion . Copying in printed form for private use is permitted with - out payment ofroyaltyprovided that ( 1 ) each reproduction isdone without alteration and ( 2 ) the Iournal reference and IBM copy - right notice are included on the first page . The title and abstract . but no other portions . of this paper may be copied or distributed royalty free without further permission by computer - based and other information - service systems . Permission to republish any other portion of this paper must be obtained from the Editor . 128 McDAVID 0018 - 8670 / 96 / $ 5 . 00 Â© 1996 IBM IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 resentation of things important to the business . 2 Bus - iness language analysis creates models of this latter type . It is a method for analyzing business seman - tics : the meaning of business information . It treats information of all types , from inventories to goals , from processes to rules and procedures , whether accessed by computers , bound up in documents , or present in human brains . This paper discusses the limitations of a paradigm for understanding business information needs that is based purely on an engineering perspective . It ex - plores an alternative way of thinking about business information systemsusing concepts from general sys - tems theory that view the information system as the mind of a living system . We present object orienta - tion as the most hopeful approach to realizing an architecture based on cooperating mental agents . We propose business language analysis as the concep - tual framework for information system construction and show how business language analysis identifies terms in actual use in the business , and then clas - sifiesand links those terms using a set of generic bus - iness concepts . The paper recommends specific ac - tivities and work products to produce a model of business language and suggests use of the language model in various information systems development activities . The paper presents preliminaryfindingsfrom the au - thor ' s experience . Business language analysis is ex - ploratory and invitesparticipation and feedback from users . The paper concludes with suggestions of ar - eas where future work should proceed . Architecture , engineering , and understanding Successfulmethodologies have been built around the concepts of architecture ' and engineering " as applied to information systems . The resulting models have been useful , and lessons from those endeavors have helped the information systems profession make great strides in recent decades . An engineering perspective willalwaysbe vital to the success of information systems with respect to per - formance requirements for hardware and network components . However , when architecture and en - gineering are taken to be sufficient models for what information systems are all about , a fundamental conceptual confusion results . The following quote presents the nature of this confusion : IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 When applied to an information system , the word architecture is a metaphor that compares the con - struction of a computer system to the construc - tion of a house . . . . Enterprise or business mod - el [ s are analogous to ] . . . the architect ' s drawings that depict the final building from the perspective of the owner , who will have to live with it in the dailyroutines of business . They correspond to the enterprise ( business ) model , which constitutes the design of the business and shows the business en - tities and processes and how they interact . 5 [ Em - phasis added . ] In this passage , a computer information system is compared to a building ( a house or a business struc - ture ) . The passage indicates that an enterprise model isboth a model of an artifact ( building ) and the bus - iness served bythat artifact . It islike equating a house with the family that will live in the house . Clearly a house and a family are not the same , and cannot be described by the same model . A model of a family , including the number of members , interests and hob - bies , and ages and expected growth patterns , would be very useful input for the design of a home . In the same way , a model of a business provides very use - ful input for the model of its information systems . The point is , they are different models . Understanding user requirements iswidelyacknowl - edged as a critical success factor for information sys - tems . Many methods , even when they address bus - iness issues , do so from the perspective of a particular system development effort , looking outward ( see Fig - ure 1 ) . The very words " requirements " and " user " reveal a perspective from inside some ( proposed ) information system . All we need to do is ask " Re - quirements for what ? " and " Users of what ? " to see that perspective . The answer must be . , Requirements and users of some information system . " In contrast , the perspective that underpins business language analysis ( Figure 2 ) is from outside the en - terprise , looking in at the human systems and at the information systems that make up that enterprise . This perspective forces the information needs of the enterprise to be examined as a whole . It can even embrace an extended enterprise , which reaches out to incorporate external enterprises as part of a larger human system . A human - centered approach to information man - agement provides the underpinning for business lan - guage analysis . The perspective of business language analysis is less on engineering and more on under - McDAVID 129 Figure 1 Outward perspective on business issues INFORMATIONSYSTEM HUMAN SYSTEM / 1 / r INFORMATIONSYSTEM - ~ INFORMATIONSYSTEM standing . It recognizes that it is a losing proposition to try to engineer human communication . It aspires to understand the meaning of communicationwithin the human activity system so as to support the evo - lution of the business , along with its information sys - tems capability . An alternative view of information systems Business language analysis is a bottom - up approach to articulating the information needs of business en - terprises . It isbased on an alternative , systemic view of information systems as the minds and nervous sys - tems of living organizations . Motivation . There are several motivators for taking an alternative viewof information systems . One mo - tivator is the trend toward ever - increasing amounts of information being held and manipulated by au - tomated data processing systems . Hardware has be - come a commodity , as have many basic software components . As more technical issues are resolved , and as information technology penetrates deeper into business enterprises , we are better able to fo - cus attention on the use of business information as a strategic resource in an increasingly competitive environment . Increasing business complexity , competitiveness , and speed are part of the motivation . Stephan Haeckel and Richard Nolan present an analogy for today ' s fast - moving business climate in the notion of man - aging by wire . " Flying by wire " means flying an air - craft by controlling an information representation of the aircraft through the use of heads - up displays and electronic controls ; the computer actually ma - nipulates the aircraft control surfaces and powerplant controls . Successful companies are able to sense and respond to rapidly changing customer needs . " The ideal manage - by - wire implementation uses an en - terprise model to represent the operations of an en - tire business . Based on this model , expert systems , databases , software objects , and other technical com - ponents are integrated to do the equivalent of flying by wire . : " However , the problem is actually more complex than this analogy would suggest . Managing a business in - volves social and personal dimensions , as well as physical forces . This complexity critically affects the 130 McDAVID IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 Figure 2 Inward perspective of business language analysis HUMAN SYSTEM HUMAN SYSTEM INFORMATIONSYSTEM INFORMATIONSYSTEM INFORMATIONSYSTEM challenge of building systems that support informa - tion needs . Thomas Davenport proposes an ecology of business information . He claims that the infor - mation technology community is in a mid - life crisis , brought about by failure to deliver anticipated value to its constituency . It has been dominated by the en - gineering design and architecture model - the tech - nological plumbing . " Information management must begin by thinking about how people use informa - tion - not with how people use machines . . . . A hu - man - centered approach assumes information is complex , ever - expanding and impossible to control completely . The natural world is a more apt met - aphor for the information age than architecture . " ? This alternative view is also motivated by the shift - ing , insatiable nature of information systems require - ments . Experience has demonstrated that the more application functionality provided , the more users demand . We need to get out in front of this require - ments gap by anticipating user needs before they ma - terialize . How isit possible to anticipate user needs ? The only way is by understanding common patterns of behavior and semantic structure , which arise be - cause of the true nature of organizations and the in - formation systems that serve them . At the most ba - sic level , we need to recognize that both businesses and information systems are indeed systems , to be understood by applyinglessons from general systems theory . Systems thinking . General systemstheory isa branch of science that has emerged in the 20th century as a counterpoint to the successful , but sometimes lim - ited , reductionist approach to science . The " systems paradigm is concerned with wholes and their prop - erties . " " It is based on the recognition that a system has properties that emerge from , but transcend , the sum of its individual parts . Systems can be both hi - erarchical and interpenetrating . There is a hierar - chy of systems from simple thermostats to the space shuttle , and from cells , to organs , to organisms , to organizations . A human being ( a system ) plays roles in many different social systems ( families , corpora - tions , organizations ) . A hospital is a component of both the health care system and the economic sys - tem . A general systems principle states that when one sys - tem exists to serve another ( System A serves System IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 McDAVID 131 B ) , the serving system must be understood in terms of the served system ( System A must be understood in terms of System B ) . Information systems exist to serve human activity systems , and , therefore , " infor - mation systems design must stem from a model of the activity system served . ? " The systems approach has had notable success in the creation of large , complex engineering artifacts . Les - sons learned from this systems approach can be ap - plied to business information systems where the problems are mechanical in nature . " More prob - lematic in many ways are the so - called " soft " systems . " ' Hard ' systems thinking isgoal - directed , in the sense that [ it ] begins with the definition of the desirable goal to be achieved . " The essence of hard systems is design engineering of a well - known solution to a well - understood problem , where the effort is to choose the best among several alternative ap - proaches . Bycontrast , soft systems are " management problems . . . in social systems where the goals are often obscure . " 11 It is critical to soft systems thinking to avoid the trap of treating human systems as equivalent to more de - terministic mechanical systems . It is tempting to re - duce information system projects to hard system problems . In some cases this may be appropriate , if the requirements are simple , clear , and well - artic - ulated . However , such requirements are increasingly the exception , rather than the rule in enterprise class information systems . Living organizations . If we are to understand infor - mation systems in terms of the human activity sys - tems they serve , it behooves us to examine the na - ture of human activity systems ( organizations ) more closely . Long tradition supports thinking of organi - zations as living entities . One of the earliest applications of general systems theory to human activity systems is the living systems model . 12 This model abstracts a common set of func - tions and subsystems at several levels of recursion , from a single living cell up through very high levels of human organization . These recurring subsystems include material and energy subsystems ( ingestor , converter , motor , storage , producer , etc . ) and infor - mation processing subsystems ( memory , encoder , de - coder , decider , channel and net , etc . ) . This model can be used to discover the role or purpose that is served by a particular organization within the larger system of which it is a part ( e . g . , the phone company plays the role of channel and net in society ) , and it 132 McDAVID can be used to understand the functions within the system of interest . Both the phone company and a toy manufacturer will have all the necessary infor - mation processing subsystems , in one form or an - other , created and maintained by information sys - tems professionals . The viable systems model is another view of orga - nizations , from bee colonies to nations . LJ Every or - ganization ( viable system ) exists within some envi - ronment and has a management function that is accomplished according to some mental model . Op - erating units are responsible for producing the pri - mary results ( products and services ) of the organi - zation . A function is responsible for coordinating the set of mental management models , and another uses a direct command channel to give orders to the op - erating elements . Another important function is re - sponsible for looking outward into the environment as a whole and into the future . There is a function , ideally consisting of the most senior management , that mediates between the current and future needs of the organization . Each of these omnipresent sub - systems gives rise to specific information require - ments within any organization . More recently , the concept of the learning organi - zation has emerged from the tradition of systems thinking . Peter Senge provides powerful underlying systemic processes that can drive or inhibit business success . 14 Gareth Morgan proposes several ways of viewing organizations as living things , including or - ganisms , cultures , political systems , and even brains . " Whereas in traditional theories of organization , at - tention has been devoted to the way communication links are established between different elements of an organization , the brain metaphor helps us appre - ciate that an organization can itself be regarded as a cognitive system , embodying a structure of thought as well as a pattern of action . " 15 Michael Rothschild has proposed a radical biolog - ical , information - centered view of the economy and business . " Orthodox economists still envision the economy as a predictable clockwork mechanism where historical change is irrelevant because all movement is cyclical . . . After DNA was discov - ered . . . [ and ] bolstered by stunning breakthroughs in cellular biology , molecular biology , paleontology and ecology it was possible to completely rethink economics as an evolving ecosystem . . . . Genetic and technologic information , despite manifest dif - ferences in the branching patterns of their evolution - ary histories , are nonetheless members of the same IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 class of natural phenomena . Both are living , evolv - ing information systems . " 10 Kevin Kelly goes even further . He surveys the fields of robotics , artificial life , natural and artificial ecol - ogies , computer games and art , the Internet , fore - casting , and cybernetics , and makes the case for a biology and ecology that includes organisms , orga - nizations , and technology . " The realm of the born - all that is in nature - and the realm of the made - all that is humanly constructed - are becoming one . . . . The challenge is simply stated : Extend the company ' s internal network outward to include all those with whom the company interacts in the mar - ketplace . Spin a grand web to include employees , suppliers , regulators , and customers ; they all become part of your company ' s collectivebeing . . . . The met - aphor of IBM as an organism needs overhauling . IBM is an ecosystem . " 17 This sample of what can be found in systems liter - ature demonstrates that there is value in consider - ing the human activity systems of business as living , thinking systems . That view leads effortlessly to the notion ofthe human mind as a model for a mallea - ble learning mechanism that can enable competitive business adaptation . The mind . The notion of mind as the seat of human cognition has long been a source of debate among scientists and philosophers . Only recently , with ad - vances in detailed understanding of the functions of the brain , are we beginning to articulate a coherent explanation of the mind and its workings . The dis - tilled essence of this work provides direction to our thinking about the role of information systemsin bus - mess . In a survey of the current state of knowledge about the mind , David Taylor raises several interesting is - sues . He notes that the key functions of the human mind are perceiving , imagining , remembering , think - ing , feeling , and controlling action . Contrary to pop - ular belief , a memory is not housed in a single place in the brain , but rather is a distributed function . The most interesting dimension of the mind is its pro - vision of the quality of consciousness . The external sharing of consciousness through communication is the force that drives the newest form of evolution , cultural evolution . " We might argue whether bus - inesses exhibit consciousness , and it might be inter - esting to consider what imagining and feeling are for an organization . At a minimum , however , it is clear that organizations must sense , or perceive , changes IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 in their environment , and they must think about , or make , decisions that affect their course of action , based on external stimuli and corporate memory . If memory is a distributed process in the mind , how is it ( and other mental functions ) accomplished ? Marvin Minsky presents an architecture of very sim - The notion of mind as the seat of human cognition has long been the source of debate . pie mental agents , each of which is far from intel - ligent , but which work together in increasingly com - plex waysto form the society of mind . It is necessary that each agent , from the most primitive sensing mechanisms on up , perform its specialized work cor - rectly . It is equally necessary that the relationships among these agents be maintained and continue to evolve in the learning process . 14 Arnold Trehub proposes a possible architecture of the physical brain to account for basic human cog - nitive capabilities . Starting from the physiology of the neuron , with synaptic junctions among axons and dendrites , a mechanism isproposed that can perform tasks that range from parsing any arbitrary object as part of a scene , learning and recalling names for var - ious entities , generating sequences and related in - ferences , and planning , executing , and learning se - quences of actions that satisfy motivational needs . The components include synaptic matrices , simple input preprocessors , clock rings , size and rotation transformers , a semantic network , and various high - level executive processes , such as registers for plans and actions . This physical architecture sheds light on the kinds of primitive capability that are required by organizational information systems . 20 One of the interesting aspects of the study of cog - nition is how much the attempt to simulate intelli - gence with machines has shed light on the nature of human cognition , and vice versa . Out of that con - vergence toward a unified theory of cognition , Allen Newell proposes the following useful definition that McDAVID 133 can apply equally to businesses , computing devices , or human beings : " intelligence [ is ] . . . a description of adequacy over the joint range of two complex do - mains , the system ' s goals and the system ' s knowl - edge . " 21 This definition highlights two general issues that must be present in any adequate account of or - ganizational information system requirements : or - ganizational goals and organizational knowledge . This excursion through the literature has not been provided simply for entertainmentvalue . It is meant to lay the groundwork for thinking about business information systems in a different way . The key to this new way of thinking is recognizing the impor - tance of concepts and meaning in the life of the or - ganization , and accepting the validity of the study of meaning by those who would undertake to create or modify the systems that embody this meaning . The issue now becomes : how can this new approach to information systems be applied in practice ? How can we take the lessons of systems , living systems , and minds , and use them productively in the service of business ? Part of the answer is found in the vener - able ( on a software time - scale ) approach of object orientation . Object orientation . Object orientation has been around for a long time . It has its origins in the sim - ulation of complex systems and is thus based on the systems thinking paradigm . It holds out the promise of addressing the software productivitygap that gives rise to the insatiable demand for increased informa - tion system functionality that we noted earlier . The term object orientation is actually something of a misnomer . In nontechnical use , the word " object " can refer to almost anything and , in general , tends to conjure up something inert and nondescript , like a stone or a clod . If someone were to ask , " What is that object over there ? " we would likely not expect to see a person , a cow , a Camaro , or a tricycle as the referent of the word " object . " In general use , object is pretty boring . Software objects are much more interesting than clods or stones . They have life . They have the potential to be the cooperating mental agents of Minsky ' s architecture . Perhaps a better term than object - oriented programming might be organic pro - gramming . Object design can benefit from methods of analysis based on a living , organic paradigm such as we have 134 McDAVID just explored . Business language analysis is funda - mentally grounded in this paradigm . A principle of object orientation is that there is a narrow semantic gap between domain understand - ing and object implementations . Analysis of business language directly supports the injection of business meaning into artifacts built using object technology . Business language All object - oriented methodologies call for identify - ing business objects from the problem domain . They generally givea few guidelines , such as finding nouns in the requirements statement ( s ) : " Lists of keynouns , gathered from representative documentation and / or use cases , become potential classes . " 22 " The objects can be found as naturally occurring entities in the application domain . An object becomes typically a noun which exists in the domain . r " " Begin by list - ing candidate object classes found in the written de - scription of the problem . Don ' t be too selective ; write down every class that comes to mind . Classes often correspond to nouns . t " " As a first approximation one can scrutinize the requirements document , if there is one , and consider the nouns , or better yet , the noun phrases . " 25 " As you read , consider the nouns in the written material ; these words willoften give you a clue about potential Objects in the sys - tem . " 26 " Roughly speaking nouns are candidate ob - jects , and verbs are candidate operations . t ' " Some methods go a step further by introducing sev - eral methods of classification and recognizing that abstraction is a process of discovery in analysis and invention in design . Object - oriented practitioners have used a number of techniques for finding and classifying objects , such as classical categorization , behavior analysis , domain analysis , use - case analy - sis , class responsibility collaboration cards , informal English description , and structured analysis . 28 Business language analysis starts from where these other methods leave offbyfocusing attention on how to make the most of the rich language resources that are available within anybusiness environment . These resources , ifstudied carefully , will provide guidance as to exactlywhat information system support needs to be provided . Terms and concepts . Two basic dimensions are needed for a complete model of business meaning . They are the lexicon of terms actually in use by the business and an ontology of concepts that help sort IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 LEXICAL SEMANTICS AND LANGUAGE RELATIONSHIPS There can be many types of semantic relationships among lexical units . These include ( but are by no means limited to ) : Congruence Synonymy - The meaning of two terms is identical . Hyponymy - The meaning of one term fully includes the meaning of another term . Compatibility - The meaning of two terms is overlapping , but not identical . Incompatibility - The meaning of two terms is completely disjoint . Opposites Complimentaries - Two terms divide some conceptual domain into mutually exclusive compartments . Antonyms - Two terms are on opposite ends of a gradable range . Directional opposition - Two terms indicate opposite potential paths of a body in motion . Configurations Proportional series - Sets of terms share common traits . Hierarchies Branching - Hierarchies have possible multiple nodes at each level . Taxonomies - Classifications are based on a single rule of differentiation at each level of the hierarchy . Meronomies - Components are in assemblies . Part / whole - Things are naturally divisible into expected parts . Piece / whole - Things can be divided randomly into pieces . Nonbranching - Hierarchies have only one node at each level . The semantic relationships listed above , along with the basic definition of lexical unit , come from the field of lexical semantics . " This list is not exhaustive , but it does indicate that , within the study of business terminology , there is a much richer set of relationships than simply out the meaning of the terms that are discovered by language analysis . A business lexicon is the set of actual terms used within a particular human activity system , where a term can be a word or a set of words . A term , along with its meaning , constitutes a lexical unit . See the first accompanying sidebar for a summary of some of the semantic relationships that can be used to un - derstand one lexical unit " with respect to others in the same body of language . As opposed to the terms that are found in common use within any environment , including a business IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 homonyms , synonyms , and hierarchical relationships . In particular , it is interesting to note that taxonomy is a very specialized type of relationship , and that a wellÂ·formed taxonomy is much rarer than most analysts would generally imagine . environment , an ontology isa set of abstract concepts that define the areas of common interest within a particular community . In a philosophical sense an ontology is " a theory of what the world is , or con - tains . " 30 The scope of an ontology can be : â¢ Global - Concepts common to all human beings , or all members of a culture . Examples include Ro - get ' s Thesaurus and the Dewey decimal system . â¢ Business - Concepts that are common to the world of commerce and enterprise interaction generally â¢ Domain - specific - Concepts specific to a particu - lar industry , profession , company , or work group McDAVID 135 CATEGORY THEORYAND BUSINESS CONCEPTS PRODUCT - - - - - - - - - - - - - - - - - / ~ - - - - - - - ~ < , RADIAL CATEGORIES - - - - - - - - - - - - - - - - - ~ - . . . . . . , ! ( WHEAT FUTURES ) I CENTRAL CATEGORY / / ~ ~ / / / / / / ~ ( BOXCAR LOAD OF WHEAT I / BOX OF , ~ ~ / WHEATIES " - ~ / c ~ : ~ / - ~ ~ ~ ~ ~ SS FORD TAPACKET ) ESCORT - : - : . > / / ~ ~ - - - ~ ( FUEL INJECTOR ~ ) . . . . . ~ ~ . In the ICM above , the canonical idea of product is extended in various directions . â¢ A typical product is the out - â¢ It is consumable . put of an industrial process . concepts that surround the prototypical idea of product , they would probably include : We could argue whether the central category that represents " product " for us is more prototypically a car or a box of cereal . There is no question , however , that the radial categories have something in common with the basic concept , while departing from it in various significant ways . Is a service a product ? What about a leased 56 KB line ? What about a monthly fixed - rate pricing scheme for a 56 KB communications circuit ? Is documentation a product in its own right ? How about information in the form of a financial derivative ? â¢ It has a producer . â¢ It has a specific target set of consumers . â¢ It is composed of discrete , physical units . â¢ It is sold for money . Categories are basic to human cognition . George Lakoff 31 provides a valuable and entertaining survey of empirical and theoretical studies in the field of category theory . Cross - cultural evidence points to common mechanisms for forming categories and expanding the set of cat - egories to accommodate more complex situations . Base - level categories ( e . g . , the genus level in the biological taxonomy ) are the most intuitive for people to discrimi - nate . It is easier to differentiate a cow from a fish than it is to group a cow and a whale together as mammals . Similarly , different species of whale or different varieties of pig may be difficult for the nonexpert to distinguish . Categories have prototypical members and peripheral members . The peripheral members start to edge off into conceptual areas that eventually require the formation of new categories . Idealized conceptual models ( ICMs ) are patterns of concepts that define a particular category . Through various methods of extension , radial categories are formed . These radial categories share fewer and fewer of the patterns of concepts that the prototypical pattern exhibits . As an example of a business - oriented ICM , consider the concept product . If we were to define the fundamental These concepts may be taken for granted and are es - sentially invisible to the people who harbor them . It is the task of the business language analyst to articulate this largely unspoken ontology and to ensure that the information systems reflect the important concepts of the business users . In the second sidebar there isa dis - cussion of how human beings form mental categories , and how this process extends into business concepts . 136 McDAVID IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 Figure 3 A fragment of the overall semantic network of generic business concepts ~ UNCTIONAL ) AREA , , , , , , ~ , " " _ , , , . ; r IS DEANEDBY . . Â·Â·Â·1 , . . . . . - - ISPARTYTO ~ ~ REFINES E > - J E 0 - - , REFINES ~ I ~ : ~ ~ REFINES - - - - + I The following set of concepts arises from consider - ation of the kinds of things with which any business needs to concern itself : â¢ Locations - physical geography and logical points such as accounts and network addresses â¢ Time periods - the standard concept of time â¢ People - including both individuals and organiza - tions â¢ Resources - material , energy , skills , money , and information â¢ Processes - events , end - to - end processes , func - tions , and discrete actions â¢ Results - the products and services that are the reason to be in business This set isjust one of many possible waysof dividing the conceptual space at a high level . Another pub - lished scheme divides the business world into re - sources , processes , and organizations . 32 Stillanother scheme has the following top - level set of divisions : party , contract or agreement , product , resource , event , location , and account . 33 IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 McDAVID 137 Figure 4 A generic concept network extended by a more specific network GENERIC BUSINESS CONCEPTS INDUSTRYÂ·SPECIFIC EXTENSIONS ~ ~ - 4 = = = f = = = L - OBJECT MODEL ~ , ~ ' . ~ , ( i ~ ElR MODEL - ~ \ 1 = ' = = = 1t ' = ~ ~ ~ 4 ~ ERSE - ENGINEERED MODEL ONTOLOGICAL MODELS TERMINOLOGY MOOELS INFORMATION SYSTEMS MODELS There is no absolute best way to make this kind of classification . Concerns that appear at the top of one list are bound to appear elsewhere on someone else ' s list . For example , in our scheme , one type of resource is an information resource , and a type of informa - tion resource is a relationship , of which there are many that a business has to manage . One particular kind of relationship is a role that brings together in - dividuals or organizations on one side and some func - tion or set of functions on the other . Our scheme thus puts the concept of role three levels down from the top , whereas in another scheme , role might be at the very top of the conceptual taxonomy because it is such a powerful concept . Another type of com - plex relationship is a situation , which is an identi - fiable state of affairs that demands resolution . An academic discipline actually exists called situation theory , which forms the basis of its own logic sys - tern . " Clearly a case could be made that situation should be a first - order concept . The point is that in - formation is immune to the law of gravity . The top is somewhat arbitrary . 138 McDAVID Businessconcepts do not stand alone . Instead , theylink together innaturallyoccurring patterns . These patterns appear in organizations of all kinds , across industry boundaries . Concept patterns form a semantic net - work ' " of interrelationships . Here are examples of typ - icalconcept relationships : Resources are transformed by processes that are triggered by events and invoke functions , discrete actions , and flows of material and information . People and organizations play various roles that are responsible for various functions . Pro - cesses create results , which in turn may become re - sources . Figure 3 is an example of one fragment of the overall semantic network of generic business concepts . The paper does not present an exhaustive catalog of business concepts and their interrelationships , partly because of space limitations , and partly because , as noted above , there is more than one way to divide the conceptual space . More importantly , it is impossible to be exhaustive . As soon as we move into a more spe - cific industry or enterprise environment , it becomes necessary to extend the generic concepts to account IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 Table 1 Partial list of terms from search A work product from the gathering activity is an an - notated bibliography of source documentation , along with notes and lists of participants for structured in - terviews and facilitated sessions . sion , raising issues , and moving the group toward consensus . However , they make time demands on people who are already overworked , and they are limited by the memory and biases of a small group of individuals constrained by a time - box . Extract business terms . The next step after obtaining the sources of language is to identify the business terms theycontain . Recognition of a businessterm be - comesa matter ofintuitive feelingforbusinesslanguage analysts . The search through the filesand documents produces a list of terms . A fragment of such a list is shown in Table 1 . Automatic Mode of Settlement paymentmakeapaymentdecideproof proof of identity identity file Home Office surviverightto be paid paid prior class right to be paid beneficiary requestformneedstakeeffect designate change The example in Figure 5 is a single document frag - ment from an insurance policy , scanned and trans - formed via optical character recognition software from a paper copy of an insurance policy form . It is a section of the policy informing the policyholder of certain conditions of the contract related to desig - nating and changing beneficiaries . " Found " sources , in contrast , are documents and other materials produced by the business for its own use . They range from public pronouncements to pro - prietary items , and from formal to adhoc documents . Examples include : requirements documents , busi - ness plans , product specifications , catalogs , training materials , regulatory filings , methods and proce - dures , process models , forms , charts of accounts , bus - iness plans , organization charts , business engineer - ing and total quality models , contracts , and mission or vision statements . Often existing business docu - ments prove to be the best sources of raw material for models because , in many cases , the material is not raw at all ; it is already quite refined . Some ex - isting information sources are well on their way to being models , worked over by many business minds in an attempt to reach consensus . for the information that ismost important in that con - text . The top levelof Figure 4 showsa generic concept network extended by a more specific network . The main purpose for articulating the patterns of a business ontology isto provide a set of templates for organizing the specific terms that are encountered in the jargon of work groups and professional spe - cialties . Through this linkage into templates , or pat - terns of conceptual relationships , the business terms themselves begin to form patterns of meaning and relationships that are unique to a specific business situation and community of communicators within a human activity system . The set ofterminologypatterns formsa modelof mean - ingthat canbe linkedtovarioustechnicalartifactsfrom the solutiondomain ofinformation systems . Thismodel providestraceabilityfrom implementation back to bus - inessmeaning , and from unique domain languageback to powerful generic templates . This complete set of linkages is shown in Figure 4 . Because business language isessentially a bottom - up analysis of an existing corpus of specificbusiness ter - minology , the work is very detail - oriented . It starts with a large mass of language material that is pro - vided or found in the environment . By determining definitions , applying existing patterns , and filling in newpatterns of abstraction , we add detail to a higher - level framework to clarify and reduce the ambiguity of domain - specific language . Activities and work products . Business language analysis produces several modeling components and formal documentation to make these modeling com - ponents accessible . The work products range from documents and graphic pattern depictions to com - plex multidimensional semantic networks in appro - priate repository technology . The following subsections describe the activities of business language analysis and their related work products . A small sample of language is employed from a hypothetical insurance company to illustrate some of the steps and results of a typical business language analysis . Gather language sources . We can derive the patterns of language from several sources of business lan - guage . Some can be proactively developed sources : interviews , facilitated sessions , and questionnaires . The advantage of these techniques is that they in - volve people from the business in fostering discus - IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 McDAVID 139 Figure 5 Single document fragment from insurance policy You may designate or change a beneficiary . Your request must be in writing and in a form that meets our needs . It will take effect only when we file it at our Home Office ; this will be after you send the contract to us to be endorsed , if we ask you to do so . Then any previous beneficiary ' s interest will end as ofthe date ofthe request . It will end then even if the Insured is not living when we file the request . Any beneficiary ' s interest is subject to the rights ofany assignee ofwhom we know . When a beneficiary is designated , any relationship shown is to the Insured , unless otherwise stated . To show priority , we may use numbered classes , so that the class with first priority is called class 1 , the class with next priority is called class 2 , and so on . When we use numbered classes , these statements apply to beneficiaries unless the form states otherwise : 1 . One who survives the Insured will have the right to be paid only if no one in a prior class survives the Insured . 2 . One who has the right to be paid will be the only one paid if no one else in the same class survives the Insured . 3 . Two or more in the same class who have the right to be paid will be paid in equal shares . 4 . Ifnone survives the Insured , we will pay in one sum to the Insured ' s estate . Before we make a payment , we have the right to decide what proofwe need ofthe identity , age or any other fact about any persons designated as beneficiaries . Ifbeneficiaries are not designated by name and we make payment ( s ) based on that proof , we will not have to make the payment ( s ) again . As we extract terms from the original source doc - ument , we can reduce the file by replacing found terms with surrogates , such as " * * " . What we end up with looks like the skeletal remains shown in Fig - ure 6 . At this stage it is still possible to identify terms that may have been previously missed . In the stripped down text of Figure 6 , we can identify at least two interesting terms that had not yet found their way into our list : " apply to " and " terms . " Build glossary . After alphabetizing and removing du - plicate terms from the list , we can create a glossary with definitions . While building the glossary , it ispar - ticularly important to involve business experts - 140 McDAVID those who actually know how terms are used and can identify and differentiate among different uses of the same word . Often glossaries that provide the raw ma - terial for the language analysis already exist in source documents . The following is a sample of glossary en - tries : â¢ Beneficiary - A person or other entity designated to receive benefits from an insurance policy upon the death of the insured â¢ Proceeds - The total amount paid out of an insur - ance policy upon termination of the agreement â¢ Assignee - A person or other party to whom ben - efits from an insurance policy are contractually as - signed IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 Figure 6 Skeletal form of insurance policy fragment - - - - - - - - - * * may * * or * * a * * . * * r * * must be * * and in a * * that meets our * * . It will * * only when * * it at our * * ; this will be after * * When a * * is * * , any * * is to the * * , unless * * * * . To show * * , * * may use * * es , so that the * * with * * is called * * , the * * with * * is called * * , and so on . When * * use * * es , these * * s apply to * * unless the * * s * * : Before * * * * , * * have the right to * * what * * * * need of the * * , * * or any other fact about any * * * * as * * . If * * are not â¢ Interest - The type and quantity of benefits from a policy that are allocated to a particular party , as in " beneficiary ' s interest " Classify terms . Classification of terms begins to de - termine the basic shape of the information require - ments that will need to be met by information sys - tems . Areas of key importance will exhibit long lists of terms . This is a business - oriented demonstration of the Whorfian principle that the language shapes the thinking of its users . The concepts that are pro - vided by a generic business ontology form the basis of this classification , but they will most likely need to be extended byconcepts that are relevant and pos - sibly unique to the particular business domain . An analyst can take a first cut at classifying terms , but business experts need to validate this work . Table 2 lists a set of terms extracted from the sample doc - ument previously described , classified by a very ge - neric business ontology . Link terms . Linkage among business terms sets up the meaning structures that help to build business object models ( class hierarchies , object composition , variables , collaborations among objects ) . A set of re - lationships can be articulated for business terms , in - cluding linkage of terms to business concepts , link - IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 age of terms to each other via semantic relationships , and linkage of terms to sources in which they were found . The next three figures provide an indication of how semantic linkage evolves as we think about a set of terms from a business source . They suggest the types of questions to be asked about each term that will allow us to understand the patterns of meaning in the business . Figure 7 isa generic conceptual pattern . It saysthere is such a thing as an external role that we may ex - pect to find . Any external role is likely to be either a source or a recipient , may be formal or informal , isplayed byan individual or organization , isinvolved in situations , and generates events . In Figure 8 , we have filled the slot in the center of the pattern with one of the terms that we found in our analysis of the document fragment . This directs attention to a set of questions , based on the fact that we have classified " beneficiary " as an " external role . " These questions cause us to go back to our term list to see whether we can find terms to fill the refine - ment , subtype , individual or organization , situation , McDAVID 141 Table 2 List of terms from sample document ROLESassigneebeneficiaryclass1beneficiaryclass 2 beneficiary previous beneficiary estateInsured ' s estate Insured ORGANIZATIONSHomeOffice INDIVIDUALSpersons PHYSICAL RESOURCES form statement MONETARY RESOURCES proceedspaymentonesumequalshares TIME PERIODS date of the request EVENTSdeathInsured ' s death request AGREEMENTScontracttermsinterestbeneficiary ' sinterest rightright to be paid subject to priorityfirstprioritynextpriority INFORMATIONRESOURCESclassnumberedclassclass 1 class 2 prior class same class relationship applyto identitynameagefactsproofproof of identity proof of age proof of facts requestneedsformstatement PROCESSESmakeapaymentAutomaticMode of Settlement change beneficiary designate beneficiary ACTIONSsendshowstateaskdecideendorsefileknowowepaytakeeffect end STATESbasedon proof designatedlivingnotlivingsurvivepaidshownstatedinwritingmeetsourneeds and event slots that are indicated by the question marks in the figure . Figure 9 shows the slots in the template filled in . Among the terms , there are clear - cut subtypes of beneficiaries called " class 1 beneficiary " and " class 2 beneficiary , " and a refinement , " previous . " The beneficiary role can be played by a person or by an estate . A term " request " may fill the event slot in this pattern , but we are going to go out on a limb and suggest that maybe it is a " claim request . " We have also invented a term " death claim " to repre - sent a situation that a beneficiary would be involved in . These suggestions made by the analyst will need to be validated by the business user , and may lead us to additional terminology that we have not dis - covered in the document . Ideally , every term would be diagrammed to create semantic patterns like the one in Figure 9 . Realis - 142 McDAVID tically it is most important to create these diagrams for certain key terms that provide high leverage for understanding the domain of interest . Load semantic database . It is easy to see from the small sample outlined above that analyzing business language leads to a complex , multidimensional net - work of terms , concepts , and meaning . Every way in which we try to portray this network on two - dimen - sional paper seems somehow inadequate . In the orig - inal text , terms can be easily overlooked . A simple list of terms isjust a start . A glossary ismore helpful but suffers from the circularity of definitions and the restriction of considering only one term at a time . Graphic linkages in accordance with predefined pat - terns help give more of a sense of the overall lan - guage and appeal to the visually oriented . They , however , are laborious to create and , in a large vo - cabulary , become overwhelming bytheir sheer num - bers . IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 Figure 7 A generic conceptual pattern ~ ) - - - - - Â· " ' Â· " ' iÂ·l ~ ~ : " , l I J ' < c : > REFINES . . . - - - - Â·Â· " " " " ' l1 Jr " i - ~ _ â¢â¢ ISPLAYED BY I / JJ ~ " " - - - - - - M ~ E ~ ~ ~ EXTERNAL ROLE ) E : ) I - - - - " l lrL $ ~ ~ ~ TYPE OF - - - - l I t " " , , , _ . . o _ , GENERATES ~ - - ~ ~ , ( : : : - ; ' - ~ ~ . . " . , . . . . - . . . . . . . _ . . , . ; ' Figure 8 Center of pattern filled from document analysis IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 McDAVID 143 Figure 9 An ideal semantic pattern C5 - - - - REFINES - . . . , . . - - . , , . . - - - IS PLAYEDBY - - - - H 1 . - _ _ ISINVOLvED IN - - e ISTYPE OF - - - . . . . . . / ' CLASS 2 ( ~ ENEFICIARY - - - - GENERATESÂ· - - - @ A highlylinked database can overcome most of these paper - oriented limitations byrepresenting the terms , definitions , sources , linkage to concepts , and link - age to one another . Many products or technologies can support this requirement , including object - ori - ented databases , hypertext , or proprietaryflat - fileac - cess methods . Also , a class of database management system specializes in capturing and maintaining mul - tidimensional semantic networks . 30 , 37 Once in the da - tabase format , a multidimensional browsing tool mir - rors the multidimensional data structure , so that all links from a specific term can be followed and dis - played at the same time . A repository of business terms , business concepts , definitions , sources , interterm linkages , concept - to - term linkages , and linkages between terms and de - sign artifacts ( object classes , database tables , etc . ) can all be maintained dynamically as the models evolve . It is important to establish a data adminis - tration function to make sure that updates , backups , and data consistency matters are attended to , Overalldocumentationofresults . Throughout the pro - cess of creation and maintenance of the business lan - guage model , there are periodic points where it is useful to report results . A number of documents can serve this reporting requirement . Issues lists are working documents for the team that is performing the business language analysis . A team member should be assigned to each issue so that there is re - sponsibility for its resolution . A findings document isa simple listing of conclusions and implications that have emerged during the course of the analysis . De - scriptive papers embed parts of the model in explan - atory text . Roles , skills , responsibilities . Broadly speaking , the people who do business language analysis are bus - iness modelers . Data modeling isa good background , as are other disciplines that involve classification , such as biology and library science . An academic background in linguistics , semantics , or systems the - ory would be ideal as preparation . Experience in building information systems , particularly object - ori - ented systems , provides the background to appreciate the benefits offered by business language analysis . A modeler may work alone with documents and other language sources from the domain to produce a model . It is much more effective , however , if the analysis is done with a small team that searches sources for terms , writes definitions , classifies terms , writes documentation , and maintains the repository . It is essential that the team or individual modeler work with domain experts from the business to val - idate the definitions , relationships , and conclusions 144 McDAVID IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 that are developed in the course of the business lan - guage analysis . It is not the role of business language analysts to dic - tate language , but rather to understand all the ways in which terms are being used and their implications for system requirements . Business language analysis may be tied to a partic - ular project in a constrained time period . However , it is more valuable if it becomes institutionalized as a permanent business function . At a certain point , the number of new terms being discovered will di - minish because the effort is achieving completeness of coverage . This point provides the opportunity to evaluate the completeness and adequacy of the en - terprise - wide information system . The language of the business willcontinue to evolve . With a highly tuned sensing mechanism , the infor - mation systems organization can stay abreast of the evolution of the business , as reflected in the evolu - tion of its language . Information systems use of business language analysis The models of terminology produced bybusiness lan - guage analysis have a central role in many key ac - tivities throughout the information systems devel - opment environment . This role starts with an understanding of the nature of the information sys - tems development process itself . Popular life - cycle descriptions ( waterfall , spiral , etc . ) give the impres - sion that building enterprise - class information sys - tems is a downhill effort , somehow aided by gravity or some other natural force . If business and busi - ness environments were static , this might be the case . In fact , just the opposite is true : it is an uphill strug - gle against the forces of entropy . A method that is grounded in the specific informa - tion access and communication needs of the human activity system and that is also informed by power - ful concepts from general systems theory , linguistics , and cognitivescience provides some hope of winning this struggle . This paper recognizes information sys - tems as serving systems for livingorganizations . This point ofviewchallenges the application - oriented and project - oriented approach to information systems and affects many information systems functions . Planning . We can start with the planning function . The living systems viewpoint lays the groundwork IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 for a new perspective on planning the evolution of the nervous system of the organization . The plan - ning function willunderstand that it is not enough to providedisjointinventorymanagement , order process - ing , billing , and accounting systems , withdecisionsup - port systems coming along as an afterthought . All of these must be present and coordinated . There must be visibility into information that isgenerated beyond the boundary of the enterprise itself . The planning process should search for areas of isolated or miss - ing information capability and budget for work to address them . It can use existing language models to determine the completeness of coverage and may commission additional language modeling to fill in the gaps . Architecture . Architecture now also takes on a dif - ferent meaning . If the goal is to support the overall communication capability of the business as a living system , then architecture begins to look like putting an infrastructure in place that willsupport the needs of the organization for normative and long - term decision - making , not just the standard operational and control functions . By means of understanding the interactions among individuals and organizations performing roles within the business , application ar - chitects can gain a better , more effective understand - ing of the business functions to be supported . An architecture based on cooperating agents willchange the whole notion of business applications . A detailed understanding of the language and concepts of the enterprise givesstrong guidance to the types of soft - ware agents that need to be put in place to realize its adaptive goals . Project management . Business language analysis must be managed as carefully as any other analysis effort , through continuing dialog between language analysts and project management . It is often attrac - tive to follow threads of language into areas that can expand the scope of projects in an uncontrolled man - ner . At the same time , language analysis can lead to an expansion of scope that is appropriate and may have been overlooked without this analysis . A lan - guage model provides a means to reach agreement , in terms familiar to the user , on which functions , roles , and resources will be in or out of the scope of a particular project . Business language analysis provides strong support for the process of team building . The focus on bus - iness language prepares for manyother development activitiesbyunfreezing the " techno - speak " that many team members may use . The process of analyzing McDAVID 145 business language helps to mediate among many dif - ferent communities : executive - to - line management , various functional organizations , supervisors - to - us - ers , IS personnel - to - non - IS personnel , and even com - pany - to - company , in the case of cooperative or con - sortium efforts . It also lays a foundation for training in new procedures and system support . Design . Business language analysis does not replace system design . Business language analysis is a dis - covery activity that helps to understand information needs within the human activity system . Design is a creative activity that uses language models as input . " The simplisticapproach isto saythat object - oriented development isa processrequiringno transformations , beginning with the construction of an object model and progressing seamlessly into object - oriented code . . . . While superficiallyappealing , this approach is seriously flawed . It should be clear to anyone that models of the world are completely different from models of software . The world does not consist of objects sending each other messages , and we would be seriously mesmerised by object jargon to believe that it does . " 3K A domain object model is a design of the business objects within an implementation . Business objects are generally distinguished from purely technical ob - jects such as graphical user interface ( GUI ) frame - works and data broker middleware . Several tech - niques guide designers in making the transition from modeled language to an object perspective : â¢ The generic concept framework provides a first - cut set of classes , subclasses , and collaborations that can be assumed to exist in some form in al - most any domain . â¢ Terms that map to the same high - level ontolog - icalconcept should be considered for possible sub - classing or parameterization of a generic class . â¢ Terms that are made up of a basic term and mod - ifiers can be considered for hierarchy or variable constructs , depending on whether the modifiers in - dicate strong typing or state changes . â¢ Predominance of terms in one concept or another reveals or confirms the nature of the overall sys - tem to be built . Predominance of resource - oriented terms reveals an inventory type of system , whereas predominance of role and process terms indicates a work - flow orientation . The language model can also contribute to database design . Database design issues are very similar to the sets of concerns that lead to an effective domain ob - 146 McDAVID ject model . In particular , if an object - oriented da - tabase management system is to be used , these sets of concerns are highlyconvergent . If relational tech - nology isto be used , the techniques noted above will need to be mapped onto an entity , attribute , and for - eign key paradigm . Business language analysis has a special relationship with use case modeling . Use cases have long been associated with the idea of a concept catalog or glos - sary . This listing of terms and concepts from the bus - iness domain has been an important communication mechanism for project teams and the user commu - nity . Business language analysis elaborates on the notion of a concept catalog , turning it into a model in its own right . In return , the process of building use cases of how the system will be used in the new environment becomes a rich source of terms and con - cepts that may not have been previously discovered in documents . Part of the reason for this is that these new terms may reflect a future scenario that has not otherwise been well documented by the business . Clearly , other types of models beyond language mod - els are required for effective systems design . For ex - ample , event and trafficmetrics feed the physical de - sign of systems . Development . Given that information systemsdevel - opment is an ongoing effort to create a systemic ca - pability , it is accomplished in stages , but alwayswith an eye on the overarching needs of the organization as a whole . Language analysis benefits each incre - ment that is delivered , based on the ability to reuse term and concept patterns as powerful abstractions . Reuse results in stronger , previouslytested code , and a shorter development life cycle . The benefit to the development process as a whole is traceability - es - tablishment and maintenance of linkage between project artifacts and their business sources of jus - tification . A business language model provides key support for the development of user interfaces . Terms from the natural business language can be brought to the sur - face of the interface , where they provide a feeling of familiarity for system users . Underlying code can be wrapped in alternative terminology for different communities of users and can evolve as the language of the business evolves . The information system to support an enterprise is never complete . The application perspective regards this phenomenon as a problem that gives rise to a IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 separate maintenance function . In contrast , the liv - ing systems viewpoint recognizes this phenomenon as natural evolution . Developers in the next incre - mental project have an established nucleus of de - Language models can reveal the variable importance of the same concept from one domain to another . fined and understood business terminology and meaning from which to expand seamlessly into new areas of the business . Testing . A number of issues involvetesting software , including functionality , usability , accuracy , consis - tency , and efficiency . A language model provides guidance to testing experts in the construction of meaningful test cases that assure the provision of needed functionality . Documentation . Writers of both users ' manuals and on - line help can benefit from organized language that represents the roles , processes , events , and re - sources of interest to the users of information sys - tems . Context - sensitive help can be driven directly from the terminology that is modeled and under - stood via business language analysis . The key advan - tage is that documentation and help is in the user ' s language . Conclusions to date Business language analysis has been applied by the author to a number of situations in a variety of in - dustries and organizations . This experience has led to some interesting lessons and conclusions . A common experience isthat in any business domain we are likely to encounter a predominance of cer - tain categories of information . These dominant cat - egories lead to the addition of more specificconcepts to the ontology in order to differentiate sets of terms that would otherwise form a long list under a single concept . One such concept expansion was the result of an analysis of the budget office at a state univer - sity . The budget officedealt almost exclusivelywith IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 information invarious forms . The officecollected in - formation from other departments , performed var - ious types of analysis , and created a variety of re - ports and information products for use by departments throughout the university . This situa - tion required a major expansion of the concepts re - lated to information resources . Information resource concepts were also added dur - ing an analysis of language within the project man - agement function in a consortium . The emphasis on coordinating work among several participating com - panies and a large number of suppliers , and man - aging projects that spanned multiple years , presented a severe information management challenge . Based on the two examples presented above , the con - cept of information resources was expanded to in - clude the followingconcepts : identifiers , motivations ( including values , opinions , purposes , conditions ) , proposals , decisions , rules ( prescriptive , proscriptive , allowances , entitlements ) , descriptions , templates ( including specifications , forms , models , checklists ) , characteristics , measurements ( quantitative , quali - tative , comparative ) , category sets , commitments , goals , history , relationships ( including roles , situa - tions , agreements [ contractual and informal ] ) , fore - casts , and plans . This set of concepts still may not be totally exhaustive . However , once new concepts have been established within one domain , they be - come available in any subsequent domain where they might apply . Another expansion and validation of the generic bus - iness concept structure came from an analysis of a customer relationship management project at a nat - ural gas utility company . It was not surprising that this domain forced an expansion of the concepts re - lated to energy resources . What was surprising was the need to greatly expand the granularity of con - cepts related to time periods . Over 1200terms were found in the analysis , and close to 20 percent had to do with discrete points and ranges of time . Time itself wasalready included in the generic set , but this experience validated its value as a significant onto - logical concept . Sometimes there are important business concepts that exist in a domain but do not have explicit ter - minology that maps cleanly to them . An example of this insight is found in the insurance industry . The analysis of insurance has led to the conclusion that the essence of the business isthe management of sit - uations . Actuarial analysis is largely about recogniz - McDAVID 147 ing distinct situation types in which businesses and individuals can find themselves and determining the likelihood of various outcomes resulting from types of situations . Even though insurance people recog - nize this truism , and find it is a useful way to think about their business , there isa surprising lack of spe - cific terminology that relates to client situations . Language models can reveal the variable importance of the same concept from one domain to another . Models from two different companies indicate the importance of contractual agreements in the insur - ance business . In fact , many insurance terms are clas - sified under both the concept of agreement and the concept of product , because a policy , which is a con - tract , is actually the basic product of the insurance industry . Without contracts , there isno business . This situation is contrasted with a model done for a cel - lular telephone company , where there are very few terms that refer to contracts . In this case , contracts are rather casual pieces of paper that are signed upon commencement of service , and as many as 40 per - cent never make it from the retail distributor back to the appropriate corporate file . Service , billing , and collections proceed unimpeded , so that contracts are truly not a major issue . These diverging models pro - vide a strong indication of the types of objects needed by the respective industries . A different kind of lesson from experience with bus - iness language analysisis the positive reaction that it evokes in business people . Significantinsights always seem to arise , and great appreciation is expressed for this fresh viewof language . There is gratitude that in - formation systems professionals are willing to spend time to appreciate the unique meaning that infusesthe language of the business . There are also surprises for the domain experts at times . A model prepared for an internal IBM group highlightedterminologyfrom a mis - sionstatement that everyonehad agreed to change but that wasstillpresent insource documents . Many in the group were shocked when the model highlighted lan - guage that had become invisible to the participants in the business . Information systemsprofessionals who have been ex - posed to this approach are almost unanimous in their positive reaction . The most common reaction is " If only we had followed this approach on my last proj - ect ! It would have saved untold misunderstanding and rework . " They recognize that a detailed under - standing of language avoids a number of common problems with information system development . These problems include the cost of reworking inad - 148 McDAVID equate requirements , the loss of credibility when de - livered systems do not match the needs of the bus - iness , the risk that projects willbe so focused on the data processing " plumbing " that human communi - cation and information needs willnot be served , and the risk that analysts will drift off into a haze of ab - stractions that are too loosely coupled with the needs of the business . The ultimate risk is that the form and operations of the business will be forced to con - form to the resulting information system , instead of the other way around . Outlook Several areas need further refinement and expan - sion of the usefulness of business language analysis . We have talked a lot about generic and industry - spe - cificconcept patterns . These concept patterns form a metalanguage of business concerns , which are proven to help understand specific bodies of lan - guage . Coupled with robust repository technology , this ever - expanding semantic network of concepts and terminology can form a rich index for an asset base of software components . This index helps to ad - dress the issue of visibility of design and code arti - facts from earlier projects where it is often difficult to determine what an object does , and where local terminology is not embodied in objects whose gen - esis is elsewhere . The subject of patterns is currently a very intense topic among object - oriented developers . Design pat - terns have been the subject of Internet discussions and a growing published literature . These patterns were originallylimited to technical design issues , such as structure , behavior , and creation of software ob - jects . " Such patterns are in contrast to the types of patterns that emerge from business language anal - ysis , which are patterns of meaning . Recently there is an indication of possible areas of cross - pollination with work such as Peter Coad ' s business object pat - terns " and Ward Cunningham ' s CHECKS pattern lan - guage that validates domain - specific input . 41 Another growing area of software development is the field of groupware and workflow software . This field was pioneered by individuals for whom com - puters and cognition were quite compatible . F The field has expanded and become increasinglycommer - cial , although it still has a long way to go to realize the full - blown " mirror worlds " potential . 43 As soft - ware comes to draw increasingly on repositories of structured business language , sophisticated group - IBM SYSTEMS JOURNAL , VOL 35 , NO 2 , 1996 ware applications willprovide more transparency and appeal to users across the enterprise . The software crisis isstill with us . Demand is increas - ing , and backlogs are seemingly hopeless . Object technology provides part of the promised solution . As Thomas Love envisioned , ' These new environ - ments for assembling powerful components will still require lots of creative programmers to build new and better components and make them available to the market . Programmers willbecome software com - ponent providers ; users will construct the final ap - plications and systems based upon the available rep - ertoire of components . T " If , in addition , these same sophisticated users have access to rich repositories of structured business meaning , software and lan - guage can begin to come together in intuitive and seamless support of business evolution . Acknowledgments I would like to acknowledge the invaluable support and contributions made by the following colleagues , without whom this paper would be much less than it is : Rock Angier , Carl Ballard , Nancy Boyd - Schim - melman , Ken Briskey , Dave Britton , Jane Conkey , Robert Coyne , Robert Griffith , Robert Gross , Ralph Hodgson , Steve Johnson , Chris King , Mark Lang - man , Jim Nerney , Steve Marcus , Rich Newbold , Jack Ring , Zach Shoher , Mike Straka , David Taylor , Anne Wheeler , Lynn Wheeler , and Kathy Yglesias . Cited references 1 . R . Stamper , " Social Norms in Requirements Analysis - An Outline of MEASUR , " in Requirements Engineering : Social and Technical Issues , Editor , M , Jirotka , Academic Press , Lon - don ( 1994 ) , p . 107 . 2 . D . W . McDavid , " Business and Systems Planning : Building a New Alliance , " Database Programming and Design 5 , No . 10 , 29 - 39 ( October 1992 ) , p . 30 . 3 . J . A . Zachman , " A Framework for Information Systems Ar - chitecture , " IBM Systems Journal 26 , No . 3 , 276 - 292 ( 1987 ) . 4 . J . Martin , StrategicInformation Planning Methodologies , Pren - tice - Hall , Inc . , Englewood Cliffs , NJ ( 1989 ) . 5 . J . F . Sowa and J . A . Zachman , " Extending and Formalizing the Frameworkfor Information Systems Architecture , " IBM Systems Journal 31 , No . 3 , 590 - 615 ( 1992 ) . 6 . S . H . Haeckel and R . L . Nolan , " Managing by Wire , " Har - vard Business Review 71 , No . 5 . 122 - 132 ( September - Octo - ber 1993 ) , p . 122 . 7 . T . H . Davenport , " Saving IT ' s Soul : Human - Centered Infor - mation Management , " Harvard Business Review 72 , No . 2 , 119 - 131 ( March - April 1994 ) , p . 119 . 8 . P . Checkland , Systems Thinking , Systems Practice , John Wiley & Sons , Inc . , New York ( 1981 ) , p . 13 . 9 . Ibid . , p . 209 . IBM SYSTEMS JOURNAL , VOL 35 . NO 2 . 1996 10 . E . Rechtin , Systems Architecting : Creating andBuilding Com - plex Systems , Prentice - Hall , Inc . . Englewood Cliffs , NJ ( 1991 ) . 11 . P . Checkland , op . cit . , p . 149 . 12 . J . G . Miller , LivingSystems , McGraw - Hill , New York ( 1978 ) . 13 . B . Clemson , Cybernetics , a New Management Tool , Abacus Press . Turnbridge Wells , Kent . England ( 1984 ) . 14 . P . Senge , The Fifth Discipline : The An and Practice of the Learning Organization , Doubleday , New York ( 1990 ) . 15 . G . Morgan . Images ofOrganization , Sage Publications , New - bury Park , CA ( 1986 ) , p . 356 . 16 . M . Rothschild , Bionomics : EconomyasEcosystem , Holt , Rine - hart . and Winston , Inc . , New York ( 1990 ) , pp . 335 , 350 . 17 . K . Kelly . Out ofControl : The Rise ofNco - Biological Civiliza - tion , Addison - Wesley Publishing Co . , Reading , MA ( 1994 ) , pp . 1 . 188 , 194 . 18 . D . Taylor , Mind , Simon & Schuster , New York ( 1982 ) . 19 . M . Minsky , The Society ofMind , Simon & Schuster , New York ( 1986 ) . 20 . A . Trehub , The Cognitive Brain , MIT Press , Cambridge , MA ( 1991 ) . 21 . A . Newell , Unified Theories ofCognition , Harvard University Press , Cambridge , MA ( 1990 ) , p . 92 . 22 . M . Lorenz , Object - Oriented Software Development : A Practical Guide , Prentice - Hall , Inc . , Englewood Cliffs . NJ ( 1993 ) , p . 41 . 23 . 1 . Jacobson et al . , Object - Oriented Software Engineering : A Use Case Driven Approach , ACM Press . New York ( 1992 ) . 24 . J . Rumbaugh et aI . , Object - Oriented Modeling and Design , Prentice - Hall , Inc . , Englewood Cliffs . NJ ( 1991 ) , p . 153 . 25 . D . De Champeaux . D . Lea , and P . Faure , Object - Oriented . s : vs - tem Development , Addison - Wesley Publishing Co . , Reading , MA ( 1993 ) , p . 34 . 26 . P . Coad and E . Yourdon , Object - OrientedAnalysis , Yourdon Press , Englewood Cliffs , NJ ( 1990 ) , p . 61 . 27 . 1 . Graham , Migrating to Object Technology , Addison - Wesley Publishing Co . , Wokingham , England ( 1995 ) , p . 301 . 28 . G . Booch . Object - OrientedAnalysis and Design with Applica - tions . 2nd ed . , Benjamin / Cummings PublishingCo . . Redwood City , CA ( 1994 ) . p . 150 . 29 . D . A . Cruse , Lexical Semantics , Cambridge University Press , New York ( 1986 ) . p . 112 . 30 . P . Checkland , op . cit . , p . 115 . 31 . G . Lakoff , Women , Fire , andDangerous Things , University of Chicago Press , Chicago , IL ( 1987 ) . 32 . D . Taylor , Business Engineering with Object Technology , Wiley . New York ( 1995 ) . 33 . G . Simsion , Data Modeling Essentials : Analysis , Design , and Innovation . Van Nostrand Reinhold , New York ( 1994 ) . 34 . K . Devlin , Logic and Information , Cambridge UniversityPress , New York ( 1991 ) . 35 . A . Barr and E . A . Feigenbaum , The Handbook ofArtificial Intelligence , Vol . 1 , William Kaufmann , Los Altos . CA ( 1981 ) , pp . 180 - 189 . 36 . R . Griffith , " Conventionsfor Semantic - Network Databases , " SecondMeeting in Science and Technology in Informatics . Rio de Janeiro , Brazil ( November 1989 ) . 37 . R . Griffith , " Semantic - Network Databasesfor VLSI Design , " British National Conference on Databases , Number 7 . Edin - burgh , Scotland ( July 1989 ) . 38 . S . Cook and J . Daniels . Designing Object Systems : Object - Ori - ented Modeling with Syntropy , Prentice - Hall . Inc . , Englewood Cliffs , NJ ( 1994 ) , p . 6 . 39 . E . Gamma . R . Helm , R . Johnson , and J . Vlissides , Design Patterns : Elements ofReusable Object - Oriented Software , Ad - dison - Wesley Publishing Co . , Reading , MA ( 1995 ) . McDAVID 149 40 . P . Coad et aI . , Object Models : Strategies , Patterns , and Appli - cations . Prentice Hall , Englewood Cliffs , NJ ( 1995 ) . 41 . J . O . Coplien and D . C . Schmidt . Editors , Pattern Languages ofProgram Design , Addison - Wesley Publishing Co . , Read - ing , MA ( 1995 ) , pp . 145 - 155 . 42 . T . Winograd and F . Flores , UnderstandingComputers and Cog - nition , Addison - WesleyPublishing Co . , Reading , MA ( 1986 ) . 43 . D . Gelertner , Mirror Worlds , Oxford University Press . New York ( 1991 ) . 44 . T . Love , Object Lessons : Lessons Learned in Object - Oriented Development Projects , SIGS Books . New York ( 1993 ) . Accepted for publication January 8 , 1996 . Douglas W . McDavid IBM Object Technology Consulting , 6300 Diagonal Highway , Boulder , Colorado 80301 ( electronic mail : mcdavidtiinetcom . com t . Mr . McDavid isa senior consultantwith IBM ' s Object Technology Practice , specializing in business se - mantic modeling in support of object - oriented systems develop - ment . For more than 25 years , he has worked on and managed projects in information management . information systems , and application development , with in - depth knowledge of the tele - communications , insurance . hrokerage , banking , and information services consulting industries . Among his accomplishments , he introduced reverse engineeringoflegacy information systemsinto a large property and casualty insurance carrier . a premier dis - count brokerage firm , and a specialized personal hanking insti - tution . Prior to moving into data processing , Mr . McDavid had an extensive career in the library field , managing reference and circulation departments , a branch library , and a central library . He has been an innovator in the use of modeling to align bus - iness and information technology strategies . He has worked with various technologies , including object - oriented languages , seman - tic network databases , and simulation software to improve cor - porate executives ' ability to " manage hy wire . " Mr . McDavid is a member and director of Data Administration Management As - sociation International . He received his B . A . with honors in so - ciologyfrom the Universityof California , Santa Cruz and hisM . A . in library science from San Jose State University . Reprint Order No . G321 - 5598 . 150 McDAVID IBM SYSTEMS JOURNAL . VOL 35 , NO 2 , 1996