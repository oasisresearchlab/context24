Bridging the computational gap between mesoscopic and continuum modeling of red blood cells for fully resolved blood ﬂow Christos Kotsalos a , ∗ , Jonas Latt a , Bastien Chopard a a Computer Science Department , University of Geneva , 7 route de Drize , CH - 1227 Carouge , Switzerland Abstract We present a computational framework for the simulation of blood ﬂow with fully resolved red blood cells ( RBCs ) using a modular approach that consists of a lattice Boltzmann solver for the blood plasma , a novel ﬁnite element based solver for the deformable bodies and an immersed boundary method for the ﬂuid - solid interaction . For the RBCs , we propose a nodal projective FEM ( npFEM ) solver which has theoretical advantages over the more commonly used mass - spring systems ( mesoscopic modeling ) , such as an unconditional stability , versatile material expressivity , and one set of parameters to fully describe the behavior of the body at any mesh resolution . At the same time , the method is substantially faster than other FEM solvers proposed in this ﬁeld , and has an e ﬃ ciency that is comparable to the one of mesoscopic models . At its core , the solver uses specially deﬁned potential energies , and builds upon them a fast iterative procedure based on quasi - Newton techniques . For a known material , our solver has only one free parameter that demands tuning , related to the body viscoelasticity . In contrast , state - of - the - art solvers for deformable bodies have more free parameters , and the calibration of the models demands special assumptions regarding the mesh topology , which restrict their generality and mesh independence . We propose as well a modiﬁcation to the potential energy proposed by Skalak et al . 1973 for the red blood cell membrane , which enhances the strain hardening behavior at higher deformations . Our viscoelastic model for the red blood cell , while simple enough and applicable to any kind of solver as a post - convergence step , can capture accurately the characteristic recovery time and tank - treading frequencies . The framework is validated using experimental data , and it proves to be scalable for multiple deformable bodies . 1 . Introduction Blood is a complex suspension of red blood cells ( RBCs ) , white blood cells and platelets , submerged in a Newtonian ﬂuid , the plasma . Especially , the RBCs ( else , erythrocytes ) cover 40 - 45 % of the whole blood volume , and their behavior has a direct impact on blood rheology . The accurate modeling of the collective transport of the cells in the plasma is of paramount importance since it can help us decipher in vivo phenomena , e . g . , blood clotting , margination of platelets , or the cell - free layer ( Mountrakis 2015 [ 1 ] ) . In addition , the deformability of RBCs is strongly linked to some pathological conditions , e . g . , hereditary disorders ( like spherocytosis , elliptocytosis , and stomatocytosis ) , metabolic disorders ( like diabetes , hypercholesterolemia , and obesity ) , malaria , or sickle anemia as described by Tomaiuolo 2014 [ 2 ] . In more details , a human RBC has a biconcave discocyte shape with a liquid interior ( cytoplasm , hemoglobin solution ) of dynamic viscosity 6 − 10 cP . A healthy red blood cell has an average surface area of 134 µ m 2 , a volume of 94 µ m 3 , a diameter of 7 . 82 µ m and a varying thickness of 0 . 81 µ m at the dimple to 2 . 57 µ m at the periphery . An analytical formula for the RBC shape is proposed in Evans and Skalak 1980 [ 3 ] . The RBC membrane is a complex multi - layered structure consisting of an external lipid bilayer attached to an underlying cytoskeleton ( spectrin - link network ) . These complicated anucleate structures transfer oxygen between blood and tissues thanks to their ability to undergo substantial deformations while maintaining their area and volume . The absence of a universal numerical model capable of describing the viscoelastic behavior of a RBC is the moti - vation of this study . A universal model should fulﬁll a number of criteria , such as generality , robustness , accuracy and performance . By generality and accuracy , we mean the ability of the model to simulate any material and all the ex - pected behavior as close as possible to the observed data ( experiments ) . By robustness , we refer to the capability of the ∗ Corresponding author : Tel . : + 41 - 22 - 379 - 0169 Email addresses : christos . kotsalos @ unige . ch ( Christos Kotsalos ) , jonas . latt @ unige . ch ( Jonas Latt ) , bastien . chopard @ unige . ch ( Bastien Chopard ) a r X i v : 19 0 3 . 06479v2 [ phy s i c s . c o m p - ph ] 27 A ug 2019 model to adapt to extreme physical circumstances such as large deformations , conﬁned ﬂows , or high ﬂow shear rates , and to numerically unfavorable settings like large time steps . Last but not least , performance is a key requirement in the ﬁeld of computational biophysics , since the model should be extended to cases including millions or even billions of deformable bodies . To give an example , a volume of 1 mm 3 of blood at a hematocrit 40 % contains approximately ﬁve million RBCs . For the modeling of RBCs , two main approaches are proposed in the literature . The ﬁrst is a continuum - level approach , that views the membrane as a continuous medium which obeys speciﬁc partial di ﬀ erential equations and constitutive laws . The discretization of these equations is commonly done through a ﬁnite element method ( FEM ) . Many researchers have successfully used this approach for the modeling of membranes , including Kr¨uger et al . 2011 [ 4 ] , MacMeccan et al . 2009 [ 5 ] , Shrivastava and Tang 1993 [ 6 ] . Kl¨oppel et al . 2011 [ 7 ] employed a two - layer model for an even more accurate description of the lipid bilayer and the underlying cytoskeleton . The aforementioned models use constitutive laws for the description of the membrane material , such as the material introduced by Skalak et al . 1973 [ 8 ] , Neo - Hookean materials proposed in [ 9 ] or the material described by Yeoh 1990 [ 10 ] ( for a thorough inves - tigation of material models the reader is referred to Dimitrakopoulos et al . 2012 [ 11 ] and Siguenza et al . 2017 [ 12 ] ) . Among the many advantages of this approach is the guaranteed mesh - independence , which is a product of the way the equations are discretized . This modeling approach satisﬁes many of the above - mentioned criteria , namely generality , robustness and accuracy . However , they do not perform well in simulations of multiple deformable bodies due to their high computational cost . The second modeling approach operates at a mesoscopic level , and represents surface proper - ties through a mass - spring system . More precisely , mesoscopic modeling of the RBCs spans from the spectrin - link to the coarse - grained spectrin - link levels . The spectrin - level approach tries to imitate the physics of the cytoskeleton of a RBC as a ﬁne - grained mass - spring model . The spectrin level was introduced by Discher et al . 1998 [ 13 ] and extended further by Dao et al . 2003 & 2006 [ 14 , 15 ] and Li et al . 2005 [ 16 ] . Though , this approach is limited by the high computational cost , given that it requires 23 867 surface vertices [ 17 ] for the simulation of the whole spectrin network . For this reason , the coarse - grained models of Dupin et al . 2007 [ 18 ] , Pivkin and Karniadakis 2008 [ 17 ] , Fedosov et al . 2010 [ 19 ] , and Reasor et al . 2011 [ 20 ] have gained substantial attention during the last years , where the surface discretization demands about 500 vertices . Currently , state - of - the - art solvers like Hemocell [ 21 , 22 ] and the solver of Fedosov [ 19 ] are based on this modeling approach . These coarse - grained methods outperform all the others in terms of computational time . Nevertheless , since they are mass - spring systems they inherit limitations on generality , robustness and accuracy . As far as the simulation of the blood plasma is concerned , there exists a plethora of mature CFD approaches . For our study , we make use of the lattice Boltzmann method ( LBM ) [ 23 ] which indirectly solves the Navier - Stokes equations . Another candidate method widely used for the simulation of blood ﬂows , is dissipative particle dynamics ( DPD ) [ 17 , 19 ] . Both are particle - based methods which deploy either collision and streaming operations or Newtonian laws , respectively , for the time advancement of the ﬂuid . The coupling of the ﬂuid with the solid phase is a critical point for an accurate and stable simulation . Peskin 1972 [ 24 ] developed the immersed boundary method ( IBM ) to model blood ﬂow in combination with moving heart valves . The strength of the IBM is that the ﬂuid solver does not have to be modiﬁed except from the addition of a forcing term , and the ﬂuid mesh does not need to be adjusted dynamically . Moreover , the deformable body and its discrete representation do not need to conform to the discrete ﬂuid mesh , which leads to a very e ﬃ cient ﬂuid - solid coupling . In the context of lattice Boltzmann , an alternative solution would be the deployment of moving bounce back nodes [ 23 ] . With this approach , the computational cost however steeply increases , given the need to track the lattice nodes that transition from solid to ﬂuid state . In a typical numerical framework for blood ﬂow , the computational time is dominated by the structural solver for the deformable RBCs . Even with the relatively cheap mass - spring systems , Z´avodsky et al . 2017 [ 22 ] report for example that the deformable bodies solver constitutes over 95 % of the total computational time . Since the numerical models for Newtonian ﬂuid ﬂow and for the ﬂuid - solid coupling are more mature than the ones for the physics of RBCs , our main focus is to develop a novel solution which strictly fulﬁlls the criteria of generality , robustness , accuracy and performance without any compromise . We propose a novel approach for deformable viscoelastic bodies based on nodal projective ﬁnite elements method ( npFEM ) . Inspired by the research of Liu et al . 2017 [ 25 ] and Bouaziz et al . 2014 [ 26 ] , our solver extends these theories to the ﬁeld of computational biophysics . The expression “nodal” refers to the mass lumping technique , in which both the masses and the forces are lumped on the vertices of the discretized body , and therefore the ﬁnite elements act like generalized viscoelastic springs . The term “projective” stands for the use of specially designed potential energies that help us build a fast solver based on quasi - Newton optimization techniques [ 27 , 28 ] . Lastly , we discretize the continuous potential energies using linear basis functions , leading to the standard Galerkin method [ 29 ] in the ﬁeld of FEM . Our solver inherits the versatility and robustness of FEM and is almost as fast 2 as plain mass - spring systems . To our knowledge , this is the ﬁrst solver bridging the gap between the two approaches , continuum and mesoscopic , in the ﬁeld of RBC modeling . The present work is organized as follows : In section 2 we thoroughly introduce the npFEM method focusing on the modeling of RBCs , the lattice Boltzmann method and the immersed boundary method . Following , in section 3 we put all the di ﬀ erent pieces together and show how the complete computational framework operates . Finally , in section 4 we present extensive validations of our computational framework and give insights about its performance and scalability to systems of multiple blood cells . 2 . Methods The focus of this study is to build a computational framework for fully resolved 3D blood ﬂow . The constituents of this framework are the solid body solver ( section 2 . 1 ) , the ﬂuid solver ( section 2 . 2 ) , and the ﬂuid - structure interaction ( FSI ) ( section 2 . 3 ) . The solid body solver based on the nodal projective ﬁnite elements method ( npFEM ) is our main contribution to the ﬁeld . Given the volume fraction of red blood cells compared to the other cells ( white , platelets ) , and consequently their importance on blood rheology , we develop the npFEM solver around RBC simulations . The ﬂuid solver , which is used for the simulation of the blood plasma , is based on the lattice Boltzmann method ( LBM ) as implemented in the open source software Palabos [ 30 ] . The coupling between the two solvers is done via an immersed boundary method known as multidirect forcing scheme [ 31 ] . 2 . 1 . Nodal projective FEM ( npFEM ) This section provides a complete review of the methods introduced in the research of Liu et al . 2017 [ 25 ] and Bouaziz et al . 2014 [ 26 ] , and some novel extensions proposed to adapt them to the ﬁeld of RBC modeling . A validation of these adaptations is provided in later sections , see results section 4 . A red blood cell is represented by its triangulated membrane , and its total mass is lumped on the membrane vertices ( including the interior ﬂuid ) . This section presents how we realize the dynamics of deformable bodies , as well as all the potential energies that describe the behavior of a red blood cell , namely local area and global volume conservation , bending and material . Let us assume a surface mesh consisting of n vertices with positions x ∈ R n × 3 and velocities v ∈ R n × 3 . The evolution of the system in time follows Newton’s law of motion . The external forces are deﬁned as F ext ∈ R n × 3 and come from the ﬂuid - solid interaction , while the internal forces are F int ∈ R n × 3 . The internal forces are position dependent , i . e . , F int ( x ) = − (cid:80) i ∇ E i ( x ) , where E i ( x ) is a scalar discrete elemental potential energy . Moreover , the summation of all the elemental potential energies of any type results in the total elastic potential energy of the body . Conservative internal forces , i . e , derived from potentials , are closely related to the assumption of hyperelastic materials [ 32 ] . The implicit Euler time integration leads to the following advancement rules ( subscripts n and n + 1 refer to time t and t + h , respectively ) : v n + 1 = x n + 1 − x n h , ( 1 ) F int ( x n + 1 ) + F ext ( x n ) − C v n + 1 = M v n + 1 − v n h , ( 2 ) where M ∈ R n × n is the mass matrix , h is the time step and C ∈ R n × n is the damping matrix acting like a proxy for viscoelasticity ( Rayleigh damping , see section 2 . 1 . 4 ) . The mass matrix is built by lumping the total mass of the body on the mesh vertices , resulting in a diagonal structure . The lumping can be done either by equally distributing the mass or by weighting , based on the corresponding area per vertex . Combining the above equations we derive (cid:101) M ( x n + 1 − y n ) = h 2 F int ( x n + 1 ) , ( 3 ) where (cid:101) M = M + h C and y n = x n + h (cid:101) M − 1 M v n + h 2 (cid:101) M − 1 F ext . Equation ( 3 ) can be turned into an optimization problem [ 26 ] as min x n + 1 1 2 h 2 (cid:13)(cid:13)(cid:13) (cid:13) (cid:101) M 12 ( x n + 1 − y n ) (cid:13)(cid:13)(cid:13) (cid:13) 2 F + (cid:88) i E i ( x n + 1 ) , ( 4 ) where | | · | | F is the Frobenius norm . Indeed , setting the derivative of equation ( 4 ) to zero ( thereby minimizing the objective function ) , we recover Newton’s second law of motion . The solution to the minimization problem gives x n + 1 . The choice of implicit Euler integration serves a dual purpose . Firstly , it provides unconditional stability for arbitrary time step . Secondly , this integration scheme is characterized by some numerical dissipation linked to the time step 3 ( the smaller the time step the smaller the numerical dissipation ) . This dissipation enhances the stability of the coupling ( ﬂuid & solid ) by reducing energy oscillations that could potentially lead to instabilities . This dissipation term acts like the viscous dissipation provided by Rayleigh damping ( matrix C ) . A remark at this point is that the variational form of implicit Euler ( 4 ) is just a reformulation of Newtonian dy - namics , which in their turn can be viewed from the Hamiltonian dynamics perspective . Nevertheless , to accurately capture the trajectory and deformation of the bodies ( dynamics ) we need to guarantee the conservation of linear & angular momenta . For this , one has to be cautious with the selection of the potential energies and the viscoelastic terms . According to Noether’s theorem , momenta are conserved when the elastic energies are rigid motion invariant . For the viscoelastic terms , we give an extended discussion on the conservation of momenta in section 2 . 1 . 4 . Taking into consideration all the above , we guarantee that we resolve as accurately as possible the dynamics of the simulated bodies , reproducing the correct physics as dictated by Newton’s laws . 2 . 1 . 1 . Extended projective dynamics method and quasi - Newton optimization Projective dynamics method [ 26 ] requires a special form of potential energies , based on the notion of constraint projection : E i ( x ) = min S i p ∈M i (cid:101) E i ( x , S i p ) , (cid:101) E i ( x , z ) = (cid:107) G i x − z (cid:107) 2 F , ( 5 ) where M i is a constraint manifold deﬁned by a desired undeformed state , p i = S i p ∈ R m × 3 is an auxiliary projection variable on M i and G i is a mapping from x to an element - wise deformation representation which depends on the mesh topology and the initial conﬁguration . For an elastic body , there are many elemental energies of various types , therefore various projections . For compactness , we stack all the projections into p ∈ R m × 3 and deﬁne binary selector matrices S i ∈ R m × m such that p i = S i p . The dimension m is equal to (cid:80) i c i ( summation over all quadratic energies ) , where c i is one for the bending energy , two for the local area energy and n for the global volume conservation , i . e . , it depends on the corresponding energy ( see section 2 . 1 . 2 ) . More in details , the matrix G i ∈ R m × n formulates the deformation descriptor and places it in the involved rows and columns , where the columns correspond to the involved vertices of the i - th energy and the rows refer to the corresponding projection p i . The term “constraint” is used because the energy penalizes the deviation from the undeformed state , and thus constraints the body from deformation , and the term “projection” corresponds to ﬁnding the minimum distance from the current state onto the manifold . Generalizing the above , all the possible undeformed conﬁgurations deﬁne the so - called constraint manifold M ( Cartesian product of the individual constraint manifolds M i ) , which mathematically is formulated as the zero level - set of the total potential energy . From a geometric point of view , the potential energy is a distance d which quantiﬁes how far the deformed state G x is from the manifold M ( rest state ) . The projection of the current state onto M is denoted by p . There can be many user - deﬁned manifolds . For example , a manifold for volume preservation does not guarantee area conservation and therefore , we have to deﬁne another manifold to guarantee the latter constraint . Recapitulating the above , the total potential energy can be formalized as E ( x , p ) = min z ∈M d (cid:48) ( G x , z ) = (cid:107) G x − p (cid:107) 2 F . ( 6 ) The minimum is achieved when p is the projection of G x onto M . Figure 1 summarizes the deﬁnition of the distance and its correspondence to a potential energy . The generic potential energy of equation ( 6 ) refers to a discretized energy . Later , we show how from continuous energies using linear basis functions , we retrieve this generic formulation . The key idea of projective dynamics is to exploit these specialized potential energies and reformulate the variational form of implicit Euler as g ( x n + 1 ) = 1 2 h 2 tr ( ( x n + 1 − y n ) T (cid:101) M ( x n + 1 − y n ) ) + (cid:88) i w i (cid:32) min S i p ∈M i (cid:101) E i ( x , S i p ) (cid:33) , ( 7 ) where g is the objective function whose minimum corresponds to x n + 1 and w i = A i k i is a weighting term acting like a “sti ﬀ ness” that converts the distance to an energy term ( A i is the area of the element and k i is the sti ﬀ ness factor ) . As a reminder , | | A | | 2 F = tr ( A T A ) . The projections p are essentially functions of x and thus developing even further equation ( 5 ) into the variational form ( 4 ) , we get g ( x n + 1 ) = 1 2 h 2 tr (cid:16) ( x n + 1 − y n ) T (cid:101) M ( x n + 1 − y n ) (cid:17) + 1 2 tr (cid:16) x Tn + 1 L x n + 1 (cid:17) − tr (cid:16) x Tn + 1 J p ( x n + 1 ) (cid:17) + 1 2 tr (cid:16) p T ( x n + 1 ) S p ( x n + 1 ) (cid:17) (cid:124) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:123)(cid:122) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:125) projective dynamics potential energies : quadratic formulation , ( 8 ) 4 Gx p d ( Gx , p ) E = mind’ ( Gx , z ) = d ( Gx , p ) z d’ ( Gx , z ) Figure 1 : Geometric representation of a potential energy . The more the distance from the undeformed state M the higher the energy stored in the body . The body seeks to minimize its potential energy through G x = p . where L = (cid:80) w i G Ti G i , J = (cid:80) w i G Ti S i and S = (cid:80) w i S i S Ti . Seeking for greater material expressivity , and thus more general potential energies , we can straightforwardly extend equation ( 7 ) as g ( x ) = 1 2 h 2 tr ( ( x − y ) T (cid:101) M ( x − y ) ) + (cid:88) i w i E PDi ( x ) + (cid:88) i E non − PD i ( x ) , ( 9 ) where PD stands for energies that follow the quadratic formulation of projective dynamics , see equation ( 6 ) , and non - PD for arbitrary energies . A remark is the absence of a weighting term in the non - PD energies , which is because the sti ﬀ ness is already integrated into them . The minimization of g is performed using a quasi - Newton technique with a well - suited Hessian approximation , which is deeply rooted in the projective dynamics part . The ﬁrst step is to compute the gradient of the objective function g ( x ) as deﬁned by equation ( 9 ) . An in - depth derivation of the gradient ( regarding the PD part ) and an explanation on why the derivative of 12 tr (cid:16) p T ( x ) S p ( x ) (cid:17) vanishes can be found in [ 25 , 33 ] . The derivative is given by ∇ g ( x ) = 1 h 2 (cid:101) M ( x − y ) + L x − J p ( x ) (cid:124) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:123)(cid:122) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:125) − F PDint + (cid:88) i ∇ x E non − PD i ( x ) (cid:124) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:123)(cid:122) (cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32) (cid:125) − F non − PD int . ( 10 ) The projective dynamics energies demand ﬁrst the computation of p for a given x . This step can be massively par - allelized given the small computational cost of the projection per element . The objective function could be equivalently minimized by Newton’s method . Newton’s method would proceed by computing the Hessian matrix ∇ 2 g ( x ) and then using it to compute a descent direction as d = − ( ∇ 2 g ( x ) ) − 1 ∇ g ( x ) . However , Liu et al . 2017 [ 25 ] suggested replacing the Hessian by (cid:101) H = (cid:101) M / h 2 + L and thus opting for a quasi - Newton approach avoiding the expensive computation of the Hessian at every time step and the possible deﬁniteness ﬁxes to guarantee that d is a descent direction . Using only quadratic energies , the minimization of g could be realized by an alternating ( local / global ) solver [ 26 ] , which reveals how (cid:101) H is formed . A detailed presentation can be found in Appendix A . The approximated Hessian plays a major role in the fast convergence of our solver and in the overall computational e ﬃ ciency of the npFEM solver without the expensive computation of the true Hessian . Furthermore , matrix (cid:101) H is constant , symmetric positive deﬁnite and thus can be prefactorized once at the beginning , e . g . , using Cholesky factorization , allowing for very fast computation of the descent direction d = − ( (cid:101) H ) − 1 ∇ g ( x ) . The non projective dynamic energies could contribute as well to the formulation of the Hessian approximation by considering their contribution to (cid:80) w i G T i G i , where G i is the deformation gradient operator for the i - th triangular element and w i = A i k i ( A i is the area of the element and k i a sti ﬀ ness factor which can be computed as described in [ 25 ] ) . If on the other hand there is no contribution from the non - PD part , then the iterations for convergence are slightly increased . 5 The overall convergence is a ﬀ ected by the selected potential energies . The more the PD energies , the faster the convergence , which is the case for our study since out of the four di ﬀ erent potentials ( area , volume , bending , material ) only the material energy does not fall into the PD category , see sections 2 . 1 . 2 & 2 . 1 . 3 for more details . The reason for this , is that the Hessian approximation is mainly built upon the PD part . It is worth noting that the size of our matrices is n × n instead of 3 n × 3 n , typically found in other FEM solvers [ 5 ] , leading to an at least 3 × speedup compared to them . Consequently , moving towards the descent direction , this iterative procedure guarantees to converge to the mini - mum of g , i . e . , x n + 1 . A recapitulation of the algorithm is presented in section 2 . 1 . 5 . 2 . 1 . 2 . Quadratic Energies to simulate RBC membrane In this section , we develop potential energies suitable for projective dynamics and critical for the simulation of the red blood cell membrane , namely local area conservation , bending and global volume preservation . The analysis reveals that the above - mentioned energies can be written in the quadratic form described by equation ( 5 ) . The goal is to develop discrete energies and compute the auxiliary variables , i . e . , the projections , in order to quantify the energy term itself . Since the current state x is known , the computation of p results in the quantiﬁcation of the energy E from equation ( 5 ) . Let the undeformed surface be a di ﬀ erentiable 2 - manifold surface S embedded in R 3 . Let us deﬁne piecewise linear coordinate functions of the undeformed and deformed surface , g : S → R 3 and f : S → R 3 , respectively . By introducing a set M of desired point - wise transformations T , we can formulate a potential energy [ 26 ] as E ( f , T ) = k 2 (cid:90) S (cid:107)∇ S f − T ∇ S g (cid:107) 2 F dA , ( 11 ) where ∇ S is the gradient operator on S . The set M determines all allowed rest conﬁgurations T ∇ S g . The energy E ( f , T ) is discretized over triangular elements using piecewise linear hat functions [ 34 ] , and the integral is transformed to a sum over triangle potentials : E i ( x , T ) = k i 2 A i | | D s D m − 1 − T | | 2 F , ( 12 ) where A i is the triangle area , D s = [ x j − x i , x k − x i ] ∈ R 2 × 2 contains the triangle edges of the deformed state embedded in 2D and D m corresponds to the undeformed state . At this point , we have introduced a generic quadratic energy similar to what is described by equation ( 5 ) . Based on the FEM reminder of Appendix B , the generic quadratic energy deﬁned above can be rewritten as E i ( x , T ) = k i 2 A i | | F − T | | 2 F , ( 13 ) where F ∈ R 2 × 2 is the deformation gradient of the i - th triangular element . In this case , the deformation gradient acts like a deformation descriptor , and T corresponds to the projection on the manifold deﬁned by the set M . Area preservation energy . Let us deﬁne the set M as the set of matrices with determinant 1 , i . e . , det ( T ) = 1 . In mathematical terms , this requirement is equivalent to M ≡ S L ( 2 ) , where the special linear group of degree n , S L ( n ) , is the set of n × n matrices with determinant 1 . Let us consider the singular value decomposition ( SVD ) of the deformation gradient of a triangular element F = U Σ V T , ( 14 ) where Σ is a diagonal matrix storing the singular values or principal stretches λ 1 , λ 2 of F . Area conservation of the element is equivalent to det ( F ) = det ( Σ ) = 1 . ( 15 ) Consequently , the generic quadratic energy is rewritten as k i 2 A i | | Σ − Σ ∗ | | 2 F s . t . det ( Σ ∗ ) = 1 , ( 16 ) which is the distance of the current state Σ from the manifold deﬁned by S L ( 2 ) . A rigorous solution to this projection Σ ∗ can be found in the Appendix of [ 26 ] . Essentially , this energy penalizes how far the element is from the state that conserves the area Σ ∗ . 6 Bending Energy . The RBC membrane simulation demands a bending energy , commonly formulated by employing the dihedral angles across edges . The bending energy used in this study [ 26 ] measures the squared di ﬀ erence of mean curvatures H as E ( f , R ) = k 2 (cid:90) S | | ∆ S f − R ∆ S g | | 22 dA , ( 17 ) where R ∈ S O ( 3 ) are rotation matrices that best match the initial to the deformed state , ∆ S is the Laplace - Beltrami operator on S . As a reminder , this operator applied on the coordinate function { g , f } of the surface , gives ∆ S { g , f } = − 2 H { g , f } n , where H is the mean curvature and n is the surface normal . The discretized version [ 26 ] of the bending energy per vertex i , using piecewise linear hat functions , is E i ( x , R ) = k i 2 A i (cid:13)(cid:13)(cid:13) X f c − R X g c (cid:13)(cid:13)(cid:13) 2 2 , ( 18 ) where A i is the Voronoi area of the vertex i , X f and X g contain the one - ring edges of the vertex in the current and initial conﬁguration , respectively , and c stores the common cotangent weights divided by the Voronoi area . The projection R has a closed form solution and is presented in the Appendix of [ 26 ] . For a thorough analysis on the di ﬀ erent bending energy algorithms , consider the work of Guckenberger et al . 2016 [ 35 ] . Global volume conservation . The volume V of a body embedded in 3D can be computed employing the divergence theorem as V = 1 3 (cid:90)(cid:90)(cid:90) V ∇ · x d x = 1 3 (cid:90)(cid:90) ∂ V x T n d x , ( 19 ) where ∂ V is the boundary of the 3D body V ( RBC membrane in our case ) and n is the surface normal . Given the tessellation of the membrane in triangular elements , we can further simplify [ 36 ] the volume as V ( x ) = 1 3 (cid:90)(cid:90) ∂ V x T n d x = 1 9 (cid:88) i A i ( x i 1 + x i 2 + x i 3 ) T n i , ( 20 ) where A i is the area and i 1 , i 2 , i 3 are the vertex indices of the i - th element . Having deﬁned the above toolset , we can now formulate the global volume conservation manifold as C = V ( x ) − V 0 = 0 , where V 0 is the volume at rest . Therefore , the global volume conservation energy can be written as E i ( x , p ) = w i 2 (cid:107) p − x (cid:107) 2 F s . t . p ∈ C . ( 21 ) The deformation descriptor is the absolute positions of the deformed body , and the projection corresponds to a state vector which respects the volume conservation . To ﬁnd the projection p , we reformulate the above energy into a minimization problem as min p w i 2 (cid:107) p − x (cid:107) 2 F , s . t . C ( p ) = C ( x + ∆ x ) = 0 ∆ x = λ ∇ C ( x ) , ( 22 ) the second constraint that restricts ∆ x to be in the direction of ∇ C is a requirement for linear and angular momentum conservation [ 36 ] . The solution to the above optimization problem using Lagrange multipliers is [ 36 , 26 ] ∆ x = − C ( x ) (cid:107)∇ C ( x ) (cid:107) 2 F ∇ C ( x ) , ( 23 ) while the gradient can be approximated [ 36 ] by ∇ C ( x ) ≈ 1 3 [ ¯ n T 1 , . . . , ¯ n T n ] T , ( 24 ) where ¯ n k = (cid:80) A j n j is the sum of the area weighted normals of all elements which contain vertex k . Global area conservation could be imposed by a similar approach . Nevertheless , after extensive testing we found out that only the local area preservation term is enough to describe the RBC behavior , without increasing more the 7 computational cost . Essentially , since the area preservation is a property of the material , it is su ﬃ cient to encode it locally , through the elements that compose the body . The energies developed in this section follow the quadratic formulation described by equation ( 5 ) . However , to build the stacked system of projections as described by equation ( 8 ) , the user has to place carefully each deformation descriptor and projection to the sparse matrices G i x and p i . Additionally , the descriptors and projections isometrically embedded in R 2 , have to be re - embedded back in R 3 , since the equations of motion refer to three dimensions . 2 . 1 . 3 . Non - PD energies & internal forces There are many energies following the above - mentioned quadratic distance formulation but the simulated materials are quite limited . Even classical models from continuum mechanics , such as Neo - Hookean , St . Venant - Kirchho ﬀ , Mooney - Rivlin , are not supported . More importantly , the RBC falls into the latter category and for this reason , we develop the non projective dynamic energies and forces . Consequence of elastic deformation is the accumulation of potential energy in the body . Our focus is on hyperelastic materials for which the potential energy E [ φ ] is determined by the deformation function φ ( see Appendix B ) and is independent of the deformation history . To describe a deformed body , we introduce the energy density function Ψ [ φ ; X ] which measures the potential energy per unit undeformed volume / area on an inﬁnitesimal domain dV around the material point X . The total potential energy is E [ φ ] = (cid:90) V Ψ [ φ ; X ] d X = (cid:90) V Ψ [ F ] d X . ( 25 ) Every material follows a speciﬁc constitutive model which links the stresses with the strains . There is a variety of stress descriptors ; for our discussion we use the 1 st Piola - Kirchho ﬀ stress tensor P which for hyperelastic materials is P ( F ) = ∂ Ψ ( F ) / ∂ F . ( 26 ) The assumption of isotropy and rotation invariance allows us to express the energy density function Ψ as a function of the principal stretches of the deformation gradient ( λ 1 , λ 2 for triangular elements ) . To simplify the material space , we use the Valanis - Landel hypothesis [ 37 ] which assumes that Ψ ( λ 1 , λ 2 ) = f ( λ 1 ) + f ( λ 2 ) + g ( λ 1 λ 2 ) , ( 27 ) where f , g are scalar non - linear elastic strain energy density functions . The original formulation of the hypothesis is for solid bodies ( typically rubber - like materials ) and not for surfaces , thus involving the three principal stretches ( λ 1 , λ 2 , λ 3 ) of the deformation gradient and three scalar functions ( f , g , h ) . It covers a vast amount of materials , such as St . Venant - Kirchho ﬀ , Neo - Hookean and Mooney - Rivlin . The well - known energy introduced by Skalak et al . 1973 [ 8 ] for the description of the membrane of a red blood cell falls into the category of the Valanis - Landel materials . Given I 1 = λ 21 + λ 22 − 2 and I 2 = λ 21 λ 22 − 1 the energy density function is Ψ = B 4 (cid:32) 1 2 I 2 1 + I 1 − I 2 (cid:33) + C 8 I 2 2 , ( 28 ) where B and C are membrane material properties . The above energy density function can be alternatively written in the Valanis - Landel form as f ( λ i ) = B 8 λ 4 i − B 4 λ 2 i , ( 29 ) g ( λ i λ j ) = C 8 ( λ i λ j ) 4 − C 4 ( λ i λ j ) 2 . ( 30 ) Given that we enforce area conservation through the projective dynamics part , i . e . , λ 1 λ 2 = 1 , g can be neglected and only f should be considered . Since we are dealing with linear ﬁnite elements , the deformation gradient is constant over each element ( T i ) , see Appendix B , and this observation reduces the elemental potential energy to E i = (cid:90) T i Ψ ( F ) d X = W i · Ψ ( F i ) , ( 31 ) 8 where W i is the undeformed area of the element . The contribution of element T i to the elastic forces is F non − PD int = −∇ E i which can be further simpliﬁed for a triangular element to [ 32 ] [ (cid:126) f 1 (cid:126) f 2 ] = − W i P ( F ) D m − T and (cid:126) f 3 = − (cid:126) f 1 − (cid:126) f 2 , ( 32 ) where (cid:126) f 1 , (cid:126) f 2 , (cid:126) f 3 are the internal forces on the vertices of T i . Moreover , the 1 st Piola - Kirchho ﬀ stress tensor can be further simpliﬁed to [ 38 ] P ( F ) = P ( U Σ V T ) = UP ( Σ ) V T , ( 33 ) where P ( Σ ) = diag (cid:16) ∂ Ψ ∂λ 1 , ∂ Ψ ∂λ 2 (cid:17) . Stability . Special care is needed when designing new materials to satisfy Drucker’s ﬁrst stability criterion ( also known as Hill’s stability criterion ) , which requires a monotonic increase of strain energy density with increase in strain [ 39 ] . In practice , this stability criterion is satisﬁed by demanding f (cid:48)(cid:48) , g (cid:48)(cid:48) > 0 [ 38 ] . Modiﬁcation on Skalak’s Energy . This energy behaves quite well for small deformations as we present in section 4 , but for larger deformations it fails to robustly describe the mechanics of the RBC membrane . For this reason , we enhance the strain hardening behavior by adding one more term in f . The modiﬁed version is as follows : f ( λ i ) = B 8 λ 4 i − B 4 λ 2 i + D 4 ( λ i − 1 ) 4 ( 34 ) where D is a material property like B . The modiﬁed Skalak’s energy satisﬁes Drucker’s stability criterion and has a superior behavior than the original one , see section 4 . The correction term has zero contribution at rest , where λ i = 1 , and its form was deﬁned through ﬁtting on the available experimental data . 2 . 1 . 4 . Membrane viscoelasticity Membrane viscoelasticity is tackled in a two - way approach . Initially , through the addition of the Rayleigh dissipa - tion term in Newton’s equation ( 2 ) and secondly through a post - convergence step . Typically , the Rayleigh damping matrix is a blend of the mass and sti ﬀ ness matrices C = α D M + β D K , ( 35 ) where M ∈ R n × n is the mass matrix , K ∈ R n × n is the sti ﬀ ness matrix and α D , β D are coe ﬃ cients . In our analysis we do not construct explicitly the sti ﬀ ness matrix ( Hessian of the elastic potential energy ) , and thus we are bypassing this issue by using matrix L = (cid:80) w i G Ti G i instead [ 40 ] . Essentially , we make use of a part of the Hessian approximation instead of the Hessian itself . A critical point to consider is that Rayleigh damping can a ﬀ ect the rigid body motions ( translation , rotation ) if the damping ratio is high . The damping ratio ( ζ ) is deﬁned as ζ ( ω n ) = 0 . 5 ( α D ω − 1 n + β D ω n ) , where ω n is the n - th modal frequency [ 5 ] . In our study , we do an approximate modal analysis by solving L x = ω 2 M x . For our analysis , we set α D = 0 and make sure that ζ ( ω n ) (cid:28) 1 for every mode . In this way , we guarantee that the trajectory of the simulated bodies follows the proper dynamics and that the momenta are conserved . Due to the above restriction of Rayleigh damping , we cannot fully emulate the viscoelastic behavior of the RBC membrane . This is why we introduce the post - convergence step that complements Rayleigh damping , does not a ﬀ ect the rigid body dynamics , and also conserves linear & angular momenta . The key idea is to calculate the di ﬀ erence between the vertex velocity v i and its velocity in the best - ﬁt rigid body motion . Then , we dissipate partially the non - rigid - body part . The algorithm [ 41 ] to do so is summarized in the following lines : x cm = ( (cid:80) i x i m i ) / ( (cid:80) i m i ) (cid:46) center of mass ( cm ) v cm = ( (cid:80) i v i m i ) / ( (cid:80) i m i ) (cid:46) velocity of cm L = (cid:80) i r i × ( m i v i ) (cid:46) angular momentum I = (cid:80) i (cid:101) r i (cid:101) r Ti m i (cid:46) inertia matrix ω = I − 1 L (cid:46) angular velocity for all vertices i do ∆ v i = v cm + ω × r i − v i v i ← v i + κ damping ∆ v i end for where r i = x i − x cm , (cid:101) r i ∈ R 3 × 3 is a matrix with the property (cid:101) r i v = r i × v , and κ damping ∈ [ 0 , 1 ] is the damping coe ﬃ cient . This dissipation term is deployed after the convergence to x n + 1 ( see algorithm 1 ) . An important remark to avoid confusion is that in our study we are not simulating a viscoelastic material , i . e . , the potential energy to be dependent on the strain rate , but we are emulating the viscoelastic behavior through viscous 9 dissipation ( proxy for viscoelasticity ) . This approach is proven to have equivalent rheological behavior with the gen - eralized Maxwell model as proposed by Semblat 1997 [ 42 ] . Similar approach is followed by Fedosov et al . 2010 [ 19 ] & Hemocell [ 21 ] . 2 . 1 . 5 . Deformable bodies solver : npFEM algorithm In this section , we summarize the algorithm for the deformable bodies , focused on the simulation of red blood cells ( algorithm 1 describes one time step of the npFEM solver ) . Its extension to any other type of cell or body is based on the same principles . The advancement of the body from time t to t + 1 is done through the minimization of equation ( 9 ) . The main constituents of this equation are two categories of energies . The former follows the projective dynamics setup with quadratic energies . The latter are energies that do not belong in any particular category , but they o ﬀ er a more advanced description of the material space . Equation ( 9 ) is a typical non - linear unconstrained minimization problem for which we employ a quasi - Newton technique . To further speed - up the convergence , we deploy the LBFGS algorithm [ 43 ] that takes into consideration previous iterates and gives a better Hessian approximation based on the initial one . Moreover , given the positive deﬁniteness of (cid:101) H , d ( x ) is guaranteed to be a descent direction . However , to guarantee a su ﬃ cient and optimal decrease , we implement a popular inexact line search technique based on Armijo and curvature conditions , collectively known as Wolfe conditions . For a detailed overview on quasi - Newton techniques consider the seminal work of Nocedal & Wright [ 43 ] . Regarding the interior ﬂuid of the red blood cell ( cytoplasm ) , we simulate it implicitly by considering the global volume conservation ( incompressibility of cytoplasm ) and through the viscoelasticity of the full body as described in section 2 . 1 . 4 . The decision not to simulate the interior ﬂuid of RBCs is not because of some limitation of the computational framework but rather a matter of computational e ﬃ ciency . We could have simulated the interior ﬂuid through Palabos and subsequently to tune the viscoelastic terms to correspond to the membrane only . In this case , the global volume conservation energy has to be removed , since it would be implicitly conserved through the ﬂuid solver , while the rest of the energies ( area , bending , material ) do not have to change . Moreover , from the literature there is no indication that the simulation of the interior ﬂuid plays a crucial role on accurately reproducing the collective transport of blood cells , and for this reason we have decided to follow the more lightweight implementation path . Algorithm 1 npFEM solver : The algorithm takes the deformable body from time t → t + 1 1 : x ( 1 ) ← x n + h (cid:101) M − 1 M v n + h 2 (cid:101) M − 1 F ext (cid:46) First guess 2 : while convergence , k + + do 3 : d (cid:16) x ( k ) (cid:17) ← LBFGS (cid:16)(cid:101) H (cid:17) (cid:46) Descent direction : Algorithm 7 . 4 [ 43 ] 4 : α ← 2 5 : repeat (cid:46) Line search 6 : α ← α / 2 7 : x ( k + 1 ) ← x ( k ) + α d (cid:16) x ( k ) (cid:17) 8 : evalProjectionsAndInternalForces (cid:16) x ( k + 1 ) (cid:17) (cid:46) PD & non - PD part 9 : g (cid:16) x ( k + 1 ) (cid:17) ← evalObjective ( ) 10 : ∇ g (cid:16) x ( k + 1 ) (cid:17) ← evalGradient ( ) 11 : until Wolfe conditions 12 : end while (cid:46) Converged to x n + 1 13 : v n + 1 ← ( x n + 1 − x n ) / h 14 : DissipationTerm PostConvergence ( ) (cid:46) section 2 . 1 . 4 2 . 2 . Lattice Boltzmann Method ( LBM ) The lattice Boltzmann method ( LBM ) is employed to solve indirectly the Navier - Stokes equations . Densities of virtual particles , also known as populations , move on a regular grid / lattice and collide at the lattice nodes . The LBM originally grew out of the lattice gas models [ 44 , 45 ] and while lattice gases track particles , LBM tracks their statistical distribution . LBM is a second - order accurate solver for the weakly compressible Navier - Stokes equation , where the weak compressibility refers to errors that amplify as Mach number tends to one [ 23 ] . The basic quantity of the LBM is the discrete - velocity distribution function f i ( x , t ) , also known as particle popula - tions . It represents the density of particles with velocity { c i } q − 1 i = 0 at position x and time t . The number of populations q 10 per lattice node deﬁnes the resolution of the velocity space discretization . The points x are equally spaced in a regular 3D grid with a lattice spacing at ∆ x . By discretising the Boltzmann equation ( which describes the evolution of the continuous distribution function f ) in velocity space , physical space and time , we get the lattice Boltzmann equation ( LBE ) f i ( x , t ) ← f i ( x , t ) + Ω i ( x , t ) ( Collision ) ( 36 ) f i ( x + c i ∆ t , t + ∆ t ) = f i ( x , t ) ( Streaming ) , ( 37 ) which describes the collision and propagation of the mesoscopic particle packets . The velocities { c i } q − 1 i = 0 are specially chosen such that c i ∆ t point to a neighboring lattice site , with the consequence that populations are never trapped between nodes . For the collision operator Ω , we are using the so - called Bhatnagar - Gross - Krook ( BGK ) approach [ 46 ] Ω i ( f ) = − f i − f eqi τ , ( 38 ) which relaxes the populations towards an equilibrium f eq at a rate determined by the relaxation time τ . The dimension - less relaxation parameter τ is linked to the speed of sound c s and the physical kinematic viscosity ν by ν = c 2 s ( τ − 1 / 2 ) ∆ t , where c s = √ 1 / 3 ∆ x / ∆ t ( ∆ x , ∆ t space and time discretization , respectively ) . The equilibrium populations are given by f eqi = w i ρ (cid:32) 1 + 3 c i · u + 9 2 ( c i · u ) 2 − 3 2 u · u (cid:33) , ( 39 ) where w i are lattice weights and u is the macroscopic velocity at x and time t . In the present study , we use a 3D model with q = 19 velocities , namely D3Q19 . The lattice structure , the velocities c i and the lattice weights w i are thoroughly described in Kr¨uger and colleagues 2017 [ 23 ] . A sketch of the D3Q19 lattice is shown in Figure 2 . • Figure 2 : Sketch of the D3Q19 lattice structure on a lattice node . The macroscopic properties of the ﬂuid such as the density ρ , the velocity u and the hydrodynamic stress tensor σ can directly be recovered at each lattice node per time step as follows ρ = (cid:88) i f i , ( 40 ) ρ u = (cid:88) i c i f i , ( 41 ) σ = − p I + (cid:32) 1 2 τ − 1 (cid:33) (cid:88) i c i c i f neqi , ( 42 ) where f neqi = f i − f eqi . To further account for the presence of immersed objects , a forcing term f imm should be added to the system . The method used in the present study is proposed in Shan & Chen 1993 [ 47 ] and applies a correction to the momentum term of the equilibrium populations . The method is summarized in algorithm 2 . 2 . 3 . Immersed Boundary Method ( IBM ) The coupling between the red blood cells membrane and the blood plasma is realized through the immersed bound - ary method ( IBM ) . Essentially , the IBM imposes a no - slip boundary condition , so that each point of the surface and the ambient ﬂuid move with the same velocity . The original version of this method was developed by Peskin [ 24 , 48 ] to study heart valves . The key idea is that the surface of the deformable object is viewed as a set of Lagrangian points , 11 Algorithm 2 Lattice Boltzmann Method with forcing term ( Shan & Chen approach [ 47 ] ) 1 : Compute macroscopic properties : ρ , u 2 : Compute f imm as described in section 2 . 3 3 : Corrected velocity : u G = u + τ ∆ t f imm 4 : (cid:110) f eqi ( ρ , u G ) (cid:111) q − 1 i = 0 , q = 19 5 : Collision step 6 : Streaming Step ( t → t + 1 ) which do not have to conform with the ﬂuid mesh / lattice . The ﬂuid feels the presence of the body only via a force ﬁeld which is added to the momentum conservation equations ( see algorithm 2 ) . The interaction between the o ﬀ - lattice marker points and the ﬂuid is done via interpolation stencils , i . e . , regularized Dirac delta functions . There are many variations of the IBM [ 49 ] and in this study we are using a modiﬁed version of the multi - direct forcing method introduced by Wang and colleagues 2008 [ 50 ] , in a form close to the one proposed by Ota et al . 2012 [ 31 ] . Our goal is to compute a forcing term f imm along the immersed boundary and apply it as body force to the ﬂuid . Let us denote with x and X k the Eulerian and Lagrangian points respectively , with U k the velocity of the Lagrangian point k as computed by the solid solver ( see algorithm 1 ) and with u ∗ ( x , t ) the ﬂuid velocity as computed by equation ( 41 ) . Using the interpolation stencil , the velocity on the Lagrangian points X k is given by u ∗ ( X k , t ) = (cid:88) x u ∗ ( x , t ) W ( x − X k ) ∆ x 3 , ( 43 ) where the Dirac function W ( x , y , z ) = 1 ∆ x 3 w ( x ∆ x ) w ( y ∆ x ) w ( z ∆ x ) , ( 44 ) is the product of the 1D weight function w ( r ) =  18 (cid:16) 3 − 2 | r | + (cid:112) 1 + 4 | r | − 4 r 2 (cid:17) if | r | ≤ 1 , 18 (cid:16) 5 − 2 | r | − (cid:112) − 7 + 12 | r | − 4 r 2 (cid:17) if 1 ≤ | r | ≤ 2 , 0 otherwise . ( 45 ) The body force f imm is determined by the following iterative procedure [ 31 ] : Step 0 . Initial estimation of the body force on the Lagrangian points by f 0 ( X k , t ) = U k ( t ) − u ∗ ( X k , t ) ∆ t . ( 46 ) Step 1 . Compute the body force on the Eulerian grid at the l th iteration by considering the nearby Lagrangian points f l ( x , t ) = (cid:88) X k f l ( X k , t ) W ( x − X k ) A k , ( 47 ) where A k is the corresponding surface area of the Lagrangian point k . Step 2 . Correct the lattice velocity u l ( x , t ) = u ∗ ( x , t ) + f l ( x , t ) ∆ t , ( 48 ) Step 3 . interpolate the corrected velocity at the Lagrangian points u l ( X k , t ) = (cid:88) x u l ( x , t ) W ( x − X k ) ∆ x 3 , ( 49 ) Step 4 . update the body force of Lagrangian point X k f l + 1 ( X k , t ) = f l ( X k , t ) + U k ( t ) − u l ( X k , t ) ∆ t , ( 50 ) Step 5 . Repeat from Step 1 . 12 The above iterative procedure can be applied for as many cycles as the application demands . For the case of a single red blood cell , even one cycle gives satisfactory results . The body force computed by the last cycle on the Eulerian grid is the f imm of algorithm 2 . The immersed body force term f imm could be used as the F ext for the solid solver . However , we make use of the hydrodynamic stress tensor , equation ( 42 ) , for higher accuracy . To compute the force at the Lagrangian point k , we project the stress tensor σ onto the surface normal n k and we get F extk = ρ fluid A k (cid:88) x σ ( x ) W ( x − X k )  n ( X k ) . ( 51 ) At this point we should highlight that in the immersed boundary method the same ﬂuid covers the whole compu - tational domain . This contradicts with the existence of interior ﬂuid in the RBCs , of di ﬀ erent viscosity and density , than the exterior blood plasma . However , for our study we disregard the contribution of the interior ﬂuid on F extk by summing only the points x that are on the outside region of the bodies . For increased stability , we found out that instead of summing the contribution of the exterior Eulerian points x , it is su ﬃ cient to compute the force by considering the stress tensor of the most distant point from the Lagrangian point . Regarding the interior ﬂuid , we follow the modeling approach described in section 2 . 1 . 5 , taking into account both the incompressibility and viscosity of cytoplasm , and thereby leaving the interior ﬂow generated by the IBM as an artifact ﬂow with no signiﬁcance for our simulations . 3 . Computational Framework After the thorough presentation of each constituent of our framework , namely solid , ﬂuid and FSI solvers , it would be appropriate to put all these pieces together and see the exact order of execution for one time step : 1 . Compute the macroscopic ﬂuid properties : density ( ρ ) , momentum ( ρ u ) and stress tensor ( σ ) from equations ( 40 ) , ( 41 ) , ( 42 ) 2 . Using the stress tensor ( σ ) of the previous step , compute the external forces on the solids from the ﬂuid , i . e . , F ext ( t ) from equation ( 51 ) 3 . Apply the immersed boundary method ( IBM ) as presented in section 2 . 3 4 . Impose the immersed boundary force ( f imm ) and any other forcing term to the ﬂuid through the Shan - Chen forcing scheme as presented in algorithm 2 5 . Collide & Stream , lattice Boltzmann ( LB ) step as presented in section 2 . 2 , thus advance the ﬂuid from t to t + 1 6 . Using F ext ( t ) solve the dynamics of the immersed bodies ( blood cells ) as shown in algorithm 1 , thus advance the solids from t to t + 1 The steps above advance the whole system from t to t + 1 . These steps are repeated for m times such that m · ∆ t = physical simulated time needed . As stated by MacMeccan and colleagues [ 5 ] , the FE solver time step can be generally longer than the lattice time step . As a result , step 6 can be called every n npFEM steps . However in the current work , we set n npFEM = 1 to avoid complicating the validation of our framework . Furthermore , in the case of multiple bodies we have to consider collisions to avoid interpenetrations . The method is described in section 4 . 7 and this step is realized together with step 2 . 4 . Results In this section , we present a series of in silico experiments and compare them with their in vitro counterparts . A complete validation is thus performed , examining thoroughly all the constituents of the proposed framework . More in details , we validate the proposed RBC model disregarding any external ﬂuid , by testing a RBC under stretching and recovery in sections 4 . 1 and 4 . 2 . Following the validated deformable body model , we test the ﬂuid solver and the ﬂuid - structure interaction ( FSI ) , placing a single RBC in shear and Poiseuille ﬂows in sections 4 . 4 and 4 . 5 , while measuring suitable deformation indices . We then compare our framework against other state - of - the - art solvers in section 4 . 6 , and ﬁnally in section 4 . 7 we demonstrate the capability of our framework to cope with multiple deformable bodies , which means , its ability to examine the collective transport of cells in the blood plasma for our future research endeavours . The tuning of the deformable RBC model parameters presented in this section is minimal , since we are using well - known and tested materials to describe its mechanical and dynamical properties . Most importantly , the same set of parameters which is independent of the mesh resolution or regularity is used for all the in silico experiments . 13 Table 1 : Overview of used parameters Parameter Value ∆ x 0 . 5 µ m relaxation time τ [ 1 , 2 ] ∆ t equation ( 54 ) Skalak B , C , D 5 , 5000 , 35 pN / µ m k bending 1 pN µ m k volume 250 Rayleigh α D , β D 0 , 0 . 01 κ damping 0 . 6 IBM cycles [ 1 , 5 ] RBC mesh resolution ( surface vertices ) { 66 , 130 , 258 , 514 , 719 , 1026 } Our framework is written in C + + , it utilizes Palabos [ 30 ] for the IB - LBM parts and our own npFEM library for the solid part . The npFEM library is based on ShapeOp [ 51 ] which is an implementation of projective dynamics , freely available on the web . Currently , the complete framework is written for CPUs with extensive use of Message Passing Interface ( MPI ) , which deals with the distribution of the load to all the available cores . In forthcoming work , we will present a hybrid framework where the IB - LB parts are executed on CPUs while the npFEM solver is fully deployed on the available general purpose Graphics Processing Units ( gpGPUs ) . Extensive performance tests are to be expected with this work . For an easier overview , we provide table 1 that consolidates the most critical parameters used in our numerical experiments . 4 . 1 . Stretching experiment The in vitro stretching of RBCs is performed using the optical tweezers technique ( Dao et al . 2003 / 2006 [ 14 , 15 ] , Mills et al . 2004 [ 52 ] and Suresh et al . 2005 [ 53 ] ) , where small silica beads are attached on opposite sides of the membrane and are moved by a laser beam that traps and manipulates them . The resulting deformation leads to an extension along the longitudinal axis and compression along the transverse axis . To simulate the above stress and strain condition , we apply equal and opposite forces on selected vertices of the RBC membrane . The force is increased gradually up to 200 pN ( pN : pico Newton ) . Force increments are applied only when the red blood cell reaches an equilibrium state . The viscous properties of the membrane cannot be tested in this experiment , since we are interested in the converged equilibrium state only . The measurements taken to assess the deformation in this kind of experiment are the axial and transverse diameters . The simulation of the RBC includes all the energy terms presented in section 2 . 1 , namely the ones representing area and volume conservation , as well as the bending and the material energies . There are not many free parameters to be tuned , since we adopt the values from the original model proposed by Skalak [ 8 ] , which are B = 0 . 5 10 − 2 dyn / cm = 5 pN / µ m and C = 5 dyn / cm = 5000 pN / µ m . The C parameter corresponds to the sti ﬀ ness k i of the weight w i ( = A i k i ) of the area preservation energy presented in 2 . 1 . 2 . For the bending rigidity of the membrane we use an augmented value from the one presented in [ 19 , 21 ] , i . e . , k bending = 2 (cid:101) κ = 4 κ / √ 3 ≈ 1 pN µ m , where κ = 100 κ B T . The weight for the volume preservation can take any arbitrary , su ﬃ ciently high value . In our simulations , we chose k volume = 250 . The only free parameter to be tuned is D , which is the sti ﬀ ness of the correction term in Skalak’s energy ( see section 2 . 1 . 3 ) . We found out that D = 35 pN / µ m results in a close ﬁtting to the experimental results of [ 53 ] . As shown in Figure 3 , our model ( npFEM - continuous line ) presents a ﬁt of better quality than other solvers , especially concerning the transverse diameter at low deformations , where most of the solvers fail . The modiﬁcation of Skalak’s model adds the energy term ( λ i − 1 ) 4 D / 4 in the energy density function Ψ . This term is mainly activated whenever the stretching ratios λ i diverge from the rest state ( λ i = 1 ) . Therefore , it improves the strain - hardening behavior , whereas the original model fails to ﬁt the experimental data . The set of parameters deﬁned here is used for any other case study presented in the results section and does not depend on the underlying mesh structure . We represent our experimental results by a shaded region ( Figure 3 ) , which encompasses the output from all the tested cases with varying RBC mesh resolution , i . e . , from 66 surface vertices up to 1026 . The continuous line within the shaded region represents the case with 719 surface vertices . It is obvious that our solver is characterized by strong mesh independence which is a direct consequence of the proper discretization of the continuous energies ( a general advantage of FEM - based solvers ) . Currently , all the state - of - the - art solvers [ 19 , 21 ] are based on coarse - grained 14 2 4 6 8 10 12 14 16 18 20 0 50 100 150 200 A x i a l / T r a n s v er s e D i a m e t er [ μ m ] Stretching Force [ pN ] Suresh ( 2005 ) npFEM Hemocell ( new model ) Fedosov ( 2010 ) Skalak ( 1973 ) Figure 3 : Stretching Experiment : Comparison of our solver ( npFEM ) with the experiments of Suresh et al . [ 53 ] and other numerical solvers . The correction of Skalak’s model [ 8 ] leads to superior strain - hardening behavior compared to the original . The sub - ﬁgure presents a stretched RBC as produced by the npFEM solver . spectrin - link models which are essentially mass - viscoelastic spring systems . Their calibration is based on a method ﬁrst introduced by Dao et al . 2006 [ 15 ] and later extended by Fedosov et al . 2010 [ 19 ] , which relies on a regular two - dimensional sheet of springs , i . e . , equilateral triangular elements . In this case , the physical parameters are linked to the mesh resolution . A disadvantage is that coarser meshes cannot maintain mesh regularity and therefore these methods fail to maintain mesh independence , demanding tedious tuning of the parameters set . The time discretization is irrelevant in this kind of experiments since we are interested on the converged state of the stretched RBC . Using the backward Euler integration scheme , we guarantee unconditional stability of the simulation under any unfavorable situation , e . g . , arbitrary large time step , large deformations , extreme mesh underresolution . Indeed , Figure 3 validates this statement and shows not only how stable is the npFEM solver ( under - resolved case of 66 surface vertices ) , but also its accuracy since all the di ﬀ erent simulations fall very close to the reference solution ( experimental data ) . As stated by Siguenza and colleagues [ 12 ] , the axial and transverse diameters measured in optical tweezers ex - periments are found to be insu ﬃ cient for validation purposes . They propose other quantities such as the height or the proﬁle of the cell , which seem to be more sensitive to di ﬀ erent membrane models . Nevertheless , they conclude and agree with the ﬁndings of Dimitrakopoulos et al . 2012 [ 11 ] that the only constitutive law able to properly match the wide variety of experimental data available in the literature is Skalak’s constitutive law , a variation of which we are using for our simulations . Additionally , we decided not to include other measured quantities as it is very di ﬃ cult to ﬁnd these deformation indices in the literature and compare with . 4 . 2 . Recovery experiment Stretching experiments help us deﬁne some of the most important mechanical properties of the RBC , but they do not reveal information about the viscoelastic nature of the membrane . There are two experiments that contribute towards this direction , namely the recovery and the tank - treading . The initial stage of the recovery experiment is the axial deformation of the RBC by optical tweezers [ 54 ] , just like in the stretching experiment . When the deformation reaches the desired value , the forces are released and the time until the RBC reaches the initial state ( rest shape ) is tracked . To study the recovery experiment , Hochmuth et al . 1979 [ 55 ] introduced the time dependent elongation index e ( t ) = ( λ − λ ∞ ) ( λ 0 + λ ∞ ) ( λ + λ ∞ ) ( λ 0 − λ ∞ ) = exp  − (cid:32) t t c (cid:33) δ  , ( 52 ) 15 where λ = D A / D T ( D A and D T are the axial and transverse diameters ) , λ 0 and λ ∞ correspond to the ratios at time t = 0 and t = ∞ , t c is the characteristic recovery time , and δ is the exponent as suggested by [ 19 ] . As shown by Hochmuth et al . 1979 [ 55 ] the time rate of recovery is related mainly to the membrane viscosity and much less to the RBC cytoplasm or the outside aqueous environment . Given this observation , the numerical experiments are performed disregarding the existence of surrounding ﬂuid . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 0 200 400 600 800 1000 e Time [ msec ] Hochmuth ( 1979 ) Simulation at 5pN Simulation at 15pN Simulation at 45pN Figure 4 : RBC recovery after deformation at various stress levels and comparison with the theoretical curve ( for δ = 0 and t c = 150 msec ) . The divergence from the theoretical curve at higher stress levels is due to non - linear e ﬀ ects . As observed from Figure 4 , the emulated viscoelastic model described in section 2 . 1 . 4 ﬁts the curve of equation ( 52 ) very accurately , for δ = 0 and t c = 150 msec . As the stress levels increase , non - linear e ﬀ ects grow and a deviation from the theory is unavoidable , since it was developed for smaller deformation levels . Hochmuth suggested t c ≈ 100 − 130 msec , while H´enon et al . 1999 [ 54 ] suggested a characteristic time in the range of 100 − 300 msec where the lower bound corresponds to younger RBCs and the upper to older . Our tuning describes a RBC somewhere in the middle with t c = 150 msec , β D = 0 . 01 and κ damping = 0 . 6 . In the mass - spring solvers [ 19 , 21 ] , the viscosity of the RBC membrane is tackled through the addition of a dissi - pative force F Dij = − η v ij , where η is the membrane viscosity and v ij is the relative velocity of the spring ends . However , this forcing term has the same disadvantage as the Rayleigh damping , i . e . , it damps rigid body motions instead of only the relative ones . For example , a pure rotation produces v ij (cid:44) 0 , and thus internal forces are produced , even if they should not . This inherent drawback of F Dij has a severe impact on the dynamics of RBCs . A possible remedy would be to project the velocity di ﬀ erence v ij onto the vector separating the masses . 4 . 3 . Wheeler experiment In this experiment , as performed by Yao et al . 2001 [ 56 ] , RBCs are positioned in a shear ﬂow with their axis of symmetry perpendicular to the ﬂow velocity . The experiment , also known as wheeler experiment , takes its name from the characteristic wheel shape of the deformed RBCs . The red blood cells are submerged in a phosphate bu ﬀ ered solution ( PBS ) of low dynamic viscosity ( 0 . 707 cP ) and are submitted to a shear ﬂow with shear rates in the range of 15 − 200 s − 1 . The deformation of the RBCs is quantiﬁed via the deformation index ( DI ) given by DI = ( D max / D 0 ) 2 − 1 ( D max / D 0 ) 2 + 1 , ( 53 ) where D 0 is the initial RBC diameter ( ∼ 7 . 82 µ m ) and D max is the maximal diameter after deformation at constant shear rate . This is the ﬁrst from a series of experiments that employs the ﬂuid - structure interaction framework , which 16 is composed of the lattice Boltzmann ( LB ) ﬂuid solver , the nodal projective Finite Element ( npFE ) solid solver and the immersed boundary ( IB ) method for the coupling of the two solvers . 0 2 4 6 8 10 12 14 15 40 65 90 115 140 165 190 D e f o r m a t i o n I nd e x [ % ] Shear Rate [ s - 1 ] npFEM ( 514 mesh Res , tau 2 ) Hemocell ( new model ) Yao et al . ( 2001 ) Skalak ( 1973 ) Figure 5 : Wheeler experiment : Comparison of our framework with the experimental data of Yao et al . 2001 [ 56 ] and Hemocell solver [ 21 ] . The sub - ﬁgures show deformed RBCs under 200 s − 1 ( upper ) and 2000 s − 1 ( lower ) shear rates as produced by our computational framework . The RBC is placed at the center of the tank ( 20 × 20 × 20 µ m 3 ) with periodic boundary conditions except for the walls . The wall velocity tunes the shear rate to the desired one . The spatial discretization is ∆ x = 0 . 5 µ m , the relaxation time τ ∈ [ 1 , 2 ] , and the time step is deﬁned through the di ﬀ usive scaling formula as ∆ t = c 2 s (cid:32) τ − 1 2 (cid:33) ∆ x ν , ( 54 ) where ν is the kinematic viscosity of the ambient ﬂuid . A remark at this point is that in lattice Boltzmann simulations , if one ﬁxes the spatial discretization and the relaxation time for a given ﬂuid ( known viscosity ) , then there is no freedom over the selection of the time discretization , as it is dictated by the di ﬀ usive scaling formula . If ∆ t is not deﬁned through equation ( 54 ) , then physics are violated . However , in cases where the particle Reynolds number and the capillary number are very small , then a violation of ∆ t can lead in an acceptable deviation of the simulated dimensionless numbers from the real ones . For a detailed overview on selecting model parameters for LBM simulations , we suggest chapter 8 from Kr¨uger 2012 [ 57 ] . As seen from Figure 5 , our framework ( continuous line ) ﬁts very accurately the experimental data [ 56 ] ( reference solution to investigate accuracy of the solver ) . The continuous line corresponds to a simulation of 514 surface vertices , τ = 2 and l = 5 iterations for the IBM algorithm . The shaded region around our results encompasses all the di ﬀ erent case studies that we simulate with varying RBC mesh resolution ( from 66 to 1026 surface vertices ) , di ﬀ erent values of τ ∈ [ 1 , 2 ] and di ﬀ erent iteration steps for the IBM iterative algorithm l ∈ [ 1 , 5 ] as presented is section 2 . 3 . This region is wider than the one of Figure 3 where we do not have ﬂuid - solid interaction , nonetheless the property of mesh independence is validated once more , since all the di ﬀ erent experiments fall very close to the reference solution . The accuracy of the simulations seems more sensitive when the fully coupled framework is deployed . Essentially , the immersed boundary method introduces stricter requirements on the resolution of the di ﬀ erent solvers and how the resolutions match with each other . Nevertheless , for this single - cell case study even the under - resolved case with 66 surface vertices seems to be very close to the reference solution by Yao . At this point , we have to mention the work by Kr¨uger 2012 [ 57 ] where the author suggests that the ratio ¯ l / ∆ x , where ¯ l is the average edge length of the membrane mesh , should be somewhere between 0 . 5 and 1 . 5 . The RBC membrane with 258 vertices satisﬁes the upper bound of the above requirement and clearly the cases with 66 or 130 vertices violate this criterion . In spite of this violation , the 17 framework accurately reproduces the reference solution . On the other hand , for cases of higher hematocrit ( > 30 % ) we expect to face accuracy issues and probable instabilities . More in details , IBM demands ¯ l / ∆ x ∼ 1 to avoid ﬂuid penetrating the solid surfaces and also mesh under - resolution leads to poorly resolved collisions between bodies . This topic will be thoroughly investigated in upcoming work . The proposed solver presents also great robustness , since it withstands shear rates as high as 2000 s − 1 without any stability issues ( see Figure 5 ) . Once more , Skalak’s original formulation presents a correct behavior for small deformations but fails for higher shear rates . The modiﬁcation term , which is signiﬁcant for larger deformations , repairs the RBC behavior within the whole deformation range . It is important to point out that a modiﬁcation like the one presented by our framework cannot be easily realized by the coarse - grained spectrin link solvers , because the spring parameters are not intuitively linked to the material properties . On the contrary , the npFEM solver allows great material expressivity with minimum e ﬀ ort from the side of the user . 4 . 4 . Tank - Treading experiment Experimental observations of RBCs in shear ﬂows [ 58 , 59 , 60 , 61 ] reveal a tumbling ( T ) motion at low shear rates and tank - treading ( TT ) at higher shear rates . In this experiment , the RBC’s axis of symmetry is oriented along the ﬂow velocity and its behavior is examined for di ﬀ erent shear rates in the tank - treading regime . The ambient ﬂuid dynamic viscosity ( 5 cP ) is much larger than in the wheeler experiment . We are following the same experimental setup as Fedosov et al . 2010 [ 19 ] and Tran - Son - Tay et al . 1984 [ 60 ] . The RBC ( 258 vertices mesh resolution ) is positioned at the center of a domain 20 × 20 × 20 µ m 3 , the spatial resolution is 0 . 5 µ m and the relaxation time τ = 1 . The IBM iterations can vary from one to ﬁve without any di ﬀ erence on the resulting deformation . 0 10 20 30 40 50 50 70 90 110 130 150 170 190 f [ r a d / s ] Shear Rate [ s - 1 ] npFEM Fedosov ( 2010 ) Tran - Son - Tay et al . ( 1984 ) Figure 6 : Tank - treading frequency of a RBC in shear ﬂow . Experimental setup as described in [ 60 ] . The sub - ﬁgure presents a RBC exhibiting tank - treading as produced by our framework ( RBC mesh resolution : 258 vertices ) . Note that the investigated regime focuses on tank - treading rather than tumbling . Tran - Son - Tay et al . 1984 [ 60 ] studied this setup and deﬁned two curves of the TT frequency ( TTF ) for young and old RBCs . In the present study , we are averaging the two curves and the “error” bounds correspond to the maximum and minimum values . The TTF is calculated by tracking a bead attached on the RBC surface and counting the cycles per second ( see Figure 7 ) . Figure 6 shows an excellent agreement of our framework compared to the experimental data of [ 60 ] . Figure 7 shows that the tank treading motion is very precisely captured , while the continuous curve is qualitatively the same as compared to Fischer et al . 1978 [ 58 ] . The TT motion at higher shear rates results in a “breathing” of the RBC , i . e . , in an alternating compression - extension in the longitudinal axis as shown in Figure 7 . 18 Figure 7 : Simulated tank - treading ( TT ) by our framework . We gave a transparency to the RBC in order to track the marker whenever it is located at non - visible places . 4 . 5 . Poiseuille ﬂow experiment The ability of RBCs to travel through microcapillaries much smaller than their size is paramount for the transfer of oxygen to the organs . Thereby , the ability of a solver to simulate conﬁned ﬂows is a great advantage . Several researchers did experimental studies on the deformation of RBCs in small tubes and channels , e . g . , Tomaiuolo et al . 2011 [ 62 ] , Tsuakada et al . 2001 [ 63 ] , and Suzuki et al . 1996 [ 64 ] . The main feature of this ﬂow is the transition of the RBC biconcave shape to a parachute - like shape , which intensiﬁes as the velocity increases . A common way to quantify the deformation of the RBC in the parachute - like regime is via a deformation index deﬁned as Γ = L / D , where L is the length of the parachute ( length of the dome ) and D is the deformed diameter , with an approximate initial value of 7 . 82 µ m . Tsukada et al . 2001 [ 63 ] provide a graph where they correlate Γ with the RBC velocity . Generally for tube diameters close to the RBC diameter , Γ adopts values larger than 1 . In our numerical setup , the tube diameter is 9 . 2 µ m , the RBC velocity varies from 4 to 9 mm / s , and for all cases we achieved Γ > 1 . In Figure 8 , we present the transition from the biconcave to the parachute - like shape . The resulted shape is very close to the experimentally observed one by Tomaiuolo et al . 2011 [ 62 ] . Simulations in conﬁned spaces demand ﬁner resolutions and smaller time steps to maintain stability , and our spatial discretization consquently is chosen to be ∆ x = 1 / 3 µ m with a relaxation time τ = 1 . These stability issues are not to be confused with the unconditional stability of the npFEM solver , since they refer to the FSI coupling . The explicit coupling of the ﬂuid solver with the solid npFEM solver introduces some limitations at extreme ﬂow cases like the investigated one . With explicit coupling , we mean that the external forces on the RBC come from the positions at time t and not at t + 1 , see equation ( 2 ) for more details . The parachute - like shape is a challenging deformation to capture . Most of the solvers [ 21 , 19 ] present a parachute with Γ (cid:28) 1 , where the dome is very small . Our solver on the contrary captures the expected shape even if the employed bending rigidity is higher than the suggested one . D L Figure 8 : RBC transitioning to parachute - like shape in a tube with diameter 9 . 2 µ m as produced by our framework . 4 . 6 . Computational e ﬃ ciency Main focus of our work is the solid solver , and thus the computational e ﬃ ciency concerns the npFEM solver with respect to other well - known implementations . Currently , the state - of - the - art open - source solver for the simulation of the collective transport of cells in blood plasma is the software Hemocell [ 21 , 22 ] . The solver uses Palabos [ 30 ] for the blood plasma , the RBCs are represented as discrete element membranes ( mass - viscoelastic spring systems based on the model introduced by [ 19 ] ) , and the FSI is realized by a modiﬁed IBM introduced in Mountrakis 2015 [ 1 ] . Their framework has a proven capability of simulating multiple deformable bodies , thanks in part to the computationally 19 e ﬃ cient solid structure solver . Moreover , other state - of - the - art high - performing solvers , e . g . , Blumers et al . 2017 [ 65 ] , Rossinelli et al . 2015 [ 66 ] , use almost the same methods for the solid solver , i . e . , coarse grained spectrin - link models , and thus we focus on Hemocell which is available to the public and has many similarities on the ﬂuid & FSI parts with our computational framework . Additionally , we avoid comparisons with GPU - accelerated solid solvers ( see Blumers et al . 2017 [ 65 ] ) since it would not be fair to compare a CPU with a GPU implementation . In an upcoming project , we will present a GPU version of the npFEM solver that achieves execution time per iteration at the order of nanoseconds in contrast to the current e ﬃ ciency which is at the order of milliseconds . The reference simulation is chosen to be the wheeler experiment , presented in section 4 . 3 and both solvers are executed on the same workstation . As expected , comparing an explicit mass - viscoelastic spring system with an implicit FEM - based solver , the e ﬃ ciency comparison favors the former , as seen in table 2 . Nevertheless , and in spite of the higher complexity of the approach , the npFEM framework appears to exhibit a computational e ﬃ ciency quite close to Hemocell and consequently to any other mass - spring system solver . It is also worth noting the benchmark of the linear explicit FE solver of MacMeccan et al . 2009 [ 5 ] for which the average computational time for an update is 2 . 3 msec / step for a RBC with 254 surface vertices . A follow - up work from the same group , Reasor et al . 2011 [ 20 ] , stated that the aforementioned solver was abandoned because of accuracy issues , since it could not capture tank - treading and the parachute - like shape in conﬁned ﬂows . SV : Surface Vertices Hemocell SV : 642 npFEM SV : 258 npFEM SV : 667 Average execution time per time step [ ms / step ] 0 . 58 1 . 35 5 . 19 Table 2 : Comparison of npFEM with Hemocell [ 21 , 22 ] . The timing refers to the deformable bodies solvers . 4 . 7 . Proof of Capability Recapitulating the performance tests of our solver , one can observe that the extension to ﬂows of multiple RBCs should not be a problem . Indeed , with a computational time per update very close to the one of mass - spring systems , and with proven capability of the latter to scale well with increasing number of deformable bodies [ 67 ] , we present Poiseuille and shear ﬂows with O ( 10 2 ) RBCs . The deliberately small number of RBCs helps us present the rich dynamics of individual RBCs produced by our framework . Studies with larger numbers of RBCs and higher hematocrit will be part of upcoming work . Furthermore , dealing with vessels of few micrometers , the hematocrit is by deﬁnition low . As stated by Zhao & Shaqfeh 2011 [ 68 ] , although the normal range of human body hematocrit is 40 % - 50 % , the local hematocrit drops signiﬁcantly in small vessels and is only about 40 % of the body average at 30 µ m vessel diameter . Hence the mean hematocrit in this study is chosen to be around 20 % . To run a case with multiple RBCs in a robust manner , we need on top of our framework a collision detection / handling system . Regarding the collision detection , there are two stages . In the ﬁrst , Palabos [ 30 ] uses an e ﬃ cient data structure for identifying , for each vertex of the examined RBC , neighboring vertices on other RBCs . The algorithm is based on the idea that all RBC vertices are attached to a closely located ﬂuid cell , allowing to e ﬃ ciently locate them on ground of their spatial position . At the second stage , npFEM solver builds a local kd - tree [ 69 ] for an even faster collision detection system , reducing the colliding data received from Palabos . The collision handling ﬁts naturally in our solver in the sense that whenever a collision is detected , a collision energy / force is added to the non - PD part of our solver ( see equations ( 9 ) and ( 10 ) ) acting upon the vertex under collision . Every colliding point has a desired position ( p i ) which is deﬁned from the colliding neighbors and their normals . Thus the collision energy and force are deﬁned as E non − PD i = w col 2 | | p i − x i | | 2 F , ( 55 ) F non − PD i = w col ( p i − x i ) , ( 56 ) where w col is the weight of the collision term in the optimization problem . An important precaution is that at every iteration of the solver , the algorithm checks if x i still penetrates the neighboring body . If it does not , the corresponding collision term is cancelled . This procedure avoids sticking of the bodies , which would be unrealistic . The collision energies and forces have no contribution to the Hessian approximation matrix ( (cid:101) M / h 2 + L ) and thus they may increase the convergence steps . However , after extensive testing , we found out that because of the small time steps ( limitation introduced by the explicit nature of LBM ) , the collision handling process has no measurable impact on the total com - putational time . While the suggested collision energies favor simplicity over accuracy , any other type of energy can 20 replace our simple spring - like equation . The e ﬃ cient handling of collisions is one of the striking advantages of our method , as other frameworks such as Hemocell [ 21 ] skip collision detection , and rely on a su ﬃ cient ﬂuid resolution to avoid collisions thanks to lubrication e ﬀ ects . Both Poiseuille and shear ﬂows are executed on a regular lattice of size 32 × 32 × 80 µ m 3 with periodic boundary conditions except from the walls . The spatial discretization for the blood plasma is 0 . 5 µ m , the LBM relaxation time τ = 1 , the dynamic viscosity of the blood plasma ∼ 1 . 2 cP , and the time discretization is computed from equation ( 54 ) . The Poiseuille ﬂow as seen in Figure 9 consists of 123 RBCs ( 258 surface vertices each ) inside a tube of 15 . 75 µ m radius at a hematocrit of ∼ 20 % . The shear ﬂow as seen in Figure 10 consists of 123 RBCs ( 258 surface vertices each ) at a hematocrit of ∼ 14 % . The shear rate of the simulation is 500 s − 1 . The npFEM solver has the capability to be executed independently of the ﬂuid solver , using a larger time step , and thus speeding up substantially the overall simulation time . This useful capability is backed by the increased stability of our deformable bodies solver given its implicit nature . Additionally , the implicit Euler introduces a small numerical dissipation which is beneﬁcial for the coupling . The upper limit on the solid solver time step is indirectly imposed by the collision resolution . Large time steps of the npFEM solver may lead to a potential under - resolution of the collisions detection , and thus interpenetrations may be observed , although the overall stability of the collective transport is not a ﬀ ected . 0 8 16 24 32 0 0 . 8 1 . 6 2 . 4 3 . 2 C h a nn e l h e i g h t [ μ m ] Velocity at flow direction [ mm / s ] Figure 9 : Simulated Poiseuille ﬂow with no interpenetrations . The marked red blood cell ( in red ) has developed a multilobe shape as described in Lanotte et al . 2016 [ 70 ] . The graph shows a temporal average of the velocity at the ﬂow direction in the middle of the tube . 0 8 16 24 32 - 8 - 4 0 4 8 C h a nn e l h e i g h t [ μ m ] Velocity at flow direction [ mm / s ] Figure 10 : Simulated shear ﬂow at shear rate 500 s − 1 . The graph shows a temporal average of the velocity at the ﬂow direction in the middle of the channel . 21 5 . Conclusion We presented a novel , highly accurate and robust model for the description of the mechanical , rheological and dy - namical properties of red blood cells . The model is characterized by generality , robustness , accuracy and performance , fulﬁlling all the criteria we consider to be critical aspects for a universal model . To our knowledge , the npFEM solver is a novel approach in the ﬁeld of computational biophysics to simulate viscoelastic bodies . The solver is independent of mesh resolution or mesh regularity and just one set of parameters can accurately describe the behavior of the body for our full range of case studies . Its extension from a thin - shell model to fully 3D bodies with internal structure and to any type of cells ( platelets , white blood cells ) is trivial based on the principles discussed at section 2 . 1 . The performance of the new continuum - based solver is very close to other state - of - the - art mesoscopic solvers , and thus we managed to bridge the computational gap which was the main obstacle for using the former models . The framework that combines the npFEM solver , the ﬂuid solver and the FSI is versatile , highly modular and reliable , allowing the user to extend it based on other preferred numerical methods , as well . As the number of the coupled models is increased , it is not uncommon that the quality of the output decreases . In our case however , extensive validation for many single RBC test cases showed a close match with the experimental data for multiple scenarios . In the future , based on the proof of capability ( see section 4 . 7 ) , we plan to validate the framework for multiple RBCs test cases and further investigate its scaling with an increasing number of various deformable bodies . Of special interest would be to investigate reduced basis ﬁnite elements techniques , that would lead to an even faster deformable bodies solver . Finally , our npFEM solver with its modular interface on evaluating energies and forces could allow an e ﬃ cient porting of the code to a general - purpose GPU platform . Funding This project has received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 675451 ( CompBioMed project ) . Acknowledgements We acknowledge support from the PASC project 2017 - 2020 : Virtual Physiological Blood : an HPC framework for blood ﬂow simulations in vasculature and in medical devices . Appendix A . Alternating solver The minimization of the objective function ( 7 ) with strictly quadratic potential energies is performed using an alternating ( local / global ) solver . In the local step , x is ﬁxed while the projections p per element are computed . In the global step , p is ﬁxed and the minimum of g is found by equating its gradient to zero : ∇ g ( x n + 1 ) = 1 h 2 (cid:101) M ( x n + 1 − y n ) + L x n + 1 − J p = 0 , ( A . 1 ) so x ∗ n + 1 = (cid:16)(cid:101) M / h 2 + L (cid:17) − 1 (cid:16) J p + (cid:101) M y n / h 2 (cid:17) . ( A . 2 ) The matrix (cid:101) M / h 2 + L is symmetric positive deﬁnite and thus x ∗ n + 1 is a global minimum for ﬁxed projections . The above scheme is guaranteed to converge monotonically to a minimum . The local step decreases each constraint keeping ﬁxed the vector x . The global step , keeping p ﬁxed , ﬁnds a compromise of the new state towards the projected positions and thus minimizes the objective function . Consequently , this sequence is non - increasing and bounded from below ( minimization of Frobenius norms ) . The local / global steps are repeated until convergence is satisﬁed ( typically below 10 iterations ) . This alternating solver is a special case of the quasi - Newton method presented in section 2 . 1 . Using the same Hessian approximation (cid:101) H = (cid:101) M / h 2 + L , it is revealed that the descent direction d : d = − (cid:16)(cid:101) M / h 2 + L (cid:17) − 1 ∇ g ( x ) = x ∗ − x . ( A . 3 ) 22 Thus , projective dynamics can be viewed as a quasi - Newton method that computes the next iterate as x + d . For normal quasi - Newton methods , we have to use line search techniques to ﬁnd α such that x + α d reduces the objective function as much as possible [ 43 ] . The particularity of PD is that α = 1 [ 25 ] and thus there is no need for line search techniques . At this point , we must highlight that the choice of (cid:101) H is inspired by the local / global solver , as seen from equation ( A . 2 ) , and thus it is deeply rooted in projective dynamics . Appendix B . FEM reminder When an object deforms , every material point X ( undeformed state ) is displaced to a new deformed location x . The deformation function φ : R 3 → R 3 maps every material point to its respective deformed location , such that x = φ ( X ) . The Jacobian matrix of the deformation function ∂ φ / ∂ X is an important physical quantity for describing elastic bodies and is called deformation gradient F . Let us focus on a triangular element isometrically embedded in R 2 . The deformation function can be deﬁned to be a piecewise linear function ˆ φ ( approximation of φ ) over the element . In more details , for the triangular elements we have [ 32 ] ˆ φ ( X ) = A X + b , ( B . 1 ) where A & b are element speciﬁcs . Di ﬀ erentiating equation ( B . 1 ) with respect to X , we conclude that the deformation gradient F = ∂ ˆ φ / ∂ X = A is constant for the element . Let us denote with (cid:126) X 1 , (cid:126) X 2 , (cid:126) X 3 the undeformed vertex positions of an arbitrary triangular element , and let (cid:126) x 1 , (cid:126) x 2 , (cid:126) x 3 be the deformed counterparts . Each vertex must satisfy the deformation function  (cid:126) x 1 = F (cid:126) X 1 + (cid:126) b (cid:126) x 2 = F (cid:126) X 2 + (cid:126) b (cid:126) x 3 = F (cid:126) X 3 + (cid:126) b  ⇒ (cid:40) (cid:126) x 1 − (cid:126) x 3 = F ( (cid:126) X 1 − (cid:126) X 3 ) (cid:126) x 2 − (cid:126) x 3 = F ( (cid:126) X 2 − (cid:126) X 3 ) (cid:41) , ( B . 2 ) a more compact form reveals that (cid:104) (cid:126) x 1 − (cid:126) x 3 (cid:126) x 2 − (cid:126) x 3 (cid:105) = F (cid:104) (cid:126) X 1 − (cid:126) X 3 (cid:126) X 2 − (cid:126) X 3 (cid:105) , ( B . 3 ) D s = F D m . ( B . 4 ) Consequently , the deformation gradient F ∈ R 2 × 2 of an arbitrary triangular element embedded in R 2 is F = D s D − 1 m . ( B . 5 ) Of special interest is the derivation of various strain tensors from the deformation gradient . The Green strain tensor is given by E = 1 2 (cid:16) F T F − I (cid:17) , ( B . 6 ) while for small deformations , the inﬁnitesimal strain tensor is given by (cid:15) = 1 2 (cid:16) F + F T (cid:17) − I . ( B . 7 ) References [ 1 ] L . Mountrakis , Transport of blood cells studied with fully resolved models , Ph . D . thesis , University of Amster - dam , 2015 . URL : http : / / hdl . handle . net / 11245 / 1 . 485135 . [ 2 ] G . Tomaiuolo , Biomechanical properties of red blood cells in health and disease towards microﬂuidics , Biomi - croﬂuidics 8 ( 2014 ) 51501 . [ 3 ] E . A . Evans , R . Skalak , Mechanics and Thermodynamics of Biomembranes , 1st ed . , Boca Raton , 1980 . [ 4 ] T . Kr¨uger , F . Varnik , D . Raabe , E ﬃ cient and accurate simulations of deformable particles immersed in a ﬂuid using a combined immersed boundary lattice boltzmann ﬁnite element method , Computers and Mathematics with Applications 61 ( 2011 ) 3485 – 3505 . 23 [ 5 ] R . M . Macmeccan , J . R . Clausen , G . P . Neitzel , C . K . Aidun , Simulating deformable particle suspensions using a coupled lattice - boltzmann and ﬁnite - element method , Journal of Fluid Mechanics 618 ( 2009 ) 13 – 39 . [ 6 ] S . Shrivastava , J . Tang , Large deformation ﬁnite element analysis of non - linear viscoelastic membranes with reference to thermoforming , The Journal of Strain Analysis for Engineering Design 28 ( 1993 ) 31 – 51 . [ 7 ] T . Kl¨oppel , W . A . Wall , A novel two - layer , coupled ﬁnite element approach for modeling the nonlinear elastic and viscoelastic behavior of human erythrocytes , Biomechanics and Modeling in Mechanobiology 10 ( 2011 ) 445 – 459 . [ 8 ] R . Skalak , A . Tozeren , R . P . Zarda , S . Chien , Strain energy function of red blood cell membranes , Biophysical journal 13 ( 1973 ) 245 – 264 . [ 9 ] J . Bonet , R . D . Wood , Nonlinear Continuum Mechanics for Finite Element Analysis , 2nd ed . , Cambridge Uni - versity Press , 2008 . doi : 10 . 1017 / CBO9780511755446 . [ 10 ] O . H . Yeoh , Characterization of elastic properties of carbon - black - ﬁlled rubber vulcanizates , Rubber Chemistry and Technology 63 ( 1990 ) 792 – 805 . [ 11 ] P . Dimitrakopoulos , Analysis of the variation in the determination of the shear modulus of the erythrocyte membrane : E ﬀ ects of the constitutive law and membrane modeling , Physical review . E , Statistical , nonlinear , and soft matter physics 85 ( 2012 ) . [ 12 ] J . Sig¨uenza , S . Mendez , F . Nicoud , How should the optical tweezers experiment be used to characterize the red blood cell membrane mechanics ? , Biomechanics and Modeling in Mechanobiology 16 ( 2017 ) 1645 – 1657 . [ 13 ] D . E . Discher , D . H . Boal , S . K . Boey , Simulations of the erythrocyte cytoskeleton at large deformation . mi - cropipette aspiration , Biophysical Journal 75 ( 1998 ) 1584 – 1597 . [ 14 ] M . Dao , C . T . Lim , S . Suresh , Mechanics of the human red blood cell deformed by optical tweezers , Journal of the Mechanics and Physics of Solids 51 ( 2003 ) 2259 – 2280 . [ 15 ] M . Dao , J . Li , S . Suresh , Molecularly based analysis of deformation of spectrin network and human erythrocyte , Materials Science and Engineering C 26 ( 2006 ) 1232 – 1244 . [ 16 ] J . Li , M . Dao , C . T . Lim , S . Suresh , Spectrin - level modeling of the cytoskeleton and optical tweezers stretching of the erythrocyte , Biophysical journal 88 ( 2005 ) 3707 – 3719 . [ 17 ] I . V . Pivkin , G . E . Karniadakis , Accurate coarse - grained modeling of red blood cells , Physical Review Letters 101 ( 2008 ) 1 – 4 . [ 18 ] M . M . Dupin , I . Halliday , C . M . Care , L . Alboul , L . L . Munn , Modeling the ﬂow of dense suspensions of deformable particles in three dimensions , Physical review E 75 ( 2007 ) . [ 19 ] D . A . Fedosov , B . Caswell , G . E . Karniadakis , A multiscale red blood cell model with accurate mechanics , rheology , dynamics , Biophysical Journal 98 ( 2010 ) 2215 – 2225 . [ 20 ] D . A . Reasor , J . R . Clausen , C . K . Aidun , Coupling the lattice - boltzmann and spectrin - link methods for the direct numerical simulation of cellular blood ﬂow , International Journal for Numerical Methods in Fluids 68 ( 2011 ) 767 – 781 . [ 21 ] G . Z´avodszky , B . van Rooij , V . Azizi , A . Hoekstra , Cellular level in - silico modeling of blood rheology with an improved material model for red blood cells , Frontiers in Physiology 8 ( 2017 ) 1 – 14 . [ 22 ] G . Zavodszky , B . van Rooij , V . Azizi , S . Alowayyed , A . Hoekstra , Hemocell : a high - performance microscopic cellular library , Procedia Computer Science 108 ( 2017 ) 159 – 165 . [ 23 ] T . Kr¨uger , H . Kusumaatmaja , A . Kuzmin , O . Shardt , G . Silva , E . M . Viggen , The Lattice Boltzmann Method , 2017 . URL : http : / / link . springer . com / 10 . 1007 / 978 - 3 - 319 - 44649 - 3 . 24 [ 24 ] C . S . Peskin , Flow patterns around heart valves : A numerical method , Journal of Computational Physics 10 ( 1972 ) 252 – 271 . [ 25 ] T . Liu , S . Bouaziz , L . Kavan , Quasi - newton methods for real - time simulation of hyperelastic materials , ACM Trans . Graph . 36 ( 2017 ) . [ 26 ] S . Bouaziz , S . Martin , T . Liu , L . Kavan , M . Pauly , Projective dynamics : Fusing constraint projections for fast simulation , ACM Trans . Graph . 33 ( 2014 ) 154 : 1 – 154 : 11 . [ 27 ] K . J . Bathe , A . P . Cimento , Some practical procedures for the solution of nonlinear ﬁnite element equations , Computer Methods in Applied Mechanics and Engineering 22 ( 1980 ) 59 – 85 . [ 28 ] J . Fish , M . Pandheeradi , V . Belsky , An e ﬃ cient multilevel solution scheme for large scale non - linear systems , International Journal for Numerical Methods in Engineering 38 ( 1995 ) 1597 – 1610 . [ 29 ] A . Quarteroni , Numerical Models for Di ﬀ erential Problems , Springer - Verlag Mailand , 2009 . doi : 10 . 1007 / 978 - 88 - 470 - 1071 - 0 . [ 30 ] Palabos , http : / / www . palabos . org , 2017 . [ 31 ] K . Ota , K . Suzuki , T . Inamuro , Lift generation by a two - dimensional symmetric ﬂapping wing : Immersed boundary - lattice boltzmann simulations , Fluid Dynamics Research 44 ( 2012 ) . [ 32 ] E . Sifakis , J . Barbic , Fem simulation of 3d deformable solids : A practitioner’s guide to theory , discretization and model reduction , in : ACM SIGGRAPH 2012 Courses , SIGGRAPH ’12 , ACM , 2012 . URL : http : / / doi . acm . org / 10 . 1145 / 2343483 . 2343501 . [ 33 ] T . Liu , Towards real - time simulation of hyperelastic materials , Ph . D . thesis , University of Pennsylvania , 2018 . [ 34 ] M . Botsch , L . Kobbelt , M . Pauly , P . Alliez , B . Levy , Polygon mesh processing , A K Peters , 2010 . [ 35 ] A . Guckenberger , M . P . Schraml , P . G . Chen , M . Leonetti , S . Gekle , On the bending algorithms for soft objects in ﬂows , Computer Physics Communications 207 ( 2016 ) 1 – 23 . [ 36 ] J . Bender , M . M¨uller , M . Macklin , Position - based simulation methods in computer graphics ( 2017 ) . [ 37 ] K . C . Valanis , R . F . Landel , The strain - energy function of a hyperelastic material in terms of the extension ratios , Journal of Applied Physics 38 ( 1967 ) 2997 – 3002 . [ 38 ] H . Xu , F . Sin , Y . Zhu , J . Barbiˇc , Nonlinear material design using principal stretches , ACM Trans . Graph . 34 ( 2015 ) 75 : 1 – 75 : 11 . [ 39 ] D . C . Drucker , A deﬁnition of stable inelastic material , Technical Report , Brown University , 1957 . [ 40 ] J . Li , T . Liu , L . Kavan , Laplacian damping for projective dynamics , in : VRIPHYS2018 : 14th Workshop on Virtual Reality Interaction and Physical Simulation , 2018 . [ 41 ] M . M¨uller , B . Heidelberger , M . Hennix , J . Ratcli ﬀ , Position based dynamics , Journal of Visual Communication and Image Representation 18 ( 2007 ) 109 – 118 . [ 42 ] J . Semblat , Rheological interpretation of rayleigh damping , Journal of Sound and Vibration 206 ( 1997 ) 741 – 744 . [ 43 ] J . Nocedal , S . J . Wright , Numerical Optimization , 2006 . URL : http : / / link . springer . com / 10 . 1007 / 978 - 0 - 387 - 40065 - 5 . [ 44 ] J . Hardy , Y . Pomeau , O . de Pazzis , Time evolution of a two - dimensional model system . i . invariant states and time correlation functions , Journal of Mathematical Physics 14 ( 1973 ) 1746 – 1759 . [ 45 ] U . Frisch , B . Hasslacher , Y . Pomeau , Lattice - gas automata for the navier - stokes equation , Physical Review Letters 56 ( 1986 ) 1505 – 1508 . 25 [ 46 ] P . L . Bhatnagar , E . P . Gross , M . Krook , A model for collision processes in gases . small amplitude processes in charged and neutral one - component systems , Physical Review 94 ( 1954 ) 511 – 525 . [ 47 ] X . Shan , H . Chen , Lattice boltzmann model for simulating ﬂows with multiple phases and components , Physical Review E 47 ( 1993 ) 1815 – 1819 . [ 48 ] C . S . Peskin , The immersed boundary method , Acta Numerica 11 ( 2002 ) 479 – 517 . [ 49 ] R . Mittal , G . Iaccarino , Immersed boundary methods , Annual Review of Fluid Mechanics 37 ( 2005 ) 239 – 261 . [ 50 ] Z . Wang , J . Fan , K . Luo , Combined multi - direct forcing and immersed boundary method for simulating ﬂows with moving particles , International Journal of Multiphase Flow 34 ( 2008 ) 283 – 302 . [ 51 ] Shapeop , https : / / www . shapeop . org / , 2014 . [ 52 ] J . P . Mills , L . Qie , M . Dao , C . T . Lim , S . Suresh , Nonlinear elastic and viscoelastic deformation of the human red blood cell with optical tweezers . , Mechanics & chemistry of biosystems 1 ( 2004 ) 169 – 80 . [ 53 ] S . Suresh , J . Spatz , J . Mills , A . Micoulet , M . Dao , C . Lim , M . Beil , T . Seu ﬀ erlein , Connections between single - cell biomechanics and human disease states : gastrointestinal cancer and malaria , Acta Biomaterialia 1 ( 2005 ) 15 – 30 . [ 54 ] S . Henon , G . Lenormand , A . Richert , A new determination of the shear modulus of the human erythrocyte , Biophysical Journal 76 ( 1999 ) 1145 – 1151 . [ 55 ] R . M . Hochmuth , P . R . Worthy , E . A . Evans , Red cell extensional recovery and the determination of membrane viscosity , Biophysical Journal 26 ( 1979 ) 101 – 114 . [ 56 ] W . Yao , Z . Wen , Z . Yan , D . Sun , W . Ka , L . Xie , S . Chien , Low viscosity ektacytometry and its validation tested by ﬂow chamber , Journal of Biomechanics 34 ( 2001 ) 1501 – 1509 . [ 57 ] T . Kr¨uger , Computer Simulation Study of Collective Phenomena in Dense Suspensions of Red Blood Cells under Shear , Vieweg + Teubner Verlag , 2012 . doi : 10 . 1007 / 978 - 3 - 8348 - 2376 - 2 . [ 58 ] T . M . Fischer , M . Stohr - Lissen , H . Schmid - Schonbein , The red cell as a ﬂuid droplet : tank tread - like motion of the human erythrocyte membrane in shear ﬂow , Science 202 ( 1978 ) 894 – 896 . [ 59 ] T . M . Fischer , Tank - tread frequency of the red cell membrane : Dependence on the viscosity of the suspending medium , Biophysical Journal 93 ( 2007 ) 2553 – 2561 . [ 60 ] R . Tran - Son - Tay , S . P . Sutera , P . R . Rao , Determination of red blood cell membrane viscosity from rheoscopic observations of tank - treading motion , Biophysical journal 46 ( 1984 ) 65 – 72 . [ 61 ] M . Abkarian , M . Faivre , A . Viallat , Swinging of red blood cells under shear ﬂow , Physical Review Letters 98 ( 2007 ) 2 – 5 . [ 62 ] G . Tomaiuolo , M . Barra , V . Preziosi , A . Cassinese , B . Rotoli , S . Guido , Microﬂuidics analysis of red blood cell membrane viscoelasticity , Lab on a Chip 11 ( 2011 ) 449 – 454 . [ 63 ] K . Tsukada , E . Sekizuka , C . Oshio , H . Minamitani , Direct measurement of erythrocyte deformability in diabetes mellitus with a transparent microchannel capillary model and high - speed video camera system , Microvascular Research 61 ( 2001 ) 231 – 239 . [ 64 ] Y . Suzuki , N . Tateishi , M . Soutani , N . Maeda , Deformation of erythrocytes in microvessels and glass capillaries : E ﬀ ects of erythrocyte deformability , Microcirculation 3 ( 1996 ) 49 – 57 . [ 65 ] A . L . Blumers , Y . - H . Tang , Z . Li , X . Li , G . E . Karniadakis , Gpu - accelerated red blood cells simulations with transport dissipative particle dynamics , Computer Physics Communications 217 ( 2017 ) 171 – 179 . 26 [ 66 ] D . Rossinelli , Y . - H . Tang , K . Lykov , D . Alexeev , M . Bernaschi , P . Hadjidoukas , M . Bisson , W . Joubert , C . Conti , G . Karniadakis , M . Fatica , I . Pivkin , P . Koumoutsakos , The in - silico lab - on - a - chip : Petascale and high - throughput simulations of microﬂuidics at cell resolution , in : Proceedings of the International Conference for High Performance Computing , Networking , Storage and Analysis , SC ’15 , ACM , 2015 , pp . 2 : 1 – 2 : 12 . URL : http : / / doi . acm . org / 10 . 1145 / 2807591 . 2807677 . [ 67 ] L . Mountrakis , E . Lorenz , O . Malaspinas , S . Alowayyed , B . Chopard , A . G . Hoekstra , Parallel performance of an ib - lbm suspension simulation framework , Journal of Computational Science 9 ( 2015 ) 45 – 50 . [ 68 ] H . Zhao , E . S . G . Shaqfeh , Shear - induced platelet margination in a microchannel , Phys . Rev . E 83 ( 2011 ) 061924 . [ 69 ] J . L . Blanco , P . K . Rai , nanoﬂann : a C + + header - only fork of FLANN , a library for nearest neighbor ( NN ) with kd - trees , https : / / github . com / jlblancoc / nanoflann , 2014 . [ 70 ] L . Lanotte , J . Mauer , S . Mendez , D . A . Fedosov , J . - M . Fromental , V . Claveria , F . Nicoud , G . Gompper , M . Abkar - ian , Red cells’ dynamic morphologies govern blood shear thinning under microcirculatory ﬂow conditions , Pro - ceedings of the National Academy of Sciences 113 ( 2016 ) 13289 – 13294 . 27