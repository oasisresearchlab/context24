- Also a $ liated with the Institute for the Study of Learning and Expertise , 2164 Staunton Court , Palo Alto , CA 94306 , USA . Int . J . Human - Computer Studies ( 2000 ) 53 , 393 } 410 doi : 10 . 1006 / ijhc . 2000 . 0396 Available online at http : / / www . idealibrary . com on The computational support of scientific discovery P AT L ANGLEY - Adapti v e Systems Group , DaimlerChrysler Research and Technology Center , 1510 Page Mill Road , Palo Alto , CA 94304 , USA . e - mail : langley @ rtna . daimlerchrysler . com ( Recei v ed 8 March 2000 ; accepted 10 May 2000 ) In this paper , we review AI research on computational discovery and its recent applica - tion to the discovery of new scienti " c knowledge . We characterize " ve historical stages of the scienti " c discovery process , which we use as an organizational framework in describ - ing applications . We also identify " ve distinct steps during which developers or users can in # uence the behavior of a computational discovery system . Rather than criticizing such intervention , as done in the past , we recommend it as the preferred approach to using discovery software . As evidence for the advantages of such human } computer coopera - tion , we report seven examples of novel , computer - aided discoveries that have appeared in the scienti " c literature . We consider brie # y the role that humans played in each case , then examine one such interaction in more detail . We close by recommending that future systems provide more explicit support for human intervention in the discovery process . ( 2000 Academic Press 1 . Introduction The process of scienti " c discovery has long been viewed as the pinnacle of creative thought . Thus , to many people , including some scientists themselves , it seems an unlikely candidate for automation by computer . However , over the past two decades , researchers in arti " cial intelligence have repeatedly questioned this attitude and attempted to develop intelligent artifacts that replicate the act of discovery . The computational study of scienti " c discovery has made important strides in its short history , some of which we review in this paper . Arti " cial intelligence often gets its initial ideas from observing human behavior and attempting to model these activities . Computational scienti " c discovery is no exception , as early research focused on replicating discoveries from the history of disciplines as diverse as mathematics ( Lenat , 1997 ) , physics ( Langley , 1981 ) , chemistry ( Z 0 ytkow & Sim - on , 1986 ) , and biology ( Kulkarni & Simon , 1990 ) . As the collection by Shrager and Langley ( 1990 ) reveals , these e ! orts also had considerable breadth in the range of scienti " c activities they attempted to model , though most work aimed to replicate the historical record only at the most abstract level . Despite the explicit goals of this early 1071 - 5819 / 00 / 090393 # 18 $ 35 . 00 / 0 ( 2000 Academic Press research , some critics ( e . g . , Gillies , 1996 ) have questioned progress in the area because it dealt with scienti " c laws and theories already known to the developers . Although many researchers have continued their attempts to reproduce historical discoveries , others have turned their energies toward the computational discovery of new scienti " c knowledge . As with the historical research , this applied work covers a broad range of disciplines , including mathematics , astronomy , metallurgy , physical chemistry , biochemistry , medicine , and ecology . Many of these e ! orts have led to refereed publica - tions in the relevant scienti " c literature , which seems a convincing measure of their accomplishment . Our aim here is to examine some recent applications of computational scienti " c discovery and to analyse the reasons for their success . We set the background by reviewing the major forms that discovery takes in scienti " c domains , giving a framework to organize the later discussion . After this , we consider steps in the larger discovery process at which humans can in # uence the behavior of a computational discovery system . We then turn to seven examples of computer - aided discoveries that have produced scienti " c publications . In each case , we examine brie # y the role played by the developer or user , then discuss the interactions with one such system at greater length . In closing , we consider directions for future work , emphasizing the need for discovery aids that explicitly encourage interaction with humans . 2 . Stages of the discovery process The history of science reveals a variety of distinct types of discovery activity , ranging from the detection of empirical regularities to the formation of deeper theoretical accounts . Generally speaking , these activities tend to occur in a given order within a " eld , in that the products of one process in # uence or constrain the behavior of successors . Of course , science is not a strictly linear process , so that earlier stages may be revisited in the light of results from a later stage , but the logical relation provides a convenient framework for discussion . Perhaps the earliest discovery activity involves the formation of taxonomies . Before one can formulate laws or theories , one must " rst establish the basic concepts or categories one hopes to relate . An example comes from the early history of chemistry , when scientists agreed to classify some chemicals as acids , some as alkalis and still others as salts based on observable properties like taste . Similar groupings have emerged in other " elds like astronomy and physics , but the best - known taxonomies come from biology , which groups living entities into categories and subcategories in a hierarchical manner . Once they have identi " ed a set of entities , scientists can begin to discover qualitative laws that characterize their behavior or that relate them to each other . For example , early chemists found that acids tended to react with alkalis to form salts , along with similar connections among other classes of chemicals . Some qualitative laws describe static relations , whereas others summarize events like reactions that happen over time . Again , this process can occur only after a " eld has settled on the basic classes of entities under consideration . A third scienti " c activity aims to discover quantitative laws that state mathematical relations among numeric variables . For instance , early chemists identi " ed the relative 394 P . LANGLEY masses of hydrochloric acid and sodium hydrochloride that combine to form a unit mass of sodium chloride . This process can also involve postulating the existence of an intrinsic property like density or speci " c heat , as well as estimating the property ’ s value for speci " c entities . Such numeric laws are typically stated in the context of some qualitative relationship that places constraints on their operation . Scientists in most " elds are not content with empirical summaries and so try to explain such regularities , with the most typical " rst step involving the creation of structural models that incorporate unobserved entities . Thus , nineteenth century chemists like Dalton and Avogadro postulated atomic and molecular models of chemicals to account for the numeric proportions observed in reactions . Initial models of this sort are typically qualitative in nature , stating only the components and their generic relations , but later models often incorporate numeric descriptions that provide further constraints . Both types of models are closely tied to the empirical phenomena they are designed to explain . Eventually , most scienti " c disciplines move beyond structural models to process models , which explain phenomena in terms of hypothesized mechanisms that involve change over time . One well - known process account is the kinetic theory of gases , which explains the empirical relations among gas volume , pressure and temperature in terms of interactions among molecules . Again , some process models ( like those in geology ) are mainly qualitative , while others ( like the kinetic theory ) include numeric components , but both types make contact with empirical laws that one can derive from them . In the past two decades , research in automated scienti " c discovery has addressed each of these " ve stages . Clustering systems like C LUSTER / 2 ( Michalski & Stepp , 1983 ) , A UTO C LASS ( Cheeseman , Freeman , Kelly , Self , Stutz & Taylor , 1988 ) and R E TAX ( Alberdi & Sleeman , 1997 ) deal with the task of taxonomy formation , whereas systems like NG LAUBER ( Jones , 1986 ) search for qualitative relations . Starting with B ACON ( Langley , 1981 ; Langley , Simon , Bradshaw , & Z 0 ytkow , 1987 ) , researchers have developed a great variety of systems that discover numeric laws . Systems like D ALTON ( Langley et al . , 1987 ) , S TAHLP ( Rose & Langley , 1987 ) and G ELL - M ANN ( Z 0 ytkow , 1996 ) formulate structural models , whereas a smaller group , like M ECHEM ( Valde H s - Pe H rez , 1995 ) and A STRA ( Kocabas & Langley , 1998 ) , instead construct process models . A few systems , such as Lenat ’ s ( 1977 ) AM , Nordhausen and Langley ’ s IDS ( 1993 ) and Kulkarni and Simon ’ s ( 1990 ) K EKADA , deal with more than one of these facets , but most contributions have focused on one stage to the exclusion of others . Although the work to date has emphasized rediscovering laws and models from the history of science , we will see that a similar bias holds for e ! orts at " nding new scienti " c knowledge . We suspect that integrated discovery applications will be developed , but only once the focused e ! orts that already exist have become more widely known . This framework is not the only way to categorize scienti " c activity , but it appears to have general applicability across di ! erent " elds , so we will use it to organize our presentation of applied discovery work . The scheme does favor methods that generate the types of formalisms reported in the scienti " c literature , and thus downplays the role of mainstream techniques from machine learning . For example , decision - tree induction , neural networks and nearest neighbor have produced quite accurate predictors in scienti " c domains like molecular biology ( Hunter , 1993 ) , but they employ quite di ! erent notations from those used normally to characterize scienti " c laws and models . For this reason , we will not focus on their application to scienti " c problems here . COMPUTATIONAL SCIENTIFIC DISCOVERY 395 - We are not referring here to the representational formalism , such as decision trees or neural networks , but rather to the domain features encoded in a formalism . 3 . The developer’s role in computational discovery Although the term computational discovery suggests an automated process , close inspec - tion of the literature reveals that the human developer or user plays an important role in any successful project . Early computational research on scienti " c discovery downplayed this fact and emphasized the automation aspect , in general keeping with the goals of arti " cial intelligence at the time . However , the new climate in AI favors systems that advise humans rather than replace them , and recent analyses of machine learning applications ( e . g . , Langley & Simon , 1995 ) suggest an important role for the developer . Such analysis carry over directly to discovery in scienti " c domains , and here we review the major ways in which developers can in # uence the behavior of discovery systems . As Figure 1 depicts , the " rst step in using computational discovery methods is to formulate the discovery problem in terms that can be solved using existing techniques . The developer must " rst cast the task as one that involves forming taxonomies , " nding qualitative laws , detecting numeric relations , forming structural models , or constructing process accounts . For most methods , he must also specify the dependent variables that laws should predict or indicate the phenomena that models should explain . Informed and careful problem formulation can greatly increase the chances of a successful discovery . The second step in applying discovery techniques is to settle on an e ! ective representa - tion . - The developer must state the variables or predicates used to describe the data or phenomena to be explained , along with the output representation used for taxonomies , laws , or models . The latter must include the operations allowed when combining variables into laws and the component structures or processes used in explanatory models . The developer may also need to encode background knowledge about the domain in terms of an initial theory or results from earlier stages of the discovery process . Such representational engineering plays an essential role in successful applications of computational scienti " c discovery . Another important activity of the developer concerns preparing the data or phenomena on which the discovery system will operate . Data collected by scientists may be quite sparse , lack certain values , be very noisy or include outliers , and the system user can improve the quality of these data manually or using techniques for interpolation , inference , or smoothing . Similarly , scientists ’ statements of empirical phenomena may omit hidden assumptions that the user can make explicit or include irrelevant statements that he can remove . Such data manipulation can also improve the results obtained through computational discovery . Research papers on machine discovery typically give the algorithm center stage , but they pay little attention to the developer ’ s e ! orts to modulate the algorithm ’ s behavior for given inputs . This can involve activities like the manual setting of system parameters ( e . g . , for evidence thresholds , noise tolerance , and halting criteria ) and the interactive control of heuristic search by rejecting bad candidates or attending to good ones . Some systems are designed with this interaction in mind , whereas others support the process more surreptitiously . But in either case , such algorithm manipulation is another important way that developers and users can improve their chances for successful discoveries . 396 P . LANGLEY F IGURE 1 . Steps in the discovery process at which the developer or user can in # uence system behavior . A " nal step in the application process involves transforming the discovery system ’ s output into results that are meaningful to the scienti " c community . This stage can include manual " ltering of interesting results from the overall output , recasting these results in comprehensible terms or notations , and interpreting the relevance of these results for the scienti " c " eld . Thus , such postprocessing subsumes both the human user ’ s evaluation of scienti " c results and their communication to scientists who will " nd them interesting . Since evaluation and communication are central activities in science , they play a crucial role in computational discovery as well . The literature on computational scienti " c discovery reveals , though often between the lines , that developers ’ intervention plays an important role even in historical models of discovery . Indeed , early critiques of machine discovery research frowned on these activities , since both developers and critics assumed the aim was to completely automate the discovery process . However , this view has changed in recent years and the more common perspective is that discovery systems should aid scientists rather than replace them . In this light , human intervention is perfectly acceptable , especially if the goal is to discover new scienti " c knowledge and not to assign credit . 4 . Some computer - aided scientific discoveries Now that we have set the stage , we are ready to report some successful applications of AI methods to the discovery of new scienti " c knowledge . We organize the presentation in terms of the basic scienti " c activities described earlier , starting with examples of taxonomy formation , then moving on to law discovery and " nally to model construction . In each case , we review the basic scienti " c problem , describe the discovery system and present the novel discovery that it has produced . We also examine the role that the developer played in each application , drawing on the " ve steps outlined in the previous section . Although we have not attempted to be exhaustive , we did select examples that meet certain criteria . Valde H s } Pe H rez ( 1999 ) suggests that scienti " c discovery involves the COMPUTATIONAL SCIENTIFIC DISCOVERY 397 & & generation of novel , interesting , plausible , and intelligible knowledge about objects of scienti " c study ’’ , and reviews four computer - aided discoveries that he argues meet this de " nition . Rather than repeating his analysis , we have chosen instead to use publication of the result in the relevant scienti " c literature as our main criterion for success , though we suspect that publication is highly correlated with his factors . 4 . 1 . STELLAR TAXONOMIES FROM INFRARED SPECTRA Existing taxonomies of stars are based primarily on characteristics from the visible spectrum . However , arti " cial satellites provide an opportunity to make measurements of types that are not possible from the Earth ’ s surface , and the resulting data could suggest new groupings of known stellar objects . One such source of new data is the Infrared Astronomical Satellite , which has produced a database that describes the intensity of some 5425 stars at 94 wavelengths throughout the infrared spectrum . Cheeseman et al . ( 1988 ) applied their A UTO C LASS system to these infrared data . They designed this program to form one - level taxonomies , that is , to group objects into meaningful classes or clusters based on similar attribute values . For this domain , they chose to represent each cluster in terms of a mean and variance for each attribute , thus specifying a Gaussian distribution . The system carries out a gradient descent search through the space of such descriptions , starting with random initial descriptions for a speci " ed number of clusters . On each step , the search process uses the current descriptions to probabilistically assign each training object to each class and then uses the observed values for each object to update class descriptions , repeating this process until only minor changes occur . At a higher level , A UTO C LASS iterates through di ! erent numbers of clusters to determine the best taxonomy , starting with a user - speci " ed number of classes and increasing this count until it produces classes with negligible probabilities . Application of A UTO C LASS to the infrared data on stars produced 77 stellar classes , which the developers organized into nine higher - level clusters by running the system on the cluster descriptions themselves . The resulting taxonomy di ! ered signi " cantly from the one then used in astronomy , and the collaborating astronomers felt that it re # ected some important results ( Cheeseman et al . , 1989 ) . These included a new class of blackbody stars with signi " cant infrared excess , presumably due to surrounding dust and a very weak spectral & & bump ’’ at 13 microns in some classes that was undetectable in individual spectra . Geobel et al . ( 1989 ) recount these and other discoveries , along with their physical interpretation ; thus , results were deemed important enough to justify their publication in an referred astrophysical journal . Although A UTO C LASS clearly contributed greatly to these discoveries , the developers acknowledge that they also played an important role ( Cheeseman & Stutz , 1996 ) . Casting the basic problem in terms of clustering was straightforward , but the team quickly encountered problems with the basic infrared spectra , which had been normalized to ensure that all had the same peak height . To obtain reasonable results , they renormalized the data so that all curves had the same area . They also had to correct for some negative spectral intensities , which earlier software used by the astronomers had caused by subtracting out a background value . The developer ’ s decision to run A UTO C LASS on its own output to produce a two - level taxonomy constituted another intervention . Finally , 398 P . LANGLEY the collaborating astronomers did considerable interpretation of the system outputs before presenting them to the scienti " c community . 4 . 2 . QUALITATIVE FACTORS IN CARCINOGENESIS Over 80 , 000 chemicals are available commercially , yet the long - term health e ! ects are known for only about 15 % of them . Even fewer de " nitive results are available about whether chemicals cause cancer , since the standard tests for carcinogens involve two - year animal bioassays that cost $ 2 million per chemical . As a result , there is great demand for predictive laws that would let one predict carcinogenicity from more rapid and less expensive measurements . Lee , Buchanan , and Aronis ( 1998 ) have applied the rule - induction system RL to the problem of discovering such qualitative laws . The program constructs a set of conjunc - tive rules , each of which states the conditions under which some result occurs . Like many other rule - induction methods , RL invokes a general - to - speci " c search to generate each rule , selecting conditions to add that increase the rule ’ s ability to discriminate among classes and halting when there is no improvement in accuracy . The system also lets the user bias this search by specifying desirable properties of the learned rules . The developers ran RL on three databases for which carcinogenicity results are available . including 301 , 108 , and 1300 chemical compounds , respectively . Chemicals were described in terms of physical properties , structural features , short - term e ! ects , and values on potency measures produced by another system . Experiments revealed that the induced rules were substantially more accurate than existing prediction schemes , which justi " ed publication in the scienti " c literature ( Lee , Buchanan , & Rosenkranz 1996 ) . They also tested the rules ’ ability to classify 24 new chemicals for which the status was unknown at development time ; these results were also positive and led to another scienti " c publication ( Lee , Buchanan , Mattison , Klopman & Rosenkranz , 1995 ) . The authors recount a number of ways in which they intervened in the discovery process to obtain these results . For example , they reduced the 496 attributes for one database to only 75 features by grouping values about lesions on various organs . The developers also constrained the induction process by specifying that RL should favor some attributes over others when constructing rules and telling it to consider only certain values of a symbolic attribute for a given class , as well as certain types of tests on numeric attributes . These constraints , which they developed through interaction with domain scientists , took precedence over accuracy - oriented measures in deciding what conditions to select , and it seems likely that they helped account for the e ! ort ’ s success . 4 . 3 . CHEMICALS PREDICTORS OF MUTAGENS Another area of biochemistry with important social implications aims to understand the factors that determine whether a chemical will cause mutations in genetic material . One data set that contains results of this sort involves 230 aromatic and heteroaromatic nitro compounds , which can be divided into 138 chemicals that have high mutagenicity and 92 chemicals that are low on this dimension . Qualitative relations that characterize these two classes could prove useful in predicting whether new compounds pose a danger of causing mutation . COMPUTATIONAL SCIENTIFIC DISCOVERY 399 King Muggleton , Srinivasan , and Sternberg ( 1996 ) report an application of their P ROGOL system to this problem . The problem operates along lines similar to other rule - induction methods , in that it carries out a general - to - speci " c search for a conjunc - tive rule that covers some of the data , then repeats this process to " nd additional rules that cover the rest . The system also lets the user specify background knowledge , stated in the same form , which it takes into account in measuring the quality of induced rules . Unlike most rule - induction techniques , P ROGOL assumes a predicate logic formalism that can represent relations among objects , rather than just attribute values . This support for relational descriptions led to revealing structural descriptions of mutation factors . For example , for the data set mentioned above , the system found one rule predicting that a compound is mutagenic if it has & & a highly aliphatic carbon atom attached by a single bond to a carbon atom that is in a six - membered aromatic ring ’’ . Combined with four similar rules , this characterization gave 81 % correct predictions , which is comparable to the accuracy of other computational methods . However , alterna - tive techniques do not produce a structural description that one can use to visualize spatial relations and thus to posit the deeper causes of mutation , so that the results justi " ed publication in the chemistry literature ( King et al . , 1996 ) . As in other applications , the developers aided the discovery process in a number of ways . They chose to formulate the task in terms of " nding a classi " er that labels chemicals as causing mutation or not , rather than predicting levels of mutagenicity . King et al . also presented their system with background knowledge about methyl and nitro groups , the length and connectivity of rings , and other concepts . In addition , they manipulated the data by dividing it into two groups with di ! erent characteristics , as done earlier by others working in the area . Although the induced rules were understand - able in that they made clear contact with chemical concepts , the authors aided their interpretation by presenting graphical depictions of their structural claims . Similar interventions have been used by the developers on related scienti " c problems , including prediction of carcinogenicity ( King & Srinivasan , 1996 ) and pharmacophore discovery ( Finn , Muggleton , Page , & Srinivasan , 1998 ) . 4 . 4 . QUANTITATIVE LAWS OF METALLIC BEHAVIOR A central process in the manufacture of iron and steel involves the removal of impurities from molten slag . Qualitatively , the chemical reactions that are responsible for this removal process increase in e ! ectiveness when the slag contains more free oxide ( O 2 ~ ) ions . However , metallurgists have only imperfect quantitative laws that relate the oxide amount , known as the basicity of the slag , to dependent variables of interest , such as the slag ’ s sulfur capacity . Moreover , basicity cannot always be measured accurately , so there is a need for improved ways to estimate this intrinsic property . Mitchell , Sleeman , Du ! y , Ingram , and Young ( 1997 ) applied computational discovery techniques to these scienti " c problems . Their D AVICCAND system includes operations for selecting pairs of numeric variables to relate , specifying qualitative conditions that focus attention on some of the data , and " nding numeric laws that relate variables within a given region . The program also includes mechanisms for identifying outliers that violate these numeric laws and for using the laws to infer the values of intrinsic properties when one cannot measure them more directly . 400 P . LANGLEY The developers report two new discoveries in which D AVICCAND played a central role . The " rst involves the quantitative relation between basicity and sulfur capacity . Previous accounts modeled this relation using a single polynomial that held across all temperature ranges . The new results involve three simpler , linear laws that relate these two variables under di ! erent temperature ranges . The second contribution concerns improved esti - mates for the basicity of slags that contain TiO 2 and FeO , which D AVICCAND inferred using the numeric laws it induced from data , and the conclusion that FeO has quite di ! erent basicity values for sulfur and phosphorus slags . These results were deemed important enough to appear in a respected metallurgical journal ( Mitchell et al . , 1997 ) . Unlike most discovery systems , D AVICCAND encourages users to take part in the search process and provides explicit control points where they can in # uence choices . Thus , they formulate the problem by specifying what dependent variable the laws should predict and what region of the space to consider . Users also a ! ect representational choices by selecting what independent variables to use when looking for numeric laws , and they can manipulate the data by selecting what points to treat as outliers . D AVIC - CAND presents its results in terms of graphical displays and functional forms that are familiar to metallurgists and , given the user ’ s role in the discovery process , there remains little need for postprocessing to " lter results . 4 . 5 . QUANTITATIVE CONJECTURES IN GRAPH THEORY A recurring theme in graph theory involves proving theorems about relations among quantitative properties to graphs . However , before a mathematician can prove that such a relation always holds , someone must " rst formulate it as a conjecture . Although mathematical publications tend to emphasize proofs of theorems , the process of " nding interesting conjectures is equally important and has much in common with discovery in the natural sciences . Fajtlowicz ( 1988 ) and colleagues have developed G RAFFITI , a system that generates conjectures in graph theory and other areas of discrete mathematics . The system carries out search through a space of quantitative relations like + x i * + y i , where each x i and y i is some numerical feature of a graph ( e . g . , its diameter or its largest eigenvalue ) , the product of such elementary features , or their ratio . G RAFFITI ensures that its conjectures are novel by maintaining a record of previous hypotheses and " lters many uninteresting conjectures by noting that they seem to be implied by earlier , more general , candidates . G RAFFITI has generated hundreds of novel conjectures in graph theory , many of which have spurred mathematicians to attempt their proof or refutation , which in turn has produced numerous publications . One example involves a conjecture that the & & average distance ’’ of a graph is no greater than its & & independence number ’’ , which resulted in a proof that appeared in the refereed mathematical literature ( Chung , 1988 ) . Although G RAFFITI was designed as an automated discovery system , its developers have clearly constrained its behavior by specifying the primitive graph features and the types of relations it should consider . Data manipulation occurs through a " le that contains qualitatively di ! erent graphs , against which the system tests its conjectures empirically , and postprocessing occurs when mathematicians " lter the system output for interesting results . COMPUTATIONAL SCIENTIFIC DISCOVERY 401 4 . 6 . TEMPORAL LAWS OF ECOLOGICAL BEHAVIOR One major concern in ecology is the e ! ect of pollution on plant and animal populations . Ecologists regularly develop quantitative models that are stated as sets of di ! erential equations . Each such equation describes changes in one variable ( its deriva - tive ) as a function of other variables , typically ones that can be directly observed . For example , Lake Glumsoe is a shallow lake in Denmark with high concentrations of nitrogen and phosphorus from waste water , and ecologists would like to model the e ! ect of these variables on the concentration of phytoplankton and zooplankton in the lake . Todorovski , Dz \ eroski , and Kompare ( 1998 ) have applied techniques for numeric discovery to this problem . Their L AGRAMGE system carries out search through a space of di ! erential equations , looking for the equation set that gives the smallest error on the observed data . The system uses two constraints to make this search process tractable . First , L AGRAMGE incorporates background knowledge about the domain in the form of a context - free grammar that it uses to generate plausible equations . Second , it places a limit on the allowed depth of the derivations used to produce equations . For each candidate set of equations , the system uses numerical integration to estimate the error and thus the quality of the proposed model . The developers report a new set of equations , discovered by L AGRAMGE , that model accurately the relation between the pollution and plankton concentrations in Lake Glumsoe . This revealed that phosphorus and temperature are the limiting factors on the growth of phytoplankton in the lake . We can infer the Todorovski et al . role in the discovery process from their paper . They formulated the problem in terms of the variables to be predicted , and they engineered the representation both by specifying the predictive variables and by providing the grammar used to generate candidate equations . Because the data were sparse ( from only 14 time points over two months ) , they convinced three experts to draw curves that " lled in the gaps , used splines to smooth these curves and sampled from these 10 times per day . They also manipulated L AGRAMGE by telling it to consider derivations that were no more than four levels deep . However , little post - processing or interpretation was needed , since the system produces output in a form familiar to ecologists . 4 . 7 . STRUCTURAL MODELS OF ORGANIC MOLECULES A central task in organic chemistry involves determining the molecular structure of a new substance . The chemist typically knows the substance ’ s chemical formula , such as C 18 H 24 O 2 , and frequently knows its mass spectrum , which maps the masses of fragments ( obtained by fracturing the chemical in a mass spectrometer ) against their frequency of occurrence . The goal is to infer the structure of the compound in terms of the molecular connections among its elementary constituents . For reasonably complex compounds , there can be hundreds of millions of possible structures , suggesting the need for computational aids to search this space e ! ectively . In perhaps the earliest e ! ort to use AI techniques for scienti " c reasoning , Feigenbaum , Buchanan , and Lederberg ( 1971 ) developed D ENDRAL to address this task . The system operates in three stages , " rst using the mass spectrum to infer likely substructures of the 402 P . LANGLEY ? At this step , the system can also accept input from chemists about likely or unlikely substructures . molecule that could explain major peaks in the data . ? Next , D ENDRAL considers di ! erent combinations of these substructures , plus the residual atoms , that produce the known chemical formula , using knowledge of chemical stability to generate all ( and only ) chemical structure graphs consistent with these constraints . Finally , the system ranks these candidate structural models in terms of their abilities to predict the observed spectrum , using knowledge of mass spectrometry for this purpose . The D ENDRAL e ! ort led to a variety of chemical structures that were published in organic chemistry journals . For instance , Cheer , Smith , Djerassi , Tursch , Braekman , and Daloze ( 1976 ) report new structural models for terpenoids , that is , C 15 and C 20 com - pounds isolated from plants , as well as for sterol compounds that could be metabolic precursors of known sterols in marine organisms . Similarly , Varkony , Carhart , and Smith ( 1977 ) report system - generated models for compounds that result from chemical and photochemical rearrangements of cyclic hydrocarbons , whereas Fitch , Anderson , Smith , and Djerassi ( 1979 ) describe models for chemicals found in the body # uids of patients suspected of inherited metabolic disorders . Lindsay , Buchanan , Feigenbaum and Lederberg ( 1980 ) give a fuller list of scienti " c publications that resulted from the project , including results on gaseous ions , compounds that display pharmacological activity , and secretions used by insects for defense . Although the early D ENDRAL work emphasized atomating the structural - modeling process , the system ’ s developers in # uenced its behavior by encoding considerable know - ledge about chemical stability into its search constraints . They presented spectrograms to D ENDRAL without any special preprocessing , but they did select the structural - modeling tasks and thus the spectrograms that it encountered . Later versions of the system were more interactive , letting chemists impose additional constraints based on their own knowledge and data sources . Also , it seems likely that users " ltered the structural inferences included in their publications , although the output itself required little interpretation , being cast in a formalism familiar to organic chemists . 4 . 8 . REACTION PATHWAYS IN CATALYTIC CHEMISTRY For a century , chemists have known that many reactions involve , not a single step , but rather a sequence of primitive interactions . Thus , a recurring problem has been to formulate the sequence of steps , known as the reaction pathway , for a given chemical reaction . In addition to the reactants and products of the reaction , this inference may also be constrained by information about intermediate products , concentrations over time , relative quantities , and many other factors . Even so , the great number of possible pathways makes it possible that scientists will overlook some viable alternatives , so there exists a need for computational assistance on this task . Valde H s - Pe H rez ( 1995 ) developed M ECHEM with this end in mind . The system accepts as input the reactants and products for a chemical reaction , along with other experimental evidence and considerable background knowledge about the domain of catalytic chem - istry . M ECHEM lets the user specify interactively which of these constraints to incorpor - ate when generating pathways , giving him control over its global behavior . The system carries out a search through the space of reaction pathways , generating the elementary COMPUTATIONAL SCIENTIFIC DISCOVERY 403 steps from scratch using special graph algorithms . Search always proceeds from simpler pathways ( fewer substances and steps ) to more complex ones . M ECHEM uses its con - straints to eliminate pathways that are not viable and also to identify any intermediate products it hypothesizes in the process . The " nal output is a comprehensive set of the simplest pathways that explain the evidence and that are consistent with the system ’ s background knowledge . This approach has produced a number of novel reaction pathways that have appeared in the chemical literature . For example , Valde H s - Pe H rez ( 1994 ) reports a new explanation for the catalytic reaction ethane # H 2 P 2 methane , which chemists had viewed as largely solved , whereas Zeigarnik , Valde H s - Pe H rez , Temkin , Bruk , and Shalgunov ( 1997 ) present another novel result on acrylic acid . Bruk , Gorodskii , Zeigarnik , Valde H s - Pe H rez , and Temkin ( 1998 ) describe a third application of M ECHEM that produced 41 novel pathways , which prompted experimental studies that reduced this to a small set consis - tent with the new data . The human ’ s role in this process is explicit , with users formulating the problem through stating the reaction of interest and manipulating the algorithm ’ s behavior by invoking domain constraints . Because M ECHEM produces pathways in a notation familiar to chemists , its outputs require little interpretation . 4 . 9 . OTHER COMPUTATIONAL AIDS FOR SCIENTIFIC RESEARCH We have focused on the examples above because they cover a broad range of scienti " c problems and illustrate the importance of human interaction with the discovery system , but they do not exhaust the list of successful applications . For example , Pericliev and Valde H s - Pe H rez ( 1998 ) have used their K INSHIP program to generate minimal sets of features that distinguish kinship terms , like son and uncle , given genealogical and matrimonial relations that hold for each . They have applied their system to characterize kinship terms in both English and Bulgarian , and the results have found acceptance in anthropological linguistics because they are stated in that " eld ’ s conventional notation . Another instance comes from Swanson and Smalheiser ( 1997 ) , who have used their A RROWSMITH program to discover unsuspected relations in the medical literature . The system searches through online papers , looking for an entry in which some relation B N C occurs along with some other relation A N B . A RROWSMITH constrains its search by requiring that C be a physiological state ( like a disease ) and that A be a possible intervention ( like a drug or dietary factor ) . For example , the system noted that magne - sium can inhibit spreading depression , and that spreading depression has been im - plicated in migraine attacks . The resulting hypothesis , that magnesium could alleviate migraines , appeared in the medical literature ( Swanson , 1988 ) and has since been supported repeatedly in clinical tests . We should also consider the relationship between computational scienti " c discovery and the kindred topic of data mining , which also aims to uncover novel , interesting , plausible , and intelligible knowledge . One di ! erence is that data mining typically focusses on commercial applications , though Fayyad , Haussler , and Stolorz ( 1996 ) review some impressive examples of mining scienti " c data from astronomy ( for classify - ing stars and galaxies in sky photographs ) and planetology ( for recognizing volcanoes on Venus ) . However , these e ! orts and related ones invoke induction algorithms primarily to automate tedious recognition tasks in support of cataloguing and statistical analysis , 404 P . LANGLEY A The classi " ers obtained by such methods , when applied to images , can & & discover ’’ new stars or volcanoes , but we would be unlikely to use that term if a human carried out the same task . rather than to discover publishable scienti " c knowledge in its own right . A Moreover , such work seldom produces knowledge in any standard scienti " c notation , since they typically rely on representations from supervised machine learning like decision trees or probabilistic summaries . A similar relation holds between computational scienti " c discovery and computa - tional approaches to molecular biology . One major goal here , which Fayyad et al . also review , is to predict the qualitative structure of proteins from their nucleotide sequence . This paradigm has led to many publications in the biology and biochemistry literature , but most studies emphasize predictive accuracy , with low priority given to expressing the predictors in some common scienti " c notation . A similar trend has occurred in work on learning structure } activity relations in biochemistry , though the work by King et al . ( 1996 ) constitutes an exception , in that they focus on presenting discovered relations in chemical notation . Within computational molecular biology , the main exceptions deal with the discovery of structural motifs , which are simple taxonomies that describe con " gurations of nucleotides or other components that tend to recur in biological sequences . However , most research in the area has been less concerned with discovering new knowledge than with showing that their predictors give slight improvements in accuracy over other methods , which has led us to discuss them here only in passing . 5 . An Illustration of interactive discovery Since we have emphasized the interaction between humans and computational discovery methods , we should illustrate the nature of such interactions in more detail . Table 1 presents a sample trace of D AVICCAND , a system that provides explicit support for such interaction . Recall that D AVICCAND deals with the discovery of quantitative relations among variables that describe the behavior of the irons slags central to steelmaking . In this case , the metallurgist communicated verbally with one of the program ’ s developers , who in turn entered commands to the system . The " rst step involves the user selecting a data set from those available in the on - line library , in this case one known as the & & Strathclyde data set ’’ . The user can also focus the system ’ s attention on certain groups of data points , in this case those that contain less than 10 % silicon dioxide . This process can rely on prede " ned groups or , as in this trace , the de " nition of entirely new groups based on ranges of values . D AVICCAND also lets the user de " ne groups in terms of conjunctions of ranges , ratios of quantities , and distance from a speci " ed line , though here the de " nition is univariate . In this trace , having speci " ed a group , the scientist asks the system to display a straight line through the data contained in that group . Since this appears to give a close " t , he redirects attention to another group of cases that contain more than 10 % silicon dioxide , then changes his mind and displays instead those with more than 20 % silicon . Because neither group seems easy to characterize , the user asks D AVICCAND to search for group de " nitions in terms of silicon dioxide percentages , specifying the region within which to search . The system displays the resulting groups and transition between them , which the user deems interesting . He focuses especially on one cluster , de " ned as having less than COMPUTATIONAL SCIENTIFIC DISCOVERY 405 T ABLE 1 A trace interaction between a metallurgist ( M ) and system developer ( S ) jointly using D A < ICCAND to analyze data about the behavior of iron slags M : Okay , can you bring up the Strathclyde data set ? - S : [ Loads and displays the data set . ] M : Can you highlight all those points that contain less than 10 % silicon [ actually SiO 2 ] ? S : [ Creates and displays the new group . ] M : Can you draw a line through those points ? S : Straight line or curve ? M : A straight line . S : [ Invokes module that " ts and displays a line . ] M : What about those points with more than 10 % silicon ? S : [ Creates and displays the new group . ] M : That does not look quite right . Can you change the value to 20 % ? S : [ Removes old groups from display , then creates and displays the new groups and lines . ] M : Still not quite right . S : Do you want to try a curve ? Or we could try searching for the two lines . M : Let us try searching . S : Where abouts in the data set do you want to search for the lines ? M : From 10 % to 70 % silicon ? S : We ’ re currently looking at log sulphur vs . optical basicity . To do that I need to change the visualization or , if you can say roughly where on the screen you want to search from , I can do that without changing the visualization . M : [ Points at screen , showing start and stop points . ] From here to here . S : [ Invokes the search process . ] M : That looks interesting . Can you show me what the groups look like ? S : [ Displays the group de " nitions . ] M : It looks like the bottom group [ silicon less than 44 % ] is not a straight line . Can you draw a curve through that ? S : What degree of polynomial ? M : Two or three . S : [ Invokes curve - " tting module . ] - This data set has two slightly di ! erent groups that more or less fall on a line , but the " ts are better if each group is treated separately . 44 % silicon , that he thinks requires more analysis . The scientist notes that a straight line does not describe these data and so asks the system to " t and display a higher - order curve for his inspection . Later interactions with the same scientist led D AVICCAND to de " ne new groups based on temperature ranges and percentage of titanium dioxide . These in turn led him to focus on regions in which values for optical basicity were uncertain , and " nally to invoke a module that estimated new values from experimental data . Interactions with this user ignored some of D AVICCAND ’ s features , such as the ability to label some observations as outliers . However , this fact supports our view that both humans and machines have an important role to play in computational scienti " c discovery . 6 . Progress and prospects As the above examples show , work in computational scienti " c discovery no longer focuses solely on historical models , but also contributes novel knowledge to a range of 406 P . LANGLEY scienti " c disciplines . To date , such applications remain the exception rather than the rule , but the breadth of successful computer - aided discoveries provides convincing evidence that these methods have great potential for aiding the scienti " c process . The clear in # uence of humans in each of these applications does not diminish the equally important contribution of the discovery system ; each has a role to play in a complex and challenging endeavor . One recurring theme in applied discovery work has been the di $ culty in " nding collaborators from the relevant scienti " c " eld . Presumably , scientists in many disciplines are satis " ed with their existing methods and see little advantage to moving beyond the statistical aids they currently use . This attitude seems less common in " elds like molecu - lar biology , which have taken the computational metaphor to heart , but often there are social obstacles to overcome . The obvious response is to emphasize that we do not intend our computational tools to replace scientists but rather to aid them , just as simpler software already aids them in carrying out statistical analyses . However , making this argument convincing will require some changes in our systems to better re # ect the position . As noted , existing discovery software already supports intervention by humans in a variety of ways , from initial problem formulation to " nal interpretation . But in most cases this activity happens in spite of the software design rather than because the developer intended it . If we want to encourage synergy between human and arti " cial scientists , then we must modify our discovery systems to support their interaction more directly . This means we must install interfaces with explicit hooks that let users state or revise their problem formulation and representational choices , manipulate the data and system parameters , and recast outputs in understandable terms . The M ECHEM and D AVICCAND systems already include such facilities and thus consti - tute good role models , but we need more e ! orts along these lines . Naturally , explicit inclusion of users in the computational discovery process raises a host of issues that are absent from the autonomous approach . These include questions about which decisions should be automated and which placed under human control , the granularity at which interaction should occur , and the type of interface that is best suited to a particular scienti " c domain . The discipline of human } computer interaction regular - ly addresses such matters , and though its lessons and design criteria have not yet been applied to computer - aided discovery , many of them should carry over directly from other domains . Interactive discovery systems also pose challenges in evaluation , since human variability makes experimentation more di $ cult than for autonomous systems . Yet experimental studies are not essential if one ’ s main goal is to develop computational tools that aid users in discovering new scienti " c knowledge . Clearly , we are only beginning to develop e ! ective ways to combine the strengths of human cognition with those of computational discovery systems . But even our initial e ! orts have produced some convincing examples of computer - aided discovery that have led to publications in the scienti " c literature . We predict that , as more developers realize the need to provide explicit support for human intervention , we will see even more productive systems and even more impressive discoveries that advance the state of scienti " c knowledge . Thanks to Bruce Buchanan , Saso Dz \ eroski , Fraser Mitchell , Steve Muggleton , Derek Sleeman , John Stutz , and Raul Valde H s - Pe H rez for providing information about both their discovery systems COMPUTATIONAL SCIENTIFIC DISCOVERY 407 and their use . An earlier version of this paper appeared in the Proceedings of the First International Conference on Discovery Science , Springer . References A LBERDI , E . & S LEEMAN , D . ( 1997 ) . R E TAX : A step in the automation of taxonomic revision . Arti , cial Intelligence , 91 , 257 } 279 . B RUK , L . G . , G ORODSKII , S . N . , Z EIGARNIK , A . V . , V ALDE D S - P E D REZ , R . E . & T EMKIN , O . N . ( 1998 ) . Oxidative carbonylation of phenylacetylene catalyzed by Pd ( II ) and Cu ( I ) : Experimental tests of forty - one computer - generated mechanistic hypotheses . Journal of Molecular Catalysis A : Chemical , 130 , 29 } 40 . C HEER , C . , S MITH , D . H . , D JERASSI , C . , T URSCH , B . , B RAEKMAN , J . C . & D ALOZE , D . ( 1976 ) . Applications of arti " cial intelligence for chemical inference , XXI : The computer - assisted identi " cation of [ # ] - palustrol in the marine organism cespitularia ap . , a ! . subvirdis . „ et - rahedron , 32 , 1807 . C HEESEMAN , P . , F REEMAN , D . , K ELLY , J . , S ELF , M . , S TUTZ , J . & T AYLOR , W . ( 1988 ) . A UTOCLASS : a Bayesian classi " cation system . Proceedings of the Fifth International Conference on Machine ‚ earning , pp . 54 } 64 , Ann Arbor , MI : Morgan Kaufmann . C HEESEMAN , P . , G OEBEL , J . , S ELF , M . , S TUTZ , M . , V OLK , K . , T AYLOR , W . & W ALKER , H . ( 1989 ) . Automatic Classi , cation of the Spectra from the Infrared Astronomical Satellite ( IRAS ) . Washington , DC : National Aeronautics and Space Administration . ( Reference Publication 1217 ) . C HEESEMAN , P . , & S TUTZ , J . ( 1996 ) . Bayesian classi " cation ( A UTO C LASS ) : Theory and results . In U . M . F AYYAD , G . P IATETSKY - S HAPIRO , P . S MYTH , & R . U THURUSAMY , Eds . Advances in Knowledge Discovery and Data Mining . Cambridge , MA : MIT Press . C HUNG , F . ( 1988 ) . The average distance is not more than the independence number . Journal of Graph „ heory , 12 , 229 } 235 . F AJTLOWICZ , S . ( 1988 ) . On conjectures of G RAFFITI . Discrete Mathematics , 72 , 113 } 118 . F AYYAD , U . , H AUSSLER , D . & S TOLORZ , P . ( 1996 ) . KDD for science data analysis : Issues and examples . Proceedings of the Second International Conference of Knowledge Discovery and Data Mining , pp . 50 } 56 . Portland , OR : AAAI Press . F EIGENBAUM , E . A . , B UCHANAN , B . G . & L EDERBERG , J . ( 1971 ) . On generality and problem solving : A case study using the D ENDRAL program . In Machine Intelligence , Vol . 6 . Edin - burgh : Edinburgh University Press . F INN , P . , M UGGLETON , S . , P AGE , D . & S RINIVASAN , A . ( 1998 ) . Pharmacophore discovery using the inductive logic programming system P ROGOL . Machine ‚ earning , 30 , 241 } 270 . F ITCH , W . L . , A NDERSON , P . J . , S MITH , D . H . & D JERASSI , C . ( 1979 ) . Isolation , identi " cation and quantitation of urinary organic acids . Journal of Chromatography , 162 , 249 } 59 . G ILLIES , D . ( 1996 ) . Arti , cial Intelligence and Scienti , c Method . Oxford : Oxford University Press . G OEBEL , J . , V OLK , K . , W ALKER , H . , G ERBAULT , F . , C HEESEMAN , P . , S ELF , M . , S TUTZ , J . & T AYLOR , W . ( 1989 ) . A Bayesian classi " cation of the IRAS LRA Atlas . Astronomy and Astrophysics , 222 , L5 } L8 . H UNTER , L . , Ed . ( 1993 ) . Arti , cial Intelligence and Molecular Biology . Cambridge , MA : MIT Press . J ONES , R . ( 1986 ) . Generating predictions to aid the scienti " c discovery process . Proceedings of the Fifth National Conference on Arti , cial Intelligence , pp . 513 } 517 . Philadelphia : Morgan Kaufmann . K ING , R . D . , M UGGLETON , S . H . , S RINIVASAN , A . & S TERNBERG , M . E . J . ( 1996 ) . Structure - activity relationships derived by machine learning : The use of atoms and their bond connectives to predict mutagenicity by inductive logic programming . Proceedings of the National Academy of Sciences , 93 , 438 } 442 . K ING , R . D . & S RINIVASAN , A . ( 1996 ) . Prediction of rodent carcinogenicity bioassays from molecular structure using inductive logic programming . Environmental Health Perspective , 104 ( Suppl 5 ) , 1031 } 1040 . 408 P . LANGLEY K OCABAS , S . ( 1991 ) . Con # ict resolution as discovery in particle physics . Machine ‚ earning , 6 , 277 } 309 . K OCABAS , S . & L ANGLEY , P . ( 1998 ) . Generating process explanations in nuclear astrophysics . Proceedings of the ECAI - 98 = orkshop on Machine Discovery , pp . 4 } 9 . Brighton , England . K ULKARNI , D . & S IMON , H . A . ( 1990 ) . Experimentation in machine discovery . In J . S HRAGER & P . L ANGLEY , Eds . Computational Models of Scienti , c Discovery and „ heory Formation . San Mateo , CA : Morgan Kaufmann . L ANGLEY , P . ( 1981 ) . Data - driven discovery of physical laws . Cognitive Science , 5 , 31 } 54 . L ANGLEY , P . & S IMON , H . A . ( 1995 ) . Applications of machine learning and rule induction . Communications of the ACM , 38 , 55 } 64 . L ANGLEY , P . , S IMON , H . A . , B RADSHAW , G . L . & Z 0 YTKOW , J . M . ( 1987 ) . Scienti , c Discovery : Computational Explorations of the Creative Processes . Cambridge , MA : MIT Press . L EE , Y . , B UCHANAN , B . G . & A RONIS , J . M . ( 1998 ) . Knowledge - based learning in exploratory science : Learning rules to predict rodent carcinogenicity . Machine ‚ earning , 30 , 217 } 240 . L EE , Y . , B UCHANAN , B . G . , M ATTISON , D . R . , K LOPMAN , G . & R OSENKRANZ , H . S . ( 1995 ) . Learning rules to predict rodent carcinogenicity of non - genotoxic chemicals . Mutation Research , 328 , 127 } 149 . L EE , Y . , B UCHANAN , B . G . & R OSENKRANZ , H . S . ( 1996 ) . Carcinogenicity predictions for a group of 30 chemicals undergoing rodent cancer bioassays based on rules derived from subchronic organ toxicities . Environmental Health Perspectives , 104 ( Suppl 5 ) , 1059 } 1063 . L ENAT , D . B . ( 1977 ) . Automated theory formation in mathematics . Proceedings of the Fifth International Joint Conference on Arti , cial Intelligence , pp . 833 } 842 . Cambridge , MA : Mor - gan Kaufmann . L INDSAY , R . K . , B UCHANAN , B . G . , F EIGENBAUM , E . A . & L EDERBERG , J . ( 1980 ) . Applications of Arti , cial Intelligence for Organic Chemistry : „ he D ENDRAL Project . New York : McGraw - Hill . M ICHALSKI , R . S . & S TEPP , R . ( 1983 ) . Learning from observation : Conceptual clustering . In R . S . M ICHALSKI , J . G . C ARBONELL & T . M . M ITCHELL , Eds . Machine ‚ earning : An Arti , cial Intelligence Approach . San Francisco : Morgan Kaufmann . M ITCHELL , F . , S LEEMAN , D . , D UFFY , J . A . , I NGRAM , M . D . & Y OUNG , R . W . ( 1997 ) . Optical basicity of metallurgical slags : A new computer - based system for data visualisation and analysis . Ironmaking and Steelmaking , 24 , 306 } 320 . N ORDHAUSEN , B . & L ANGLEY , P . ( 1993 ) . An integrated framework for empirical discovery . Machine ‚ earning , 12 , 17 } 47 . P ERICLIEV , V . & V ALDE D S - P E D REZ , R . E . ( 1998 ) . Automatic componential analysis of kinship semantics with a proposed structural solution to the problem of multiple models . Anthropol - ogical ‚ inguistics , 40 , 272 } 317 . R OSE , D . & L ANGLEY , P . ( 1986 ) . Chemical discovery as belief revision . Machine ‚ earning , 1 , 423 } 451 . S HRAGER , J . , & L ANGLEY , P . Eds . ( 1990 ) . Computational Models of Scienti , c Discovery and „ heory Formation . San Francisco : Morgan Kaufmann . S WANSON , D . R . ( 1988 ) . Migraine and magnetism : Eleven neglected connections . Perspectives in Biology and Medicine , 31 , 526 } 557 . S WANSON , D . R . & S MALBEISER , N . R . ( 1997 ) . An interactive system for " nding complementary literatures : A stimulus to scienti " c discovery . Arti , cial Intelligence , 91 , 183 } 203 . T ODOROVSKI , L . , D Z [ EROSKI , S . & K OMPARE , B . ( 1998 ) . Modeling and prediction of phytoplankton growth with equation discovery . Ecological Modelling , 113 , 71 } 81 . V ALDE D S - P E D REZ , R . E . ( 1994 ) . Human / computer interactive elucidation of reaction mechanisms : application to catalyzed hydrogenolysis of ethane . Catalysis ‚ etters , 28 , 79 } 87 . V ALDE D S - P E D REZ , R . E . ( 1995 ) . Machine discovery in chemistry : New results . Arti , cial Intelligence , 74 , 191 } 201 . V ALDE D S - P E D REZ , R . E . ( 1999 ) . Principles of human - computer collaboration for knowledge dis - covery in science . Arti , cial Intelligence , 107 , 335 } 346 . V ARKONY , T . H . , C ARHART , R . E . & S MITH , D . H . ( 1977 ) . Applications of arti " cial intelligence for chemical inference , XXIII : Computer - assisted structure elucidation . Modelling chemical reac - tion sequences used in molecular structure problems . In W . T . W IPKE , Ed . Computer - Assisted Organic Synthesis . Washington , DC : American Chemical Society . COMPUTATIONAL SCIENTIFIC DISCOVERY 409 Z EIGARNIK , A . V . , V ALDE D S - P E D REZ , R . E . , T EMKIN , O . N . , B RUK , L . G . & S HALGUNOV , S . I . ( 1997 ) . Computer - aided mechanism elucidation of acetylene hydrocarboxylation to acrylic acid based on a novel union of empirical and formal methods . Organometallics , 16 , 3114 } 3127 . Z 0 YTKOW , J . M . ( 1996 ) . Incremental discovery of hidden structure : Applications in theory of elementary particles . Proceedings of the „ hirteenth National Conference on Arti , cial Intelligence , pp . 750 } 756 . Portland , OR : AAAI Press . Z 0 YTKOW , J . M . & S IMON , H . A . ( 1986 ) . A theory of historical discovery : The construction of componential models . Machine ‚ earning , 1 , 107 } 137 . Paper accepted for Publication by Editor , Prof . D . Sleeman 410 P . LANGLEY