Spectral Methods for Learning Multivariate Latent Tree Structure Joint work with : A . Anandkumar , D . Hsu , S . Kakade , L . Song , T . Zhang Kamalika Chaudhuri Graphical Models Examples : Hidden Markov Models , LDA , neural networks Describes conditional independence relations among random variables Learning Graphical Model Structure Samples from random variables X 1 , . . , X n Graphical model M that generates X 1 , . . , X n Given : Find : X 1 X 2 X 3 X 4 X 1 X 2 X 3 X 4 Learning Graphical Model Structure Samples from random variables X 1 , . . , X n Graphical model M that generates X 1 , . . , X n Given : Find : Generally a hard problem X 1 X 2 X 3 X 4 X 1 X 2 X 3 X 4 Learning Graphical Model Structure Samples from random variables X 1 , . . , X n Graphical model M that generates X 1 , . . , X n Given : Find : Generally a hard problem Assumption : M lies in a restricted class of models X 1 X 2 X 3 X 4 X 1 X 2 X 3 X 4 Learning Graphical Model Structure Samples from random variables X 1 , . . , X n Graphical model M that generates X 1 , . . , X n Given : Find : Generally a hard problem Assumption : M lies in a restricted class of models This talk : M is a latent tree graphical model X 1 X 2 X 3 X 4 X 1 X 2 X 3 X 4 Latent Tree Graphical Models Observed Variables X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Latent Tree Graphical Models Observed Variables Hidden Variables X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Learning Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Learning Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree Samples from observed random variables X 1 , . . , X n Given : X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Learning Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree Samples from observed random variables X 1 , . . , X n Latent tree graphical model M that generates X 1 , . . , X n Given : Find : X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Learning Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree Samples from observed random variables X 1 , . . , X n Latent tree graphical model M that generates X 1 , . . , X n Given : Find : Linearity Assumption : For edge ( X , Y ) in M , E [ X | Y ] = A X Y Y X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 Learning Latent Tree Graphical Models Observed Variables Hidden Variables Underlying graph is a tree Samples from observed random variables X 1 , . . , X n Latent tree graphical model M that generates X 1 , . . , X n Given : Find : Linearity Assumption : For edge ( X , Y ) in M , E [ X | Y ] = A X Y Y Example : Hidden Markov Models , Phylogeny trees X 1 X 2 X 3 X 4 X 5 X 6 Y 1 Y 2 Y 3 Y 4 When are Latent Tree Models Identiﬁable ? [ P88 ] 1 . Structural Condition : Hidden nodes have 3 or more neighbors When are Latent Tree Models Identiﬁable ? [ P88 ] 1 . Structural Condition : Hidden nodes have 3 or more neighbors 2 . Non - redundancy Condition : For hidden variables g , h , det ( E ( hg ￿ ) ) 2 det ( E ( hh ￿ ) ) det ( E ( gg ￿ ) ) ≤ 1 When are Latent Tree Models Identiﬁable ? [ P88 ] 1 . Structural Condition : Hidden nodes have 3 or more neighbors Our Extra Assumption : Rank Condition 1 . For a hidden node h , has rank k 2 . For observed node x , hidden h , A xh has rank k E ( hh ￿ ) 2 . Non - redundancy Condition : For hidden variables g , h , det ( E ( hg ￿ ) ) 2 det ( E ( hh ￿ ) ) det ( E ( gg ￿ ) ) ≤ 1 Talk Outline • The Problem • Past Approaches Past Approaches • Search based • No performance guarantees , can get stuck in local minima Past Approaches • Search based • No performance guarantees , can get stuck in local minima • Distance - based approaches [ P88 , DMR06 , DHJMMR06 , CTAW11 ] • Only work for 1 - d variables Past Approaches • Search based • No performance guarantees , can get stuck in local minima • Distance - based approaches [ P88 , DMR06 , DHJMMR06 , CTAW11 ] • Only work for 1 - d variables Our Work : Applies to higher dimensional variables Talk Outline • The Problem • Past Approaches • Algorithm Algorithm Outline Two Main Steps : 1 . Find “close” observed / hidden variables Done using a Spectral Quartet Test Algorithm Outline Two Main Steps : 1 . Find “close” observed / hidden variables 2 . Combine the close variables and proceed Done using a Spectral Quartet Test Recursive Grouping ( RG ) Algorithm Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Four Possible Cases : Z 3 Z 1 Z 2 Z 4 h g Z 2 Z 1 Z 3 Z 4 h g Z 4 Z 1 Z 2 Z 3 h g Z 2 Z 1 Z 3 Z 4 h a b c d Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Four Possible Cases : Spectral Quartet test can identify ( a ) - ( c ) Z 3 Z 1 Z 2 Z 4 h g Z 2 Z 1 Z 3 Z 4 h g Z 4 Z 1 Z 2 Z 3 h g Z 2 Z 1 Z 3 Z 4 h a b c d Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Inputs : Parameters N samples from Z 1 , Z 2 , Z 3 , Z 4 k = dim . of hidden variables ∆ ij , i , j ∈ { 1 , 2 , 3 , 4 } Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Output : A grouping { ( i , j ) , ( i’ , j’ ) } or NULL ( { ( 1 , 2 ) , ( 3 , 4 ) } = Case a ) Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Inputs : Parameters N samples from Z 1 , Z 2 , Z 3 , Z 4 k = dim . of hidden variables ∆ ij , i , j ∈ { 1 , 2 , 3 , 4 } Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij 2 . Compute , top k singular values of σ s ( ˆ Σ ij ) ˆΣ ij Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij 2 . Compute , top k singular values of σ s ( ˆ Σ ij ) ˆΣ ij k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Intuition 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij 2 . Compute , top k singular values of σ s ( ˆ Σ ij ) ˆΣ ij k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Spectral Quartet Test : Intuition 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij 2 . Compute , top k singular values of σ s ( ˆ Σ ij ) ˆΣ ij k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) Goal of SQT is to detect gap between these ratios ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Spectral Quartet Test : Properties Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 1 . If the Spectral Quartet Test outputs a grouping { ( i , j ) , ( i’ , j’ ) } , then the grouping is correct w . h . p over the samples Spectral Quartet Test : Properties Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 1 . If the Spectral Quartet Test outputs a grouping { ( i , j ) , ( i’ , j’ ) } , then the grouping is correct w . h . p over the samples 2 . If there are enough samples , and one of Cases a - c hold , then , the Spectral Quartet Test does not output NULL Spectral Quartet Test : Properties Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Spectral Quartet Test identiﬁes Cases a - c , or outputs NULL Works correctly with enough samples Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Spectral Quartet Test : Summary Algorithm Outline Two Main Steps : 1 . Find “close” observed / hidden variables 2 . Combine the close variables and proceed bottom - up Done using a Spectral Quartet Test Recursive Grouping ( RG ) Algorithm Separation of nodes Nodes z 1 and z 2 are separated by a spectral quartet test ( z 1 , z 2 , z 3 , z 4 ) if the test outputs { ( z 1 , z 3 ) , ( z 2 , z 4 ) } or { ( z 1 , z 4 ) , ( z 2 , z 3 ) } Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Z 1 and Z 2 are separated in b and c Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t For u 1 , u 2 , u 3 , u 4 in L ( z 1 ) , L ( z 2 ) , L ( z 3 ) , L ( z 4 ) Apply SQT ( u 1 , u 2 , u 3 , u 4 ) S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t For u 1 , u 2 , u 3 , u 4 in L ( z 1 ) , L ( z 2 ) , L ( z 3 ) , L ( z 4 ) Apply SQT ( u 1 , u 2 , u 3 , u 4 ) If SQT separates u i and u j , mark ( z i , z j ) S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t For u 1 , u 2 , u 3 , u 4 in L ( z 1 ) , L ( z 2 ) , L ( z 3 ) , L ( z 4 ) Apply SQT ( u 1 , u 2 , u 3 , u 4 ) If SQT separates u i and u j , mark ( z i , z j ) C = conn . components of unmarked edges S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm Initially : S 1 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t For u 1 , u 2 , u 3 , u 4 in L ( z 1 ) , L ( z 2 ) , L ( z 3 ) , L ( z 4 ) Apply SQT ( u 1 , u 2 , u 3 , u 4 ) If SQT separates u i and u j , mark ( z i , z j ) C = conn . components of unmarked edges For C i in C If C i = { z } , add z to S t + 1 If C i = { z 1 , . . , z r } Create hidden node h with children C i Add h to S t + 1 L ( h ) = U z in Ci L ( z ) S t = current nodes L = observed nodes representing each u in S t Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : Initially : S 1 = observed variables L ( u ) = { u } S 1 = X 1 X 2 X 3 X 4 X 5 X 6 Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : Initially : S 1 = observed variables L ( u ) = { u } S 1 = X 1 X 2 X 3 X 4 X 5 X 6 Unmarked edges : ( X 1 , X 2 ) , ( X 4 , X 5 ) Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : Initially : S 1 = observed variables L ( u ) = { u } S 1 = X 1 X 2 X 3 X 4 X 5 X 6 Unmarked edges : ( X 1 , X 2 ) , ( X 4 , X 5 ) S 2 = X 4 X 5 Y 2 Y 3 X 1 X 2 X 6 X 3 Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : At Step 2 : S 2 = X 4 X 5 Y 2 Y 3 X 1 X 2 X 6 X 3 Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : At Step 2 : S 2 = X 4 X 5 Y 2 Y 3 X 1 X 2 X 6 X 3 Unmarked Edges : ( Y 3 , X 3 ) , ( Y 2 , X 6 ) Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : At Step 2 : S 2 = X 4 X 5 Y 2 Y 3 X 1 X 2 X 6 X 3 Unmarked Edges : ( Y 3 , X 3 ) , ( Y 2 , X 6 ) Y 3 X 4 X 5 Y 2 X 1 X 2 Y 1 X 3 Y 4 X 6 S 3 = Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : At Step 3 : Y 3 X 4 X 5 Y 2 X 1 X 2 Y 1 X 3 Y 4 X 6 S 3 = Recursive Grouping ( RG ) Algorithm X 4 X 5 Y 1 Y 2 Y 3 Y 4 X 1 X 2 X 6 X 3 True latent variable model : At Step 3 : Y 3 X 4 X 5 Y 2 X 1 X 2 Y 1 X 3 Y 4 X 6 S 3 = Stop as there are < 4 nodes Add edge ( Y 1 , Y 4 ) Talk Outline • The Problem • Past Approaches • Algorithm • Performance Guarantees • Sample Complexity Parameters - 1 For hidden variables g , h , deﬁne : ρ 2max = max h , g det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Z 2 Z 1 Z 3 Z 4 h g a Z 2 Z 1 Z 3 Z 4 h d Parameters - 1 For hidden variables g , h , deﬁne : ρ 2max = max h , g det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) High means harder to tell a from d ρ 2max Z 2 Z 1 Z 3 Z 4 h g a Z 2 Z 1 Z 3 Z 4 h d Parameters - 2 Suppose we delete a hidden node h , to get subtrees T 1 , . . , T r Deﬁne : where x , z are observed nodes γ min = min h min T i , T j max x ∈ T i , z ∈ T j σ k ( E ( xz ￿ ) ) z x h T 1 T 2 T 3 T 4 Parameters - 2 Suppose we delete a hidden node h , to get subtrees T 1 , . . , T r Deﬁne : where x , z are observed nodes γ min = min h min T i , T j max x ∈ T i , z ∈ T j σ k ( E ( xz ￿ ) ) Smaller means harder to γ min detect tree structure around h z x h T 1 T 2 T 3 T 4 Parameters - 2 Suppose we delete a hidden node h , to get subtrees T 1 , . . , T r Deﬁne : where x , z are observed nodes γ min = min h min T i , T j max x ∈ T i , z ∈ T j σ k ( E ( xz ￿ ) ) Smaller means harder to γ min detect tree structure around h Note : 1 . max term implies we do not need all quartet tests to succeed z x h T 1 T 2 T 3 T 4 Parameters - 2 Suppose we delete a hidden node h , to get subtrees T 1 , . . , T r Deﬁne : where x , z are observed nodes γ min = min h min T i , T j max x ∈ T i , z ∈ T j σ k ( E ( xz ￿ ) ) Smaller means harder to γ min detect tree structure around h Note : 1 . max term implies we do not need all quartet tests to succeed 2 . can be much larger than the lowest correlation , e . g . HMMs γ min z x h T 1 T 2 T 3 T 4 Parameters - 3 For observed nodes x , z , γ max = max x , z σ 1 ( E ( xz ￿ ) ) Larger means higher variance in the observed nodes γ max Sample Complexity Bounds Note : C hides factors of the maximum norm of the variables If the number of samples N is at least : then , our algorithm works correctly . N > C k 2 ￿ γ 2min γ max ( 1 − ρ max ) ￿ 2 Talk Outline • The Problem • Past Approaches • Algorithm • Performance Guarantees • Sample Complexity • Analysis Analysis : Main Ideas • With enough samples , the Spectral Quartet Test works correctly • If the Spectral Quartet Test works correctly , then the RG algorithm recovers the correct tree Spectral Quartet Test Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . 1 . For all i , j , compute , empirical second moment matrix of Z i and Z j ˆΣ ij 2 . Compute , top k singular values of σ s ( ˆ Σ ij ) ˆΣ ij k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + 1 . If the Spectral Quartet Test outputs a grouping { ( i , j ) , ( i’ , j’ ) } , then the grouping is correct w . h . p over the samples 2 . If there are enough samples , and one of Cases a - c hold , then , the Spectral Quartet Test does not output NULL Spectral Quartet Test : Properties Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Proof Outline : For i = { 1 , 2 } and j = { 3 , 4 } , we can show : k ￿ s = 1 σ s ( Σ ij ) = A z i h det ( Σ hg ) A ￿ z j g Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Proof Outline : For i = { 1 , 2 } and j = { 3 , 4 } , we can show : k ￿ s = 1 σ s ( Σ ij ) = A z i h det ( Σ hg ) A ￿ z j g Similarly , k ￿ s = 1 σ s ( Σ 12 ) = A z 1 h det ( Σ hh ) A ￿ z 2 h k ￿ s = 1 σ s ( Σ 34 ) = A z 3 g det ( Σ gg ) A ￿ z 4 g Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Proof Outline : For i = { 1 , 2 } and j = { 3 , 4 } , we can show : k ￿ s = 1 σ s ( Σ ij ) = A z i h det ( Σ hg ) A ￿ z j g Similarly , k ￿ s = 1 σ s ( Σ 12 ) = A z 1 h det ( Σ hh ) A ￿ z 2 h k ￿ s = 1 σ s ( Σ 34 ) = A z 3 g det ( Σ gg ) A ￿ z 4 g Lemma follows by algebra , and rank condition . Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Lemma : If for all i , j , σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij then , the grouping output by the SQT is correct . Spectral Quartet Test : Properties ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ≤ 1 Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Lemma : If for all i , j , σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij then , the grouping output by the SQT is correct . Proof : k ￿ s = 1 σ s ( Σ ij ) σ s ( Σ i ￿ j ￿ ) ≥ k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ ij ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ j ￿ ] + > k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ ij ￿ ) ≥ k ￿ s = 1 σ s ( Σ i ￿ j ) σ s ( Σ ij ￿ ) Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Lemma : If for all i , j , σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij then , the grouping output by the SQT is correct . Goal : Find ∆ ij , s . t . σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Lemma : If for all i , j , σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij then , the grouping output by the SQT is correct . Goal : Find ∆ ij , s . t . σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij C = constant , N = sample size , M = max . norm of Z i , Z j then , w . h . p σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij If we set ∆ ij ≥ C M √ N where : Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : Lemma : If for all i , j , σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij then , the grouping output by the SQT is correct . Goal : Find ∆ ij , s . t . σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij C = constant , N = sample size , M = max . norm of Z i , Z j then , w . h . p σ s ( ˆ Σ ij ) − ∆ ij ≤ σ s ( Σ ij ) ≤ σ s ( ˆ Σ ij ) + ∆ ij If we set ∆ ij ≥ C M √ N where : 1 . If the Spectral Quartet Test outputs a grouping { ( i , j ) , ( i’ , j’ ) } , then the grouping is correct w . h . p over the samples Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a ≤ ρ 2max Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a ≤ ρ 2max ∆ ij = C M √ N Also : Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a ≤ ρ 2max ∆ ij = C M √ N Also : If N is large w . r . t 1 1 − ρ max ∆ ij then is small enough for the test to succeed Spectral Quartet Test : Properties 3 . If there is a pairing { ( i , j ) , ( i’ , j’ ) } such that : then output { ( i , j ) , ( i’ , j’ ) } . Else output NULL . k ￿ s = 1 ( σ s ( ˆ Σ i ￿ j ) + ∆ i ￿ , j ) ( σ s ( ˆ Σ ij ￿ ) + ∆ i , j ￿ ) < k ￿ s = 1 [ σ s ( ˆ Σ ij ) − ∆ i , j ] + [ σ s ( ˆ Σ i ￿ j ￿ ) − ∆ i ￿ , j ￿ ] + Spectral Quartet Test : ￿ k s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = ￿ k s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) ￿ k s = 1 σ s ( Σ 12 ) σ s ( Σ 34 ) = det ( Σ hg ) 2 det ( Σ hh ) det ( Σ gg ) Moreover , k ￿ s = 1 σ s ( Σ 13 ) σ s ( Σ 24 ) = k ￿ s = 1 σ s ( Σ 14 ) σ s ( Σ 23 ) Lemma : If a is correct , linearity , and Σ ij = E [ z i z ￿ j ] Z 2 Z 1 Z 3 Z 4 h g a ≤ ρ 2max ∆ ij = C M √ N Also : If N is large w . r . t 1 1 − ρ max ∆ ij then is small enough for the test to succeed 2 . If there are enough samples , and one of Cases a - c hold , then , the Spectral Quartet Test does not output NULL 1 . If the Spectral Quartet Test outputs a grouping { ( i , j ) , ( i’ , j’ ) } , then the grouping is correct w . h . p over the samples 2 . If there are enough samples , and one of Cases a - c hold , then , the Spectral Quartet Test does not output NULL Spectral Quartet Test : Properties Samples from random variables Z 1 , Z 2 , Z 3 , Z 4 Induced tree structure on Z 1 , Z 2 , Z 3 , Z 4 Given : Find : Z 2 Z 1 Z 3 Z 4 h g a Z 3 Z 1 Z 2 Z 4 h g b Z 4 Z 1 Z 2 Z 3 h g c Z 2 Z 1 Z 3 Z 4 h d Analysis : Main Ideas • With enough samples , the Spectral Quartet Test works correctly • If the Spectral Quartet Test works correctly , then the RG algorithm recovers the correct tree Recursive Grouping ( RG ) Algorithm Initially : S 0 = observed variables L ( u ) = { u } At step t : For z 1 , z 2 , z 3 , z 4 in S t For u 1 , u 2 , u 3 , u 4 in L ( z 1 ) , L ( z 2 ) , L ( z 3 ) , L ( z 4 ) Apply SQT ( u 1 , u 2 , u 3 , u 4 ) If SQT separates u i and u j , mark ( z i , z j ) C = conn . components of unmarked edges For C i in C If C i = { z } , add z to S t + 1 If C i = { z 1 , . . , z r } Create hidden node h with children C i Add h to S t + 1 L ( h ) = U z in Ci L ( z ) S t = current nodes L = observed nodes representing each u in S t Analysis : RG Algorithm X Z i Z j Y h g • By property of SQT , ( z i , z j ) is marked only if z i and z j are not siblings • If there are enough samples , at each step , only the unmarked nodes are siblings • Correctness follows by induction over time steps • Thus RG algorithm recovers the correct tree Conclusion and Open Problems • We provide an algorithm for learning linear multivariate latent tree graphical models • Performance guarantees and sample complexity analysis • Open Problem : Is the sample complexity optimal ? Thank You !