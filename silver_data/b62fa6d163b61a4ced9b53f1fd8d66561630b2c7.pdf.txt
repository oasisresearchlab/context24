Exploring Representation Problems Using Hypertext Catherine C . Marshall Xerox Special Information Systems 250 N . Halstead Street Pasadena , CA 9 1109 ABSTRACT Hypertext is a technology well - suited to exploring different kinds of representational problems . It can be used first as an informal mechanism to describe the attributes of objects and to capture relationships between the objects . Then hypertext structures can be constrained into a more formal representation of a domain , model , or analytic technique . A range of strategies for using hypertext can be employed to describe a problem and converge on an appropriate representation ; competing representations can be informally evaluated to compare their relative expressive power . This paper discusses several applications that have used NoteCards , a hypertext idea processing system , to tackle representation problems . Examples from each problem domain have been collected using the hypertext system as the initial acquisition vehicle . Subsequent analysis using hypertext structuring tools has revealed the semantics of each problem domain enabling the development of competing representations . Abstraction of the structure and form of these representations can be used to guide system extensions . These tailored extensions support the evaluation of a representation’s relative merits ; the representation that has been developed in response to a particular problem can be applied to analogous problems to determine the limits of its scope . The first application described in this paper models a type of policy decision - making process ; the second looks at approaches to representing the logical structure of an argument ; and the third suggests some methods for capturing the structure of a political organization as an alternative to a conventional database design . The applications are discussed in terms of the issues they raise and the trade - offs they involve , how hypertext - based tools have been used to exploit the representations , and the solutions and techniques that have been developed in the process of creating each representation . INTRODUCTION Hypertext systems are generally aimed at the needs of authors , designers , on - line readers , and other users performing idea processing tasks , but they also meet the needs of many November 1987 Hypertext ‘87 Papers 253 representation tasks directed at producing a formalism . Hypertext systems provide tools to view and manipulate structure as well as content , thus supporting the move from textual descriptions to emergent forms and abstract structures . The ability to work with unstructured information in conjunction with formalized , systematically organized information is the chief advantage in using a hypertext system rather than a knowledge representation language or a database description language . Systematic structures and expressions of content can be introduced and manipulated without the constraints of a formalism . Examples can be collected and analyzed , and structure can be created and imposed as general patterns are understood . The representation process parallels the principal activities comprising idea processing , acquisition , analysis , , and exposition [ HaIa871 . The acquisition phase of the representation process involves collecting examples from the domain , and possibly organizing them in some rough conceptual framework . The analysis phase involves discovering which features describe an object , what relationships exist between objects , and how objects can be categorized . Thus node contents , network structure , and a classification system are represented . The analysis process produces an abstract form of the representation that may then be refined as flaws are identified and missing features are noted . The exposition phase uses the product of the analysis phase , the representation , in an application to demonstrate its effectiveness . The representation can be applied to analogous problems by instantiating the formalism with elements of the new problem . Figure 1 summarizes a hypertext approach to creating a representation : Figure l _ A model of the representation process . examples object * granularity - relational description ( 2 description abstract representation refine representation NoteCards is a hypertext system that has been under development at Xerox’s Intelligent Systems Laboratory for the past four years [ Hala871 . Because it was designed to meet the needs of idea processing activities , it has served as an interesting basis for conducting 254 Hypertext ‘87 Papers November 1987 investigations involving representation problems . This paper describes the salient features of the NoteCards system , then discusses three different representation tasks that have used NoteCards ( and , more generally , hypertext concepts ) to support the processes entailed by the tasks . The applications bring up certain important issues and trade - offs , and suggest activities that hypertext can support . Specific features necessary for each task are also discussed . SALIENT FEATURES OF THE NOTECARDS HYPERTEXT SYSTEM The central construct in the NoteCards system is a semantic network that consists of electronic notecards as the nodes connected by typed links . Each notecard contains an arbitrary amount of information embodied in text , graphics , images , or some other editable substance . Each link designates a specific relationship between two notecards ; the relationship may be either user or system defined . The system provides two specialized types of cards , browsers and fileboxes to help manage networks of cards and links . A browser contains a structural map of a network of cards ; it may be system - generated or user - created . Browsers are both a presentation tool and editing mechanism . Fileboxes can be used to cluster and organize collections of notecards , yielding a hierarchical filing structure managed by the system . NoteCards also includes a set of protocols and functions for creating new types of cards and manipulating the information in the network . This applications - oriented extensibility plays an important role in preserving and formalizing a representation so it may be applied in other situations . Figure 2 illustrates a sample NoteCards screen display . It includes a text notecard with a link to a second text notecard , a map with links inserted in it , and a browser of a relevant portion of the network . The map is drawn on a sketch card that is based on an object - oriented graphics editor . Sketch cards are used extensively in the applications discussed below . Figure 2 . Sample NoteCards display . November 1987 Hypertext ‘87 Papers 255 USING NOTECARDS AS A VEHICLE FOR DEVELOPING REPRESENTATIONS This section describes three application areas in which NoteCards has been used as the vehicle for capturing a representation in the context of a specific domain and problem . The first two applications , the Rational Actor Model for policy decision - making and the template for representing the logical structure of a legal argument , are both part of a more general investigation into the structures and processes of argumentation . The third application is more of a proof - of - concept problem ; the representation created here was to demonstrate how hypertext could provide leverage in creating shared information resources . Each application is presented in terms of initial problem ( what the representation is supposed to capture and a little bit of background ) , approaches used , and results . The abstract techniques embodied by each representation are intended to be sufficiently general that they can be applied to other problems . Application 1 : A Rational Actor Model for policy decision - making Analyses of international events are often framed within a tacit Rational Actor Model to explain the logic of an action and justify the corresponding response or policy decision . This application defines a hypertext model to represent rational actor analysis ; the template developed for analysis and decision - making is intended as a general framework for performing similar tasks . It is a vehicle for evaluating competing explanations and arguments about the consequences of any particular course of action . The Rational Actor Model assumes that the behavior of a nation can be viewed in terms of a monolithic , rational individual with a unified purpose and motivation and that the intricate processes within a government can be ignored . Interaction between rational actors occurs in a chess - like move / countermove framework . Thus , to perform a rational actor analysis in the NoteCards framework , the analyst adopts the role of the decision - making actor . The examples for the NoteCards representation of the rational actor template are taken from Allison’s multi - model analysis of the Cuban missile crisis [ Alli711 . The initial part of the representation process involved simply moving Allison’s outline of explanations and decision options into a hypertext form . In this case , text cards were used to collect verbal descriptions of the rational actor analysis . Cards were created for each of five hypotheses explaining possible Soviet goals in deploying the missiles in Cuba . Evidence for each hypothesis was also collected in individual cards and linked to the supported hypothesis . This structure soon proved to be too weak to represent the type of argument that was being employed in the source text . In Allison’s analysis , the arguments for and against each of the explanations are based on the other options the Soviets could have chosen to achieve that particular goal . The explanations of how certain options meet specific goals are framed not only in the context of the situation , but also in the constraints imposed by the Rational Actor Model . This form of explanation suggested that a representation be developed to use this notion of evaluation of goals with respect to options as constrained by the model . VanLehn’s matrix summary cards WanL851 256 Hypertext ‘87 Papers November 1987 inspired the development of a similar type of matrix for use in this application . By using options and goals as rows and columns , a framework is provided for evaluating the explanations and the entire argument is given a structure . Figure 3 shows an abstract form of an Option / Goal matrix ; each row is labeled with a different option , and each column is labeled with a goal . The cells of the matrix contain a semi - qualitative assessment of how well an option supports the corresponding goal : Cl G2G3G4 . - . 01 02 03 Figure 3 . An Option / Goal matrix . In its NoteCards implementation , both the cells of the matrix and its row and column labels are links to supporting argument networks and description cards , To represent how an individual hypothetical goal is tested , a matrix like the one shown in Figure 4 is constructed . Testing an individual hypothetical goal involves weighing it against each of a set of plausible options . The options are obtained by introducing slight variations into the character of the situation . For example , in the case of the Cuban missile crisis , the Soviets chose to deploy MRBMs , IRBMs , and troops in Cuba . The character of the deployment should thus be varied to yield some other hypothetical options ( for example , deploy a small number of MRBMs in Cuba or deploy Soviet troops in Cuba ) and the location of the deployment can be varied ( Berlin instead of Cuba ) to explore that characteristic of the option chosen . Constraints introduced by the Rational Actor Model ( such as “Avoid risk” or “Minimize cost“ ) are also evaluated with respect to the options in the context of the hypothetical goal of the action . Figure 4 shows the Option / Goal matrix evaluating the hypothetical goal of Probe , an abbreviation of what Allison refers to as “Hypothesis Four : Cold War Politics . ” Figure 4 . Option / Goal matrix evaluating a hypothetical goal . In this representation , links are used to carry an assessment of value ; they are semi - quantitative measures of argument strength . The sigma cell values combine the evaluation of the claim supporting a particular option with regard to the hypothesized goal ( in the Test Goal column ) with any negative values of the links in the row for that option , which November 1987 Hypertext ‘87 Papers 257 indicate that Rational Actor constraints ( referred to in Figure 4 as Static Goals ) have been violated . For example , in Figure 4 , the option “O / C41 Small # of MRBMs in Cuba” is assessed as strongly supporting the hypothetical goal of probing American intentions in the context of Cold War politics ; a value of < + - + > has been assigned to the appropriate cell . Since no constraining Rational Actor goals have been violated , the value in the sigma column for O / C4 is also < + + > . But in the case of option “0X2 : MRBMs , IRBMs , Troops in Cuba , ” the very positive assessment of the hypothetical goal has been modified downward in the sigma column by the violation of cost minimization and ideological constraint satisfaction goals . The level of constraint violation was relatively small , so the sigma value for O / C2 has been lowered a qualitative step to < + > . In this case , assessment of the sigma values has been subjective ; however , eventually the heuristics for combining values will be made explicit so the sigma column can be computed automatically . The top level Option / Goal Matrix , the Possible Worlds Matrix shown in Figure 5 , is constructed from the set of completed lower level Option / Goal matrices . Its rows match the option range of the lower level matrices and each of its columns represents a goalset combining a hypothetical situational goal with the set of constraining static goals . The values in its cells can thus be taken directly from the sigma column of the corresponding matrix for evaluation of a single hypothetical goal . For example , in the matrix shown in Figure 5 , the column under “GS : Probe” is taken from the sigma column in the matrix shown in Figure 4 . Interpretation Pos . sible Worlds Hypothetical Options [ psi - cxl [ ( iS ; Coercipnl ( GS : Ocfcnscl [ o ~ ~ O / Cl : Defensive Missiles in Cuba lIto > l a pJ m pJ OICZ : MRBMs , IREMs , droops in Cuba 1 pJ ( < - , ( f - zi @ : iv , ’ 1 ! . . - . . . - . . - . O & 3 : Troops in Berlin . . ‘ . ’ O / C & Small f ot MRl3Ms in Cuba . . . : OIC5 : Troops in Cuba u / < - ) I . . : Figure 5 . A Possible Worlds Option / Goal matrix . To interpret the Possible Worlds matrix to isolate the goal associated with the most likely explanation , the row of cells corresponding to the opponent’s action is used . In the case of Figure 5 , the actual Soviet action is described by “O / C2 : MRBMs , IRBMs , Troops in Cuba . ” In that row of cells , the most positive value corresponds to the hypothetical goal addressing Soviet strategic inferiority in the missile race , “GS : Power . ” Therefore , the winning argument is associated with that hypothetical goal , and it can be taken to represent the most likely possible world . An explanation and counterargument mechanism can be driven off of this matrix to produce explanations like , “If rational actor RA had wanted to satisfy hypothetical goal HG embedded in goalset GS , then it would have acted according to option O / C . ” For example , in the case of Figure 5 , for the hypothetical goal embedded in “GS : Defense , ” an explanation could be built by finding the most positive cell value in its column , and instantiating in the form given above : “If the Soviets had wanted to satisfy the goal of Cuban 258 Hypertext ‘87 Papers November 1987 defense ( GS : Defense ) , then they would have deployed Soviet troops in Cuba ( O / C ! 5 Troops in Cuba ) . ” The chief advantage of using this matrix layout to organize the Rational Actor analysis is that it is a very compact representation for evaluating competing arguments . The Possible Worlds matrix shows a range of scenarios that account for the Soviet action , as well as an assessment of their relative plausibility . Because the cells are links to a claim structure , a NoteCards browser can be used as the vehicle for examining competing arguments and evaluating the strength of the underlying structures . The representation used for claim structures imposes the requirement that each leaf card of the claim network be linked to the network by either an Evidence link or an Assumption link . Figure 6 shows an example of a claim structure ; it refers to a claim supporting the cell in Figure 4 corresponding to the option “O / C2 : MRBMs , IRBMs , Troops in Cuba” and the hypothetical goal “Probe . ” The solid lines represent Evidence links ; the dashed line represents a + + link to the subclaim . It is has been chosen as an example since it is relatively simple ; many of the claim structures constructed in representing Allison’s rational actor analysis of the Cuban missile crisis are far more complex . This claim structure representation also allows the network to be browsed to pinpoint evidence dependencies . Figure 6 . A simple example of a claim structure underlying a value link . Several unexpected results arose from the assumption / evidence requirement on claim structures . ( 1 ) The need to identify assumptions helped to tease out some implicit characteristics of the Rational Actor Model . The ability to explicitly identify model dependencies may facilitate the process of applying this representation to the problem using a different analytic model , for example Allison’s Governmental Politics Model . ( 2 ) Because there were so many examples of both evidence and assumptions , various categories of each became obvious . This observation led to the construction of a hierarchical framework of fileboxes to express a taxonomy of evidence and assumptions . Link types could also have expressed this taxonomy ; for example , Assumption links could have become Model Assumptions , Domain Assumptions , and Local Assumptions . However , it was inconvenient to expand the existing set of link types since this application had already put much of the burden for value assessment on the link types . Application 2 : Logical argument structures The second application investigates the logical or deep structure of an argument as part of a multi - level analysis of argumentation . This analysis of an argument’s logical structure is November 1987 Hypertext ‘87 Papers 259 framed in the legal domain . Specifically , transcripts of the oral arguments from several Supreme Court cases are examined to arrive at a representation that captures individual micro - arguments and how they interact . The representation identifies legal concepts and organizes the separate concepts into an issue - level argument . The representation of a micro - argument is based on Toulmin’s argument layout [ Toul58 ] . A Toulmin argument layout consists of six elements : a claim , which is an assertion about a specific entity or a central thesis ; a qualifier , which may modify the claim ; a datum , which is a fact in support of the claim ; a warrant , which is a rule or principle governing the datum / claim relationship ; a backing , which is a case , model , or other support for a warrant ; and a rebuttal , which is a counterclaim that may function as a claim in another argument . In this application , the Toulmin structure has been simplified by omitting the qualifier , so the basic structure looks like this : Datum 7 So , Claim Since Unless Warrant Rebuttal I On Account of Backing Figure 7 . A Toulmin structure . Arriving at a NoteCards representation of this structure took several iterations despite its apparent simplicity . The examples used to drive the development were taken from a California Supreme Court case , People V . Carney , which revolves around the issue of whether the warrantless search of the defendant’s motor home was justified by the so - called “automobile exception” to the Fourth Amendment requirement and the right established by Article I , section 13 of the California Constitution . In particular , the primary argument that motor homes are included in the protection given by the Fourth Amendment was used as an example . This argument’s datum is “Motor home X is being used as a home , ” and its claim is “Motor home X cannot be searched without a warrant . ” From Figure 7 , three initial requirements are placed on the representation . First , the spatial layout of the argument is important to the comprehension of the content . The spatial layout includes the linguistic cues , so , since , on account of , and unless , since they are key to understanding how the logical structure maps to a surface structure of connected sentences . Second , the relationships between the argument elements , the datum , claim , warrant , backing , and rebuttal , should be expressed in some way . Third , there needs to be a way to represent connections between elements in different micro - arguments . For example , two arguments might share a warrant , or a claim in one argument might be a datum in another 260 Hypertext ‘87 Papers November 1987 The first attempt at representing a basic Toulmin structure used the NoteCards browser card . The browser seemed to be an apt candidate since it shows a graph of the network , provides facilities for editing structure and creating new nodes , allows relationships between nodes to be specified and differentiated on the display , and can be saved in the database . Figure 8 shows the browser version of an argument card . Each node corresponds to a card ; the card’s title is shown as the label for the node . A link legend appears on the upper right hand corner of the browser . Labels have been added to show the linguistic cues . I [ Gn Acc’kunt Of ] Figure 8 . Argument card as browser . Not only does the appearance deviate from the ideal layout shown in Figure ‘7 , but also the semantics of the argument become muddled . There are directed links in both directions to indicate the relationship between datum and claim ; this structure seems to be an adequate reflection of the Toulmin layout’s semantics . The relationships between rebuttal and claim and backing and warrant are similarly straightforward , but the warrant relationship actually annotates the links between datum and claim , not the claim itself . There is no way to make a link from a card to another link in NoteCards . The other semantic problem with this representation concerns how the elements are related to the argument . The nodes in a browser in fact represent link icons whose destination is the card shown by title . Therefore , the link from the argument card to its constituent elements is of type BrowserContents , a system - supported link type that is essentially meaningless in the context of this application . With these criticisms in mind , a sketch - based intermediate representation was tried and rejected , primarily because the editing functionality was inappropriate for the task . However , the link semantics seemed to match the problem domain and were carried over to the third representation of an argument card ; this time the representation was based on a simple node - link graph , managed by the user , not the system . A graph - based argument card is shown in Figure 9 . November 1987 Hypertext ‘87 Papers 261 [ Since ] I I [ Unless ] 5 & , & , . Figure 9 . A graph - based argument card . In this variation , the link that connects the argument with its constituents shows the role each constituent plays in the context of the individual micro - argument . Link types are shown as part of the link icon in this display - the icons are of the form < link type > destinution card title . Hence , a particular constituent can play a different role in another argument ( most often , a claim becomes a datum in another layer of logical argument or a warrant is tested with a new datum ) . Note that there are two kinds of nodes in this graph card link icons to connect arguments with constituents ( such as Datum or Warrant ) and labels that annotate the graph with linguistic cues ( such as Since or Unless ) . The two types of nodes fulfill the first two representational requirements concerning spatial layout and relationships between argument elements . In addition , the title of the argument card now reflects the purpose of the argument , showing why motor homes are included under the Fourth Amendment protection . This change made it easier to organize the sixty or so micro - arguments that were found in the analysis . The final requirement on the representation for micro - argument structure is that interargument relationships can be meaningfully exploited . Figure 10 shows a NoteCards browser , following the path from argument card to constituents , to the next set of argument cards that share these constituents , to the set of constituents for the second set of argument cards . This browser has been constrained to show only four levels of structure and the five types of argument links in both directions . It gives some indication of the pattern of argument construction used in the transcript . In practice , the browser was expanded further and helped to identify the two main concepts ( actual function and mobility ) used in the course of the argumentation process . 262 Hypertext ‘87 Papers November 1987 rcquiremcnt . I * Y \ I I \ requirement . \ I w4rrmc f - equtemnt . Figure 10 . A browser showing two interconnected levels of argument . Application 3 : Socialist Republic of Vietnam Party Structure At first glance , creating an information resource based on a description of the party structure of the Socialist Republic of Vietnam seems like a fairly conventional database problem rather than a hypertext application . But the problem proved to be amenable to this more “expensive” way of structuring information . First , a description of an organization combines highly structured information with loosely structured information . Second , the application realizes some benefit from using multiple representations of the same information . For example , an organization chart can supplement a hierarchical structure . Third , database extensions may involve information that does not conform to the original pattern . For example , the database may need to be extended by taking notes on news wires and in some way tying these unstructured notes to both individuals and organizations . Finally , the information is accessible from an number of different routes - some users may find it more convenient to work from an organization chart , while others may find that browsing the hierarchy conforms more closely to how they think about organizational structure . The complexity of having multiple representations is hidden from the user who opts for one information model over another . This application is especially valuable in demonstrating the trade - offs between representing information as relational links or as hierarchical structures that cluster like entities . This trade - off first arises in the decision of whether to use the system - supported hierarchy of fileboxes and filed cards , or to design an organization chart scheme to provide context . In the latter case , the cards representing individual secretariat members are linked to the sketch - based organization chart with Secretariat links . Figure 11 illustrates the trade - off . In this application , both methods were used , since links are not a costly information structure in NoteCards . November 1987 Hypertext ‘87 Papers 263 i ~ : : : + : , : : ; : : , I Secretariat General Secretary pG - Ei & q Membefi [ Dlrol Vo cni Cong Nguyen @ UC Te . m 1 Nguyen Lamj Le Wang oao HOWlg llrtlg Nguyen Tkann Binn Figure 11 . Hierarchical filing scheme v . spatial filing scheme . The impact of these two representation schemes is reflected in Figures 12 and 13 showing the division of semantics in two browsers . The browers have been designed to show the same information , namely which Political Bureau members belong to other Party organizations . In Figure 12 , the information is conveyed largely by the way a card corresponding to an individual is filed in the hierarchy ; information is carried only in the existence of links , not through their type . The original browser layout has been manipulated for the sake of compactness . u : , : * _ _ I . n _ _ * . . , . ^ - - ^ : r - - ^ Pham Vm Oong Figure 12 . A portion of the browser generated from a filebox hierarchy . In Figure 13 , the semantic weight has been shifted almost entirely to the links . Note that the number of links connecting the Socialist Republic of Vietnam Party Structure with the various Political Bureau member indicates the extent to which they are multiply affiliated and the link dashing style shows the specific affXations . Labels have been added to the browser to enhance its readability . 264 Hypertext ‘87 Papers November 1987 Political Bureau & Military Affiliation Chu HUV man Political Bureau . Dep’t . & Secretariat Political P Secretariat Pham Van Dong 1 clang Sy Nguyen Figure 13 . A browser generated from a network structure . This application illustrates one of the most compelling reasons to use a hypertext system to address representation problems . Both of the organization methods discussed can be supported concurrently ; the redundancy strengthens the representation rather than detracting from it . ISSUES Representation problems raise several important issues for the design of hypertext systems and for strategies for using hypertext . One recurrent issue in developing representations is choosing the most appropriate grain size for the individual objects . In NoteCards , this translates to deciding when to segment information in separate cards , and what information to use as the content of cards . For example , in the argumentation application discussed earlier , one crucial decision was whether a micro - argument defined a card that simply contained the statements corresponding to the argument elements ( claim , datum , warrant , backing , and rebuttal ) , or whether the argument elements each needed to be on a separate card . This single - card scheme for representing a micro - argument could have easily been made to appear exactly as it does in Figure 9 . In fact , in the initial phases of development , representing each element as a separate card seemed too fine a division of structure - after all , the only information each card held was its title . Yet this division turned out to be necessary to meaningfully represent the relationships between micro - arguments . Then too , a structure was eventually developed for the contents of the argument constituent cards , so the grain size proved to be appropriate . In many representation problems , a key decision centers around the distribution of meaning - should links or cards carry the semantic burden . Sometimes the decision is forced by the node - link implementation in the hypertext system . For example , in NoteCards links can’t annotate other links ; this limitation helped to determine the form of the micro - argument representation discussed earlier , In the representation of the Vietnam Party structure , the November 1987 Hypertext ‘87 Papers 265 trade - offs were such that multiple distributions of semantic weight were developed . More specifically , the decision in NoteCards often centers around whether to use the system - maintained hierarchical filing structure , or whether it is necessary to use a network of user - defined links , thus placing the semantic burden more heavily on link types . Sometimes the distribution of meaning between link types and nodes is driven by the focus of the application . Performing a representation task or interpreting the resulting of an analysis becomes confusing if link types are used for too many semantically orthogonal purposes , One of the most interesting representational issues centers around using spatial layouts in support of a structuring scheme . All three applications described in this paper use either sketch cards , graph cards , or browsers as the focal means of representing structure . The Rational Actor Model relies on sketch card - based matrices to show relationships between options and goals and to create a framework for expressing competing arguments . In the second application argument cards use a graph to provide spatial context for the constituent elements of a Toulmin structure and browsers to show interargument relationships . The third application uses a literal representation of an organization chart ( based again on a sketch card ) to provide a spatial filing system for the cards describing individual Party members . In these and other applications , a graphic representation of structure has been quite effective in organizing information and promoting comprehension . The issue of distribution of meaning between links and nodes ties in with the representation of quantitative or semi - quantitative values . Value links as implemented in the Rational Actor Model show the strength of a relationship , but this assessment could have been captured using a destination card property as shown in Figure 14 . The problem with this strategy is that the card is then limited to one role and one context - if the claim were applied in another situation , the strength of the support it offered might be far less . A better solution to the assignment of value to links is to make value a link property , but links properties are not ye . t supported in NoteCards . drawing Bussia a Figure 14 . Moving the semantic burden from a value link to a destination card . 266 Hypertext ‘87 Papers November 1987 The final issue in representation development is capturing the exploration of a problem in a concrete structure so that it can be reapplied . In NoteCards , this may mean creating a new card type , or it may mean performing some other type of system tailoring through the programmer’s interface [ Trig871 . In many cases it means that constraints must be imposed on the kinds of links that can be anchored in a given card ; it also means that the form ( and perhaps content ) of the substance of the card types used in the abstract representation must be defined . This process of “casting a representation in concrete” is facilitated somewhat by the protocols and functions provided in NoteCards , but could be given considerably greater assistance . The template cards developed for the Instructional Design Environment ( IDE ) [ Russ871 are one instance of how abstractions can be described in NoteCards . CONCLUSIONS Hypertext meets many of the needs imposed by a representation task . First , hypertext systems are generally based on a semantic network of nodes and links , where the nodes can contain arbitrary content . Semantic networks are a convenient mode of representation for a variety of applications . Second , hypertext systems frequently provide tools for viewing and manipulating this network - browsing seems to be a ubiquitous requirement in establishing the viability of a particular representation . Furthermore , it is often most convenient to interact with a network as a structure ; structure editing capabilities are ideally provided by a hypertext system . Third , hypertext systems can provide a way of abstracting and preserving a representation so it may be reapplied and possibly generalized or refined . Fourth , and most importantly , hypertext systems support the emergent properties of the representation process . The flexibility of a hypertext system is exercised in performing a representation task . In the course of developing a representation , a user may need to switch the granularity of the representation to reflect a growing understanding of which information should be embedded in the content of a node , and which should be made explicit in the network . It is also necessary to balance the semantic weight between network nodes and links . Similarly , the user needs to be able to move between graphic and hierarchical organizing schemes . Often the system must be sufficiently flexible to support multiple representations simultaneously . One important way in which hypertext systems can be extended is in their capacity to aid in the formalization process . First , patterns must be recognized so they can be abstracted ; an extended hypertext system may support this activity . The formalization process includes a certain amount of system tailoring and imposing of constraints , but it also includes checking consistency and restructuring existing work in a new framework . Once the system has been tailored and the necessary support provided for the representation , subsequent work can adopt the new scheme , but additional system support is required to enforce it on earlier work . A second way hypertext systems can be extended is by facilitating programmatic interaction with user - created structures and substances . For example , if a representation is used by an expert system or some other type of inference engine , it may be necessary for the program to interact with the content of a node or object to extract the knowledge inside it . Since hypertext November 1987 Hypertext ‘87 Papers is a good vehicle for capturing and structuring knowledge , programmatic interpretation of a hypertext network appears to be a logical extension . REFERENCES [ Alli Allison , G . , Essence of Decision : Explaining the Cuban Missile Crisis , Little , Brown and Company , Boston , Mass . , 1971 . [ Hala87 ] Halasz , F . G . , Moran , T . P . , and Trigg , R - H . , “NoteCards in a Nutshell , ” CHI + G1 ‘87 Conference , Toronto , Canada , April , 1987 . [ Mars861 Marshall , C . , “Representation of a rational actor model in NoteCards , ” Xerox Special Information Systems ( internal report ) , Pasadena , California , July , 1986 . [ Russ871 Russell , D . M . , Moran , T . P . , and Jordan , D . S . , “The Instructional Design Environment , ” to appear in Intelligent Tutoring Systems : Lessons Learned , J . Psotka , L . D . Massey , & S . A . Mutter ( Eds ) , Lawrence Erlbaum Associates , Inc , Hillsdale , NJ , in press . [ Tou158 ] Toulmin , S . , The Uses ofArgument , Cambridge University Press , Cambridge , 1958 . [ Trig871 Trigg , R . H . , Moran , T . P . , and Halasz , F - G . , “Adaptability and Tailorability in NoteCards” Proceedings of INTERACT - 87 , Stuttgart , West Germany , September , 1987 . [ VanL85 ] VanLehn , K . , “Theory reform caused by an argumentation tool , ” Xerox Palo Alto Research Center Technical Report , ISL - 11 , July , 1985 . Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage , the ACM copyright notice and the title of the publication and jts date appear , and notice is given that copying is by permission of the Association for Computing Machinery . To copy otherwise , or to republish , requires a fee and / or specific permission . 0 1989 ACM 089791 - 340 - X / 89 / 001 l / O268 $ 1 . 50 268 Hypertext ‘87 Papers November 1987