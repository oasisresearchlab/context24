Classroom BRIDGE : using collaborative public and desktop timelines to support activity awareness Craig H . Ganoe , Jacob P . Somervell , Dennis C . Neale , Philip L . Isenhour , John M . Carroll , Mary Beth Rosson , D . Scott McCrickard Center for Human Computer Interaction Computer Science Department Virginia Polytechnic Institute and State University Blacksburg , VA 24061 { ganoe , jsomerve , dneale , isenhour , carroll , rosson , mccricks } @ vt . edu ABSTRACT Classroom BRIDGE supports activity awareness by facilitating planning and goal revision in collaborative , project - based middle school science . It integrates large - screen and desktop views of project times to support incidental creation of awareness information through routine document transactions , integrated presentation of awareness information as part of workspace views , and public access to subgroup activity . It demonstrates and develops an object replication approach to integrating synchronous and asynchronous distributed work for a platform incorporating both desktop and large - screen devices . This paper describes an implementation of these concepts with preliminary evaluation data , using timeline - based user interfaces . Keywords activity awareness , CSCL , CSCW , large screen display , multiple - device system , timeline interface INTRODUCTION Collaborating on a team project over a period of many weeks , especially when not all members are co - located , requires each member to maintain awareness of one another’s intentions , actions and results . We define activity awareness to be the awareness of long term joint efforts directed at specific goals and objectives that promotes informed action and reaction [ 2 ] . This extends most prior work in awareness that has focused on social ( who is present ? ) or action ( what is happening ? ) awareness . Instead , activity awareness focuses on the “why ? ” aspect to awareness . Important issues include awareness of the overall situation , social expectations and dependencies within a group , and shared task goals and status . We have developed software to support activity awareness in a distributed CSCW context . After examining awareness breakdowns in a prior version of our system , we have identified three goals for user interfaces supporting activity awareness : • integrated presentation of awareness information ( workspace views that embed awareness information so that people do not have to switch attention to peripheral displays ) • incidental creation of awareness information ( via document transactions like e - mail exchanges and version saves ) • public access to all group activity to enable coordination at an overall project - management level ( i . e . the teacher ) Our solution supports activity awareness and responds to these goals by providing tightly coupled , collaborative timeline interfaces on both the desktop ( for coordination within small groups ) and a public display ( for sharing among the groups ) . RATIONALE The Classroom BRIDGE software is an evolution of our original Virtual School [ 6 ] software . This software has been developed as the result of employing a long - term participatory design method [ 1 ] through which a group of public school teachers have been involved in our technology development . They have had a voice in requirements development for a number of years . These prototypes are embedded in classroom contexts as we go along , and feedback about their use is an on - going and routine aspect of our development process . Our software has been designed to support distributed group projects between school classrooms . For example , a group of two to five students in one classroom might collaborate as part of a larger team including similar groups from other classrooms . The typical activity for these teams is a long - term science project ( many weeks ) where the students divide up research , experiments , and writing work along with other tasks and then collectively report on a given topic . The students rarely meet in person , so the work is essentially computer - mediated . The original Virtual School software provided means of communication between the groups along with a collaborative tool This work is copy written ; do not spread copies of this document . environment for developing the project report . This context , though not unique to the classroom , offers many challenges in providing activity awareness information between the distributed members of the team . Coordinating Activities in the Classroom The students are typically provided at most one class period per week for synchronous collaborative activity , allowing for about 30 minutes a week when the entire team could meet virtually using our software . This time is generally spent catching up on what has happened over the past week and discussing what needs to be done next . Tasks are handed out to members of the team , and they typically agree to have the tasks completed and information entered into the system by the synchronous session . Our original software to support the team projects provided tools to support planning along with a mechanism to notify users of document changes . Still issues regularly arose where the students did not follow their plan and then consequentially students were unaware that the plan had not been followed . This led to a breakdown in activity awareness . There were activity awareness issues at the classroom level as well . The teachers would initially agree on deadlines for the team projects , but individually a teacher might push a date back based on current circumstances in their own classroom . This would lead to situations where the distributed student groups were unaware that a deadline had changed ( or that it had only changed for a fraction of the team ) . During the class periods dedicated to synchronous activity , the teachers were often blind to the overall picture of what was going on within the project groups . Their participation was relegated to looking over shoulders at the computers , and they were sometimes only aware of issues when the students asked for help . Additionally , the teachers were left with only a third - party view to what was going on in the other classroom . The students successfully completed their projects with the Virtual School software , and the teachers were satisfied with the results . We had met our original project goals to provide the students with a collaborative environment to support project work between classrooms . Still , we believed that considerable improvements should be made to improve activity awareness between all the users . In the desktop software , we needed to provide a quick way at login for students to see what asynchronous activity had recently taken place . Planning had to be moved to a more prominent part of the interface , instead of being an often unseen tool on a separate panel . Easier access was needed to older versions of the documents , so one student could be more confident in making changes without risk of losing another ' s work . At the classroom level , we needed to make information about each group ' s work publicly available to the teachers and deadlines had to be shared . Some key goals arose from our desire to resolve these issues . A specific visualization had to be chosen that would consolidate most of the activity awareness information into a single place . This visualization should have an integral role in user interactions with the system so that it becomes part of the user ' s everyday use of the system . We wanted to provide as much activity information as possible without relying on the students taking extra effort to maintain the visualization . In response to these issues , we redesigned our desktop user interface for the team projects . We have also added to each classroom a single large screen display to provide awareness information among projects at the classroom level . The emphasis on planning along with activity awareness has led us to use coordinated timelines on multiple platforms as the primary visualization for project information as well as interaction on both the desktop and large display interfaces . In the balance of the paper we first discuss related work , then describe our user interface design and how it enhances activity awareness . We provide examples of the new software in classroom use . RELATED WORK Our original Virtual School software to support the classroom focused on providing collaborative tools for the students to complete their science projects [ 6 ] . Our interface had a main window that provided a list of users in the group , a notice board that listed events such as document creation and editing , and a list of notebooks . The user list provided awareness information about who was present in the system along with various means to communicate with teammates ( chat , video conferencing and e - mail ) . The notice board listed " change " events including their date and time sorted such that the most recent events were visible . It is worth noting that the chat and video communication channels opened in separate windows as did the notebooks . This often caused the awareness information provided by the user list and notice board to be lost beneath what was typically the primary activity in the chat or video windows along with the notebook . A notebook was the mechanism for completing project work . Each tabbed notebook page would contain a specialized collaborative tool : a text editor for writing reports , a whiteboard for drawing graphics , a planning tool that allowed creation of Gantt charts , or a bibliography tool for references . The students would create a separate tabbed page for each section of their project report . Users could see changes that were occurring if they were also viewing a page that was currently being edited by someone else . Otherwise , they would have to scroll through the notice board list to see what had happened . The planning tool was never used ( although it unavailable until late in the project ) . A few students did create notebook text pages that included some planning information , but those pages were never updated and rarely looked at after creation . Since the planning tool required at least as much , if not more , maintenance as the text pages , there are doubts it would have seen any more use than the text alternative . As a result , we decided to move access to the documents ( tabbed pages ) onto a timeline interface . Change information ( a version history ) for each document was incorporated onto the timeline . Calendar objects provide tools for scheduling events on the timeline , for both teachers and students . The result was solutions to many of the issues discussed above , integrated into a single visualization that the users actually used to access their documents . Prior systems have examined using a timeline interface for maintaining a document and desktop history , but not in a collaborative setting . Time Interfaces Other systems have explored using time - based interfaces for accessing documents in place of traditional file list explorers . Lifestreams provides a time - ordered view of documents that is displayed as a single offset stack ( a lifestream ) of pages [ 4 ] . Instead of using directories , a “find” operation allows for queries on the lifestream , allowing the users to view sub - streams of their documents . A scroll bar allows movement through time , appropriately adjusting the stack of documents . Documents can even be created in the future to serve as reminders , but those documents only become visible when you scroll into the future or when the current time reaches the designated time . TimeScape offers three different time - based views of the documents on a typical personal computer desktop interface [ 12 ] . This makes available a 2 - D plus time workspace . The desktop view follows the desktop metaphor , but additionally provides navigation controls to move through time and see what the desktop looked like at that time . The timeline view rotates the desktop view into three dimensions , showing a slanted perspective visualization of the current desktop . Horizontal lines displayed on the timeline designate the lifetime of objects from creation to deletion on the desktop . The third view is a monthly calendar view that lists with each day the objects created on that date . Notes can also be posted in the future on the TimeScape desktop to serve as reminders , and keyword filtering of the views is supported . Both of these systems received positive feedback in limited use . By adding time to visualizations of the document space , these systems provided valuable history of personal activity . We believe that these properties can be carried over to CSCW interfaces , and that activity awareness as well as planning can be supported . Large Screen Displays Despite a range of efforts to use large screen technology for supporting collaborative work [ 3 , 8 , 9 , 11 ] , there are few instances of leveraging the display capabilities of large screens as visualizations for enhancing activity awareness for co - located groups . The Notification Collage [ 5 ] is one example of research efforts exploring the use of large screen displays for supporting action awareness . In this work , a large screen display was used to provide action awareness information to co - located members within a common lab environment . The content displayed included Post - it™ style notes , web pages , slide shows , documents , and streaming video . These items provided a sense of what people were doing . A different example large screen system is the Blue Board [ 13 ] . This system provided social awareness information in the form of user lists and specifics about different people’s calendars and availability . This information allowed a user to quickly and easily assess the availability of a colleague . These examples illustrate the social and action awareness capabilities that large , publicly viewable screens provide . By focusing these techniques and additional information around a coordinated timeline view , our Classroom BRIDGE interface extends the Virtual School software to support many key elements of activity awareness . CLASSROOM BRIDGE This section describes details of the Classroom BRIDGE user interface , including a description of the desktop client and the large screen interface . Both interfaces center on a timeline metaphor to view and access the students’ work . A brief explanation of the collaborative CORK and BRIDGE architecture upon with the system is built follows the user interface descriptions . Desktop Client The Classroom BRIDGE Desktop Client builds upon the BRIDGE architecture providing a place for collaborating on small group projects . In its current form , it was designed to support work groups of a small number of people , collaborating synchronously or asynchronously with one to two dozen documents , over a period of less than a year . The environment provided by the desktop client is effectively a sub - directory in the hierarchical directory structure of shared objects supported by BRIDGE . That sub - directory contains the documents related to the project , and the desktop client user interface provides a workspace to access those documents along with chat and awareness mechanisms . The desktop client ( Figure 1 ) is divided into four main quadrants . On the left , a closable sidebar contains a user list on the top and a persistent chat session on the bottom . The user list provides awareness information about the presence of other group members by displaying the user names of each group member that is currently using the client . The chat session works like most typical chat clients . Chat messages are displayed in a scrolled list with the time and sender above an input box for entering messages . The chat session is persistent so that group members who miss a discussion can review what was said . This chat session is an individual shared object just like the other documents created and shared by the group . It appears in the group’s list of documents , and it can be opened in a separate window in the workspace if the users want it sized differently . As chat messages are entered , the chat session’s last modification time is updated on the timeline ( discussed next ) . Menu items support clearing the chat session , and when cleared the prior messages are placed in an archived version on the timeline . To the right of the user list and chat panels are the timeline on top and the workspace below . The timeline is a visualization of the present project state along with its history and upcoming events . Our previous system provided information about additions and changes to the project space in separate windows ( i . e . the notice board ) and the information was easily ignored . The timeline was designed to be an integral part of the operation of the workspace , and its required use to access objects makes the visualization an active part of working on the project . The key to making this visualization a useful part of the system was designing it to be similar in use to the simple document list that it was replacing ( i . e . the hierarchical file list ) . The timeline itself was then designed as a set of simple timelines , one per document , which is essentially a document list . We also felt that the timeline metaphor was one that would be easily recognized by the students . To access the timeline , a user either presses a one - touch button to pop - down the timeline from its minimized state or pulls down the slider bar that separates it from the workspace . The timeline initially opens centered on the current date and can be scrolled horizontally left , back to the set start date of the project , and right , to the estimated end date of the project . The groups typically meet weekly , so it was decided to provide weekly labels of the dates at the top of the timeline . A light gray vertical line below the label is drawn down the length of the list to mark the labeled dates . If all of the individual document timelines in the list cannot be seen , a vertical scrollbar is also available . The individual document timelines provide a history of the document with icons placed over time , one per version of the document . The current version of the document is Figure 1 : Desktop client . Time is represented left to right , scrollable from the start to the end of the project . Icons represent work artifacts with each row containing the history of an individual item ( A ) , the rightmost is then the current version ( B ) , with archived versions to the left ( C ) , and darker vertical lines represent deadlines ( D ) . A B C D always the farthest to the right and has the document’s name to the right of that icon . Holding the mouse pointer over a document icon brings up a tool tip that tells when the version was last modified and who modified it . Double clicking on an icon opens that version of the document in the desktop pane . New versions of modified documents are saved automatically on exiting the desktop client , so valuable project activity information is made available automatically without user effort . Single - clicking anywhere along the individual document timeline selects that entire timeline and menu items provide options to open , rename , delete , duplicate , and change permissions on the document . The individual timelines can be dragged and dropped to reorder the list or move / copy objects between workspaces . To support planning and sharing schedules , calendar objects are available , and the interface , modeled after typical calendar tools , allows for the creation of timed events . Calendars can be designated to appear on the timeline . Events from calendars appear on the timeline as colored vertical bars . Holding the mouse over an event on the timeline brings up a tool tip with the name of the event and its exact time . Our goal was to provide a calendar to the teachers that would be shared between the student workspaces for project deadlines along with providing each student group a calendar for planning individual work . Below the timeline is the workspace , where documents open in their own sub - windows . Archived versions of documents show their date in the title bar and are marked as read - only . One concern with the projects was students accidentally ( or intentionally ! ) deleting another team member’s work . They can now copy text from previous versions back into the current or other documents when desired . The desktop also provides its own awareness features . The location and size , but not depth of desktop windows is shared between clients in the project group . This provides a small level of synchronous activity awareness , but allows different users to work on whatever they want . That shared state is also saved between sessions , so documents can be left open as a reminder of previous state . Large Screen Not surprisingly , when groups like the ones described earlier collaborate on a project , problems arise in all stages and aspects associated with communication and planning . People forget things , data get lost , and work is not completed . These problems are magnified when group members neglect to report them to the rest of the group . This lack of communication of the breakdowns was evidenced in early studies of the Virtual School [ 2 ] . We believe that providing mechanisms to show deadlines and project goals on a large public display could alleviate the lack of communication that occurs among group members . Furthermore , this knowledge might be leveraged by the teachers in assessing group progress , which could lead to higher levels of understanding of individual group work , as well as inter - and cross - group performance . In using a large screen display to present information about the student activities within the Virtual School system , a logical choice of information to present includes changes to project notebooks , chat messages , emails , and action items [ 6 ] . Records of this activity are kept within the Virtual School system ; all that is required is gathering the information and presenting it in the class on the large screen . A useful technique is to present the activities of each group on the large screen simultaneously . This allows for quick comparison across groups to get a sense relative progress toward the project goals . Similar to the desktop views , icons are used to represent various activities ( from document changes to chat messages ) . Highlighting recently added icons stresses the most recent activity by the students . A dedicated information space near the top of the screen presents detailed information on highlighted icons . The highlighted icon changes after a short period of time ( eight seconds ) , thus updating the details reported in the information space . This cyclic highlighting provides details on some of the recent activity across the groups . This technique was implemented by integrating each of the groups ' data in vertical " stacks " ( see Figure 2 ) . A horizontal row represents a single group ' s activity throughout the project scope and these rows are placed one on top of the other . This type of representation should allow for easy comparison across groups , because they are lined up by time . Further separation of the activity occurs within each group row . A faint horizontal line splits the row into two sub - rows that contain the icons which represent the 6th and 8th grade work , with 6th grade on top and 8th grade on the bottom ( Figure 2 ) . This provides the ability to quickly assess which work was done by the two classrooms . This extra split only occurs on the time area devoted to the current week and the previous week . Other time intervals do not provide this distinction . Time is represented horizontally in both the large screen and on the desktop . This timeline is intended to support activity awareness in several ways . First it shows relationships of activity over time . By showing when clusters of activity occur , this could lead to an understanding of how the group completes work , and would also indicate obvious times of inactivity ( through the absence of icons on the screen ) . Secondly , areas representing specific chunks of time ( weeks for example ) can vary to put stress on more important dates . Figure 2 : Large screen . Time is represented from left to right , with left - most column representing the start of the project , with duration of 28 weeks . Individual icons represent work artifacts ( A ) , horizontal rows correspond to different groups ( B ) , highlighting ( C ) reflects the current document information found in the upper right banner ( old versions of same document are highlighted as well ) . This design was chosen because the groups only meet once per week and it could be useful to see what has happened during a single class period . Teachers especially could benefit from this emphasis on the current class period by comparing progress across the groups , and intervening when groups appear to be “slacking . ” The science projects include specific , teacher - defined deadlines for when aspects of the project should be complete . These deadlines are represented as vertical bars that span across all groups , situated on the due date . The expectation is that these deadlines would be highly visible , prompting students to get their work done on time . Furthermore , teachers can see if a deadline is approaching and if certain groups are " falling behind " ( by absence of icons for their group ) . An announcement area is included near the top of the display . Teachers can post messages to the classroom for simple viewing by the students . Multiple messages can be displayed through a simple fading animation . This animation cycles through each of the messages with an alpha blending technique . Teachers can pause the animation and move through the list of announcements by clicking on simple interface controls . As mentioned , the highlight is used to identify the most recent work activities by the groups for the given day . A yellow box covers the selected work icon , and corresponding details ( such as the documents name , group responsible for the work , their grade level , etc . ) are shown in a large banner in the upper right corner of the display . The banner is colored yellow to correspond with the highlighting , to provide extra cognitive aid in associating the two information pieces . Older versions of the specific work artifact are also highlighted in the yellow color to indicate when / how work has been completed on that artifact , throughout the project scope . The iconic representation of work artifacts allows the users of the Classroom BRIDGE system to easily shift attention between the desktop client and the large screen display . Both systems use this metaphor to represent activity within the workspace ; hence , leveraging this representation in the public visualization enhances and solidifies the connection between the two interfaces . Interactions with the large screen display would only occur rarely . The display was designed to be used in a hands - off manner as a visualization aid to the teacher and students ; for assessing work progress and identifying groups who A C B need help . However , some simple interactions are supported . Adding announcements to the display requires simple input from the teacher . He / she can input the text body of a message after two clicks . If necessary or desired , details about any of the work artifacts can be accessed by clicking on a work icon . This action will bring up a dialog box with details about the work artifact . Once the desired information is obtained , a single click removes the dialog from the display . System Architecture The Classroom BRIDGE software uses object replication to support synchronous and asynchronous distributed work . We have developed a toolkit , CORK ( Content Object Replication Kit ) , which seeks to simplify construction of tools that support fluid transitions between synchronous and asynchronous interaction [ 7 ] . Clients retrieve replicas of Java objects such as chat sessions , whiteboard contents , and text documents , from a centralized server . Listeners are attached to the local replicas that detect local modifications and broadcast them back to the server . The change messages first update the master replica in the database and are then to other active clients . This approach separates collaboration support from a given tool ' s data model or user interface implementation , and also eliminates the need for the user to use different tools for synchronous and asynchronous work . On top of the object replication services provided by CORK we have designed another library named BRIDGE ( Basic Resources for Integrated Distributed Group Environments ) that simplifies composition of collaborative objects into user - accessible environments . BRIDGE supports naming and structuring of sets of collaborative objects and mapping both web - accessible and interactive user interfaces to collaborative objects . It also provides a set of standard services , such as interfaces for controlling read and write access to objects ; efficient mechanisms for tracking which users are viewing which objects ; and tracking of versions of objects . Versions are stored in a linked list associated with each replicated object . Each version consists of a read - only copy of the object , a timestamp representing the time of the last modification to the object when the version was created , the name of the user who made the change , and an optional comment describing the version . Additional metadata attached to each version can also be added . For example , links to graphical markup , discussions , or other forms of annotation could be attached . BRIDGE supports both automatic and manual version creation . Automatic versioning leverages CORK ' s change broadcasting mechanism to detect the first modification to an arbitrary replicated object during a session . This means that a version will be captured that represents the state of the object before a given user makes any changes . In a synchronous session , this represents a tradeoff between safety and efficiency : saving more versions would better support recovery from errors made while more than one user was editing the document concurrently , but at the cost of space for storing the versions , bandwidth for transmitting them , and processing cycles for creating the copies . To avoid these problems , manual versioning of all BRIDGE objects is also supported . Users can choose " Save version . . . " from a menu ( and optionally enter a comment ) any time that they want to ensure that a given state of the object is preserved . EVALUATION AND FIELDWORK To assess and understand how well our software supports activity awareness , we deployed the system to two different classrooms in the same local public school . Sixth and eighth grade science students and their respective teachers participated in our testing . They have used the software for the duration of the science projects ( 25 weeks ) and this provides opportunities for observing how the software actually supports or addresses activity awareness concerns . Each classroom has a large screen display ( 3’ X 5’ SMART Boards ) and the students use computers arranged around the edges of the classrooms . The eighth grade side has more students in the class , hence they have more groups . This means that only eight of the thirteen groups collaborate with the sixth grade side on the projects . Figure 3 shows the layouts of each of the classrooms . Because these classes have used the software for extended periods , we were able to make some important observations about how our software addresses activity awareness concerns . Interviews with teachers and students also help shed light on issues they encounter , and how our software helps . Figure 3 : Classroom layouts . Large rectangles are the SMART Boards . Small squares are desktop machines and darker squares are laptop machines . In our prior work we developed a multifaceted formal evaluation framework as a methodology for studying collaborative systems [ 10 ] . The framework is characterized by a mixed - model evaluation process , which combines quantitative and qualitative methods throughout the system development and implementation lifecycle . The evaluation work on this project continues to expand this approach directed at studying activity awareness . A comprehensive approach to evaluating activity awareness is important because the factors that impact it result from long - term interactions across multiple stakeholders , who work in a variety of contexts , often at different times . 6th 8th L L Evaluating such activities requires the use of multiple methods that can target individual , group , classroom , and organizational issues . We have collected data from direct observation , video capture , structured interviews , contextual interviewing , questionnaires , work measures , and computer logging . We have continually documented instances where collaborative technologies alter the social dynamics of groups , leading to systemic activity awareness problems . And in the context of the distributed classroom , we have investigated cases where joint problem solving , communication , coordination , collaboration , social bonding , and social learning have all been impacted by the tools available . Before we implemented the timeline interfaces and provided the large screen display , our findings consistently showed that few activity awareness breakdowns occurred for proximal groups interacting face to face , but extensive problems existed across the distributed groups . We performed an activity set analysis with the following five discrete behavioral categories : parallel activities , focused work , remote interaction , proximal interaction , and face - to - face interaction . The average time spent and frequency of being in any particular activity across weeks showed that groups had almost equally participated in remote and proximal activities . Although students had spent about equal time in the two contexts , activity awareness across remote partners was much higher . In one questionnaire we asked approximately 20 students in each classroom about their awareness in both contexts . Figure 4 shows their responses on a 7 - point Likert - type scale to the following questions : Proximal : 1 . I know what my teacher wants me to do on this project . 2 . I know what work my partner in this class and I have done in the workspace . 3 . I understand what my partners expect from me on this project . Remote : 1 . I know what my partners’ teacher in the other class wants my partners to do on this project . 2 . I know what work my partners in the other class have done in the workspace . 3 . My partners in the other class understand what the group is supposed to do . Their responses clearly show that students rate awareness of their proximal group consistently higher than awareness questions about remote partners . The two groups also are more similar on questions regarding their proximal group compared to remote partners . The eighth graders consistently disagree more with awareness statements on questions about remote partners compared to the sixth graders . Communication patterns showed similar findings . Online discussions were plagued with awareness problems , proximal discussions captured on video showed few discrepancies . Our interviews also revealed that students and teachers realized a lack of a centralized communication structure and activity representation lead to a lot of miscommunication and confusion across the classrooms . The following transcript from an interview with a student regarding her remote partners reveals the level of activity awareness problems : “It is kind of hard because they are not really laying out that this is your part , and you need to do this much , and we ' ll do this much . It is just kind of confusing because we are all trying to do different things . They are not laying things out too good . I ' ve heard [ the teacher ] ask other groups , what is your part ? What are you supposed to be doing ? When she does that I think , well I don ' t know what to be doing . When I try to figure it out , they [ remote students ] don ' t know . ” We are currently in the data collection and analysis stages of analyzing the impact of the timelines and public display on group activity awareness . Initial reaction to the timeline has been positive . We interviewed students about their experiences with the timeline , and they liked being able to see when things were due directly in the context of their work . “I like it better than the object list because it shows you when things are due . ” “It also helps us when due dates come because we can click on it and see the due date . That is nice . ” “Well , it ' s good because it shows you when stuff is due and also you can pull back up old stuff if you mess up but sometimes I forgot what to do . ” Students also commented positively about being able to retrieve prior versions of their work . These initial reactions to the new interface are encouraging because they address many of the problems we have attributed to the activity awareness breakdowns across remote groups . A w a ren ess Q u estio n s 1 2 3 4 5 6 7 PQ1 PQ2 PQ3 RQ1 RQ2 RQ3 Proxim al R em ote D i s a g r ee N e u t r a l A g r ee 6th Grade 8th Grade Figure 4 : Average responses to proximal ( PQ ) and remote ( RQ ) questions . The large screen interface proved useful to the teachers ( perhaps more so than the students ) . In an interview with the eighth grade teacher , specific awareness issues were described and how the teacher saw the large screen display helping with the situation : “…otherwise I would never have any idea which groups to come and go to… that gives me a quick indication that I can go to them and say , why didn ' t you have anything here ? ” This indicates that the teacher had a problem telling which groups needed help or intervention , and the display helped by showing which groups did not have work completed on specific days . Another awareness point was brought out in the following : “I think there is more awareness of that everybody in the classroom is going to know if I ' m not doing anything or not , and I ' m not doing my part . And the teacher could look quickly…but I think as more and more of the kids know that everything shows up on there , they will begin to do what they are supposed to . ” Here we see the effect the display has on the students , prompting them to complete work and knowing that when they do not , the teacher can easily tell . The sixth grade teacher brought out an excellent point in the following ( referring to how she kept track of students without the large screen ) : “ [ I would ] just go around and ask them individually what are you doing , what team are you , are you on task ? . . . if we were all doing the same thing it would have probably been okay but the fact is we have so many different things , …I ' ll say ok you’re going to have to catch me up , where are you right now , what is this that you are doing , and what ' s the next thing that you need to do…and…using this [ the large screen ] , I think that will be better . ” Here we see the difficulty teachers had in keeping track of what the students were working on , and how the large screen display can help with this awareness task . We are currently logging all system interactions and producing visualizations of tool use from the results . These visualizations will show relationships between tool use and the general behavioral states from the activity sets described earlier . Interactions with the timeline will be an important part of this analysis . This data should give us a clear picture of how well our awareness tools are providing activity awareness information . CONCLUSION We achieved our three design goals for providing activity awareness information in the Classroom BRIDGE system . The timelines present an integrated display of activity information on both the desktop and large screen displays . The information displayed is generated incidentally through automatic versioning and calendaring tasks . A consolidated view of that information is provided publicly on the large display . We believe our results have further developed the concept of awareness in collaborative work , in particular with respect to activity awareness . The timeline displays are enhanced by the fact that they are integral parts of the software’s use . Students and teachers are actively using these displays in their project work . The students must use the desktop client timeline interface to access their documents and as a result , they see the visualization . This effect seems to have come at very little cost . For two months , the students used a version of the desktop client that provided just a document list before the timeline was introduced . One might have expected that introducing the timeline would have brought confusion as to where their documents had gone , but the switch was uneventful . The teachers also quickly accepted the large screen interface . On the first day it was used , one of the teachers immediately asked us if a group had a blank area in a given week if that meant they had done no work that week on the computer . After an affirmative response , she went directly to two groups that had not done any work in the software the past two weeks and checked on their progress . We believe that there is great value in the fact that we have been able to provide this activity information without requiring additional input from the students . Initially we considered solutions that would require students to enter data when they created or modified a document ( such as why they made the changes or to have them link the work to a task ) . Our conclusion was to avoid this if possible because the information would have to be kept up to date in the case of links or just difficult to collect if the students are rushing out the door for the next class . We introduced this solution as being designed for small group work over months because scalability is likely the greatest issue with our existing timeline interface . By dedicating a single list row to each document , the desktop client is constrained in the number of documents ( and thus awareness information ) that it can show a user without scrolling . The public display , by attempting to minimize scrolling through a focus + context layout , is limited in the range of time it can meaningfully display . Both displays become less effective ( and even cluttered ) if there are frequent changes to all the documents . By keeping the project size small , we have also avoided issues such as what visualization should be provided when a document is deleted or renamed . FUTURE WORK We are in the early stages of conducting a laboratory study using the Classroom BRIDGE desktop client while we continue our evaluation work in the classroom . In this study , we are contrasting our software to a commercial CSCW application for use in a short - term project . By introducing confederate participants ( under our control ) into the laboratory setting , we are examining more specific activity awareness issues than we could in an uncontrolled environment . Various improvements are under consideration for the desktop interface . We are considering possible visualizations for displaying the “amount” of change that has occurred between different versions of the same document . Properly implemented , this would allow students to quickly see if the recent changes to a document were substantial or just minor editing . Additionally , we would like to highlight documents a user has not viewed since they were last changed . We also hope to determine if providing enhanced views of the current or nearby weeks ( like is provided on the large screen ) is useful on the desktop . The BRIDGE architecture provides a hierarchical structure ( like a typical file system ) for accessing collaborative objects . We are not supporting that hierarchy in our current work , but we have developed a timeline object explorer for the hierarchy ( based on the desktop client timeline ) . This should allow us to further examine scalability issues with the interface . Based on what we learned from the students and teachers about the large screen interface , there are several changes that could be made to enhance the activity awareness capabilities of our large screen software . Teachers indicated that they would like to have more space dedicated to the current , and recent past ( one month for example ) , but also keep the data from the distant past available . Possible solutions include allocating more space for recent weeks or optionally replacing the fisheye technique with a scrolling one . Another suggested change involved revamping the announcement area to make it larger ( to be easier to read ) and perhaps add color and images to it to make it more salient . Students indicated that clicking on the icons should open the actual document so one could read the content from the large screen . They made this suggestion thinking it would help the teachers keep track of project progress . ACKNOWLEDGMENTS This work is supported by NSF - IIS - 0113264 and an equipment grant from SMART Technologies Inc . We thank teachers Kathy Bunn and Peggy Davie for partnering with us in this work along with their students . We thank Gregorio Convertino , John Morgan and Emily Nester for their development and evaluation contributions to this research . REFERENCES 1 . Carroll , J . M . , Chin , G . , Rosson , M . B . and Neale , D . C . The Development of Cooperation : Five years of participatory design in the virtual school . In DIS ' 2000 : Designing Interactive Systems ( Brooklyn , New York , August 17 - 19 ) , 239 - 251 . ACM Press , 2000 . 2 . Carroll , J . M . , Neale , D . C . , Isenhour , P . L . , Rosson , M . B . and McCrickard , D . S . Notification and Awareness : Synchronizing task - oriented collaborative activity . International Journal of Human - Computer Studies , 58 ( 5 ) , 605 - 632 . Elsevier , 2003 . 3 . Elrod , S . , Bruce , R . , Gold , R . , Goldberg , D . , Halasz , F . , Janssen , W . , Lee , D . , McCall , K . , Pedersen , E . , Pier , K . , Tang , J . , and Welch , B . Liveboard : a large interactive display supporting group meetings , presentations , and remote collaboration . In Proceedings of the Conference on Human Factors in Computing Systems ( CHI’92 ) , 599 – 607 . ACM Press , 1992 . 4 . Freeman , E . and Gelernter , D . Lifestreams : A Storage Model for Personal Data . SIGMOD Record , 25 ( 1 ) , 80 - 86 . March 1996 . 5 . Greenberg , S . and Rounding , M . The Notification Collage : Posting information to public and personal displays . In Proceedings of the Conference on Human Factors in Computing Systems ( CHI ' 01 ) , 515 - 521 . Seattle , WA , April 2001 . 6 . Isenhour , P . L . , Carroll , J . M . , Neale , D . C . , Rosson , M . B . & Dunlap , D . R . The Virtual School : An integrated collaborative environment for the classroom . Educational Technology and Society , 3 ( 3 ) , 74 - 86 . 2000 . 7 . Isenhour , P . L . , Rosson , M . B . , and Carroll , J . M . Supporting interactive collaboration on the Web with CORK . Interacting with Computers ( 13 ) , Special issues on Interfaces for the Active Web , 655 - 676 . 2001 . 8 . Ishii , H . and Kobayashi , M . Clearboard : a seamless medium for shared drawing and conversation with eye contact . In Proceedings of the Conference on Human Factors in Computing Systems ( CHI’92 ) , 525 – 532 . ACM Press , 1992 . 9 . MacIntyre , B . , Mynatt , E . D . , Voida , S . , Hansen , K . M . , Tullio , J . , and Corso , G . M . Support for multitasking and background awareness using interactive peripheral displays . In Proceedings of the 14th annual ACM symposium on User Interface Software and Technology ( UIST’01 ) , 41 - 50 . ACM Press , 2001 . 10 . Neale , D . C . and Carroll , J . M . Multi - faceted evaluation for complex , distributed activities . In Proceedings of Computer Supported Cooperative Learning ( CSCL’99 ) , 425 - 433 . Lawrence Erlbaum , 1999 . 11 . Pedersen , E . R . , McCall , K . , Moran , T . P . , and Halasz , F . G . Tivoli : an electronic whiteboard for informal workgroup meetings . In Proceedings of the conference on Human Factors in Computing Systems ( CHI’93 ) , 391 – 398 . Addison - Wesley Longman Publishing Co . , Inc . , 1993 . 12 . Rekimoto , J . Time - Machine Computing : A Time - centric Approach for the Information Environment . In Proceedings of the 12th annual ACM symposium on User Interface Software and Technology ( UIST’99 ) , 45 - 54 . ACM Press , 1999 . 13 . Russell , D . M . , Trimble , J . , Wales , R . Two paths from the same place : Task driven and human - centered evolution of a group information surface . Make IT Easy Conference , San Jose , CA , USA . June 2002 .