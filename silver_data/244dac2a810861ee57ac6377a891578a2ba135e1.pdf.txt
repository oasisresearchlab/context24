U N C O R R E C T E D P R O O F 1 2 A new variant of the Pathﬁnder algorithm to generate 3 large visual science maps in cubic time 4 A . Quirin a , * , O . Cordo´n a , J . Santamarı´a b , B . Vargas - Quesada c , 5 F . Moya - Anego´n c 6 a European Centre for Soft Computing , Ediﬁcio Cientı´ﬁco Tecnolo´gico , 33600 Mieres , Spain 7 b Department of Software Engineering , University of Ca´diz , Ca´diz , Spain 8 c SCImago Group , Library and Information Science Faculty , University of Granada , 18071 Granada , Spain 9 Received 16 April 2007 ; received in revised form 3 September 2007 ; accepted 8 September 2007 10 11 Abstract 12 In the last few years , there is an increasing interest to generate visual representations of very large scientiﬁc domains . 13 A methodology based on the combined use of ISI – JCR category cocitation and social networks analysis through the use of 14 the Pathﬁnder algorithm has demonstrated its ability to achieve high quality , schematic visualizations for these kinds of 15 domains . Now , the next step would be to generate these scientograms in an on - line fashion . To do so , there is a need 16 to signiﬁcantly decrease the run time of the latter pruning technique when working with category cocitation matrices of 17 a large dimension like the ones handled in these large domains ( Pathﬁnder has a time complexity order of O ( n 4 ) , with n 18 being the number of categories in the cocitation matrix , i . e . , the number of nodes in the network ) . 19 Although a previous improvement called Binary Pathﬁnder has already been proposed to speed up the original 20 algorithm , its signiﬁcant time complexity reduction is not enough for that aim . In this paper , we make use of a diﬀerent 21 shortest path computation from classical approaches in computer science graph theory to propose a new variant of the 22 Pathﬁnder algorithm which allows us to reduce its time complexity in one order of magnitude , O ( n 3 ) , and thus to signif - 23 icantly decrease the run time of the implementation when applied to large scientiﬁc domains considering the parameter 24 q = n (cid:2) 1 . Besides , the new algorithm has a much simpler structure than the Binary Pathﬁnder as well as it saves a signif - 25 icant amount of memory with respect to the original Pathﬁnder by reducing the space complexity to the need of just storing 26 two matrices . An experimental comparison will be developed using large networks from real - world domains to show the 27 good performance of the new proposal . 28 (cid:2) 2007 Elsevier Ltd . All rights reserved . 29 Keywords : PFNETs ; Pathﬁnder algorithms ; Cocitation analysis ; Information visualization ; Large scientiﬁc domain visual maps ; Graph 30 shortest path algorithms 31 0306 - 4573 / $ - see front matter (cid:2) 2007 Elsevier Ltd . All rights reserved . doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 * Corresponding author . Tel . : + 34 985456545 ; fax : + 34 985456699 . E - mail addresses : arnaud . quirin @ softcomputing . es ( A . Quirin ) , oscar . cordon @ softcomputing . es ( O . Cordo´n ) , jsantam @ uca . es ( J . Santamarı´a ) , benjamin @ ugr . es ( B . Vargas - Quesada ) , felix @ ugr . es ( F . Moya - Anego´n ) . Information Processing and Management xxx ( 2007 ) xxx – xxx www . elsevier . com / locate / infoproman IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 32 1 . Introduction 33 The goal of generating schematic visualizations for scientiﬁc domain analysis has been pursued since several 34 decades ago and diﬀerent approaches have been used to put it into eﬀect ( Borner , Chen , & Boyack , 2003 ; Buz - 35 ydlowski , 2002 ; Chen , 1999 ; Lin , White , & Buzydlowski , 2003 ; White , 2003 ) . Their good performance have 36 made the size of the tackled domain progressively increase , with the ﬁnal aim of being able to represent the 37 largest possible one , the World ( Boyack , Klavans , & Borner , 2005 ; Leydesdorﬀ , 2004b ; Leydesdorﬀ , 2004a ; 38 Samoylenko , Chao , Liu , & Chen , 2006 ) . 39 In 1998 , Chen ( 1998a , 1998b ) was the ﬁrst researcher to bring forth the use of Pathﬁnder Networks 40 ( PFNETs ) in citation analysis . Since then , it has been used for the study and representation of minor domains 41 or scientiﬁc community . In 2004 , Moya - Anego´n et al . ( 2004 ) proposed the combination of PFNET and ISI 42 categories cocitation , making possible the depicting and analysis of large scientiﬁc domains in an easy way . 43 The scientiﬁc community is understood in the terms put forth by Hjorland and Albrechtsen ( 1995 ) , as the 44 reﬂection of interactions between authors , and their role in science , through citation ( i . e . , classical author coci - 45 tation analysis ) . The new technique is based on the use of thematic classiﬁcation since categories taken from 46 the ISI – JCR are considered as entities of cocitation and units of measure ( Moya - Anego´n et al . , 2005 ; Moya - 47 Anego´n et al . , 2006 ; Vargas - Quesada & Moya - Anego´n , 2007 ) . The cocitation matrix is then treated as a graph 48 which represents a social network of the existing relations and processed through social network analysis : the 49 graph is pruned by means of the Pathﬁnder algorithm ( Dearholt & Schvaneveldt , 1990 ) to get a PFNET , keep - 50 ing just the most salient relations , and the resulting graph is graphically represented using a graph drawing 51 algorithm , Kamada – Kawai ( Kamada & Kawai , 1989 ) . 52 So , once an appropriate methodology has been designed to graphically represent very large scientiﬁc 53 domains , the next challenge is to build them in a very small amount of time , allowing us to generate the sci - 54 entograms on line . If this goal is ﬁnally achieved , these kinds of visual science maps could be used to design an 55 information retrieval system , composing an Atlas of Science as the one that is being implemented by Felix de 56 Moya’s Scimago research group for the IberoAmerican scientiﬁc production 1 . 57 The key problem to generate scientograms of large scientiﬁc domains by means of the Pathﬁnder algorithm 58 is the great time and space complexity it requires . As we will see later , the pruning it applies is based on elim - 59 inating those links which violate the triangle inequality ( Schvaneveldt , 1990 ) . To do so , there is a need to com - 60 pute a progressive series of q matrices D i of dimension n 2 which store the shortest paths between each pair of 61 entities ( graph nodes ) considering paths comprised by as much q links . Moreover , their computation requires 62 the use of an additional series of q auxiliary matrices W i . This way , as a value of q equal to n (cid:2) 1 is required in 63 order to achieve an appropriate pruning in large scientiﬁc domains keeping only the most salient links , the 64 resulting time and space complexity of the Pathﬁnder algorithm are O ( n 4 ) and O ( n 3 ) ( in fact , 2 Æ ( n (cid:2) 1 ) matri - 65 ces of dimension n 2 are stored ) , respectively . Since the value of n is high in the large scientiﬁc domains handled , 66 we come up to the undesired conclusion that the run time of the algorithm is prohibitive to generate the maps 67 on - line . 68 We should note that a previous attempt was made in this aim by Guerrero - Bote et al . , which recently pro - 69 posed an improved variant of the original Pathﬁnder algorithm , called Binary Pathﬁnder ( Guerrero - Bote , 70 Zapico - Alonso , Espinosa - Calvo , Go´mez - Criso´stomo , & Moya - Anego´n , 2006 ) , that reduced its time complex - 71 ity for the current case to O ( log n Æ n 3 ) . However , although the reduction is very signiﬁcant , it is not enough to 72 allow us to generate the maps ‘‘on the ﬂy’’ since , for values of n around 250 , as those handled in our very large 73 domains , the run of the Binary Pathﬁnder takes several seconds , and this amount of time is then increased by 74 that corresponding to Kamada – Kawai’s layout algorithm . 75 In this contribution , we introduce Fast Pathﬁnder , a new Pathﬁnder variant taking as a base a classical 76 algorithm in graph theory , Floyd – Warshall’s ( Cormen , Leiserson , Rivest , & Stein , 2001 ) , to compute the 77 shortest paths in the graph in a diﬀerent way . Thanks to that and to the fact that we ﬁx the value of q to 78 n (cid:2) 1 , we are able to reduce the time complexity of the original algorithm in one order of magnitude , 79 O ( n 3 ) , which is a killer advantage when applied to the generation of scientograms for large scientiﬁc domains . 1 http : / / www . atlasofscience . net / . 2 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 80 Moreover , the new algorithm has a much simpler structure than Binary Pathﬁnder , since it only requires three 81 loops wrapping two simple operations , as well as it only requires two squared matrices to operate . An exper - 82 imental comparison will be developed using large networks from real - world domains corresponding to the sci - 83 entiﬁc production of diﬀerent countries to show the good performance of the new proposal in comparison with 84 both the original and the Binary Pathﬁnder . 85 To do so , the paper is structured as follows . Section 2 brieﬂy reviews the original Pathﬁnder and the Binary 86 Pathﬁnder algorithms . The new proposal is introduced in Section 3 , together with a detailed analysis of its 87 advantages in terms of speed , memory saving and simplicity . Section 4 collects the experiments developed 88 to test Fast Pathﬁnder . Finally , some concluding remarks are pointed out in Section 5 . 89 2 . Preliminaries 90 This section is devoted to introduce the preliminaries needed to achieve a good understanding of our pro - 91 posal . With this aim , the next two subsections respectively describe the original Pathﬁnder and the Binary 92 Pathﬁnder algorithms . 93 2 . 1 . The Pathﬁnder algorithm 94 Pathﬁnder was introduced by Dearholt and Schvaneveldt as a technique to choose the shortest links in a 95 network in the ﬁeld of social networks ( Dearholt & Schvaneveldt , 1990 ) . The result of the Pathﬁnder proce - 96 dure is a pruned network called PFNET – which is either a directed or undirected graph depending on the fact 97 that the original similarity matrix is symmetrical or not – that only keeps those links which do not violate the 98 triangle inequality stating that the direct distance between two nodes must be lesser than or equal to the dis - 99 tance between them passing through any group of intermediate nodes . As said by its creators , PFNETs pro - 100 vide unique representations of the underlying structure for domains in which objective measures of distance 101 are available ( Schvaneveldt , 1990 ) . 102 The Pathﬁnder algorithm is based on two main parameters : 103 1 . r 2 [ 1 , 1 ] , which deﬁnes the adaptive metric , the Minkowski r - metric , considered to measure the distance 104 between two network nodes not directly connected : D ¼ X i d ri ( ) 1 r ð 1 Þ 106106 107 When r takes value 1 , the Minkowski metric results in the sum of the link weights ; when it takes value 2 , it 108 becomes the usual Euclidean metric ; and when r tends to 1 , the path weight is the same as the maximum 109 weight associated with any link along the path . 110 2 . q 2 [ 2 , n (cid:2) 1 ] ( with n being the number of nodes in the network ) , which limits the number of links in the 111 paths for which the triangle inequality is ensured in the ﬁnal PFNET . Hence , every path connecting two 112 nodes that violate the triangle inequality , having an associated Minkowski distance greater than any other 113 path between the same two nodes composed of up to q links , will be removed . 114 115 Note that r = 1 and q = n (cid:2) 1 are the common parameter values when Pathﬁnder is used for large 116 domains scientogram generation . These values are very advantageous for large network pruning ( Chen , 2004 ) . 117 To build a PFNET , two diﬀerent kinds of auxiliary matrices are used : 118 – W ijk , which stores the minimum cost to go from node j to node k by following exactly i links . This matrix is 119 computed recursively using matrix W i (cid:2) 1 jk , with W 1 being the original weight matrix . 120 – D ijk , which stores the minimum cost to go from node j to node k by following any path in the network com - 121 posed of i or less links . This matrix is computed recursively using matrices W 1 jk ; . . . ; W ijk . A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx 3 IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 122 123 The original Pathﬁnder algorithm pseudocode is shown in Fig . 1 . 124 Notice that the algorithm has a time complexity order O ( q Æ n 3 ) as q steps have to be done to build the q 125 matrices W i and D i . Each of the latter matrices stores n 2 weights , so a loop of this order is needed to compute 126 them in each step . Finally , an additional loop of n steps is needed to compute each component of W i + 1 , as seen 127 in line 1 of the algorithm . As the maximum possible value for q is n (cid:2) 1 , Pathﬁnder has a time complexity of 128 O ( n 4 ) in that case . 129 On the other hand , the resulting space is thus of complexity O ( q Æ n 2 ) ( O ( n 3 ) when q = n (cid:2) 1 ) , since there is a 130 need to build q matrices W i and other q matrices D i , as seen above . 131 2 . 2 . The Binary Pathﬁnder algorithm 132 Guerrero - Bote et al . ( 2006 ) recently proposed the Binary Pathﬁnder algorithm , an improved variant of the 133 original Pathﬁnder aiming at reducing its time and space complexity . Binary Pathﬁnder takes the following 134 two aspects as a base to put this improvement into eﬀect : 135 1 . The only matrix in the series of D i that is actually needed for the algorithm to operate is the last one , D q , to 136 be compared with the initial weight matrix W 1 . The remainder are not necessary . 137 2 . The matrices D i can be directly generated from two previous ones in the same way as done for the consec - 138 utive W i matrices : D i + j = D i x D j . 139 140 Hence , the authors demonstrated that the distance matrix D i + j storing the minimum distances between each 141 couple of nodes can be calculated from D i and D j as follows : d i þ j kl ¼ MIN f d i kl ; d j kl ; ðð d i km Þ r þ ð d j ml Þ r Þ 1 = r g ð 2 Þ 143143 144 where d 1 kl ¼ w kl , obtaining the same result as with the original Pathﬁnder algorithm described in the previous 145 subsection . 146 Thanks to the latter , a new Pathﬁnder algorithm was designed which does not need to compute every D i 147 matrix , i ¼ 1 ; . . . ; q , but can make larger steps . Taking the procedure to transform an integer number to bin - 148 ary as a base ( that is the inspiration for the algorithm’s name ) , Guerrero - Bote et al . ’s Binary Pathﬁnder 149 reduces the task to calculating just log ( q ) matrices , those corresponding to indices being powers of 2 : D 1 , 150 D 2 , D 4 , D 8 , . . . 151 The Binary Pathﬁnder algorithm pseudocode is shown in Fig . 2 . Notice that the principle loop reduces the 152 number of steps of the original Pathﬁnder from q to log q . Therefore , the time complexity of the new Binary 153 Pathﬁnder variant becomes O ( log q Æ n 3 ) instead of O ( q Æ n 3 ) , which in the maximum case becomes O ( log n Æ n 3 ) 154 instead of O ( n 4 ) , a very signiﬁcant time diﬀerence for large networks . Empirical tests showing these diﬀerences 155 on real cases are shown in Guerrero - Bote et al . ( 2006 ) and in Section 4 of the current paper . On the other 156 hand , the space complexity is even more signiﬁcantly reduced , as only two squared matrices to compute D i 157 in each step , another matrix to store the ﬁnal distance values D q , and one last matrix W to store the original 158 weights are required , instead of 2 Æ q matrices W i and D i , as in the original algorithm . Fig . 1 . The original Pathﬁnder algorithm . 4 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 159 3 . Fast Pathﬁnder 160 As we have seen in the previous section , the Binary Pathﬁnder approach is able to achieve an important 161 speed up of the Pathﬁnder algorithm . Unfortunately , this time complexity reduction , although signiﬁcant , 162 is not enough for the aim of generating scientograms of very large scientiﬁc domains in an on - line fashion 163 since , for values of n around 250 and for q = n (cid:2) 1 , the run of the Binary Pathﬁnder still takes several seconds 164 ( see Section 4 ) . 165 In this section , we introduce Fast Pathﬁnder , a new variant of the Pathﬁnder algorithm which tries to solve 166 the latter problem . To do so , we ﬁrst analyze the underlying idea of this approach , which is based on the use of 167 classical algorithms in graph theory for shortest path computation . In fact , the new variant is based on the 168 idea that a PFNET can be obtained with a Shortest Path algorithm when q = n (cid:2) 1 . Then , we introduce 169 the Fast Pathﬁnder’s pseudocode and analyze its main advantages and its only disadvantage . 170 3 . 1 . Underlying idea : graph shortest path computation algorithms 171 As we need to ﬁx the value of q to n (cid:2) 1 , the triangle inequality is veriﬁed for the best path between any 172 couple of nodes in the graph , thus the problem becomes a shortest path problem . This is why we can replace 173 steps 1 – 3 in the original Pathﬁnder algorithm ( see Fig . 1 ) to achieve the same result in less computation time . 174 When analyzing the operation mode of this algorithm from a computer science point of view , one can recog - 175 nize that what it does is nothing but computing a distance matrix D n (cid:2) 1 storing the lengths of all the shortest 176 paths ( regarding the Minkowski r - metric ) between any pair of network nodes comprised by up to n (cid:2) 1 links , 177 and then comparing the latter values to the original weights in matrix W 1 to determine which links will ﬁnally 178 belong to the PFNET . 179 To do so , it applies the classical dynamic programming approach in algorithm theory ( Cormen et al . , 2001 ) 180 in order to ensure the obtaining of the optimal solution for the graph shortest path problem . Dynamic 181 programming ( Dreyfus , 1965 ) constitutes the practical embodiment of the Bellman’s principle of optimality 182 ( Bellman & Kalaba , 1965 ) through a clever ( ‘‘moon walking’’ type ) technique for computing optimal sequen - 183 tial - decisions by a forward - looking , backward - recursive search . Hence , the Pathﬁnder algorithm is a direct 184 instance of the latter algorithmic methodology , that applies the usual bottom - up approach based on a progres - 185 sively increasing building of the matrices ensuring to take the best decision at each step , taking into account all 186 the partial decisions made in the previous ones . This results in the Pathﬁnder algorithm structure where , to 187 build the matrices W i and D i of dimension n 2 in each of the n (cid:2) 1 steps , an additional loop of size n is required 188 to check all the possible choices of crossing a link for the shortest path computation between two nodes . All of 189 the latter deﬁnes the O ( n 4 ) time complexity . 190 Notice that Binary Pathﬁnder keeps the same algorithmic approach than the original Pathﬁnder version , 191 and the improvement introduced is due to the fact that it smartly reduces the number of steps in the outer Fig . 2 . The Binary Pathﬁnder algorithm . A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx 5 IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 192 loop needed to compute the same distance matrix D n (cid:2) 1 while still satisfying the Bellman’s principle of 193 optimality . 194 Hence , as seen in Binary Pathﬁnder , the only two matrices that are ﬁnally needed to obtain the PFNET as a 195 result of pruning the original network are D n (cid:2) 1 and W 1 . As we know that D n (cid:2) 1 is a shortest path distance 196 matrix when q = n (cid:2) 1 , we can borrow alternative ( and quicker ways ) to compute it from the classical algo - 197 rithms in graph theory ( Cormen et al . , 2001 ) . In fact , there are at least two classical graph shortest path algo - 198 rithms , respectively called Floyd – Warshall ’s and Dijkstra ’s and also based on the dynamic programming 199 approach , that are able to compute all the shortest paths of length up to n (cid:2) 1 links ( according to an Euclidean 200 metric ) in a cubic time complexity . The adaptation of Floyd – Warshall’s algorithm to the computation of the 201 D n (cid:2) 1 matrix for a PFNET using the Minkowski r - metric is thus the base of our new Fast Pathﬁnder proposal . 202 3 . 1 . 1 . Floyd – Warshall’s shortest path algorithm 203 Floyd – Warshall’s algorithm ( Floyd , 1962 ; Warshall , 1962 ) is a dynamic programming algorithm giving the 204 shortest paths between any source node and any destination node in a directed graph in cubic time . The algo - 205 rithm computes , for each pair of nodes i and j , the minimum weight among all paths between them , storing it 206 into a distance matrix D = d ij . The weight of a path between two nodes is the sum of costs of the links in that 207 path . Additionally , a predecessor matrix P can be used to retrieve the links composing the shortest paths 208 themselves , where p ij corresponds to the index of the last node included in the optimal path from i to j . 209 The basic Floyd – Warshall’s algorithm pseudocode is shown in Fig . 3 . When the predecessor matrix is to be 210 computed , it becomes the pseudocode shown in Fig . 4 . 211 It is very simple to check that both variants of the algorithm have a time complexity of O ( n 3 ) . 212 3 . 1 . 2 . Dijkstra’s shortest path algorithm 213 Dijkstra’s algorithm ( Dijkstra , 1959 ) is both a greedy and a dynamic programming algorithm that solves 214 the single - source shortest path problem for a directed graph with nonnegative link weights . As in Floyd – War - 215 shall’s technique , the cost of a path between two nodes is the sum of costs of the links in that path . The algo - 216 rithm gives the costs of the shortest paths from a single , ﬁxed node s to all the other nodes in the graph in Fig . 3 . Basic Floyd – Warshall’s algorithm . Fig . 4 . Floyd – Warshall’s algorithm using the predecessor matrix . 6 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 217 quadratic time . To retrieve the paths , it uses the same kind of predecessor data structure ( an array p , in this 218 case ) than Floyd – Wharshall’s algorithm ( see the previous subsection ) . In order to get the all - pairs shortest 219 paths , there is a need to wrap Dijkstra’s algorithm into a linear loop for all the graph nodes , thus resulting 220 in a time complexity of O ( n 3 ) . 221 Dijkstra’s algorithm pseudocode is shown in Fig . 5 , where V [ G ] is the set of graph nodes , F is a set of unvis - 222 ited nodes by the algorithm , and u = EXTRACT (cid:2) MIN ( F ) returns the node u with the lowest distance value 223 in F and removes that node from it . On the other hand , E is the set of already visited nodes . 224 In its simplest implementation , a normal array is used to store the links , and thus operation EXTRACT - 225 MIN is simply a linear search through all nodes in F . In this case , the time complexity is O ( m Æ n ) , with m being 226 the number of the s node links . As the maximum number of links for any node in the graph is n (cid:2) 1 , the max - 227 imum time complexity becomes O ( n 2 ) . 228 We should also notice that there are more eﬃcient implementations of Dijkstra’s algorithm for the case of 229 sparse graphs with a number of links signiﬁcantly lower than n 2 . They are based on storing the graph in the 230 form of an adjacency list and using more advanced data structures than a simple list . With a heap in the 231 EXTRACT - MIN function , the time complexity becomes O ( ( m + n ) Æ log n ) . When a Fibonacci heap is consid - 232 ered , it becomes O ( m + n Æ log n ) . 233 3 . 2 . Structure of Fast Pathﬁnder 234 Taking into account what has been explained in the latter subsection , Floyd – Warshall’s algorithm has been 235 selected to substitute the costly computation of matrix D n (cid:2) 1 in the original Pathﬁnder algorithm . Dijkstra’s 236 algorithm is not as well suited to do so . The reasons are mainly related to the structure of the graphs and 237 the greater simplicity of the Floyd – Warshall’s algorithm implementation and will be detailed at the end of this 238 section . 239 Since working with Floyd – Warshall’s algorithm we are able to build this matrix in cubic time and we avoid 240 the need to compute the temporary matrices W i and D i , the substitution is much more eﬀective . To do so , there 241 is a need to only perform one trivial change to the pseudocode shown in Section 3 : the Minkowski r - metric has 242 to be used to compute the path lengths . In this way , we can directly substitute the three ﬁrst lines of the Path - 243 ﬁnder algorithm in Fig . 1 by the ﬁve lines of the basic Floyd – Warshall’s pseudocode in Fig . 3 , with the pre - 244 vious adaptation . The resulting Fast Pathﬁnder pseudocode is shown in Fig . 6 . 245 Since the shortest path computation procedure has an O ( n 3 ) time complexity and the W – D comparison 246 takes time O ( n 2 ) , the algorithm will have a time complexity of O ( n 3 ) + O ( n 2 ) = max { O ( n 3 ) , O ( n 2 ) } = O ( n 3 ) . 247 Besides , notice that the computation of the predecessor matrix is not needed and the algorithm only requires 248 to store two square matrices to operate ( W and D ) . 249 On the other hand , there is another alternative for the PFNET link selection ( lines 6 – 8 ) . Actually , by using 250 Floyd – Warshall’s algorithm for the shortest path computation , there is not a need to compare the distance 251 matrix D to the original weight matrix W to select the PFNET links , but those links can be directly extracted 252 from the predecessor matrix P . In this second way , we used this matrix as an adjacency matrix to improve the 253 speed of the computation . At the start of the algorithm , each link is considered belonging to a possible shortest Fig . 5 . Dijkstra’s algorithm . A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx 7 IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 254 path , thus to the PFNET , so the corresponding component in P is set to true . Then , each time the distance d ij 255 of a link ( i , j ) is greater than the distance of the path ( i , k , j ) , the link ( i , j ) is discarded from the PFNET and the 256 corresponding component in the matrix is set to false . The ﬁnal value of P indicates exactly those links that 257 must be preserved . Hence , we don’t need to take matrix W into account to select the links for the PFNET . The 258 pseudocode of this second Fast Pathﬁnder algorithm variant is shown in Fig . 7 . 259 This second way of selecting the PFNET links has also an O ( n 2 ) time complexity , so the time complexity of 260 the second Fast Pathﬁnder variant is still O ( n 3 ) . However , its actual running time would be slightly larger than 261 the former version because of the computation time needed to generate the predecessor matrix . We will exper - 262 imentally check this assumption in the next section . 263 Concerning its space complexity , it is the same than the former , since it also requires to store two square 264 matrices to operate : D , the same that the other variant , and the predecessor matrix P ( in the place of the 265 weight matrix W ) . 266 Finally , we should also note that two new variants could also be designed in case Dijkstra’s algorithm 267 would have been considered instead of Floyd – Warshall for the shortest path matrix computation . Besides , 268 at ﬁrst sight , it could seem that a lower time complexity Fast Pathﬁnder could be obtained proceeding in that 269 way by means of the advanced implementation of the former algorithm based on the use of the Fibonacci 270 heap . 271 However , we have decided not to consider Dijkstra’s variants due to two main reasons . On the one hand , it 272 is well known in algorithm theory that Dijkstra’s algorithm is quicker than Floyd – Warshall’s for the case of 273 sparse graphs , i . e . , when the number of links in the graph j A j tends to the number of nodes n , while the oppo - 274 site holds for dense graphs , i . e . , when j A j ! n 2 . Since the graphs resulting from cocitation matrices associated Fig . 6 . The Fast Pathﬁnder algorithm . Fig . 7 . The Fast Pathﬁnder algorithm variant , using a predecessor matrix . 8 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 275 to large scientiﬁc domains are actually ‘‘small worlds’’ ( Watts & Strogatz , 1998 ; Watts , 2004 ) , they are very 276 dense and thus Floyd – Warshall’s proposal is the best choice . On the other hand , the use of the latter variant 277 is also beneﬁcial since it results in a simpler implementation of the Fast Pathﬁnder algorithm . 278 3 . 3 . Main advantages and disadvantage of Fast Pathﬁnder 279 In summary , the Fast Pathﬁnder proposal introduced in the current contribution based on Floyd – War - 280 shall’s shortest path algorithm has the two following advantages associated : 281 1 . Speed Increase : Thanks to the change in the shortest path distance matrix computation , we are able to 282 reduce the time complexity of the original algorithm in one order of magnitude when q is ﬁxed to n (cid:2) 1 , 283 from O ( n 4 ) to O ( n 3 ) , which is a great advantage when applied to large networks and , speciﬁcally , for the 284 generation of scientograms of large scientiﬁc domains . In this way , it is also signiﬁcantly lower than the 285 quickest Pathﬁnder variant , Binary Pathﬁnder ( O ( log n Æ n 3 ) when q = n (cid:2) 1 ) . 286 2 . Simplicity : Moreover , the new algorithm has a much simpler structure than the previous approach reducing 287 the original Pathﬁnder run time , Binary Pathﬁnder , since it only requires three loops wrapping two simple 288 operations . On the other hand , Fast Pathﬁnder signiﬁcantly reduces the space complexity since it only 289 requires two square matrices to operate instead of the 2 Æ n (cid:2) 1 ones needed by the original algorithm 290 and the four ones by Binary Pathﬁnder . 291 292 On the other hand , its only disadvantage with respect to Binary Pathﬁnder is that while in our case the 293 value of the parameter q is always ﬁxed to n (cid:2) 1 , the latter algorithm allows any possible value for q . Of 294 course , this restricts the generic applicability of Fast Pathﬁnder , but we should remind that it has been spe - 295 ciﬁcally proposed for the on - line generation of large scientiﬁc domain visual maps . Note also that any valid 296 value for the second main parameter r can be considered . 297 4 . Experimental results 298 In the current section , some experiments will be developed to test the actual run time improvement obtained 299 by our proposal , and to empirically prove that it always achieves the same result as the original algorithm . To 300 test the run time improvement , we have compared our two Fast Pathﬁnder proposals , the one considering the 301 same link selection procedure than Pathﬁnder , and the other making use of the predecessor matrix for this task 302 ( see Section 3 . 2 ) , with respect to the current state - of - the - art Pathﬁnder variants , the original algorithm and 303 Binary Pathﬁnder . To do so , since the aim to propose this algorithm was to use it for the design of sciento - 304 grams of large scientiﬁc domains , we have applied the four algorithms to 20 real networks of this kind , 305 obtained from the JCR category cocitation information available at the Scimago research group’s Atlas of Sci - 306 ence ( http : / / www . atlasofscience . net / ) . Their sizes range from 212 to 263 nodes , and from 8485 to 23430 links . 307 Notice that , the link weights in this graph correspond to similarities instead of distance measurements 2 . 308 In order to do a fair comparison , the original and Binary Pathﬁnder implementations considered are the 309 same ones used by the Binary Pathﬁnder’s authors . Our two Fast Pathﬁnder variants have also been imple - 310 mented in C . The four algorithms have been compiled with the GNU GCC compiler with the - O3 option , 311 under the Linux operating system , and run in an Intel dual - core Pentium 3 . 4 GHz computer with 2 GB of 312 memory . Pathﬁnder parameters have been set to q = n (cid:2) 1 ( when considered ) and r = 1 , the typical values 313 in large domain scientogram design . Fifty independent runs have been performed for each algorithm and each 314 network , and the global run time has been divided by 50 for each , in order to obtain more precise statistics 315 ( notice that , although the algorithms are deterministic , the measurement of the run time values can have small 316 ﬂuctuations in some cases , so this is a most robust procedure ) . 2 According to Moya’s methodology ( Moya - Anego´n et al . , 2004 ; Vargas - Quesada & Moya - Anego´n , 2007 ) , the normalized cocitation coeﬃcients are used and correspond to similarities . The interested reader can refer to that paper for more details . Actually , using similarities or distances has no inﬂuence at all in our proposal . In case of using similarities , we would only need to replace MIN by MAX , ’ > ’ by ’ < ’ , and use r = (cid:2)1 to mimic the MIN function instead of the MAX function in the Fast Pathﬁnder algorithm ( see Figs . 6 and 7 ) . A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx 9 IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 317 The results obtained are shown in Table 1 , where the run times are expressed in milliseconds . As expected , 318 both Fast Pathﬁnder variants cleary outperform the original Pathﬁnder algorithm in terms of run time , being 319 around 450 times quicker , and what is more important , they are signiﬁcantly quicker than the Binary Path - 320 ﬁnder , reducing its run time in the order of around 23 times for the predecessor - based variant and around 321 27 times for the other . In this way , it can be seen how we were right in the assumption that the Fast Pathﬁnder 322 variant not making use of the predecessor matrix is slightly faster ( approximately a 10 % ) than the other ver - 323 sion not requiring the computation of such data structure . 324 The most important conclusion we can draw from this experimental study is that , using our new Fast Path - 325 ﬁnder proposal , we are able to generate real scientograms of very large scientiﬁc domains in around 166 ms in Table 1 Comparison of all the algorithms ( computation times are expressed in milliseconds on an Intel dual - core 3 . 4 GHz CPU with 2 GB of memory ) , sorted by the number of nodes then by the number of links # Domain ( year ) # Nodes # Links Original PF Binary PF Fast PF ( predecessor ) Fast PF 1 China ( 2002 ) 212 8541 37644 . 78 2544 . 5 103 . 8 92 . 0 2 Japan ( 2002 ) 213 9028 27041 . 28 2288 . 76 93 . 6 85 . 4 3 France ( 2002 ) 216 10087 30105 . 24 2909 . 78 97 . 2 93 . 8 4 Peru ( 2002 ) 218 8485 41196 . 14 2866 . 12 126 . 4 102 . 6 5 Germany ( 2002 ) 218 11745 33631 . 5 2099 . 06 118 . 8 105 . 4 6 UK ( 2002 ) 218 13567 50484 . 46 2147 . 4 116 . 4 94 . 0 7 Europe ( 2002 ) 218 17242 53357 . 56 2169 . 38 122 . 2 94 . 6 8 USA ( 2002 ) 218 18132 54046 . 88 2195 . 02 110 . 6 95 . 2 9 World ( 2002 ) 218 20154 37976 . 02 2178 . 64 122 . 4 97 . 4 10 Cuba ( 2004 ) 219 10644 45319 . 38 2065 . 04 123 . 0 97 . 0 11 Spain ( 1994 ) 219 13478 49800 . 4 3022 . 02 122 . 8 101 . 0 12 Cuba ( 2006 ) 221 11286 33784 . 98 2813 . 92 107 . 6 106 . 6 13 Spain ( 1998 ) 223 16226 44860 . 4 2854 . 34 130 . 0 122 . 2 14 Venezuela ( 2005 ) 239 15415 50741 . 26 4248 . 92 148 . 0 135 . 0 15 Spain ( 2002 ) 240 19183 77421 . 34 4723 . 66 154 . 0 145 . 8 16 Spain ( 2004 ) 240 23430 56890 . 9 4716 . 78 192 . 64 142 . 2 17 Chile ( 2004 ) 242 17914 56025 . 26 2928 . 4 150 . 0 132 . 8 18 Mexico ( 2005 ) 250 21264 100131 . 76 5569 . 52 181 . 4 155 . 0 19 Portugal ( 2005 ) 254 22179 79733 . 1 4767 . 96 203 . 2 163 . 6 20 Argentina ( 2005 ) 263 19562 110309 . 5 5447 . 66 194 . 8 166 . 4 Fig . 8 . Comparison of the results obtained by the Binary Pathﬁnder algorithm ( left ) and the Fast Pathﬁnder algorithm ( right ) on a 500 - nodes map generated randomly . 10 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 326 the worst case ( Argentina ( 2005 ) domain ) , while the current state - of - the - art approach , Binary Pathﬁnder , 327 required more than 2 s in the best case ( Cuba ( 2004 ) ) and more than 5 . 5 s in the worst one ( Mexico 328 ( 2005 ) ) . This constitutes a great step ahead since this time reduction allows us to properly combine this prun - 329 ing algorithm with the Kamada – Kawai layout technique , thus being able to generate these kinds of sciento - 330 grams in real time . 331 Our second experiment concerns the comparison of the visual science maps obtained by the fastest variant 332 of Fast Pathﬁnder ( without using the predecessor matrix ) with those obtained by the Binary Pathﬁnder algo - 333 rithm . This is to empirically prove that the two algorithms give exactly the same results . To do so , we have 334 written a bash script able to generate 1’000’000 random matrices , from size 3 to 500 , containing integral or 335 real numbers ( two options selected randomly ) , and used as the cocitation matrices of virtual social networks . 336 The goal was to compare edge by edge the results provided by the two considered algorithms . Only symmetric 337 matrices were considered in this experiment and the parameters were set to q = n (cid:2) 1 and r = 1 . In conclu - 338 sion , during this long empirical experiment , no networks were found where a single edge diﬀers from the Bin - 339 ary and the Fast Pathﬁnder algorithm’s results . For instance , the comparison of the results obtained by the 340 two algorithms on a 500 - nodes map is shown in Fig . 8 . 341 5 . Concluding remarks 342 In this paper , we have presented a new variant of the Pathﬁnder algorithm , to be used as a network pruning 343 algorithm for the generation of visual representations of very large scientiﬁc domains , aiming to decrease its 344 actual run time . Taking the classical Floyd – Warshall’s graph shortest path algorithm as a base , we have been 345 able to reduce the original Pathﬁnder time complexity in one order of magnitude , from O ( n 4 ) to O ( n 3 ) , thus 346 also clearly outperforming the state - of - the - art variant in terms of run time ( Binary Pathﬁnder , O ( log n Æ n 3 ) ) . 347 The new algorithm has also a much simpler structure than the Binary Pathﬁnder , while maintaining the ori - 348 ginal Pathﬁnder’s r parameterization ( q must be ﬁxed to n (cid:2) 1 in the current application ) and saving a great 349 amount of memory . 350 The experimental comparison developed using 20 large networks from real - world domains has demon - 351 strated the capability of the new proposal to generate scientograms of very large scientiﬁc domains in real 352 time . 353 Acknowledgements 354 We would like to thank Dr . Vicente Guerrero - Bote , from the University of Extremadura , Spain , for pro - 355 viding us with his Binary Pathﬁnder’s code . We also would like to thank the anonymous reviewers for their 356 interesting comments and suggestions , which has allowed us to improve the quality of the contribution . 357 References 358 Bellman , R . , & Kalaba , R . ( 1965 ) . Dynamic programming and modern control theory . New York , USA : Academic Press . 359 Borner , K . , Chen , C . , & Boyack , K . ( 2003 ) . Visualizing knowledge domains . Annual Review of Information Science and Technology , 37 , 360 179 – 255 . 361 Boyack , K . , Klavans , R . , & Borner , K . ( 2005 ) . Mapping the backbone of science . Scientometrics , 64 , 351 – 374 . 362 Buzydlowski , J . ( 2002 ) . A comparison of self - organizing maps and pathﬁnder networks for the mapping of co - cited authors . PhD thesis , 363 Drexel University . 364 Chen , C . ( 1998a ) . Bridging the gap : The use of pathﬁnder networks in visual navigation . Journal of Visual Languages and Computing , 9 , 365 267 – 286 . 366 Chen , C . ( 1998b ) . Generalised similarity analysis and pathﬁnder network scaling . Interacting with Computers , 10 , 107 – 128 . 367 Chen , C . ( 1999 ) . Information visualization and virtual environments . Berlin , Germany : Springer . 368 Chen , C . ( 2004 ) . Information visualization : Beyond the horizon . Berlin , Germany : Springer . 369 Cormen , T . H . , Leiserson , C . E . , Rivest , R . L . , & Stein , C . ( 2001 ) . Introduction to algorithms ( 2nd ed . ) . The MIT Press . 370 Dearholt , D . , & Schvaneveldt , R . ( 1990 ) . Properties of pathﬁnder networks . In R . Schvaneveldt ( Ed . ) , Pathﬁnder associative networks : 371 Studies in knowledge organization ( pp . 1 – 30 ) . Ablex Publishing Corporation . 372 Dijkstra , E . ( 1959 ) . A note on two problems in connexion with graphs . Numerische Mathematik , 1 , 269 – 271 . 373 Dreyfus , S . ( 1965 ) . Dynamic programming and the calculus of variations . New York , USA : Academic Press . A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx 11 IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005 U N C O R R E C T E D P R O O F 374 Floyd , R . ( 1962 ) . Algorithm 97 : Shortest path . Communications of the ACM , 5 ( 6 ) , 345 . 375 Guerrero - Bote , V . , Zapico - Alonso , F . , Espinosa - Calvo , M . , Go´mez - Criso´stomo , R . , & Moya - Anego´n , F . ( 2006 ) . Binary pathﬁnder : An 376 improvement to the pathﬁnder algorithm . Information Processing and Management , 42 , 1484 – 1490 . 377 Hjorland , B . , & Albrechtsen , H . ( 1995 ) . Toward a new horizon in information science : Domain analysis . Journal of the American Society 378 for Information Science , 46 ( 6 ) , 400 – 425 . 379 Kamada , T . , & Kawai , S . ( 1989 ) . An algorithm for drawing general undirected graphs . Information Processing Letters , 31 ( 1 ) , 7 – 15 . 380 Leydesdorﬀ , L . ( 2004a ) . Clusters and maps of science journals based on bi - connected graphs in the journal citation reports . Journal of 381 Documentation , 60 , 371 – 427 . 382 Leydesdorﬀ , L . ( 2004b ) . Top - down decomposition of the journal citation report of the social science citation index : Graph and factor - 383 analytical approaches . Scientometrics , 60 , 159 – 180 . 384 Lin , X . , White , H . D . , & Buzydlowski , J . ( 2003 ) . Real - time author co - citation mapping for online searching . Information Processing and 385 Management , 39 ( 5 ) , 689 – 706 . 386 Moya - Anego´n , F . , Vargas - Quesada , B . , Herrero - Solana , V . , Chinchilla - Rodrı´guez , Z . , Corera - A´lvarez , E . , & Mun˜oz - Ferna´ndez , F . 387 ( 2004 ) . A new technique for building maps of large scientiﬁc domains based on the cocitation of classes and categories . Scientometrics , 388 61 ( 1 ) , 129 – 145 . 389 Moya - Anego´n , F . , Vargas - Quesada , B . , Chinchilla - Rodrı´guez , Z . , Corera - A´lvarez , E . , Herrero - Solana , V . , & Mun˜oz - Ferna´ndez , F . 390 ( 2005 ) . Domain analysis and information retrieval through the construction of heliocentric maps based on ISI – JCR category 391 cocitation . Information Processing and Management , 41 , 1520 – 1533 . 392 Moya - Anego´n , F . , Vargas - Quesada , B . , Chinchilla - Rodrı´guez , Z . , Corera - A´lvarez , E . , Gonza´lez - Molina , A . , Mun˜oz - Ferna´ndez , F . , et al . 393 ( 2006 ) . Visualizacio´n y ana´lisis de la estructura cientı´ﬁca espan˜ola : ISI web of science 1990 - 2005 ( in Spanish ) . El Profesional de la 394 Informacio´n , 15 ( 4 ) , 258 – 269 . 395 Samoylenko , I . , Chao , T . - C . , Liu , W . - C . , & Chen , C . - M . ( 2006 ) . Visualizing the scientiﬁc world and its evolution . Journal of the American 396 Society for Information Science and Technology , 57 , 1461 – 1469 . 397 Schvaneveldt , R . ( 1990 ) . Pathﬁnder associative networks . Ablex Publishing Corporation . 398 Vargas - Quesada , B . , & Moya - Anego´n , F . ( 2007 ) . Visualizing the structure of science . Springer . 399 Warshall , S . ( 1962 ) . A theorem on boolean matrices . Journal of the ACM , 9 ( 1 ) , 11 – 12 . 400 Watts , D . ( 2004 ) . Small Worlds . The Dynamics of Networks Between Order and Randomness . Princeton University Press . 401 Watts , D . , & Strogatz , S . ( 1998 ) . Collective dynamics of ‘small - world’ networks . Nature , 393 , 440 – 442 . 402 White , H . ( 2003 ) . Pathﬁnder networks and author cocitation analysis : A remapping of paradigmatic information scientists . Journal of the 403 American Society for Information Science and Technology , 54 ( 5 ) , 423 – 434 . 404 12 A . Quirin et al . / Information Processing and Management xxx ( 2007 ) xxx – xxx IPM 1148 No . of Pages 12 , Model 3 + 3 October 2007 ; Disk Used ARTICLE IN PRESS Please cite this article in press as : Quirin , A . et al . , A new variant of the Pathﬁnder algorithm to generate . . . , Information Processing and Management ( 2007 ) , doi : 10 . 1016 / j . ipm . 2007 . 09 . 005