Informing the Design of Shared Bookmark Systems Rushed Kanawati * & Maria Malek * * LIPN , University Paris Nord * 93000 Villetaneuse , France rushed . kanawati @ lipn . univ - paris13 . fr EISTI , Computer Science Department * * 95000 , Cergy , France maria . malek @ isti . fr Abstract Bookmark systems are now recognised as a practical mean that allow users to land mark interesting sites in the huge information space that constitute the World Wide Web . In this paper we argue that , by building collaborative bookmark management tools where a group of people can share their experiences and their results in feeding and organising personal bookmark sets , bookmarks can be transformed into effective customized web spaces . In this paper we first present a study of main requirements that a shared bookmark system should meet . Then the design space of such applications is analysed . The set of identified requirements is used to compare and criticise main collaborative shared bookmark systems that are proposed in the literature . Main drawbacks of existing systems are a ) the weak customisation of shared spaces , b ) the lack of efficient and easy to use privacy protection policies , and c ) the adoption of centralised architectures that affects badly responsiveness , availability and dependability of these systems . Based on our analysis of the state of the art we propose a full distributed collaborative bookmark management system , called CoWing , that meets most of the requirements identified in this paper . A special attention is paid to protect the privacy of the system users . Introduction Almost all World Wide Web ( The Web hereafter ) browsers available today provide users with some bookmarking facility . Bookmark system provide users with the ability to save addresses of Web pages , or sites that users judge relevant to their information need . Typically a bookmark is a record that holds the following information ( c . f . figure 1 ) : an URL of the indexed page , the page title , and some other data such as bookmark creation date , last visit date and user - provided description of the indexed page . The bookmark set becomes a personal web space that help the user in land - marking the huge information space composed of the currently available web pages . A major reason behind the popularity of bookmarks is their ease of use . In most browsers a simple click is enough to save the currently visited web page into the list of bookmarks . Later another simple click on the saved bookmark takes the user directly to the required site . In addition bookmarks reduce the cognitive and physical load of managing URL addresses . They release the user from typing and interpreting unfriendly URLs . If user’s bookmark set is to become an effective user’s customized gate to the Internet , three problems , at least need to be handled : 1 . the resource discovery problem , 2 . the bookmark recall problem , and 3 . the bookmarks maintenance problem . Next we discuss briefly each of the above cited problems . The resource discovery problem An effective personal web space should provide the user with sites that match the best his / her information needs . Mainly it should propose to the user new sites that could interest her / him . Actually the burden of feeding the bookmark list is exclusively on the charge of the user her / himself . In fact as reported in an empirical study presented in ( Abrams et . al . , 1998 ) bookmarks are mainly created for archival purposes . That ' s to say bookmarks save addresses of already visited sites . However , it is now well established that relevant resource discovery is the main problem that face the web users . Effective web resource discovery tools is a hot topic . Few systems propose an automatic approach for building and feeding bookmark sets . The recall problem A useful bookmark is the one that can be found easily when it is needed . When the number of bookmarks is small , let’s say less than 30 bookmarks , finding the relevant one is rather easy . However when the number of bookmarks becomes relatively big , some organizational scheme should be applied in order to enhance the recall time . Most of existing bookmark management systems enable users to organize their bookmarks in a hierarchy of folders . While hierarchical structures may effectively enhance the retrieval time they introduce new problems : “users must continually tradeoff the cost of organizing their bookmarks and remembering which bookmarks are in which folder versus the cost of having to deal with a disorganized set of bookmarks” ( Abrams et . al , 1998 ) . Providing automated bookmark organization capabilities should enhance the global usage of bookmark systems ( Maarek et . al , 1994 ) . According to the empirical study reported in ( Abrams 1999 ) only 23 % of users file bookmarks at creation time and 26 % of users never organized their bookmarks , The other half of users organize their bookmarks in a sporadic way . While these percentages need to be confirmed on a large scale they seem to express the real tendency of web users . Tow reasons may explain these percentages : 1 . Finding the appropriate folder for a given bookmark is not an easy task . The same bookmark may fit in more than one folder . A bookmark mar require to create a new folder , to split existing folders , . . . , etc ( Maarek et . al . , 1996 ) 2 . Filing a bookmark in a given folder in not as easily supported , by current browsers , as the creation of the bookmark . Frequently , this requires to open a specific application ( or tool ) dedicated to bookmark organization hence introducing gaps in the process of web navigation . The maintenance problem Both Web sites and users information needs evolve over time . Consequently bookmark sets need to be revised continually in order to : 1 . match the evolution of the user information need , 2 . and to ensure that stored bookmarks are still valid ( avoid broken links , obsolete contents , … , etc ) . Maintenance is a time - consuming process . That ' s way few people maintain continually their set of bookmarks ( Abrams , 1999 ) . As a result many noisy bookmarks will figure in user bookmark list . With a high level of entropy , both bookmark organization and recall processes will become expensive reducing hence the overall utility of the bookmark set . Collaborative bookmark systems : motivations Two main approaches are explored in the scientific literature to face the above cited three problems : 1 . Personal assistants approach . The idea is to provide personal software agents that can learn , automatically or semi - automatically , the user profile ( user interests and behavior ) and are able to use the learned profile to help users in automating the realization of the above cited tasks . For example the system Siteseer ( Rucker and Polanco , 1997 ) uses the bookmark hierarchy a Web user creates to recommend new Web sites . In ( Maarek and Ben Shaul , 1996 ) authors propose an agent that can help the user in organizing and re - organizing his / her hierarchy of bookmarks . 2 . Collaborative approach . The basic idea is to enable a group of users to share their experiences in managing bookmarks . Sharing bookmarks can provide solutions to the three problems discussed above . It is obvious that by sharing bookmarks one user can benefit from URLs that are found interesting by other users . These URLs are even expected to be of better quality than URLs returned by a searching engine since they are , implicitly or explicitly , evaluated by the other users . By applying some collaborative filtering technique ( Resnick , 1997 ) the quality of new discovered URLs can further be improved . In the same manner by having access to the hierarchy defined by others , a user can get hints to how better organize his own bookmark hierarchy . In the same manner maintenance efforts made by one user could be reused by other users , in a direct or indirect way , resulting in lower maintenance cost . Using recommender systems vocabulary , the first approach corresponds to content - based recommendation , while the second corresponds to collaborative filtering ( Resnick , 1997 ) . Both approaches can be used jointly by the system as demonstrated in the Fab system ( Balabanovic et . al . 1997 ) . A personal agent for bookmark management would enhance its effectiveness by cooperating with other personal agents . In this paper we focus on the design and the implementation issues of collaborative bookmark management system . The reminder of the paper is organized as follows . Next we report main observations about bookmark usage pattern . In section 3 we analysis the requirement set that should be met by a shared bookmark system . Section 4 proposes a functional classification of shared bookmark systems and discuss the main architectural issues of these systems . Section 5 discuss some of existing shared bookmark systems . Existing systems are analyzed and evaluated in function of their satisfaction of the set of requirements identified earlier . Bookmarks usgae patterns Before studying the design issues of a collaborative bookmark management system it is important to have an idea about how actual single - user bookmark systems are used . An interesting study of bookmarks usage pattern is reported in ( Abrams 1999 , Abrams et . al , 1999 ) . ( Maarek et . al . , 1996 ) proposes also a requirement study of single - user bookmark systems . Based on these studies and others we structure the current study in function of the sequence of four phases that compose the life cycle of a bookmark : 1 ) Why to create a bookmark , 2 ) How bookmarks are used , 3 ) How they are organized and 4 ) When they are deleted . Why bookmarks are created ? Three main reasons , at least , motivate users to bookmark a web site . The first obvious reason is the usefulness of the site . Hence book - marking a page can be viewed as an implicit positive rating for the content of that page ( Wittenburg et . al , 1994 ) . However this is not the only motivation for book - marking pages . Two other motivations are ( Abrams , 1999 ) : the high visit frequency of the bookmarked page , and the potential interest in that page . Most users that consult frequently a given web site tend to bookmark that site in order to fasten the access process . It is important to notice that accessing frequently a web site does not mean necessarily that the content of that site makes part of the user interests centers . For example almost all users bookmark at least one Internet search engine site ( ex . AltaVista , Yahoo , MetaCrawler ) . Such sites do not have a fixed content . This is also the case of news sites ( CNN , newspapers sites , etc ) . How bookmarks are used ? One surprising conclusion of the study reported in ( Abrams et . al , 1999 ) is that a subsequent part of created bookmarks are not used later by users . The authors found a median time of about three months since the last visit to a bookmark . From the authors point of view , this observation strength the archival nature of most created bookmarks . Other types of bookmark usage pattern are : cache - like use and collaborative use . In the later mode the user share the stored bookmark with other people either by sending e - mails or by incorporating the bookmark in a specific published web page . In the first mode , the bookmark is used to speed the access to sites that are frequently consulted by the user . How bookmarks are organized ? The question of bookmark organization is already discussed in the introduction ( c . f . section : the recall problem ) . The need for tools that assist users in bookmark organization seems to be a crucial issue towards the success of bookmark systems ( as a customized web spaces ) ( Abrams et . al . , 1998 ) , ( Maarek et . al . , 1996 ) . When bookmarks are deleted ? Deciding whether to delete an existing bookmark is another time consuming task : It requires the user to re - visit the bookmarked site and evaluate the relevancy of that site the current information need . Because of the required over cost , many users do not take the time to delete no more useful bookmarks . In the best cases no more useful bookmarks will be deleted during the sporadic reorganization sessions ( Abrams , 1999 ) . Discussion The above analysis of bookmark usage pattern shows that a consequent part of saved bookmarks do not correspond to the current user interests . Consequently these obsolete bookmarks should not be used to feed the construction current of the user profile . Consequently systems that take indexed web sites to be a part of the user interest centers are making a non negligible error . Other information about the effective utilization of the bookmark ( frequency of consultation , filing nature , filing context , etc ) should be taken into consideration when composing the user profile out of her / his bookmark set . The question of how to construct a user profile basing on the user behavior in managing her / his bookmarks is beyond the scoop of this paper and it will be discussed in a coming publication Requirements for shared bookmark systems In this section we study the main requirements that an ideal collaborative bookmark system should meet . The current requirement study is guided by the usability concept . Some issues that influence the usability of a shared bookmark system are common to groupware applications such as the critical mass problem ( Markus et . al , 1990 ) and privacy protection issues . Others are specific to the application field of such as the cold start and the personalization problems . Next we review main issues that we believe they influence the usability of shared bookmark systems and we cite requirements such a system should meet . The critical mass problem It is now widely admitted that the success of a collaborative application , whatever it is , depends on the constitution of a critical mass of users ( Markus et . al . , 1990 ) : a point where benefits of using the application outweigh costs the user should pay to use the system . Unless the benefits of using a groupware are indisputable , the designer of a groupware system should minimize to the maximum the additional effort users should make in order to use that system . One first rule is to minimize the cost of user adoption of the collaborative application : users should be able to continue using their usual software even in collaboration settings ( Kanawati , 1997 ) . As a result the system should support heterogeneity of both applications and execution platforms . In our context this could be expressed by the following requirement : R1 . Users should be able to collaborate using their usual single - user bookmark management systems . Another factor that influence the adoption of a collaborative system is the performances of that system . In the field of interactive application two main issues are of prime importance : system availability and system responsiveness . In single - user settings the creation of a bookmark or the visualization of folder content are very short . Users would not use a collaborative system if the later would imply longer response times or low availability . If the creation of abookmark would take few seconds users would create less bookmarks than they do in single - user settings and would consult less frequently the bookmark set if it takes long time to view the bookmark set content . R2 . System performances in terms of availability and responsiveness should be comparable to single - user bookmark management systems The cold - start problem One major advantage of sharing bookmarks is the ability to share users opinions on these bookmarks . In fact , when a user submit , explicitly or implicitly , a bookmark to a group of users , the submission process could be interpreted as a recommendation . By applying some collaborative filtering technique the selection of relevant bookmarks could be enhanced . However , a serious problem that face collaborative filtering is the cold - start problem [ Resnick et . al , 1999 ] . Collaborative filtering requires that all concerned users make at least a number of ratings in order to be able to discover similarities between people . However , in real world settings most people prefer to play the role of recommendation consumers rather than recommendation producers . For example when analyzing user contribution to the different public communities of interests supported by the experimental site of the Pharos system ( at pharos . inria . fr ) more than 95 % of contributions are made by less than 3 % of the total number of community members . Such behavior will lead inevitably to the system failure . The 3 % of active people get no real benefits from using the system , this may lead them to stop their contribution . A useable shared bookmark system should satisfy the following requirement : R3 . The system should be useful for its users as early as possible Personalization Personalization is perhaps the most difficult problem that face collaborative shared bookmark management systems . the problem is two folds : 1 . First , each user should be able to tailor the application in function of her / his own view points and information needs . 2 . Secondly , the system should provide users with relevant recommendations that match their view points and information needs . Most of work in the area of shared bookmark systems focus on the second issue . Few , if any , handle the issue of system tailorability by end users . We illustrate the importance of this issue by taking the example of the hierarchical organization of bookmarks . Each user has her / his own point of view and preferences on how to organize her / his own bookmarks . Imposing the use of the same hierarchy by all the users is just like allowing a stranger to organize your desktop ( Maarek et . al , 1996 ) ! . Most people would not accept to relinquish control of their bookmarks to others . When using systems that impose the use of a uniquehierarchy by all users , such as the case of Knowledge Pump ( Glance et . al . , 1999 ) and Pharos ( Bouthors et . al , 1999 ) , users will be obliged to maintain two different bookmaring systems , a personal one and a group oriented one . This clear separation of cooperative tools and individual tools that do the same task , is one factor that leads to collaborative applications failure ( Kanawati , 1997 ) , ( Navarro et . al . , 1993 ) . Consequently a shared bookmark system should meet the following requirements : R4 . The system should be tailorable by end users . R5 . The system should provide users with customized recommendations Privacy protection A classical problem in collaborative system design is privacy protection . If users are not able to control what others know about them , they will simply refuse to use the system . Most existing systems provide “binary” protection scheme : they allow users to define which information are private and which are public . However , in real world settings relations between people can not be expressed in such a binary way . A user A may wish to share a part of her / his knowledge with a user B and another part with user C . A fine grained access control schemes should be provided ( Kanawati , 1997 ) . R6 . The system should provide users with fine grained access control module . Each user should be able to control what to share with whom . Collaborative Bookmark Systems : Design issues The design of a collaborative bookmarking system requires the designer to define : 1 . The system policy that to say what functions to provide for whom , and how users could interact with system . 2 . Techniques to be used . These include group management techniques , access control techniques and matchmaking techniques . The study of all these techniques is out of the scope of this paper . 3 . The system implementation , or system architecture , scheme . We discuss hereafter both political issues and architectural ones . Political issues The system policy defines the set of services to be provided by the system , the nature and the composition of the target group of users and how users could interact with the system . Next we describe briefly the different possibilities concerning each of the above identified political issues : • Provided services . As discussed in section 1 , three different services can provided : Enhancing relevant resource discovery , enhancing the bookmark organization or helping in reducing the bookmark set maintenance cost . A system can aim to fluffy one or more of the above - cited services . • User group characteristics . Another important choice to made is to determine the nature and the characteristics of the target group of users . Target users could be already an organized group or a flat group . Group membership could be open or controlled . Users could be anonymous or identified . • Data gathering scheme . From the user point of view , two main schemes for data gathering can be distinguished : active scheme and passive one . Following the former scheme it is up to the user to tell explicitly the system how to share his / her bookmarks . In the later mode the system determines automatically what to share with whom depending on users interaction with the system . • Result gathering scheme . In the same manner as above we distinguish here between active scheme and passive one . Architectural Issues In much a classical way , we distinguish between tow basic types of architectures : centralized architecture and distributed one . In a centralized architecture a central server keep all shared date ( i . e . bookmarks ) and information about the system users ( i . e . user profiles ) . The main advantage of such an architecture is its simplicity . Almost all existing shared bookmark management system have a centralized architecture ( see section 5 ) . However this architecture type suffers from a number of serious drawbacks . First of all centralized architectures are subject to single point failure problems . If the central server either fails or becomes unreachable because of some network failure , it is the whole system which is compromised . Hence centralized architecture may provide poor system availability . System responsiveness is also compromised since user actions are treated by a remote machine . In addition centralized architecture are known to have scaling problems . More importantly , centralization presents a trust problem ( Foner , 1999 ) . Requirement R6 ( see section 3 . 4 ) states that users should be in control of who share what of their own data . By centralizing data on a remote server the user loose control over her / his own data . We believe as Forne ( Forner , 1999 ) that only distributed architecture can be used to implement a useable shared bookmark system . In such an architecture each user keeps locally his own data and his view on others data . Problems of availability , responsiveness and scaling are then resolved . Users could have also more control on how to share their bookmarks . However , the solution is not without drawbacks . Implementing a distributed architecture requires the designer to solve the difficult problem of coordination between the different sites . Existing systems A number of shared bookmark systems are proposed in the literature . Examples are the GAB system ( Wittenburg et . al . , 1997 ) , KnowledgePump ( Glance et . al . , 1997 ) , Pharos ( Bouthors et . al . , 1999 ) and Yenta ( Forner , 1999 ) . The later system is presented by the author as matchmaking system . Yenta aims at discovering matchmaking between people based on comparing shared interests . The principal of Yenta could be easily applied to built a collaborative bookmark system . In addition to the above cited systems we consider also the approach based on compiling bookmarks to share in a shared web page . System Services Group nature Data gathering Result obtaining Architec - ture Shared Pages RD Closed flat identified Active Active centralized GAB RD Closed flat Passive Active centralized Pharos RD Closed flat anonymous Active - centralized Know . Pump RD Closed organized identified Active - centralized Yenta RD Open flat anonymous Passive Passive distributed Table 1 . Characterization of main shared bookmark management systems Table 1 describes the retained systems in function of the design features identified in section 4 . All these systems provide solutions to the resource discovery problem . The other two problems bookmark management and maintenance ( see section 1 . 2 , 1 . 3 ) are not handled . This can be partially explained by the extreme importance of the first problem . Among the cited systems , only Yenta aims at supporting open groups . Unlike the other systems Yenta has a full distributed architecture . It presents no scaling problems . Except for Yenta and GAB all other systems require users to explicitly feed the system with bookmarks to share . This requirement increase the cost of using the system and may influence the system adoption . In Table 2 , we show how the requirements identified in section 3 are met with the retained systems . We use the symbol l to indicate that the requirement is satisfied and m to say that the requirement is tackled and – to say that system does not handle at all the concerned requirement . As illustrated by this table , main problems of existing systems concerns the tailorability ( R4 ) and privacy protection ( R6 ) . In addition all systems but Yenta inherit the problems of centralized architecture ( see section 4 . 2 ) . System R 1 R 2 R 3 R 4 R 5 R 6 Shared pages - - m - - - GAB l m m - m - Pharos - - m - l m Know . Pump - - l - l - Yenta l l m l l m Table 2 . Comparison of existing shared bookmark systems CO - WING : TOWARDS A Full distributed Shared Bookmark System In this section we describe our proposition of collaborative bookmark management system . The proposed system , called CoWing ( for CO llaborative W eb In dexin G ) aims at allowing an organized group of people to share their experiences in managing bookmarks . CoWing has a full distributed architecture . Each user is associated with a personal assistant , called the Wing agent ( for W eb INdex inG agent ) . Each Wing agent has access to the following information : • The user bookmark hierarchy . • A description of the organization of users . The system uses the same organization management system as the COLT system proposed by the first author of this paper ( Kanawati , 1997 ) . The Colt organizational model allow users to define fine grained access control rules that others could have on the users local data ( here user’s bookmarks ) . In this paper we lake for space to describe the access control module . We invite readers to consult ( Kanawati , 1997 ) for more details . • A set of computed recommendations that are not yet treated by the user . The system functions as follows . Each user defines and manage her / his own hierarchy of bookmarks ( just as in single - user settings ) . In addition the user defines access rules of other users on his own bookmark folders . The local Wing agent asks peer Wing agents to feed him with new organized bookmarks ( a set of folders of bookmarks ) . When a Wing A receives a request from a Wing B , the former computes the view B has on A’s bookmark space . Then it returns what B can access in function of B’s access control permissions . The local agent applies some clustering scheme to identify clusters of received folders of bookmarks . The clustering algorithm is only applied on received folders . Similarity on Urls and indexed page contents are used to form clusters . Then the local agent will try to place each of the local bookmark folders in the obtained clusters . The Wing agent will recommend the users bookmarks that are in folders that belong the same cluster as the local bookmark folder . Users are only asked to define others access control rules on their own data and the system will automatically feed their local folders with bookmarks coming from others hierarchy of bookmarks . No active participation is required from users either for data gathering neither for result gathering Conclusion In This paper we have studied the main requirements that a shared bookmark management system should meet . Design issued of such systems are also studied . A review of existing systems shows that almost all systems lack for adequate privacy protection services and provide poor performances inherited by choosing a centralized architecture . A proposition of a full distributed bookmark management system is made . The overall architecture is described . We are working now on defining the precise clustering technique to be used . In a first version of CoWing we will use an adapted version of an incremental classification system , called Probis ( Malek , 1999 ) developed by the second author of this paper . Bibliographical References Abrams , D . , Baecker , R . , and Chignell , M , ( 1998 ) . Information Archiving with Bookmarks : Personal Web space Construction and Organization . In Proceedings of ACM Conference on Human Computer Interactions ( CHI’98 ) , Los Anglos , 18 - 23 Avril pp . 41 - 48 . Abrams , D . ( 1997 ) Human Factors of Personal Web Information Spaces . MS Thesis , Departement of Computer Sciences , University of Torento , 1997 , Also available as http : / / www . dgp . torento . edu / ~ abrams Balabanovic , M . and Shoham Y . Fab : Content - based collaborative recommendation . Communication of the ACM 40 , 3 ( March 1997 ) , pp . 88 - 89 . Bouthors V . , and Dedieu O . ( 1999 ) . Pharos , a Collaborative Infrastructure for Web Knowledge Sharing . In Proceedings of the third European Conference On Research and Advanced Technology for Digital Libraries ( ECDL’99 ) ( Abiteboul S . , and Vercoustre A . Eds ) , LNCS No 1696 , Paris september , 1999 , pp . 215 - 233 Foner , L . N . ( 1999 ) Political Artifacts and Personal Privacy : The Yenta Multi - Agent Distributed Matchmaking System , PhD Thesis , Massachustts Institute of Technology , june 1999 . Glance , N . , Arregui , D . , and Dardenne M . ( 1999 ) Making Recommender Systems Work for Organizations . In Proceedings of PAAM ' 99 , London April 1999 . Glance , N . , Arregui , D . , and Dardenne , M . ( 1997 ) Knowledge Pump : Community - centred Collaborative Filtering . In Proceedings of the 5 th DELOS Workshop ob Filtering and Collaborative Filtering , Budapest , 10 - 12 November , 1997 . Grudin , J . ( 1994 ) Groupware and Social Dynamics : Eight challenges for developers . Communication of the ACM 37 , 1 ( January 1994 ) , pp . 92 - 105 . Kanawati , R , ( 1997 ) Groupware : Architectural and Control Issues , PhD Thesis , Institut National Polytechnic de Grenoble , november , 1997 , 173 pages ( In french ) . Kanawati , R . ( 1998 ) COLT : Yet Another Integrated Collaborative Environment . In Proceedings of the third International Conference on the Design of Cooperative Systems ( Dareses , F . , and Zaraté , P . Eds ) Volume II Cannes 26 - 29 May 1998 , pp . 99 - 102 Lim , J - G . , ( 1994 ) Using Cool - lists to Index HTML Documents in the Web , In Proceedings of the 2 nd International Conference on the World Wide Web ( WWW’2 ) Chicago , IL , 1994 pp . 831 - 938 . Also http : / / www . ncsa . uiuc . edu / SDG / IT94 / Proceedings / Searching / lim / coollist . hml Maarek , Y . S . , Ben Shaul , I . Z . ( 1996 ) Automatically Organizing Bookmarks per Contents . In Proceedings of the 5 th International World Wide Web Conference , Malek , M . Un classificateur incrémental à base de prototypes pour la détection de fausse alarmes dans le domaine des feux de forêt , In proceedings of 7 ième journées de la société francophone de classification ( Le Ber F . , Mari J - F . , Napoli A . and Simo , A . Eds ) 15 - 17 september Nancy 1999 . pp . 137 - 146 Markus , M . L . , and Connolly , T . ( 1990 ) Why CSCW Applications Fail : Problems in the Adoption of Interdependent Work Tools . In Proceedings of the International Conference on Computer Supported Collaborative Work ( CSCW’90 ) , New York 1990 . Navarro L . , Prinz W . and Rodden T . ( 1993 ) CSCW Requiers Open Systems . Computer Communication , vol 16 ( 5 ) , May , 1993 . Resnick P . ( 1997 ) Recommender Systems , Communications of the ACM 40 ( 3 ) , 1997 Rucker J . , and Marcos J . P . , ( 1997 ) Siteseer : Personnalized Navigation for the Web . Communications of the ACM 40 ( 3 ) , pp . 73 - 75 . 1997 Wittenburg , K . , Das , D . , Hill W . , and Stead L . ( 1997 ) Group Asynchronous Browsing on the World Wide Web . In proceedings of the 6 th International Conference on the World Wide Web ( WWW’6 ) , 1997