Clustering Music Recordings Based on Genres Wei - Ho Tsai Department of Electronic Engineering & Graduate Institute of Computer and Communication Engineering National Taipei University of Technology No . 1 , Sec . 3 , Chunghsiao E . Rd . Taipei , 10608 , Taiwan E - mail : whtsai @ ntut . edu . tw Duo - Fu Bao Department of Electronic Engineering & Graduate Institute of Computer and Communication Engineering National Taipei University of Technology No . 1 , Sec . 3 , Chunghsiao E . Rd . Taipei , 10608 , Taiwan E - mail : t5418027 @ ntut . edu . tw Abstract —Existing systems for automatic genre classification follows a supervised framework that extracts genre - specific information from manually - labeled music data and then identifies unknown music data . However , such systems may not be suitable for personal music management , because manually labeling music based on individually - defined genres can be labor intensive and subject to inconsistence from time to time . This work studies an unsupervised paradigm for music genre classification . It is aimed to partition a collection of unknown music recordings into several clusters such that each cluster contains recordings in only one genre , and different clusters represent different genres . This enables users to organize their personal music database without needing specific knowledge about genre . We investigate how to measure the genre similarities between music recordings and estimate the genre population size of a music collection . Our experiment results show the feasibility of clustering music recordings by genre . Keywords—clustering ; music genre ; unsupervised classification I . I NTRODUCTION A music genre represents a type of music that has the common characteristics shared by its members and can be distinguished from other types of music . Automatic classifi - cation of music genres [ 1 - 12 ] serves as an effective way to structure and organize vast numbers of music files nowadays . So far , most genre classification systems [ 1 - 11 ] follow a supervised framework that extracts genre - specific information from manually - labeled music data and then identifies unknown music data . However , such systems may not be suitable for personal music management , because manually labeling music based on individually - defined genres can be labor intensive and subject to inconsistence from time to time . Unlike the supervised genre classification , this work studies an unsupervised paradigm for music genre classification . It is aimed to partition a collection of unknown music recordings into several clusters such that each cluster contains recordings in only one genre , and different clusters represent different genres . This enables users to organize their personal music database without needing specific knowledge about genre . As a closest related work to this study , [ 12 ] proposed an unsupervised classification framework to identify the genres of music clips . They used hidden Markov modeling to characterize the genre information of each music clip , thereby measuring the similarities between clips . Although music clips can then be grouped into clusters after knowing which clips are similar or dissimilar to each other , [ 12 ] did not study the issue as to how many clusters should be generated . In general , the greater the number of clusters generated , the higher the chance that within - cluster music clips belong to the same genre . However , if too many clusters are generated , music clips in the same genre would be split across multiple clusters , and hence the clustering will not be completed . Clearly , the optimal number of clusters equals the number of genres , which is unknown and needs to be estimated . Our major efforts in this study are thus put on investigating how to measure the genre similarities between music recordings and estimate the genre population size of a music collection . The remainder of this paper is organized as follows . In Section II , we formulate the problem of genre - based clustering of music data and describe the performance assessment method used in this study . Section III introduces the major components of the proposed system , namely , inter - recording similarity computation , cluster generation , and the estimation of the optimal number of clusters . Section IV discusses our experiment results . Then , in Section V , we present our conclusions and indicate the direction of our future work . II . P ROBLEM FORMULATION Given a set of N unknown music recordings , each in one of the P different genres , where N ≥ P , and P is also unknown , our aim is to produce a partitioning of the N music recordings into M clusters such that M = P , and each cluster consists exclusively of recordings associated with only one genre . To evaluate the clustering performance , we consider two metrics : cluster purity [ 13 ] and the Rand index ( RI ) [ 13 , 14 ] . Cluster purity indicates the probability of correct clustering . For cluster(cid:2) c m , (cid:2)its(cid:2)purity(cid:2)is(cid:2)computed(cid:2)by(cid:2) . 2 1 * (cid:166) = (cid:184)(cid:184)(cid:185)(cid:183) (cid:168)(cid:168)(cid:169)(cid:167) = P p m mp m n n ρ ( 1 ) where n m * is the number of recordings in cluster c m , and n mp is the number of recordings in cluster c m that are performed in the p - th genre . To evaluate the overall performance of M - clustering , we compute an average purity : 978 - 1 - 4244 - 5943 - 8 / 10 / $ 26 . 00 ©2010 IEEE . 1 1 * (cid:166) = = M m m m n N ρ ρ ( 2 ) Obviously , a perfect clustering should produce an average purity of one . However , this does not work both ways . The value of the average purity generally increases as the number of clusters increases , since the metric does not consider errors that music data in the same genre are placed in different clusters . Hence , the cluster purity is only suitable for comparing the performance of different clustering methods if the number of clusters is specified a priori . In contrast , the Rand index ( RI ) indicates the probability of incorrect clustering . It is computed by (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) = = = = = = + − + = P p p M m m M m P p mp P p p M m m n n n n n M R 1 2 * 1 2 * 1 1 2 1 2 * 1 2 * 2 ) ( , ( 3 ) where n * p is the number of recordings performed in the p - th genre . Obviously , the smaller the value of R ( M ) , the better the clustering performance will be . Unlike the cluster purity metric , which favors a large M value , RI usually decreases with an increase in the value of M initially , and reaches the minimum at M = P . When M > P , RI starts to increase as the value of M increases . Hence , RI is suitable for comparing the performances of different clustering methods involving different numbers of clusters generated . III . S YSTEM C ONFIGURATION The proposed clustering system consists of three major components : computation of inter - clip similarities , generation of clusters , and estimation of the optimal number of clusters . A . Inter - clip similarity computation The inter - recording similarity computation begins by characterizing each music recording as a set of genre - related parameters . Motivated by [ 1 ] , our strategy for generating genre - related parameters is to perform timbre - based feature extraction followed by Gaussian mixture modeling . Although music genre information resides in timbre , rhythm , harmony , melody , etc . , it is found [ 1 ] that timbre - based features are more useful than the others in distinguish - ing between genres . Among the timbre - based features investigated in [ 1 ] , Mel - scale Frequency Cepstral Coefficients ( MFCCs ) feature [ 15 ] is observed superior to the others . However , this study found that another feature not explored in [ 16 ] , called Renyi Entropy ( RE ) , outperforms MFCCs in music genre classification . Based on this finding , we further propose a new feature , called Renyi Entropy Cepstral Coefficients ( RECCs ) , by combining the MFCCs with RE . Given a waveform signal , we use a fixed - length sliding Hamming window ( frame ) to compute its fast Fourier transform ( FFT ) with size J . Let | X t , j | 2 denote the signal’s energy with respect to FFT index j in frame t , where 1 ≤ j ≤ J . Then , RECCs are computed by ( ) , 5 . 0 cos ) ( log 1 1 1 RECC 1 , , (cid:166) (cid:166) = = (cid:176)(cid:191) (cid:176)(cid:190)(cid:189) (cid:176)(cid:175) (cid:176)(cid:174)(cid:173) (cid:184)(cid:185)(cid:183) (cid:168)(cid:169)(cid:167) − ⋅ (cid:184)(cid:184)(cid:185)(cid:183) (cid:168)(cid:168)(cid:169)(cid:167) − = B b u l j b r j t i t b B i j T X r B b b π 1 ≤ i ≤ B , ( 4 ) where B is the number of triangular filter banks used in MFCCs , l b is the lowest frequency index in the b - th bank , u b is the highest frequency index in the b - th bank , T b ( j ) is the response of the b - th bank , and r is a non - negative integer . We set r = 3 empirically in the study . Feature vectors extracted from a music recording is then represented by a Gaussian Mixture Model ( GMM ) . It is assumed that each piece of music has its own genre pattern that reflects in the distribution of timbre - based features over a span of time . A GMM approximates any genre patterns by a mixture of Gaussian densities , each consists of means and covariances . If there are N music recordings , X 1 , X 2 , … , X N , to be clustered , we generate N recording individual GMMs λ 1 , λ 2 , … , λ N . It is hoped that , if two music recordings , say X i and X j , belong to the same genre , the GMMs λ i and λ j would be more similar in some sense , compared to any two GMMs associated with different genres . To measure the similarity between GMMs , we consider the following metrics . ( i ) Cross likelihood ratio [ 17 ] : ) | Pr ( ) | Pr ( log ) | Pr ( ) | Pr ( log ) , ( i i i j j j j i j i S λ λ + λ λ = X X X X X X , ( 5 ) where Pr ( X i | λ j ) is the likelihood probability that music recording X i belong to the genre characterized by GMM λ j . ( ii ) Inverse Euclidean norm : [ ] . ) | Pr ( log ) | Pr ( log 1 ) , ( 1 2 (cid:166) = λ − λ = N k k j k i j i S X X X X ( 6 ) ( iii ) Cosine measure [ ] [ ] [ ] . ) | Pr ( log ) | Pr ( log ) | Pr ( log ) | Pr ( log ) , ( 1 2 1 2 1 (cid:166) (cid:166) (cid:166) = = = λ λ λ ⋅ λ = N k k j N k k i N k k j k i j i S X X X X X X ( 7 ) B . Cluster generation After computing the inter - clip similarities , a hierarchical agglomerative clustering method [ 18 ] is used to sequentially merge the clips deemed similar to one another . It consists of the following procedure : 1 . begin initialize M (cid:277) N , and form clusters c i (cid:277) { X i } , i = 1 , 2 , . . . , N 2 . do 3 . find the most similar pair of clusters , say c i and c j 4 . merge c i and c j 5 . M (cid:277) M − 1 6 . until M = 1 7 . end The similarities between a pair of clusters , say c i and c j , can be derived from the inter - recording similarities , according to one of the following heuristic measures : ( i ) complete linkage ) , ( min ) c , c ( c , c k n j i c S S j k i n X X X X ∈ ∈ = , ( ii ) single linkage ) , ( max ) c , c ( c , c k n j i c S S j k i n X X X X ∈ ∈ = , ( iii ) average linkage (cid:166) ∈ ∈ ∈ ∈ = j k i n k n j k i n j i c S S c , c ) , ( ) c , c ( # 1 ) c , c ( X X X X X X , where # ( X n ∈ c i , X k ∈ c j ) denotes the number of recording pairs involved in the summation . The outcome of the agglomeration procedure is a cluster tree with the number of clusters ranging from 1 to N . C . Estimation of optimal number of clusters As mentioned in Sec . II , RI usually decreases with an increase in the value of M initially , and reaches the minimum at M = P . When M > P , RI starts to increase as the value of M increases . Thus , the optimal number of clusters can be determined by estimating RI for each node of the cluster tree , and then choosing the one achieving the smallest value of RI . Recall that RI in ( 3 ) consists of three terms : Σ M m = 1 n 2 m * , Σ P p = 1 n 2 * p , and Σ M m = 1 Σ P p = 1 n 2 mp . The first term can be computed based on the clustering result , and the second term is a constant irrelevant to clustering . However , the third term requires that the ground truth is known in advance , which cannot be computed directly . To solve this problem , we represent Σ M m = 1 Σ P p = 1 n 2 mp by , ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( ) , ( 1 1 1 1 1 1 1 1 1 1 1 1 2 1 (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) (cid:166) = = = = = = = = = = = = = = = (cid:187)(cid:188)(cid:186) (cid:171)(cid:172)(cid:170) (cid:187)(cid:188)(cid:186) (cid:171)(cid:172)(cid:170) = (cid:187)(cid:188)(cid:186) (cid:171)(cid:172)(cid:170) N i N j j i j i M m P p N i N j j j i i M m P p N j j j N i i i M m P p N i i i o o h h p o m h p o m h p o m h p o m h p o m h δ δ δ δ δ δ δ δ δ δ δ δ ( 8 ) where δ ( ⋅ ) is a Kronecker Delta function , h i is the index of cluster where the i - th recording is located , and o i is the true genre associated with the i - th recording . Note that h i , 1 ≤ i ≤ N , is an integer between 1 and M , if M clusters are generated . The term δ ( o i , o j ) in ( 8 ) is then approximated by the normalized similarity between X i and X j . Specifically , , if , ) , ( ) , ( if , 1 ) , ( ˆ ) , ( (cid:176)(cid:175) (cid:176)(cid:174)(cid:173) ≠ = = ← j i S S j i o o i i j i j i j i ξ δ δ X X X X X X ( 9 ) where X ξ i is the clips most similar to X i . Hence , the optimal set of cluster indices can be determined by ( ) (cid:191)(cid:190)(cid:189) (cid:175)(cid:174)(cid:173) − = (cid:166) (cid:166) (cid:166) = = = ≤ ≤ N i N j j i j i M m m N M h h n M 1 1 1 2 * 1 * ) , ( ˆ , 2 min arg X X δ δ . ( 10 ) IV . E XPERIMENTS A . Music data The music data used in this study was extracted from the Training Set and Development Set of Magnatune [ 19 ] used in MIRIX 2005 . It comprised six music genres : classical , electronic , jazz , rock & pop , punk & metal , and world . We randomly selected 40 songs per genre to conduct the clustering experiments . Thus , there were a total of 240 songs . For convenience of experiment , we converted each song from its original MP3 ( MPEG - 1 Audio Layer 3 ) representation with 44 . 1KHz sampling rate to waveform representation with 22 . 05KHz sampling rate . B . Experimental results The first experiment was conducted under the condition that the number of manually - specified genres is known , which means the number of clusters to be generated is given a priori . This allows us to test the validity of the first two components of our music clustering system , namely , the computation of inter - recording similarity and generation of clusters . In this case , our aim is to partition the music recordings into 6 clusters , such that each cluster contains music data associated with only one genre . Table I shows the results obtained with various audio features and inter - recording similarity measures . Here , the number of Gaussian components used in each GMM was empirically determined to be 32 . Note that the system using MFCC feature and cross likelihood ratio could represent a baseline system proposed by [ 12 ] . We can see that RE feature performs better than MFCC feature , which shows the higher value of purity and lower value of Rand index . It is also clear that RECC feature further outperforms both MFCC feature and RE feature . Among the three inter - recording similarity measures , we can observe that cosine measure performs best , cross likelihood ratio performs worst , and reverse Euclidean norm are between them . Thus , in the subsequent experiments , we used the system with RECC feature and cosine measure . T ABLE I C LUSTERING RESULTS OBTAINED WITH VARIOUS AUDIO FEATURES AND INTER - RECORDING SIMILARITY MEASURES . ( A ) P URITY Feature Similarity Measure MFCCs RE RECCs Cross Likelihood Ratio 0 . 58 0 . 61 0 . 62 Reverse Euclidean Norm 0 . 61 0 . 63 0 . 69 Cosine Measure 0 . 61 0 . 66 0 . 71 ( B ) R AND I NDEX Feature Similarity Measure MFCCs RE RECCs Cross Likelihood Ratio 0 . 43 0 . 37 0 . 35 Reverse Euclidean Norm 0 . 37 0 . 34 0 . 30 Cosine Measure 0 . 37 0 . 32 0 . 27 Fig . 1 shows the resulting purity and Rand index as a function of the varied number of clusters . Naturally , the value of purity increases as the number of clusters increases . When 56 clusters were generated , we obtained a purity of 1 . 0 . However , it is obvious that such a clustering result is not perfect , since multiple music recordings in the same genre are placed in different clusters . On the other hand , we can see from Fig . 1 that the value of Rand index increases with the increase of the number of clusters in the beginning , but declines gradually after an excess of clusters is created . The minimum of Rand index appears near the number of genres . 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 Number of Clusters 0 . 10 0 . 20 0 . 30 0 . 40 0 . 50 0 . 60 0 . 70 0 . 80 0 . 90 1 . 00 A v e r age P u r i t y & R and I nde x Purity Rand Index Figure . 1 . The purity and Rand Index as a function of varied number of clusters . We then examined the system under the condition that the number of manually - specified genres ( true genre population sizes ) is unknown and must be estimated . The database was divided into three subsets involving different genre population sizes . The first subset consisted of the 40 classical songs , 40 electronic songs , and 40 jazz songs . The second subset consisted of the 40 rock & pop songs , 40 punk & metal songs , and 40 world songs . The third subset was the whole database , i . e . , 240 songs in the six genres . We conducted clustering experiment for each subset separately , in order to examine if the optimal numbers of clusters determined by using ( 10 ) could be close to 3 or 6 . Fig . 2 shows the clustering results . We can see that the minimum value of the approximated Rand indices were located close to the true genre population sizes . Table II summarizes the results obtained with known genre population sizes and estimated genre population sizes . It is clear from Table II that the performances achieved with estimated genre population sizes were comparable to those achieved with known genre population sizes . This result confirms the validity of the proposed method of estimating genre population size . T ABLE II A SUMMARIZATION OF THE R AND INDICES OBTAINED WITH KNOWN AND ESTIMATED GENRE POPULATION SIZES . Condition Data Known Genre Population Size Estimated Genre Population Size First Subset 0 . 19 0 . 21 Second Subset 0 . 23 0 . 22 Third Subset 0 . 27 0 . 28 The above experiments show that roughly 70 % music recordings in the same genre were correctly clustered , given the result of Rand index = 0 . 28 . Although the results are far from perfect , they show the feasibility of using unsupervised clustering to index music data by genre . V . C ONCLUSIONS We have studied an unsupervised clustering paradigm for identifying music recordings in the same genre . This is done by measuring the similarities between music recordings and using the hierarchical agglomerative clustering to group together the recordings deemed similar to one another . We have also proposed a method based on the Rand index to determine the optimal number of clusters automatically , corresponding to the genre population size . Experiments show the feasibility of using unsupervised clustering to index music data . Despite the viability , the methods proposed in this study can only be regarded as a preliminary investigation in realistic music data indexing applications . To be of more practical use , more work is needed to study the effectiveness and efficiency of clustering a large scale of music collection . The fundamental problem would be how to characterize music data as audio features more closely related to music genre . 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 Number of Clusters - 2000 . 0 - 1000 . 0 0 . 0 1000 . 0 2000 . 0 3000 . 0 4000 . 0 5000 . 0 A pp r o x i m a t ed R and I nde x ( a ) For the first subset consisted of 40 classical songs , 40 electronic songs , and 40 jazz songs . 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 Number of Clusters - 2000 . 0 - 1000 . 0 0 . 0 1000 . 0 2000 . 0 3000 . 0 4000 . 0 5000 . 0 A pp r o x i m a t ed R and I nde x ( b ) For the second subset consisted of 40 rock & pop songs , 40 punk & metal songs , and 40 world songs . 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 Number of Clusters - 15000 . 0 - 10000 . 0 - 5000 . 0 0 . 0 5000 . 0 10000 . 0 15000 . 0 20000 . 0 25000 . 0 30000 . 0 35000 . 0 40000 . 0 A pp r o x i m a t ed R and I nde x ( c ) For the entire 240 - song database consisted of six genres . Figure . 2 . Approximated Rand index as a function of varied no . of clusters . R EFERENCES [ 1 ] G . Tzanetakis and P . Cook , “Musical Genre Classification of Audio Signals , ” IEEE Trans . Speech Audio Proc . , vol . 10 , no . 5 , July 2002 . [ 2 ] T . Li , M . Ogihara , and Q . Li , “A Comparative Study on Content - Based Music Genre Classification , ” Proc . ACM SIGIR Conference on Research and Development in Information Retrieval , 2003 . [ 3 ] T . Lidy and A . Rauber , “Evaluation of feature extractors and psycho - acoustic transformations for music genre classification , ” Proc . International Conference on Music Information Retrieval , 2005 . [ 4 ] E . Pampalk , A . Flexer , and G . Widmer , “Improvements of audio - based music similarity and genre classification , ” Proc . International Conference on Music Information Retrieval , 2005 . [ 5 ] N . Scaringella , G . Zoia , and D . Mlynek , “Automatic genre classification of music content : a survey , ” IEEE Signal Processing Magazine , vol . 23 , pp . 133 - 141 , 2006 . [ 6 ] A . Meng , P . Ahrendt , J . Larsen , and L . K . Hansen , “Temporal Feature Integration for Music Genre Classification” , IEEE Trans . Audio , Speech , and Language Proc . , vol . 15 , no . 5 , pp . 1654 – 1664 , July 2007 . [ 7 ] R . Neumayer and A . Rauber , " Integration of Text and Audio Features for Genre Classification in Music Information Retrieval " , Lecture Notes in Computer Science , vol . 4425 , 2007 . [ 8 ] J . Abeßer , H . Lukashevich , C . Dittmar , and G . Schuller , " Genre classification using bass - related high - level features and playing styles " , Proc . International Society for Music Information Retrieval Conference , 2009 . [ 9 ] Z . Zeng , S . Zhang , H . Li , W . Liang , and H . Zheng , " A novel approach to musical genre classification using probabilistic latent semantic analysis model " , Proc . IEEE International Conference on Multimedia and Expo , 2009 . [ 10 ] Y . Panagakis , C . Kotropoulos , and G . R . Arce , “music genre classification via sparse representations of auditory temporal modulations” , Proc . European Signal Processing Conference , 2009 . [ 11 ] L . Chen , P . Wright , and W . Nejdl , " Improving Music Genre Classification Using Collaborative Tagging Data " , Proc . ACM International Conference on Web Search and Data Mining , 2009 . [ 12 ] X . Shao , C . Xu . , and M . S . Kankanhalli , “Unsupervised classification of musical genre using hidden Markov model” , Proc . IEEE Conference on Multimedia Expo , 2004 . [ 13 ] A . Solomonoff , A . Mielke , M . Schmidt , and H . Gish , “Clustering speakers by their voices , ” Proc . IEEE Conference on Acoustics , Speech and Signal Processing , 1998 . [ 14 ] W . M . Rand , “Objective criteria for the evaluation of clustering methods , ” Journal of the American Statistical Association . vol . 66 , pp . 846 - 850 , 1971 . [ 15 ] S . B . Davis and P . Mermelstein , “Comparison of Parametric Representations for Monosyllabic Word Recognition in Continuously Spoken Sentences , ” IEEE Trans . Acoustics , Speech , Signal Proc . , vol . 28 , pp . 357 - 366 , 1980 . [ 16 ] A . Ramalingam and S . Krishnan , “Gaussian mixture modeling of short - time Fourier transform features for audio finger - printing , ” IEEE Trans . Information Forensics Security , 2006 . [ 17 ] D . A . Reynolds , “Speaker identification and verification using Gaussian mixture speaker models , ” Speech Communication , vol . 17 , pp . 91 - 108 , 1995 . [ 18 ] L . Kaufman and P . J . Rousseuw , Finding Groups in Data : An Introduction to Cluster Analysis , Wiley , New York , 1990 . [ 19 ] MIREX 2005 , Audio Genre Classification : http : / / www . music - ir . org / mirex / 2005 / index . php / Audio _ Genre _ Classification