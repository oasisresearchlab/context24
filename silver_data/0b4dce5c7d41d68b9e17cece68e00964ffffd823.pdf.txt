Symmetry Compression Method for Discovering Network Motifs Jianxin Wang , Yuannan Huang , Fang - Xiang Wu , and Yi Pan Abstract —Discovering network motifs could provide a significant insight into systems biology . Interestingly , many biological networks have been found to have a high degree of symmetry ( automorphism ) , which is inherent in biological network topologies . The symmetry due to the large number of basic symmetric subgraphs ( BSSs ) causes a certain redundant calculation in discovering network motifs . Therefore , we compress all basic symmetric subgraphs before extracting compressed subgraphs and propose an efficient decompression algorithm to decompress all compressed subgraphs without loss of any information . In contrast to previous approaches , the novel Symmetry Compression method for Motif Detection , named as SCMD , eliminates most redundant calculations caused by widespread symmetry of biological networks . We use SCMD to improve three notable exact algorithms and two efficient sampling algorithms . Results of all exact algorithms with SCMD are the same as those of the original algorithms , since SCMD is a lossless method . The sampling results show that the use of SCMD almost does not affect the quality of sampling results . For highly symmetric networks , we find that SCMD used in both exact and sampling algorithms can help get a remarkable speedup . Furthermore , SCMD enables us to find larger motifs in biological networks with notable symmetry than previously possible . Index Terms —Network motif , biological network , symmetry , compression , subgraph enumeration , graph isomorphism , decompression Ç 1 I NTRODUCTION R ESEARCH in systems biology has generated a large number of interaction data for proteins and genes . A biological network is generally used as a formal model to encode these molecular interactions [ 16 ] . Study of network motifs [ 23 ] in biological networks may reveal answers to many important problems , such as understanding the modularity [ 3 ] , classification [ 22 ] , evolutionary design principles of biological networks [ 16 ] . Developing an effective algorithm for discovering motifs is an essential step for further studies [ 33 ] . The problem we study is the following : Definition 1 ( Network Motif Discovery Problem ) . Given a graph G and an integer k ( (cid:2) 2 ) , the task is to find all k - subgraphs ( vertex counts , in general ) of interconnections occurring in G at numbers that are significantly higher than those in an ensemble of randomized graphs . Such subgraphs are called network motifs . A network motif discovery algorithm typically consists of three steps . 1 . Enumerating all k - subgraphs of an input graph . 2 . Categorizing every k - subgraph into isomorphism classes . 3 . Determining the statistical significance of isomorph - ism classes by comparing their frequencies to those of an ensemble of randomized networks ( under a specified random graph model ) . Up to now , much work has already been done on the first step . The most popular strategy on this step is termed as pattern growth tree [ 33 ] . A systematic way of constructing the pattern growth tree is to generate a large set of variants from a base subgraph ( a vertex or an edge ) , and extend it one step at a time by adding one connected vertex or edge in sequence , and then use the extended subgraph to generate further variants [ 33 ] . Milo et al . have proposed an exhaustive recursively search ( ERS ) method [ 23 ] which uses the pattern growth tree ( with edge - extension ) to enumerate all candi - date subgraphs . A faster exact search algorithm ( ESU ) [ 30 ] uses the pattern growth tree ( with vertex - extension ) to enumerate all candidate subgraphs in the input graph with all vertices uniquely labeling by integers . ESU restricts that only vertices with bigger label can be added during the vertex - extension , ensuring that every candidate subgraph is encountered exactly once . The latest exact algorithm , named as Kavosh [ 13 ] , uses the pattern growth tree ( with vertex - extension ) to enumerate all k - subgraphs and adopts the “revolving door ordering” algorithm [ 28 ] for traversing the pattern growth tree , ensuring that every candidate subgraph is encountered once . Solving the subgraph enumeration problem by enumer - ating all k - subgraphs is very time - consuming due to their potential significant frequencies even in a sparse graph . For 1776 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 . J . Wang is with the School of Information Engineering and Science , Central South University , Computer Building , Changsha , Hunan , P . R . China 410083 . E - mail : jxwang @ mail . csu . edu . cn . . Y . Huang is with the School of Information Engineering and Science , Central South University , Computer Building , Changsha , Hunan , P . R . China 410083 , and the Department of Information , Guangdong University of Business Studies , Guang Zhou , P . R . China , 510032 . E - mail : ynhuang @ mail . csu . edu . cn . . F . X . Wu is with the Department of Mechanical Engineering , University of Saskatchewan , 57 Campus Drive , Saskatoon , Saskatchewan S7N 5A9 , Canada . E - mail : faw341 @ mail . usask . ca . . Y . Pan is with the Department of Computer Science , Georgia State University , Room 1442 , 34 Peachtree Street , Atlanta , GA 30302 - 3994 . E - mail : pan @ cs . gsu . edu . Manuscript received 18 Apr . 2012 ; revised 4 Aug . 2012 ; accepted 7 Aug . 2012 ; published online 28 Aug . 2012 . For information on obtaining reprints of this article , please send e - mail to : tcbb @ computer . org , and reference IEEECS Log Number TCBB - 2012 - 04 - 0097 . Digital Object Identifier no . 10 . 1109 / TCBB . 2012 . 119 . 1545 - 5963 / 12 / $ 31 . 00 (cid:2) 2012 IEEE Published by the IEEE CS , CI , and EMB Societies & the ACM this reason , some sampling algorithms , such as ESA [ 15 ] and RAND - ESU [ 31 ] , have been proposed to estimate subgraph occurrences from a randomly sampled set of subgraphs . ESU and RAND - ESU have been implemented in FANMOD [ 32 ] . ERS and ESA have been implemented in mFinder [ 14 ] . As to the second step , the graph isomorphism problem , checking if two graphs are isomorphic , is one of few standard problems belonging to “NP” which are neither known to be “NP - Complete” nor known to be solvable in polynomial time [ 12 ] . In practice , the canonical label of every k - subgraph is calculated for categorizing every k - subgraph into isomorphism classes [ 21 ] . The most efficient canonical labeling algorithm [ 20 ] in McKay’s Nauty tool [ 21 ] is used for classifying subgraphs in FANMOD and Kavosh . mFinder uses a much less efficient canonical labeling routine than the Nauty algorithm [ 31 ] . In the third step , the statistical significance of every isomorphism classes is evaluated by repeating the first two steps on an ensemble of randomized versions of the input graph . For discovering motifs , the popular randomized graph models are preserving the same degree distribution of biological networks ( Deg ) , preserving the same distribu - tion of triads ( three - subgraphs ) of the original graph ( Tira ) or preserving the same clustering coefficient of all vertices ( Clus ) [ 14 ] . When we have known in advance which subgraphs we are looking for , we can use a motif - centric method to detect whether they are network motifs or not . The first motif - centric method is proposed by Grochow and Kellis in [ 9 ] ( denoted as Grochow - Kellis ) . Using Grochow - Kellis , all network motifs can be found by generating all possible connected k - graphs and then separately computing the individual frequency of each k - graph in the given graph . For a given query k - graph , Grochow - Kellis uses the symmetry breaking technique to ensure that each occur - rence of the query k - graph is mapped exactly once . However , the subgraph querying ( subgraph isomorphism ) problem is known to be NP - Complete [ 12 ] . The total number of candidate query graphs increases exponentially with k , especially for directed graph . Some heuristic strategies , such as the frequency thresh - old [ 25 ] , maximization [ 24 ] , uniqueness [ 7 ] , etc . , are introduced for some variants of network motif discovery problems . Some papers focus on the complexity analysis of counting some special types of network motifs up to size four [ 2 ] , [ 19 ] . The symmetry in biological systems , especially for biological networks , has attracted much attention recently [ 10 ] . The existence of symmetric subgraphs is a common feature of many biological and technological networks [ 18 ] . Based on a detailed analysis of the symmetry in many biological networks , we find that basic symmetric sub - graphs ( BSSs ) are the predominant symmetry structure of all networks and most large BSSs are neighbors of hubs ( highly connected vertices ) . The running time of discover - ing network motifs scales at least as the network size ( the total number of vertices , in general ) . Hubs generate many subgraphs combinatorially [ 11 ] . The running time , there - fore , is made even longer by the presence of hubs . All symmetric subgraphs cause a certain structural redun - dancy [ 18 ] . Sun et al . have used an encoding technique for compressing possible orbits of sparse graphs [ 29 ] . The heuristic compression method is a greedy algorithm to successively compress pairs of nodes with approximate symmetry for finding a suitable compressed representation of large - scale sparse networks . A specific data structure was used to store all compression information units in every compression step for reconstructing the sparse graph . The compression information units are hard to use in the extraction of compressed subgraphs and the decompression , since all information units are stored only for reconstructing the sparse graph . Therefore , the com - pression method is not practical to improve the detection of network motifs . Motivated by the fact that the structural redundancy leads to computational redundancy for discovering net - work motifs , we present for the first time , to the best of our knowledge , a lossless symmetry compression method to significantly reduce the computational cost . To achieve lossless and efficient compression , we make use of Geometric Decomposition ( GD ) [ 18 ] of the automorphism group of an input graph to determine all BSSs . On the basis of properties of BSSs , we find a way to decompress all k - subgraphs from compressed subgraphs which are ex - tracted from the compressed graph . The Symmetry Com - pression method for Motif Detection , named as SCMD , consists five steps : decomposition , compression , extraction , decompression , and classification . Compression and de - compression are our main works in SCMD . In fact , almost all existing subgraph extraction methods can be used in extraction . In this paper , experimental results obtained by the improved version of five typical subgraph extraction algorithms with SCMD to discover network motifs in biological networks are illustrated . For notable symmetry instances , SCMD can achieve remarkable speedup while it keeps the same performance on the quality . Furthermore , SCMD enables the analysis of larger networks and more complex network motifs in biological network with highly symmetry . Notice that network motifs are not necessarily induced . In most algorithms , such as ESU , RAND - ESU , and Kavosh , network motifs are consider to be induced subgraphs . ERS and ESA use network motifs to refer to either induced subgraphs or noninduced subgraphs , and report results on both . In this paper , we use SCMD to improve these algorithms without changing whether network motifs are considering induced or noninduced subgraphs . 2 S YMMETRY C OMPRESSION M ETHOD FOR N ETWORK M OTIF D ETECTION 2 . 1 Preliminaries A graph G ¼ ð V ; E Þ is a set of vertices V ¼ f v 1 ; v 2 ; . . . ; v n g together with a set of edges E ¼ fð v i ; v j Þg which are the connected pairs . Let m be the number of edges in E . The maximum degree of a graph , denoted by (cid:2) , is the maximal number of edges per vertex in the graph . The underlying graph is the largest connected component of G , regardless of all self - loops , multiedges and directions [ 5 ] . A connected WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1777 subgraph that is induced by a vertex set of cardinality k is called k - subgraph . Any subgraph induced by a clique is a complete subgraph . Any subgraph induced by an edgeless graph is an empty subgraph . For a given integer k , the set of all k - subgraphs in G can be partitioned into sets of the k - subgraph class where two k - subgraphs belong to the same isomorphism class if and only if they are isomorphic . For a given graph G , let T i be the k - subgraph class of type i . The concentration of T i , denoted as Co i , is the ratio of the number of appearances of T i to the total number of k - subgraphs in G . After extraction of subgraphs , assuming that x different subgraph classes are found , we calculate the concentrations of T i by Co i ¼ j T i j P xj ¼ 1 j T j j : ð 1 Þ In graph theory , an automorphism of a graph is a form of symmetry in which the graph is mapped onto itself while preserving the edge - vertex connectivity [ 17 ] . The set of all automorphisms of a graph forms a group , called the automorphism group [ 17 ] . We denoted the automorphism group of G as Aut ð G Þ of size aut . The orbit of a vertex v in V is the set of vertices of V to which v can be moved by automorphisms of Aut ð G Þ [ 6 ] . All vertices in the same orbit are equivalent [ 17 ] . Orbits of the automorphism group of G naturally partition vertices in V into disjoint equivalence classes . For example , for a given graph G with the vertex set V ¼ f 1 ; 2 ; 3 ; 4 g and the edge set E ¼ fð 1 ; 2 Þ ; ð 3 ; 4 Þg , the automorphism group of G is fð 1234 Þ ; ð 2134 Þ ; ð 1243 Þ ; ð 2143 Þg , the orbits of 1 and 2 are f 1 ; 2 g and the orbits of 3 and 4 are f 3 ; 4 g . Symmetry of G means invariance of adjacency of vertices under the permutations on V [ 6 ] . Symmetric graphs necessarily contain a certain degree of structural redun - dancy . Aut ð G Þ is used to precisely quantify structural redundancy of G caused by its symmetry . Let (cid:2) be the number of orbits of the automorphism group of G . In particular , the symmetry of G is evaluated by the ratio [ 18 ] : r ¼ (cid:2) (cid:3) 1 n (cid:2) (cid:3) : ð 2 Þ In order to simplify the presentation , we consider symmetries in underlying graphs . Fig . 1a shows an example of the underlying network with colorful vertices for 14 distinct orbits . For the graph shown in Fig . 1a , aut ¼ 2 : 14 (cid:4) 10 475 and r ¼ 0 : 048 , i . e . , the graph is constructed from more than ð 1 (cid:3) r Þ (cid:5) 95 % structural repetition . 2 . 2 Graph Decomposition For an input graph G , all potentially symmetric subgraphs can be found by a natural direct decomposition of the automorphism group of the underlying graph of G into irreducible factors by the following procedure [ 18 ] : Aut ð G Þ ¼ H 1 (cid:4) H 2 (cid:4) (cid:6) (cid:6) (cid:6) (cid:4) H d for some d 2 IN þ : ð 3 Þ Here , H i is the i th factor . This decomposition is named as Geometric Decomposition and the decomposed factor is named as geometric factor by MacArthur and Sa´nchez - Garcı´a [ 18 ] . In practice , a geo - metric factor is a symmetric group or a wreath products of symmetric groups in Geometric Decomposition [ 18 ] . Every geometric factor is associated with a symmetric subgraph . A symmetric subgraph is the induced subgraph on the support of a geometric factor . In algebra and geometry , a group acts transitively if it possesses only a single orbit [ 6 ] . A transitive symmetric subgraph ( TSS ) is a symmetric subgraph where its corresponding geometric factor acts transitively on the vertices of the subgraph . Definition 2 . A basic symmetric subgraph is a TSS on x vertices whose corresponding geometric factor is isomorphic to a symmetric group S x . Definition 3 . All symmetric subgraphs that are not BSSs are called complex symmetric subgraphs , or CSSs . Fact 1 . For a given graph G , BSSs and CSSs can be distinguished by the following properties . 1 . All vertices in a BSS are belonging to an orbit . 1778 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 Fig . 1 . An example of symmetry compression . ( a ) Shows the visualization of the underlying graph of the protein interactions network from the organism Human Immunodeficiency Virus 1 ( HIV - I ) ( obtained from BioGRID 3 . 1 . 79 ) with colorful distinct orbits . ( b ) shows the graph compressed from ( a ) . ( c ) shows the compression information ( W , Sy ) of ( b ) . ( Note : The equivalence vertex set L is not shown due to the limitation of the table . ) 2 . All vertices in a CSS can be partitioned into more than one orbit . Fact 1 follows directly and immediately from the Definitions 2 and 3 . Theorem 1 . Let B ¼ f B 1 ; B 2 ; . . . ; B b g be the set of all BSSs in G , here b (cid:7) d . Then the following properties hold . 1 . For any given B i , all v in V ð B i Þ are structurally equivalent . 2 . For any given B i , B i is a clique or edgeless . 3 . For any given pair of B i and B j , if i 6¼ j , then V ð B i Þ \ V ð B j Þ ¼ ; and E ð B i Þ \ E ð B j Þ ¼ ; . 4 . For any given B i and any given vertex v 2 V (cid:3) V ð B Þ , all vertices in B i are adjacent to v or none are . The proof of these properties is sketched in [ 18 ] . In practice , BSSs are due to the presence of symmetric cliques ( complete subgraphs invariant under Aut ð G Þ ) and sym - metric bicliques ( complete bipartite subgraphs invariant under Aut ð G Þ ) [ 18 ] . Naturally , BSSs can be classed into clique - BSS and anticlique - BSS . Fact 2 follows directly from the above descriptions . Fact 2 . For a given graph G , clique - BSSs and anticlique - BSSs can be distinguished by the following properties . [ 18 ] . 1 . Clique - BSSs are complete subgraphs . 2 . Anticlique - BSSs are empty subgraphs . Taking the protein interaction network ( PIN ) of HIV - I in BioGRID 3 . 1 . 79 for example ( see Fig . 1a ) , we have Aut ð G Þ ¼ C 22 (cid:4) S 4 (cid:4) S 5 (cid:4) S 13 (cid:4) S 237 . We observe that all symmetric subgraphs of the HIV - I PIN are anticlique - BSSs . In SCMD , only BSSs are compressed , since the original network can be reconstructed easily from BSSs according to properties in Theorem 1 . Theorem 1 is the theoretical foundation for proving that the method of compression and decompression in SCMD is lossless . 2 . 3 Compression of Basic Symmetry Subgraphs To describe simply , for a given graph G , let G C ¼ ð V C ; E C Þ be the compressed graph of G and let node u i be the i th element in V C . According to Fact 1 , all BSSs are uniquely determined from G . Then we compress symmetric vertices and edges of identical BSSs and uniquely label all nodes by the integer 1 ; . . . ; j V C j . For a given node u i , let L ð u i Þ be the list of labels of equivalent vertices of node u i and W ð u i Þ ¼ j L ð u i Þj . According to Fact 2 , we denote the anticlique - BSS symbol of node u i by Sy ð u i Þ . Sy ð u i Þ equals 0 if u i is compressed from an anticlique - BSS and 1 otherwise . In order to decompress nodes , the compression information ð W ; Sy ; L Þ of nodes is stored . As shown in Fig . 1b , an example of the compressed graph is obtained by compressing the HIV - I PIN shown in Fig . 1a . In the example , an anticlique - BSS is induced by vertices { DDX6 , THY1 , CD59 , CD63 } which is compressed by a node labeled by 12 . The compression information of node 12 includes W ð 12 Þ ¼ 4 , Sy ð 12 Þ ¼ 0 , and L ð 12 Þ ¼ f DDX6 ; THY1 ; CD59 ; CD63 } . The original HIV - I PIN has 271 vertices and 275 edges , while the relevant compressed graph has 14 nodes and 14 edges . It is notable that the maximum degree of the original HIV - I PIN is 242 and that of the compressed graph is only 4 . 2 . 4 Extraction of Compressed Subgraphs For a given compressed graph G C with the compression information ð W ; Sy ; L Þ . Two kinds of compressed sub - graphs (cid:3) and (cid:4) - CS are extracted . Definition 4 . (cid:3) is a node , such that (cid:3) 2 V C , W ð (cid:3) Þ (cid:2) k and Sy ð (cid:3) Þ ¼ 1 . Definition 5 . (cid:4) - CS is a connected compressed subgraph induced by a set of (cid:4) nodes in G C , such that 8 u i 2 V C(cid:4) (cid:3) CS , P (cid:4)i ¼ 1 W ð u i Þ (cid:2) k , here 1 (cid:7) (cid:4) (cid:7) k . Clearly , (cid:3) is the special case of (cid:4) - CS when (cid:4) ¼ 1 and Sy ð (cid:3) Þ ¼ 1 . In SCMD , we can apply two types of algorithms : enumeration and sampling for extracting (cid:3) s and (cid:4) - CSs from a given compressed graph . 2 . 4 . 1 Enumeration of Compressed Subgraphs We note that subgraph enumeration algorithms such as ERS , ESU , and Kavosh , for network motif discovery in an input graph , are based on iteration or recursion . Since these methods form a basis , it is evident that the method converges in k - iterations or recursions . We now class them into two types of algorithms . The first type defines the parent - child relation on all subgraphs to be enumerated such that the difference between a child and its parent is exactly one edge , such as ERS . The second type defines children such that the child of a subgraph is obtained by adding a vertex , such as ESU and Kavosh . Lemma 1 . With a call to a subgraph enumeration algorithm based on iteration or recursion for enumerating k - subgraphs , all (cid:4) - subgraphs are visited , here 2 (cid:7) (cid:4) (cid:7) k . Proof . Let i be the layer of the iteration or recursion . For the first type of subgraph enumeration scheme , the way of finding a child in an iterative or recursive search is through an edge addition . The root object is each edge . The idea of generating children is to generate , from a graph G C , every subgraph of size i þ 2 obtained by adding an edge as a candidate of a child , then check if they are (cid:4) - subgraphs to be enumerated . Hence , an ordered set of k (cid:3) 2 edges is iteratively picked to visit all subgraphs whose size is not more than k that contained a specific edge , here 2 (cid:7) (cid:4) (cid:7) k . For the second type of subgraph enumeration scheme , the way of finding a child in an iterative or recursive search is through a vertex addition . The root object is every node . The idea of generating children is to generate , from a graph G C , every subgraph of size i þ 1 obtained by adding a vertex as a candidate of a child , then check if they are (cid:4) - subgraphs to be enumerated . Hence , an ordered set of k (cid:3) 1 nodes is iteratively picked to visit all subgraphs whose size is not more than k that contained a specific node , here 1 (cid:7) (cid:4) (cid:7) k . To conclude , after k (cid:3) 1 ( k ) layers of iteration or recursion , all (cid:4) - subgraphs can be enumerated that contained a specific edge ( node ) . tu According to Lemma 1 , with a call to ERS , ESU , or Kavosh for enumerating all k - subgraphs from the com - pressed graph G C , all (cid:4) - CSs are extracted . In fact , with a call to ESU or Kavosh , all (cid:3) s and all (cid:4) - CSs of G C are WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1779 extracted . Additionally , we need to search all nodes of symbol Sy marked 1 for finding all (cid:3) s when we call ERS for enumerating compressed subgraphs . In real biological networks , (cid:3) s are very rare and small . Thus , this step is often omitted . For the compressed graph shown in Fig . 1b , sets of nodes and weights of all found (cid:3) s and (cid:4) - CSs are listed in rows V C ð CS Þ and W ð V CCS Þ in Table 1 , when k ¼ 3 . We see that the total 27 compressed subgraphs are anticlique - BSSs . It is not surprising that Fig . 1a is easy to be compressed since the graph is highly symmetric and vertices have lots of overlaps in their neighbors . 2 . 4 . 2 Sampling of Compressed Subgraphs It is well known that ESA is an edge sampling algorithm which originates from ERS [ 15 ] . To sample a (cid:4) - CS using ESA , an ordered set of (cid:4) (cid:3) 2 edges is iteratively randomly picked . The sampling probability of each compressed subgraph is not the same . In order to correct this , we calculate the probability , P , of sampling a specific (cid:4) - CS . After each sample , we add a weighted score of 1 = P to the score of the relevant subgraph class . All decompressed k - subgraphs from the specific (cid:4) - CS share the score equally . In order to compute the probability , P , of sampling a (cid:4) - CS , we need to check all possible ordered sets of (cid:4) (cid:3) 1 edges . We set the probability weighted score of the relevant edge as the larger weight of two connected nodes . The probability of sampling (cid:4) - CS is the sum of the probability weighted score of all such possible ordered set of (cid:4) (cid:3) 1 edges . After the step of classification , we calculate the concentration of all subgraph classes according to their weighted scores . Let pr ð e j Þ be the probability weighted score of sampling edge e j , here 1 (cid:7) j (cid:7) m . For the compressed graph shown in Fig . 1b , the probability to specific sample nodes { 1 , 2 , 4 } is P ¼ pr ð pick ð 1 ; 2 Þ ; then ð 2 ; 4 ÞÞ þ pr ð pick ð 2 ; 4 Þ ; then ð 1 ; 2 ÞÞ ¼ 2 = m (cid:8) 2 = ð 2 þ 2 Þ þ 2 = m (cid:8) 2 = ð 237 þ 1 þ 1 þ 2 Þ ¼ 1 = m (cid:8) 245 = 241 : Two three - subgraphs can be decompressed from { 1 , 2 , 4 } , then the probability of each three - subgraph is 1 = 2 m (cid:8) 245 = 241 . The probability to sample nodes { 7 , 14 } is P ¼ pr ðð 7 ; 14 ÞÞ = m ¼ 5 = m . Ten three - subgraphs can be decompressed from { 7 , 14 } , then the probability of each three - subgraph is 5 = 10 m . The two specific (cid:4) - CS con - sidered in this example , three - subgraphs decompressed from nodes { 1 , 2 , 4 } and nodes { 7 , 14 } , have different sampling probabilities . Therefore , different samples are assigned different weights in order to ensure unbiased estimation of subgraph concentrations . The ESU algorithm completely traverses its correspond - ing ESU - tree [ 31 ] to enumerate all k - subgraphs . The sampling version of ESU ( RAND - ESU ) , explores only parts of the ESU - tree such that every leaf is reached with equal probability . For this purpose , a probability 0 < p i (cid:7) 1 is given for the depth 1 (cid:7) i (cid:7) k in the ESU - tree . RAND - ESU visits every k - subgraph with probability P ¼ Q ki ¼ 1 p i . It is clear that we cannot guarantee that (cid:4) - CSs are sampled uniformly by using RAND - ESU in compressed graphs , since the probability of sampling a specific (cid:4) - CS is (cid:5) ¼ Q (cid:4)i ¼ 1 p i , here 1 (cid:7) (cid:4) (cid:7) k . Therefore , we use a compressed weighted score of $ ¼ P = (cid:5) as the probability of decom - pressing the relevant k - subgraphs in order to correct the sampling bias . 2 . 5 Decompression of Compressed Subgraphs and Classification In this section , we represent how k - subgraphs of G are decompressed from a given (cid:3) s or (cid:4) - CSs of G C . The procedure of decompression uses the composition opera - tion of an integer . For extraction of k - subgraphs , all possible k compositions of the integer k must be considered . In number theory , a composition of an integer k is a way of writing k as the sum of a sequence of positive integers denoted by ð k 1 ; k 2 ; . . . ; k (cid:4) Þ , here k 1 þ k 2 þ (cid:6) (cid:6) (cid:6) þ k (cid:4) ¼ k . Two sequences that differ in the order of their terms define different compositions of their summation . As an example , we find three - subgraphs in networks . All compositions of 3 need to be considered and they are ð 1 ; 1 ; 1 Þ , ð 1 ; 2 Þ , ð 2 ; 1 Þ , and ð 3 Þ . For any (cid:3) , we use the composition ð k Þ and select any k vertices from L ð (cid:3) Þ to be vertices of k - subgraphs . For example , three - subgraphs defined by the composition ð 3 Þ would include three valid vertices of L ð (cid:3) Þ and have the total number of ð W ð (cid:3) Þ 3 Þ . 1780 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 TABLE 1 Outputs on Extraction and Decompression of Compressed Subgraphs in Fig . 1b For any (cid:4) - CS , V C ð (cid:4) - CS Þ ¼ f u 1 ; . . . ; u (cid:4) g , we make use of any sequences of composition of k for selecting any k i vertices from L ð u i Þ to act vertices of the k - subgraphs , where 1 (cid:7) i (cid:7) (cid:4) . For any node u i , ð W ð u i Þ k i Þ different selections of vertices need to be considered . All combina - tions containing k i vertices from L ð u i Þ are selected by using the “revolving door ordering” algorithm [ 28 ] . The “revolving door ordering” algorithm is a special type of minimal change ordering in which two consecutive objects have a distance of two ( that is , they differ in exactly two positions ) and it is a constant amortized time ( CAT ) algorithm [ 1 ] . In practice , the “revolving door ordering” algorithm is considered the fastest algorithm for generating combinations of vertices . Clearly , the k selected vertices can induce a k - subgraph in G , since all edges can easily be retrieved according to Theorem 1 . For example in Fig . 1b , all compositions sequences ð k 1 ; k 2 ; . . . ; k (cid:4) Þ and the number of decompressed three - subgraph shown in # subgraph ( see Table 1 ) . Take nodes f 1 ; 4 ; 3 g for example , three - subgraphs defined by the composition sequence ð 1 ; 1 ; 1 Þ would include one valid vertex at each L ð u i Þ on f 1 ; 4 ; 3 g . Therefore , the number of outputs of the decompression procedure are ð 21 Þ ð 11 Þ ð 2371 Þ ¼ 474 . In total , we obtain 29 , 384 three - subgraphs decom - pressed from 27 compressed subgraphs . The pseudocode for decompressing (cid:4) - CSs is shown in Algorithm 1 . The Init - Comb and Next - Comb functions make use of the “revolving door ordering” algorithm to generate vertex combination selections at L ð u i Þ , here u i 2 V C . For sampling strategies , the probability of decompressing each k - subgraph is the compressed weighted score $ of the sample compressed . We use Init - Comb ( VL , k i , $ ) and Next - Comb ( VL , k i , $ ) to generate combinations of vertices in the probability of $ . In the pseudocode , we identify statements used solely for sampling strategies by enclosing them in square brackets . Algorithm 1 . Decompression Input : G C ¼ ð V C ; E C Þ with ð W ; Sy ; L Þ , (cid:4) - CS : the compressed subgraph of size (cid:4) , Z : selection ð Z ¼ f Z 0 ; Z 1 ; . . . ; Z k (cid:3) 1 g is an array of the set of all Z i ) , R : the number of remaining vertices to be selected , i : current order of node , [ $ : the compressed weighted score ] ; Output : all [ sample ] k - subgraphs of G decompressed from (cid:4) - CS ; Let V C ð (cid:4) - CS Þ ¼ f u 1 ; u 2 ; . . . ; u (cid:4) g be the node set of (cid:4) - CS ; L ð u i Þ is the equivalent vertex set of node u i . if R ¼ 0 then return else VL L ð u i Þ l i ¼ Min ð W ð u i Þ ; R Þ for k i ¼ 1 ! l i do C Init - Comb ( VL , k i ) [ C Init - Comb ( VL , k i , $ ) ] repeat Z i C Decompression ( G C , (cid:4) - CS , Z , R (cid:3) k i , i þ 1 ) Next - Comb ( VL , k i ) [ Next - Comb ( VL , k i , $ ) ] until C ¼ NULL end for end if Lemma 2 . Given a (cid:4) - CS , Decompression can decompress all k - subgraphs and each k - subgraph is extracted only once . Proof . Under the fact that the “revolving door ordering” algorithm can generate all possible compositions of a given positive integer [ 28 ] . In Decompression , all combi - nations containing k i vertices from L ð u i Þ are selected to act vertices of k - subgraphs using the “revolving door order - ing” algorithm . Therefore , the lemma is true . tu Theorem 2 . Given a network G and an integer k (cid:2) 2 , SCMD can enumerate all k - subgraphs in G when the essential condition that all (cid:3) s and (cid:4) - CSs of the compressed network G C are enumerated can be satisfied . Proof . Let Q ¼ f Q 1 ; . . . ; Q ! g be the set of all k - subgraphs in the graph G and R ¼ f R 1 ; . . . ; R (cid:6) g be the set of all k - subgraphs exported from above procedures . We use the standard method to prove that R and Q are equal , i . e . , the proof of R (cid:9) Q and Q (cid:9) R , when the essential condition is satisfied . It is clear that R (cid:9) Q since no additional nodes and edges are added into G C throughout above procedures . Assume that Q (cid:9) R is false , that is 9 Q i 2 Q , Q i 62 R . There are three cases for Q i . Let V ð Q i Þ ¼ f v 1 ; v 2 ; . . . ; v k g be the set of vertices in Q i . V ð B G Þ is the set of all vertices of BSSs in G . Case 1 . For a given k - subgraph Q i , such that v j 62 V ð B G Þ , where 1 (cid:7) j (cid:7) k . In this case , 8 j ; W ð v j Þ ¼ 1 , then P kj ¼ 1 W ð v j Þ ¼ k . However , all k - CSs with P ki ¼ j W ð v j Þ ¼ k are enumerated from G C according to the essential condition and all k - subgraphs are decom - pressed from any k - CS according to Lemma 2 . Thus the assumption is not true in Case 1 . Case 2 . For a given k - subgraph Q i , such that 8 v j 2 V ð B G Þ . According to Theorem 1 , Q i must be a complete symmetric subgraph in this case . Since there is a clique - BSS B l , such that 8 v j 2 V ð B l Þ . Let vc B be the corresponding node of the B l . Therefore , vc B is a (cid:3) , Sy ð vc B Þ ¼ 1 and W ð vc B Þ (cid:2) k . While all nodes (cid:3) are enumerated and all k - subgraphs are decompressed from any (cid:3) according to the essential condition and Lemma 2 . Thus the assumption is not true in Case 2 . Case 3 . V ð Q i Þ ¼ V S ð Q i Þ [ V C ð Q i Þ , here V S ð Q i Þ ¼ f vs 1 ; . . . ; vs x g , V C ð Q i Þ ¼ f vc 1 ; . . . ; vc y g , 8 vs j 62 V ð B G Þ and 8 vc l 2 V ð B G Þ , x þ y (cid:2) k , x (cid:2) 1 and y (cid:2) 1 . For any vertices vs j and vc l , such that W ð vs j Þ ¼ 1 and W ð vc l Þ (cid:2) 2 , then P xj ¼ 1 W ð vs j Þ þ P yl ¼ 1 W ð vc l Þ (cid:2) x þ 2 y . If the assump - tion is true , then P xj ¼ 1 W ð vs l Þ þ P yl ¼ 1 W ð vc l Þ < k . Accord - ing to the above two inequality , then k > x þ 2 y . Since x þ y (cid:7) k and k > x þ 2 y , then y < 0 . However , it conflict with y (cid:2) 1 . Thus the assumption is not true in Case 3 . Taking all these three cases into account , we have proved that 9 Q i , Q i 62 R is not true , that is Q (cid:9) R . In summary , we have proved R (cid:9) Q and Q (cid:9) R , that is R ¼ Q . tu Lemma 3 . Under a certain composition of an integer k , for a given (cid:4) - CS , all decompressed k - subgraphs through Decom - pression are isomorphic . Proof . Under a certain composition of an integer k , k i vertices are selected from L ð u i Þ to act vertices of k - subgraphs . According to properties of BSS in Theorem 1 , for a given WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1781 node u , all vertices in L ð u Þ are structurally equivalent . Therefore , the lemma is true . tu Under a certain composition of an integer k , for a given compressed subgraph , we need to calculate the canonical label of only one k - subgraph to categorize all k - subgraphs into the same isomorphism class , e . g . , nodes f 1 ; 4 ; 3 g ( see Fig . 1b ) . According to Lemma 3 , 474 subgraphs decom - pressed by the composition sequence ð 1 ; 1 ; 1 Þ are iso - morphic . Hence , only one of these subgraphs needs to be tested for isomorphism . According to the outputs shown in Table 1 , we need to only test isomorphism of 27 subgraphs for classifying 29 , 384 subgraphs . 3 E XPERIMENTAL S TUDIES We improve typical subgraph enumeration algorithms ( ERS , ESU , and Kavosh ) and subgraph sampling algo - rithms ( ESA and RAND - ESU ) by using SCMD and apply them to a set of test instances which consists of the instances of protein interactions networks of Saccharo - myces cerevisiae ( DIP . S . cere ) , Caenorhabditis elegans ( DIP . C . eleg ) , Escherichia coli ( DIP . E . coli ) , and Helicobacter pylori ( DIP . H . pylo ) from DIP ( 2010 . 10 . 10 updated ) [ 34 ] and Homo sapiens ( BG . H . sapi ) , Drosophila melanogaster ( BG . D . mela ) , Saccharomyces cerevisiae ( BG . S . cere ) , Cae - norhabditis elegans ( BG . C . eleg ) , Mus musculus ( BG . M . musc ) , Arabidopsis thaliana ( BG . A . thal ) , Schizosac - charomyces pombe ( BG . S . pomb ) , Human Immunodefi - ciency Virus ( BG . H . immu ) from BioGRID 3 . 1 . 79 [ 27 ] ( 2011 . 8 . 1 updated ) . ( see Table 2 ) All tests are performed on an Intel Xeon E5430 2 . 66 GHz 12 MB Cache 1 , 333 MHz with 8 GB main memory running under RHEL 5 : 2 ð(cid:4) 86 64 Þ operating system . For every net - work instance , we claim that its underlying graph includes more than 85 percent vertices and 90 percent edges . The underlying graphs are extracted by Cytoscape [ 26 ] . We use the most efficient graph isomorphism algorithms in Nauty for calculating the size of the various automorphism groups . The procedure of Geometric Decomposition provided by MacArthur et al . [ 18 ] was run in GAP [ 8 ] . In Table 2 , we summarize the statistics of the test instances and results of Geometric Decomposition . The data in Table 2 show that more than half ð 9 = 12 Þ of instances are constructed from 15 - 95 percent structural repetition and almost all symmetric subgraph are due to the presence of BSSs . All geometric factors are isomorphic to symmetric groups and more than half ð 7 = 12 Þ of network instances have a larger - scale symmetric group with 102 - 313 vertices . In all test instances , CSS and clique - BSS are quite trivial . It is notable that the symmetry of input networks is an inherent property . Therefore , the procedures of Section 2 . 2 and Section 2 . 3 need to operate only once for every instance in preprocessing . In practice , for every instance , the time spent on graph decomposition and compression is in seconds under our experiment conditions . The most time consumption of two instances are BG . C . eleg and BG . H . sapi which cost about dozens of seconds . Hence , the processing time of SCMD does not include the preprocessing time . In Sections 3 . 1 and 3 . 2 , we give results of extracting and classifying subgraphs in real test instances . In Section 3 . 3 , 1782 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 TABLE 2 Statistics of Protein Interaction Networks and Results of Geometric Decomposition Note : % BSS , the percentage of geometric factors corresponding to BSSs are given . The parentheses around a number mean in powers of ten . The parentheses under a number mean statistics in the corresponding compressed graph G c , including n c , the number of nodes , m c , the number of edges and 4 G c , the maximum degree in G C . we show the symmetry of random graphs and summarize results of SCMD running in random graphs . 3 . 1 Comparing Exact Methods Results : Time We compare the time requirements of SCMD to original subgraphs enumeration and classification algorithms . We measure the runtime of every pair of algorithms on test instances , ERS and ERS . SCMD for 3 (cid:7) k (cid:7) 5 , ESU , ESU . SCMD , Kavosh , and Kavosh . SCMD for 3 (cid:7) k (cid:7) 8 . The instance BG . H . immu shown in Fig . 1a has extra highly symmetric subgraphs . Although the scale of BG . H . immu ð 271 ; 275 Þ is small , the maximum degree is 242 ( see Table 2 ) . Thus , for BG . H . immu , the number of subgraphs and the runtime of every algorithm without SCMD increase dramatically for subgraphs with k (cid:2) 5 . The improvements of BG . H . immu in time versus different subgraph size are extra remarkable in all SCMD variants ( see Fig . 2d ) . For other instances , the improvements of runtime versus different subgraph size are shown in Figs . 2a , 2b , and 2c , respectively . We see for the notable symmetry instances , the improvements increase exponentially with the subgraph size , while slight improvements are also achieved for other instances . The higher degree of symmetry in the input graph , the better improvements all SCMD variants achieve . For Grochow - Kellis , key procedures of compression and decompression in SCMD may also be useful . When the input graph G is compressed into compressed graph G C by the procedure of compression in SCMD , the number of nodes in every potential compressed subgraph of G C is less than or equal to k . For ensuring every candidate com - pressed subgraph is mapping exactly once , the main difficulty is how to map any symmetrical vertex in the query k - graph H onto a node in G C which is compressed by a BSS of G . It is obviously that only the “symmetry - breaking” strategy is far from enough . We compare all SCMD variants in full enumeration mode with Grochow - Kellis ( see Fig . 3 ) . Since our test instances are undirected graphs , when applying Grochow - Kellis we experiment to only generate and count all undirected k - graphs ( for example , there are 112 different isomorphism classes of undirected connected six - graphs ) . WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1783 Fig . 2 . Improvements of runtime for different subgraph sizes on a semilog scale , as applied to our test instances . The improvement factor is exactly the ratio of the executing times of the original algorithms to the executing times of the SCMD versions of algorithms . ( Note : some values are lacking since the programs ran out of memory before finishing or ran beyond more than 30 days . ) 3 . 2 Comparing Results from Sampling Methods : Speed and Quality Note that , in order to get comparable results , sampling results of four instances ( DIP . S . cere , DIP . E . coli , BG . H . sapi , and BG . S . cere ) are not shown in Figs . 4 and 5 because some sampling tests on these instances can not finish within 100 hours under our experimental conditions and para - meter settings . Besides , the scale of the compressed BG . H . immu shown in Fig . 1b is too small to sample . Hence , we do not test BG . H . immu instance in sampling methods . For the rest of seven instances , we ran all sampling tests 10 times for mean speeds and mean qualities . As in the speed measurements , RAND - ESU and RAND - ESU . SCMD were run with “fine” setting of the sampling parameter ð 1 ; 1 ; . . . ; 10 Þ [ 31 ] in order to sample an expected percentage 10 of k - subgraphs in input networks . For simplicity , in this study ESA and ESA . SCMD were also sampling 10 percent of k - subgraphs in input networks . We measure the sampling speed of ESA and ESA . SCMD for 3 (cid:7) k (cid:7) 5 and of RAND - ESU and RAND - ESU . SCMD for 1784 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 Fig . 4 . Sampling speed for different subgraph sizes on a semilog scale using the sampling parameter setting the 10 percent of subgraphs in the input graph . Fig . 3 . Executing times ( in seconds ) for different subgraph sizes on a semilog scale , as applied to our test instances of DIP . 3 (cid:7) k (cid:7) 6 . The obtained results are shown in Fig . 4 . In all cases , we see the sampling speed of all SCMD variants are faster . These amount to several orders of magnitude for notable symmetry instances . The scales of improvement of the sampling speed appear consistently when the subgraph size increases . As in the quality measurements , all methods were sampling a percentage P of five - subgraphs in input networks . The sampling quality is formally defined as the percentage of subgraph classes T i for which the concentra - tion Co i is estimated with at most 20 percent relative error . In doing so , for a given number of subgraph samples , we consider only those subgraph classes for the quality measurement that we would expect to sample at least 10 times . The reason details in [ 31 ] . The results of sampling qualities are shown in Fig . 5 . 3 . 3 Comparing between Original Graphs and Random Graphs : Compression Ratio and Time The proper determination of subgraph significance needs comparison by an ensemble of appropriate randomized graphs . So enumerating and categorizing all k - subgraphs in an ensemble due to a given random graph model are necessary steps for discovering network motifs . For comparison of symmetries of real biological net - works and random graphs , we use three popular rando - mized graph models ( Deg , Tira , Clus ) and the typical scale free random graph model ( SF ) and the classical Erdo¨s - Re´nyi random graph model ( ER ) . We use mFinder to generate random graphs for the first three models and use Pajek [ 4 ] for the last two models . Self - loops and multiedges are not preserved in all random graphs . For each model , we have tested 100 random graphs for evaluating the mean compression ratio ( h r c i ¼ h n c i = h n i ) of every representative of biological networks . By comparing results of Geometric Decomposition in these random graphs , we find that the random ensembles of Deg , Tria , and Clus have more symmetries than ensembles of other two models ( SF and ER ) . Using the methods in Sections 2 . 2 and 2 . 3 , we compress all BSSs of every random graph for calculating the compression ratio ( see Table 3 ) . For each representative of test instances , we chose one of Tria randomized graphs with the most close to the mean compression ratio as an example and test ESU and ESU . SCMD in the example for evaluating the improvements of runtime ( see Fig . 6 ) . As shown in Fig . 6 , the symmetry compression technique also yields a significantly speedup in randomized graphs with highly symmetry . 3 . 4 Improvement due to Symmetry Compression Symmetry compression method ensures that all k - sub - graphs decompressed from identical compressed sub - graphs are isomorphic under a certain composition of an integer k . Thus , SCMD does not need to enumerate and check isomorphism on a list of k - subgraphs previously determined isomorphism by network symmetry in order to avoid duplicate calculating in the bottleneck subtasks of network motif detection . WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1785 TABLE 3 Results of Mean Compression Ratio Note : Orig , the compression ratio of real biological networks are given for comparison purposes . Fig . 5 . Sampling quality for five - subgraphs versus the percentage of sampled subgraphs ( semilog scale ) . The details as to the experimental setting are given in the text . ( Note : for 100 percent , the results are exact . ) Fig . 6 . Improvements of runtime for different subgraph sizes on ESU and ESU . SCMD ( semilog scale ) , as applied to representatives of Tria randomized graphs . The statistics of test instances are shown in Table 2 . The statistics of representatives of randomized graphs are shown in Table 5 . By comparing data of real biological networks and randomized graphs before compression and after compression , we observe that compression effects are in direct proportion to the degree of their symmetry . The improvement factor shown in Tables 4 and 5 is exactly the ratio of the number of subgraphs to the number of respective compressed subgraphs of the associated size . Tables 4 and 5 quantify contributions respectively in original networks and randomized graphs , explicitly show - ing that the improvement factors are increasing as the associated size increases . There are somewhat less symme - try in randomized graphs than in original networks . Therefore , the improvement factors of respective rando - mized graphs rose slowly than that of real biological networks as the associated size increases . The increases of improvement factors are especially striking when the instances are highly symmetric , such as BG . H . immu , both in the real biological network and the respective rando - mized graph . 4 D ISCUSSION 4 . 1 Complexity Analysis of SCMD In the worst case , the given graph G has no BSS to compress , so the worst complexity of SCMD is equal to that of exact algorithms of network motif discovery based on exhaustive enumeration . In general , real biological net - works have some degree of symmetry . We now discuss the runtime complexity of SCMD . Clearly , the complexity of Geometric Decomposition of the automorphism group of an input graph G scales with aut and the time complexity of compression process is O ð n Þ . The steps of graph decomposition and compression are preprocessing . Since the processing time of SCMD dose not include the preprocessing time , we focus on discussing the runtime complexity of the three steps of subgraph extraction , decompression , and classification in this section . 4 . 1 . 1 Complexity Analysis of Subgraph Extraction We analyze complexities of original algorithms first . In this study , two classes of algorithms are employed for extracting all compressed subgraphs : subgraph enumera - tion and subgraph sampling . In every class , there are two types of methods . The first is the parent - child relation by edge addition , such as ERS and ESA . The second is the parent - child relation by vertex addition , such as ESU , RAND - ESU and Kavosh . The worst complexity of ERS is O ð D k (cid:3) 2 ð k (cid:3) 1 Þ ! Þ for enumerating all k - subgraphs that contained a specific edge from an input graph G , where D is the highest degree of G . Thus the worst complexity of ERS is O ð mD k (cid:3) 2 ð k (cid:3) 1 Þ ! Þ for enumerating all k - subgraphs from G . ESA is the sampling version of ERS . The worst complexity per sample of ESA is O ð kD ð k (cid:3) 1 Þ ! ÞÞ , and the total runtime of ESA is S T (cid:8) O ð kD ð k (cid:3) 1 Þ ! ÞÞ , where S T is the number of sample . In the second type , the worst complexity of ESU is O ð nkD k (cid:3) 1 Þ for enumerating all k - subgraphs from a graph G of size n . RAND - ESU is the sampling version of ESU . The complexity of RAND - ESU is P (cid:8) O ð nkD k (cid:3) 1 Þ , where the probability of per sample P ¼ Q ki ¼ 1 p i . Note that by summing over all possible number of nodes we recover 2 k (cid:3) 1 as the total number of compositions of k : ð P k(cid:4) ¼ 1 ð k (cid:3) 1 (cid:4) (cid:3) 1 Þ ¼ 2 k (cid:3) 1 Þ . Thus , the worst complexity of Kavosh is O ð nD k (cid:3) 2 2 k (cid:3) 1 Þ . 1786 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 TABLE 4 Improvement Factor of the Umber of k - Subgraphs and the Number of Respective Compressed Subgraphs in Our Test Instances for 3 (cid:7) k (cid:7) 6 Note : “—” means that the experiment dose not finish within 30 days . TABLE 5 Statistics of Representatives of Randomized Graphs and Improvement Factors of Representatives of Randomized Graphs for 3 (cid:7) k (cid:7) 6 Note : the number of vertices and edges of representatives of randomized graphs are not shown , since each representative has the same number of vertices and edges of its original network . Since the total number of subgraphs scales as D k (cid:3) 1 , and D is typically satisfied (cid:2) (cid:7) D (cid:7) n , where (cid:2) is the mean degree of G . Therefore , D scales with n . The runtime complexities of exhaustive enumeration algorithms increase polynomially with the graph size as n k (cid:3) 1 . 4 . 1 . 2 Complexity Analysis of Decompression of Compressed Subgraphs In SCMD , once a (cid:3) or a (cid:4) - CS is extracted , we decompress it to k - subgraphs . We now estimate the complexity of decompressing compressed subgraphs . Assume that the input graph G has x BSSs and A is the mean number of vertices of BSSs of G . In G C , the number of nodes , n c ¼ n (cid:3) Ax þ x , satisfies that P v 2 n c W ð v Þ ¼ n . We get the compression ratio r c ¼ n c = n ¼ 1 (cid:3) ð A (cid:3) 1 Þ x = n . In compressed graphs , the number of vertices , U ¼ P u 2 (cid:4) (cid:3) CS W ð u Þ , in a connected (cid:4) - CS is typically satisfied k (cid:7) U (cid:7) Ck ( C is a small constant which is correlated with the mean weight of nodes in all (cid:4) - CSs ) . Thus if the (cid:4) - CS has (cid:4)C vertices , the number of k - combinations is O ðð (cid:4)C Þ k = (cid:4) (cid:3) 1 Þ and the complexity of decompressing any (cid:4) - CS to k - subgraphs is O ðð (cid:4)C Þ k = (cid:4) (cid:3) 1 Þ . The worst complexity of decompressing any subgraph to k - subgraphs is O ð C k (cid:3) 1 Þ . In practice , we find that n < < x and most of weight of nodes are equal to 1 . Therefore , for the simplicity of the analysis , we assume C ¼ 1 . Thus , the complexity of decompressing any sub - graph to k - subgraphs is ! ð 1 Þ . In total , we get the ratio of the runtime of the original k - subgraph extraction to its SCMD version , which is O ðð n = n c Þ k (cid:3) 1 Þ ¼ O ðð 1 = r c Þ k (cid:3) 1 Þ . 4 . 1 . 3 Complexity Analysis of Classification Graph isomorphism test is known to have time complexity at most O ð exp ð k 2 = 3 ÞÞ for graphs with k vertices . Thus the worst runtime of graph classification is O ð T exp ð k 2 = 3 ÞÞ , where T is the number of isomorphism tests of k - subgraphs . Thus the ratio of the runtime of the classification without SCMD to that with SCMD is O ð T = T 0 c Þ , where T 0 c is the number of isomorphism tests of compressed subgraphs . As a matter of fact , T 0 c ¼ ZT c , where T c is the total number of (cid:3) s and (cid:4) - CSs extracted from G C and Z is correlated with the distribution of BSSs in the graph . The more dispersed the distribution of BSS is , the smaller the value of Z is , otherwise the greater the value of Z is . Therefore , for the simplicity of the analysis we assume Z ¼ 1 . The total number of connected k - subgraphs in graphs , T , that contain a hub is dominated by the hub degree ( D ) and is approximately T ¼ D k (cid:3) 1 [ 11 ] . For graphs that contain a hub , the runtime ratio is O ð T = T c Þ ¼ O ð D = D c Þ k (cid:3) 1 Þ . Since D scales with n , the runtime ratio of classification increases with the subgraph size as ð 1 = r c Þ k (cid:3) 1 . The scales of the improvements of runtime of the exact algorithms shown in Fig . 2 qualitatively agrees with the above theoretical analysis . 4 . 2 Analyzing Speed and Quality of Sampling Methods with SCMD The process of analyzing the complexity of the sampling speeds is similar to the above analysis of runtime complex - ity of subgraph enumeration algorithms . The worst runtime of ESA is S T (cid:8) O ð kD ð k (cid:3) 1 Þ ! ÞÞ . In sparse graphs , the number of edges , m 0 , in a connected k - subgraph is typically k (cid:3) 1 (cid:7) m 0 (cid:7) Kk , where K is a small constant which is correlated with the mean degree of vertices in the graph . Thus the number of ð k (cid:3) 1 Þ - permutations of vertices is of the order of O ð K k (cid:3) 1 k k (cid:3) 1 Þ . For the simplicity of the analysis , we set K ¼ 1 . Thus , the total runtime of ESA is S T (cid:8) O ð Dk k ÞÞ and the speed of ESA is O ð Dk k ÞÞ . The complexity of RAND - ESU is P (cid:8) O ð nkD k (cid:3) 1 Þ . There - fore , for graphs that contain a hub , the speed of RAND - ESU is P (cid:8) O ð nk Þ . The runtime of all sampling algorithms are asymptotically independent of graph size . The ratio of the runtime of the original subgraph sampling to the runtime of the SCMD versions of subgraph sampling is O ð 1 = r c Þ k (cid:3) 1 . This ratio increases with the subgraph size in principle . The scales of speeds of sampling algorithms shown in Fig . 4 qualitatively agree with the above theoretical analysis of sampling algorithms . Most notably in Fig . 4 , the variant algorithms of SCMD are faster than original ones . The orders of magnitude of the improvements of sampling speed are related to r c . We now analyze how SCMD affects the quality of sampling methods for network motif discovery . We use two types of algorithms for sampling compressed subgraphs . The first is ESA , the parent - child relation by random edge addition . The second is RAND - ESU , the parent - child relation by sampling random vertex addition . In Section 2 . 4 . 2 , we detail the method of analytical corrections for sampling biases . Results shown in Fig . 5 indicate that the subgraph concentrations calculated by all subgraph sampling algorithms converged to the fully enumerated concentrations . The qualities of the sampling algorithms are closely related to the number of samples . The variant algorithms of SCMD draw smaller samples than the corresponding original sampling algorithms and gain roughly the same sampling qualities , close to 100 percent in most cases ( see Fig . 5 ) , when the percentage P is above 1 percent . We can divide specific subgraphs in the network into two types , according to their probability of being sampled by ESA . SCMD . The first type , which we refer to as “non - SC subgraph” , are all (cid:4) - CSs that either do not contain a compressed node of weight lager than 1 . The second type , which we refer to as “SC subgraph , ” are all other subgraphs in the network . The probability of sampling a SC subgraph is larger than that of sampling a non - SC subgraph because every SC subgraph can be decompressed to more than one k - subgraphs . In DIP . H . pylo instance , some subgraph classes whose concentration are very low mainly exist in SC subgraphs . Therefore , ESA . SCMD has a faster convergence than ESA when the percent of sampling subgraphs is above 0 . 5 percent in the DIP . H . pylo instance , which is illustrated in Fig . 5 . WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1787 The probability of sampling non - SC subgraphs is equal to that of being sampled by ESA . However , the probability of sampling SC subgraphs of size less than k is likely larger than that of being sampled by ESA and the probability of sampling SC subgraphs of size k is likely smaller than that of being sampled by ESA . Candidate vertices in SC subgraphs of size k is more than that of non - SC subgraphs of size k at least in one of the iterations , which leads to a small sampling probability . The reason of higher probabilities of sampling SC subgraphs of size less than k is the smaller number of iterations . We conclude that applying SCMD in sampling methods allows accurate counting of rare , high - symmetry sub - graphs , and motifs . 5 C ONCLUSION Our contribution is threefold . First , through a lot of network symmetry tests on real biological networks and randomized graphs , we have confirmed that a certain degree of symmetry is ubiquitous in biological networks and rando - mized graphs and we give a decomposition method for extracting all symmetric subgraphs of G . Second , we first recall Geometric Decomposition method recently developed by MacArthur et al . [ 18 ] for the subgraph searches . Third , we have proposed a novel symmetry compression method based on the information of all BSSs for network motif detection and proved that it is lossless . Based on a detailed analysis of previous approaches , we have improved five typical algorithms with SCMD and improved their efficiency for the network motif detection . For notable symmetry networks , SCMD enables to discover larger motifs than previously possible , hopefully facilitating future research fields in systems biology . Our results demonstrate that the geometry decomposition has practical applications to computational biology . In this paper , SCMD is applied to undirected graphs . It is also possible to apply SCMD to deal with directed graphs since directed BSSs have the same symmetric group of their undirected counterparts and the extended SCMD can still be efficient . Further work can also be done to improve the presented sampling technique by examining how SCMD affects the sampling quality . The symmetry compression method is used to solve the problems of subgraph enumeration and sampling of networks . However , its applications may be not limited to these problems , but can also be extended to other problems , such as the subgraph isomorphism problem . In further research , we will try to propose a feasible symmetry - based compression method for speed - up Grochow - Kellis . A CKNOWLEDGMENTS The authors are grateful to MacArthur and Sa´nchez - Garcı´a for providing the code of Geometry Decomposition and useful discussions . They thank the anonymous reviewers who provided helpful comments and constructive suggestions that helped to significantly improve the accuracy , read - ability , and value of this paper . This work is supported in part by the National Natural Science Foundation of China under Grant No . 61232001 and No . 61073036 . R EFERENCES [ 1 ] Z . Alamgir and S . Abbasi , “Combinatorial Algorithms For Listing Paths in Minimal Change Order , ” Proc . Fourth Conf . Combinatorial and Algorithmic Aspects of Networking , pp . 112 - 130 , 2007 . [ 2 ] N . Alon , P . Dao , I . Hajirasouliha , F . Hormozdiari , and S . Sahinalp , “Biomolecular Network Motif Counting and Discovery by Color Coding , ” Bioinformatics , vol . 24 , no . 13 , pp . i241 - i249 , 2008 . [ 3 ] U . Alon , “Network Motifs : Theory and Experimental Ap - proaches , ” Nature Rev . Genetics , vol . 8 , no . 6 , pp . 450 - 461 , 2007 . [ 4 ] V . Batagelj and A . Mrvar , “Pajek - Analysis and Visualization of Large Networks , ” Graph Drawing Software , pp . 77 - 103 , Springer series Mathematics and Visualization , 2004 . [ 5 ] B . Bolloba´s , Modern Graph Theory , vol . 184 . Springer Verlag , 1998 . [ 6 ] P . Cameron , Permutation Groups , vol . 45 . Cambridge Univ . Press , 1999 . [ 7 ] J . Chen , W . Hsu , M . Lee , and S . Ng , “Nemofinder : Dissecting Genome - Wide Protein - Protein Interactions with Meso - Scale Net - work Motifs , ” Proc . 12th ACM SIGKDD Int’l Conf . Knowledge Discovery and Data Mining , pp . 106 - 115 , 2006 . [ 8 ] GAP - Groups , Algorithms , and Programming , Version 4 . 4 . 12 , The GAP Group , http : / / www . gap - system . org , 2008 . [ 9 ] J . Grochow and M . Kellis , “Network Motif Discovery Using Subgraph Enumeration and Symmetry - Breaking , ” Research in Computational Molecular Biology , pp . 92 - 106 , Springer , 2007 . [ 10 ] M . He and S . Petoukhov , Mathematics of Bioinformatics : Theory , Methods and Applications , vol . 11 . Wiley - Interscience , 2011 . [ 11 ] S . Itzkovitz , R . Milo , N . Kashtan , G . Ziv , and U . Alon , “Subgraphs in Random Networks , ” Physical Rev . E , vol . 68 , no . 2 , p . 026127 , 2003 . [ 12 ] D . Johnson and M . Garey , Computers and Intractability : A Guide to the Theory of Np - Completeness . Freeman & Co , 1979 . [ 13 ] Z . Kashani , H . Ahrabian , E . Elahi , A . Nowzari - Dalini , E . Ansari , S . Asadi , S . Mohammadi , F . Schreiber , and A . Masoudi - Nejad , “Kavosh : A New Algorithm for Finding Network Motifs , ” BMC Bioinformatics , vol . 10 , no . 1 , article 318 , 2009 . [ 14 ] N . Kashtan , S . Itzkovitz , R . Milo , and U . Alon , “Mfinder Tool Guide , ” Department of Molecular Cell Biology and Computer Science and Applied Math . , Weizmann Inst . of Science , Rehovot Israel , technical report , 2002 . [ 15 ] N . Kashtan , S . Itzkovitz , R . Milo , and U . Alon , “Efficient Sampling Algorithm for Estimating Subgraph Concentrations and Detecting Network Motifs , ” Bioinformatics , vol . 20 , no . 11 , pp . 1746 - 1758 , 2004 . [ 16 ] T . Kim , J . Kim , P . Heslop - Harrison , and K . Cho , “Evolutionary Design Principles and Functional Characteristics Based on King - dom - Specific Network Motifs , ” Bioinformatics , vol . 27 , no . 2 , p . 245 , 2011 . [ 17 ] J . Lauri and R . Scapellato , Topics in Graph Automorphisms and Reconstruction . Cambridge Univ . Press , 2003 . [ 18 ] B . MacArthur , R . Sa´nchez - Garcı´a , and J . Anderson , “Symmetry in Complex Networks , ” Discrete Applied Math . , vol . 156 , no . 18 , pp . 3525 - 3531 , 2008 . [ 19 ] D . Marcus and Y . Shavitt , “Efficient Counting of Network Motifs , ” Proc . IEEE 30th Int’l Conf . Distributed Computing Systems Workshops , pp . 92 - 98 , 2010 . [ 20 ] B . McKay , “Practical Graph Isomorphism , ” Congressus Numer - antium , vol . 30 , pp . 45 - 87 , 1981 . [ 21 ] B . McKay , “Isomorph - Free Exhaustive Generation , ” J . Algorithms , vol . 26 , no . 2 , pp . 306 - 324 , 1998 . [ 22 ] R . Milo , S . Itzkovitz , N . Kashtan , R . Levitt , S . Shen - Orr , I . Ayzenshtat , M . Sheffer , and U . Alon , “Superfamilies of Evolved and Designed Networks , ” Science , vol . 303 , no . 5663 , p . 1538 , 2004 . [ 23 ] R . Milo , S . Shen - Orr , S . Itzkovitz , N . Kashtan , D . Chklovskii , and U . Alon , “Network Motifs : Simple Building Blocks of Complex Networks , ” Science , vol . 298 , no . 5594 , p . 824 , 2002 . [ 24 ] L . Parida , “Discovering Topological Motifs Using a Compact Notation , ” J . Computational Biology , vol . 14 , no . 3 , pp . 300 - 323 , 2007 . [ 25 ] F . Schreiber and H . Schwo¨bbermeyer , “Mavisto : A Tool for the Exploration of Network Motifs , ” Bioinformatics , vol . 21 , no . 17 , pp . 3572 - 3574 , 2005 . [ 26 ] P . Shannon , A . Markiel , O . Ozier , N . Baliga , J . Wang , D . Ramage , N . Amin , B . Schwikowski , and T . Ideker , “Cytoscape : A Software Environment for Integrated Models of Biomolecular Interaction Networks , ” Genome Research , vol . 13 , no . 11 , pp . 2498 - 2504 , 2003 . [ 27 ] C . Stark , B . Breitkreutz , T . Reguly , L . Boucher , A . Breitkreutz , and M . Tyers , “Biogrid : A General Repository for Interaction Datasets , ” Nucleic Acids Research , vol . 34 , no . suppl 1 , pp . D535 - D539 , 2006 . 1788 IEEE / ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS , VOL . 9 , NO . 6 , NOVEMBER / DECEMBER 2012 [ 28 ] D . Stinson , Combinatorial Algorithms : Generation , Enumeration , and Search . CRC Press , 1999 . [ 29 ] J . Sun , E . Bollt , and D . Ben - Avraham , “Graph Compression - Save Information by Exploiting Redundancy , ” J . Statistical Mechanics : Theory and Experiment , vol . 2008 , p . P06001 , 2008 . [ 30 ] S . Wernicke , “A Faster Algorithm for Detecting Network Motifs , ” Proc . Fifth Int’l Conf . Algorithms in Bioinformatics , pp . 165 - 177 , 2005 . [ 31 ] S . Wernicke , “Efficient Detection of Network Motifs , ” IEEE / ACM Trans . Computational Biology and Bioinformatics , vol . 3 , no . 4 , pp . 347 - 359 , Oct . - Dec . 2006 . [ 32 ] S . Wernicke and F . Rasche , “Fanmod : A Tool for Fast Network Motif Detection , ” Bioinformatics , vol . 22 , no . 9 , pp . 1152 - 1153 , 2006 . [ 33 ] E . Wong , B . Baur , S . Quader , and C . Huang , “Biological Network Motif Detection : Principles and Practice , ” Briefings in Bioinfor - matics , vol . 13 , no . 2 , pp . 202 - 215 , 2011 . [ 34 ] I . Xenarios , L . Salwinski , X . Duan , P . Higney , S . Kim , and D . Eisenberg , “Dip , the Database of Interacting Proteins : A Research Tool for Studying Cellular Networks of Protein Interactions , ” Nucleic Acids Research , vol . 30 , no . 1 , pp . 303 - 305 , 2002 . JianXin Wang received the PhD degree in computer science from Central South Univer - sity , China , in 2001 . Currently , he is a professor in the School of Information Science and Engineering , Central South University , China . His current research interests include algorithm analysis and optimization , computer network , and bioinformatics . He has published more than 100 papers in various international journals and refereed conferences . He is serving as the program committee chair or member of several international conferences . He is a senior member of the IEEE and the IEEE Computer Society . Yuannan Huang received the master’s degree in computer science from Central South Uni - versity , China , in 2005 . Currently , she is working toward the PhD degree in the School of Information Science and Engineering , Central South University , China . Her current research interests include molecular systems biology , biological system identification , and data mining . Fang - Xiang Wu received the PhD degree in control theory and its applications from North - western Polytechnical University , Xi’an , China , and the PhD degree in biomedical engineering from the University of Saskatchewan , Saska - toon , Canada , in 1998 and 2004 , respectively . Currently , he is an associate professor of bioengineering in the Department of Mechanical Engineering and the graduate chair of the Division of Biomedical Engineering at the Uni - versity of Saskatchewan . His current research interests include computational and systems biology , genomic , and proteomic data analysis . He has published more than 130 technical papers in refereed journals and conference proceedings . He is serving as an editorial board member for three international journals and as the program committee chair or member for several international conferences . He is a senior member of the IEEE . Yi Pan received the PhD degree in computer science from the University of Pittsburgh , Pennsylavania , in 1991 . He is the chair of and a professor in the Department of Computer Science at Georgia State University , and the Changjiang chair professor in the Department of Computer Science at Central South University , P . R . China . His research interests include parallel and distributed computing , networks , and bioinformatics . He has published more than 100 journal papers with 50 papers published in various IEEE / ACM journals . He has served as the editor - in - chief or an editorial board member for 15 journals , including six IEEE Transactions . He has delivered more than 10 keynote speeches at many international conferences and is a speaker for several distinguished speaker series . He is a senior member of the IEEE and the IEEE Computer Society . . For more information on this or any other computing topic , please visit our Digital Library at www . computer . org / publications / dlib . WANG ET AL . : SYMMETRY COMPRESSION METHOD FOR DISCOVERING NETWORK MOTIFS 1789