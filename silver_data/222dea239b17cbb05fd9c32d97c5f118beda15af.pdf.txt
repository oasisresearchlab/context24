The Maximum Edge Weight Clique Problem : Formulations and Solution Approaches Seyedmohammadhossein Hosseinian , Dalila B . M . M . Fontes , Sergiy Butenko , Marco Buongiorno Nardelli , Marco Fornari , and Stefano Curtarolo Abstract Given an edge - weighted graph , the maximum edge weight clique ( MEWC ) problem is to ﬁnd a clique that maximizes the sum of edge weights within the corresponding complete subgraph . This problem generalizes the classical maximum clique problem and ﬁnds many real - world applications in molecular biology , broadband network design , pattern recognition and robotics , information retrieval , marketing , and bioinformatics among other areas . The main goal of this chapter is to provide an up - to - date review of mathematical optimization formulations and solution approaches for the MEWC problem . Information on standard benchmark instances and state - of - the - art computational results is also included . S . Hosseinian • S . Butenko ( (cid:2) ) Texas A & M University , 2027 Emerging Technologies Building , Mail Stop 3131 , College Station , TX 77843 , USA e - mail : hosseinian @ tamu . edu ; butenko @ tamu . edu D . B . M . M . Fontes Faculdade de Economia da Universidade do Porto , and LIAAD / INESC TEC , Rua Dr . Roberto Frias , 4200 - 464 Porto , Portugal e - mail : fontes @ fep . up . pt M . B . Nardelli Physics , Chemistry and iARTA , Initiative for Advanced Research in Technology and the Arts , University of North Texas , Denton , TX 76203 , USA e - mail : mbn @ unt . edu M . Fornari Department of Physics , Central Michigan University , Mount Pleasant , MI 48859 , USA e - mail : forna1m @ cmich . edu S . CurtaroloMaterialsScience , Electrical Engineering , Physics and Chemistry , Duke University , 144 Hudson Hall , Durham , NC 27708 , USA e - mail : stefano @ duke . edu © Springer International Publishing AG 2017 S . Butenko et al . ( eds . ) , Optimization Methods and Applications , Springer Optimization and Its Applications 130 , https : / / doi . org / 10 . 1007 / 978 - 3 - 319 - 68640 - 0 _ 10 217 218 S . Hosseinian et al . 1 Introduction Network models are widely used to cast many different relationships and problems that are part of our everyday life . Networks can be used to represent relations between entities in various complex systems , including biological , social , political , economic , and technological applications . A common problem arising in network models is to ﬁnd a part of an original network that satisﬁes some required structural properties and optimizes a given performance measure . In this work , we deal with one of such problems—the maximum edge weight clique ( MEWC ) problem . The problem of interest generalizes the maximum clique problem ( MCP ) , which involves ﬁnding a complete subgraph of maximum cardinality in a given graph . The MCP is a classical combinatorial optimization problem that was among the ﬁrst problems shown to be NP - hard [ 31 ] . Over the years , many applications in numerous ﬁelds have been reported in the literature . For a recent comprehensive survey on the MCP , the reader is referred to [ 55 ] . Given a simple , undirected graph with vertex and / or edge weights , the following weighted versions of the MCP have been considered in the literature : • The maximum vertex weight clique ( MVWC ) problem , • The maximum edge weight clique ( MEWC ) problem , • And the maximum total weight clique ( MTWC ) problem . In all three versions , a clique that induces a subgraph with maximum total weight is searched for , the difference being that in the MVWC the weight of the clique is given by the sum of the weights of the vertices , in the MEWC it is given by the sum of the weights of the edges , and in the MTWC it is given by the sum of the weights of all the vertices and the edges of the corresponding complete subgraph . Two common variants of each problem are considered—with and without a restriction on the cardinality of the cliques sought . The cardinality - restricted maximum weight clique asks for a maximum weight clique of cardinality at most b and is typically considered in complete graphs . We will use the maximum allowed clique cardinality , b , in the parentheses to denote the cardinality - restricted version of each problem : MVWC . b / , MEWC . b / , and MTWC . b / , respectively . The abbreviations used in the itemized list above will be used for the versions without the cardinality restriction . All six versions of the maximum weight clique problem described above are NP - hard . The versions without cardinality restrictions can be stated as the Boolean quadratic problem ( BQP ) [ 43 ] , and the cardinality - restricted variants are special cases of the quadratic knapsack problem [ 29 , 47 ] . The focus of this paper is on the MEWC problem on simple , undirected , edge - weighted graphs ; however , whenever appropriate , we will be referring to the other maximum weight clique versions . Several particular cases of the MEWC problem are known under different names in the literature . For example , the heaviest k - subgraph problem , also known as The Maximum Edge Weight Clique Problem 219 k - cluster and maximum edge - weighted subgraph [ 37 ] , in which one wishes to ﬁnd a subset of k vertices such that the sum of the weights of edges in the subgraph induced by the subset is maximized . Also , dispersion and diversity problems can , in some speciﬁc cases , be seen as MEWC problems . These problems , which have been studied since the early 1990s , deal with selecting a subset of elements from a given set in such a way that the diversity among the selected elements is maximized . Therefore , they also involve ﬁnding a subset of k vertices , which for complete graphs will be a clique . Several objective functions have been proposed and discussed ( see , e . g . , [ 48 ] ) , and one of the most common and well - studied versions , the max - sum , involves maximizing the sum of the weights of the edges in the induced graph . Therefore , if the distance is not 0 between every pair of elements , then a maximum edge weight clique is a solution to this problem . Recent comprehensive reviews can be found in [ 34 , 39 ] . Although most of the work has been developed considering complete graphs and searching for weighted cliques of a ﬁxed cardinality , many practical applications are deﬁned on sparse graphs . For example , in protein interaction networks , the proteins are the vertices , and edges only exist when two proteins interact , while the weights represent the strength ( reliability ) of protein interactions . Such networks tend to be sparse . Other sparse networks arise if edges with weights below a certain threshold are removed . Numerous applications of the MEWC models are found in facility location and dispersion problems , molecular biology [ 29 ] , broadband network design [ 46 ] , computer vision , pattern recognition and robotics [ 9 ] , information retrieval , exper - imental design , signal transmission [ 8 ] , and marketing [ 12 ] . More recently , the weighted cliques have been garnering signiﬁcant attention in bioinformatics appli - cations , such as protein structure prediction , detection , and discovery of protein complexes in protein interaction networks ; see , e . g . , [ 11 , 35 , 54 ] and references therein . Finally , we will mention an emerging application of the MEWC problem in materials science . A system of materials can be represented as an edge - weighted graph , where the individual materials are represented as vertices , and weights of edges between pairs of vertices provide a quantitative description of the level of similarity between the corresponding materials . Metrics of similarity between pairs of materials can take advantage of various characteristics of materials , such as density of states ( DoS ) functions or Hamiltonian materials ﬁngerprinting based on projection on localized basis sets [ 1 – 3 ] . Dropping the edges of low weight , cliques with high total edge weights are expected to correspond to groups of similar materials that can be mutually substitutable in certain technologies . This chapter is organized as follows . In Section 2 , we present existing formu - lations for the MEWC problem . We start by quadratic formulations , and then we provide several integer linear programming models for this problem . Section 3 discusses known solution approaches . Section 4 introduces the standard benchmark instances along with some computational results from the literature , and Section 5 concludes the chapter . 220 S . Hosseinian et al . 2 Mathematical Optimization Formulations Let G D . V ; E / be a simple , undirected , and edge - weighted graph , where V is the set of vertices and E is the set of edges . A clique is a subset of vertices C (cid:2) V that induces a complete subgraph , i . e . , for all i ; j 2 C , f i ; j g 2 E . The weight W . C / of a clique C is deﬁned as the sum of the weights of all edges in the corresponding induced subgraph G Œ C (cid:2) , that is , W . C / D P i ; j 2 C w ij , where w ij denotes the weight associated with an edge f i ; j g 2 E . A maximum edge weight clique of G is a clique C in G which maximizes W . C / . As mentioned above , this problem is NP - hard , as it generalizes the maximum clique problem ( MCP ) which is known to be NP - hard [ 31 ] . If all weights w ij are set to 1 , the problem of ﬁnding the MEWC is equivalent to the MCP . Most work on the edge - weighted cliques considers MEWC . b / , where one looks for a maximum edge weight clique deﬁned on a complete graph satisfying a vertex cardinality bound , although sometimes both vertex and edge - cardinality bounds are imposed . For most studies , such a constraint is needed as complete networks and nonnegative weights are , typically , considered . Note that the MEWC in a complete network having all weights nonnegative is the full set of vertices , i . e . , V . In contrast , if all weights are nonpositive , any vertex on its own is a MEWC . To the best of our knowledge , the only works dealing with the MEWC without cardinality constraints are [ 19 , 25 , 27 , 28 , 50 ] . A straightforward nonlinear and binary formulation for the cardinality - constrained MEWC problem in complete , edge - weighted graphs is given by . Q 1 / below [ 43 ] : Maximize P n (cid:2) 1 i D 1 P nj D i C 1 w ij x i x j subject to P ni D 1 x i (cid:3) b ; x i 2 f 0 ; 1 g ; i 2 V ; ( Q 1 ) where b is a given upper bound on the number of vertices in a clique . A decision variable x i is set to 1 if the corresponding vertex i 2 V is in the clique and 0 otherwise . This formulation , however , is not appropriate for non - complete graphs , as in this case the model requires a constraint preventing two nonadjacent vertices to be in the clique : x i C x j (cid:3) 1 , x i x j D 0 ; f i ; j g 62 E : ( 1 ) Other formulations in the literature mainly focus on getting rid of the nonlinearity issue and resort to integer ( linear ) programming , which will be presented shortly . But , very recently , the MEWC problem has been approached using a quadratic pro - gramming formulation by scraping integrality of variables [ 27 , 28 ] . The integrality constraint of the quadratic binary formulation has been relaxed by modiﬁcation of the objective function to include non - existing edges with sufﬁciently small ( i . e . , negatively large ) weights : The Maximum Edge Weight Clique Problem 221 Maximize (cid:2)P . i ; j / 2 E w ij x i x j (cid:4) P . i ; j / 62 E N w ij x i x j (cid:3) subject to x i 2 Œ0 ; 1(cid:2) ; i 2 V ; ( Q 2 ) where N w ij denotes the auxiliary weights assigned to non - existing edges . In particular , Hosseinian et al . [ 28 ] studied optimality characteristic of this formulation and showed that there is a one - to - one correspondence between local optima of ( Q 2 ) and characteristic vectors of the maximal cliques , implying that an optimal solution of ( Q 2 ) is the characteristic vector of a maximum edge weight clique in the underlying graph . While the quadratic models are strictly vertex - based , consisting of n D j V j variables , integer ( linear ) programming models have variables corresponding to edges and hence tend to be much larger . Several integer programming formulations have been proposed for the MEWC problem . They are based on either the so - called natural edge formulation [ 14 ] or on the extended model , ﬁrst proposed in [ 15 ] , which includes not only edge variables but also vertex variables . The “natural” edge formulation due to [ 14 ] is denoted by . L 1 / , while the extended formulation discussed in [ 29 , 38 , 46 , 52 ] is designated by . L 2 / . Note that both models include vertex cardinality constraints . Maximize P n (cid:2) 1 i D 1 P nj D i C 1 w ij y ij subject to y ij C y ik (cid:4) y jk (cid:3) 1 ; i ; j ; k 2 V W i < j < k P j ; j > i y ij C P j ; j < i y ji (cid:3) b (cid:4) 1 ; i 2 V y ij C y jl C y lm (cid:4) y il (cid:4) y jm (cid:3) 1 ; i ; j ; l ; m 2 V W i < j < l < m y ij 2 f 0 ; 1 g ; i ; j 2 V : ( L 1 ) The ﬁrst three sets of constraints represent three different types of facet - deﬁning inequalities . The ﬁrst type , called triangle inequality , forces the third edge of a triangle to be in the solution , whenever the other two edges are . The second type is called partition inequality , and it forces to consider only cliques that contain no more than b vertices . Finally , the third type are the so - called Z - inequalities , which ensure that there is only one clique in the solution . Maximize P n (cid:2) 1 i D 1 P nj D i C 1 w ij y ij subject to y ij (cid:3) x i ; y ij (cid:3) x j ; i ; j 2 V W i < j x i C x j (cid:4) y ij (cid:3) 1 ; i ; j 2 V W i < j P i x i (cid:3) b ; y ij 2 f 0 ; 1 g ; i ; j ; i < j 2 V W i < j x i 2 f 0 ; 1 g ; i 2 V : ( L 2 ) The ﬁrst set of constraints ensures that all edges incident to a vertex not in the clique are also not in the clique , while the second set of constraints forces an edge to be in the clique if both its end vertices are in the clique . The remaining constraints are 222 S . Hosseinian et al . the cardinality and integrality constraints . Note that the y variables can be treated as continuous between 0 and 1 , since the ﬁrst two sets of constraints force y ij to be either 0 or 1 , depending on the values of x i and x j . The number of constraints of the formulation . L 2 / is O . n 2 / , while in formulation . L 1 / – O . n 4 / , due to the Z - inequalities . Furthermore , formulation ( L 2 ) implies the triangle inequalities , whose number is O . n 3 / . Faigle et al . [ 15 ] propose extensions to formulation . L 2 / . In one such extension , they also include edge - cardinality constraints , and since the problem being exam - ined involved MEWC with exactly b vertices , both types of cardinality constraints are written as equalities : P i x i D b ; ( 2 ) P i ; j ; i < j y ij D b . b (cid:2) 1 / 2 : ( 3 ) Another extension was proposed by substituting the edge - cardinality constraints ( 3 ) by constraints on the edges cardinality per vertex : P j ; j > i y ij C P j ; j < i y ji D . b (cid:4) 1 / x i ; i 2 V : ( 4 ) Other similar formulations have been used over the years , for example , in [ 29 , 46 ] the edge - vertex formulation does not include the edge - cardinality constraints ( 3 ) . In [ 46 ] , a comparison of the linear programming relaxations of the two models ( edge variables and edge and vertex variables ) was performed . The authors were able to conclude that the linear programming relaxation of ( L 2 ) formulation is stronger than that of ( L 1 ) . The formulations in [ 38 ] and [ 52 ] substitute the cardinality constraints on the vertices and on the edges ( Equations ( 2 ) and ( 3 ) , respectively ) by the so - called star inequalities ( 5 ) and ( 6 ) , given next . These inequalities , ﬁrst proposed in [ 46 ] , limit the number of edges incident to each node to either b (cid:4) 1 or 0 , depending on whether the node is in the clique or not , respectively . P j ; j ¤ i y ij (cid:4) . b (cid:4) 1 / x i (cid:3) 0 ; i 2 V ; ( 5 ) P f i ; j g2 ı . i / y ij (cid:4) . b (cid:4) 1 / x i (cid:3) 0 ; i 2 V ; ( 6 ) where ı . i / denotes the set of edges incident to vertex i . As mentioned above , many practical applications are deﬁned on sparse graphs ; however , the models just discussed do not take advantage of network’s sparsity . Actually , some authors deal with non - complete graphs by adding dummy edges with a sufﬁciently large negative weight [ 44 , 45 ] , which leads to a model much larger than needed as it builds up the number of constraints . In a contemporary work [ 25 ] , Gouveia and Martins discuss formulations tailored for sparse graphs by analyzing their magnitude ( number of variables and constraints ) and the strength of the linear programming relaxations . Their ﬁrst proposed formu - The Maximum Edge Weight Clique Problem 223 lation . L 3 / is based on the model introduced in [ 40 ] for the maximum / minimum edge neighborhood density clique problem . In this formulation , the vertex variables are discretized by including an extra index that identiﬁes the size of the clique the vertex belongs to and uses additional variables for the clique size as follows : if vertex i is in a clique of size q , then v qi is 1 , otherwise it is 0 ; and a variable w q is 1 if the clique has size q and 0 , otherwise . The possible values for q , i . e . , clique cardinality , are given by Q D f 2 ; : : : ; q max g , where q max is an upper bound on the clique number that can be found by any known method ; see , e . g . , [ 22 ] . Maximize P n (cid:2) 1 i D 1 P nj D i C 1 w ij y ij subject to y ij (cid:3) P q 2 Q v qi ; y ij (cid:3) P q 2 Q v qj ; f i ; j g 2 E P q 2 Q v qi C P q 2 Q v qj (cid:4) y ij (cid:3) 1 ; f i ; j g 2 E and w ij < 0 P j Wf i ; j g2 ı . i / v qj (cid:5) . q (cid:4) 1 / v qi ; i 2 V ; q 2 Q P i 2 V v qi D qw q ; q 2 Q P q 2 Q w q D 1 ; v qi 2 f 0 ; 1 g ; i 2 V ; q 2 Q w q 2 f 0 ; 1 g ; q 2 Q y ij 2 f 0 ; 1 g ; f i ; j g 2 E : ( L 3 ) The equivalence of this formulation to ( L 2 ) can be easily seen by substituting the vertex variables with P q 2 Q v qi . Thus , the ﬁrst two sets of constraints impose that an edge is in the clique if and only if both its end vertices are in the clique , while the next two sets of constraints enforce edges and vertices cardinality , respectively . Finally , the ﬁfth constraint ensures the existence of a solution . This formulation involves O . j E j / variables and O . j E j / constraints , the same as ( L 2 ) . Also , it has less constraints but more variables than ( L 1 ) . Note that for sparse graphs , j E j may be much smaller than n 2 . The authors of [ 25 ] also propose two different ways of strengthening the model , leading to two different versions of the formulation , namely , . L 3 a / , by adding star merging equalities ( 7 ) , and . L 3 b / , by adding both the star merging equalities ( 7 ) and inequalities ( 8 ) that force the number of vertices in the clique not adjacent to vertex i to be 0 if vertex i is in the clique . The star merging equalities state that each vertex i in a clique with cardinality q requires . q (cid:4) 1 / edges incident to it , and none—if it is not in any clique . P f i ; j g2 ı . i / y ij D P q 2 Q . q (cid:4) 1 / v qi ; i 2 V ; ( 7 ) P j Wf i ; j g62 ı . i / v qj (cid:3) . j V j (cid:4) j ı . i / j (cid:4) 1 / . w q (cid:4) v qi / ; i 2 V ; q 2 Q : ( 8 ) Although all these models have the size of the same magnitude , . L 3 b / provides a stronger linear programming relaxation than that of . L 3 a / , which in turn provides a stronger linear programming relaxation than that of ( L 3 ) . 224 S . Hosseinian et al . The second formulation proposed by Gouveia and Martins [ 25 ] uses the idea that a clique can be viewed as an adequate intersection of stars . This idea was ﬁrst introduced in [ 26 ] for characterizing cliques in directed graphs . The corresponding model . L 4 / is substantially more compact as it involves only O . n / constraints . Maximize P n (cid:2) 1 i D 1 P nj D i C 1 w ij y ij subject to P f i ; j g2 ı . i / y ij D P q 2 Q . q (cid:4) 1 / v qi ; i 2 V P i 2 V v qi D qw q ; q 2 Q P q 2 Q w q D 1 ; v qi 2 f 0 ; 1 g ; i 2 V ; q 2 Q w q 2 f 0 ; 1 g ; q 2 Q y ij 2 f 0 ; 1 g ; f i ; j g 2 E : ( L 4 ) Three strengthened versions of formulation ( L 4 ) were considered , namely : • . L 4 a / obtained by including constraints P j Wf i ; j g2 ı . i / v qj (cid:5) . q (cid:4) 1 / v qi ; i 2 V ; q 2 Q ; ( 9 ) • . L 4 b / by including constraints y ij (cid:3) P q 2 Q v qi ; y ij (cid:3) P q 2 Q v qj ; f i ; j g 2 E ; ( 10 ) • and . L 4 c / by including constraints ( 8 ) and ( 10 ) . The number of constraints is increased to O . . q max (cid:4) 1 / j V j / for . L 4 a / and to O . j E j / for the others . Regarding the LP relaxations , . L 4 c / is tighter than . L 4 b / , and all three are tighter than ( L 4 ) . 3 Solution Approaches The ﬁrst attempt to address the MEWC . b / is due to Späth [ 53 ] . In this work , the author considers a facility selection - location problem , in which b facilities out of the n > b possible ones are to be selected such that their average distance is minimized . Finding a solution to this problem is equivalent to ﬁnding a clique of b vertices with maximum weight in an edge - weighted complete graph if edge weights are given by M (cid:4) d e , where M is a strict upper bound on the distance d e ; e 2 E . Späth [ 53 ] proposes two heuristics that iteratively improve some initial clique by successively exchanging two vertices ( one in the clique with another not in the clique ) . The ﬁrst heuristic uses the best improvement strategy , while the second uses the ﬁrst improvement . The heuristics were tested on 27 random complete graphs with 25 vertices to ﬁnd MEWCs with n D 2 ; 3 ; : : : 24 vertices . These instances became the ﬁrst MEWC ( b ) benchmarks . The Maximum Edge Weight Clique Problem 225 Most of other early work on MEWC ( b ) problem focused on studying the polyhedral properties of the b - clique polytope , which is the convex hull of all incidence vectors of cliques in K n ( complete graph on n vertices ) with at most b vertices , and algorithmic approaches based on cutting planes [ 14 , 29 , 38 , 43 , 46 , 52 ] . The availability of strong valid inequalities was the key to the success of these algorithms . Branch - and - cut algorithms dominated the literature on MEWCs until recently . One of the main drawbacks of this type of approach is that , usually , it is not computationally “easy” to generate violated facet - deﬁning cutting planes . Dijkhuizen and Faigle [ 14 ] consider cliques with up to b vertices and unrestricted edge weights for which they propose a “natural” edge variable formulation . L 1 / . They investigate the problem from a polyhedral point of view and introduce several facet - deﬁning inequalities . A cutting - plane approach was proposed , which at each iteration extends the current linear programming ( LP ) relaxation by imposing facet - deﬁning inequalities that were violated . Despite the extensive use of cutting planes and the eight different types of facet - inducing inequalities considered , the computational experiments reported showed that the cutting - plane approach was not suitable to solve the MEWC ( b ) problem , even for small - sized instances . The largest instance they solve refers to a 25 vertices graph , but extremely poor performances are reported for quite smaller instances . Faigle et al . [ 15 ] propose an extended formulation . L 2 / , including binary variables for vertices in addition to those for edges . Although the authors did not investigate the new model from a polyhedral point of view , they were able to show that by lifting the problem into higher dimensions , it was possible to obtain linear programming relaxations of good quality . In addition , they have also considered a Lagrangian relaxation that for each choice of parameters was solved by a direct greedy algorithm . The computational experiments involved ﬁnding the MEWC with exactly b vertices in complete graphs with up to 200 vertices . The bounds obtained were very tight and for larger b value of the gap between the lower and upper bound tended to zero . However , they were not able to improve on the solutions found by Späth [ 53 ] , despite concluding that lifting the problem into higher dimensions had a substantial positive effect on the quality of the LP relaxation . Following on these works , Park et al . [ 46 ] investigate both models . The authors start by summarizing the previous results on the polyhedral structure of the polytope associated with the “natural” formulation . L 1 / and then study the polytope associated with the extended formulation . L 2 / . This was in fact the ﬁrst polyhedral study of the extended formulation . Park et al . [ 46 ] establish some classes of facet - deﬁning inequalities for the polytopes associated with both formulations . By realizing that ignoring the clique cardinality constraints the problem can be viewed as a linearized version of BQP and that by ignoring the constraints forcing an edge to be in the solution when the vertices associated with both end points were , the MEWC reduces to a special case of the quadratic knapsack , the authors were able to use the results of [ 30 , 45 ] to provide the ﬁrst polyhedral results for the b - clique polytope . They demonstrated this way that the extended formulation gives a tighter LP relaxation than the natural formulation , although with a much larger number of constraints . The authors propose a branch and cut that successfully solves 226 S . Hosseinian et al . problem instances involving graphs with up to 30 vertices . Most of the problem instances have been solved to optimality by pure cutting planes ( no branching was necessary ) . The computational performance was compared to that of [ 14 ] using the Späth’s instances [ 53 ] with ten vertices . All instances were solved optimally within 2 s , while [ 14 ] could not solve 18 of the 60 instances considered , with the time requirements varying between 95 and 380 s . Macambira and de Souza [ 38 ] continue this line of research . They introduced three new classes of facet - deﬁning inequalities extending the previous works [ 30 ] and [ 45 ] . The ﬁrst class generalizes the clique , the cut , and the . s ; t / - cut inequalities [ 45 ] , while the second and third classes of inequalities generalize inequalities originally introduced in [ 30 ] and further studied in [ 46 ] . The authors then propose a branch - and - cut algorithm that uses different cutting - plane strategies based on the newly deﬁned facet inequalities . Initial lower bounds are derived by a primal constructive heuristic , which ﬁts the framework of greedy randomized adaptive search procedures ( GRASP ) [ 16 ] . Violated inequalities were found by enumeration , except for tree types of inequalities , since in this case the complexity would become O . n 4 / or even O . n 5 / . The most fractional variable is chosen for branching , and the next node to explore is the one with the best bound . Computational experiments were carried out on problem instances with up to 48 vertices , larger than previously considered instances . All problem instances used were solved to optimality . Hunting et al . [ 29 ] also propose a branch - and - cut algorithm , in which Lagrangian relaxation and cutting planes are combined . However , they use a different relaxation technique , previously suggested for the traveling salesman problem [ 7 ] . At each node of the search tree , subproblems are obtained by including some vertex i in the clique ( x i D 1 ) or excluding it from the clique ( x i D 0 ) . Upper bounds were obtained by solving the Lagrangian dual and then iteratively improved by adding violated inequalities . In each search tree node , inequalities associated with Lagrangian multipliers having a value close to zero are removed . The idea has been suggested in [ 7 ] for the traveling salesman problem and has been employed , e . g . , in [ 36 ] for Steiner problems in graphs . Lower bounds were found by using the heuristic proposed in [ 53 ] . The computational experiments were carried out on the problem instances of [ 38 ] and have shown the method to have a comparable performance to that of [ 38 ] for most problems and to be 2 – 3 times faster for the instances involving mixed ( i . e . , both positive and negative ) weights . Sørensen [ 52 ] follows the same line of work and also introduces new facet - deﬁning inequalities . Then a branch - and - cut algorithm using these new inequalities , as well as some of the previously deﬁned ones , is proposed to solve the MTWC . b / problem . Four classes of inequalities are considered , the ﬁrst is a generalization of the tree inequalities , ﬁrst introduced in [ 30 ] for the quadratic knapsack polytope , termed cut - tree inequalities , while the other classes are associated with multistars ( clique - star , cut - star , and T - star inequalities ) . Generation of violated inequalities , to impose as cutting planes , is controlled in an iterative and hierarchical manner that implies very frequent use of the inequalities that are employed in level 1 , frequent use of the ones that are used in level 2 , and sporadic use of the level 3 ones . The choice of which inequalities are employed at each level reﬂects the relative The Maximum Edge Weight Clique Problem 227 importance of the inequalities , previously found empirically . Whenever no violated inequalities can be found or successive LPs have very close objective function value , branching occurs . In order to keep the LPs within a reasonable size , constraint identiﬁcation is terminated whenever 40 n inequalities have been found , of which only up to the most violated 400 are considered , and nonbinding inequalities are removed . Branching is based on vertices and the most fractional variable is chosen , ties being broken by weight value . The next branch to process is selected by a best - bound search strategy . A lower bound is obtained by a two - phase heuristic , composed of a greedy construction heuristic and an improvement heuristic , similar to that of [ 53 ] . This lower bound is used in the pruning phase . Two sets of problem instances ranging from 30 to 61 vertices were used , and the computation times obtained indicate that the algorithm is more efﬁcient than previously proposed algorithms [ 29 , 38 ] . The ﬁrst set consists of the instances proposed by Macambira and de Souza [ 38 ] and also used in [ 29 ] , while the second set consists of instances of a column generation problem in the context of graph partitioning . The latter have been generated in [ 51 ] , and only these involve node weights . Regarding the ﬁrst set of problems , a direct comparison with the computational times reported in [ 29 , 38 ] was not possible as different computers have been used . Nonetheless , the authors stated that , after adjusting for the relative speed of computers , their algorithm compares favorably with that of [ 29 ] , as it is about ﬁve times faster on average ( ranging from 2 to 12 times ) for instances with positive weights and ten times faster ( ranging from 3 to 26 ) for instances with mixed weights . More recently , Alidaee et al . [ 5 ] approached the MEWC . b / by adapting a tabu search heuristic designed for the general unconstrained binary quadratic program . The method applies the framework discussed in [ 23 ] that is centered around the use of a parametric oscillation . The value of the parameter “spam , ” which is updated , indicates the amplitude of the oscillation around local optima . When local optima are found , information regarding the values of the variables is stored , which is later used to penalize potentially attractive add moves and induce drop moves avoiding getting trapped into the same local optima . For further details and other applications of this framework , see , e . g . , [ 4 , 6 , 32 , 33 ] . The computational tests were performed on the problems proposed by Macambira and de Souza [ 38 ] , which were also solved by Hunting et al . [ 29 ] , Sørensen [ 52 ] . The authors were able to ﬁnd an optimal solution for all problem instances ( as was the case with the other three works ) improving signiﬁcantly on the computational time requirements . Although comparing the computational times for the various methods is not easy , as the authors used different machines , the reported computational times are quite small , always less than 1 s . In all the above studies , MEWC ( b ) problem was considered on a complete graph . However , many practical applications are deﬁned on sparse graphs , for example , in protein interaction networks [ 11 , 54 ] , where the proteins are the vertices and edges only exist when two proteins interact , having weights that represent the reliability of protein interactions . Such networks tend to be sparse . Other sparse networks arise due to cutoff criteria , e . g . , edges with weights below a certain threshold are removed . In this version , usually , no cardinality constraint is imposed . 228 S . Hosseinian et al . The ﬁrst approach in which edge variables are only deﬁned for edges of the graph with nonzero weights is due to Mehrotra [ 43 ] . This work considers the cardinality - constrained Boolean quadratic polytope which is the same as the b - clique polytope . After establishing many facet - deﬁning inequalities , a branch - and - cut methodology is proposed . Computational experiments are reported for problem instances associated with up to 30 vertices graph . In a recent work , Mascia et al . [ 42 ] address the problem of characterizing structural and functional sites in proteins , which requires determining the number of sites in the protein and the set of residues involved in each of them , by searching for maximum weight cliques of an appropriate size in a weighted graph . The graph represents the residues ( vertices ) and their similarity ( weighted edges ) . Only pairs of residues that satisfy the similarity threshold , i . e . , only vertex pairs whose similarity is above a prespeciﬁed threshold , are adjacent . Solutions for the problem are found by using a stochastic local search algorithm , which is based on the one proposed in [ 10 ] for the maximum clique problem . To avoid local search entrapment , the authors implement a prohibition period in a tabu search fashion , during which vertices cannot be added or removed from the current solution . Only more recently the MEWC problem deﬁned on non - complete graphs and without cardinality constraints has been considered [ 19 , 25 , 27 , 28 , 50 ] . Pullan [ 50 ] extended and adapted the phased local search proposed in [ 49 ] to address the maximum edge ( or vertex ) weighted clique problem . The local search proposed constructs a feasible clique by adding one vertex at a time until none can be added . New and better solutions are searched for by swapping a vertex not in the clique with one in the clique followed by the restart of the constructive phase whenever possible , otherwise another swap is performed . This is repeated until a prespeciﬁed number of iterations is performed . The performance of this type of algorithms , typically , depends on the criteria used for choosing the vertices to add or remove from the current solution . In order to avoid local entrapment , [ 50 ] uses three criteria , one at a time . For the initial 50 iterations , a vertex is uniformly and randomly chosen among the ones which would produce the largest increase in the clique weight if added . Then , for another 50 iterations , after identifying the vertices with the smallest penalty , one is uniformly and randomly chosen among the ones which would produce the largest increase in the clique weight if added . Finally , for the last 100 iterations after identifying the vertices with the largest degree , one is uniformly and randomly chosen among the ones which would produce the largest increase in the clique weight if added . The penalties are associated to the vertices in order to discourage a frequent use of the same vertices . In the initialization , the ﬁrst vertex is chosen randomly and the same happens when starting the last 100 iterations . However , at iteration 51 the algorithm continues from the clique obtained at the previous iteration . Since the test instances used for the MEWC ( b ) problem were not suitable for testing algorithms for the MEWC problem , Pullan [ 50 ] constructed 80 benchmarks by adapting the maximum clique ( MC ) instances from the Second DIMACS Implementation Challenge ( see Section 4 for details ) . He performed a series of long running experiments to obtain the “best” clique weight for each problem instance . Then , the heuristic method was run 100 times , and the results The Maximum Edge Weight Clique Problem 229 reported include , for each problem instance , the number of times the “best” value was obtained , as well as the average computational time needed to obtain them . For the runs where the “best” value was not obtained , no additional information is provided . For most instances , the “best” value was always obtained within modest computational times . However , for six instances , the “best” value was never obtained , and for other three , it was only obtained in some of the runs and with much larger computational times . The graphs associated with the instances for which the method was not able to achieve good results or performance are among the most dense ones . In a more recent work , Gouveia and Martins [ 25 ] study existing compact formulations for the MEWC on complete graphs in order to adapt them for sparse graphs and propose new formulations for these types of graphs . The authors also discuss some strengthening strategies . Computational experiments were carried out on some of the instances proposed by [ 50 ] and on the following two real - world instances : the Reuters terror news ( RTN ) network , which was proposed in [ 13 ] , and networks of interacting pathways and interacting metabolites found in the bioinformatics literature [ 21 ] . Computational results are reported for nine different integer programming models . All linear programming relaxations produce , in general , very large gaps , and they still remain large even after the strengthened processes . However , the authors were able to observe some correlation between the performance of different models and the graph sparsity . They also propose a new version of the MEWC , designated by maximum edge weight neighborhood clique ( MEWNC ) , in which one wants to ﬁnd a clique that maximizes the total weight of the edges connecting the clique to its complement . This problem is the weighted version of the maximum edge neighborhood clique problem proposed in [ 41 ] . The computational experiments led the authors to the conclusion that this problem seems to require even more computational effort than the MEWC . Most recently , new methods for solving the MEWC problem based on the continuous quadratic formulation ( Q 2 ) are proposed [ 27 , 28 ] . In [ 27 ] , a construction heuristic method based on an approximation of ( Q 2 ) is presented . The quadratic programming formulation is approximated by substituting the unit hypercube constraint by a unit hypersphere . A heuristic solution to the MEWC is then obtained by considering all stationary points of the approximation problem . The stationary points are given by the eigenvectors of the objective function coefﬁcients matrix . The algorithm extracts the clique corresponding to each eigenvector and outputs the one with the maximum total sum of edge weights . Every eigenvector is treated as an approximation of the characteristic vector of a maximal clique in the graph . In order to extract the corresponding clique , the eigenvector is sorted in a nonincreasing order of its components implying an ordered list of vertices . The clique is initiated by including the ﬁrst vertex in the ordered list and expanded by appending the other vertices one - by - one , according to their orders , if connected to all vertices that are already in the incumbent clique . A slightly modiﬁed version of this heuristic algorithm has been used as a part of an exact method for the MEWC in [ 28 ] . The exact algorithm is a combinatorial branch - and - bound method that uses the spectral heuristic to draw an initial lower bound , while it employs an upper bound 230 S . Hosseinian et al . based on a quadratic relaxation of ( Q 2 ) at every node of the search tree . The quadratic relaxation concerns optimization of the objective function of ( Q 2 ) subject to a single hypersphere constraint . It has been shown that , under some regulatory conditions , ﬁnding such upper bounds is not harder than ﬁnding the root of a monotonically decreasing function in a known interval . Computational experiments on some benchmark instances proposed in [ 50 ] have been carried out . The results reported in [ 28 ] show signiﬁcant improvement in solution time for most of the investigated instances compared to the best exact results due to integer programming formulations . Another very recent approach has been proposed in [ 19 ] , where a biased random key genetic algorithm ( BRKGA ) is used to ﬁnd good quality solutions with modest time requirements . The BRKGA developed uses the framework proposed by Gonçalves and Resende [ 24 ] , which has been shown to have very good performance for many different problems , including problems deﬁned on graphs ; see , e . g . , [ 17 , 18 ] . The GA is responsible for evolving the chromosomes , which represent the vertex priorities used to construct solutions . The ﬁrst gene is used to determine the initial vertex in the clique construction . Then , the remaining vertices are sorted in increasing order of the corresponding gene values , i . e . , random keys . The sorted vertices correspond to the sequence in which they will be added to the incumbent clique as long as they are adjacent to all vertices in the partial clique . Once a clique is obtained , its weight is computed . To obtain new solutions , two individuals are randomly chosen to act as parents . One of them is chosen among the best solutions , while the other is chosen from the remainder of the population . Genes are chosen by using a biased uniform crossover , that is , for each gene , a biased coin is tossed to decide on which parent the gene is taken from . This way , the child inherits the genes from the top parent with higher probability . A new population is obtained by joining three subsets of solutions as follows : the ﬁrst subset is obtained by copying the best solutions of the current population ; the second subset is obtained by using a ( biased ) parameterized uniform crossover ; and the remaining solutions , termed mutants , are randomly generated as is the case for the initial population . The algorithm was tested on the instances proposed by Pullan [ 50 ] , and the computational experiments show that for most of the problems , the GA is able to obtain a solution matching the best known / optimal one within the time limit imposed ( 60 s ) . Actually , for most of these instances , the GA converged quite quickly , and the best solution found was obtained early on . However , this was not the case for less sparse graphs . For some of the instances for which Pullan was able to quickly obtain a solution matching the best known one , the GA was not capable of doing so within the 60 s allowed . However , for one instance that Pullan was never able to obtain a solution as good as the best known / optimal one , after running his method 100 times each with a time limit , 1 the GA obtained such a solution within the 60 s allowed . For another instance , Pullan did so only in 7 out of the 100 trials ( with an average time of over 860 s ) , whereas 1 Pullan [ 50 ] does not specify any time limit used ; however for some instances , the average time reported is over 3300s . The Maximum Edge Weight Clique Problem 231 the GA was able to obtain it within the allowed 60 s . In [ 20 ] the GA reported in [ 19 ] is hybridized with a local search mechanism that allows for improved results . Furthermore , in the computational tests , the other problem instances used in [ 25 ] were also used , and the comparison with known results is favorable . 4 Benchmark Instances and Sample Computational Results This section provides a description of the benchmark instances used to evaluate the performance of algorithms for the MEWC problem . Sample computational results reported in the literature are also included . Pullan [ 50 ] constructed benchmarks by adapting the maximum clique ( MC ) instances from the Second DIMACS Implementation Challenge ( 1992 – 1993 ) . 2 These problem instances range in size from less than 50 vertices and 1000 edges to more than 3300 vertices and 5 , 000 , 000 edges . There are a total of 80 instances that have been generated from problems arising in coding theory , fault diagnosis , Keller’s conjecture on tilings using hypercubes , and Steiner triple , as well as randomly generated instances . The MC instances are converted into MEWC instances ( termed DIMACS - EW ) by associating a weight with each ( existing ) edge , which is calculated as follows : w ij D . i C j / mod 200 C 1 : ( 11 ) Table 1 provides a description of the instances characteristics : the number of vertices j V j , the number of edges j E j , the edge density (cid:3) . G / , as well as the best known solution W . C (cid:3) / , i . e . , the largest value for a clique weight reported in the literature . The values of W . C (cid:3) / that were proved to be optimal are shown in bold . Next , we present some sample computational results reported by Pullan [ 50 ] , Gouveia and Martins [ 25 ] , Hosseinian et al . [ 28 ] , and Fontes et al . [ 19 ] . Among these , [ 50 ] and [ 19 ] present heuristic results , [ 25 ] reports exact results , and [ 28 ] contains both heuristic and exact results . Since not all works attempt to solve all 80 problem instances , we only summarize the results for 18 instances reported in all of the four aforementioned papers in Table 2 . One must , however , bear in mind that a more fair performance comparison would need to take into account many factors , such as the programming language , the data structures used , the computational equipment and protocols , and the algorithm parameters ( stopping condition , parameter tuning , etc . ) not mentioned here . Pullan [ 50 ] ran his method 100 times for each problem instance with an undisclosed time limit and reported the number of times ( “ # ” in the table ) the best known solution was found , as well as the average time needed to ﬁnd such solutions . For the sake of comparison , we report the time taken for all 100 trials . The GA 2 http : / / dimacs . rutgers . edu / Challenges / . 232 S . Hosseinian et al . T a b l e 1 D I M A C S p r ob l e m i n s t a n ce s : c h a r ac t e r i s ti c s a n d b e s t kno w n s o l u ti on v a l u e s ( v a l u e s kno w n t o b e op ti m a l a r e s ho w n i n bo l d f on t ) I n s t a n ce j V j j E j (cid:3) . G / W . C (cid:2) / I n s t a n ce j V j j E j (cid:3) . G / W . C (cid:2) / b r o c k200 - 1 200 14 , 834 0 . 745 21 , 230 j ohn s on8 - 4 - 4 70 1855 0 . 768 6552 b r o c k200 - 2 200 9876 0 . 496 6542 j ohn s on16 - 2 - 4 120 5460 0 . 765 3808 b r o c k200 - 3 200 12 , 048 0 . 605 10 , 303 j ohn s on32 - 2 - 4 496 107 , 880 0 . 879 16 , 205 b r o c k200 - 4 200 13 , 089 0 . 658 13 , 967 k e ll e r 4 171 9435 0 . 649 6745 b r o c k400 - 1 400 59 , 723 0 . 748 35 , 257 k e ll e r 5 776 225 , 990 0 . 752 38 , 901 b r o c k400 - 2 400 59 , 786 0 . 749 40 , 738 k e ll e r 6 3361 4 , 619 , 898 0 . 818 38 , 901 b r o c k400 - 3 400 59 , 681 0 . 748 46 , 785 M ANN - a 9 45 918 0 . 927 5460 b r o c k400 - 4 400 59 , 765 0 . 749 54 , 304 M ANN - a 27 378 70 , 551 0 . 990 799 , 525 b r o c k800 - 1 800 207 , 505 0 . 649 25 , 050 M ANN - a 45 1035 533 , 115 0 . 996 5 , 930 , 064 b r o c k800 - 2 800 208 , 166 0 . 651 27 , 932 M ANN - a 81 3321 5 , 506 , 380 0 . 999 60 , 504 , 100 b r o c k800 - 3 800 207 , 333 0 . 649 30 , 972 p - h a t 300 - 1 300 10 , 933 0 . 244 3321 b r o c k800 - 4 800 207 , 643 0 . 650 30 , 950 p - h a t 300 - 2 300 21 , 928 0 . 489 31 , 564 c - f a t 200 - 1 200 1534 0 . 077 7734 p - h a t 300 - 3 300 33 , 390 0 . 744 63 , 390 c - f a t 200 - 2 200 3235 0 . 163 26 , 389 p - h a t 500 - 1 500 31 , 569 0 . 253 4764 c - f a t 200 - 5 200 8473 0 . 426 168 , 200 p - h a t 500 - 2 500 62 , 946 0 . 505 63 , 870 c - f a t 500 - 1 500 4459 0 . 036 10 , 738 p - h a t 500 - 3 500 93 , 800 0 . 752 122 , 302 c - f a t 500 - 2 500 9139 0 . 073 38 , 350 p - h a t 700 - 1 700 60 , 999 0 . 249 5185 c - f a t 500 - 5 500 23 , 191 0 . 186 205 , 864 p - h a t 700 - 2 700 121 , 728 0 . 498 96 , 380 c - f a t 500 - 10 500 46 , 627 0 . 374 804 , 000 p - h a t 700 - 3 700 183 , 010 0 . 748 191 , 148 The Maximum Edge Weight Clique Problem 233 C 125 . 9 125 6963 0 . 898 66 , 248 p - h a t 1000 - 1 1000 122 , 253 0 . 245 5436 C 250 . 9 250 27 , 984 0 . 8 99 96 , 692 p - h a t 1000 - 2 1000 244 , 799 0 . 490 107 , 870 C 500 . 9 500 112 , 332 0 . 9 00 164 , 953 p - h a t 1000 - 3 1000 3 , 711 , 746 7 . 431 229 , 500 C 1000 . 9 1000 450 , 079 0 . 901 234 , 013 p - h a t 1500 - 1 1500 284 , 923 0 . 253 7135 C 2000 . 5 2000 999 , 836 0 . 500 14 , 927 p - h a t 1500 - 2 1500 568 , 960 0 . 506 211 , 069 C 2000 . 9 2000 1 , 799 , 532 0 . 900 316 , 135 p - h a t 1500 - 3 1500 847 , 244 0 . 754 441 , 998 C 4000 . 5 4000 4 , 000 , 268 0 . 500 19 , 304 s a n200 - 0 . 7 - 1 200 13 , 930 0 . 700 45 , 295 D S J C 500 - 5 500 62 , 624 0 . 502 9626 s a n200 - 0 . 7 - 2 200 13 , 930 0 . 700 15 , 073 D S J C 1000 - 5 1000 249 , 826 0 . 500 12 , 054 s a n200 - 0 . 9 - 1 200 17 , 910 0 . 900 242 , 710 g e n200 - p0 . 9 - 44 200 17 , 910 0 . 9 00 94 , 362 s a n200 - 0 . 9 - 2 200 17 , 910 0 . 900 178 , 468 g e n200 - p0 . 9 - 55 200 17 , 910 0 . 9 00 150 , 839 s a n200 - 0 . 9 - 3 200 17 , 910 0 . 900 69 , 764 g e n400 - p0 . 9 - 55 400 71 , 820 0 . 9 00 150 , 981 s a n400 - 0 . 5 - 1 400 39 , 900 0 . 500 7442 g e n400 - p0 . 9 - 65 400 71 , 820 0 . 9 00 208 , 624 s a n400 - 0 . 7 - 1 400 55 , 860 0 . 700 77 , 719 g e n400 - p0 . 9 - 75 400 71 , 820 0 . 9 00 279 , 069 s a n400 - 0 . 7 - 2 400 55 , 860 0 . 700 44 , 155 h a mm i ng6 - 2 64 1824 0 . 905 32 , 736 s a n400 - 0 . 7 - 3 400 55 , 860 0 . 700 24 , 727 h a mm i ng6 - 4 64 704 0 . 349 396 s a n400 - 0 . 9 - 1 400 71 , 820 0 . 900 496 , 874 h a mm i ng8 - 2 256 31 , 616 0 . 969 800 , 624 s a n1000 1000 249 , 750 0 . 500 10 , 661 h a mm i ng8 - 4 256 20 , 864 0 . 639 12 , 360 s a n r 200 - 0 . 7 200 13 , 930 0 . 700 16 , 398 h a mm i ng10 - 2 1000 259 , 328 0 . 5 19 13 , 140 , 816 s a n r 200 - 0 . 9 200 17 , 910 0 . 900 85 , 920 h a mm i ng10 - 4 1024 434 , 176 0 . 8 29 83 , 280 s a n r 400 - 0 . 5 400 39 , 900 0 . 500 8298 j ohn s on8 - 2 - 4 28 210 0 . 556 192 s a n r 400 - 0 . 7 400 55 , 860 0 . 700 22 , 791 234 S . Hosseinian et al . Table 2 Summary of the sample results Heuristic Exact [ 50 ] [ 19 ] [ 28 ] [ 25 ] [ 28 ] Instance # Time Time Gap ( % ) Time Time Time brock200 - 1 100 4 : 00 2 : 85 0 : 00 1 : 98 > 10 ; 800 : 00 3047 : 57 brock200 - 2 100 2 : 00 1 : 61 0 : 00 0 : 75 9464 : 24 7 : 44 brock200 - 3 100 1 : 00 2 : 06 0 : 00 1 : 25 > 10 ; 800 : 00 55 : 91 brock200 - 4 100 2 : 00 2 : 34 1 : 65 1 : 56 > 10 ; 800 : 00 188 : 03 c - fat200 - 1 100 < 1 : 00 0 : 46 0 : 00 0 : 05 3 : 87 0 : 48 c - fat200 - 2 100 < 1 : 00 0 : 94 0 : 00 0 : 06 33 : 26 0 : 89 c - fat200 - 5 100 < 1 : 00 60 : 00 0 : 00 0 : 63 155 : 30 > 10 ; 800 : 00 C125 . 9 100 7 : 00 1 : 81 1 : 26 0 : 73 > 10 ; 800 : 00 4558 : 17 hamming6 - 2 100 < 1 : 00 0 : 27 0 : 00 0 : 05 0 : 30 4 : 44 hamming6 - 4 100 < 1 : 00 0 : 09 0 : 00 < 0 : 01 1 : 97 0 : 03 hamming8 - 4 100 1 : 00 3 : 00 0 : 00 2 : 97 > 10 ; 800 : 00 439 : 44 johnson8 - 2 - 4 100 < 1 : 00 0 : 03 0 : 00 < 0 : 01 0 : 14 < 0 : 01 johnson8 - 4 - 4 100 < 1 : 00 0 : 22 0 : 00 0 : 05 2 : 34 0 : 69 johnson16 - 2 - 4 100 < 1 : 00 0 : 66 0 : 00 0 : 33 > 10 ; 800 : 00 84 : 69 keller4 100 1 : 00 1 : 42 0 : 00 0 : 80 > 10 ; 800 : 00 42 : 22 MANN - a9 100 < 1 : 00 0 : 10 0 : 00 0 : 05 9 : 39 1 : 91 p - hat300 - 1 100 3 : 00 1 : 29 0 : 00 0 : 58 1273 : 05 3 : 28 p - hat300 - 2 100 < 1 : 00 3 : 42 0 : 00 3 : 33 > 10 ; 800 : 00 171 : 28 All reported times are in CPU seconds proposed in [ 19 ] was run once for each problem instance using three seeds with a time limit of 60 s ( 20 s per seed ) . The population size was set to 150 (cid:6) j V j , based on the performance achieved considering a pilot subset of instances consisting of brock200 - 1 and 400 - 1 , c - fat200 - 1 and 200 - 2 , and gen200p0 . 9 - 44 and 200p0 . 9 - 55 . Literature recommendations were used to set the population parameters , as well as the crossover probability . The computational time reported is the one required to ﬁnd an optimal solution . For the construction heuristic algorithm proposed in [ 28 ] , we report the percentage optimality gap ( i . e . , W . C (cid:2) / (cid:2) W . C / W . C (cid:2) / (cid:6) 100 ) and the computational time of ﬁnding the solution . Regarding the exact methods , Gouveia and Martins [ 25 ] solved nine different integer programming models . Here we report only the best solution time among them , due to different formulations for different instances . In this work , the solution time was limited to 3 h ( 10 , 800 s ) for each model on each instance . The same time constraint has been considered in computational results of the combinatorial branch - and - bound algorithm reported in [ 28 ] . The Maximum Edge Weight Clique Problem 235 5 Conclusion We surveyed the literature dealing with the MEWC problem . Our interest in this problem is motivated by potential applications in network - based analysis of systems of materials in materials science . Despite numerous important applications , this problem is not nearly as well studied as its close relatives , the MVWC and MEWC . b / problems . In particular , only a fraction of the standard benchmarks instances has been solved to provable optimality . We hope that this review will motivate future developments that will lead to theoretical characterizations of the MEWC problem , as well as exact and heuristic methods that would advance the current state of the art . Acknowledgments This work was carried out , while the second author was a visiting scholar at Texas A & M University , College Station , TX , USA , and is partially supported by scholarship SFRH / BSAB / 113662 / 2015 . Partial support by DOD - ONR ( N00014 - 13 - 1 - 0635 ) NSF ( CMMI - 1538493 ) grants is also gratefully acknowledged . References 1 . Agapito , L . A . , Ferretti , A . , Calzolari , A . , Curtarolo , S . , Buongiorno Nardelli , M . : Effective and accurate representation of extended Bloch states on ﬁnite Hilbert spaces . Phys . Rev . B 88 , 165127 ( 2013 ) 2 . Agapito , L . A . , Fornari , M . , Ceresoli , D . , Ferretti , A . , Curtarolo , S . , Buongiorno Nardelli , M . : Accurate tight - binding Hamiltonians for two - dimensional and layered materials . Phys . Rev . B 93 , 125137 ( 2016 ) 3 . Agapito , L . A . , Ismail - Beigi , S . , Curtarolo , S . , Fornari , M . , Buongiorno Nardelli , M . : Accurate tight - binding Hamiltonian matrices from ab initio calculations : minimal basis sets . Phys . Rev . B 93 , 035104 ( 2016 ) 4 . Alidaee , B . , Glover , F . , Kochenberger , G . A . , Rego , C . : A new modeling and solution approach for the number partitioning problem . Adv . Decis . Sci . 2005 ( 2 ) , 113 – 121 ( 2005 ) 5 . Alidaee , B . , Glover , F . , Kochenberger , G . , Wang , H . : Solving the maximum edge weight clique problem via unconstrained quadratic programming . Eur . J . Oper . Res . 181 ( 2 ) , 592 – 597 ( 2007 ) 6 . Alidaee , B . , Kochenberger , G . , Lewis , K . , Lewis , M . , Wang , H . : A new approach for modeling and solving set packing problems . Eur . J . Oper . Res . 186 ( 2 ) , 504 – 512 ( 2008 ) 7 . Balas , E . , Christoﬁdes , N . : A restricted Lagrangean approach to the traveling salesman problem . Math . Program . 21 ( 1 ) , 19 – 46 ( 1981 ) 8 . Balas , E . , Yu , C . S . : Finding a maximum clique in an arbitrary graph . SIAM J . Comput . 15 ( 4 ) , 1054 – 1068 ( 1986 ) 9 . Ballard , D . H . , Brown , C . M . : Computer Vision , 1982 . Prenice - Hall , Englewood Cliffs , NJ ( 1982 ) 10 . Battiti , R . , Protasi , M . : Reactive local search for the maximum clique problem 1 . Algorithmica 29 ( 4 ) , 610 – 637 ( 2001 ) 11 . Butenko , S . , Wilhelm , W . E . : Clique - detection models in computational biochemistry and genomics . Eur . J . Oper . Res . 173 ( 1 ) , 1 – 17 ( 2006 ) 12 . Cavique , L . : A scalable algorithm for the market basket analysis . J . Retail . Consum . Serv . 14 ( 6 ) , 400 – 407 ( 2007 ) 13 . Corman , S . R . , Kuhn , T . , McPhee , R . D . , Dooley , K . J . : Studying complex discursive systems . Hum . Commun . Res . 28 ( 2 ) , 157 – 206 ( 2002 ) 236 S . Hosseinian et al . 14 . Dijkhuizen , G . , Faigle , U . : A cutting - plane approach to the edge - weighted maximal clique problem . Eur . J . Oper . Res . 69 ( 1 ) , 121 – 130 ( 1993 ) 15 . Faigle , U . , Garbe , R . , Heerink , K . , Spieker , B . : Lp - relaxations for the edge - weighted subclique problem . In : Operations Research ’93 , pp . 157 – 160 . Springer , Berlin ( 1994 ) 16 . Feo , T . A . , Resende , M . G . C . : Greedy randomized adaptive search procedures . J . Glob . Optim . 6 , 109 – 133 ( 1995 ) 17 . Fontes , D . B . M . M . , Gonçalves , J . F . : Heuristic solutions for general concave minimum cost network ﬂow problems . Networks 50 ( 1 ) , 67 – 76 ( 2007 ) 18 . Fontes , D . B . M . M . , Gonçalves , J . F . : A multi - population hybrid biased random key genetic algorithm for hop - constrained trees in nonlinear cost ﬂow networks . Optim . Lett . 7 ( 6 ) , 1303 – 1324 ( 2013 ) 19 . Fontes , D . B . M . M . , Gonçalves , J . F . , Fontes , F . F . : A GA approach to the maximum edge weight clique problem . In : CECNet 2016 – 6th International Conference on Electronics , Communications and Networks , Macau University of Science and Technology ( 2016 ) 20 . Fontes , D . B . M . M . , Gonçalves , J . F . , Fontes , F . F . : An evolutionary approach to the maximum edge weight clique problem ( 2017 , submitted ) 21 . Förster , J . , Famili , I . , Fu , P . , Palsson , B . Ø . , Nielsen , J . : Genome - scale reconstruction of the saccharomyces cerevisiae metabolic network . Genome Res . 13 ( 2 ) , 244 – 253 ( 2003 ) 22 . Gendron , B . , Hertz , A . , St - Louis , P . : A sequential elimination algorithm for computing bounds on the clique number of a graph . Discret . Optim . 5 ( 3 ) , 615 – 628 ( 2008 ) 23 . Glover , F . , Kochenberger , G . , Alidaee , B . , Amini , M . : Tabu search with critical event memory : an enhanced application for binary quadratic programs . In : Meta - Heuristics , pp . 93 – 109 . Springer , Berlin ( 1999 ) 24 . Gonçalves , J . F . , Resende , M . G . : Biased random - key genetic algorithms for combinatorial optimization . J . Heuristics 17 ( 5 ) , 487 – 525 ( 2011 ) 25 . Gouveia , L . , Martins , P . : Solving the maximum edge - weight clique problem in sparse graphs with compact formulations . EURO J . Comput . Optim . 3 ( 1 ) , 1 – 30 ( 2015 ) 26 . Gouveia , L . , Moura , P . : Enhancing discretized formulations : the knapsack reformulation and the star reformulation . Top 20 ( 1 ) , 52 – 74 ( 2012 ) 27 . Hosseinian , S . , Fontes , D . B . M . M . , Butenko , S . : A quadratic approach to the maximum edge weight clique problem . In : XIII Global Optimization Workshop ( 2016 ) 28 . Hosseinian , S . , Fontes , D . B . M . M . , Butenko , S . : A nonconvex quadratic optimization approach to the maximum edge weight clique problem ( 2017 , submitted ) 29 . Hunting , M . , Faigle , U . , Kern , W . : A Lagrangian relaxation approach to the edge - weighted clique problem . Eur . J . Oper . Res . 131 ( 1 ) , 119 – 131 ( 2001 ) 30 . Johnson , E . L . , Mehrotra , A . , Nemhauser , G . L . : Min - cut clustering . Math . Program . 62 ( 1 – 3 ) , 133 – 151 ( 1993 ) 31 . Karp , R . M . : Reducibility Among Combinatorial Problems . Springer , Berlin ( 1972 ) 32 . Kochenberger , G . , Glover , F . , Alidaee , B . , Lewis , K . : Using the unconstrained quadratic program to model and solve max 2 - sat problems . Int . J . Oper . Res . 1 ( 1 – 2 ) , 89 – 100 ( 2005 ) 33 . Kochenberger , G . A . , Glover , F . , Alidaee , B . , Rego , C . : An unconstrained quadratic binary programming approach to the vertex coloring problem . Ann . Oper . Res . 139 ( 1 ) , 229 – 241 ( 2005 ) 34 . Lei , T . L . , Church , R . L . : On the uniﬁed dispersion problem : efﬁcient formulations and exact algorithms . Eur . J . Oper . Res . 241 ( 3 ) , 622 – 630 ( 2015 ) 35 . Li , X . , Wu , M . , Kwoh , C . K . , Ng , S . K . : Computational approaches for detecting protein complexes from protein interaction networks : a survey . BMC Genomics 11 ( 1 ) , 1 ( 2010 ) 36 . Lucena , A . : Steiner problem in graphs : Lagrangean relaxation and cutting planes . COAL Bull . 21 ( 2 ) , 2 – 8 ( 1992 ) 37 . Macambira , E . M . : An application of tabu search heuristic for the maximum edge - weighted subgraph problem . Ann . Oper . Res . 117 , 175 – 190 ( 2002 ) 38 . Macambira , E . M . , de Souza , C . C . : The edge - weighted clique problem : valid inequalities , facets and polyhedral computations . Eur . J . Oper . Res . 123 , 346 – 371 ( 2000 ) The Maximum Edge Weight Clique Problem 237 39 . Martí , R . , Gallego , M . , Duarte , A . , Pardo , E . G . : Heuristics and metaheuristics for the maximum diversity problem . J . Heuristics 19 ( 4 ) , 591 – 615 ( 2013 ) 40 . Martins , P . : Extended and discretized formulations for the maximum clique problem . Comput . Oper . Res . 37 ( 7 ) , 1348 – 1358 ( 2010 ) 41 . Martins , P . : Cliques with maximum / minimum edge neighborhood and neighborhood density . Comput . Oper . Res . 39 ( 3 ) , 594 – 608 ( 2012 ) 42 . Mascia , F . , Cilia , E . , Brunato , M . , Passerini , A . : Predicting structural and functional sites in proteins by searching for maximum - weight cliques . In : AAAI . Citeseer ( 2010 ) 43 . Mehrotra , A . : Cardinality constrained boolean quadratic polytope . Discret . Appl . Math . 79 , 137 – 154 ( 1997 ) 44 . Mehrotra , A . , Trick , M . A . : Cliques and clustering : a combinatorial approach . Oper . Res . Lett . 22 ( 1 ) , 1 – 12 ( 1998 ) 45 . Padberg , M . : The boolean quadric polytope : some characteristics , facets and relatives . Math . Program . 45 ( 1 – 3 ) , 139 – 172 ( 1989 ) 46 . Park , K . , Lee , K . , Park , S . : An extended formulation approach to the edge - weighted maximal clique problem . Eur . J . Oper . Res . 95 ( 3 ) , 671 – 682 ( 1996 ) 47 . Pisinger , D . : The quadratic knapsack problem – a survey . Discret Appl . Math . 155 , 623 – 648 ( 2007 ) 48 . Prokopyev , O . A . , Kong , N . , Martinez - Torres , D . L . : The equitable dispersion problem . Eur . J . Oper . Res . 197 ( 1 ) , 59 – 67 ( 2009 ) 49 . Pullan , W . : Phased local search for the maximum clique problem . J . Comb . Optim . 12 ( 3 ) , 303 – 323 ( 2006 ) 50 . Pullan , W . : Approximating the maximum vertex / edge weighted clique using local search . J . Heuristics 14 ( 2 ) , 117 – 134 ( 2008 ) 51 . Sørensen , M . M . : New facets and a branch - and - cut algorithm for the weighted clique problem . Working paper 01 – 2 , Department of Management Science and Logistics , The Aarhus School of Business ( 2001 ) 52 . Sørensen , M . M . : New facets and a branch - and - cut algorithm for the weighted clique problem . Eur . J . Oper . Res . 154 , 57 – 70 ( 2004 ) 53 . Späth , H . : Heuristically determining cliques of given cardinality and with minimal cost within weighted complete graphs . Z . Oper . Res . 29 ( 3 ) , 125 – 131 ( 1985 ) 54 . Tomita , E . , Akutsu , T . , Matsunaga , T . : Efﬁcient algorithms for ﬁnding maximum and maximal cliques : effective tools for bioinformatics . INTECH Open Access Publisher ( 2011 ) 55 . Wu , Q . , Hao , J . K . : A review on algorithms for maximum clique problems . Eur . J . Oper . Res . 242 ( 3 ) , 693 – 709 ( 2015 )