Analogy , Amalgams , and Concept Blending Tarek R . Besold TBESOLD @ UNI - OSNABRUECK . DE Kai - Uwe Kühnberger KKUEHNBE @ UNI - OSNABRUECK . DE Institute of Cognitive Science , University of Osnabrück , Osnabrück , Germany Enric Plaza ENRIC @ IIIA . CSIC . ES IIIA , Artiﬁcial Intelligence Research Institute , CSIC , Spanish Council for Scientiﬁc Research , Barcelona , Catalonia ( Spain ) Abstract Concept blending — a cognitive process which allows for the combination of certain elements ( and their relations ) from originally distinct conceptual spaces into a new uniﬁed space combining these previously separate elements , and enables reasoning and inference over the combination — is taken as a key element of creative thought and combinatorial creativity . In this paper , we provide an intermediate report on work towards the development of a computational - level and algorithmic - level account of concept blending . We present the theoretical background as well as an algorithmic proposal combining techniques from computational analogy - making and case - based reasoning , and exemplify the feasibility of the approach in two case studies . 1 . Introduction : Computational Creativity and Concept Blending Boden ( 2003 ) identiﬁes three forms of creativity : exploratory , transformational , and combinatorial . The label exploratory refers to creativity which arises from a thorough and persistent search of a well - understood domain ( i . e . , within an already established conceptual space ) , whilst transforma - tional creativity either involves the removal of constraints and limitations from the initial domain deﬁnition , or the rejection of characteristic assumptions forming part of the speciﬁcation of the cre - ative problem ( or both ) . Combinatorial creativity shares traits of both other forms in that it arises from a combinatorial process joining familiar ideas ( in the form of , for instance , concepts , theories , or artworks ) in an unfamiliar way , by this producing novel ideas . Computationally modeling the latter form of creativity turns out to be surprisingly complicated : although the overall idea of combining preexisting ideas into new ones seems fairly intuitive and straightforward , when looking at it from a more formal perspective at the current stage neither can a precise algorithmic characterization be given , nor are at least the details of a possible computational - level theory describing the process ( es ) at work well understood . Still , in recent years a proposal by Fauconnier and Turner ( 1998 ) called concept blending ( or conceptual integration ) has inﬂuenced and reinvigorated studies trying to unravel the general cognitive principles operating during creative thought . In their theory , concept blending constitutes a cognitive process which allows for the combination of certain elements ( and their relations ) from originally distinct conceptual spaces into Proceedings of the Third Annual Conference on Advances in Cognitive Systems Poster Collection ( 2015 ) Article 23 © 2015 Cognitive Systems Foundation . All rights reserved . T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA a new uniﬁed space combining these previously separate elements , and then enables reasoning and inference over the combination . Unfortunately , Fauconnier and Turner ( 1998 ) ( also in their later works ) remain mostly silent concerning details needed for a proper computational modeling of concept blending as cognitive capacity — neither do they provide a fully worked out and formalized theory themselves , nor does their informal account capture key properties and functionalities as , for example , the retrieval of input spaces , the selection and transfer of elements from the input into the blend space , or the further combination of possibly mutually contradictory elements in the blend . In short : Up until today , the theory does not specify how the blending process is supposed to work . These shortcomings notwithstanding , several researchers in AI and computational cognitive modeling have used the provided conceptual descriptions as starting point for suggesting possible reﬁnements and implementations : ( Goguen & Harrell , 2010 ) propose a concept blending - based approach to the analysis of the style of multimedia content in terms of blending principles and also provide an experimental implementation , ( Pereira , 2007 ) tries to develop a computationally plausible model of several hypothesized sub - parts of concept blending , ( Thagard & Stewart , 2011 ) exemplify how creative thinking could arise from using convolution to combine neural patterns into ones which are potentially novel and useful , and ( Veale & O’Donoghue , 2000 ) present their computational model of conceptual integration and propose several extensions to the at the time actual view on concept blending . Since 2013 , another attempt at developing a computationally feasible , cognitively - inspired for - mal model of concept creation , grounded on a sound mathematical theory of concepts and imple - mented in a generic , creative computational system is undertaken by a European research consor - tium in the so called Concept Invention Theory ( COINVENT ) project . 1 One of the main goals of the COINVENT research program is the development of a computational - level and algorithmic - level account of concept blending based on insights from psychology , AI , and cognitive modeling , the heart of which are made up by results from cognitive systems studies on computational analogy - making and knowledge transfer and combination ( i . e . , the computation of so called “amalgams” ) from case - based reasoning . In the following we present an analogy - inspired perspective on the COINVENT core model for concept blending and show how the respective mechanisms and sys - tems interact . 2 . Computational Models of Analogy and Amalgams As analogy seems to play a crucial role in human cognition ( Gentner & Smith , 2013 ) , researchers on the computational side of cognitive science and in AI also very quickly got interested in the topic and have been creating computational models of analogy - making basically since the advent of computer systems , among others giving rise to Winston ( 1980 ) ’s work on analogy and learning , Hofstadter and Mitchell ( 1994 ) ’s Copycat system , or Falkenhainer et al . ( 1989 ) ’s well - known Structure - Mapping Engine . One of the latest entries in the long series of computational analogy engines , and the system applied in COINVENT , is the Heuristic - Driven Theory Projection ( HDTP ) framework ( Schmidt et al . , 2014 ) , a generalization - based symbolic analogy engine discussed in detail in Sect . 2 . 1 . 1 . Also see http : / / www . coinvent - project . eu for details on the consortium and the project . 2 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING Generalization ( G ) (cid:38) (cid:38) (cid:120) (cid:120) S OURCE ( S ) analogical relation T ARGET ( T ) Figure 1 . A schematic overview of HDTP’s generalization - based approach to analogy . In a conceptually related , but mostly independently conducted line of work researchers in case - based reasoning ( CBR ) have been trying to develop problem solving methodologies based on the principle that similar problems likely tend to have similar solutions . CBR tries to solve problems by retrieving one or several relevant cases for the current issue at hand from a case - base with already solved previous problems , and then reusing the knowledge to also tackle the new task ( Aamodt & Plaza , 1994 ) . While the retrieval stage has received signiﬁcant attention over the last two decades , the transfer and combination of knowledge from the retrieved case to the current problem has been studied only to a lesser extent , with ( Ontañón & Plaza , 2012 ) being a recent attempt at also gaining insights on this part of the CBR cycle by suggesting the framework of amalgams ( Ontañón & Plaza , 2010 ) as a formal model . Sect . 2 . 2 gives an overview of amalgams as used in COINVENT . 2 . 1 Generalization - Based Analogy - Making Using Heuristic - Driven Theory Projection Heuristic - Driven Theory Projection has been conceived as a mathematically sound theoretical model and implemented engine for computational analogy - making , computing analogical relations and in - ferences for domains which are presented in ( possibly different ) many - sorted ﬁrst - order logic lan - guages : Source and target of the analogy - making process are deﬁned in terms of axiomatizations , i . e . , given by a ﬁnite set of formulae . HDTP follows a generalization - based approach to analogy - making : Given both domains , a common generalization encompassing structurally shared elements common to both input domains is computed ( mapping phase ) and this generalization then guides the analogical alignment and knowledge transfer process of unmatched knowledge from the source to the target domain used for establishing new hypotheses ( transfer phase ) . See Fig . 1 for a conceptual overview of the entire analogy mechanism . More precisely , HDTP uses many - sorted term algebras to deﬁne the input conceptual domains ( i . e . , one source and one target domain for the later analogy ) . A term algebra requires two ingredi - ents : a signature and a set of variables . Deﬁnition 1 A many - sorted signature Σ = (cid:104) Sort , F unc (cid:105) is a tuple containing a ﬁnite set Sort of sorts , and a ﬁnite set F unc of function symbols . An n - ary function symbol f ∈ F unc is speciﬁed by f : s 1 × s 2 × · · · × s n → s , where s , s 1 , . . . , s n ∈ Sort . We will consider function symbols of any non - negative arity , and we will use 0 - ary function symbols to represent constants . Deﬁnition 2 Let Σ = (cid:104) Sort , F unc (cid:105) be a many - sorted signature , and let V = { x 1 : s 1 , x 2 : s 2 , . . . } be an inﬁnite set of sorted variables , where the sorts are chosen from Sort . Associated with each variable x i : s i is an arity , analogous to the arity of function symbols above . For any i ≥ 0 , we let 3 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA V i be the variables of arity i . The set T erm ( Σ , V ) and the function sort : T erm ( Σ , V ) → Sort are deﬁned inductively as follows : 1 . If x : s ∈ V , then x ∈ T erm ( Σ , V ) and sort ( x ) = s . 2 . If f : s 1 × s 2 × · · · × s n → s is a function symbol in Σ , and t 1 , . . . , t n ∈ T erm ( Σ , V ) with sort ( t i ) = s i for each i , then f ( t 1 , . . . , t n ) ∈ T erm ( Σ , V ) with sort ( f ( t 1 , . . . , t n ) ) = s . We refer to the structure (cid:104) T erm ( Σ , V ) , sort (cid:105) as a term algebra , often suppressing sort . As an example for a domain representation using HDTP’s language , Table 1 reproduces a possi - ble formalization of the concept of “horse” using some of a horse’s key characteristics ( this formal - ization reoccurs below as part of a bigger example demonstrating the conceptual blending capacities of the framework combining analogy and amalgams in Sect . 3 . 4 ) : Table 1 . Example formalization of a stereotypical characterization of a horse . Sorts : clade , entity , bodypart , ability Entities : mammal : clade horse : entity torso , legs : bodypart walk : ability Predicates : is _ of _ clade : entity × clade , has _ bodypart : entity × bodypart , has _ ability : entity × ability Laws of the horse characterization : is _ of _ clade ( horse , mammal ) has _ bodypart ( horse , legs ) has _ bodypart ( horse , torso ) has _ ability ( horse , walk ) Given two input domains , HDTP uses anti - uniﬁcation to compute a generalization of both do - mains . In this process , terms are generalized resulting in an anti - instance , where differing subterms are replaced by variables ; the original terms can be restored by inverting the procedure , i . e . , by replacing the new variables by appropriate subterms ( also see Fig . 2 below ) . These “replacements” can be formalized as substitutions : Deﬁnition 3 Given term algebra T erm ( Σ , V ) . A term substitution is a partial function σ : V → T erm ( Σ , V ) mapping variables to terms , formally represented by σ = { x 1 → t 1 , . . . , x n → t n } provided each of the x i is unique and the sorts of the variables and terms match . An application of a substitution σ on a term is deﬁned inductively by : 1 . apply ( x , σ ) = (cid:40) t x → t ∈ σ x otherwise . 2 . apply ( f ( t 1 , . . . , t n ) , σ ) = f ( apply ( t 1 , σ ) , . . . , apply ( t n , σ ) ) . Given two terms t , t (cid:48) and a substitution σ such that apply ( t , σ ) = t (cid:48) , then we call t (cid:48) an instance of t and t an anti - instance of t (cid:48) . We will often shorten apply ( t , σ ) = t (cid:48) to t σ −→ t (cid:48) , or t → t (cid:48) if the substitution is clear from context . Using substitutions , also generalizations can formally be characterized , with the least general generalization playing a special role as most speciﬁc anti - uniﬁer ( i . e . , as minimal with respect to the instantiation order ) : 4 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING Figure 2 . Examples for all four types of unit substitutions admissible in HDTP’s restricted form of higher - order anti - uniﬁcation : ( a ) shows the variable renamings X / Y and X / Z , ( b ) exempliﬁes ﬁxations of argument variables and ( c ) gives the corresponding counterparts for function variables , ( d ) represents two argument insertions , and ( e ) illustrates an argument permutation . Deﬁnition 4 Let f , g be terms from a term algebra T erm ( Σ , V ) . A generalization of f and g is a triple (cid:104) G , σ , τ (cid:105) where G ∈ T erm ( Σ , V ) and σ , τ are substitutions such that G σ −→ f and G τ −→ g . The generalization (cid:104) G , σ , τ (cid:105) is called the least general generalization ( LGG ) if for any generalization (cid:104) G (cid:48) , σ (cid:48) , τ (cid:48) (cid:105) of f , g , there exists a substitution φ such that G (cid:48) φ −→ G . As shown by Plotkin ( 1970 ) , the LGG is unique when considering only ﬁrst - order anti - uniﬁcation between terms . Against this background , Schwering et al . ( 2009 ) describe a restricted form of higher - order anti - uniﬁcation applied in HDTP , deﬁned as using the composition of a number of unit substitutions operating on higher - order terms . Deﬁnition 5 The following are the types of unit substitutions allowed in restricted higher - order anti - uniﬁcation . 1 . A renaming ρ ( F , F (cid:48) ) replaces a variable F ∈ V n with another variable F (cid:48) ∈ V n : F ( t 1 , . . . , t n ) ρ ( F , F (cid:48) ) −−−−−→ F (cid:48) ( t 1 , . . . , t n ) . 2 . A ﬁxation φ ( F , f ) replaces a variable F ∈ V n with a function symbol f ∈ C n : F ( t 1 , . . . , t n ) φ ( F , f ) −−−−→ f ( t 1 , . . . , t n ) . 3 . An argument insertion ι ( F , F (cid:48) , V , i ) is deﬁned as follows , for F ∈ V n , F (cid:48) ∈ V n − k + 1 , V ∈ V k , i ∈ [ n ] : F ( t 1 , . . . , t n ) ι ( F , F (cid:48) , V , i ) −−−−−−−→ F (cid:48) ( t 1 , . . . , t i − 1 , V ( t i , . . . , t i + k ) , t i + k + 1 , . . . , t n ) . It “wraps” k of the subterms in a term using a k - ary variable , or can be used to insert a 0 - ary variable . 4 . A permutation π ( F , τ ) rearranges the arguments of a term , with F ∈ V n , τ : [ n ] → [ n ] a bijection : F ( t 1 , . . . , t n ) π ( F , τ ) −−−−→ F ( t π ( 1 ) , . . . , t π ( n ) ) . A restricted substitution is a substitution t → t (cid:48) which results from the composition of any sequence of unit substitutions transforming t into t (cid:48) . Fig . 2 gives generic examples for the different types of unit substitutions in HDTP’s version of restricted higher - order anti - uniﬁcation . Clearly , restricted substitutions are strictly more general than mere ( ﬁrst - order ) term substitu - tions . While for a given term t there are ( up to renaming ) still only ﬁnitely many anti - instances ( i . e . , 5 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA terms s with s → t ) , this generality unfortunately , among others , causes the LGG to be no longer necessarily unique . Therefore , HDTP ranks generalizations according to a complexity order on the complexity of generalization ( based on a complexity measure for substitutions ) , and ﬁnally chooses the least complex generalizations as preferred ones . From a practical point of view , it is also necessary to anti - unify not only terms , but formulae : HDTP extends the notion of generalization also to formulae by basically treating formulae in clause form and terms alike ( as positive literals are structurally equal to function expressions , and complex clauses in normal form may be treated component wise ) . Furthermore , analogies in general not only rely on an isolated pair of formulae from source and target , but on two sets of formulae , making it necessary to extend the notion of anti - uniﬁcation accordingly : Deﬁnition 6 Let T h ( Ax ) denote the set of all formulas that can be syntactically derived from a set of axioms Ax , i . e . , T h ( Ax ) = { φ | Ax (cid:96) φ } , and let G be a ﬁnite set of formulae . G is an anti - instance of a set of formulae F if and only if there exists a substitution σ such that T h ( apply ( G , σ ) ) ⊆ T h ( F ) . Given substitutions σ and τ , (cid:104) G , σ , τ (cid:105) is a generalization of two sets of formulae S and T if and only if G σ −→ S and G τ −→ T . As a simple example , we take the “horse” formalization from Table 1 and the stereotypical characterization of a dog given in Table 2 , and generalize them into the shared generalization in Table 3 . Table 2 . Example formalization of a stereotypical characterization of a dog . Sorts : clade , entity , bodypart , ability Entities : mammal : clade dog : entity tail : bodypart drool : ability Predicates : is _ of _ clade : entity × clade , has _ bodypart : entity × bodypart , has _ ability : entity × ability Laws of the dog characterization : is _ of _ clade ( dog , mammal ) has _ bodypart ( dog , tail ) has _ ability ( dog , drool ) Table 3 . Shared generalization of the “horse” and “dog” formalizations from Tables 1 and 2 , respectively . Sorts : clade , entity , bodypart , ability Entities : mammal : clade E : entity B : bodypart A : ability Predicates : is _ of _ clade : entity × clade , has _ bodypart : entity × bodypart , has _ ability : entity × ability Laws of the horse characterization : is _ of _ clade ( E , mammal ) has _ bodypart ( E , B ) has _ ability ( E , A ) When processing sets of formulae , a heuristic is applied for iteratively selecting pairs of for - mulae to be generalized : Coherent mappings outmatch incoherent ones , i . e . , mappings in which substitutions can be reused are preferred over isolated substitutions , as they are assumed to be better suited to induce the analogical relation . 6 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING Finally , HDTP in its heuristics also aims to maximize the coverage of generalizations : Deﬁnition 7 Given a generalization (cid:104) G , σ , τ (cid:105) of two sets of axioms S and T , T h ( apply ( G , σ ) ) ⊆ T h ( S ) is said to be covered by G , and for T accordingly . The degree to which G covers T h ( S ) is called the coverage of G , with a generalization (cid:104) G , σ , τ (cid:105) having at least the same coverage as (cid:104) G (cid:48) , σ (cid:48) , τ (cid:48) (cid:105) if there exists a substitution θ for which it holds that G (cid:48) θ −→ G , σ (cid:48) = σ ◦ θ , and τ (cid:48) = τ ◦ θ ( inducing a partial order over generalizations ) . In general , while there are some constraining factors which have to be taken into account ( Schwering et al . , 2009 ) , maximizing the coverage of an analogy seems meaningful as this also automatically increases the domain support for the corresponding analogy . Once obtained , the generalized theory and the substitutions specify the analogical relation , and formulae of the source for which no correspondence in the target domain can be found may , by means of the already established substitutions , be transferred to the target , constituting a process of analogical transfer between the domains . Concerning applications of HDTP , for instance Guhe et al . ( 2010 ) apply the framework in modeling a potential inductive analogy - based process for establishing the fundamental concepts of arithmetics , Schwering et al . ( 2009 ) use HDTP for solving geometric analogies , and Besold ( 2014 ) summarizes a series of studies applying the framework to modeling analogy use in education and teaching situations . 2 . 2 Combining Conceptual Theories Using Amalgams The notion of amalgams was developed in the context of Case - based Reasoning ( CBR ) ( Ontañón & Plaza , 2010 ) , where new problems are solved based on previously solved problems ( or cases , residing on a case base ) . Solving a new problem often requires more than one case from the case base , so their content has to be combined in some way to solve the new problem . The notion of amalgam of two cases ( two descriptions of problems and their solutions ) is a proposal to formalize the ways in which cases can be combined to produce a new , coherent case . Formally , the notion of amalgams can be deﬁned in any representation language L for which a subsumption relation (cid:118) between the formulas ( or descriptions ) of L can be deﬁned . We say that a description I 1 subsumes another description I 2 ( I 1 (cid:118) I 2 ) when I 1 is more general ( or equal ) than I 2 . Additionally , we assume that L contains the inﬁmum element ⊥ ( or ‘any’ ) , and the supremum element (cid:62) ( or ‘none’ ) with respect to the subsumption order . Next , for any two descriptions I 1 and I 2 in L we can deﬁne their uniﬁcation , ( I 1 (cid:116) I 2 ) , which is the most general specialization of two given descriptions , and their anti - uniﬁcation , ( I 1 (cid:117) I 2 ) , deﬁned as the least general generalization of two descriptions , representing the most speciﬁc description that subsumes both . Intuitively , a uniﬁer is a description that has all the information in both the original descriptions ; when joining this information yields to inconsistency this is equivalent to say that I 1 (cid:116) I 2 = (cid:62) , they have no common specialization except ‘none’ . The anti - uniﬁcation I 1 (cid:117) I 2 contains all that is common to both I 1 and I 2 ; when they have nothing in common then I 1 (cid:117) I 2 = ⊥ . Depending on L anti - uniﬁcation and uniﬁcation might be unique or not . The notion of amalgam can be conceived of as a generalization of the notion of uniﬁcation : as ‘partial uniﬁcation’ ( Ontañón & Plaza , 2010 ) . Uniﬁcation means that what is true for I 1 or I 2 is also 7 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA I 1 I 2 ¯ I 2 ¯ I 1 G = I 1 u I 2 A = ¯ I 1 t ¯ I 2 v v v v v v v v Figure 3 . A diagram of an amalgam A from inputs I 1 and I 2 where A = ¯ I 1 (cid:116) ¯ I 2 . true for I 1 (cid:116) I 2 ; e . g . if I 1 describes ‘a red vehicle’ and I 2 describes ‘a German minivan’ then their uniﬁcation yields a common specialization like ‘a red German minivan . ’ Two descriptions may pos - sess information that yields an inconsistency when uniﬁed ; for instance ‘a red French sedan’ and ‘a blue German minivan’ have no common specialization except (cid:62) . An amalgam of two descriptions is a new description that contains parts from these two descriptions . For instance , an amalgam of ‘a red French sedan’ and ‘a blue German minivan’ is ‘a red German sedan’ ; clearly there are always multiple possibilities for amalgams , like ‘a blue French minivan’ . For the purposes of this paper we can deﬁne an amalgam of two input descriptions as follows : Deﬁnition 8 ( Amalgam ) A description A ∈ L is an amalgam of two inputs I 1 and I 2 ( with anti - uniﬁcation G = I 1 (cid:117) I 2 ) if there exist two generalizations ¯ I 1 and ¯ I 2 such that ( 1 ) G (cid:118) ¯ I 1 (cid:118) I 1 , ( 2 ) G (cid:118) ¯ I 2 (cid:118) I 2 , and ( 3 ) A = ¯ I 1 (cid:116) ¯ I 2 When the ¯ I 1 and ¯ I 2 have no common specialization then trivially A = (cid:62) , since their only uniﬁer is “none” . For our purpose we will be only interested in non - trivial amalgams . This deﬁnition is illustrated in Fig . 3 , where the anti - uniﬁcation of the inputs is indicated as G , and the amalgam A is the uniﬁcation of two concrete generalizations ¯ I 1 and ¯ I 2 of the inputs . Equal - ity here should be understood as (cid:118) - equivalence : X = Y iff X (cid:118) Y and Y (cid:118) X . Conventionally , we call the space of amalgams of I 1 and I 2 the set of all amalgams A that satisfy the deﬁnition above . Usually we are interested only on maximal amalgams of two input descriptions , i . e . , those amal - gams that contain maximal parts of their inputs that can be uniﬁed into a new coherent description . Formally , an amalgam A of inputs I 1 and I 2 is maximal if there is no other non - trivial amalgam A (cid:48) of inputs I 1 and I 2 such that A (cid:64) A (cid:48) . The reason why we are interested in maximal amalgams is very simple : a non - maximal amalgam ¯ A (cid:64) A preserves less compatible information from the inputs than the maximal amalgam A ; conversely , any non - maximal amalgam ¯ A can be obtained by generalizing a maximal amalgam A , since ¯ A (cid:64) A . There is a special case of particular interest that is called asymmetric amalgam , in which the two inputs play different roles . The inputs are called source and target , and while the source is allowed to be generalized , the target is not . Deﬁnition 9 ( Asymmetric Amalgam ) An asymmetric amalgam A ∈ L of two inputs S ( source ) and T ( target ) satisﬁes that A = S (cid:48) (cid:116) T for some generalization of the source S (cid:48) (cid:118) S . 8 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING v v v v v v A = S 0 t T S 0 S T G = S u T Figure 4 . A diagram that transfers content from source S to a target T via an asymmetric amalgam A . As shown in Fig . 4 , the content of target T is transferred completely into the asymmetric amalgam , while the source S is generalized . The result is a form of partial uniﬁcation that preserves all the information in T while relaxing S by generalization and then unifying one of those generalization S (cid:48) with T itself . As before , we will usually be interested in maximal amalgams : in this case , a maximal amalgam corresponds to transferring as much content from S to T while keeping the resulting amalgam A consistent . For these reason , asymmetric amalgam can be seen as a model of analogical inference , where information from the source is transferred to the target by creating a new amalgam A that enriches the target T with the content of S (cid:48) ( Ontañón & Plaza , 2012 ) . 3 . COINVENT’s Account of Analogy - Based Concept Blending 3 . 1 The Idea ( s ) Behind Concept Blending in COINVENT : An Analogy - Inspired View One of the early formal accounts on concept blending , which is especially inﬂuential to the approach applied in COINVENT , is the classical work by Goguen using notions from algebraic speciﬁcation and category theory ( Goguen , 2006 ) . This version of concept blending can be described by the diagram in Fig . 5 , where each node stands for a representation an agent has of some concept or conceptual domain . We will call these representations “conceptual spaces” and in some cases abuse terminology by using the word “concept” to really refer to its representation by the agent . The arrows stand for morphisms , that is , functions that preserve at least part of the internal structure of the related conceptual spaces . The idea is that , given two conceptual spaces I 1 and I 2 as input , we look for a generalization G and then construct a blend space B in such a way as to preserve as many as possible structural alignments between I 1 and I 2 established by the generalization . This may involve taking the functions to B to be partial , in that not all the structure from I 1 and I 2 might be mapped to B . In any case , as the blend respects ( to the largest possible extent ) the relationship between I 1 and I 2 , the diagram will commute . Concept invention by concept blending can then be phrased as the following task : given two axiomatizations of two domain theories I 1 and I 2 , we need ﬁrst , to compute a generalized theory G of I 1 and I 2 ( which codes the commonalities between I 1 and I 2 ) and second , to compute the blend theory B in a structure preserving way such that new properties hold in B . Ideally , these new properties in B are considered to be ( moderately ) interesting properties . In what follows , for reasons of simplicity and without loss of generality we assume that the additional properties are just provided by one of the two domains , i . e . , we align the situation with a standard setting in computational analogy - making by renaming I 1 and I 2 : The domain providing the additional 9 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA G (cid:127) (cid:127) (cid:15) (cid:15) (cid:31) (cid:31) I 1 (cid:31) (cid:31) I 2 (cid:127) (cid:127) B Figure 5 . A conceptual overview of ( Goguen , 2006 ) ’s account of conceptual blending . properties for the concept blend will be called source S , the domain providing the conceptual basis and receiving the additional features will be called target T . The reasoning process in COINVENT is then triggered by the computation of the generalization G ( generic space ) by HDTP . For concept invention we will only need the mapping mechanism and replace the transfer phase by a new blending algorithm . The mapping is achieved via the usual gen - eralization process between S and T , in which pairs of formulas from the source and target spaces are anti - uniﬁed resulting in a generalized theory that reﬂects common aspects of both spaces . The generalized theory can be projected into the original spaces by substitutions which are computed during anti - uniﬁcation . In what follows , we will say that a formula is covered by the analogy , if it is in the image of this projection ( T c and S c , respectively ) , otherwise it is uncovered ( also see Sect . 2 . 1 ) . While in analogy making the analogical relations are used in the transfer phase to translate additional uncovered knowledge from the source to the target space , blending combines additional ( uncovered ) facts from one or both spaces . Therefore the process of blending can build on the generalization and substitutions provided by the analogy engine , but has to include a new mechanism for transfer and concept combination . Here , amalgams naturally come into play : The set of substitutions can be inverted and applied to generalize the original source theory S into a more general version S (cid:48) ( forming a superset of the shared generalization G , also including previously un - covered knowledge from the source ) which then can be combined into an asymmetric amalgam with the target theory T , forming the ( possibly underspeciﬁed ) proto - blend T (cid:48) of both . In a ﬁnal step , T (cid:48) is then completed into the blended theory and output of the process T B by applying corresponding specialization steps stored from the generalization process between S and T ( see also Fig . 6 ) . 3 . 2 Implementing the Model Using HDTP and Asymmetric Amalgams One of the project aims of COINVENT is an implementation of the general blending model sketched in the previous section into a system producing novel and useful output theories , fully integrating HDTP and the amalgam framework . In what follows , we present an intermediate version on the way to this goal : A blend is taken to be novel if it is not a subset of or equal to the source or the target domain , usefulness is deﬁned as consistency of the resulting theory , the generalization step uses a further constrained variant of restricted higher - order anti - uniﬁcation , applying only ﬁxations and renamings , the amalgamation uses higher - oder uniﬁcation as combination mechanism , and logical semantic consequence serves as ordering relationship : 10 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING G φ T (cid:127) (cid:127) φ S (cid:31) (cid:31) G = S (cid:48) (cid:117) T (cid:118) (cid:121) (cid:121) (cid:118) (cid:37) (cid:37) T c ⊆ (cid:127) (cid:127) S c ⊆ (cid:31) (cid:31) S (cid:48) (cid:118) (cid:37) (cid:37) φ S (cid:118) (cid:127) (cid:127) T (cid:118) (cid:121) (cid:121) T analogical relation S T (cid:48) φ T (cid:118) (cid:15) (cid:15) T B Figure 6 . A conceptual overview of the analogy - inspired perspective on COINVENT’s account of concept blending as described in Sect . 3 . 1 : The shared generalization G from S and T is computed with φ S ( G ) = S c . The relation φ S is subsequently re - used in the generalization of S into S (cid:48) , which is then combined in an asymmetric amalgam with T into the proto - blend T (cid:48) = S (cid:48) (cid:116) T and ﬁnally , by application of φ T , completed into the blended output theory T B . ( ⊆ indicates an element - wise subset relationship between sets of axioms and (cid:118) indicates subsumption between theories in the direction of the respective arrows . ) 1 . Given two input domain theories S and T , the ( set of ) common generalization ( s ) G = { G 1 , G 2 , . . . , G n } , i . e . , the anti - uniﬁed forms of sets of axioms which are structurally shared between S and T is computed . In COINVENT , HDTP is used for this step : In the present version of the algorithm , only renamings and ﬁxations are used as admissible types of unit substitutions . As the least general generalization under restricted higher - order anti - uniﬁcation is ( still ) not unique ( also see Sect . 2 . 1 ) , the anti - uniﬁcation itself returns several possible least general generalizations out of which the system choses one generalization G x using heuris - tics . 2 . Given this generalized theory G x , together with the associated two sets of substitutions φ x , S and φ x , T respectively corresponding to the covered parts S c ⊆ S and T c ⊆ T of the input domain theories , the set of higher - order anti - uniﬁcations φ − 1 x , S ( inversely related to the substi - tutions φ x , S ) is then used to generalize the previous source domain theory S as far as possible into the generalized source theory S (cid:48) such that φ x , S ( S (cid:48) ) = S . Here , if S = S c , i . e . , all axioms from S could be matched and anti - uniﬁed with axioms from T in the previous step ( constitut - ing a pathological case as S is supposed to provide some additional content over and above T ) , it holds that S = φ x , S ( G x ) and , thus , S (cid:48) = G x ; otherwise G x ⊆ S (cid:48) . Notice that , due to the restriction to ﬁxations and renamings in the higher - order anti - uniﬁcations , it holds that S | = S (cid:48) | = G in both cases . ( Here , ⊆ indicates an element - wise subset relationship between sets of axioms as in Fig . 6 , and | = indicates the classical semantic consequence relation in the logical sense . ) 3 . Now , given S (cid:48) , we can compute the asymmetric amalgam between S (cid:48) and T ( with T staying ﬁxed ) using higher - order uniﬁcation and the semantic consequence relation as subsumption relation for reﬁnement ( i . e . , given two theories A and B it holds that A is more general than B , A (cid:118) B , if and only if B | = A ) : Axioms from S (cid:48) and T are uniﬁed pairwise as far as 11 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA possible ( i . e . , a subset of S (cid:48) of maximum cardinality is uniﬁed with a similar subset of T ) . Conveniently , for the part of S (cid:48) which is contained in S c under φ x , S this is equal to T c , so only axioms from { a | a ∈ S (cid:48) ∧ φ x , S ( a ) / ∈ S c } and from T \ T c , respectively , have to be checked . 2 Subsequently , the remaining axioms from both theories are added as additional elements to the resulting uniﬁed set of axioms , resulting in an enriched target theory T (cid:48) . 3 4 . Remaining variables not instantiated by the uniﬁcation step between S (cid:48) and T (cid:48) ( i . e . , imported in axioms from S (cid:48) ) in the enriched target theory ( or proto - blend ) T (cid:48) are instantiated by ap - plying the set of substitutions φ x , T from the initial generalization step to T (cid:48) , resulting in the ( fully instantiated ) blended theory T B . ( If T (cid:48) does not contain any variables it trivially holds that T (cid:48) = φ x , T ( T (cid:48) ) = T B and this step becomes obsolete . ) 5 . A check for consistency of the blended theory T B is conducted ( both internally as well as with respect to potentially available world knowledge ) . As we are only interested in non - trivial amalgams ( i . e . , consistent output theories ) , if an inconsistency is found , clash resolution tries to solve the inconsistency by returning to step 1 . , removing one or several axioms from S resulting in a new source theory S clash ⊆ S , and then re - initiating the procedure . The resulting blend theory T B is based on T , ( consistently ) enriched by imported “unaffected” axioms and ( via generalization from S to S (cid:48) , and re - instantiation from T (cid:48) to T B ) adapted structural elements from S . This blend forms the ( in a certain concept theoretical sense ) “closest” blend to T and can presumably play an important role in different contexts : for instance it can account for the addition of new solution elements to a solution idea at hand in problem - solving scenarios , and in creativity tasks the addition of novel features and elements to existing concepts can be achieved . Clearly , this is only a partial solution on the way to meeting COINVENT’s aims , requiring fur - ther algorithmic and conceptual development : The inconsistency resolution in step 5 can probably be made signiﬁcantly more efﬁcient by developing heuristics for efﬁciently selecting axioms for re - moval , the simple identiﬁcation between usefulness and consistency might not be enough for many contexts , and methods for assessing the novelty of the resulting blend ( also allowing for compar - isons between different possible blends ) have to be developed and integrated . In the following section , we want to exemplify our approach in two application cases : A concept blending account on Rutherford’s classical analogy between the solar system and the atom , and a re - creation of Pegasus as concept blend between a horse and a bird in classical mythology . 3 . 3 Example 1 : Rutherford’s Model of the Solar System as Scientiﬁc Concept Blending Rutherford’s analogy for deriving his model of the atom from a theory of the solar system , together with certain experimental observations and physical laws known by his time , has become a running example in the literature on computational analogy - making —see , for instance , ( Falkenhainer , For - bus , & Gentner , 1989 ; Schwering et al . , 2009 ) . In what follows we will show that it can also be understood as a concept blending process and can be modeled with the approach presented above . 2 . The maximality of the outcome is rooted in HDTP’s previously mentioned coverage maximization . 3 . Note that the uniﬁcations and addition of axioms conserve the | = relation between theories and , thus , the subsumption ordering as indicated in Fig . 6 . 12 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING Table 4 . Domain formalization of the solar system ( S ) and of Rutherford’s atom model ( T ) as used by HDTP . Sorts : real , object , time Entities : sun , planet , nucleus , electron : object Shared functions of both theories : mass : object → real × { kg } dist : object × object × time → real × { m } Functions of the solar system theory : force : object × object × time → real × { N } gravity : object × object × time → real × { N } centrifugal : object × object × time → real × { m } Predicates of the solar system theory : revolves _ around : object × object Facts of the solar system theory : ( α 1 ) mass ( sun ) > mass ( planet ) ( α 2 ) mass ( planet ) > 0 ( α 3 ) ∀ t : time : gravity ( planet , sun , t ) > 0 ( α 4 ) ∀ t : time : dist ( planet , sun , t ) > 0 Laws of the solar system theory : ( α 5 ) ∀ t : time , o 1 : object , o 2 : object : dist ( o 1 , o 2 , t ) > 0 ∧ gravity ( o 1 , o 2 , t ) > 0 → centrifugal ( o 1 , o 2 , t ) = − gravity ( o 1 , o 2 , t ) ( α 6 ) ∀ t : time , o 1 : object , o 2 : object : 0 < mass ( o 1 ) < mass ( o 2 ) ∧ dist ( o 1 , o 2 , t ) > 0 ∧ centrifugal ( o 1 , o 2 , t ) < 0 → revolves _ around ( o 1 , o 2 ) Functions of the atom model theory : coulomb : object × object × time → real × { N } Facts of the atom model theory : ( β 1 ) mass ( nucles ) > mass ( electron ) ( β 2 ) mass ( electron ) > 0 ( β 3 ) ∀ t : time : coulomb ( electron , nucleus , t ) > 0 ( β 4 ) ∀ t : time : dist ( electron , nucleus , t ) > 0 Table 4 gives the initial domain formalizations , containing a governing theory of the solar system S and an account of Rutherford’s alleged knowledge T about some aspects relating to the atom’s structure . When provided with these inputs , HDTP is used to compute a shared generalization G between S and T , together with the corresponding sets of substitutions φ S and φ T for re - obtaining the covered domain parts S c ⊆ S and T c ⊆ T . Given φ S , the set of anti - uniﬁcations inversely corresponding to the respective substitutions is used for obtaining the generalized source theory S (cid:48) ( given in Table 5 ) , not only containing elements of the generalization corresponding to axioms from S c but also generalizing axioms from S \ S c . Also notice that for the given formalizations of S and T it holds that T = T c , i . e . , the target theory is entirely covered by the common generalization G . The generalized source theory S (cid:48) is now used to compute an asymmetric amalgam with ( the unchanged ) domain theory T , pairwise unifying axioms from S (cid:48) with T . Due to T being completely covered by the common generalization , all elements from T can be directly uniﬁed with elements from S (cid:48) , leaving out only the deﬁnition of the centrifugal function , the revolves _ around predicate , and the laws γ 5 and γ 6 on the side of S (cid:48) . These axioms are then added as additional elements to the uniﬁed set of axioms , resulting in the proto - blend theory T (cid:48) . As γ 5 and γ 6 contain non - instantiated variables obtained by generalizing S into S (cid:48) , we now apply φ T to T (cid:48) , resulting in the ﬁnal blended theory T B , giving an account of the atom model with the electrons revolving around the nucleus in stable orbits due to the equality between coulomb and centrifugal force . A consistency check of T then conﬁrms that the resulting blend is consistent and , thus , the procedure terminates . 13 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA Table 5 . Generalized source theory S (cid:48) based on the common generalization between the solar system and the Rutherford atom ( axioms not obtained from the covered subset S c are highlighted by * ) . Sorts : real , object , time Entities : X , Y : object Functions : mass : object → real × { kg } dist : object × object × time → real × { m } F : object × object × time → real × { N } centrifugal : object × object × time → real × { m } Predicates : revolves _ around : object × object Facts : ( γ 1 ) mass ( X ) > mass ( Y ) ( γ 2 ) mass ( Y ) > 0 ( γ 3 ) ∀ t : time : F ( X , Y , t ) > 0 ( γ 4 ) ∀ t : time : dist ( X , Y , t ) > 0 Laws : ( γ 5 ∗ ) ∀ t : time , o 1 : object , o 2 : object : dist ( o 1 , o 2 , t ) > 0 ∧ F ( o 1 , o 2 , t ) > 0 → centrifugal ( o 1 , o 2 , t ) = − F ( o 1 , o 2 , t ) ( γ 6 ∗ ) ∀ t : time , o 1 : object , o 2 : object : 0 < mass ( o 1 ) < mass ( o 2 ) ∧ dist ( o 1 , o 2 , t ) > 0 ∧ centrifugal ( o 1 , o 2 , t ) < 0 → revolves _ around ( o 1 , o 2 ) Clearly , this example stays very close to the classical analogy case . Still , we maintain that the concept blending perspective also offers a valid view on what is going on as the combination of the initial observations about a few aspects of the inner workings of the atom and the governing theory of the solar system adds previously unconsidered and at ﬁrst not directly connected aspects to the the former : the axiom about stable orbits for atoms σ 6 can only be meaningfully integrated due to the presence of the ( also new ) axiom σ 5 , establishing the correspondence relationship between centrifugal and coulomb force . Thus , we can see a qualitative change and a signiﬁcant step of contentual evolution between T and T B 3 . 4 Example 2 : Pegasus as Mythological Concept Blend One of the best known concept blends is Pegasus , the winged divine stallion and son of Poseidon and the Gorgon Medusa from classical Greek mythology . From a concept blending perspective , Pegasus constitutes a blend between a stereotypical horse and a stereotypical bird , maintaining all the horse characteristics but adding bird - like features such as , for instance , the wings and the ability to ﬂy . In what follows , we will re - construct the blending process underlying Pegasus’ concept formation as second application example for the analogy - based perspective on blending in COINVENT . We start with the stereotypical characterizations of a horse and a bird in a many - sorted ﬁrst - order logic representation ( as used by HDTP ) from Table 6 . Given these characterizations , HDTP can be used for ﬁnding a common generalization of both , subsequently again using the anti - uniﬁcations corresponding to φ S for generalizing the source theory S into S (cid:48) as given in Table 7 . Computing the asymmetric amalgam of S (cid:48) with the ( ﬁxed ) target theory T , we obtain the proto - blend T (cid:48) from Table 8 . As T (cid:48) still features axioms containing non - instantiated variables , φ T is applied to the theory resulting in the ( with respect to φ T ) fully instantiated blend theory T B from Table 9 . In a ﬁnal step , a consistency check of the blended theory T B is performed . Taking into account world knowledge about mammals causes a clash with axiom δ 7 as mammals generally do not lay 14 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING Table 6 . Example formalizations of stereotypical characterizations for a bird S and a horse T . Sorts : clade , entity , bodypart , ability Entities : mammal , avialae : clade horse , bird : entity torso , legs , wings : bodypart walk , ﬂy , lay _ eggs : ability Predicates : is _ of _ clade : entity × clade , has _ bodypart : entity × bodypart , has _ ability : entity × ability Laws of the bird characterization : ( α 1 ) is _ of _ clade ( bird , avialae ) ( α 2 ) has _ bodypart ( bird , legs ) ( α 3 ) has _ bodypart ( bird , torso ) ( α 4 ) has _ bodypart ( bird , wings ) ( α 5 ) has _ ability ( bird , walk ) ( α 6 ) has _ ability ( bird , ﬂy ) ( α 7 ) has _ ability ( bird , lay _ eggs ) Laws of the horse characterization : ( β 1 ) is _ of _ clade ( horse , mammal ) ( β 2 ) has _ bodypart ( horse , legs ) ( β 3 ) has _ bodypart ( horse , torso ) ( β 4 ) has _ ability ( horse , walk ) Table 7 . Abbreviated representation of the generalized source theory S (cid:48) based on the stereotypical character - izations for a horse and a bird ( axioms not obtained from the covered subset S c are highlighted by * ) . Entities : C : clade , E : entity Laws : ( γ 1 ) is _ of _ clade ( E , C ) ( γ 2 ) has _ bodypart ( E , legs ) ( γ 3 ) has _ bodypart ( E , torso ) ( γ 4 ) has _ ability ( E , walk ) ( γ 5 ∗ ) has _ bodypart ( E , wings ) ( γ 6 ∗ ) has _ ability ( E , ﬂy ) ( γ 7 ∗ ) has _ ability ( E , lay _ eggs ) Table 8 . Abbreviated representation of the proto - blend T (cid:48) obtained from computing the asymmetric amalgam between S (cid:48) and T ( axioms from S (cid:48) which had not been obtained from S c are highlighted by * ) . Entities : E : entity Laws : ( δ 1 ) is _ of _ clade ( horse , mammal ) ( δ 2 ) has _ bodypart ( horse , legs ) ( δ 3 ) has _ bodypart ( horse , torso ) ( δ 4 ) has _ ability ( horse , walk ) ( δ 5 ∗ ) has _ bodypart ( E , wings ) ( δ 6 ∗ ) has _ ability ( E , ﬂy ) ( δ 7 ∗ ) has _ ability ( E , lay _ eggs ) Table 9 . Abbreviated representation of T B = φ T ( T (cid:48) ) ( axioms which have been instantiated from axioms that had originally not been obtained from S c are highlighted by * ) . Laws : ( δ 1 ) is _ of _ clade ( horse , mammal ) ( δ 2 ) has _ bodypart ( horse , legs ) ( δ 3 ) has _ bodypart ( horse , torso ) ( δ 4 ) has _ ability ( horse , walk ) ( δ 5 ∗ ) has _ bodypart ( horse , wings ) ( δ 6 ∗ ) has _ ability ( horse , ﬂy ) ( δ 7 ∗ ) has _ ability ( horse , lay _ eggs ) eggs . Thus , returning to the start of the procedure , we can re - initiate the algorithm , for example , with S clash = S \ { α 7 } , and ﬁnally obtain the ( with respect to φ T fully instantiated and consistent ) version of T B given in Table 10 as output . 15 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA Table 10 . Abbreviated representation of the ﬁnal blended theory T B after inconsistency check and repair ( i . e . , based on S clash = S \ { α 7 } ) . Laws : ( δ 1 ) is _ of _ clade ( horse , mammal ) ( δ 2 ) has _ bodypart ( horse , legs ) ( δ 3 ) has _ bodypart ( horse , torso ) ( δ 4 ) has _ ability ( horse , walk ) ( δ 5 ) has _ bodypart ( horse , wings ) ( δ 6 ) has _ ability ( horse , ﬂy ) 4 . Conclusions In the previous sections we presented an analogy - inspired perspective on and a working algorithm for the blending of concept theories taken from ongoing research within the COINVENT project . The main contributions are the combination of generalization - based analogy and ( a restricted ver - sion of ) the HDTP system with a well - founded formal model and mechanism for knowledge transfer and concept combination in form of the amalgam framework : Building upon HDTP’s approach to generalization and domain matching asymmetric amalgams allow to soundly compute the concept blend of two input theories in a controlled fashion . The next step on the formal side in the development of our concept blending framework ( other than the aspects already mentioned in Sect . 3 . 2 ) will be to remove the restriction on the substitutions used in HDTP , allowing for applications of all four types of substitutions admissible in restricted higher - order anti - uniﬁcation . If this constraint is lifted , a replacement for the semantic consequence relationship | = as basis for the subsumption ordering will have to be found . Here , we hope that providing a semantics to the syntax - based operations in HDTP and restricted higher - order anti - uniﬁcation via derived signature morphisms ( Krumnack , Mossakowski , & Maibaum , 2014 ) will allow us to subsequently construct a suitable substitute . Clearly , ours is by far not the only attempt at the computational modeling of concept blending , nor is it the only point of view represented within COINVENT : For instance Martinez et al . ( 2014 ) recently presented an approach for algorithmic blending of mathematical theories also building upon Goguen ( 2006 ) ’s ideas , Kutz et al . ( 2015 ) give an account and a system model of computer - based blending of ontologies , and Li et al . ( 2012 ) report on case studies of systems taking into account goals and contexts in the blending - based production of creative artifacts . Still , in combining the generality of modeling introduced by HDTP’s use of ﬁrst - order logic languages with the formal soundness and solid theoretical foundations of the underlying generalization model and the amal - gam framework , the envisioned COINVENT system should constitute a valuable contribution to the ongoing discourse and a big step towards a computationally feasible model of concept blending . Acknowledgements The authors acknowledge the ﬁnancial support of the Future and Emerging Technologies pro - gramme within the Seventh Framework Programme for Research of the European Commission , under FET - Open grant number : 611553 ( COINVENT ) . 16 A NALOGY , A MALGAMS , AND C ONCEPT B LENDING References Aamodt , A . , & Plaza , E . ( 1994 ) . Case - based reasoning : Foundational issues , methodological vari - ations , and system approaches . AI Communications , 7 , 39 – 59 . Besold , T . R . ( 2014 ) . Sensorimotor Analogies in Learning Abstract Skills and Knowledge : Mod - eling Analogy - Supported Education in Mathematics and Physics . Proc . of the AAAI Fall 2014 Symposium on Modeling Changing Perspectives : Reconceptualizing Sensorimotor Experiences . Boden , M . A . ( 2003 ) . The creative mind : Myths and mechanisms . Routledge . Falkenhainer , B . , Forbus , K . , & Gentner , D . ( 1989 ) . The structure - mapping engine : Algorithm and examples . Artiﬁcial Intelligence , 41 , 1 – 63 . Fauconnier , G . , & Turner , M . ( 1998 ) . Conceptual integration networks . Cognitive Science , 22 , 133 – 187 . Gentner , D . , & Smith , L . A . ( 2013 ) . Analogical learning and reasoning . In D . Reisberg ( Ed . ) , The Oxford handbook of cognitive psychology , 668 – 681 . Oxford University Press . Goguen , J . ( 2006 ) . Mathematical models of cognitive space and time . Reasoning and Cognition ; Proc . of the Interdisciplinary Conference on Reasoning and Cognition ( pp . 125 – 128 ) . Goguen , J . A . , & Harrell , D . F . ( 2010 ) . Style : A computational and conceptual blending - based ap - proach . In S . Argamon , K . Burns , & S . Dubnov ( Eds . ) , The structure of style , 291 – 316 . Springer . Guhe , M . , Pease , A . , Smaill , A . , Schmidt , M . , Gust , H . , Kühnberger , K . - U . , & Krumnack , U . ( 2010 ) . Mathematical reasoning with higher - order anti - uniﬁcation . Proc . of the 32nd Annual Conference of the Cognitive Science Society ( pp . 1992 – 1997 ) . Cognitive Science Society . Hofstadter , D . , & Mitchell , M . ( 1994 ) . The copycat project : a model of mental ﬂuidity and analogy - making . Advances in Connectionist and Neural Computation Theory ( pp . 31 – 112 ) . Ablex . Krumnack , U . , Mossakowski , T . , & Maibaum , T . ( 2014 ) . What is a derived signature morphism ? Preliminary Proc . of WADT 2014 : 22nd International Workshop on Algebraic Development Tech - niques ( pp . 50 – 51 ) . Simion Stoilow Institute of Mathematics of the Romanian Academy . Kutz , O . , Bateman , J . , Neuhaus , F . , Mossakowski , T . , & Bhatt , M . ( 2015 ) . E pluribus unum . In T . R . Besold , M . Schorlemmer , & A . Smaill ( Eds . ) , Computational creativity research : Towards creative machines , Vol . 7 of Atlantis Thinking Machines , 167 – 196 . Atlantis Press . Li , B . , Zook , A . , Davis , N . , & Riedl , M . ( 2012 ) . Goal - driven conceptual blending : A computational approach for creativity . Proc . of the Third International Conference on Computational Creativity ( pp . 9 – 16 ) . Martinez , M . , Krumnack , U . , Smaill , A . , Besold , T . R . , Abdel - Fattah , A . M . , Schmidt , M . , Gust , H . , Kühnberger , K . - U . , Guhe , M . , & Pease , A . ( 2014 ) . Algorithmic aspects of theory blending . In G . Aranda - Corral , J . Calmet , & F . Martín - Mateos ( Eds . ) , Artiﬁcial intelligence and symbolic computation , Vol . 8884 of Lecture Notes in Computer Science , 180 – 192 . Springer . Ontañón , S . , & Plaza , E . ( 2010 ) . Amalgams : A formal approach for combining multiple case solu - tions . In I . Bichindaritz & S . Montani ( Eds . ) , Case - Based Reasoning : Research and Development , Vol . 6176 of Lecture Notes in Computer Science , 257 – 271 . Springer . 17 T . R . B ESOLD , K . - U . K ÜHNBERGER , AND E . P LAZA Ontañón , S . , & Plaza , E . ( 2012 ) . On knowledge transfer in case - based inference . In B . D . Agudo & I . Watson ( Eds . ) , Case - based reasoning research and development , Vol . 7466 of Lecture Notes in Computer Science , 312 – 326 . Springer . Pereira , F . C . ( 2007 ) . Creativity and AI : A conceptual blending approach . Mouton de Gruyter . Plotkin , G . D . ( 1970 ) . A note on inductive generalization . Machine Intelligence , 5 , 153 – 163 . Schmidt , M . , Krumnack , U . , Gust , H . , & Kühnberger , K . - U . ( 2014 ) . Heuristic - driven theory pro - jection : An overview . In H . Prade & G . Richard ( Eds . ) , Computational approaches to analogical reasoning : Current trends , 163 – 194 . Springer . Schwering , A . , Gust , H . , & Kühnberger , K . - U . ( 2009 ) . Solving Geometric Analogies with the Analogy Model HDTP . Proc . of the 31st Annual Meeting of the Cognitive Science Society ( pp . 1780 – 1785 ) . Cognitive Science Society . Schwering , A . , Krumnack , U . , Kühnberger , K . - U . , & Gust , H . ( 2009 ) . Syntactic principles of Heuristic - Driven Theory Projection . Journal of Cognitive Systems Research , 10 , 251 – 269 . Thagard , P . , & Stewart , T . C . ( 2011 ) . The aha ! experience : Creativity through emergent binding in neural networks . Cognitive Science , 35 , 1 – 33 . Veale , T . , & O’Donoghue , D . ( 2000 ) . Computation and blending . Cognitive Linguistics , 11 , 253 – 281 . Winston , P . H . ( 1980 ) . Learning and reasoning by analogy . Commun . ACM , 23 , 689 – 703 . 18