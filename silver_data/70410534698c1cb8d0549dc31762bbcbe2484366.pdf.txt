2023 IEEE 16th INTERNATIONAL CONFERENCE OF ACTUAL PROBLEMS OF ELECTRONIC INSTRUMENT ENGINEERING ( APEIE ) Detecting Money Laundering Patterns through Cash Flow Analysis : a Neural Network - Based Approach Pavel Y . Leonov Financial Monitoring Department NRNU MEPhI Moscow , Russia pyleonov @ mephi . ru Valentin A . Romanovsky Financial Monitoring Department NRNU MEPhI Moscow , Russia romanovsky01 @ mail . ru Viktor M . Sushkov Financial Monitoring Department NRNU MEPhI Moscow , Russia vmsushkov @ mephi . ru Nadezhda V . Kuznetsova Financial Monitoring Department NRNU MEPhI Moscow , Russia nadyakuznetsova555 @ gmail . com Vladislav V . Krasinsky Department of General Jurisprudence and Legal Foundation of Security NRNU MEPhI Moscow , Russia lislisv @ mail . ru Nikolay V . Akimov Financial Monitoring Department NRNU MEPhI Moscow , Russia kolya . ackimov @ mail . ru Abstract —Money laundering poses a serious threat to the international financial system and requires effective detection methods . The techniques used by reporting entities in the AML / CFT regime may be incapable of identifying advanced financial frauds that have a convoluted nature as well as of processing large amounts of data . This paper builds an ANN based on analyzing cash flows in bank statements in order to identify patterns of money laundering . The toolkit is automated using Python programming language in Jupyter Notebook . The efficiency of the ANN is evaluated using ROC curves and a confusion matrix . In addition , the accuracy of the ANN is compared with that of other common machine learning models , including decision trees , random forest and gradient boosting . The results demonstrate the high efficiency of the ANN , which indicates the rationality and feasibility of the neural network - based approach to cash flow analysis for the purpose of identifying money laundering patterns . The toolkit is recommended for adoption in the operational processes of reporting entities to improve the quality of internal control for AML / CFT purposes . Keywords—money laundering , cash flow analysis , neural network - based approach , multilayer perceptron , decision trees , gradient boosting , random forest I . I NTRODUCTION In recent decades , money laundering has become one of the most serious threats to the international financial system . As financial transaction volumes increase and technology advances , new techniques for concealing illegally obtained funds and disguising them as legitimate have been emerging [ 1 , 2 ] . The primary responsibility for detecting signs of money laundering lies with reporting entities , which conduct internal controls on organizations involved in cash and asset transactions , within the framework of the Anti - Money Laundering / Combating the Financing of Terrorism ( AML / CFT ) regime . Currently , reporting entities face challenges in processing large volumes of data . Manual processing is no longer feasible , and traditional statistical methods are not effective in detecting complex financial frauds . As a consequence , the development of mathematical tools capable of automatically identifying money laundering patterns in extensive financial data becomes necessary [ 3 ] . The aim of the research , therefore , is to build an Artificial Neural Network ( ANN ) capable of identifying the signs of money laundering with high accuracy , its training and testing on bank statements of commercial organizations . Bank statements , which contain cash flow information , are the primary data format utilized by reporting entities . II . T OOLKIT A UTOMATION M ECHANISM A . Selecting a Programming Language In order to enhance usability of the toolkit , it is decided to automate it using a programming language . Table I displays the top three programming languages worldwide , as per the TIOBE Index . The TIOBE Index determines rankings based on the evaluation of search queries containing the programming language name . As of July 2023 , Python holds the top position . TABLE I . M OST P OPULAR P ROGRAMMING L ANGUAGES , TIOBE I NDEX , J ULY 2023 # Programming language Rating 1 Python 13 . 42 % 2 C 11 . 56 % 3 C + + 10 . 80 % The leading position of Python can also be inferred from the IEEE Spectrum ranking , which takes into account 11 metrics from eight sources , including search queries and social media mentions . Table II highlights this similar conclusion . TABLE II . M OST P OPULAR P ROGRAMMING L ANGUAGES , IEEE S PECTRUM , 2022 # Programming language Rating 1 Python 100 . 00 2 C 96 . 80 3 C + + 88 . 58 Considering the ratings , the Python programming language is chosen . Among its advantages are : • simplicity and understandability of the code ; • interpretability ; 1390 979 - 8 - 3503 - 3088 - 5 / 23 / $ 31 . 00 ©2023 IEEE 2023 I EEE XV I I n t e r n a ti on a l S c i e n ti f i c a nd T ec hn i ca l C on f e r e n ce A c t u a l P r ob l e m s o f E l ec t r on i c I n s t r u m e n t E ng i n ee r i ng ( A P E I E ) | 979 - 8 - 3503 - 3088 - 5 / 23 / $ 31 . 00 © 2023 I EEE | DO I : 10 . 1109 / A P E I E 59731 . 2023 . 10347735 Authorized licensed use limited to the terms of the applicable license agreement with IEEE . Restrictions apply . 2023 IEEE 16th INTERNATIONAL CONFERENCE OF ACTUAL PROBLEMS OF ELECTRONIC INSTRUMENT ENGINEERING ( APEIE ) • availability of libraries for easy data analysis and visualization , such as pandas , seaborn , numpy ; • availability of libraries for machine learning , such as tensorflow , scicit - learn , keras ; • massive database of methodological sources [ 4 ] . One limitation of Python is its relatively slower speed in comparison to other programming languages . B . Selecting a Computing Platform The next step involves defining a computing platform for the toolkit . The selection is influenced by several key factors : • availability ; • Python support ; • block - based code launch ; • intuitive interface . The Jupyter Notebook meets all of the aforementioned conditions . It is commonly utilized for incremental development , particularly when it is necessary to verify the functionality of various code fragments step by step . The notebook stores code in separate cells , allowing for the execution of code in any desired order or one cell at a time [ 5 ] . This feature facilitates experimentation with algorithms and enables quick identification of optimal solutions . III . ANN B UILDING A . Stages of ANN Building An ANN is a machine learning model that uses interconnected nodes to process and transmit information , enabling it to learn and make predictions based on input data [ 6 ] . The process of building an ANN can be divided into six stages . 1 . Problem statement . Problem statement includes defining the objective function , selecting the architecture and the optimization algorithm . 2 . Collection and preparation of input data . An ANN should be able to find a solution based on the given information , so quality data are needed . In our research , data from 14 sets of bona fide commercial bank statements and 14 sets of fraudulent bank statements are used , totaling 117 , 370 records . 3 . Data analysis . This stage serves to assess the balance of the data , determine the data quality and reliability , identify any gaps or inconsistencies , and define further approach to network building . 4 . ANN training . The data are divided into training and test samples . The training sample shows the ANN the input data and the expected results . If the result produced by the ANN differs from the expected ones , a penalty or error is imposed and the ANN updates its weights and parameters to improve its ability to predict the correct results . By repeating this learning process on the training data , the ANN becomes increasingly accurate and capable of solving the problem . 5 . ANN monitoring . It is important to analyze and monitor the performance of the ANN when working with real data . If the performance does not meet the requirements or expectations , it is necessary to improve the performance of the ANN by changing the network architecture , choosing other optimization methods or increasing the amount and variety of data for training . 6 . ANN additional training . The process of training an ANN is continuous as long as it is needed [ 7 ] . B . ANN Structure Bank statements are a set of lines containing numeric and textual information that is static , i . e . it does not change over time . On this basis , the most efficient approach is to develop an ANN using a multilayer perceptron architecture . Our research aims to use an ANN to classify bank statements and determine their quality in terms of potential exposure to money laundering activities within an organization . The realization of this task would involve utilizing a two - layer perceptron . In the given context , objects are defined in a three - dimensional space . Each object ' s position is represented by a three - component input vector , which corresponds to the object ' s coordinates . To handle these three coordinates , input data are constructed using three input neurons . This approach is depicted in Fig . 1 , serving as the basis for further examination and analysis . Fig . 1 . Model of a two - layer perseptron . The objective for the ANN is to solve a binary classification task by determining whether an object belongs to the pink or purple class . The output layer of the network consists of two neurons , representing the probabilities of belonging to each class . The input layer , on the other hand , is a three - dimensional vector representing the coordinates of the object in space . After training the ANN , given a three - dimensional input vector , the network will transform it into two numbers , p 1 and p 2 , which indicate the probability of belonging to the pink and purple classes , respectively . Therefore , the output of the ANN can be interpreted as the probability distribution of the object ' s class membership . Initially , a feature matrix is generated and converted into a numpy array for subsequent arithmetic operations of multiplication by weight coefficients and optimization of weight coefficients . The input layer of the ANN consists of a 1x3 dimension , which is then passed to the first layer with a dimension of 32x1 . Weight coefficients are initialized using a normal distribution , creating an array for the next layer . Error propagation and 1391 Authorized licensed use limited to the terms of the applicable license agreement with IEEE . Restrictions apply . 2023 IEEE 16th INTERNATIONAL CONFERENCE OF ACTUAL PROBLEMS OF ELECTRONIC INSTRUMENT ENGINEERING ( APEIE ) activation via the Rectified Linear Unit ( ReLU ) function prepare a vector for the subsequent layers . This process is repeated in the next two layers until reaching the output layer . The output layer contains a single neuron , and its value falls within the range of 0 to 1 . If the value is less than 0 . 5 , it is considered indicative that the bank statement is bona fide . Conversely , if the value exceeds 0 . 5 , it implies that the bank statement exhibits signs of money laundering and is classified as fraudulent . The network error is evaluated using the binary cross - entropy function . The learning rate is set to the standard value of 0 . 001 . Optimization is performed using the Adam algorithm , an improved version of gradient descent . To ensure comprehensive training , the Stratified K - fold cross - validation method is employed . This method enables the neural network to be trained and tested on all available data . The number of epochs is set to 30 , allowing the ANN to iterate over the dataset multiple times , improving its performance . While it has not been possible to reach a global minimum , the ANN was able to converge to a good local minimum . This local minimum allows for accurate predictions with a high percentage of accuracy . The ANN was built using the Keras library along with the TensorFlow add - on . By creating a Sequential object , various Dense layers were added subsequently . These Dense layers contribute to the overall architecture of the network , enabling it to perform computations and learn from the input data . C . Evaluation of the ANN Efficiency In order to assess the quality of the binary classification performed by the ANN , ROC curves can be utilized . They display the ratio between the proportion of correctly classified feature carriers and the proportion of incorrectly classified nonfeature carriers , relative to the total number of objects [ 8 ] . By analyzing the ROC curves , it is possible to gauge the effectiveness of the ANN in distinguishing between the two classes . Using Stratified K - fold cross - validation with the number of iterations equal to 10 , each of the classification algorithms and deep learning model was trained 10 times with different ROC AUC values , among which the average ROC AUC value was taken for more objective accuracy evaluation . The result is shown in Fig . 2 . Fig . 2 . R OC - curves of the ANN . The model achieved an average accuracy of 93 % , surpassing the accuracy values obtained from other popular machine learning methods such as decision trees , random forest , and gradient boosting . When evaluating these methods using ROC curves , the accuracy values were found to be 90 % , 92 % , and 88 % respectively . Therefore , the neural network model demonstrated superior performance compared to these alternative approaches . For performance assessment of the developed model , a confusion matrix can also be used . This matrix is a table of size N x N , where N represents the number of classes . The purpose of the confusion matrix is to compare the predicted values of the model with the actual target values . By examining this matrix , it is possible to evaluate how well the model is functioning and how accurate its predictions are [ 9 ] . Accuracy , precision and sensitivity are calculated using the formulas ( 1 ) , ( 2 ) , ( 3 ) . Accuracy (cid:8)ACC(cid:10) (cid:11) (cid:12)(cid:13) (cid:14) (cid:12)(cid:15) (cid:12)(cid:13) (cid:14) (cid:12)(cid:15) (cid:14)(cid:16)(cid:13) (cid:14) (cid:16)(cid:15) ( 1 ) Precision (cid:8)PPV(cid:10) (cid:11) (cid:12)(cid:13) (cid:12)(cid:13) (cid:14)(cid:16)(cid:13) ( 2 ) Sensitivity (cid:8)TPR(cid:10) (cid:11) (cid:12)(cid:13) (cid:12)(cid:13) (cid:14)(cid:16)(cid:15) ( 3 ) In ( 1 ) , ( 2 ) and ( 3 ) : • TP ( True Positive ) is true positive predicted values ; • TN ( True Negative ) is true negative predicted values ; • FP ( False Positive ) is error of the first kind , the predicted value is incorrectly assigned a positive value because the actual value is negative ; • FN ( False Negative ) is error of the second kind , the predicted value is incorrectly assigned a negative value because the actual value is positive . The confusion matrix for the ANN with the corresponding indices is presented in Table III . TABLE III . C ONFUSION M ATRIX FOR THE ANN Actual values Predicted values Total observations Y = 0 Y = 1 Y = 0 7 136 306 7 442 Y = 1 288 15 744 16 032 The calculated indicators , namely ACC = 0 . 974 , PPV = 0 . 981 , and TPR = 0 . 982 , demonstrate excellent performance . These results indicate that the model has a high accuracy in identifying fraudulent financial transactions . The high ACC , PPV , and TPR values collectively indicate that the model is effective and reliable in its ability to recognize and classify fraudulent bank statements accurately . IV . P ERFORMANCE C OMPARISON WITH O THER M ACHINE L EARNING M ETHODS As noted above , ROC curves for other machine learning methods show good results : 90 % accuracy for decision tree , 92 % for random forest and 88 % for gradient boosting . Meanwhile , the average accuracy of the deep learning model built as an ANN is 93 % . The key advantage of deep learning lies in its flexibility to modify the model architecture in order 1392 Authorized licensed use limited to the terms of the applicable license agreement with IEEE . Restrictions apply . 2023 IEEE 16th INTERNATIONAL CONFERENCE OF ACTUAL PROBLEMS OF ELECTRONIC INSTRUMENT ENGINEERING ( APEIE ) to achieve higher accuracy , especially when the structure of the original dataset changes . This adaptability allows deep learning models to be more robust and effectively handle evolving data scenarios . It is important to note that when dealing with unbalanced samples , where the number of positive indicators does not match the number of negative indicators , it becomes impractical to use Accuracy metrics , as it is influenced by the class ratio . While Precision and Sensitivity can still be used , there is a possibility of contradiction as they may diverge significantly from each other [ 10 ] . In order to mitigate this contradiction , the F - score is employed , which is calculated using formula ( 4 ) . This measure provides a more balanced evaluation by considering both Precision and Sensitivity , allowing for a more comprehensive assessment of model performance in unbalanced datasets . (cid:29) (cid:30) (cid:11) (cid:8)1 + ! " (cid:10) ∙ $ % & ’ ( ) ( * + ∙ , & + ) ( - ( . ( - / (cid:8)(cid:30) 0 ∙ $ % & ’ ( ) ( * + (cid:10) (cid:14) , & + ) ( - ( . ( - / ( 4 ) The parameter ! ∈ [ 0 ; + ∞ ) sets the weight of precision in the metric . When ! = 0 , the measure represents Precision , when ! = + ∞ it represents Sensitivity . When ! = 1 , the F - score is defined . The most efficient method is the one with the highest value . The F - score provides a more accurate assessment than the averaged ROC curve , therefore it will be utilized for the final evaluation of efficiency . Table IV presents the Precision , Sensitivity , and F - score metrics . In this particular case , the F - score is the primary parameter used for performance evaluation . TABLE IV . C OMPARISON OF THE M ACHINE L EARNING M ODELS P ERFORMANCE Model Precision Sensitivity F - score Decision trees 0 . 958 0 . 938 0 . 948 Random forest 0 . 832 0 . 99 0 . 904 Gradient boosting 0 . 983 0 . 985 0 . 984 The table reveals inconsistencies , hence the utilization of the F - score is appropriate . For instance , the random forest model exhibits precision of 0 . 832 , while sensitivity is 0 . 99 . By comparing all F - scores , it can be concluded that the accuracy of the ANN outperforms other machine learning methods . Therefore , the choice of the neural network - based approach is justified . V . C ONCLUSION As a result of the research , an ANN was built to classify bank statements as either fraudulent or bona fide based on the presence of money laundering patterns . The ANN demonstrated superior performance compared to other popular machine learning methods , such as decision trees , random forests , and gradient boosting . The findings are supported by two efficiency assessment methods : the ROC curve and confusion matrix . The developed toolkit automated with the Python programming language holds practical significance as it can be implemented in the banking sector and other reporting entities in the AML / CFT regime . This is particularly valuable considering the increasing complexity of financial transactions and the need to process large amounts of data . Future research directions include enhancing the ANN’s accuracy through training on larger datasets . Additionally , investigating the impact of different hyperparameters on the ANN ' s performance would contribute to its refinement . R EFERENCES [ 1 ] F . Teichmann , “Recent trends in money laundering , ” Crime , Law and Social Change , vol . 73 , pp . 237 - 247 , 2020 . [ 2 ] E . A . Akartuna , S . D . Johnson , and A . E . Thornton , “The money laundering and terrorist financing risks of new and disruptive technologies : a futures - oriented scoping review , ” Security Journal , pp . 1 - 36 , 2022 . [ 3 ] Y . H . Yusoff , N . A . F . Azlan , N . N . M . Zamzuri , N . Sufian , S . N . R . Kurniawan , and R . Hassan , “Areas of Technology That Helps in Combating Money Laundering : A Concept Paper , ” Journal of Academic Research in Business and Social Sciences , vol . 13 ( 5 ) , pp . 949 - 959 , 2023 . [ 4 ] A . Rawat , “A Review on Python Programming , ” International Journal of Research in Engineering , Science and Management , vol . 12 , no . 3 , pp . 8 - 11 , 2020 . [ 5 ] K . Grotov , S . Titov , V . Sotnikov , Y . Golubev , and T . Bryksin , “A large - scale comparison of Python code in Jupyter notebooks and scripts , ” Proceedings of the 19th International Conference on Mining Software Repositories , pp . 353 - 364 , 2022 . [ 6 ] M . M . Saritas , and A . Yasar , “Performance analysis of ANN and Naive Bayes classification algorithm for data classification , ” International journal of intelligent systems and applications in engineering , vol . 7 ( 2 ) , pp . 88 - 91 , 2019 . [ 7 ] G . S . Temponeras , S . A . N . Alexandropoulos , S . B . Kotsiantis , and M . N . Vrahatis , “Financial fraudulent statements detection through a deep dense artificial neural network , ” 2019 10th International Conference on Information , Intelligence , Systems and Applications ( IISA ) , pp . 1 - 5 , 2019 . [ 8 ] A . C . J . Janssens , and K . M . Forike , “Reflection on modern methods : Revisiting the area under the ROC Curve , ” International journal of epidemiology , vol . 49 , no . 4 , pp . 1397 - 1403 , 2020 . [ 9 ] M . Heydarian , T . E . Doyle , and R . Samavi , “MLCM : Multi - label confusion matrix , ” IEEE Access , vol . 10 , pp . 19083 - 19095 , 2022 . [ 10 ] L . Wang , M . Han , X . Li , N . Zhang , and H . Cheng , “Review of classification methods on unbalanced data sets , ” IEEE Access , vol . 9 , pp . 64606 - 64628 , 2021 . 1393 Authorized licensed use limited to the terms of the applicable license agreement with IEEE . Restrictions apply .