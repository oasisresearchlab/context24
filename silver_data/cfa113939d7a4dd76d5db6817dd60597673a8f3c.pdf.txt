HyperSea : Towards a Spatial Hypertext Environment for Web 2 . 0 Content Georgios D . Styliaras University of Ioannina Art Sciences Department Ioannina , Greece + 302651095964 gstyl @ uoi . gr Sotiris P . Christodoulou University of Patras , HPCLaboratory Comp . Eng . & Informatics Department Patras , Greece + 306946004687 spc @ hpclab . ceid . upatras . gr ABSTRACT In this paper , we present HyperSea , an environment for importing , organizing and interacting with web 2 . 0 content . The environment is based mainly on previous research on hypertext systems , spatial hypertext and it tries to overcome presentation limitations of today’s popular web 2 . 0 applications . Content is structured as islands and nodes which may be interlinked and characterized by various levels of visual cues , according to its type and origin . As the resulting content is structured , HyperSea may support alternative views and search operations over it . We present an extensive case - study for illustrating functionality and we organize some future work . Categories and Subject Descriptors H . 5 . 1 [ Multimedia Information Systems ] : Hypertext navigation and maps General Terms Design , Experimentation , Human Factors Keywords Web 2 . 0 content , Spatial hypertext , Hypertext structure 1 . INTRODUCTION A lot of research has taken place regarding hypertext content and related methodologies , environments , structures , navigation methods and interaction mediums . More specifically , spatial hypertext allows the placement and interaction of more than one hypertext nodes on a single area . Connection type and the distance of nodes on this area may express more information about the linking of nodes than the event that some nodes are just linked . Similarly , graph visualization allows complex structures to be defined , either as single nodes , or organized as multiple sets . Patterns of hypertext define a classification of navigation types among hypertext nodes and allow extracting results about the expressiveness and the quality of hypertext . On a more abstract level , knowledge networks and ontologies permit the representation of knowledge through structured networks of content nodes . On the other hand , adaptive hypermedia systems permit the adjustment of the projected hypertext content according to the user’s navigation habits . Finally , hypertext methodologies and tools suggest a structured process for defining , structuring and presenting a network of hypertext content of different link and node types . Despite this previous work typical samples of which will be presented in the next section , the dominance of HTML and the World Wide Web has imposed a linear , text - based representation of hypertext , where nodes appear as a text - page enriched with multimedia content and simple , unary hyperlinks that point to other pages or multimedia content . This characteristic has become even more evident in web 2 . 0 social applications , in most of which complex relations and links are represented either as long pages of text , or are just implied in an indirect way . For example , MySpace is a popular medium for music groups that allows them to present themselves , upload some of their music and keep in touch with their fans . A typical page in MySpace , especially for popular music groups , is a long page that embeds the identity of the group and a music player at the top . Then , fan comments and reviews unfold requiring several page - downs in order to properly view them . Similarly , in flickr , a user has to perform several clicks and actions in order to view just a set of photos in a linear way . In Facebook , friends , events and requests appear as linear lists . In YouTube , lists of related videos appear next to the projected video along with long lists of comments . In every case , users are not offered an overview of information and they cannot detect how different kinds of information relate to each other . For example , how friends relate to other friends through events , how group of friends relate to each other , how photos relate to places , events and friends . Furthermore , users can hardly have a clue about historicity of information or how search results relate to the main type of presented information , when performing inquiries . It is true that web 2 . 0 applications have played a tremendous role in adding added value to preexisting raw content , especially bringing together people with common interests . However , we believe that by exploiting previous hypertext research , we may add more expressiveness and navigation capabilities to the same information . In other words , web 2 . 0 social applications deserve more powerful interfaces and structuring capabilities without sacrificing their simplicity . What’s more , various web 2 . 0 social applications host similar information about users , events and photos , which is not related by any means . There are also web 2 . 0 applications with specialized content that may be related to social applications . It is true that these applications are competitive Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . HT’09 , June 29 - July 1 , 2009 , Torino , Italy . Copyright 2009 ACM 978 - 1 - 60558 - 486 - 7 / 09 / 06… $ 5 . 00 . 35 against each other , but it would be interesting to be able to relate information among them . For example , a Facebook user to point to flickr images , or a YouTube movie trailer to point to a Wikipedia movie entry . Towards this direction , we propose an environment called HyperSea that combines previous research results in hypertext and focuses on web 2 . 0 applications and information spaces , i . e . users ( as a centric object with an important role ) , content and applications . As analyzed further in the following section , spatial hypertext systems [ 17 , 26 ] enable integrating from different sources , ambiguity and implied relationships and annotations . Furthermore , these systems employ visual cues massively and they succeed in managing heterogeneous information . The environment focuses on the material embedded in the web 2 . 0 page as an object ( such as a video or a song ) and not just its URL . Therefore , it supports importing multimedia content and pages of all web 2 . 0 applications . Moreover , we propose that an enrichable set of metadata as attribute / value pairs based on the objects’ origin should be defined for the various web 2 . 0 objects and structures . These sets may provide the basis for creating templates for the importing of web 2 . 0 pages in the environment . In this way , less information is required to be filled . The environment also supports special metadata like date ( s ) , and place for the majority of the nodes . Thus , the information may be placed on maps or sorted chronologically . For example , present YouTube videos on the whiteboard sorted by their upload dates . We propose that visual cues are applied on objects ( shape , color , border width ) automatically based on the objects’ origin , so that the user’s effort is lowered . We only allow for standard uses of visual cues applications so as not to overwhelm the user with a lot of choices . HyperSea supports complex content operations by performing simple and homogeneous interface actions and by exploiting the arrangement of content on the area . The operations support creating information structures and then viewing , searching and annotating them . The environment supports rich annotation features that can be defined and hidden , searched by users and viewed by annotation type or user . It also tries to combine the expressiveness of a drawing program for creating , moving and linking content nodes with the structuring capabilities of a database , where content is organized in fields , tagged and related by identities and supports referential integrity rules on linking and updating . Furthermore , unlike most spatial hypertext systems , we favor the use of explicit links among nodes and indirectly some spatial relationship for representing different levels of relations . HyperSea supports that nodes change their viewable content according to their zoom level . Bigger zoom results in more details in the node representation . Finally , as in most spatial hypertext systems , we support navigating among critical stages of the island’s formation , so that it is possible for another user to follow the rationale of the user that evolved the island . In the following section , some related work will be presented mostly regarding previous hypertext research on which the proposed environment is based . Then the following sections present a subject - based information organization and some web 2 . 0 basics we use for classifying web 2 . 0 content . Then the features of HyperSea are presented along with an extensive case - study of its functionality . The paper is concluded with some intended future work . 2 . RELATED WORK As stated previously , previous research includes spatial hypertext , patterns in hypertext , graphs , knowledge networks and ontologies . In this section some research work will be discussed , related to the various features of the proposed environment . [ 18 ] favors the use of a page as the main hypermedia delivery medium , but as it is stated in the last paragraph “But the experience of the Web as it grows and changes may well increasingly break the isolation of different kinds of discourses from one another and encourage complex mixed kinds of writing . Purposeful hypertext with complex linking can do this well . A willingness to write and read complex link sequences together with spatial combinations of text and images can bring things together in unexpected ways that go beyond one - step developments . Greater graphical sophistication and more elaborated skills of attention could help hypertext turn a new page toward one of its old ideals . ” This remark may be regarded as an initiative for our environment . Starting from the early years of hypertext research in [ 19 ] , it is stated that structure discovered in spatial hypertext may be the basis for collaboration or interaction . Furthermore , alignment of hypertext structures , as well as recurring of structures promote knowledge representation via hypertext . The need for visualizing tools that represent hypertext structures on a surface and not based on text is outlined in [ 2 ] . In [ 1 ] , some placement capabilities are offered for spatial hypertext structures . This research has resulted in the development of two commercial systems , Storyspace ( http : / / www . eastgate . com / storyspace / index . html ) and Tinderbox ( http : / / www . eastgate . com / Tinderbox / ) . Storyspace is a hypertext writing environment focusing on large , complex , and challenging hypertexts , whereas Tinderbox builds relationships by arranging notes , organizing them with shape and color and linking them . We embrace this idea by allowing grid - based placement of nodes and spatial organization of content . The authors in [ 33 ] have developed a series of spatial hypertext systems that support early stages of linear - information authoring , such as paper writing and movie editing . The systems use spatial hypertext not as a medium for representing final artifacts but as a means of interacting with linear information during an authoring process . Similar to our environment , these systems combine the formality of structuring content as nodes and links with the expressiveness of spatial hypertext . Building on the last idea , [ 34 ] uses space as a means for structuring content in the same way that our environment uses space for structuring web 2 . 0 content . The use of named content as well as multiple structure representations and viewings are also employed . Regarding specialized features , a novel three - dimensional interface for navigating through hypermedia is presented [ 20 ] , whereas alternative mechanisms for figure navigations are presented in [ 4 ] . Thumbnail previewing plays an important role in our environment , too . The importance of grid - aligned positioning as well as the distance among nodes in spatial hypertext is analyzed in [ 14 ] . The use of structured hypertext in order to support knowledge representation in the form of ontologies or in documents is analyzed in [ 6 ] and [ 7 ] , although this representation is not enhanced with visual interfaces . The structured content of a digital library may also benefit from a spatial hypertext interface . For example , [ 5 ] presents a search interface on spatially structured 36 content . Similarly , spatial hypertext may assist in knowledge representation , by exploiting content placement , appearance and distance along with other visual cues [ 30 ] . Moreover , [ 13 ] and [ 27 ] present more interfaces based on spatial hypertext that prove that space may be employed efficiently in order to represent structured content , express constraints on it and , even more , convert the resulting structures into knowledge . Regarding methodologies , [ 31 ] describes an agile hypertext design methodology that supports spatial interfaces , structured content and multiple users . 1001stories [ 3 ] is a powerful hypermedia development toolkit that promotes structured content and navigation structures but is limited to generate text - based hypermedia pages . [ 10 ] and [ 8 ] focus on adaptive hypermedia systems and analyze how structured content may help towards this direction . A lot of research has been taking place regarding social hypertext as well . For example , [ 9 ] describes a methodology for identifying subcommunities in social hypertext , representing pages as nodes and hyperlinks among pages as links among nodes , as also proposed by our environment . Social hypermedia has spread in open hypermedia systems too . [ 15 ] presents an infrastructure for browsing and multimedia blogging of Web - based information anchored with physical places in an urban environment . In [ 12 ] , the authors have developed a force directed network interface to visualize the result sets provided by a social bookmarking site . Emphasis is given on the search results of the site , whereas we propose a graphical environment in order to support content structuring and linking . However , the use of sizing and coloring along with the feature of thumbnail preview is common in both cases . An analysis of the popular web 2 . 0 application , Flickr takes place in [ 21 ] . Regarding structure , [ 24 ] proposes an extension to the MVC architectural pattern in order to include an explicit structure model . On the other hand , [ 32 ] proposes an architecture enabling users to collaboratively build a faceted classification for a large , growing hypermedia collection . Both approaches regard content as structured and emphasize on the limitations of known web 2 . 0 applications . [ 16 ] presents an extended study of graph operations , including some simple ones that can be operative in graphs of hypertext nodes . In [ 25 ] graphs are used to aid programming , whereas the proposed environment uses graphs for organizing hypertext content . Finally , [ 11 ] discusses authorship issues in environments supporting reuse of content by several users . 3 . SUBJECT - BASED INFORMATION ORGANISATION Humans , usually , organize information around subjects ( or topic ) ( http : / / isotopicmaps . org / ) . Any piece of information can be said to be " about " one or more subjects . A subject can be an individual , like Leonardo Da Vinci , the Lord of the Rings movie , or a document ( such as this one ) ; it may be a class of individuals , like scientists , movies , or research papers ; it may also be a more abstract concept like 2008 economic crisis , Olympic games or expressionism . In short , a subject can be anything that an author wishes to identify , represent , or otherwise make assertions about . Usually users collect and organize information around some basic subjects : • Person ( e . g . Socrates , Napoleon , Obama , me , my wife , etc . ) or Class of persons ( scientists , singers , etc . ) • Place ( e . g . Athens , Africa , Waikiki Beach , etc . ) or Class of places ( cities , rivers , etc . ) • Physical or virtual Object ( s ) ( e . g a specific product , movie , song , book , game , etc . ) . • Class of objects ( action movies , HDTVs , etc . ) . • Thematic Topic : Usually objects of interest are grouped under a thematic subject area or an industry , like : o MUSIC : song / videoclip , singer , photos , charts , etc . o MOVIES : movie , actors , directors , photos , videoclips o ELECTRONICS : brands , sellers , HDTVs , Laptops , etc . o SOFTWARE : games , applications , etc . o BOOKS : bookstores , authors , publishers , etc . o ART : artists , artworks , events , etc . o AUTOMOTIVE : brands , models , sellers , etc . o SPORTS : players , teams , stadioums , competitions , etc . o TRAVEL / TOURISM : hotels , agents , car rentals , etc . o ETC • Abstract Topic ( e . g . economic crisis , elections , Rome in 1 st century BC , astronomy , Olympic games , etc . ) • Activity / task ( planning of a trip , planning of a wedding , producing a report , conference management , etc . ) It is obvious that subjects are the main concepts around which people organize information material and knowledge , to some extent , independently from each other . This ascertainment has influenced some essential decisions for our environment . 4 . WEB 2 . 0 APPLICATIONS / PLATFORMS Web 2 . 0 [ 23 ] is a term first used by Tim O’Reilly , to describe the latest trend in the use of World Wide Web technology that aims to facilitate creativity , communication , information sharing , and , most notably , collaboration among users . These concepts have led to the development and evolution of web - based communities and hosted services , such as wikis , blogs , social - networking sites , etc . A web 2 . 0 application is considered to be any application that has the following basic principle : Architecture of participation that encourages users to contribute content and add value to the application as they use it . Thus , the majority of the web 2 . 0 applications today are building social networks ( or communities ) around a topic or human activity . Below we outline a classification of them based on their subject . • Communication / Expression : Internet Forums , Blogs • Collaboration / Sharing knowledge : Wikis , Social bookmarking , Social News Sites , Opinion sites , Events • Media Sharing : Photo sharing , Video sharing • Friendship : Social networking and aggregation • Live broadcasting : Video and Radio • Entertainment : Virtual worlds , Online gaming • Thematic Topic or Industry : Numerous social networks are build around a thematic topic or industry like music industry , film industry and book industry . The most important and essential item found in a web 2 . 0 application is a user ( blogger , forum user , wiki user , second life user , last . fm user , etc . ) . Users usually are allowed to join a group of users or community within a specific web 2 . 0 application . Regarding information objects , the most common kinds of them we have observed in web 2 . 0 applications are the following : • A forum , a forum thread , a forum post • A blog , a blog entry , a comment about a blog entry • A wiki , a wiki article , a version of a wiki article 37 • A tag / category page of a social bookmarking / rating service • A review on a product in a review site • An event entry ( e . g . in eventful ) • An image , an album ( e . g . in Flickr ) • A video , a group of videos ( e . g . in YouTube ) • A photo / album , video / group of videos , an application in a social network like Facebook • A live show or a recorded show ( e . g . in Ustream ) • A live radio station or a recorded radio ( e . g . in live365 ) • A virtual place , object or event ( e . g . in Second Life ) It is very common , and probably is the essence of the web 2 . 0 applications , to allow either registered or even unregistered users to easily leave a comment about the information they view or about a user . Commenting or annotating is also very important when you collect or organize information material . Thus , in our environment described below , annotation has an important role . 5 . HYPERSEA ENVIRONMENT In this work we introduce HyperSea , an environment for organizing and presenting web 2 . 0 content . The environment supports only one large space , called Archipelago , which can be authored and viewed with two - levels of detail . This decision was made in order to keep the environment simple and inhibit users from creating deep and complex hierarchies of data . Instead , we encourage users to represent deep hierarchies in space . In the first level of detail the user sees an archipelago spatially divided into labeled seas , which are further divided into complexes of islands , each of one comprises individual islands . In the first level of detail , users cannot view the information within an island ( unless the archipelago’s space is small , in which case they can ) . In the second level of detail the information within islands ( nodes , annotations , structs of nodes and links among them ) is visible . In this level of detail all explicit links among nodes and structs belonging to different islands are also visible . These links are also visible in the first level of detail as links between the islands but the end points of the link are placed inside the islands symbol . 5 . 1 Essential Definitions Node : an abstraction of a simple piece of information within information space . Based on the analysis made in Section 3 , a node may represent ( we refer to it as content type ) : a user , a group of users , a web 2 . 0 information object ( according to the kind of object different metadata will be attached to the node ) , a normal web resource not belonging to a web 2 . 0 application ( a web page , image , video , document , etc . ) , a file in user’s hard disk which is uploaded into the environment . Struct : A spatial structure that incorporates many nodes organized in a kind of structure , such as : Composite [ 29 ] : a structure consisting of a regular spatial arrangement of nodes with different types . Used to denote implicit semantic relationships among different types of nodes . List [ 29 ] : an ordered or unordered list of nodes of the same type . A list can be presented ordered by any metadata selected by the author during authoring or another user during viewing . Moreover , a list can be presented as a stack [ 29 ] if there is not enough space or the list is too long . Commonly used by people to organize material in categories or sets . Collection : a set of nodes of different types . Can be also presented as a heap [ 29 ] . Used when collecting information but not yet sure how to organize it . Map : a set of nodes placed over a background image that can be a map , an aerial photo , a diagram , a drawing , an organogram of a company , etc . Numerous combinations of these structs are possible in order to choose the best one for the structuring of your information space . Such combinations are a list of lists ( nested lists ) , a list of composites , a composite including a node and a list , a collection including a list and a composite , a list of maps , etc . Annotation : It is a special object within our environment . It is not a node in the sense that it cannot be linked , but it is directly associated with the node , struct or island placed near or over it . It represents comments , messages to other users , reviews , rating of users about a specific node , struct or island . Island : An island is a subspace that usually reflects semantic categorization of the whole information space . It may include numerous nodes , annotations and structs of any kind . It may include internal or external links . Islands may not include other islands for the sake of simplicity . Usually , subjects ( as defined in Section 3 ) and users are represented as an island but also as a struct or a simple node , depending on the volume and complexity of information material and the task the environment user wants to accomplish . Archipelago : The whole information space is called archipelagos , meaning a large cluster of islands . Deep hierarchies of islands are presented in space with labeled areas ( seas ) and subareas ( complexes of islands , i . e . structs of islands ) . However , individual nodes or structs may also be presented inside an archipelago or a sea or a complex of islands . Link : The link is used to express the relationship between two objects ( nodes , structs or islands ) . This relation in space is expressed either implicitly ( via proximity in space , participation in the same struct , same visual characteristics like color ) or explicitly via typed links ( i . e . uni or bi - directional arrows with labels ) . Explicit links are used to express relations out of the main hierarchical spatial structure of information . Implicit links are also used to express ambiguous relations , where users are not quite sure if they have to relate two items , esp . during the task of analyzing some collected information . Metadata : Any kind of object within HyperSea , including nodes , annotations , structs , islands , links and even the archipelago has its own metadata set that describe their properties . Each node type has an appropriate metadata set according to its web 2 . 0 kind and content type . For each object type there are some basic metadata that always have to be included and some other optional metadata that are just suggested by the environment . Moreover , users are able to add their own metadata . Some metadata are inserted and managed totally by the environment , like the timestamp of the creation time of the object , the frequency of use of the object , etc . Basic metadata : Title , URL , Description ( in XHTML format ) , Date of Creation , Date of Upload , Place , web 2 . 0 Object Kind ( see list above ) , Content Type ( Document , Image , Video , Streaming Video , Audio , Streaming Audio , Web page , User , Community ) Optional metadata : depending on the kind and type of object the environment suggest some optional metadata for user to include . Technical metadata : Automatic technical properties defined for a node , such as the size , width , height and color depth for a picture or the duration and encoding of a sound or video file . User - defined metadata : user can add any number of metadata 38 Dates , place , kind , type of object , creation time , and any other metadata can be used to search / filter nodes or reorganize nodes during viewing of the Archipelago . For example a film trailer about Normandy invasion created in 1962 , uploaded to YouTube in 20th December 2006 has the following attributes , any of which are suffice in order for a node to be defined in a valid way : Basic Attributes : URL : http : / / www . youtube . com / watch ? v = nqFn _ pM5QxU TITLE : The Longest Day COMMENT : an old movie CREATION DATE : 1962 UPLOADED DATE : 20 th December 2006 PLACE : Normandy , France WEB 2 . 0 KIND : YouTube video CONTENT TYPE : Streaming Video Optional Attributes : CATEGORY : Entertainment Technical Metadata : LENGTH : 3 : 06 min WIDTH : 425 HEIGHT : 344 RATE : 3 stars VIEWS : 4 , 221 5 . 2 Levels of comprehension A spatial interface allows users to take advantage of their considerable visual memory and pattern recognition [ 28 ] . Jacob Nielsen wrote in 2005 [ 22 ] that “Once we get screens the size and resolution of a broadsheet newspaper , the user interface will change . It will become possible to rely more on spatial hypertext and less on linear scrolling . In fact , the very concept of a page may vanish and be replaced by higher - level aggregate units that combine multiple data feeds . ” Information spaces produced by our environment provide users with alternative ways of content comprehension within this space and its relations . Levels of comprehension are : • 1 st level ( Archipelago ) : the position , the size , the color and the labels of the islands , structs or nodes can provide information just at a glance . For instance the size of an island indicates the volume of content inside it . • 2 nd level ( island ) : within each island : the position , the size , the color and the label of structs , or nodes . • 3 rd level ( structs ) : grouping / order of items under a label • 4 th level ( nodes and annotations ) : o 1 st level categorization of nodes : the color of a node by default indicates its content type . Author or viewer may choose to indicate other metadata . Other visual cues are also used , e . g for a user a small picture in the upper left corner . Annotations are all have a yellow color . o 2 nd level categorization of nodes : the border color of a node indicates another metadata that user can choose . The default color is black . • 5 th level : other issues like importance or value of an island / struct / node can be indicated by the width of borders or the style of text within box . These comprehension levels are illustrated in the usage scenario . 5 . 3 Environment Features The environment supports the drawing of nodes that usually represent an information object and are related together either explicitly ( via linking them ) or implicitly ( via proximity or visual cues like color ) . Nodes are drawn on a whiteboard and may be grouped under a struct . Structs and nodes may be grouped under an island representing a user or a subject . Furthermore , islands may be structured under complexes of islands and seas . Creating and interacting with nodes , structs , islands , links and annotations is supported by a set of features described below . Viewer may operate the environment in two distinct modes ( editing mode and navigation mode ) and may have access to search features . 5 . 3 . 1 Basic modeling features Firstly , regarding modeling of the information space , although the environment allows the user to represent information structure with many different ways , it encourages its users to use some important conventions : Nodes : Single information material ( either a web resource or a file imported by the author ) is represented as a node . An identity is created for the node , whereas basic , optional , technical and user - defined metadata may be attached to the node . Many of them are automatically extracted from the source of the content . Each node is drawn as a rectangular with a header . The title of the node appears in the header and the description in the rectangular . Description can be an XHTML text , so that nodes are able to show formatted content and images . The color of nodes indicates the type of its content . The border width of a node indicates its value . A node may be positioned freely on the whiteboard and exist in multiple instances . However , every node instance retains its identity and metadata . In any case , change of metadata or identity properties in a node’s occurrence will result in affecting the underlying content , and thus , all its occurrences . The user may open the content represented by the node ( a web resource or a file ) by double clicking on the node . A single click on the node shows all its identity and metadata . Furthermore , a node may be discarded or copied in order to produce a new node based on the original one . Obviously , if a node is deleted , all links related to it and associated metadata are removed as well . Structs . A struct is presented as a rectangular with a header with the title of the struct . Nodes may join or leave a struct by simply dragging them in or out of the struct . User may move a whole struct in space . A struct is named and characterized through a set of metadata , as the single nodes . In a map struct the main area of the rectangular is filled with an image ( usually a map ) and nodes are placed on this map . In a list struct the user may specify a metadata to sort items with . Unorganized material that is gathered before importing it in the whiteboard may be expressed by a heap . In the same way , a stack or an ordered list can represent nodes of the same type like dated blog archives or a set of pictures . Annotations . Author’s or other users’ comments are represented as annotations and they are yellow squares with no borders . Islands . Usually users and information items about a subject are represented as islands . The islands are not colored but islands for users are visually different from the ones about a subject . A user island is presented as a rectangular with a small picture of her ( or an icon if picture is not provided ) at the upper left corner and her name at the upper right corner . A user island can be used to associate users of different web 2 . 0 applications with the same live person ; e . g associate a MySpace user to a YouTube user if it is the same person . A subject island is presented as a rectangular 39 with thick borders and a header with the title of the subject . Nodes may join or leave an island by simply dragging them in or out of an island . Users may move a whole island in space . An island is named and characterized through a set of metadata , as the single nodes . An island may be placed within a struct of islands . While users view the archipelago in the first level of detail , islands are represented smaller but the relative size and position in space remains the same . User islands are presented as a rectangular with the name of the person as a header and a photo or an icon inside the box . Subject islands are simple boxes with the subject’s title in it . Group of users are represented either as a complex of islands or as an island . Links . The links are used to express the relationship between two objects ( nodes , structs or islands ) and can be either implicit or explicit . Objects placed near each other are implicitly related as in spatial hypertext systems . This feature is also exploited during the search process . More specifically , grid placement of nodes is exploited in order to be able to calculate the distance among nodes and define a proximity criterion in searches e . g . find nodes of distance 3 . Explicit links are represented as labeled uni - or bi - directional arrows . For example an actor ( node 1 ) “plays in” a film ( node2 ) . Use explicit links only when linking is not possible with an implicit link or you need to provide a label . In the second level of detail all explicit links among nodes and structs belonging to different islands are visible . These links are also visible in the first level of detail as links between the islands but the end points of the link are placed inside the islands’ boxes . Furthermore , a node may be linked to an island as a whole and vice versa . 5 . 3 . 2 Editing Mode Regarding appearance and interface issues during editing mode , the environment expects mostly simple , natural actions from the user , which results in completing and perfecting content representation . For example , bind two nodes with an arrow , guessing the arrow’s direction based on the mouse direction while drawing , draw straight arrow lines etc . In any case all drawn objects are placed on a grid - based whiteboard , so that it is easy to align objects . In order to add content in a node , the user can drag a content item on a node drawn earlier , or drag a web page directly from the browser and place it on the grid and create a node implicitly . Especially for content coming from well - known web 2 . 0 applications , a set of attributes ( specially specified for each web 2 . 0 application ) will be automatic attached to this node , facilitating users to easily collect information and associate metadata to it . The user may drag nodes , structs or islands and reposition them , but links associated with them , remain intact and move accordingly . By clicking on an arrow a text - based relation may be added that grows automatically according to its length . Metadata editing of an object is initiated by double clicking upon it . Addition of new metadata is performed by simply clicking under the last metadata . Metadata properties are structured as Xxxx : xxxxx and grow according to their length . Deleting a metadata is performed by simply dragging it outside the popup window of the object . During editing , any change in a node’s inner structure or placement in or out of a struct or island is recorded , supporting versioning and playback of the overall procedure . Small movements of nodes or sets are not recorded , allowing for creating versions only when significant events occur . Finally , there is a message zone at the bottom of the environment that informs the user of the current state and the possible operations at every step and after every operation . Conclusively , the only operations needed by the user in order to define nodes , structs , links and islands are : clicking and dragging . 5 . 3 . 3 Navigation Mode During navigation ( playback ) mode the archipelago is mostly in a read - only state ( as in VKB [ 30 ] ) allowing only changing level of detail , examining the content of nodes , traversing links and selecting alternative views of the information space . The only editing action a viewer can do is adding , deleting or editing her own annotations . Obviously , annotations do not affect the original content . During this mode , users may click on a node and view its full metadata and either view the multimedia content attached to it or load in a browser the respective web 2 . 0 page . At any time , they can go toggle to editing mode and further refine the archipelago’s structure . In this way , navigation mode protects the archipelago from unwanted edits . HyperSea can exploit the history states while creating the archipelago . It is possible to move among history states or reconstruct gradually the whole process of creating the archipelago from the beginning until its current state . The internal structure of nodes , structs and islands are exploited by the environment to produce alternative views of the archipelago , such as grouped view according to structs , outline hierarchical view , nodes sorted by a date metadata and presented under a time bar and linear view as the charts of metro lines with branches occurring when there are relations with other nodes . Furthermore , a user can choose a metadata and the environment re - colors all nodes having this metadata , without changing the whole structure of nodes . The color scale indicates the sequence of nodes sorted by the selected metadata . For instance , a viewer may easily view in space which nodes are the most frequently used , by selecting the metadata “frequency of use” . Regarding interface issues during navigation mode , there are no menus , popups or lists for supporting the above features . There are just two autohiding arrows (cid:197) ( backward ) and (cid:198) ( forward ) for moving among the states of the island and the question mark ( ? ) for supporting searching ( see next subsection ) . While navigating through history states , if no action is taking place for an interval , the next state of the island is loaded automatically in an animated way . The wheel button of the mouse is used for the swapping between the two levels of detail . If the user moves the mouse pointer over an edge of the visible space , or drag the mouse over a white space , the space is scrolled in this direction . When selecting a node , four square dots appear at its corners . In case of multiple node copies , if one node instance is selected then all nodes’ instances are selected . If a node instance is not visible at a certain zoom level , a visual indicator appears in the edge of the whiteboard pointing the direction of the other node instance . In general , the environment predicts whether the user needs to drag a node , create a link among nodes or islands , view its content or move among the island’s states . In this way , the interface remains simple , whereas emphasis is given on the content and its interconnection . Interconnected content spreads over the screen and navigation buttons appear when needed . 5 . 3 . 4 Searching Features Another way of selecting nodes is by the search interface that exploits the internal structure of the objects , that is their metadata and properties , along with grid placement . The user may pose a question based on automatic or user - set properties , e . g . find nodes with pictures taken after June 2008 distanced no more than 3 40 nodes away . There is a common interface for performing a search query or create a report based on some nodes . By pressing on the question mark always appearing near the navigation buttons , a popup mini island appears , having three initial nodes named : whole node , include any , include all . The user may drag whole nodes on the first node in the popup island , or separate fields on the other two nodes . Field values represent search criteria and users may set them according to their desired values or by using comparison operators . The nodes in the popup island represent the three parts of a union query that returns a list of nodes . The first part of query returns the nodes that are dragged over the first node . The second part returns all nodes of the island that satisfy any of the criteria set by the field values dragged over the second node . The third part returns nodes that satisfy criteria set by the field values dragged over the third node . It should be noted that a criterion based on a field value is imposed on all nodes that have this type of field . When dragging of search criteria is complete , the user may press the question mark of the popup island and a list of nodes satisfying the criteria appears . The query may be saved or refined at a later time by initiating the search interface again . Through the description of the interface , it is clear that the effort was to avoid requiring from end - users any knowledge regarding logical operations , query syntax and metadata names . If a part of the search query is not needed , the user simply does not drag any item on the respective node . Moreover , the search interface is consistent with the overall environment operations . Search results may be presented as a linear sorted list , or directly on the archipelago space , where nodes that satisfy search criteria appear normal while all the other items appeared washy . 5 . 4 Usage Scenario A typical scenario for using the environment in order to create a new archipelago of content is analyzed in the following steps : ( i ) Start from scratch with a new archipelago , ( ii ) Import media files and web pages related to the media files ( e . g . the web page of a singer playing a song ) . These files appear as unorganized jigsaw pieces , ( iii ) Create nodes by dragging media files and web pages in the archipelago , ( iv ) Create structs of nodes , ( v ) Drag nodes of similar content or strong relation into the structs , ( vi ) Delete nodes by dragging them out of archipelago and ( vii ) Relate nodes by connecting them with directional lines . Similarly , a typical scenario for using the environment in order to navigate the content represented by the island is : ( i ) Click nodes in order to explore their content and metadata and view the associated media file or navigate to the web page according to their type , ( ii ) Zoom in and out and drag the island in order to focus on the area of interest or gain an overview of all information , ( iv ) Make nodes invisible by dragging them out of the island . These nodes are not deleted , since we are in navigation mode , ( v ) Create annotations on nodes , structs or islands and produce , in this way , a personalized version of the island’s content , ( vi ) Search for specific nodes based on their metadata , proximity and connections ( vii ) Generate and view a report based on specific nodes , structs or search results . 6 . A WEB 2 . 0 CASE STUDY In order to illustrate the functionality of HyperSea , we present an example that combines most of the before mentioned features . In the example , Alex is a sculptor & painter ; Marty is a journalist & photographer , SUV car fun ; Monica is teaching in the University of Paris about history of Art ; and Sally is a director . Monica is organizing a virtual exhibition with Alex’s artwork . She asks Marty to disseminate it through his blog . Sally learns about the exhibition through the blog and invites her friends John and Mary ( through hi5 ) to attend it . Through the exhibition’s forums , friends exchange details and John finds out about Marty’s interest in SUV’s and joins Marty’s forum , whereas details about the exhibition appear in Google Earth . In the same exhibition , Catherine , one of Monica’s students , gets to know Alex and visits his artwork . They share the same passion about U2 , they listen to U2 music through last . fm , rate it and suggest it to other users . At the end , Sally wraps screenshots from Second Life and blog comments as a heap in order to compose a video , which she uploads in YouTube . The virtual exhibition has been a chance for reuniting the four friends . They decide to plan a vacation together in the summer . They desire to combine every one’s interests , so they decide to go to Florence in Italy , where Monica can guide the rest of the party in the city’s sites . She gathers all information about sites from Wikipedia and organizes it as a stack . Alex is also interested in medieval artwork , although his work is in modern sculpture . Therefore , he gathers artists’ curriculum vitas from Wikipedia as a stack in order to explain the artwork to the rest of the party . On the other hand , Marty , apart from writing down their experience in his blog , he will be the party’s driver . He uses a composite object in order to gather suggestions grouped in heaps about staying , transportations , eating and sightseeing through flickr , booking . com , Google Earth and Picasa . In the same object , Monica and Alex place their suggestions . The company arrives finally in Italy and wants to see a movie . They choose Il Divo and Sally starts to gather information . She finds the film in Wikipedia ( http : / / en . wikipedia . org / wiki / Il _ Divo _ ( film ) ) and downloads the film’s poster . She also tries to find the movie’s trailer in YouTube by typing “Il Divo” . However , owing to the unstructured type of information in YouTube , as in most web 2 . 0 applications , a bunch of video clips appears mostly dealing with the music group “Il Divo” , which is popular in the US ( in Wikipedia also the group’s URL is confusingly similar to the film’s URL ) . At last , Sally manages to find a trailer of the movie at http : / / www . youtube . com / watch ? v = qnFnHhD - AbY . She enjoyed the music score heard in the trailer and finds out from Wikipedia that Teho Teardo is the composer of the film’s soundtrack . Searching for him in MySpace , she does not find a page about him – unstructured information strikes again ! – but rather finds BiP _ HOp music label at http : / / profile . myspace . com / index . cfm ? fuseaction = user . view Profile & friendID = 101900078 , with music inspired from the film’s composer . Finally , Sally buys a BiP _ HOp song from iTunes . Obviously , more links may be added or further specialized : one could add a node among the Wikipedia and MySpace nodes representing the Facebook page of the composer . The following diagrams illustrate the previous example , starting from an overview of islands ( Figure 1 ) and continuing with the same structure in bigger zoom ( Figure 2 ) . In this figure , most of the environment features are illustrated , such as link labels , person nodes , annotations , list search results , links , multiple node instances , coloring according to node type and maps . The results of a search procedure for YouTube videos are shown in Figure 3 , whereas a node of the search results in full zoom with its metadata is shown in Figure 4 . 41 Figure 1 : Overview of islands Figure 3 : Search results for YouTube Figure 2 : Islands in zoom 42 Figure 4 : A YouTube node in full zoom 7 . CONCLUSIONS / FUTURE WORK This paper presented an environment for importing , linking and organizing web 2 . 0 content and then presenting and further disseminating it . The environment exploits previous hypertext research results and helps bringing on a single whiteboard content from diverse sources by requiring simple operations from users . The same interface is employed for importing content , linking , presenting and searching . An alpha version prototype of the environment has been implemented in Adobe Flash by using OWL - based ontology ( http : / / w3 . org ) in the background for storing the objects’ ( nodes , sets , metadata and links ) details . Part of the functionality of the environment has been used in the implementation of the new web site of the Archaeological Museum of Ioannina ( http : / / www . amio . gr ) . Although no web 2 . 0 content has been used in this site , archaeologists and museum curators had the chance to organize the content of artifacts , collections and museum exhibition areas by using the reasoning of the environment . However , a complete evaluation is needed for the use of the environment for web 2 . 0 content . In the future , we plan to finalize the implementation of the environment and organize the functionality of the environment in three modes ( i ) read - only – playback mode , ( ii ) copy mode where the user can copy an island state , edit the copy and further comment it and ( iii ) fully collaborative mode , where users should be able to work simultaneously on a shared whiteboard and notice other users’ actions and content moving . During fully collaboration mode , content by different users may be expressed by different colors . Furthermore , user actions logging can be further exploited in order to create statistics showing content usage , popularity and relations . On the other hand , we plan to study how this environment could be exploited in order to prepare and playback content for educational purposes . Finally , the main effort will address existing , popular web 2 . 0 applications ( such as blogging ) in order to analyze their presentation structure and propose the embedding of functionality according to the environment proposed . 8 . REFERENCES [ 1 ] Bernstein , M . 1997 . Design note : Neighborhoods in spatial hypertext . SIGWEB Newsl . 6 , 1 ( Feb . 1997 ) , 15 - 19 . [ 2 ] Bernstein , M . 1998 . Patterns of hypertext . In Proceedings of the Ninth ACM Conference on Hypertext and Hypermedia : Links , Objects , Time and Space - - - Structure in Hypermedia Systems : Links , Objects , Time and Space - - - Structure in Hypermedia Systems ( Pittsburgh , Pennsylvania , United States , June 20 - 24 , 1998 ) . HYPERTEXT ' 98 . ACM , New York , NY , 21 - 29 . [ 3 ] Bolchini , D . , Garzotto , F . , and Paolini , P . 2008 . Investigating success factors for hypermedia development tools . In Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia ( Pittsburgh , PA , USA , June 19 - 21 , 2008 ) . HT ' 08 . ACM , New York , NY , 187 - 192 . [ 4 ] Buchanan , G . and Owen , T . 2008 . Improving navigation interaction in digital documents . In Proceedings of the 8th ACM / IEEE - CS Joint Conference on Digital Libraries ( Pittsburgh PA , PA , USA , June 16 - 20 , 2008 ) . JCDL ' 08 . ACM , New York , NY , 389 - 392 . [ 5 ] Buchanan , G . , Blandford , A . , Thimbleby , H . , and Jones , M . 2004 . Integrating information seeking and structuring : exploring the role of spatial hypertext in a digital library . In Proceedings of the Fifteenth ACM Conference on Hypertext and Hypermedia ( Santa Cruz , CA , USA , August 09 - 13 , 2004 ) . HYPERTEXT ' 04 . [ 6 ] Carr , L . , Hall , W . , Bechhofer , S . , and Goble , C . 2001 . Conceptual linking : ontology - based open hypermedia . In Proceedings of the 10th international Conference on World Wide Web ( Hong Kong , Hong Kong , May 01 - 05 , 2001 ) . WWW ' 01 . ACM , New York , NY , 334 - 342 . [ 7 ] Carr , L . , Miles - Board , T . , Woukeu , A . , Wills , G . , and Hall , W . 2004 . The case for explicit knowledge in documents . In Proceedings of the 2004 ACM Symposium on Document Engineering ( Milwaukee , Wisconsin , USA , October 28 - 30 , 2004 ) . DocEng ' 04 . ACM , New York , NY , 90 - 98 . [ 8 ] Casteleyn , S . , Van Woensel , W . , and Houben , G . 2007 . A semantics - based aspect - oriented approach to adaptation in web engineering . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 189 - 198 . [ 9 ] Chin , A . and Chignell , M . 2007 . Identifying subcommunities using cohesive subgroups in social hypertext . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 175 - 178 . [ 10 ] De Bra , P . , Aroyo , L . and Chepegin , V . 2004 . The Next Big Thing : Adaptive Web - Based Systems . In Journal of Digital Information , vol . 5 , 2004 . [ 11 ] Diakopoulos , N . , Luther , K . , Medynskiy , Y . , and Essa , I . 2007 . The evolution of authorship in a remix society . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 133 - 136 . [ 12 ] Donaldson , J . J . , Conover , M . , Markines , B . , Roinestad , H . , and Menczer , F . 2008 . Visualizing social links in exploratory search . In Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia ( Pittsburgh , PA , USA , June 19 - 21 , 2008 ) . HT ' 08 . ACM , New York , NY , 213 - 218 . [ 13 ] Francisco - Revilla , L . and Shipman , F . M . 2004 . WARP : a web - based dynamic spatial hypertext . In Proceedings of the Fifteenth ACM Conference on Hypertext and Hypermedia ( Santa Cruz , CA , USA , August 09 - 13 , 2004 ) . HYPERTEXT ' 04 . ACM , New York , NY , 235 - 236 . [ 14 ] Francisco - Revilla , L . and Shipman , F . 2005 . Parsing and interpreting ambiguous structures in spatial hypermedia . In Proceedings of the Sixteenth ACM Conference on Hypertext 43 and Hypermedia ( Salzburg , Austria , September 06 - 09 , 2005 ) . HYPERTEXT ' 05 . ACM , New York , NY , 107 - 116 . [ 15 ] Hansen , F . A . and Grønbæk , K . 2008 . Social web applications in the city : a lightweight infrastructure for urban computing . In Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia ( Pittsburgh , PA , USA , June 19 - 21 , 2008 ) . HT ' 08 . ACM , New York , NY , 175 - 180 . [ 16 ] Herman , I . , Melançon , G . and Marshall , M . S . 2000 . Graph Visualization and Navigation in Information Visualization : A Survey . In IEEE Transactions on Visualization and Computer Graphics , Vol . 6 , No . 1 , pp . 24 - 43 . [ 17 ] Hsieh , H . and Shipman , F . M . 2002 . Manipulating structured information in a visual workspace . In Proceedings of the 15th Annual ACM Symposium on User interface Software and Technology ( Paris , France , October 27 - 30 , 2002 ) . UIST ' 02 . ACM , New York , NY , 217 - 226 . [ 18 ] Kolb , D . A . 2008 . The revenge of the page . In Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia ( Pittsburgh , PA , USA , June 19 - 21 , 2008 ) . HT ' 08 . ACM , New York , NY , 89 - 96 . [ 19 ] Marshall , C . C . and Shipman , F . M . 1993 . Searching for the missing link : discovering implicit structure in spatial hypertext . In Proceedings of the Fifth ACM Conference on Hypertext ( Seattle , Washington , United States , November 14 - 18 , 1993 ) . HYPERTEXT ' 93 . ACM , New York , NY , 217 - 230 . [ 20 ] Matias , J . N . 2005 . Philadelphia fullerine : a case study in three - dimensional hypermedia . In Proceedings of the Sixteenth ACM Conference on Hypertext and Hypermedia ( Salzburg , Austria , September 06 - 09 , 2005 ) . HYPERTEXT ' 05 . ACM , New York , NY , 7 - 14 . [ 21 ] Negoescu , R . A . and Gatica - Perez , D . 2008 . Analyzing Flickr groups . In Proceedings of the 2008 international Conference on Content - Based Image and Video Retrieval ( Niagara Falls , Canada , July 07 - 09 , 2008 ) . CIVR ' 08 . ACM , New York , NY , 417 - 426 . [ 22 ] Nielsen , J . 2005 . Reviving Advanced Hypertext . Jakob Nielsen ' s Alertbox , January 3 , 2005 , http : / / www . useit . com / alertbox / 20050103 . html [ 23 ] O ' Reilly , T . 2005 . What Is web 2 . 0 . O ' Reilly Network , http : / / www . oreillynet . com / pub / a / oreilly / tim / news / 2005 / 09 / 30 / what - is - web - 20 . html [ 24 ] Rubart , J . 2007 . Architecting structure - aware applications . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 185 - 188 . [ 25 ] Serrano , M . 2007 . Programming web multimedia applications with hop . In Proceedings of the 15th international Conference on Multimedia ( Augsburg , Germany , September 25 - 29 , 2007 ) . MULTIMEDIA ' 07 . ACM , New York , NY , 1001 - 1004 . [ 26 ] Shipman , F . M . , Hsieh , H . , Maloor , P . , and Moore , J . M . 2001 . The visual knowledge builder : a second generation spatial hypertext . In Proceedings of the 12th ACM Conference on Hypertext and Hypermedia ( Århus , none , Denmark , August 14 - 18 , 2001 ) . HYPERTEXT ' 01 . ACM , New York , NY , 113 - 122 . [ 27 ] Shipman , F . M . , Hsieh , H . , Moore , J . M . , and Zacchi , A . 2004 . Supporting personal collections across digital libraries in spatial hypertext . In Proceedings of the 4th ACM / IEEE - CS Joint Conference on Digital Libraries ( Tuscon , AZ , USA , June 07 - 11 , 2004 ) . JCDL ' 04 . ACM , New York , NY , 358 - 367 . [ 28 ] Shipman , F . M . and Marshall , C . C . 1999 . Spatial hypertext : an alternative to navigational and semantic links . ACM Comput . Surv . 31 , 4es ( Dec . 1999 ) , 14 . [ 29 ] Shipman , F . M . , Marshall , C . C . , and Moran , T . P . " Finding and Using Implicit Structure in Human - Organized Spatial Layouts of Information . " Proceedings of ACM CHI ' 95 , Denver , Colorado ( May 7 - 11 , 1995 ) , pp . 346 - 353 . [ 30 ] Shipman , F . , Moore , J . M . , Maloor , P . , Hsieh , H . , and Akkapeddi , R . 2002 . Semantics happen : knowledge building in spatial hypertext . In Proceedings of the Thirteenth ACM Conference on Hypertext and Hypermedia ( College Park , Maryland , USA , June 11 - 15 , 2002 ) . J . Blustein , Ed . HYPERTEXT ' 02 . ACM , New York , NY , 25 - 34 . [ 31 ] Wills , G . B . , Abbas , N . , Chandrasekharan , R . , Crowder , R . M . , Gilbert , L . , Howard , Y . M . , Millard , D . E . , Wong , S . C . , and Walters , R . J . 2007 . An agile hypertext design methodology . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 181 - 184 . [ 32 ] Wu , H . , Zubair , M . , and Maly , K . 2007 . Collaborative classification of growing collections with evolving facets . In Proceedings of the Eighteenth Conference on Hypertext and Hypermedia ( Manchester , UK , September 10 - 12 , 2007 ) . HT ' 07 . ACM , New York , NY , 167 - 170 . [ 33 ] Yamamoto , Y . , Nakakoji , K . , and Aoki , A . 2002 . Spatial Hypertext for linear - information authoring : Interaction design and system development based on the ART Design principle . In Proceedings of the Thirteenth ACM Conference on Hypertext and Hypermedia ( College Park , Maryland , USA , June 11 - 15 , 2002 ) . J . Blustein , Ed . HYPERTEXT ' 02 . ACM , New York , NY , 35 - 44 . [ 34 ] Yamamoto , Y . , Nakakoji , K . , Nishinaka , Y . , Asada , M . , and Matsuda , R . 2005 . What is the space for ? : the role of space in authoring hypertext representations . In Proceedings of the Sixteenth ACM Conference on Hypertext and Hypermedia ( Salzburg , Austria , September 06 - 09 , 2005 ) . HYPERTEXT ' 05 . ACM , New York , NY , 117 - 125 . 44