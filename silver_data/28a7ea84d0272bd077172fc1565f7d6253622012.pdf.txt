This article was downloaded by : [ Computing & Library Services , University of Huddersfield ] On : 31 December 2014 , At : 19 : 02 Publisher : Routledge Informa Ltd Registered in England and Wales Registered Number : 1072954 Registered office : Mortimer House , 37 - 41 Mortimer Street , London W1T 3JH , UK Computer Science Education Publication details , including instructions for authors and subscription information : http : / / www . tandfonline . com / loi / ncse20 Evolving Pedagogical Patterns : The Work of the Pedagogical Patterns Project Helen Sharp , Mary Lynn Manns & Jutta Eckstein Published online : 09 Aug 2010 . To cite this article : Helen Sharp , Mary Lynn Manns & Jutta Eckstein ( 2003 ) Evolving Pedagogical Patterns : The Work of the Pedagogical Patterns Project , Computer Science Education , 13 : 4 , 315 - 330 To link to this article : http : / / dx . doi . org / 10 . 1076 / csed . 13 . 4 . 315 . 17493 PLEASE SCROLL DOWN FOR ARTICLE Taylor & Francis makes every effort to ensure the accuracy of all the information ( the “Content” ) contained in the publications on our platform . However , Taylor & Francis , our agents , and our licensors make no representations or warranties whatsoever as to the accuracy , completeness , or suitability for any purpose of the Content . Any opinions and views expressed in this publication are the opinions and views of the authors , and are not the views of or endorsed by Taylor & Francis . The accuracy of the Content should not be relied upon and should be independently verified with primary sources of information . Taylor and Francis shall not be liable for any losses , actions , claims , proceedings , demands , costs , expenses , damages , and other liabilities whatsoever or howsoever caused arising directly or indirectly in connection with , in relation to or arising out of the use of the Content . This article may be used for research , teaching , and private study purposes . Any substantial or systematic reproduction , redistribution , reselling , loan , sub - licensing , systematic supply , or distribution in any form to anyone is expressly forbidden . Terms & Conditions of access and use can be found at http : / / www . tandfonline . com / page / terms - and - conditions D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Computer Science Education 0899 - 3408 / 03 / 1304 - 315 $ 16 . 00 2003 , Vol . 13 , No . 4 , pp . 315 – 330 # Swets & Zeitlinger Evolving Pedagogical Patterns : The Work of the Pedagogical Patterns Project Helen Sharp 1 , Mary Lynn Manns 2 , and Jutta Eckstein 3 1 The Open University , Walton Hall , Milton Keynes , UK , 2 University of North Carolina , Asheville , NC , USA , and 3 Objects in Action , Thierschstr . 20 , 80538 Munich , Germany ABSTRACT This paper is a summary of the pedagogical patterns project . The project started in 1996 with the aim of collecting and disseminating experiences of teaching and learning about object technology . We adopted a pattern format early on , although the speciﬁc format has evolved over time . In this paper we give an overall view of the project : where it started , how the material we have collected has evolved and matured , and where we need to go from here . More material from the project is available from our website www . pedagogicalpatterns . org , and our publications . 1 . INTRODUCTION The Pedagogical Patterns Project started in 1996 and has enjoyed the enthusiastic support of many people around the world . The idea for the project emerged at OOPSLA’95 ( ACM’s annual conference on Object - Oriented Programming , Systems , Languages and Applications ) . The process of training , retraining , and educating people in object technology ( OT ) at that time held many unanswered questions . Although good pedagogical ideas were presented at object - oriented conferences and were published in proceedings and journals each year , it was often difﬁcult to see how to transfer these experiences to different circumstances . The pedagogical patterns project set out to collect and disseminate successful practices of OT educators in one place and in one reusable form . Address correspondence to : Helen Sharp , The Open University , Walton Hall , Milton Keynes , MK7 6AA , UK . Tel . : þ 44 - 1908 - 653638 . Fax : þ 44 - 1908 - 652140 . E - mail : H . C . Sharp @ open . ac . uk D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Initially , we were inspired by Susan Lilly ( Lilly , 1996 ) who referred to ‘‘ reusable pedagogical design patterns ’’ . According to Lilly , a pedagogical pattern should be repeatable and easy to adapt . Each pattern should be described in a way that allows it to be easily ‘‘instantiated’’ for different lessons by different instructors . We adopted this idea and her initial format and set out to talk with educators . During the years 1996 – 1998 we conducted many workshops in Europe and North America ( Manns , Sharp , Prieto , & McLaughlin , 1998 ; Sharp , Manns , McLaughlin , & Prieto , 1998a , 1998b ; Sharp , Manns , McLaughlin , Prieto , & Dodani , 1996 ) . These resulted in a collection of around 50 proto - patterns , that is , ideas that formed the basis for developing patterns . From these beginnings , the project has developed four pattern languages : Feedback , Active Learning , Experiential Learning , and Gaining Different Perspectives . The aim of this paper is twofold . First we want to invite you , the reader , to become part of the project , to look at the material we have collated and to use anything that appears relevant to your circumstances . Second , we want to explain the history of the material so that you are in a better position to understand how the material has developed , and this might shed insight into how it may be applicable in your circumstances . In doing so we shall chart the process of developing the languages , a process that is rarely discussed in papers ( Fincher & Utting , 2002 ) . We begin the paper by giving some background to the project : the situation in OT education when we started , and some information about patterns and pattern languages . In Section 3 we give an overview of the project , and in Section 4 we describe the steps we used in our workshops to capture ideas in our initial format . We then show the evolution of a proto - pattern into one of our current patterns within the Experiential Learning pattern language . Finally , we suggest some future directions for the project . 2 . SOME BACKGROUND TO THE PROJECT 2 . 1 . OT Education Although object - oriented development had been around since the 1960s , it was only in the late 1980s that an object - oriented approach to software development became more popular and accepted in industry . The huge success of the ﬁrst OOPSLA conference , which was held in 1986 , illustrated the scale of interest in the area . 316 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 However , object technology was regarded as a ‘new paradigm’ , and much of the rhetoric through the late 1980s and into the 1990s , about the effective learning and use of OT concepts referred to ‘a change of mindset’ , and the need to ‘unlearn’ or ‘forget’ current software development wisdom . The following quotation is not unusual in its content or its implications : A major barrier to adopting object technology is the difﬁculty people have in shifting to the mindset required by the new paradigm . ( Sternberg , 1994 ) Educators found that teaching this new approach in software development was not easy and they raised a number of challenges , not least of which was learning the approach themselves . A variety of issues were often discussed repeatedly in different fora . The discussions included debates about which programming language to use , which analysis and design notation was most appropriate , and how to communicate the main concepts of object - oriented development and in which sequence . Although there were structured forums for presenting different views ( e . g . , OOPSLA Educators’ Symposium and TaTTOO ( Teaching and Training in the Technology of Objects ) ) , the experiences being shared were usually constrained by the presenter’s own context , and were not readily reusable by others . This was the backdrop for the start of the Pedagogical Patterns Project . 2 . 2 . Patterns The concept of a pattern in software engineering draws its inspiration from Christopher Alexander ( Alexander , 1977 ) , an English architect . Alexander used patterns to document successful design practices in the built environment . His focus on proven solutions , rather than new and unique ones , was motivated by his observation that modern day buildings and towns do not approach the beauty of the historical past . He argues that the use of documented , successful solutions to common problems creates structures with a quality that can’t be named but is alive , whole , comfortable , free , exact and eternal ( Alexander , 1979 ) . Alexander’s emphasis on patterns as a means to improving quality has captured attention , and his deﬁnition of a pattern is widely cited throughout the software discipline : Each pattern describes a problem which occurs over and over again in our environment , and then describes the core of the solution to that problem , in such a way that you can use this solution a million times over , without doing it the same way twice . ( Alexander , 1977 ) EVOLVING PEDAGOGICAL PATTERNS 317 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 The purpose of a pattern is to capture knowledge and experience and transmit it to others ( Coplien , 1996 ) . Although various formats are used , this piece of literature typically includes such information as a problem statement , the context of the problem , the forces that act upon it , a solution , and the rationale for and the consequences of using that solution . Unlike other forms of ‘‘do this’’ documentation that impose rules and prescribed processes , the solution in a pattern is presented in a conceptual form so that the pattern user can shape it to his or her particular needs and circumstances . Speciﬁc descriptions of use are also included in each pattern to provide evidence that a recurring problem and proven solution , rather than just a good idea , has been captured . When a name is assigned to this collection of information , a signiﬁcant amount of knowledge can be communicated with the mention of that name . Probably the most well - known collection of patterns in software development is in Gamma et al . ( 1995 ) . In the years following this publication , a large number of books , journal articles and web sites have appeared with a variety of patterns addressing recurring problems in building , managing and organizing software systems . The industry is currently using the pattern form to document and communicate expertise in many system development tasks such as analysis ( Fowler , 1997 ) , design ( Buschmann et al . , 1996 ) , testing ( DeLano & Rising , 1998 ) , project management ( Cockburn , 1998 ) and training ( Bergin , Eckstein , Manns , & Wallingford , 2001 ; Eckstein , Bergin , & Sharp , 2002a ; Eckstein , Bergin , & Sharp , 2003 ; Eckstein , Manns , Wallingford , & Marquardt , 2002b ) . 2 . 3 . Pattern Languages A pattern language is a collection of related patterns . Building relationships between individual patterns allows them to work together in a systematic way . Therefore , while one pattern records a proven solution to one recurring problem , a pattern language provides a resource to solve a collection of related problems and address much more complex issues . 1 Pattern languages usually evolve over time . As individual patterns are written in a particular domain , the interdependencies that surface between them are documented . While this is being done , the individual patterns and the languages are treated as ‘‘living things’’ that evolve and change as experience reveals more about the problem , context , and solution ( Rising , 1998 ) . 1 The concept of a pattern language structure is one feature that allows patterns to stand out from other forms of documentation . For two other features , process and community , refer to Manns , 2002 . 318 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Exactly the same thing has happened in the Pedagogical Patterns Project . Single patterns have been written by individuals , and it is only when discussing these patterns within a group of educators that the interdependen - cies between the patterns have surfaced and several pattern languages have evolved . Those pattern languages in turn have then been developed by several authors jointly , thus maintaining different views on the same domain . The section ‘Emergence of a pedagogical pattern language’ below discusses this process in more detail . 3 . AN OVERVIEW OF THE PROJECT The Pedagogical Patterns Project was started in 1995 by four OT educators : Mary Lynn Manns , Phil McLaughlin , Maximo Prieto and Helen Sharp . Our aim was to capture successful experiences in learning and teaching OT , from industry or academia , in a consistent form that facilitated comparison and accessibility . We used the label ‘pattern’ as an indication that we were trying to capture reusable experience that could be shared . Initially we documented some of our own ideas so as to explore the area and decide how best to proceed , but our intention right from the start was to encourage others to document and share their own pedagogical experiences . We began collecting ideas from others during an educators’ workshop at ECOOP’96 ( in Linz , Austria ) . By the end of 1997 we had held sessions at numerous conferences in America and Europe and had collected in excess of 50 proto - patterns . Each contribution was authored by the idea’s originator and in most cases had developed from sketchy beginnings at one of the workshops . The contributions came from a wide selection of people from many countries and with varying circumstances and backgrounds . This meant that the proto - patterns varied considerably in focus , from curriculum design to techniques for teaching or learning a speciﬁc concept . Initially we did not see this as a problem as we were trying to collect successful reusable experience . The people attending our workshops encouraged us in our efforts and were enthusiastic about the results . However , there were two aspects that became problematic : the accessibility of the proto - patterns for evolution ; and the importance of identifying relationships between the patterns to build pattern languages . In order for the proto - patterns to evolve they needed to be scrutinised and discussed by different educators . The originator was frequently inaccessible at the time of the discussion . Therefore , other authors took the proto - pattern over EVOLVING PEDAGOGICAL PATTERNS 319 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 and modiﬁed it according to the feedback . To do this required the collection to be accessible in a helpful way . We initially developed indexes into the material : one subject - based ( e . g . , this has been used to teach Smalltalk ) , one based on teaching challenges ( e . g . , how do you convince students of the depth of object technology ) , one by author name , and one by proto - pattern name . We then asked educators to pick a scenario from their own experience and to identify which patterns they might ﬁnd helpful in this scenario , or that resonated with their own actions . While we made some headway using this approach , it became clear that this was not the best way to proceed because educators needed to be more familiar with the materials and with the process of pattern - writing . In addition , since the proto - patterns had been generated by different people , they were not linked together . Relationships had to be identiﬁed and repetitive information had to be eliminated in order to develop a draft pattern language . We found that although it was possible to make certain associations between patterns , and to see how different patterns might work together , it proved to be very difﬁcult to produce a coherent pattern language from the collection . Where patterns were generated by the same person and had been designed to work together , they formed fragments of a coherent language , but could not be integrated easily with other patterns . Around the beginning of 2000 , we realised that our original domain – teaching and learning OT – was just too large to yield one language . Mining and writing a pattern language requires the domain to be narrower and more tightly deﬁned . Our set of proto - patterns covered a wide range of areas and so was likely to encompass a number of pattern languages . At OOPSLA 2000 we held a workshop where a small group of OT educators looked at the proto - patterns and identiﬁed potential links between them . From this discussion , we identiﬁed one possible language . We then formed a group of 8 – 10 OT educators with a variety of backgrounds ( industry , academia , small and large classes , face - to - face and distant learning ) who were prepared to spend time reﬁning and redrafting existing material , and producing new material to ﬁll gaps in the language . This initial grouping has developed into the Experiential Learning pattern language ( Eckstein et al . , 2002b ) , which is discussed further below . Over the subsequent 2 years , members of this group have re - written proto - patterns , ﬁlled in gaps and produced links between patterns , to produce four pattern languages . We are driven by the deadlines for PLoP ( Pattern Languages of Programming ) and EuroPLoP ( European Pattern Languages of Program - ming ) conferences as we aim to have the languages reviewed by other pattern developers . We have beneﬁted very much from this approach , because pattern 320 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 experts from ﬁelds other than education provide their feedback at these conferences , and because it gives the languages wider exposure . 4 . EMERGENCE OF A PEDAGOGICAL PATTERN LANGUAGE The following is a summary of how a pattern might evolve from our initial group of proto - patterns and become part of a pattern language . 4 . 1 . Documenting Initial Ideas ( Proto - Patterns ) At the TOOLS USA’96 conference , participants in the ‘‘Challenges and Successes in Teaching OT’’ workshop created some drafts for pedagogical patterns using a four - step process . An example follows . Step 1 . One of the challenges is expressed : When learning the object - oriented approach to software develop - ment , students experience interference from procedure - oriented concepts they already know . As a result , there is often more inter - ference than reinforcing . Step 2 . Potential solutions are brainstormed : The instructor can make comparisons for students . Or , The instructor can attempt to make students think in an object way from the beginning by postponing answers to students’ inquiries regarding howtheirpresentknowledge ( e . g . , procedure - oriented ) comparestoOO . Or , The instructor may wish to lead students through the design of a system in ﬁrst a ‘‘traditional’’ way and then in an OO way . Step 3 . A pedagogical pattern is drafted from one of the three potential solutions : Solution # 3 was formatted into the ﬁrst draft of a pattern , as follows : (cid:2) Students design and implement a project using a traditional approach . (cid:2) Instructor lectures on object concepts and suggests how this project could be repartitioned into objects . (cid:2) Project is redone , by the students , using objects . EVOLVING PEDAGOGICAL PATTERNS 321 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Step 4 . Describe this pattern using the pedagogical pattern format : Since this was one of the ﬁrst patterns contributed to this project , it used the old format . Step 5 . For further improvement , the pattern is reviewed , shepherded and discussed in a pattern writers’ workshop , at a pattern conference or through one of our ‘Birds - of a Feather’ sessions . The proto - pattern developed here was called DIRR ( Do - Implement - Redesign - Reimplement see Fig . 1 ) and was intended to be used to explain new concepts and methods based on old concepts . This proto - pattern has evolved and been incorporated into a variety of different patterns and pattern languages . 4 . 2 . The Evolution of the Pattern Format Changing the format of the patterns was one of the key decisions we made . From the feedback acquired through workshops and those who used the proto - patterns it became clear that the initial format was not suitable . We therefore developed a new format . This format de - emphasised the structure of a session , which was an emphasis present in Lilly’s original patterns , but which we found inappropriate . The new format did not remove any of the information required in the earlier version , but was more speciﬁc to pedagogy . However , despite this change and considerable debate , it was decided that the new format was also uncomfortable for capturing information about pedagogy . As you can see from the example in Figure 1 our names were initially based on the structure of the session being described . We took this naming convention from Lilly ( 1996 ) but it was not an appropriate one . The resulting structure is clear and simple and probably a good starting point , particularly for ﬁrst - time pattern authors , but it isn’t easy to read . Thus we decided to use the Alexandrian form , which is much more literary and informative because it provides better support for connecting the different patterns to a pattern language . By focusing on the core of the pattern , the Alexandrian form emphasises the tight integration of the patterns , whereas with an outline form this coupling gets lost by focusing on the details of each and every pattern . This is actually the critique which is stated the most often for the classical patterns literature such as Gamma et al . ( 1995 ) , Buschmann et al . ( 1996 ) and Schmidt et al . ( 2000 ) . Focussing on the details of the patterns makes the patterns not only lengthy , but it also hides the risk that the patterns are becoming dated . This is the reason why Frank Buschmann for example is 322 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Fig . 1 . One of the ﬁrst proto - patterns originally drafted at TOOLS USA’96 . EVOLVING PEDAGOGICAL PATTERNS 323 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 currently rewriting Schmidt et al . ( 2000 ) in Alexandrian form to highlight the kernel of these patterns and their interrelations and making them this way timeless . In this form , the names are more memorable and capture the purpose Fig . 2 . Proto - pattern originally drafted for the OOPSLA’96 workshop . 324 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 of the pattern . Moreover , the typical feedback we receive from pattern experts , is that the Alexandrian form is probably the best for the content we are delivering . 4 . 3 . The Evolution of a Pattern To illustrate the kinds of transformation from early proto - pattern to now , we present here DDRR ( Fig . 2 ) and its equivalent pattern in the Experiential Learning pattern language ( Fig . 3 ) . This pattern was then revised by another member of the team and the pattern below was developed in the Alexandrian form , which we are now using for all our patterns . Note that the name , scope and the particular use of typeface and visual appearance has also changed . It is important to get all aspects of the presentation right . There are some key features to this form . All patterns are written in the you - form , thus directly talking to you , the teacher . In addition to the pattern name , each pattern is divided into several sections . The sections are separated by ? ? ? . The ﬁrst section sets the context for the pattern . Section two contains the forces and the problem in bold font . The next section outlines the solution in bold font and then includes the consequences , limitations and disadvantages . The last section provides examples of the pattern’s application and any further information in italic font . References to patterns inside this pattern language are in C APITAL L ETTERS , references to patterns published elsewhere are in normal font , but followed with the [ pointer ] to the reference section . Fig . 2 . ( continued ) . EVOLVING PEDAGOGICAL PATTERNS 325 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 One of the important elements of Alexander’s work is a picture , but architecture lends itself more easily to illustration with photographs as the material is far more visual than education . It might , however , enhance our patterns to include photographs of sample teaching sessions , provided that the photographs are meaningful . 4 . 4 . The Pattern Languages The four pattern languages we have developed to date are Experiential Learning ( Eckstein et al . , 2002b ) , Feedback ( Eckstein et al . , 2003 ) , Active Learning ( Eckstein et al . , 2002a ) and Gaining Different Perspectives ( Bergin et al . , 2001 ) . Each language begins with an introduction to the project and to the language , including a description of the format used . We described the format itself above , but there is one further element – each pattern is marked with one or two asterisks ( ? ) to show how fundamental we believe the pattern is . Two asterisks denote patterns that state invariants , that is , we Fig . 3 . Revised proto - pattern , as it appears as part of the Experiential Pattern Language . 326 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 believe that it is not possible to solve the stated problem properly without referring to the solution that we have given . One asterisk means that we think that we are on the right track , but we believe it will be possible to improve the solution . We then include a quick access table . The table lists some problems that often occur in a teaching environment , and the respective patterns of the language that address those problems . An example of this from the Experiential Learning language is in Figure 4 . In Feedback and Active Learning we conclude with a set of thumbnails to describe the patterns that are not part of the language but are referred to from within the language . We added this to make the language a little more self - contained and more easily understood . All of the languages are available for viewing and downloading from our website at www . pedagogicalpatterns . org . 5 . FUTURE Any patterns effort is a ‘work - in - progress’ because it is constantly evolving . During the life of the project , we have learned a lot about patterns and their application to pedagogy , and the work is still growing and changing . Although we have a set of patterns that appear to work together as a language , evolution Fig . 4 . A Quick Access table for the patterns in the Experiential Learning pattern language . EVOLVING PEDAGOGICAL PATTERNS 327 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 will continue as more educators use the languages in different circumstances . Apart from this constant evolution , there are three other areas we believe need attention : 1 . It is a further illustration of how wide our initial scope was that the four languages do not include all of the original material we collected . There are more languages to be identiﬁed and developed from this material . 2 . We really want the languages to be used and evolved , and have attempted to publicise the project widely ( e . g . , Eckstein , 1999 ; Eckstein & Voelter , 2001 ; Manns , Voelter , & Eckstein , 2001 ) . However , for people outside the project who don’t know the material as well as members of the project , it can be quite daunting to pick up a language and begin to use the patterns it contains . It is useful to have an easy access mechanism for them . The presentation of the language includes some introductory material to help newcomers understand the language’s structure and to help them ﬁnd patterns of use to them , for example , the quick access table mentioned above . But we need to develop this help further , possibly by creating a framework that would lead a newcomer through the language . 3 . We want to make the efforts of the project more visible and accessible . The internet is one approach , publishing a book will be another one . Some might argue ( e . g . , Fincher , 1999 ) that the material we have collected does not contain all the principles of patterns as deﬁned in ( Alexander , 1979 ) . Maybe this is so , but we are working as a small group towards reﬁning the languages , ﬁlling in the gaps , and collecting more experiences in order to develop the ‘quality without a name’ that Alexander talks about . The more people we have using the patterns , the more chance we have of developing a reusable , accessible and most importantly helpful set of pattern languages for teaching OT . Please use the collection and let us know your reactions . ACKNOWLEDGEMENTS We’d like to thank everyone who is currently involved in the Pedagogical Patterns Project , and many others around the world who have contributed ideas , comments , shepherding and support , not to mention their time through workshops and email discussions , or who have visited the website . We’d especially like to acknowledge Joe Bergin , Jane Chandler , Klaus Marquardt , Alan O’Callaghan , Markus Voelter and Eugene Wallingford who have worked unerringly to develop and enhance the pattern languages . 328 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 REFERENCES Alexander , C . ( 1977 ) . A pattern language . New York : Oxford University Press . Alexander , C . ( 1979 ) . The timeless way of building . New York : Oxford University Press . Bergin J . , & Eckstein , J . ( 2003 ) . In press . Bergin , J . , Eckstein , J . , Manns , M . L . , & Wallingford , E . ( 2001 ) . Patterns for Gaining Different Perspectives . In Proceedings of PLoP 2001 . Buschmann , F . , Meunier , R . , Rohnert , H . , Sommerlad , P . , & Stal , M . ( 1996 ) . Pattern - oriented software architecture : A system of patterns . Chichester : Wiley . Cockburn , A . ( 1998 ) . Surviving object - oriented projects . Reading , MA : Addison - Wesley . Coplien , J . O . ( 1996 ) . Software patterns . SIGS Management Brieﬁngs , SIGS Books , ISBN 1 - 884842 - 50 - X . DeLano , D . , & Rising , L . ( 1998 ) . Patterns for system testing . In Martin ( Ed . ) , Pattern languages of program design ( Vol . 3 ) . Reading , MA : Addison - Wesley . Eckstein , J . ( 1999 ) . Workshop Report on : The pedagogical patterns project successes in teaching object technology . In OOPSLA’99 Educator’s Symposium Notes . Eckstein , J . , Bergin , J . , & Sharp , H . ( 2003 ) . Feedback patterns . In proceedings of EuroPLoP 2002 . Eckstein , J . , Bergin , J . , & Sharp , H . ( 2002a ) . Patterns for active learning . Proceedings of PLoP 2002 . Eckstein , J . , Manns , M . L . , Wallingford , E . , & Marquardt , K . ( 2002b ) . Patterns for experiential learning . In Proceedings of EuroPLoP 2001 , Universitaetsverlag Konstanz . Eckstein , J . , & Voelter , M . ( 2001 ) . Patterns and pedagogy – a winning team . [ On - line ] magazine from IBM developerWorks at http : / / www - 106 . ibm . com / developerworks / library / j - patt . html January . Fincher , S . , & Utting , I . ( 2002 ) . Pedagogical patterns : Their place in the genre . In Proceedings of IT in Computer Science Education ( ITiCSE ) , Aarhus , Denmark . Fincher , S . A . ( 1999 ) . Analysis of design : An exploration of patterns and pattern languages for pedagogy . Journal of Computers in Maths and Science Teaching , 18 ( 3 ) , 331 – 348 . Fowler , M . ( 1997 ) . Analysis patterns : Reusable object models . California : Addison - Wesley . Gamma , E . , Helm , R . , Johnson , R . , & Vlissides , J . ( 1995 ) . Design patterns : Elements of reusable object - oriented software . Reading , MA : Addison - Wesley . Lilly , S . ( 1996 , January ) . Patterns for pedagogy . Object Magazine , 5 ( 8 ) , 96 – 95 . Manns , M . L . ( 2002 ) . An investigation into factors affecting the adoption and diffusion of software patterns in industry . PhD thesis , Leicester : DeMontfort University , available at http : / / www . cs . unca . edu / (cid:3) manns Manns , M . L . , Sharp , H . , Prieto , M . , & McLaughlin , P . ( 1998 ) . Capturing successful practices in OT education and training . Journal of Object - Oriented Programming , 11 ( 1 ) , 29 – 34 . Manns , M . L . , Voelter , M . , & Eckstein , J . ( 2001 ) . Pedagogical patterns : Capturing best practices in teaching object technology . SoftwareFocus Spring 2001 ( Vol . 2 , No . 1 ) . New York : Wiley . ISSN 1529 – 7942 . Rising , L . ( 1998 ) . The patterns handbook . Cambridge : Cambridge University Press . Schmidt , D . , Stal , M . , Rohnert , H . , Buschmann , F . ( 2000 ) . Pattern - oriented software architecture ( Vol . 2 ) . Patterns for concurrent and networked objects . New York : Wiley . Sharp , H . , Manns , M . L . , McLaughlin , P . , & Prieto , M . ( 1998a , March / April ) . Patterns for proﬁciency . Applications Development Advisor 1 ( 4 ) . EVOLVING PEDAGOGICAL PATTERNS 329 D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014 Sharp , H . , Manns , M . L . , McLaughlin , P . , & Prieto , M . ( 1998b ) . Workshop report : A pattern language for pedagogy . In Proceedings of OOPSLA 98 Educators’ Symposium , ACM . Sharp , H . , Manns , M . L . , McLaughlin , P . , Prieto , M . , & Dodani , M . ( 1996 ) . Pedagogical patterns – successes in teaching object technology . ACM SIGPLAN Notices , 31 ( 12 ) , 18 – 21 . Sternberg , F . ( May , 1994 ) . Accelerated learning of objects . Object Magazine , 57 – 64 . 330 HELEN SHARP ET AL . D o w n l o a d e d by [ C o m pu ti ng & L i b r a r y S e r v i ce s , U n i v e r s it y o f H udd e r s f i e l d ] a t 19 : 02 31 D ece m b e r 2014