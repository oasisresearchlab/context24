emergent behavior ) as a substitute for programming , but it is not clear that this idea will scale any better than heuristic program - ming for a massively - parallel processor . Here again , one sees that there can be no substitute for domain - specific knowledge or representation . Contribution Summary Readers already in alignment with the agent - oriented approach will see some new bottlenecks to the approach ( e . g . , the need for heuristic search and higher - level control structures ) as well as some fundamental limitations of connectionism ( e . g . , the need for domain - specificity for scalable and tractable learning ) . The book serves to anneal the readers views . This is just what AI needs to progress . I say buy it ! References 1 Minsky , M . ; The society of mind . New York , NY : Simon and Schuster , Inc . , 1987 . 2 Steels , L . ; " Exploiting analogical representations . " Robotics and Autonomous Systems , 6 , pp . 71 - 88 , 1990 . 3 Rubin , S . H . ; " Intelligent compilation : Bootstrapping case - based learning , " Heuristics : The Journal of Knowledge Engi - neering , 5 ( 1 ) , pp . 13 - 43 , Spring 1992 . Case - Based Reasoning in Design Mary Lou Maher , M . Bala Balachandran , and Dong Mei Zhang Lawrence Erlbaum Associates , 1995 , 246 pages , $ 19 . 95 ( paperback ) $ 39 . 95 ( hardback ) . Reviewed by : Michael Wolverton SRI International , 333 Ravenswood Ave . , Menlo Park , CA 94025 , mjw @ erg . sri . com Developing computer programs that support the design process has long been an area of study in Artificial Intelligence . Theo - rem provers , rule - based expert systems , and constraint satisfac - tion programs have been popular platforms with which to support design since almost the beginning of AI / design research , and more recently analogical or case - based reasoning have shown promise as a substitute for or a complement to those and other technologies . In their new book , Maher , Bal - achandran , and Zhang give an in - depth look at this newer topic of research - - incorporating case - based reasoning in design sup - port programs . The authors , all current or former researchers at the University of Sydney ' s Key Centre of Design Computing , focus on their own research in the area , describing the tech - niques for case representation , case recall , and case adaptation they have developed for design , and presenting implemented systems that use these techniques to support design . After presenting a very high - level overview of case - based rea - soning and some of the concepts behind various design process models , the authors devote the core of the book to describing three major areas for building a case - based reasoning system - - case representation , case recall , and case adaptation . They dis - cuss the particular challenges that design poses to those areas , and they describe some alternative approaches in those areas and trade - offs between them . The most attention here is given to their own model of case - based design , which includes ( 1 ) divid - ing declarative knowledge between design models prototypi - ca ! representations of various design concepts - - and design cases , ( 2 ) using index elaboration and index revision to support modification of the original design specification during case recall , and ( 3 ) adaptation of the retrieved design by constraint satisfaction . The final chapters of the book further explain these ideas by presenting two implemented design systems : CASECAD , a design support system that assists a human designer in refining specifications by retrieving relevant cases , and CADSYN , a case - based design system that does high - level building structure design . While some of the book deals with CBR techniques and issues that are applicable to a wide range of problem domains , the most interesting discussions in the book are those that focus on the unique difficulties of applying CBR to design - - i . e . , those problems that must be faced in automating aspects of the design task that are not likely to be faced in automating other domains or tasks . One discussion along these lines deals with the prob - lem of shifting specifications during the design process . As the authors describe the problem p . 94 : " In design , the major diffi - culty is that the design specifications are ill - formed and fre - quently change and expand as the design process continues . " They then go on to describe an approach to recall , based on index elaboration and index revision ( adapting the earlier approaches of 1 and 3 ) , that supports the user ( designer ) in making these changes to the design specifications in a focused way , as well as dynamically identifying salient features of the problem for case retrieval . Their approach to index elaboration involves using the initial specification to recall a design model - - a generalization of a number of design cases - - which can be used to deduce additional features that should appear in the specification . The user can then refine the specification to include some or all of these values . The retrieved design models can also be used to identify features that are critical for case retrieval ( i . e . , those that should be given weight in the similarity metric ) , based on whether their values are atypical . Their approach to index revision uses retrieved cases to suggest addi - tional changes to the problem specification , as well as parts of the final design solution . Throughout the book , the authors use their experience in build - ing design systems and case - based design support systems to identify the important issues in building those systems . They identify the possible alternatives for representation and reason - ing in a number of subparts of the CBD process , and discuss the pros and cons of each : What are the merits of attribute / value vs . graph - based case representation for design artifacts ? For what kinds of programs should a case consist of only a representation of a designed device , and for what kind should it also include a derivation of the design ? There are no hard and fast answers to these questions , of course , but the authors do a good job of iden - tifying many of the choice points in building a case - based design system , enumerating many of the alternatives , and point - ing out some of the advantages and disadvantages of each . A couple of smart content , style , and organization decisions by the authors make the book more readable and useful . Almost all examples throughout the book are taken from the domain of building structure design . This adds to the work ' s consistency and cohesiveness , and does not significantly detract from the argument that the techniques described are applicable to a wide range of design domains . Additionally , each chapter ends with a SIGART Bulletin , Vol . 7 , No . 3 24 summary , a glossary of terms introduced in the chapter , and suggestions for further reading on the chapter ' s topic . The read - ing suggestions , in particular , are almost always representative of important work in the field , very relevant to the chapter ' s topics , and complementary to the specific discussion in the chapter . Finally , the book includes as an appendix Lisp code for implementing one of the programs described in the book ' s body , CASECAD . While CASECAD is not a " complete " CBR system - - it lacks an adaptation component - - the inclusion of code should greatly help those who are looking to the book for guidance in an implementation . The book is not without its problems , and a few of them will significantly diminish the book ' s value to some readers . First , the introductory section of the book lacks the level of detail nec - essary for being a solid overview of case - based reasoning . This section is badly in need of examples ( from real domains ) and more specificity in describing steps in CBR algorithms . Second , the description of case adaptation for design is not as clearly presented as the other two major areas ( representation and recall ) . One specific idea behind the authors ' approach - - adap - tation by constraint satisfaction - - - comes across , but other aspects of the description , including how the case representation and organization will support the constraint satisfaction algo - rithm , is given too little space and is very difficult to figure out . The pseudo - code description of adaptation in the CADSYN program , which appears two chapters later , offers little help . Third and finally , the book is not always consistent with the rest of the case - based reasoning literature in its use of terminology , and it lacks coverage of a few important CBR concepts and papers . For example , even though the paper describes retrieval algorithms that are quite similar to discrimination network tra - versal and marker passing , they are never referred to by those names . And , while derivational adaptation is described briefly in the book , the important work of Mostow in applying this idea specifically to design 2 is not discussed . But even with these problems , this book represents an important and valuable early step in the development and description of case - based design methods . It raises and discusses many of the issues involved in applying CBR to design , and it is very imple - mentation - focused - i . e . , it concentrates specifically on issues important to actually building a case - based design system . It is likely to be particularly interesting to engineers and design researchers interested in knowing more about how this poten - tially powerful computational technique can be applied to design support . References 1 Kolodner , J . L . 1984 . Retrieval and organizational strategies in conceptual memory : a computer model . Hillsdale , N . J . : Lawrence Erlbaum Associates . 2 Mostow , J . 1989 . Design by derivational analogy : Issues in the automated replay of design plans . Artificial Intelligence , 40 : 119 - 184 . ( September ) . 3 Owens , C . 1993 . Integrating feature extraction and memory search . Machine Learning , 10 ( 3 ) : 311 - 339 ( March ) . Mental Leaps : Analogy in Creative Thought By Keith J . Holyoak and Paul Thagard The MIT Press , 1995 320 pages , $ 15 . 00 paper Reviewed by : Karen T . Sutherland Department of Computer Science University of Wisconsin - La Crosse La Crosse WI 54601 suther @ csfac . uwlax . edu The work behind this excellent and thorough treatise on analogy began during the authors ' days in graduate school over 20 years ago . Holyoak , now professor of Psychology at the University of California , Los Angeles , and Thagard , Professor of Philoso - phy and Adjunct Professor of Psychology and Computer Sci - ence at the University of Waterloo , have produced a gem of a book . Commencing with an explanation of their theory of anal - ogy , the book contains a wealth of information , particularly on the development of analogical thought in young humans as well as in lower mammals . The authors distinguish between implicit and explicit knowl - edge as the ability to react to something versus the ability to think about it . The ability to form concepts and think about them is necessary for analogical thought . In order to form a con - cept , one must be able to find similarities in objects which also possess differences . In addition , analogical thought requires one to be able to combine these concepts to create more complex structures . Mental models or representations of external reality are formed . Analogy is based on forming isomorphisms ( one - to - one and structurally consistent mappings ) between two different mental models . Finally , the causal relationships within an analog , although often difficult to pinpoint , are critical to the success of that analog , which must satisfy its purpose by producing under - standing . The theme of these three constraints , similarity , struc - ture and purpose , runs throughout the book . Why are analogies used ? There are numerous examples pro - vided . A sampling is the following : • To understand the world around us by understanding a pre - viously unknown situation in terms of another known situa - tion . This process is exemplified by the narrative of the child who made the decision that a tree was a bird ' s back yard based on his already formed mental model of the home / yard relationship . • To generate new ideas . One fascinating example given here was how the observation of the way that burrs stuck to his dog ' s fur led Georges de Mestral to invent Velcro . • To communicate indirectly , as in speaking in parables or us - ing metaphors : from the use of metaphorical stories by the Managalese of Papua New Guinea to well - known literary quotes such as Carl Sandberg ' s " The fog comes on little cat feet , " the authors have produced one of the most thorough cross - cultural reviews of the use of metaphors that this re - viewer has ever encountered . • To explain the unknown - how the world was created , why events occur as they do . Across cultures , philosophers and 25 SIGART Bulletin , Vol . 7 , No . 3