B IO S PARK : An End - to - End Generative System for Biological - Analogical Inspirations and Ideation Hyeonsu B . Kang † , David Chuan - En Lin † , Nikolas Martelaro † , Aniket Kittur † Yan - Ying Chen ‡ , Matthew K . Hong ‡ † Human - Computer Interaction Institute , Carnegie Mellon University , Pittsburgh , PA 15213 ‡ Toyota Research Institute , Los Altos , CA 94022 † { hyeonsuk , chuanenl , nikmart , nkittur } @ cs . cmu . edu ‡ { yan - ying . chen , matt . hong } @ tri . global Abstract Nature is often used to inspire solutions for complex engineering problems , but achieving its full potential is challenging due to difficulties in discovering relevant analogies and synthesizing from them . Here , we present an end - to - end system , B IO S PARK , that generates biological - analogical mechanisms and provides an interactive interface to comprehend and synthesize from them . B IO S PARK pipeline starts with a small seed set of mechanisms and expands it using an iteratively constructed taxonomic hierarchies , overcoming data sparsity in manual expert curation and limited conceptual diversity in automated analogy generation via LLMs . The interface helps designers with recognizing and understanding relevant analogs to design problems using four main interaction features . We evaluate the biological - analogical mechanism generation pipeline and showcase the value of B IO S PARK through case studies . We end with discussion and implications for future work in this area . ? Biological Analogies Dataset Generation From Unstructured AskNature Blog Posts to Structured Problem - Mechanism Schemas Step 1 . Human Expert - Curated Seed Inspirations ( AskNature . org ) Seed Organism Taxonomies Organism taxonomy trees are iteratively constructed and expanded by balancing ( a ) breadth - and ( b ) depth - focused strategies Step 2 [ Iterate ] . Structured Seed Expansion with LLMs Reference Expansion Level a b Dataset Organization and Interaction Mechanism Clusters for “Manage Impact” Exoskeleton - based Mechanisms Blubber - based Mechanisms Beak designs Joint designs Step 3 . Semantic Clustering of Mechanisms Explain Compare Combine Critique Step 4 . Interacting with Single or Pair of Mechanisms Mechanisms are embedded into high - dimensional semantic vectors , are grouped by problems , and clustered Users can see detailed explanations of a mechanism ( Explain ) , Compare or Combine two Mechanisms , and receive feedback on their own ideas ( Critique ) ⚡ Figure 1 : B IO S PARK consists of a Dataset Generation Pipeline and an Organization and Interaction interface . Dataset construction starts from a small set of seed mechanisms on AskNature ( Step 1 ) , expanded by iteratively constructing taxonomic hierarchies of organisms and diversifying using breadth - or depth - focused knowledge prompts ( Step 2 ) . Dataset is organized by semantic clusters ( Step 3 ) and provided with interactive features that facilitate user learning and synthesis ( Step 4 ) . 1 Introduction Nature provides a valuable source of inspirations [ 3 , 37 , 32 ] for novel design solutions to challenging engineering problems [ 34 , 32 ] . A central cognitive mechanism underpinning this transfer of domains is analogical processing [ 12 , 29 , 16 ] , which involves discovering and recognizing deep structural similarity between source and target analogs . To this end , recent work has shown that analogs with a similar purpose ( i . e . , ‘ what problem it solves ’ ) , but diverse mechanisms ( i . e . , ‘ how it solves it ’ ) , facilitate creative new ideas [ 23 , 20 ] . 37th Conference on Neural Information Processing Systems ( NeurIPS 2023 ) . a r X i v : 2312 . 11388v1 [ c s . H C ] 18 D ec 2023 Yet , attaining the full potential of biological - analogical inspirations in engineering and design domains has proven difficult . Many bio - inspired designs are biased toward well - known organisms [ 4 ] and prior work has shown it can take on average three person - hours to sift through vast , fragmented information sources such as Google Scholar , Wikipedia , AskNature . org , or the open Web to find a single relevant article for a design problem [ 36 , 35 ] . Human - expert - curated databases such as AskNature [ 9 ] , DANE [ 18 ] , SAPPhIRE [ 6 ] , BioTRIZ [ 37 ] , or rule - based databases ( e . g . , [ 7 ] ) can streamline searches , but the effort - intensive process of manual expert curation often results in data scarcity , limiting the diversity of organisms and mechanisms available for making analogies . Automatic generation of analogies with LLMs could create larger datasets for bio - inspired design , but they still have limited diversity on abstract concepts , even when tuning parameters to increase diversity such as logic suppression and increased sampling temperature [ 8 ] . Knowledge - augmented prompting provides an alternative design space to token - level manipulation , as explored in [ 2 ] for improving the factuality of Q & A tasks . We explore this design space for a different purpose of constructing a diverse biological mechanisms dataset , with a modular and structured knowledge augmentation approach . Beyond sourcing biological analogies , it can be challenging for people to understand and recognize them when presented . People’s cognitive biases towards surface similarity and working memory limitations can impede the mapping process between biological and engineering systems [ 15 , 31 , 13 ] , while the need for situating found ( cross - domain ) analogies within the constraints and scope of the original design problem adds additional complexity for designers developing their own ideas ( cf . [ 22 , 17 ] ) . To mitigate these challenges , we construct a scalable analogy pipeline that balances the cost of expert - curation and the limitations of naïve LLM - based generation , and develop an interactive system that aids designers in recognizing and understanding the relevance and adaptability of analogs for a chosen design problem . 2 Usage Scenario Consider an automobile designer who is working on a new bike rack design for sedans . The designer identifies the core challenge of designing a secure bike rack as turbulence management , caused by variable wind resistance due to changing vehicle speeds and additional factors from inclement weather conditions , such as precipitation . When the designer clicks on the ‘Manage Turbulence’ problem as a query ( Fig . 4 , top right ) , B IO S PARK displays mechanism clusters related to the problem . She quickly identifies particularly interesting and idea - provoking mechanisms such as “Adapative shape - shifting mechanism in intertidal microalgae” and “Friction - based attachment mechanism of parasitic copecods , ” two quite different mechanisms , yet commonly observed in organisms that live underwater . When exposed to turbulence cues , shape - shifting microalgae adaptively reconfigure their surface shapes to reduce resistance from strong currents . This provides her a design idea for adaptively “lying down” bike racks on the roof of the car that reduce air drag , and a “tail basement” bike rack attachment to the back of the car that joins the rotational axis of the front wheel of the bikes and adjusts during turbulence by flexibly ( counter - ) swinging bikes , mimicking bird tail motions . She clicks on the ‘Combine’ tab with the two mechanisms selected to experiment with design ideas . The result describes an approach that simply combines the friction - based mechanism to the shape - shifting mechanism . This gives her an additional idea for further securing the racks , by incorporating designs inspired from the adhesion mechanism of parasitic copecods , such as microridges and channels for increasing friction upon contact . 3 System Description 3 . 1 Structuring AskNature blog posts’ text into a seed set of problem - mechanism schemas To source a set of diverse , high - quality biological mechanisms for a given problem , B IO S PARK starts from a seed set of expert - curated biological mechanisms on AskNature ( Fig . 1 , Step 1 ) . AskNature . org provides a curated list of organisms with detailed descriptions of their unique strategies to functional problems ( e . g . , ‘Manage Impact’ , ‘Modify Speed’ ) . The organisms and strategies can be grouped by function and viewed as a list . To curate a seed set of high - quality mechanisms , we first choose a functional problem p predicted to be highly relevant to automobile designers , excluding irrelevant functions such as ‘Adapt Behaviors’ , ‘Adapt Genotype’ , ‘Coevolve’ , ‘Maintain Community’ We access the sub - list of organisms o ∈ O and strategies posted to p on AskNature’s group - by - function page by parsing the HTML code using the BeautifulSoup package on Python . We then access the blog 2 User clicks the Compare button after selecting a pair of mechanisms to see pros and cons between them . User clicks the Combine button see a potential combination mechanism . Main interface of the system consists of a board - based interface that shows diverse mechanism clusters ( left ) and a sidebar ( right ) . User clicks the Explain button in tooltips to see mechanism details . Cluster Label Problem Query Sidebar Figure 2 : B IO S PARK interface and a subset of available interaction affordances . post for each organism - strategy page using the parsed URL and parse the returned HTML page to get the title , description , and references ( if available ) . At this stage , the returned unstructured text is yet to contain a succinct mechanism description . Furthermore , we found that some blog posts do not contain any body text despite having a title and are accessible via the URL . Some of these missing blog posts indicated that they are in maintenance and / or planned to be updated . To structure the raw blog post text AskNature ( o , p ) , we prompt GPT4 [ 28 ] to succinctly describe ( i . e . , using 12 words or less ) the core mechanism ( i . e . , excluding the qualities or effects , and focusing on mechanisms with engineering design implications ) , given ( o , p ) ( if blog post text is missing ) or ( o , p , AskNature ( o , p ) ) . The returned mechanism description m along with the function description makes up the problem - mechanism schema for each organism : { o ∈ O | ( p , m , o ) } . 3 . 2 Iteratively constructing taxonomic trees with organisms represented in found mechanisms and performing structured expansion of a tree Using each schema as a seed , we iteratively prompt GPT4 to find relevant mechanisms for the given mechanism and problem , using an even mixture of breadth - and depth - focused expansion strategies ( Fig . 1 , Step 2 ) . To enable structured diversification of organisms and their mechanisms beyond prior work that relied on token - level manipulation or naïvely prompting LLMs , we guide LLMs how and where to expand by leveraging organism taxonomic hierarchies . At each iteration of expansion ( Fig . 1 , Step 2 ) , we aggregate the organisms represented in found mechanisms up to that point , and construct a taxonomic tree featuring seven levels of hierarchy on Tree of Life : { domain , kingdom , phylum , class , order , family , genus , species } , where domain representing the highest level and species representing the lowest level on the hierarchy . Given this tree , we aim to identify sparsely populated branches for expansion . We cut the tree at a given reference expansion level ( e . g . , class ) , and sort the taxonomic ranks ( nodes ) on that level by the number of its immediate children nodes 1 , in an increasing order . For performance , we batch 10 prompts to send to GPT4 for expansion . For half of the prompts , we instruct breadth - first expansion which asks GPT4 to first identify sibling nodes at the given reference taxon level and existing nodes ( up to 50 most populated nodes ) . For example , the prompt asks “come up with a few biological classes not in { . . . names of excluded classes . . . } ” . The breadth - first expansion prompt then instructs GPT4 to repeat the following : 1 ) Choose one taxon from the list it came up with ; 2 ) Succinctly describe ( i . e . , using 14 words or less ) new mechanisms m related to a problem p . For the rest of the prompts , we instruct depth - first expansion which asks GPT4 to first identify a new children node at the given reference taxon level and existing children nodes ( up to 50 randomly sampled children ) . For example , the prompt asks “come up with a few biological families in order araneae that are not any of { araneidae , . . . } ” . The depth - first expansion prompt then instructs GPT4 to repeat a similar procedure as breath - first expansion . In the prototype system , we run 10 batches for expansion to construct dataset of mechanisms for each problem . 1 alternatively , the entire size of the subtree , rather than immediate children , could be used for sorting 3 The returned list of mechanisms and organisms text are then fed into the second GPT4 prompt for structuring them into a list of { mechanism , organism } dictionaries . Finally , using each organism name , we prompt GPT3 . 5 - turbo to retrieve the seven - level taxonomic hierarchy , based on our model evaluation result showing its high accuracy ( § 4 . 1 ) . 3 . 3 Semantic Clustering of Mechanisms The mechanism descriptions are clustered in semantically related groups for designers’ efficient viewing ( Fig . 1 , Step 3 ) . We first embed the mechanism descriptions for a given problem into high - dimensional vectors using the text - embedding - ada - 002 end - point of the OpenAI API . We group the embeddings into k = 20 clusters using k - Means clustering . Each group label is generated by chunking the mechanism descriptions in each cluster into lower - cased words , excluding stopwords . We count the frequency of each word and take the top 5 most frequent words as a description of each cluster . 3 . 4 Representative Mechanism Image Curation To aid designers’ visual understanding of and pique curiosity for biological - analogical mechanisms , we retrieve representative images for corresponding textual mechanism descriptions . We use Google Custom Search 2 with queries as “ [ organism name ] : [ mechanism description ] ” and the file type set to images and the safe search mode enabled . We choose the first place result of Custom Search as the visual representation of each mechanism . 3 . 5 Interacting with Mechanism Inspirations : Explain , Compare , Combine , and Critique To facilitate designers’ understanding and synthesis of mechanism inspirations , we develop several interaction features available on the interface ( Fig . 2 ) . The Explain button is located in tooltips that pop up when the user places the mouse over on a mechanism card in the board UI ( Fig . 2 , first panel ) . When the user clicks on the button , B IO S PARK sends a prompt to GPT4 requesting elaboration of the interacted mechanism and the organism in the context of the chosen engineering design problem . The Compare tab is located in the control bar of the sidebar of the interface . To use this , users need to first click on ( at least ) two mechanism cards from the left , saving them to the ‘saved inspirations’ panel at the top of the sidebar . There , users can check any two of the saved mechanisms they wish to compare . B IO S PARK sends a prompt to GPT4 when the user clicks on the tab , requesting comparison of pros and cons between the two mechanisms in the context of the chosen engineering problem . The result is formatted into a markdown table , with each mechanism as the header followed by pros and cons rows detailing each point . The Combine tab is also located in the control bar of the sidebar in the interface . Similarly with Compare , users can check two saved mechanisms they wish to see combined . B IO S PARK sends a prompt to GPT4 then requesting elaboration of a mechanism that combines the two selected mechanisms , and explain its potential advantages in the context of the chosen engineering problem . The result is also formatted into a markdown page using section title and headers for demarcating the content . Finally , the Critique button is located inside the Ideate tab . Upon clicking the Ideate tab , users can type in their own idea in the rich text editor in the opened tab , and optionally click on the button below to receive constructive feedback on it . B IO S PARK sends a prompt to GPT4 with the content of the text editor describing the idea , and requests additional revision that may improve the quality , such as anticipated failure modes and potential improvements . 4 Evaluation 4 . 1 Accuracy of LLM - based Taxonomy Construction The main process in our diversification strategy is iterative construction of taxonomic trees at each stage of expansion with a set of problem - mechanism schemas and corresponding organisms { o ∈ O | ( p , m , o ) } curated ( in case of AskNature seeds ) or generated up to that point . To construct the trees , the taxonomic hierarchy of each organism needs to be known . Here , we restrict our tree construction to seven levels of depth , ranging from the highest to lowest levels : domain , kingdom , phylum , class , order , family , genus , species . These levels provide considerable branch - switching opportunities 2 https : / / developers . google . com / custom - search / v1 / overview 4 Model D OMAIN K INGDOM P HYLUM C LASS O RDER F AMILY G ENUS GPT4 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 96 . 7 % ( 87 / 90 ) 94 . 4 % ( 85 / 90 ) 98 . 9 % ( 89 / 90 ) GPT3 . 5 - turbo 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 100 % ( 90 / 90 ) 95 . 6 % ( 86 / 90 ) 95 . 6 % ( 86 / 90 ) 93 . 3 % ( 84 / 90 ) Table 1 : The accuracy of zero - shot taxonomy generation using only the organism name . for diversification , through significant changes in the number of members between levels and within each level of the hierarchy . For example , while the highest level domain consists of three members , Bacteria , Archaea , and Eukarya , there are estimated 8 . 7M species in the world [ 33 ] . The next level on the hierarchy , Genus , has an estimated number of 310K members [ 30 ] , while the number in the subsequent level , families , is estimated at 8K [ 26 ] in 2011 . The number of known species for each node on the hierarchy also changes considerably , further contributing to the diversification opportunities . For example while most non - avian reptile genera have only 1 species each , insect genera such as Lasioglossum and Andrena have over 1 , 000 species each , while the flowering plant genus , Astragalus , contains over 3 , 000 known species [ 38 ] . Our initial exploration of suitable approaches to retrieve organism taxonomies involved using available resources such as the Global Biodiversity Information Facility API 3 , Catalogue of Life [ 5 ] , or the Encyclopedia of Life [ 11 ] , where canonical species names were retrieved from the Darwin Core List of Terms 4 for corresponding organisms in problem - mechanism schemas . However , the limited coverage , data consistency , and API availability of these tools prevented their adoption . On the other hand , Wikipedia provides scientific classification for some of the organism articles ( for example in the Pomelo article 5 , taxonomic names for Kingdom , Clade , Order , Family , Genus , and Species are available in the ‘biota’ information box that appears on the right - hand side of the page ) . However , this data was not readily available for scalable generation . 4 . 1 . 1 Procedure LLMs may provide an alternative solution to the limitations of existing approaches for retrieving the taxonomic hierarchy for a given organism name . To test this idea , we curated 90 gold taxonomies using Wikipedia that have complete information in the ‘biota’ scientific classification info box . For each organism , we prompted LLMs with each organism name zero - shot using the chat completions API endpoint 6 using each model key ( see Appendix A . 1 for the prompt used ) . Once the hierarchy data is generated , we lower - cased the rank names for consistency . The complete list of organism names used for generation can be found in Appendix A . 2 . 4 . 1 . 2 GPT4’s Accuracy We find that GPT4’s zero - shot taxonomy generation accuracy to range between 94 . 4 % and 100 % ( Table 1 ) . The lowest accuracy was observed in the family taxonomy , followed by order ( 96 . 7 % ) and genus ( 98 . 9 % ) . 4 . 1 . 3 System Optimization : GPT3 . 5 - turbo’s Accuracy We find that GPT3 . 5 - turbo has comparable accuracy levels with GPT4 in zero - shot taxonomy generation . The highest misaglignment occurred in genus , with a 6 . 67 % error rate ( equivalent to 6 out of 90 ) . Appendix A . 3 provides a further qualitative error analysis of models’ comparative performance . Based on these results , we opted for the more efficient GPT3 . 5 - turbo model in our pipeline . We leave further exploration of the capabilities of smaller , fine - tuned base LLMs , with implications for LLM cascade 7 , to future work . 3 https : / / www . gbif . org / developer / species 4 https : / / dwc . tdwg . org / list / # dwc _ Organism 5 https : / / en . wikipedia . org / wiki / Pomelo 6 https : / / api . openai . com / v1 / chat / completions 7 LLM cascade refers to a system design approach that adaptively chooses optimal LLM APIs for a given query . Smaller , task - specific LLMs are regarded as optimal when they exhibit higher or similar levels of performance compared to models that are orders of magnitude larger [ 10 ] , with all else equal . 5 4 . 2 Increase in Organism Diversity In order to evaluate the effectiveness of diversification through our expansion strategies from itera - tively constructed taxonomic trees , we investigated how organism diversity changes upon a series of mechanism generation . Figure 3 : Organism diversity , measured by the number of unique names among the generation , increases monotonically as generation continues , while the number of mechanisms generated per organism also increases , as evidenced by the decreasing slope . This suggests mechanism concentration over each organism increases over time . 4 . 2 . 1 Procedure We generate mechanisms and corresponding species for five problems closely related to automobile design : ‘managing impact’ , ‘managing tension’ , ‘managing compression’ , ‘managing turbulence’ , ‘modifying speed’ . We index the species at the time of its appearance in the corresponding mechanism generation . Hence , the index corresponds to when a new mechanism was generated via our pipeline . At each generation index , we count the unique number of names that are generated up to that point , for each taxonomic rank , and average the numbers across the five problems . 4 . 2 . 2 The pattern of increasing organism diversity Qualitatively we observe that the number of species generated are monotonically increasing ( Fig . 3 ) , albeit at a decreasing rate . The ratio between the number of unique species and the generation index is 2 : 1 at index = 200 , and approaches 4 : 1 near index = 800 . This suggests more mechanisms are generated and become concentrated on individual species ( e . g . , for grasshoppers , there might be several distinct mechanisms relevant to the problem of ‘managing turbulence’ such as their foldable wing structures , lightweight exoskeleton designs , or joints in their legs enabling repeated high jumps ) on average as generation continues . In our future work , we will explore whether and how the mechanisms generated for the same species semantically differ from one another . We also plan to examine how our generation approach compares to other baseline approaches in terms of the efficiency of generating mechanisms across diverse organisms , by measuring the slope of organism diversity over generation index . 4 . 3 Case Studies 4 . 3 . 1 ‘Design a secure bike rack for sedans’ Fig . 4 shows user interactions based on the motivating usage scenario described in § 2 . An ac - companying demonstration video can also be accessed at : https : / / drive . google . com / file / d / 1qD1rJXsE8g1NimLnd2quF _ ofR6KFXdrh / view ? usp = drive _ link . 4 . 3 . 2 ‘Design robust collision resistance for racing cars’ The details of this case study can be found in Appendix § B . 5 Discussion and Future Work 5 . 1 Closing the ‘Gulf of Geometric Transfer’ with combinatoric visual mechanism generation The designer in Case Study 1 ( Appendix 4 . 3 . 1 ) arrives at a successful transfer of mechanisms naturally after several unsuccessful iterations of generation . A key process in transferring a new idea into the target domain involves visualizing a candidate geometry , such as in this case ‘a bike rack attachment to the tail of a sedan’ . The process of identifying an effective geometry for transfer like ‘at the tail of a sedan’ can resemble a combinatoric search , where the designer visualizes the location of integration 6 Figure 4 : B IO S PARK interface featuring biological mechanisms for the query design challenge ‘Manage Turbulence’ . User - chosen mechanisms are : “Adapative shape - shifting mechanism in intertidal microalgae” and “Friction - based attachment mechanism of parasitic copecods . ” A new combination idea is shown in the ‘Combine’ tab , facilitating further synthesis and ideation of a new idea . Adaptive shape - shifting mechanism in intertidal microalgae Friction - based attachment mechanism of parasitic copecods New Insight Shape - shifting [ tail ] attachment ! Gulf of Geometric Transfer Transfer to : ‘bike racks for sedans’ Geometric Transfer : [ tail ] of a bird → [ tail ] of a sedan Input Mechanisms Arrival at New Insight Figure 5 : When the designer arrives at the new insight of designing a tail - like , shape - shifting bike rack attachment ( Appendix 4 . 3 . 1 ) , she is combining two source mechanisms and transferring the new idea into a new geometry in the target domain ( ‘at the tail of a sedan’ ) that could suit the combined mechanism . The successful generation of this combination comes after a series of failed attempts to generate geometries , which we call the Gulf of Geometric Transfer . for the new idea in the target object , from a possible source object and its geometry , such as ‘the tail of a bird’ . The process of evaluating an effective geometry for transfer may further involve analogical processing , for instance , by comparing the integrated geometry to familiar objects and judging the aesthetic and functional value of such a geometry . We hypothesize that one challenge of this transfer process is what we term ‘ Gulf of Geometric Transfer ’ ( see Fig . 5 , right ; the concepts related to this namesake in design and usability studies are the Gulf of Execution and the Gulf of Evaluation [ 27 ] ) , which refers to the failed iterations that one has to endure before obtaining a successful geometric insight that supports the new idea . To bridge this gulf , we envision a future work area that aids designers in visualizing what successful geometries that facilitate transfer of ideas might look like , and also helps them eliminate any blind spots in the process that could hinder new insights . A fruitful starting point to this end may involve generating visual representations of geometries that are related to the new abstract idea from various 7 key orientations , such as { up , down , front , rear , left , right , internal , external } . Enumerating these geometries visually could assist designers in effectively reviewing possible geometries and facilitating their imagination for alternative geometries that may be useful for further consideration . 5 . 2 Supporting Generative ‘Frame Slips’ The geometric transfer discussed in the previous section can be understood as one form of a more generalized phenomenon in analogical transfer , where a conceptual frame ‘slips’ into a different one , thereby generating novel insight . For example , Niels Bohr transferred the concept of planets orbiting the sun to the domain of atomic structure to propose a new model in which electrons orbit the nucleus in a similar manner [ 13 ] . This new structure of the atom significantly differed from the dominant ‘plum - pudding’ model of the time , leading to a re - structuring of the concept [ 14 ] . Here , re - structuring is related to conceptual frames that successfully ‘slip’ into a new , analogous problem domain , causing structural changes in the conceptaul framework of the receiving domain or vice versa . In the case studies , the concept of the ‘tail of a car’ slipped into geometrically and syntactically similar ‘tail of a bird’ , engendering a new insight . Similarly while studying how crowds generate design concepts for children’s chairs , Yu et al . [ 39 ] found that the concept of a playground ‘slide’ slipped into another semantically related playground concept ‘swing set’ , which then gave a novel design idea of swing chairs . Understanding the process of ‘ Frame Slipping ’ is therefore crucial for improving analogical transfer . Existing examples of ‘frame slips’ imply that such transitions can occur through different relational paths , for example , syntactic , semantic , functional , abstracted commonality , geometric , or other means . While geometric transfer may impose a more concrete form of transformation onto the transfer process , other means of transfer may be less understood , possibly involving more complex multimodal processes that combine multiple relational paths at once . Nonetheless , significant value of an inspiration often results from enabling frame slips to new parts of the design space , opening up not only a single point of an idea , but an entire space of ideas for future exploration . 5 . 3 Supporting any problem queries by incorporating rich problem - mechanism relations One of B IO S PARK ’s limitations is its fixed problem queries . Though the five pre - generated problem queries provide a useful entry to mechanism organisms that may be applicable to a diverse set of design challenges , it comes at the cost of an inability to query biological mechanisms for any engineering design problems described in natural language text . As designers and engineers progress in interacting with the system , they may naturally come up with follow - up queries that may differ from the source queries , that could emphasize important constraints around the design problem , or specify low - level details newly understood to be important to consider . Adaptation to such evolving user query intent requires further personalization and scaffolding in the workflow . In future work , mixed - initiative workflows may leverage user interaction traces as input to LLM operations ( cf . [ 24 , 25 ] ) to augment query input and automatically search data to retrieve analogical results . In order to enable search by free - text problem queries , the underlying data model needs to be extended to contain multiple problem - mechanism relations beyond the single problem present in the schema { ∀ i | ( p i , m i , o i ) } , and into an enriched dataset with mappings between problems p 1 , p 2 , · · · , p n ∈ P and an applicable mechanism m k , as commonly the case in engineering ( e . g . , ‘spider silk’ can be used for multiple engineering challenges such as replacing steel bars in concrete or wound suture and prosthesis [ 19 ] ) . One way to expand the rich problem - mechanism relations in a scalable manner is to prompt LLMs to come up possible engineering design problems that a given biological mechanism could be applied to . Here , naïve prompting may suffer from conceptual redundancy , analogous to the challenge of curating diverse mechanisms , that limits the diversity in mechanism - to - problem mappings . Another approach may be to intelligently use the existing dataset { ∀ i | ( p i , m i , o i ) } to identify similar mechanisms m i in ( p i , m i , o i ) and m j in ( p j , m j , o j ) that can be mapped onto disparate problems : m i ∼ m j → p i , p j . This approach however assumes the presennce of many correlated such mechanisms with disparate problem pairs in the dataset , which need empirical examination for support . Once the enriched dataset { ∀ i | m i → S ( m i ) } ( Here , S ( m i ) denotes the set of engineering design problems that m i is applicable to ) is made available , one simple approach for allowing querying on any problem text 8 is to construct a similarity search index ( e . g . , the HNSW index of FAISS [ 21 ] ) using a chosen text embedding approach . 5 . 4 Supporting improved visual representation of biological mechanisms Future work may focus on promising methodologies for improved visual representation of biological mechanisms . Augmentative approaches to the simple retrieval approach described in the current prototype include ‘Retrieve and Filter’ and ‘Highlight Species Subparts’ . The ‘Retrieve and Filter’ method involves a process of purging non - representative and low - quality images and ranking the remaining ones based on their semantic distance to the mechanism text , resulting in images with higher semantic coherence with the corresponding mechanism description . On the other hand , the ‘Highlight Species Subparts’ method will involve sourcing for representative species illustrations or photographs , and highlighting components corresponding to mechanisms via a translucent overlay . This method can be applied when previous method fails to yield high - quality images . While ‘Highlight Species Subparts’ presents potential , we also anticipate certain limitations with it . For example , specific mechanisms could only apply to a tiny animal area , rendering a whole body image inappropriate , such as in cases of the adhesive paws of geckos or the hierarchical layers in pomelo peels . Additionally , in certain cases , embedding textual labels within a diagrammatic representation , as opposed to using realistic species images , could provide more beneficial insights , annotating key components rather than merely a visual highlight . Understanding the trade - off between these strategies could be beneficial . Alternatively , generative AI could unlock new approaches to generate representative mechanism images on demand . Here , a systematic method such as focusing on cases where retrieval - based images fail could prove effective . A practical approach would involve creating a mechanism taxonomy potentially in tabular format showcasing a mechanism’s text , its type , and specific example images that unsuccessful retrieval - based approaches attempted to represent . This could offer valuable insights into the areas and reasons why our retrieval - based imaging models are not successful , thereby guiding the further development of generatively - focused models . 6 Conclusion In this work we present B IO S PARK , an end - to - end system for generating a biological - analogical mechanisms dataset and an interactive interface that facilitates learning new biological mechanisms for a design challenge , and synthesizing new solution ideas inspired by analogical mechanisms . A Taxonomy Generation A . 1 Prompt Used for Taxonomy Generation The prompt used for taxonomy generation for LLMs can be found in Fig . 6 . A . 2 Complete List of Organisms Used for Taxonomy Generation { ‘spider monkey’ , ‘prairie dog’ , ‘garden tiger moth’ , ‘african sacred ibis’ , ‘argiope argentata’ , ‘ostrich’ , ‘groundhog’ , ‘danio rerio’ , ‘gannet’ , ‘deer’ , ‘cattle’ , ‘glyptodon’ , ‘alligator snapping turtle’ , ‘leopard’ , ‘arctic ground squirrel’ , ‘cormorants and shags’ , ‘bears’ , ‘squirrels’ , ‘herons’ , ‘european badger’ , ‘golden silk orb - weaver’ , ‘aardvark’ , ‘seahorses’ , ‘banner - tailed kangaroo rat’ , ‘hyenas’ , ‘pink fairy armadillo’ , ‘giant otter’ , ‘bighorn sheep’ , ‘hippopotamus’ , ‘california ground squirrel’ , ‘european bee - eater’ , ‘beech marten’ , ‘leopard gecko’ , ‘tailorbird’ , ‘testudinidae’ , ‘emperor penguin’ , ‘northern pike’ , ‘giant clam’ , ‘stoat’ , ‘horse’ , ‘nutria’ , ‘tree - kangaroo’ , ‘giraffe’ , ‘guinea baboon’ , ‘ferret’ , ‘bonytail chub’ , ‘baya weaver’ , ‘brook trout’ , ‘pelican’ , ‘mallard’ , ‘roseate spoonbill’ , ‘mountain weasel’ , ‘pocket gophers’ , ‘lybia edmondsoni’ , ‘giant anteater’ , ‘common raccoon dog’ , ‘dewdrop spiders’ , ‘armadillo girdled lizard’ , ‘arctic fox’ , ‘bison’ , ‘swordfish’ , ‘bald eagle’ , ‘chimpanzee’ , ‘asbolus verrucosus’ , ‘sperm whale’ , ‘abalone’ , ‘golden jackal’ , ‘hornet’ , ‘zebra’ , 9 [ System Message ] You are an expert biologist who knows species and their taxonomic hierarchy very well . Follow the instructions to the letter . - Return the scientific term for each taxonomic rank the species belongs to . - Enclose keys and values using double quotes ( " . . . " ) and format them into a Python dictionary . - Use the taxonomic ranks as keys and corresponding scientific terms as their values . - Do not add any other text . [ User Message ] What { " domain " , " kingdom " , " phylum " , " class " , " order " , " family " , " genus " } does " { organism } " belong to ? Format your reply into a Python dictionary . Figure 6 : The prompt used to generate the taxonomy of each organism . ‘orangutans’ , ‘peregrine falcon’ , ‘atlantic cod’ , ‘burrowing owl’ , ‘african wild dog’ , ‘maned wolf’ , ‘honey bee’ , ‘naked mole - rat’ , ‘echidnas’ , ‘bowerbirds’ , ‘rhinoceros’ , ‘beaver’ , ‘bombyx mori’ , ‘common box turtle’ , ‘hummingbird’ , ‘domestic sheep’ , ‘wolverine’ , ‘raccoon’ , ‘evergreen bagworm’ , ‘pig’ , ‘muskrat’ } A . 3 Error analysis We find that some error cases in taxonomy generation could be attributed to recent changes in classification in the literature . For example , both GPT4 and GPT3 . 5 - turbo models classified naked mole - rats as then literature - accepted ‘Bathyergidae’ for their family , same as other African mole - rats . However , more recently naked mole - rats were placed in a separate family , Heterocephalidae [ 1 ] . Among the error cases overlapping between the two models , we found cases that either the GPT3 . 5 - turbo or the GPT4 model wins over the other ( e . g . , for ‘hummingbird’ , GPT3 . 5 - turbo generated ‘archilochus’ as its genus whereas GPT4 generated ‘various’ ; for ‘boxer crab’ , GPT3 . 5 - turbo generated ‘hymenoptera’ which is an order of insects , whereas GPT4 generated ‘decapoda’ , which is the correct order ) . In other cases , both models outputted similarly incorrect answers , for example for ‘sea snail’ , GPT3 . 5 - turbo generated ‘neogastropoda’ whereas GPT4 generated ‘archaeogastropoda’ ( the Wikipedia gold answer was ‘lepetellida’ ) . B Additional Case Study : ‘ Design robust collision resistance for racing cars ’ For another designer working on improving collision resistance for racing cars , the core challenge might be the management of compression during a collision . When the designer clicks on the ‘Manage Collision’ problem as a query ( Fig . 7 , top right ) , B IO S PARK once again displays biological mechanism clusters related to the problem . He finds “Interlocking barbules for structural integrity during flight” and “Pressure management in segmented skeletons , ” interesting mechanisms employing different approaches to compression management ( the former commonly found in feathers , the latter among isopods ) . He selects the ‘Combine’ tab to obtain design ideas that could benefit from both mechanisms . The result describes an approach that applies interlocking structures to exoskeleton segments , providing him with insight into a ‘sliding - lock’ mechanism for modular panels of the racing car body . This mechanism allows for extensive compression upon collision , thus increasing impact time ( subsequently decreasing peak impact force ) and more effectively dissipating force to non - critical body components . A video demonstrating user interaction can be also accessed at : https : / / drive . google . com / file / d / 1F2z1AX2aTMlpAzNX9kyePuMebFsB0 - Wx / view ? usp = sharing . 10 Figure 7 : B IO S PARK displays biological mechanisms for the query design challenge ‘Manage Compression’ . User - chosen mechanisms are : “Interlocking barbules for structural integrity during flight” and “Pressure management in segmented skeletons . ” Acknowledgments and Disclosure of Funding This research was supported by the Toyota Research Institute . References [ 1 ] Naked mole - rat . https : / / en . wikipedia . org / wiki / Naked _ mole - rat . Accessed : 10 - 02 - 2023 . [ 2 ] Jinheon Baek , Alham Aji , and Amir Saffari . Knowledge - augmented language model prompting for zero - shot knowledge graph question answering . In Proceedings of the First Workshop on Matching From Unstructured and Structured Data ( MATCHING 2023 ) , pages 70 – 98 , Toronto , ON , Canada , July 2023 . Association for Computational Linguistics . [ 3 ] Janine M Benyus . Biomimicry : Innovation inspired by nature . Morrow New York , 1997 . [ 4 ] Chris Broeckhoven and Anton du Plessis . Escaping the labyrinth of bioinspiration : biodiversity as key to successful product innovation . Advanced Functional Materials , 32 ( 18 ) : 2110235 , 2022 . [ 5 ] O . Bánki , Y . Roskov , M . Döring , G . Ower , D . R . Hernández Robles , C . A . Plata Corredor , T . Stjernegaard Jeppesen , A . Örn , L . Vandepitte , D . Hobern , P . Schalk , R . E . DeWalt , K . Ma , J . Miller , T . Orrell , R . Aalbu , J . Abbott , R . Adlard , E . M . Adriaenssens , and et al . Catalogue of life checklist . Catalogue of Life , September 2023 . [ 6 ] Amaresh Chakrabarti , Prabir Sarkar , B Leelavathamma , and BS Nataraju . A functional repre - sentation for aiding biomimetic and artificial inspiration of new ideas . Ai Edam , 19 ( 2 ) : 113 – 132 , 2005 . [ 7 ] Hyunmin Cheong and LH Shu . Retrieving causally related functions from natural - language text for biomimetic design . Journal of Mechanical Design , 136 ( 8 ) : 081008 , 2014 . [ 8 ] John Chung , Ece Kamar , and Saleema Amershi . Increasing diversity while maintaining accuracy : Text data generation with large language models and human interventions . In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 575 – 593 , Toronto , Canada , July 2023 . Association for Computational Linguistics . 11 [ 9 ] Jon - Michael Deldin and Megan Schuknecht . The asknature database : enabling solutions in biomimetic design . In Biologically inspired design : computational methods and tools , pages 17 – 27 . Springer , 2013 . [ 10 ] David Dohan , Winnie Xu , Aitor Lewkowycz , Jacob Austin , David Bieber , Raphael Gontijo Lopes , Yuhuai Wu , Henryk Michalewski , Rif A Saurous , Jascha Sohl - Dickstein , et al . Language model cascades . arXiv preprint arXiv : 2207 . 10342 , 2022 . [ 11 ] Encyclopedia . Encyclopedia of life ( eol ) . https : / / eol . org / docs / what - is - eol . Accessed : 10 - 02 - 2023 . [ 12 ] D . Gentner , S . Brem , R . W . Ferguson , P . Wolff , A . B . Markman , and K . D . Forbus . Analogy and Creativity in the Works of Johannes Kepler . In T . B . Ward , J . Vaid , and S . M . Smith , editors , Creative thought : An investigation of conceptual structures and processes , pages 403 – 459 . American Psychological Association , Washington D . C . , 1997 . [ 13 ] Dedre Gentner . Structure - mapping : A theoretical framework for analogy . Cognitive science , 7 ( 2 ) : 155 – 170 , 1983 . [ 14 ] Dedre Gentner . Analogy in scientific discovery : The case of johannes kepler . In Model - based reasoning : Science , technology , values , pages 21 – 39 . Springer , 2002 . [ 15 ] Dedre Gentner and Russell Landers . Analogical reminding : A good match is hard to find . In Unknown Host Publication Title , pages 607 – 613 . IEEE , 1985 . [ 16 ] Mary L Gick and Keith J Holyoak . Analogical problem solving . Cognitive psychology , 12 ( 3 ) : 306 – 355 , 1980 . [ 17 ] Karni Gilon , Joel Chan , Felicia Y . Ng , Hila Liifshitz - Assaf , Aniket Kittur , and Dafna Shahaf . Analogy mining for specific design needs . In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems , CHI ’18 , page 1 – 11 , New York , NY , USA , 2018 . Association for Computing Machinery . [ 18 ] Ashok K Goel , Swaroop Vattam , Bryan Wiltgen , and Michael Helms . Cognitive , collaborative , conceptual and creative—four characteristics of the next generation of knowledge - based cad systems : A study in biologically inspired design . Computer - Aided Design , 44 ( 10 ) : 879 – 900 , 2012 . [ 19 ] Yunqing Gu , Lingzhi Yu , Jiegang Mou , Denghao Wu , Peijian Zhou , and Maosen Xu . Mechanical properties and application analysis of spider silk bionic material . e - Polymers , 20 ( 1 ) : 443 – 457 , 2020 . [ 20 ] Tom Hope , Joel Chan , Aniket Kittur , and Dafna Shahaf . Accelerating innovation through analogy mining . In Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining , KDD ’17 , pages 235 – 243 , New York , NY , USA , 2017 . ACM . [ 21 ] Jeff Johnson , Matthijs Douze , and Hervé Jégou . Billion - scale similarity search with gpus . IEEE Transactions on Big Data , 7 ( 3 ) : 535 – 547 , 2019 . [ 22 ] Hyeonsu B . Kang * , Sheshera Mysore * , Kevin J Huang * , Haw - Shiuan Chang , Thorben Prein , Andrew McCallum , Aniket Kittur , and Elsa . Olivetti . Augmenting Scientific Creativity with Retrieval across Knowledge Domains . In Second Workshop on Bridging Human - Computer Interaction and Natural Language Processing at NAACL , 2022 . [ 23 ] Hyeonsu B . Kang , Xin Qian , Tom Hope , Dafna Shahaf , Joel Chan , and Aniket Kittur . Augment - ing scientific creativity with an analogical search engine . ACM Trans . Comput . - Hum . Interact . , 29 ( 6 ) , nov 2022 . [ 24 ] Hyeonsu B . Kang , Sherry Tongshuang Wu , Joseph C . Chang , and Aniket . Kittur . Synergi : A Mixed - Initiative System for Scholarly Synthesis and Sensemaking . In The 35th Annual ACM Symposium on User Interface Software and Technology ( UIST ) , 2023 . [ 25 ] Michael Xieyang Liu , Tongshuang Wu , Tianying Chen , Franklin Mingzhe Li , Aniket Kittur , and Brad A Myers . Selenite : Scaffolding decision making with comprehensive overviews elicited from large language models . arXiv preprint arXiv : 2310 . 02161 , 2023 . [ 26 ] Camilo Mora , Derek P Tittensor , Sina Adl , Alastair GB Simpson , and Boris Worm . How many species are there on earth and in the ocean ? PLoS biology , 9 ( 8 ) : e1001127 , 2011 . 12 [ 27 ] Donald A . Norman and Stephen W . Draper . User Centered System Design ; New Perspectives on Human - Computer Interaction . L . Erlbaum Associates Inc . , USA , 1986 . [ 28 ] OpenAI . Gpt - 4 technical report , 2023 . [ 29 ] R . Oppenheimer . Analogy in science . American Psychologist , 11 ( 3 ) : 127 – 135 , 1956 . [ 30 ] Tony Rees , Leen Vandepitte , Bart Vanhoorne , and Wim Decock . All genera of the world : an overview and estimates based on the march 2020 release of the interim register of marine and nonmarine genera ( irmng ) . Megataxa , 1 ( 2 ) : 123 – 140 , 2020 . [ 31 ] Brian H Ross . This is like that : The use of earlier problems and the separation of similarity effects . Journal of Experimental Psychology : Learning , Memory , and Cognition , 13 ( 4 ) : 629 , 1987 . [ 32 ] LH Shu , K Ueda , I Chiu , and H Cheong . Biologically inspired design . CIRP annals , 60 ( 2 ) : 673 – 693 , 2011 . [ 33 ] L . Sweetlove . Number of species on earth tagged at 8 . 7 million . Nature , August 2011 . [ 34 ] Dennis Vandevenne , Thomas Pieters , and Joost R Duflou . Enhancing novelty with knowledge - based support for biologically - inspired design . Design Studies , 46 : 152 – 173 , 2016 . [ 35 ] Swaroop Vattam and Ashok Goel . Seeking bioinspiration online : a descriptive account . In DS 75 - 7 : Proceedings of the 19th International Conference on Engineering Design ( ICED13 ) , Design for Harmonies , Vol . 7 : Human Behaviour in Design , Seoul , Korea , 19 - 22 . 08 . 2013 , 2013 . [ 36 ] Swaroop S Vattam and Ashok K Goel . Foraging for inspiration : understanding and supporting the online information seeking practices of biologically inspired designers . In International Design Engineering Technical Conferences and Computers and Information in Engineering Conference , volume 54860 , pages 177 – 186 , 2011 . [ 37 ] Julian FV Vincent and Darrell L Mann . Systematic technology transfer from biology to engineering . Philosophical Transactions of the Royal Society of London . Series A : Mathematical , Physical and Engineering Sciences , 360 ( 1791 ) : 159 – 173 , 2002 . [ 38 ] Wikipedia . Genus . https : / / en . wikipedia . org / wiki / Genus # cite _ note - 10 . Accessed : 10 - 02 - 2023 . [ 39 ] Lixiu Yu , Robert E . Kraut , and Aniket Kittur . Distributed analogical idea generation with multiple constraints . In Proceedings of the 19th ACM Conference on Computer - Supported Cooperative Work & Social Computing , CSCW ’16 , page 1236 – 1245 , New York , NY , USA , 2016 . Association for Computing Machinery . 13