WIZARD OF OZ STUDIES — WHY AND HOW Nils Dahlbdck , Arne Jdnsson , Lars Ahrenberg Natural Language Processing Laboratory Department of Computer and Information Science S - 58 183 LINK ~ PING , SWEDEN Phone : + 46 13281000 nda @ ida . liu . se , arj @ ida . liu . se , lah @ ida . liu . se ABSTRACT We discuss current approaches to the development of natu - ral - language dialo = we systems , and claim that they do not sufficiently consider the unique qualities of man - machine interaction as distinct from general human discourse . We conclude that empirical studies of this unique comnnmica - tion situation is required for the development of user - friend - ly interactive systems . One way of achieving this is through the use of so - called Wizard of Oz studies . We describe our work in tlis area . The focus is on the practical execution of the studies and the methodological conclusions that we have drawn on the basis of our experience . While the focus is on natural language interfams , the methods used and the con - clusions drawn from the results obtained m of relevance also to other kinds of intelligent interfaces . KEYWORDS : Design and evaluation , dialogue , natural lan = mage interfaces . THE NEED FOR WIZARD OF 02 STUDIES Dialogue has keen an active research area for quite some time in natural language processing . It is fair to say that re - searchers studying dialogue and dkcourse have developed their theories through detailed analysis of empirical data from many diverse dialogue situations . In their recent re - view of the field , Grosz , Pollaek and Sidner [ 12 ] mentions work on task - oriented dialogues , descriptions of complex objects , narratives , informal and formal arguments , negotia - tions and explanations . One thing which these studies have shown is that human dialogue is a very complex activity , leading to a corresponding complexity of the theories pro - posed . In particular it is evident that participants must rely on knowledge and reasoning capabilities of many different kinds to know what is going on in a dlalo = % . When it comes to using data and theories to the design of natural language interfaces it has often ben argued that hu - man dialogues should be regarded as a norm aud a starting - Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage , the ACM copyright notice and the title of the publication and its date appear , and notice is given that copying is by permission of the Association for Computing Machinery . To copy otherwise , or to republish , requires a fee and / or specific permission . a 1992 ACM 0 . 8979 J - 557 . 7 / 92 / 00 J2 / 0J93 . . . $ j . = J ) point , i . e . that a natural dialogue between a person and a computer should resemble a dialogue between humans as much as possible . But a computer is not a person , and some of the differences are such that they can be expected to have a major influence on the dialogue , thus making human - hu - man data an unreliable source of information for some im - portant aspects of design , in pwticular the style and complexity of interaction . First let us look at some of the differences between the two dialogue situations that are likely to play a significant role . We know that language is influenced by interpersonal fac - tors . To take one example , it has been su ~ ested by R . La - koff [ 18 ] and others that the use of so - called indirect speech acts is motivated by a need to follow “rules of politeness” ( 1 . don’t impose , 2 . give options ) . But will a user feel a need to be polite to a computer ? And if not , will users of NLIs use indirect requests in the seamh of information from a data - base ? If not , do we need a component in our NLI for han - dling indirect requests ? This is obviously an empirical question that can be answered only by studying the language used in such situations . Indirect utterances are of course something more than just ways of being polite . There are other forms , such as omitting obvious steps in an argument - relying on the listener’s back - ground knowledge , and giving answers , not to the question , but by supplying information relevant to an inferred higher goal . But also the use of these will presumably vary with the assessed characteristics of one’s dialogue partner . In the case of keyboard input another important factor is that the communication channel is different form ordinary hu - man dialogues . The fact that the dialogue will be written in - stead of spoken will obviously affect the language used . As pointed out by Cohen [ 3 ] “Keyboard interaction , with its emphasis on optimal packaging of information into the smallest linguistic “space” , appears to be a mode that alters the normal organization of discourse . ” Much of our language behaviour , on all levels , from pronun - ciation to choice of words and sentences , can be seen as a re - sult of our attempts to find the optimal compromise between two needs , the need to make ourselves understood , and the need to reach this goal with as little effort as possible . It is a Intelligent User Interfaces ’93 193 well established fact in linguistic research that we ax speak - ers adapt to the perceived characteristics of our interlocu - tors . The ability to modify the language to the needs of the hearer seems to be present already at the age of four [ 21 ] . Language directed to children is different from language di - rected to adults , as is the case when talking to foreigners , brain - injured people etc . There are good reasons to believe that similar adjustments can and will be made when we are faced with the task of interacting with a computer in natural language . One important consequence of this is that goals in some dialogue research in computational linguistics such as ‘Getting computers to talk like you and me’ [ 201 or develop - ing interfaces that will “allow the user to forget that he is questioning a machine’’ [ lOl , are not only difficult to reach . They are misconceived . Given these differences between the two types of dirdogue and the well - founded assumption that they will affect the linguistic behaviour of the human interlocutors , it follows that the language samples used for providing the empirical ground should come from relevant settings and domains . In other words , the development of NLI - software should be based on an analysis of the language and interaction style used when communicating with NLIs . Since , as we just ob - served , users adapt to the language of their interlocutors , analysis of the language used when communicating with ex - isting NLIs is of limited value in the development of the next generation systems . This is what motivates data collec - tion by means of Wizard of Oz techniques , i . e . studies where subjects are told that they are interacting with a computer system through a natural - language interface , though in fact they are not . Instead the interaction is mediated by a human operator , the wizard , with the consequence that the subject can be given more freedom of expression , or be constrained in more systematic ways , than is the case for existing NLIs , ( Some well - known studies based on a more or less ‘pure’ Wizard of Oz technique are those of Cohen [ 3 ] , Grosz [ 11 ] , Guindon [ 13 ] , and Kennedy et al . [ 171 . For a review and dis - cussion of these and other studies , see [ 5 , 16 ] . [ 91 provides a review focused on speech systems ) Of course you cannot expect to gather all the data you need for the design of a given application system by means of Wizard of Oz studies , e . g . as regards vocabulary and syntac - tic constructions related to the domain . But for finding out what the application - spxific linguistic characteristics are , or for gathering data as a basis for theories of the specilic genre of human - computer interaction in natural language , the Wizard of Oz - technique seems to us to be the best avail - able alternative . The rest of this paper is concerned with a description of our work in the area of Wizard of Oz simulation studies . The fo - cus is on the practical execution of the studies and the meth - odological conclusions that we have drawn on the basis of our experience . Some results on the characteristics of hu - man - computer - interaction in natural lan = ~ age have been re - ported elsewhere [ 4 , 5 , 6 , 7 , 8 , 161 and further work is currently in progress . Some of the major results obtained this far is that man - machine dialogues exhibit a simpler structure than human dialogues , making it possible to use simpler but computationally more tractable dialogue mod - els ; that the users and system rely on an conceptual model specific for the domain but common for all users , i . e . uses mutual knowledge based on community membership , to use the terminology of [ 2 ] . These results in turn suggest less need for dynamic user modelling but a larger need for dy - namic focus management than has hitherto been assumed in the HCI / NLP communities . SOME DESIGN ISSUES To circumvent the risk of drawing general conclusions that in fact are only a reflection of the specific experimental set - ting used , we have striven to vary the type of background system , not only as regards the content or application do - main , but also as regards the ‘intelligence’ of the system and the types of possible actions to perform by the person using it . This far we have collected approximately 150 dialogues , using nine different Ral or simulated background systems . Apart from the use of ‘pure’ natural language , in one case the dialogues also contain tables displaying the contents of the lNGRIN - database , and in two cases a limited use of graphics is possible . Our aim is to simulate the interaction with a system in the case of an occasional or one - time user , i . e . a user who is un - familiar with the system , but has some knowledge of the do - main . We think that this is the most relevant user - category to study , as otherwise the user will be adapted to the system . We have the ~ fo ~ tried to use background systems and tasks which follow these criteria . But it is not enough to have a reasonable background system and a good experi - mental environment to run a successful experiment . Great care should also be taken regarding the task given to the subjects . If we give them too simple a task to solve , we will not get much data to analyse , and if we give them too de - tailed instructions on which information they should seek from the system , there is a risk that what they will type is not their way of phrasing the questions but ours . Our ap - proach has keen to develop a so - called scenario , i . e . a task to solve whose solution requires the use of the system , but where there does not exist one single correct answer , and / or where there are more than one way to reach the goal . Fraser and Gilbert [ 9 ] in their simulations of speech - systems also propose the use of scenarios to achieve nxdistic interactions . We have previously stressed some consequences of the fact that computers are different from people which has motivat - ed the choice of Wizard of Oz simulations . But another con - sequence of this is that such simulations are very difiicult to run . People are flexible , computers are rigid ( or consistent ) ; people are slow at typewritinfj , computer output is fast ; computers never make small mistakes ( e . g . occasional spell - ing errors ) , people make them all the time . The list could be made longer , but the conclusion is obvious . If we want our subjects to believe that they are communicating with a com - puter also after three exchanges , we cannot let the person 194 Intelligent User Interfaces ’93 i FLYGPL4TS UTDA1U14 UTKLOCKAN HENKLOCKAN RESPRIS FORSiKRING Av8E3TsKYo0 - { DSK } homd . g . tru34 . b , / . lplaWl ' sphedle # b ~ rktilre5orkptefieme ' . c - ; : ? JTAR 382C t 1’ : Kyyw a . ; . . - - - ” “’ ; , ””””’ ( omi , & + W , . gfritidvet - - - - r - - - ~ - ~ ; , J1 1 . - R15M & L V ? ngfri tid ha . resor till f ! 31jande platier J Grekl and : T ; K R : w ~ t ~ fl : ; ti , , . ) @ - km Inte wara Ikaria . Lefkada . twos . Kreta . Samos och 101on - PROBLEM , “ & : 421 # % z4 ‘“’ 1 klla dessa W bar utm To1on . . . > sewer start wverl close cn”nectimd Low , clear ! 6et ! Put ! convert ! h Format : Dump h File : { D5K > ) ho m , fi " gatrtxYlabln lP1abfln @ medleyb lvk $ h , fr / reso r / tialoqerNp 00 $ , durnp ; $ out Fmmt : Dump Out file . 05 : 00 Viinta . . . d “ Vingfritid ha ! . resor till fiiljmde platser i Grekland : d Itiia , Lefkada . Hams , Kreta . Sams OCJ ! Tolon . d hlla dessa ? 4 W UW 101On . 4 05 . 36 = > vart 1igger toulond Figure 1 : An overview of the simulation environment ( The Wizards view . ) simulating the computer just sit and slowly write the an - swers on the screen . Therefore , to make the output from the wizard memble that of a computer as far as possible as re - gards timing and consistency , we have developed an envi - ’ ronment for conducting the experiments , currently running on SUN Spare stations in the Medley Lisp environment . The background system can be a real system on the same or an - other computer , or it can be simulated too . The simulation environment will be the topic of the next section . THE SIMULATION ENVIRONMENT ARNE The simulation environment now exists in its third version , ARNE - 3 . Some of its main features are : l response editor with canned texts and templates eas - ily accessed through menus l ability to access various background systems l editor for creating queries to database systems l interaction log with time stamps The simulation environment is customized for each new ap - plication . An overview of the simulation environment is shown in figure 1 , where the application is a Travel agency system holding information on holiday trips to the Greek ar - chipelago . The environment in its base configuration con - sists of two parts , a log and a response editor , each accessed through its own window . The editor window can be seen in the lower left part of the screen , while the log window is found in the lower right part . Maps and other kinds of graphics can also be displayed . In one scenario for the Travel system the subject can also or - der a holiday trip . The window in the upper left part of the screen is the template for the order . This is filled in by the wizard as the interaction proceeds . When the ordering win - dow is completed , the subjects receives a confirmation in natural language of the ordered item . This is generated auto - matically by a Common Lisp function from the order tem - plate . This is in line with our general policy to automate as much as possible of the interaction . The editor window is used to create responses to the sub - jects . When a response is ready it is sent to the subject and simultaneously logged in the log window . To speed up the response time the editor has a hierarchically organised set of canned texts which are easily inched through a set of men - us , seen to the right in the editor window . Fi = ~ e 2 shows the hierarchy of canned texts for the menu item Resmill ( Eng : Resort ) . The wizard can stop at any point in the hierarchy and will thus provide more or less detailed information de - pending on how far the dialogue has developed . So , in the Intelligent User Interfaces ’93 195 Figure 2 : A menu hierarchy example of figure 2 , if the wizard stops at Lefkada , on the second level in the hierarchy , the subject will be provided with general information on Lefkada , while if the wizard stops at Adani , general information about hotel Adani on Lefkada is provided . The total amount of canned text availa - ble in this fashion is 2300 rows , where a row is everything between a full line of text to a single word . This corresponds to approximately 40 A4 - pages . The text from the menus is entered into the editor window , to allow the wizru - d to edit the information , if necessary , before sending it to the sub - ject . Certain messages are so simple and also commonly used that they cau be prompted directly to the subject without tirst passing the editor . These are also present in the quick menus . In the example there are two such quick responses , one is the prompt = = > , and the other is V @ ta . . . ( Eng . ‘Wait . . . “ ) . The latter ensure that the subject receives an acknowl - edgement as soon as the input is acquired , meanwhile the wizard scans through the canned texts for an answer . The simulation environment can also be connected to exist - ing background systems . One example of this is the Cars simulations , where subjects could acquire information on properties of used cars from an Ingres database containing such information . The simulation environment in these sim - ulations consisted of four different windows . Here there were two windows added for database access , one is the ac - tual database interfaee and the other is a query command ed - itor . As forming a SQL - query can take quite some time we needed to speed up that process . This is done in a similar way as the mponse generation namely by using hierarchi - cally organised menus . The menus contain information that can be used to fill in a SQL - template . The editor used for this P ~ W iS m instance of the same editor that was used for cxeating responses to the subject . Thus , the wizard need not learn a new system which again provides a more efficient in - teraction as the same commands and actions are used to car - ry out both tasks . The database access menus do not only contain SQL - que ~ templates , but also entries for the ob - jects and properties that are stored in the database . Thus the wizard can avoid misspelled words which would lead to a database access failure and a slow down of response time . It is a time - consuming task to customize the simulation en - vironment to a particular application . For some applications we have used some 2040 pilot studies before being satisfied with the scenario and the performance of the simulation . But we believe that without such preparation , there is a large risk that the value of the results obtained is seriously diminished . OUR EXPERIMENTAL DATA We have conducted a number of Wizard of Oz - experiments using different background systems and scenarios . Corpus 1 Corpus 1 was collected using the fist versions of the simu - lation environment . This corpus contains dialogues with five real or simulated background systems . The first system , PUB , was a library database then in use at our department , containing information on which books the department owned , and on which reseamhers room they were kept . Common bibliographic information was also ob - tainable . The C - line system was a simulated database con - taining information about the computer science curriculum at Linkoping University . The scenario for the subjects was that they should imagine themselves working as study coun - selors , their task being to answer a letter from a student with questions about the Master’s program in computer sci - ence . Five dialogues were run in this condition . 196 Intelligent User Interfaces ’93 In the third system , called Hi13 , the user can order high quality HiFi equipment after having queried a simulated da - tabase containing information about the available equip - ment . The system can also answer some questions about which pieces can suitably be combined , so in a sense it is not a database but an expert system . The fourth system in this corpus is the first version of the automated travel agency encountered previously in the description of the simulation environment . In this version there were no graphics facili - ties . The last system in corpus 1 is a simulated wine selection ad - visory system . It is capable of suggesting suitable wines for different dishes , if necessary within a specified price range . It could also tell whether two wines could be combined in the same meal . The analysis of this corpus is presented in [ 5 , 7 , 16 ] general overview , [ 4 , 5 , 8 ] dialogue structure , [ 5 , 6 ] pronoun analy - sis . [ 1 ] gives an overview of the NLI - project for which the analysis was used . [ 5 ] presents the most detailed analysis of both the dialogue structure and the pronoun patterns and also analyses the use of definite descriptions . Corpus 2 The second corpus was collected using the refined Wizard of Oz - simulation environment presented here , and with a new set of scenarios . Thk corpus consists of totally 60 dialogues using two different background systems , the Cars database of used car models and a considerably revised and enlarged version of the travel system used in corpus 1 . In this corpus half of the subjects could only obtain information from the system , whereas the other half of them also could order the trip as was the case in corpus 1 . Dialogues where collected under two different conditions : one where the subjects knew that they were interacting with a person and one which was a real Wizard of Oz - sirnulation . We thus have 10 subjects in each cell . The analysis of this corpus is presently under way . Some results are used in [ 8 ] . SYSTEMS TRIED BUT NOT USED We have found the simulation of database - dialogues fairly straightforward , as is the case with the simulation of sys - tems where the user can perform more tasks , such as order - ing equipment after having obtained information about the stock . But for some other kinds of systems we have encoun - tered different kinds of problems , in some cases leading us to abandon the project of collecting the dialogues for a par - ticular system . One example of this was an EMYCIN based expert system , advising on tax issues in connection with the transfer of real estate . There were many reasons for our believing that this was a suitable system for our purposes . The domain is one with which we thought most people had some familiarity . Another reason was that rule - based expert systems such as this are a large and growing area and is considered one pos - sible application domain for natural language interfaces . The basic reason for not being able to use this promising ap - plication was that the system was only a prototype system that never was completed . Not only did it contain some bugs , but there were “holes” in its knowledge , i . e . some sub - areas for which no rules were implemented . It turned out to be impossible to create a scenario which guaranteed that the subjects kept themselves within the system’s competence . The lesson we learned from this was that if we shall use a real background system it must be well tested and function - ing properly . Furthermore , the dialogue of EMYCIN - based expert systems is controlled by the system to an extent that it is difficult to simulate a more open dialogue where the user can take the initiative too . With the development of bitmapped screens and mouses , it becomes interesting to study multi - modal interfaces where users can use both written input and direct manipulation . And if we make it possible for the user to use both modes , we can learn something about when the different interface methods are to be preferred . We therefore txied to use a com - puter - based calendar system developed at our department for this purpose . In the system you can book meetings with groups and individuals , deciding on the time and location . You can also ask the system about these meetings , and about the times when people or groups of people are not booked , for instance when planning a meeting with them . You can do this by writing in a calendar displayed in a window on the screen , but also using a limited natural language interface , There were two major problems when designing this exper - iment . The first problem was to expand the ARNE environ - ment so that it could handle graphics too . In the Calendar system we actually send the graphics on the net between the different work stations , which for obvious reasons gave long response times . This gave rise to some problems discussed below . In the later travel agency project we have therefore stored all the graphical information on the user’s machine , and only send a signal from the wizard to this station tell which picture to display . The second problem was deciding how to analyse the ob - tained data , and this we did not solve . If we lack well devel - oped theories for dialogues in natural language , the case is even worse for this kind of multi - modal dialogues . The only thing we have been able to do thus far is to simply observe the users running the system . But even this simple data col - lection has given us one somewhat surprising observation concerning the effects of very slow response times on the di - alogue structure . The interesting fact is that in spite of these long response times , the language used be the subjects still is coherent , with a number of anaphoric expressions , some - thing which goes somewhat contrary to expectations , since one could assume that it is necessary for the user to have the dialogue ‘on the top of his consciousness’ to be able to use such linguistic devices . It is of course not possible here to give an explanation of this phenomenon , which in our opin - ion requires further investigation . But it is possible that the fact that both the dialogue and the calendar is displayed on Intelligent User Interfaces ’93 197 the screen affects the dialogue structure . Another system tried but not used was an advisorv mosmun for incom ~ tax return and tax planning that run ; in % 3M PCs . The reason for thinking that this was a suitable system for our experiments is of course the same as the one first one described above . One reason for not using it was that very little dialogue was necessary to use the program , apart from filling in the menus that correspond to various part of the tax forms . So it seems as if a natural language interface is not the preferred mode for such a system , but at most something which can supplement it . Another difficulty was with the scenario , as people are not willing to present their own in - come tax planning in an experiment and it is quite a com - plex task to learn a fictitious tax profile . In one of our simulations we have tried to simulate also an advisory system . But there are some problems with this too , the most important beiig that it is difticult for the Wizard to maintain a consistent performance and give the same an - swers to similar questions from different users , and even from the same user . To some extent these problems can be overcome , but it seems to require longer development phas - es than for other kinds of systems . Advisory system thus seem to give us two kinds of problems if we want to use them in Wizard of Oz studies . On the one hand , the simulation of the system is difficult to do , and if one wants to use a ml system developed on existing shells , at least in some cases the dialogue is system driven to an ex - tent that there seem to be little that can be gained from such a study . To summarize , we can identify three parameters that must be given careful consideration : the background system , the task given to subjects , and the wizard’s guide - lines and tools . l If the background system is not simulated it should be fully implemented . A shaky prototype will only reveal that system’s limitations and will not provide useful data . Furthermore , the system should allow for a minimum of mixed - initiative dialogue . A sys - tem - directed background system will give a dia - logue which is not varied enough . “ The task given to subjects must be reasonably open , i . e . have the form of a scenario . Retrieving informat - ion from a database system and putting it together for a speciiic purpose can be fruitful . But , if the d ~ main is so complex that it requires extensive domain knowledge , or the task is of a more private nature , then it is likely that the subjects try to tinish their task as quickly as possible and again not provide enough dialogue variation . The specification of the task must allow for varied outcomes . Many different outcomes must be considered “correct” and there should be many ways to expIore the background system to achieve a reasonable result . l The simulation experiment must be studied in de - tail , from pilot experiments , before the real simula - tions m carried out . This information is used to provide lmowledge to the wizard on how to act in various sitnations that he may encounter . Further - more , the wizard needs a variety of pre - stored m - responses covering typical situations . Otherwise , besides slowing down the simulation , the ensuing variation will provide msuhs that are less generaliz - able . FOR AND AGAINST THE CHOSEN METHOD We have conducted post - experimental interviews with all our subjects . The most important objective was of course to ascertain that they had not realized that the system had been simulated , and also to explain what we had done and why we had deceived them . ( We also explained that the collected dialogue should be destroyed if they so wished . ) In the review of the Wizard of Oz method Fraser and Gilbert [ 91 argued , on ethical tgounds , against deceiving subjects about the nature of their conversation partner . We do not want to deny that the ~ are ethical problems here , but we think that they can be overcome , and that there are good rea - sons for trying to do so . As pointed out above it has been shown that there me dfierences in the language used when subjects think they communicate with a computer and when they think they communicate with a person . And , what is more important , the differences observed concern aspects of language over which subjects seem to have little conscious control , e . g . type and frequency of anaphoric expressions used . So at least if your intenxts concern syntax and dis - course , we consider it important to make the subjects be - lieve that they are communicating with a computer , simply because we do not think that subjects can role - play here and give you the data you need . And if , on the other hand , you find that subjects iind it difficult to use the existing NLI , as for instance in [ 14 ] , this amounts hardly to anything more than a demonstration of the limitations of existing technolo - f3Y . So much for the need , but how about the ethics ? We would claim that if one uses the practice developed within experi - mental social psychology of a debriefing session afterwards , explaining what you have done and why you found it neces - sary to do so , and furthermore that you tell the subjects that the data collected will be destroyed immediately if they so wish , you will encounter little problem . In our experiments we have done so , and we have so far only had a number of good laughs and interesting discussions with our subjects on their expectations of what a computer can and cannot do , but no one has criticized us for our ‘lies’ . Perhaps one ~ a - son for this is that none of the subjects felt that they had been put in an embarrassing situation . It is not exactly the same as Candid Camera . Another possible critique is that one should study existing systems instead of simulated ones . But in this case we agree with Temant’s [ 22 ] conclusion that people can often adapt 198 Intelligent User interfaces ’93 to the limitations of an existing system , and such an experi - ment does not therefore tell you what they ideally would need . It could also be argued that the human ability to adapt to the communicative capacity of the dialogue partner means that what we tlnd is only the subjects adaptive R - sponses to the wizard’s conception of what an NLI should be able to do . But it is exactly for this reason that the wiz - ards in our experiments have not been instructed to mimic any specific capacity limitations . At the present stage of de - velopment of NLI technology , we cannot say with any high degree of certainty what we will and will not be able to do iU the future . Furthermom it is extremely difficult to be con - sistent in role - playing an agent with limited linguistic or communicative ability , so , to make such an experiment you would need some way of making the restrictions automati - cally , for instance by filtering the input through a specific parser , and only understand those utterances that can be ana - lysed by this parser . Furthermore , the fact that we have used different wizards for the different background systems guar - antees at least that the language we find our subjects using is not the nXlection of the idiosyncrasies of one single person’s behaviour in such a situation . The possible critique against the artificiality of the experi - mental setting can be levelled against another aspect of the method used , namely that the subjects are role - playing . They are not real users , and their motivation for searching information or ordering equipment is really not theirs . This is an argument that should be taken seriously . It is , however , our kelief that the fact that the subjects are role - playing af - fects different aspects of their behaviour differently . If the focus of interest is for instance the goals and plans of the us - ers , and the way that is manifested in the dialogue , the use of role - playing subjects should be made with caution . But if the focus is on aspects not under voluntary conscious con - trol ( cognitively impenetrable , to use Pylyshyn’s , [ 191 term ) , the prospect is better for obtaining ecologically valid data . To take one specific example ; if a user is just pretend - ing to buy a holiday trip to Greece , she might not probe the alternatives to the extent that she would if she were in fact to buy it , simply because the goal of iinishing the task within a limited time takes precedence . But it does not seem likely that the latter fact will affect the use of pronouns in a specif - ic utterance , or the knowledge about charter holidays and Greek geography that is implicitly used in interpreting and formulating specific utterances . CONCLUDING REMARKS The present paper makes two points , one theoretical and one methodological . On the theoretical side we argue that it is natural for any human engaging in a dialogue to adapt to the perceived characteristics of the dialogue partner . Since com - puters are different from people , a necessary corollary from this is that the development of interfaces for natural dia - logues with a computer cannot take human dialogues as its sole starting point , but must be based on a knowledge of the unique characteristics of these kinds of dialoages . Our own work has been concerned with natural - language interfaces , but the argument is of relevance for all kinds of intelligent dialogue systems . The methodological point is simply that to acquire the rele - vant knowledge , we need high quality empirical data . But if the point is simple , gathering such data is not quite that sim - ple . One way of doing so is by simulating intelligent inter - faces ( and sometimes also systems ) using so - called Wizard of Oz - studies , i . e . having a person simulate the interface ( and system ) . But even if the basic idea is simple , to acquire the required high - quality data a ~ at deal of care and con - sideration need to be used in the design of such experiments . We have described our own simulation environment ARNE and some of our practical experiences , both positive and negative , form o ~ rese ~ ch in this mea , to illustrate some of the points that we consider important if such a research pro - gram is to contribute to the development of theoretically and empirical y sound user friendly intelligent interfaces . REFERENCES 1 . 2 . 3 . 4 . 5 . 6 . 7 . 8 . Ahrenberg , Lars , Arne J @ sson & Nils Dahlback ( 1990 ) Discourse Representation and Discourse Management for Natural Language Interfaces , Proceedings of the Sec - ond Nordic Conference on Text Comprehension in Man and Machine , Tiiby , Stockholm . Clark , Herbert H . & Catherine Marshall ( 198 1 ) Deftite Reference and Mutual Knowledge . In Joshi , Aravind , Webber , Bonnie , and Sag , Ivan ( eds . ) Elements of Dis - course Understanding . Cambridge , Mass . : Cambridge University Press . Cohen , Philip R . ( 1984 ) The pragmatic of referring and modality of communication , Computational Linguistics , 10 , pp 97 - 146 Dahlb ~ ck , Nils ( 199 la ) Empirical Analysis of a Dis - course Model for Natural Language Interfaces , Proceed - ings of the Thirteenth Annual Meeting of The Cognitive Science Society , Chicago , Illinois . Dahlbiick , Nils , ( 1991b ) Representations of Discourse , Cognitive and Computational Aspects , PhD - thesis , Ldtiping University . Dahlbiick , Nils ( 1992 ) Pronoun usage in NLI - dialogues : A Wizard of Oz study . To appear in Papers from the Thiid Nordic Conference on Text Comprehension in Man and Machine , Linkdping April , 21 - 23 , 1992 . Dahlbiick , Nils & Arne J @ sson ( 1989 ) Empirical Stud - ies of Discourse Representations for Natural Language Interfaces , Proceedings of the Fourth Conference of the European Chapter of the ACL , Manchester . Dahlbtick . Nils & Arne JOnsson ( 1992 ) An em ~ iricallv based computationally tractable dialogue mod ~ l , Pro - ceedings of the Fourteenth Annual Meeting of The Cog - nitive Science Society , Bloomington , Indiana . Intelligent User Interfaces ’93 199 9 . Fraser , Norman & Nigel S . Gilbert ( 1991 ) Simulating speech systems , Computer Speech and Language , 5 , pp 81 - 99 . 10 . Gal , Annie ( 1988 ) Cooperative responses in Deductive Databases . PhD Thesis , Department of Computer Sci - ence , University of Maryland , College Park . 11 . Grosz , Barbara ( 1977 ) The Representation and use of Focus in Dialogue Understanding . Unpublished Ph . D . thesis . University of California , Berkely . 12 . Grosz , Barbara J . , Martha Pollack & Candaee L . Sidner ( 1989 ) Discourse , Jm Posner M . I . ( M . ) Foundations of Cognitive Science , Cambridge , MA The MIT Press 13 . Guindon , Raymonde ( 1988 ) A multidisciplinary per - spective on dialogue structure in user - advisor dialogues . In Guindon , Raymoned ( cd . ) Cognitive Science and its Applications for Human - Computer Interaction . Hills - dale , N . J . : Erlbaum . 14 . Jarke , M , , Krause , J . , Vassiliou , Y . , Stohr , E . , Turner , J . & White , N . ( 1985 ) Evaluation and assessment of do - main - independent natural language query systems , IEEE quarterly bulletin on Database Engineering , Vol . 8 , No . 3 , Sept . 15 . J6nsson , Arne ( 1991 ) A Dialogue Manager Using Initia - tive - Response Units and Distributed Control , Proceed - ings of the F @ th Conference of the European Chapter of the Association for Computational Linguistics , Berlin . 16 . Ji5mson , Arne & Nils DahlbZiek ( 1988 ) Talking to a Computer is not Like Talking to Your Best Friend . Pro - ceedings of TheJrst Scandinavian Conference on Arti & cial Intelligence , Tromso , Norway . 17 . Kennedy , A . , Wilkes , A . , Elder , L . & Murray , W . ( 1988 ) Dialogue with machines . Cognition , 30 , 73 - 105 . 18 . Lakoff , R . T . ( 1973 ) The Logic of Politeness ; or minding your p’s and q’s , Papers from the Ninth Regional Meet - ing , Chicago Linguistic Society , pp 292 - 305 . 19 . Pylyshyn , Zenon ( 1984 ) Computation and Cognition , Cambridge MA The MIT Press 20 . Reichman , Rachel ( 1985 ) Getting Computers to Talk Like You and Me , MIT Press , Cambridge , MA . 21 . Shatz , M . & Gehnan , R . The development of communi - cation skills : Modifications in the speech of young chil - dren as a function of listener . Monographs of the Society for research in child development . 38 , No 152 . 22 . Tennant , Harry ( 1981 ) Evaluation of Natural Language Processors Ph . D . Thesis . University of Illinois Urbana - Champaign . 200 Intelligent User Interfaces ’93