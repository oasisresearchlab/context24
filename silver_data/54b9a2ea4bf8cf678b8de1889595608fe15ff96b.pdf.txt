180 Potential financial motivations for end - user programming Chris Scaffidi Center for Applied Systems and Software School of Electrical Engineering and Computer Science Oregon State University Corvallis , OR , USA cscaffid @ eecs . oregonstate . edu Abstract —Research has identified multiple reasons why people do end - user programming but has yet to quantify one of the most basic : making more money . This is an important gap in the literature given the current widespread efforts to promote computational thinking skills , because this education campaign is often linked to the argument that end - user programming skills will contribute to workers’ long - term career prospects . Therefore , this paper presents a study investigating how the earnings of workers varied as a function of whether they used spreadsheets / databases and / or did programming at work . Examining survey data from 2003 revealed a positive correlation of earnings against these variables , even after controlling for the occupations of workers . Overall , occupation - adjusted earnings were 14 % higher for workers who used spreadsheets / databases and who also did programming , versus those who did neither . These results provoke numerous questions for future research regarding what financial benefits workers can expect to obtain in different settings through end - user programming . Keywords - end - user development ; end - user programming ; motivation I . I NTRODUCTION Why would an end user engage in programming ? Researchers have noted intrinsic motivations such as enjoyment [ 6 ] [ 7 ] as well as extrinsic motivations such as saving time on tasks [ 25 ] . One viewpoint , for example , is that “the scarcest economic resource on the Internet is human attention” and therefore attention ( perhaps measured with units of time ) is a “currency” that end users may save by programming [ 5 ] . Yet perhaps actual money could serve as an even more motivational currency . That is , perhaps it would be possible to motivate workers , en masse , to learn end - user programming skills and tools if empirical data showed that this choice would , on average , lead to more money . This could support current efforts to promote computational thinking skills , centered on abstraction and the ability to reason with algorithms [ 18 ] [ 34 ] . Programming is one of the main ways of building as well as applying computational thinking skills [ 27 ] ( although not the only way [ 19 ] [ 24 ] ) . The close connection between the two suggests that mastery of programming skills should lead to the career benefits alluded to by proponents of computational thinking . And , indeed , a prior study of management engineering students found that some of them did take a course on programming because they believed that doing so would enhance their future career prospects , even though very few of them intended to become professional programmers [ 13 ] . Surveying information workers uncovered similar expectations [ 14 ] . Are such hopes misplaced , or does mastery of programming actually lead to higher earnings among end users ? Research to date has offered little insight into what financial benefits , if any , accrue to end - user programmers in practice— although such benefits are plausible . If workers in a given job , such as business / marketing analysts , were to use a programming tool such as Excel in place of direct manipulation , they could conceivably become more productive . This could lead to an increase in corporate output , an increase in revenue , and higher profits . Hence , an employer could potentially value an end - user programmer more than a non - programmer for the same job title and pay workers accordingly . However , it remains unclear whether employers do actually share any increase in profits with the workers . Employers , recognizing the increased productivity of workers who become end - user programmers , might instead lay off some of those employees to reduce costs , since fewer such workers might be needed . The employers could then retain the increased profits for themselves . Following this line of reasoning further , if an increase in end - user programming leads to lower demand for workers with corresponding job titles ( through layoffs ) , then this reduced demand for workers could in turn reduce earnings among remaining workers as well as any future new hires . In such a scenario , the invention and dissemination of end - user programming tools could indirectly contribute to financially harming the very users meant to receive the most direct benefit from that technology . The question remains , therefore , whether engaging in programming provides personal financial rewards to these hypothetical business analysts , or to end users in any other particular occupation . The most relevant work was a study that found certain categories of job posts offered 13 % higher pay to applicants who knew how to use productivity software [ 11 ] , which prompted the proclamation in the mass media , “The Key to a Good - Paying Job Is… Microsoft Excel ? ” [ 33 ] 978 - 1 - 5090 - 0252 - 8 / 16 / $ 31 . 00 ©2016 181 However , this study had several limitations . It did not distinguish among several kinds of software , which included Excel but also included Word , SAP and other non - programming tools . In addition , the study focused only on job posts for occupations that rarely required a bachelor ' s degree and that paid at least $ 15 per hour , which may not have encompassed all jobs that commonly involve using the software . Moreover , the study did not control for job title . In short , the study did not directly pertain to the question of whether financial rewards exist for end - user programming within a given occupation . Or , put again in terms of a concrete example , do business / marketing analysts who know Excel make more money than those who do not ? This paper explores this issue empirically . Section II presents the study of how earnings varied as a function of whether workers used spreadsheets / databases and / or did programming at work . Section III summarizes related work , and Section IV enumerates limitations as well as threats to validity . Finally , Section V discusses conclusions and the need for further work aimed at further clarifying the financial rewards that accrue to end - user programmers . II . S TUDY The data source for the study was the Current Population Survey ( CPS ) , which the United States Bureau of Labor Statistics presents each month to a sample of the American population [ 10 ] . The CPS includes dozens of questions about earnings , demographics , and employment , and it offers one of the richest , most representative datasets about the American population’s current labor status . It served as the primary basis for an earlier analysis regarding the number of end - user programmers in American workplaces [ 31 ] . Through October 2003 , the CPS periodically included questions about forms of computer use at work . Those questions , in concert with those about earnings , made it possible to analyze relationships among these variables . A . Data acquisition The CPS dataset for October 2003 included the following : • Employment status : a Boolean indicating whether the person was employed during the preceding month • Earnings : indicating the weekly salary or wages earned by the person at the main job during the preceding month • Occupational category ( referred to below as OCC ) : a four - digit occupation code categorizing the person’s main job • Computer use : a Boolean ( for employed workers ) indicating whether the person used a computer at work • Spreadsheet / database use ( SSDB below ) : a Boolean ( for workers who used a computer at work ) indicating whether the person used spreadsheets or databases at work • Programming ( EUP below ) : a Boolean ( for workers who used a computer at work ) indicating whether the person did programming at work The questions’ text did not specify in detail what was meant by “using a computer at work for spreadsheets / databases” or “for programming , ” leaving it up to the respondent to interpret these questions . The data were filtered to include only those for which the person was employed , had non - zero weekly earnings , and used a computer at work . No additional filtering or cleaning was performed . This yielded data for 8467 workers . B . Statistical analysis Several statistical tests were performed , each aimed at investigating whether earnings had a statistically significant relationship versus SSDB and / or EUP while controlling for OCC . First , an ANOVA was performed of earnings versus OCC , SSDB , and EUP . ANOVA was selected because it is one of the most direct statistical tests available for assessing how much variance in the dependent variable is attributable to each independent variable . A limitation of the test is that , to the extent that the dependent variables have any covariance , the order of the independent variables in the ANOVA specification can affect how much variance is attributed to each variable . Hence , the test was performed twice , once in which variance was extracted in the order OCC , SSDB , and EUP , then a second time in the order OCC , EUP , and SSDB . Second , in view of the ANOVA’s limitations , a second statistical test was performed . This statistical analysis directly adjusted each person’s reported earnings based on occupational code ( i . e . , the analysis “manually” controlled for occupation ) , then applied a non - parametric test that obviated the need for any assumptions about the statistical independence of SSDB and EUP . Specifically , for each distinct occupational code , the average earnings was computed . Next , each worker’s earnings was adjusted by subtracting the average earnings for that worker’s corresponding occupational code . Then , a two - tail non - parametric Kruskal - Wallis test was performed to determine if this adjusted earnings variable was statistically related to SSDB . A final , separate test examined adjusted earnings versus EUP . Other descriptive statistics were calculated , in addition , including the average occupation - adjusted earnings as a function of SSDB and EUP . This made it possible to quantify the net statistical impact of SSDB and / or EUP . C . Results Of the 8467 workers who used computers at work , 64 % reported using them for spreadsheets / databases and 15 % for programming , including a total of 13 % who used them for both ( Table Ia ) . Using them for spreadsheets / databases and not for programming was common ( 51 % ) . Very few reported using them for programming but not for spreadsheets / databases ( 2 % ) . Both spreadsheet / database usage and programming were associated with higher weekly earnings ( Table Ib ) . Those who used the computer for spreadsheets / databases reported $ 900 per week versus $ 687 for those who did not , and those who programmed reported $ 987 per week versus $ 794 for those that did not . 182 Both ANOVA tests , controlling for OCC and then testing against EUP and SSDB in either order , also showed a statistically significant relationship between earnings and SSDB ( F (cid:1) 70 . 3 , p < 0 . 0001 for each test ) and between earnings and EUP ( F (cid:1) 7 . 2 , p < 0 . 01 for each test ) . These results confirmed that the dependence of earnings on these two variables remained even when taking into account the workers’ occupations . Adjusting each worker’s reported earnings by subtracting the average for that person’s occupational code further established that workers’ income was significantly associated with SSDB and EUP . Specifically , the non - parametric tests confirmed the relationship between adjusted earnings and SSDB ( N = 8467 , (cid:1) 2 = 68 . 7 , p < 0 . 0001 ) , as well as between adjusted earnings and EUP ( N = 8467 , (cid:1) 2 = 11 . 2 , p < 0 . 001 ) . Table Ic summarizes the magnitude of these impacts . Those workers who used spreadsheets / databases and who also did programming earned more than those who reported one but not the other , or who reported doing neither . Those who reported both earned , in total , $ 115 more per week in adjusted earnings than those who reported neither . Because the average earnings ( over all workers ) was $ 823 per week , this implies that using spreadsheets / database and also doing programming yielded a combined net adjusted wage increase of approximately 14 % ( relative to workers who did neither ) . Or , put in annualized terms , this amounted to an effective pay difference of $ 5980 ( 2003 dollars ) . In short , a financial reward may exist for use of spreadsheets / databases and / or for end - user programming . III . R ELATED W ORK Motivations for end - user programming can be organized into three categories : intrinsic motivations , task - focused extrinsic motivations , and what might be called “distal” extrinsic motivations—that is , extrinsic motivations arising from broader contextual factors than those pertaining to a particular task . 1 ) Intrinsic motivations An analysis of Facebook likes uncovered potential psychometric constructs relating to different individuals’ interest in different aspects of end - user programming [ 1 ] . Other work has highlighted the strong association between self - efficacy and a willingness to engage in end - user programming [ 2 ] [ 3 ] , as well as the effects of other psychological and demographic factors [ 30 ] [ 36 ] . For instance , one study suggested females , at least within the domestic context , might be turned off from programming by technologies designed for people who have certain personality traits [ 6 ] . Another factor believed to affect the willingness to program is whether an end user feels that certain aspects of a particular system are really not his or her domain of interest or concern [ 7 ] . Unlike these studies , the current work focuses on potential extrinsic motivations . 2 ) Task - specific extrinsic motivations Nardi’s seminal book largely framed end - user programming in terms of its value for doing tasks [ 25 ] . Quantifying this benefit , in a way that generalizes across tasks and tools , has proven somewhat elusive . Perhaps the best - established model is Attention Investment [ 5 ] , which “offers an account of EUP with regard to extrinsic motivation - what benefit does the end - user perceive from programming ? ” [ 1 ] . Specifically , this model proposes that an end user tends to avoid programming except when he or she expects that mastering and applying abstractions would save attention , relative to direct manipulation [ 5 ] . A second , consistent viewpoint is the “Paradox of the active user” : people have limited tolerance for learning new tools or features ( including those for programming ) when they have a task to get done , even if those tools might save effort in the long run [ 12 ] . This task - centric mentality explains much end user behavior . For example , the perceived value of a mashup is a strong factor in whether a person chooses to learn to create mashups [ 36 ] . These models do not , by themselves , account for all task - focused extrinsic motivations . Attention Investment , in particular , “does not take account of extrinsic motivations such as those arising from the social context in which these tasks are carried out , and by which they might be motivated” [ 8 ] . One way that this manifests , for instance , is in the domestic domain where one person may create programs to help other members of a household with tasks [ 28 ] . Such motivations are task - centric but challenging to model on a purely cognitive basis . Table I . ( a ) Usage of spreadsheets / databases was relatively common , but end - user programming was less so . ( b ) Workers who used spreadsheets / databases , and / or who did programming , reported higher earnings than those who did not use spreadsheets / databases and / or did programming . ( c ) Differences persisted after adjusting workers’ earnings relative to per - occupational averages ( i . e . , after controlling for occupation ) . Statistical tests consistently showed that all differences between cells , below , were significant at p < 0 . 01 ( or better ) . ( a ) Numbers of workers SSDB Yes No EUP Yes 1124 ( 13 % ) 172 ( 2 % ) No 4297 ( 51 % ) 2874 ( 34 % ) ( b ) Average weekly earnings SSDB Yes No EUP Yes $ 1019 $ 777 No $ 869 $ 682 ( c ) Average weekly earnings after adjustment for occupation SSDB Yes No EUP Yes + $ 58 - $ 41 No + $ 24 - $ 57 183 3 ) Distal extrinsic motivations Unlike the work cited above , the current paper focuses on a potential extrinsic motivation ( increased income ) that could be called a “distal extrinsic motivation , ” defined as tied neither to intrinsic motivations nor to specific tasks but rather to some hypothetical benefit at an indeterminate future point . Research has extensively investigated the effect of analogous motivations on the extent to which people choose to do professional programming . Factors included , for example , whether a person was on a long - term career trajectory toward a managerial or technical role , whether the person’s employer was of a type or within a market that valued software creation , and whether the information technology profession was economically thriving overall [ 4 ] . Studies have also specifically explored why developers participate in open source projects , finding that one of the top three motivators was a desire for “potential career impacts” [ 20 ] . ( The other two top motivators were an intrinsic enjoyment from participation and a desire to use the resulting software for tasks . ) A survey of developer salaries has indeed shown that increased earnings followed when professional programmers achieved a high rank as contributor to open source projects [ 21 ] . Other research related to professional programmers or to their training has analyzed the frequency of programming - language mentions in job posts [ 9 ] [ 15 ] [ 16 ] [ 22 ] [ 23 ] [ 35 ] . In contrast , research has offered little insight into potential distal motivations behind end - user programming . Empirical studies sometimes mention career - related concerns ; for example , interviews showed some instructional designers found themselves learning to program in order to keep up with the increasing online nature of their discipline [ 29 ] ; likewise , management engineering students in one study studied Java so they could communicate well in the future with programmers and / or so that they could list a programming language on their resumes as a means of getting better future jobs as non - programmers [ 13 ] . ( In addition , 7 % planned to be professional programmers , and 48 % reported task - related motivations . ) . A follow - up survey of information workers at Microsoft found that nearly half had learned to program , and many of these shared similar expectations about potential career benefits [ 14 ] . Other broader benefits of computational thinking ( and / or end - user programming ) could include a more effective and democratic citizenry as well as more capable workers [ 17 ] [ 19 ] [ 26 ] [ 32 ] [ 34 ] . The desire to make money and / or contribute to the social order could thus be distal motivations for end - user programming . Unlike the empirical work above , the current study did not investigate whether end users choose to program due to distal motivations , but rather whether such motivations based on personal financial rewards would be justified . IV . L IMITATIONS AND T HREATS TO V ALIDITY The study’s primary result is encouraging : at least in 2003 , use of spreadsheets / databases and programming at work were both associated with higher earnings , even when controlling for occupation . These results invite further work , to address limitations of the current study and threats to its validity , before it is possible to draw any overarching conclusions about the financial rewards of end - user programming . First , these results might not generalize to current circumstances for a variety of reasons that include the data’s age ( 13 years ) , the intervening recession , the availability of new software tools , and the appearance or disappearance of new and old jobs in the intervening years . Variability among nations or regions could further limit generalizability . Replicating the study could counter these threats to external validity . Second , the coarse independent variables offered by the CPS provide little insight into exactly what aspects of using spreadsheets / databases and / or doing programming are actually associated with higher earnings . Further studies could investigate what people mean by “using spreadsheets / databases” and “doing programming , ” as they relate to earnings , in order to further examine this threat to internal validity . Third , correlation does not imply causation : this study does not show that using spreadsheets / databases and / or doing programming actually caused higher earnings . For example , perhaps all three of these variables are highly correlated with a fourth variable ( such as education ) that causes all three of them . Further analysis controlling for other demographic variables could investigate this issue . In addition , a long - term random assignment study ( e . g . , one that taught some people to use spreadsheets / databases and / or programming ) could investigate the extent to which interventions lead to higher earnings . Fourth , the study had several limitations . It did not tease apart whether different programming tools lead to different impacts to earnings , it did not examine the potential for increased earnings as a result of switching jobs after learning to program , and it did not look at non - earnings benefits ( such as a reduced risk of layoffs or a higher level of job satisfaction ) . Further studies could focus on these issues . It is important to note a final threat to validity , the risk of experimenter bias : the members of any research area ( such as end - user programming ) have a vested interest in quantifying the value and importance of their field . Overcoming this threat to validity may call for a diverse set of overlapping , replicated studies , including some conducted via inter - institutional and / or inter - disciplinary collaboration . V . C ONCLUSIONS This paper offers preliminary evidence that financial considerations could justifiably motivate learning how to use spreadsheets and databases , to do end - user programming , and to master other expressions of computational thinking . The benefits indicated by the analysis were a net 14 % positive impact to earnings . Thus , this study suggests helping people to become end - user programmers could generate a significant positive impact on their finances . The results invite further work and , potentially , a new area in the end - user programming research community focused on quantifying financial benefits and other distal motivations for end - user programming . 184 R EFERENCES [ 1 ] Aghaee , S . , Blackwell , A . , Stillwell , D . , and Kosinski , M . ( 2015 ) Personality and intrinsic motivational factors in end - user programming . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 29 - 36 . [ 2 ] Beckwith , L . , and Burnett , M . ( 2004 ) Gender : An important factor in end - user programming environments ? IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 107 - 114 . [ 3 ] Beckwith , L . , Inman , D . , Rector , K . , and Burnett , M . ( 2007 ) On to the real world : Gender and self - efficacy in Excel . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 119 - 126 . [ 4 ] Beecham , S . , Baddoo , N . , Hall , T . , Robinson , H . , and Sharp , H . ( 2008 ) Motivation in software engineering : A systematic literature review . Information and Software Technology . 50 ( 9 ) , 860 - 878 . [ 5 ] Blackwell , A . ( 2002 ) First steps in programming : A rationale for attention investment models . IEEE Symposium on Human - Centric Computing ( VL / HCC ) , 2 - 10 . [ 6 ] Blackwell , A . ( 2006 ) Gender in domestic programming : From Bricolage to Seances d’Essayage . CHI ' 2006 Workshop on End User Software Engineering . [ 7 ] Blackwell , A . , and Morrison , C . ( 2010 ) A logical mind , not a programming mind : Psychology of a professional end - user . Workshop of the Psychology of Programming Interest Group ( PPIG ) , 175 - 184 . [ 8 ] Blackwell , A . , Rode , J . , and Toye , E . ( 2009 ) How do we program the home ? Gender , attention investment , and the psychology of programming at home . International Journal of Human - Computer Studies . 67 ( 4 ) , 324 - 341 . [ 9 ] Buckler , C . ( 2015 ) Best Programming Languages for Job Demand and Salaries 2015 , Sitepoint , http : / / www . sitepoint . com / best - programming - language - learn - 2015 - job - demand - salaries / [ 10 ] Bureau of Labor Statistics ( 2003 ) . Current Population Survey ( CPS ) Computer Ownership / Internet Usage Supplement . Reports may be retrieved from http : / / www . census . gov / programs - surveys / cps . html while raw data may be downloaded through the DataFerrett program available at http : / / dataferrett . census . gov / [ 11 ] Burning Glass Technologies ( 2015 ) Crunched by the Numbers : The Digital Skills Gap in the Workforce , http : / / 104 . 239 . 176 . 33 / wp - content / uploads / 2015 / 06 / Digital _ Skills _ Gap . pdf [ 12 ] Carroll , J . , and Rosson , M . ( 1987 ) Paradox of the Active User , MIT Press . [ 13 ] Chilana , P . , Alcock , C . , Dembla , S . , Ho , A . , Hurst , A . , Armstrong , B . , and Guo , P . ( 2015 ) Perceptions of non - CS majors in intro programming : The rise of the conversational programmer . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 251 - 259 . [ 14 ] Chilana , P . , Singh , R . , and Guo , P . ( 2016 ) Understanding conversational programmers : A perspective from the software industry . CHI Conference on Human Factors in Computing Systems , 1462 - 1472 . [ 15 ] DAXX Blog ( 2015 ) Programming Languages : An Overview of Salaries and Demand in 2015 , DAXX , http : / / www . daxx . com / article / software - industry - statistics - 2015 [ 16 ] Diakopoulos , N . , Cass , S . , and Romero , J . ( 2014 ) Data - driven rankings : The design and development of the IEEE Top Programming Languages news app . Symposium on Computation + Journalism . [ 17 ] Fischer , G . ( 2009 ) End - user development and meta - design : Foundations for cultures of participation . End - User Development , 3 - 14 . [ 18 ] Grover , S . , and Pea , R . ( 2013 ) Computational thinking in K - 12 : A review of the state of the field . Educational Researcher , 42 ( 1 ) , 38 - 43 . [ 19 ] Guzdial , M . ( 2015 ) Requirements for a computing - literate society . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) . [ 20 ] Hann , I . , Roberts , J . , and Slaughter , S . ( 2004 ) Why developers participate in open source software projects : An empirical investigation . International Conference on Information Systems , paper 66 . [ 21 ] Hann , I . , Roberts , J . , Slaughter , S . , and Fielding , R . ( 2002 ) Economic incentives for participating in open source software projects . International Conference on Information Systems , paper 33 . [ 22 ] JAX editorial team . ( 2015 ) Language trends and salaries : Java way ahead , JAX , https : / / jaxenter . com / language - trends - and - salaries - java - way - ahead - 121201 . html [ 23 ] Lindoo , E . ( 2014 ) Bringing COBOL back into the college IT curriculum . ACM Journal of Computing Sciences in Colleges , 30 ( 2 ) , 60 - 66 . [ 24 ] Lu , J . , and Fletcher , G . ( 2009 ) Thinking about computational thinking . ACM SIGCSE Bulletin , 41 ( 1 ) , 260 - 264 . [ 25 ] Nardi , B . ( 1993 ) A Small Matter of Programming : Perspectives on End User Computing , MIT Press . [ 26 ] Nelson , T . ( 1974 ) Computer Lib : Dream Machines , Tempus Books . [ 27 ] Resnick , M . , Flanagan , M . , Kelleher , C . , MacLaurin , M . , Ohshima , Y . , Perlin , K . , and Torres , R . ( 2009 ) Growing up programming : Democratizing the creation of dynamic , interactive media . CHI ' 09 Extended Abstracts on Human Factors in Computing Systems , 3293 - 3296 . [ 28 ] Rode , J . , Toye , E . , and Blackwell , A . ( 2005 ) The domestic economy : A broader unit of analysis for end user programming . CHI ' 05 Extended Abstracts on Human Factors in Computing Systems , 1757 - 1760 . [ 29 ] Rosson , M . , Ballin , J . , and Nash , H . Everyday programming : Challenges and opportunities for informal web development . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 123 - 130 . [ 30 ] Rosson , M . , and Kase , S . ( 2006 ) Work , play , and in - between : Exploring the role of work context for informal web developers . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 151 - 156 . [ 31 ] Scaffidi , C . , Shaw , M . , and Myers , B . ( 2005 ) Estimating the numbers of end users and end user programmers . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 207 - 214 . [ 32 ] Vee , A . ( 2013 ) Ideologies of a new mass literacy . Conference on College Composition and Communication Convention . [ 33 ] Weber , L . ( 2015 ) The Key to a Good - Paying Job Is…Microsoft Excel ? , Wall Street Journal , http : / / blogs . wsj . com / atwork / 2015 / 03 / 05 / microsoft - excel - skills - the - key - to - middle - class - earnings / [ 34 ] Wing , J . ( 2006 ) Computational thinking . Communications of the ACM , 49 ( 3 ) , 33 - 35 . [ 35 ] Wu , P . , and Manrique , P . ( 2011 ) Is Java relevant in the game industry ? ACM Journal of Computing Sciences in Colleges , 27 ( 1 ) , 128 - 136 . . [ 36 ] Zang , N . , and Rosson , M . ( 2008 ) What’s in a mashup ? And why ? Studying the perceptions of web - active end users . IEEE Symposium on Visual Languages and Human - Centric Computing ( VL / HCC ) , 31 - 38 .