Andrew Head · Fred Hohman · Titus Barik · Steven M . Drucker · and Robert DeLine UC Berkeley · Georgia Tech · Microsoft Research [ 1 ] [ 7 ] [ 3 ] [ 6 ] [ 2 ] Managing Messes in Computational Notebooks Computational Notebooks : Code , Text , and Output Rich descriptions Code Output Notebook Programming Interfaces Abound Notebook Model of Exploratory Programming 1 . Incremental execution Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout 1 W EEK P ASSES Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout Notebook Model of Exploratory Programming 1 W EEK L ATER How did I produce this ? 1 . How did I produce this result ? 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout Notebook Model of Exploratory Programming 1 W EEK L ATER How did I produce this ? 1 . How did I produce this result ? which petal _ length ? 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout 1 W EEK L ATER 1 . How did I produce this result ? 2 . Didn ' t I have a better version of this ? Didn ' t I have a better version of this ? Notebook Model of Exploratory Programming 1 . Incremental execution 2 . In - situ output 3 . Incremental changes 4 . Control over layout 1 W EEK L ATER 1 . How did I produce this result ? 2 . Didn ' t I have a better version of this ? 3 . What can I get rid of ? What can I get rid of ? Notebook Model of Exploratory Programming Messes in Computational Notebooks [ 1 ] [ 7 ] [ 3 ] [ 6 ] Disorder Out - of - order execution 1 / 2 of notebooks on GitHub [ Rule et al . 2018 ] Dispersion Disappearance Too many cells [ 2 ] Deleted / overwritten code Notebooks contain ugly code and dirty tricks [ Rule et al . 2018 ] 31 / 41 surveyed participants had trouble finding prior analyses [ Kery et al . 2018 ] Managing Messes in Computational Notebooks How can tools help analysts find , recover , and compare code in messy notebooks ? C ODE G ATHERING T OOLS [ * ] Implementation [ ] Qualitative usability study [ ] How messes happen [ 1 ] Tools in context [ ] C ODE G ATHERING T OOLS Demo 1 W EEK P ASSES C ODE G ATHERING T OOLS Demo Task 1 : Recovering Code How did I produce this ? C ODE G ATHERING T OOLS Demo Variables Outputs Task 1 : Recovering Code How did I produce this ? C ODE G ATHERING T OOLS Demo Task 1 : Recovering Code How did I produce this ? 1 W EEK P ASSES C ODE G ATHERING T OOLS Demo Request cell subset that produced the result . Task 1 : Recovering Code How did I produce this ? 1 W EEK P ASSES C ODE G ATHERING T OOLS Demo Request cell subset that produced the result . Task 1 : Recovering Code How did I produce this ? C ODE G ATHERING T OOLS Demo The gathered code is . . . • reduced • ordered • complete Request cell subset that produced the result . Task 1 : Recovering Code How did I produce this ? C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Didn ' t I have a better version of this ? Request cell subset that produced the result . Task 1 : Recovering Code 1 W EEK P ASSES C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Didn ' t I have a better version of this ? Request cell subset that produced the result . Task 1 : Recovering Code Open a version browser for a result . C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code Open a version browser for a result . Didn ' t I have a better version of this ? C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code Open a version browser for a result . Didn ' t I have a better version of this ? C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code Open a version browser for a result . Didn ' t I have a better version of this ? 1 W EEK P ASSES C ODE G ATHERING T OOLS Demo Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code Open a version browser for a result . Didn ' t I have a better version of this ? C ODE G ATHERING T OOLS Demo Open a version browser for a result . Task 3 : Cleaning Notebook What code can I get rid of ? Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code C ODE G ATHERING T OOLS Demo Task 3 : Cleaning Notebook What code can I get rid of ? . . . Request cell subset that produced the result . Open a version browser for a result . Task 2 : Comparing Versions Request cell subset that produced the result . Task 1 : Recovering Code C ODE G ATHERING T OOLS Demo Task 1 : Recovering Code Task 2 : Comparing Versions Request cell subset that produced the result . Open a version browser for a result . Task 3 : Cleaning Notebook . . . Request cell subset that produced the result . How can tools help analysts manage messes in their notebooks ? Post - Hoc Mess Management Variolite , CHI ' 17 Helping analysts clean and navigate their code whether or not they adopted a strategy to version or organize their code . Managing Messes in Computational Notebooks How can tools help analysts find , recover , and compare code in messy notebooks ? C ODE G ATHERING T OOLS [ 2 ] Implementation [ * ] Qualitative usability study [ ] How messes happen [ 1 ] Tools in context [ 3 ] Implementation : Slicing Notebooks [ 10 ] [ 11 ] [ 1 ] [ 2 ] [ 3 ] [ 12 ] Notebook 1 some cells missing , some cells out - of - order versioned results cleaned , ordered notebooks [ ] [ ] [ ] [ ] ? Implementation : Slicing Notebooks [ 10 ] [ 11 ] [ 1 ] [ 2 ] [ 3 ] [ 12 ] Notebook Execution Log · · · [ 1 ] [ 6 ] [ 7 ] [ 10 ] [ 11 ] [ 12 ] · · · e x e c u t i o n t i m e 1 2 some cells missing , some cells out - of - order all cells present , in - order Implementation : Slicing Notebooks [ 10 ] [ 11 ] [ 1 ] [ 2 ] [ 3 ] [ 12 ] Notebook Execution Log · · · [ 1 ] [ 6 ] [ 7 ] [ 10 ] [ 11 ] [ 12 ] · · · e x e c u t i o n t i m e 1 2 some cells missing , some cells out - of - order all cells present , in - order Program Slices [ Weiser ' 81 ] Implementation : Slicing Notebooks [ 10 ] [ 11 ] [ 1 ] [ 2 ] [ 3 ] [ 12 ] Notebook Execution Log · · · [ 1 ] [ 6 ] [ 7 ] [ 10 ] [ 11 ] [ 12 ] · · · e x e c u t i o n t i m e 1 2 3 some cells missing , some cells out - of - order all cells present , in - order Program Slices [ Weiser ' 81 ] Implementation : Slicing Notebooks cleaned , ordered notebooks ( preserve cell boundaries and outputs ) [ 10 ] [ 11 ] [ 1 ] [ 2 ] [ 3 ] [ 12 ] Notebook Execution Log · · · [ 1 ] [ 6 ] [ 7 ] [ 10 ] [ 11 ] [ 12 ] · · · e x e c u t i o n t i m e which can be used to make . . . versioned results ( slice all cell versions ) 1 2 3 [ ] [ ] [ ] [ ] some cells missing , some cells out - of - order all cells present , in - order Cleaning and Exploring Interactions for Untangling Messy History in a Computational Notebook Kery et al . , VL / HCC ' 18 Towards Effective Foraging by Data Scientists to Find Past Analysis Choices Kery et al . , CHI ' 19 output recipes artifact explorer cell version diffs tabbed browsing of cell versions cell folding Aiding Collaborative Reuse of Computational Notebooks with Annotated Cell Folding Rule et al . , CSCW ' 18 Design and Use of Computational Notebooks Rule , Ph . D . Thesis , ' 18 Messy Notebooks A Sample of Recent Research Evaluating Code Gathering Tools Q1 . What is the meaning of " cleaning " ? Q2 . How do analysts use code gathering tools during exploratory data analysis ? A Qualitative Study of Gathering Participants : N = 12 professional data analysts Cleaning Task × 2 : Clean a computational notebook , with and without code gathering tools . Exploration : Rank movies in from a movies dataset . Use code gathering tools as you wish . " I picked a plot that looked interesting and , if you think of a dependency tree of cells , walked backwards and removed everything that wasn’t necessary . " Q1 . The Meaning of " Cleaning " Picking a subset of cells [ P1 - P12 ] . . . and removing the rest [ P8 , P10 - 12 ] . . . . And many additional stages : writing documentation polishing visualizations merging cells restructuring code integrating with version control [ P1 , P5 , P7 , P10 , P11 ] [ P1 , P6 ] [ P3 , P4 , P6 , P12 ] [ P7 ] [ P11 ] Q2 . How do analysts use code gathering tools during exploratory data analysis ? Gathering to a notebook Highlighting dependencies Version browser 0 3 6 9 12 # participants Very useful Somewhat useful Not useful No basis to answer Participants described gathering to a notebook as " beautiful " and " amazing " : it " hits the nail on the head . " " Finishing moves " Some Observed Uses of Gathering Tools Creating personal references Lightweight branching Gathering for multiple audiences x Takeaways from Study Q1 . Gathering covers an important yet incomplete set of notebook cleaning tasks . Q2 . Code gathering tools can be picked up quickly and readily applied to new use cases . $ jupyter labextension install nbgather Contributions encouraged : github . com / Microsoft / gather