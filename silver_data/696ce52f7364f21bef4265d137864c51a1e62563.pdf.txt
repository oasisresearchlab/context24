a r X i v : 0907 . 1293v1 [ phy s i c s . s o c - ph ] 9 J u l 2009 Higher - order distributions and nongrowing complex networks without multiple connections Tomas Hruz Institute of Theoretical Computer Science , ETH Z¨urich , Universit¨atstrasse 6 , 8092 Z¨urich , Switzerland Michal Natora Department of Software Engineering and Theoretical Computer Science , Berlin Institute of Technology , Strasse des 17 Juni 135 , 10623 Berlin , Germany Madhuresh Agrawal Department of Computer Science and Engineering , Indian Institute of Technology Kanpur , Kanpur 208016 , Utter Pradesh , India ( Dated : July 10 , 2009 ) We study stochastic processes that generate non - growing complex networks without self - loops and multiple edges ( simple graphs ) . The work concentrates on understanding and formulation of constraints which keep the rewiring stochastic processes within the class of simple graphs . To formulate these constraints a new concept of wedge distribution ( paths of length 2 ) is introduced and its relation to degree - degree correlation is studied . The analysis shows that the constraints , together with edge selection rules , do not even allow to formulate a closed master equation in the general case . We also introduce a particular stochastic process which does not contain edge selection rules , but which , we believe , can provide some insight into the complexities of simple graphs . PACS numbers : 89 . 75 . Hc , 89 . 75 . Fb , 05 . 65 . + b I . INTRODUCTION Growth processes account for some phenomena observed in real networks and they have been studied in many diﬀerent scenarios ( for survey see [ 2 , 4 , 14 ] ) . Recently , more complex growth phenomena with node addition and / or deletion are studied in [ 1 ] , [ 17 ] and [ 12 ] . However , there are also many ex - amples of networks , mainly in biology ( see [ 16 ] and associated references ) , in which a complex - and not classically random as in [ 15 ] - topology is emerging but no growth process occurs . Instead of growth , one can observe a self - organizing stochas - tic process which moves some network connections to diﬀerent nodes . Connections in these networks can also be dropped or created but the number of edges stays statistically bounded within a given interval . Technological networks like the In - ternet , once saturated in terms of size , also continue to un - dergo stochastic changes in structure due to various types of reorganization . Such processes , generally referred to as ”non - growing” or ”equilibrium networks” , constitute an important class of complex network dynamics and have been studied within the framework of network statistical mechanics in [ 4 ] and [ 8 ] . Although the dynamic behavior of non - growing networks has been studied in some detail , one aspect remains elusive : to date , the general theory allows multiple edges between nodes and self - loops connecting nodes to itself . Yet in most real networks there are no instances in which self - loops or multiple edges would provide a meaningful model of existing phenomena . It would therefore be beneﬁcial to create mod - els that stay within the class of simple graphs ( no self - loops and multiple edges ) . For example in [ 4 ] , a large collection of real networks and their parameters is summarized , however in none of them multiple edges or self - loops would consti - tute a reasonable modeling feature . Even in the cases where multiple edges do exist ( as for example in Internet routing network with backup links between the routers ) it would be more useful to introduce an edge capacity as a model than to introduce multiple edges . The experience from modeling biological metabolic networks also shows that biologists are more interested in being able to quantify the amounts of the metabolites through an edge capacity than in a possibility of having more edges between the nodes . Therefore , if more ac - curate models of real complex networks are needed we have to understand how to model the constraints which would keep the network without multiple edges and self - loops . So far the methods used to approach this open problem [ 5 ] have had three basic thrusts : ( i ) Under certain conditions , asymptotic behavior in size and in time produces networks that are virtually free of self - loops and multiple connections [ 4 ] ( i . e . very large networks will not develop many self - loops and multiple edges ) . However , in the case of medium size networks which do not grow over time , or in which the stochastic process persists for extremely long time , this principle no longer applies in the same way and would not explain the structural complexity characteristic of this class of simple graphs . ( ii ) Speciﬁc constraints are applied to the processes and ini - tial conditions as in [ 9 , 16 ] . ( iii ) Steady state asymptotic features of processes for simple graphs are studied as in [ 5 ] . This approach provides an in - sight into the asymptotic behavior but if the states outside of an equilibrium are involved ( transient phenomena in time do - main ) or the network is not suﬃciently large , a more detailed description is needed . In this article we introduce another line of thinking , where we study how the constraints , which keep the network without multiple edges and self - loops can be analytically formulated . Our arguments fall into the following parts : ( i ) The work concentrates on a basic process ( hereinafter Sim - ple Edge Selection Process or S - ESP ) in which an edge is ran - domly chosen and rewired to a preferentially chosen vertex . The process is well established and was studied in the network 2 community ( e . g . [ 4 ] ) . It seems plausible to take this process as a basic building element of a non - growing network theory as it is the simplest imaginable process that goes beyond classical random graphs in terms of the process complexity . However , the S - ESP process does not ensure that the graph remains within the class of simple graphs . To overcome this modeling problem a simple modiﬁcation is introduced , that precludes formation of multiple edges and self - loops . The modiﬁed pro - cess is denoted with SG - ESP ( Simple Graph Edge Selection Process ) . ( ii ) We study how to describe analytically the constraints which preserve the simple graph property for the SG - ESP process . To express these constraints more complex distribu - tions than the degree distribution P ( k ) are needed . Namely , we introduce a new quantity P ( k , k ′ , k ′′ ) called wedge distri - bution , which describes the distribution of wedges ( paths of length 2 , see also Figure 3 ) , where the end nodes have de - gree k , k ′′ and the middle node has degree k ′ . To be able to formulate the master equation of the SG - ESP process it is also necessary to study in detail the relations between P ( k ) , P ( k , k ′ ) and P ( k , k ′ , k ′′ ) , where P ( k , k ′ ) provides information how the edges with degree k on one side and the degree k ′ on the other side are distributed . The quantity P ( k , k ′ ) is often named ”degree - degree correlation” , however as the analysis shows , to understand the SG - ESP process we would also need distributions of more complex objects than edges , and in that case a terminology using ”degree - degree” terms would not be of advantage . Therefore , we stick to the terminology where the distributions are named according to the objects they de - scribe . ( iii ) Usage of the edge distribution P ( k , k ′ ) , the wedge distri - bution P ( k , k ′ , k ′′ ) and the relations between them allows to formulate the master equation for SG - ESP . A master equation is a phenomenological equation that describes the dynamics of a certain quantity in a stochastic process . In the case of complex networks , the basic quantity described with master equations is the degree distribution . However , for the SG - ESP process the equation is not closed i . e . contains quantities that would need more equations to be suﬃciently determined . The source of the problems is the edge selection rule together with simple graph constraints . To gain an insight into this complexity we propose to study a certain class of approxi - mations to the SG - ESP process which replaces edge selection with vertex selection rules and the edge - rewiring rules with the deletion and creation of edges . As a concrete instance of this class we deﬁne a process called VADE ( Vertex Based Addition and Deletion of Edges ) and provide experimental evidence that it can approximate SG - ESP in a certain pa - rameter range . This approximation by no means provides a solution to the problem of simple graph constraints , but it shows one possible direction how to understand more about the structure of the SG - ESP process . It is also interesting that the degree distribution master equation is not enough to describe the VADE process , but instead an equation for the edge distribution fully captures its behavior . In that sense VADE lies between classical random graphs and the SG - ESP process . ( iv ) We introduce a systematic method to derive master equa - tions for complex processes , where many diﬀerent conﬁgura - tion cases can make the derivation error prone or very diﬃcult . The method allows us to derive the master equation for the VADE process in a very eﬃcient way . However , even if the equation is solvable in principle , its nonlinear character and complexity would need new methods to provide an insight into its solutions . The paper is organized as follows : we start with an anal - ysis of a well known S - ESP process [ 4 ] ; then we study joint distributions of edges and wedges ; this leads us to section II E where we develop a master equation for the SG - ESP process . As an attempt to provide a deeper understanding into the structure of SG - ESP we introduce an approximation process called VADE in section III . The VADE process is simpler than SG - ESP as its master equation shows , and the simu - lation results suggest that for some parameter ranges it can approximate SG - ESP very well . II . NETWORK EVOLUTION WITH SIMPLE GRAPH CONSTRAINTS Suppose as a starting point a simple graph G ( V , E ) with edge set E , | E | = L and vertex set V , | V | = N . We de - note with N ( k ) the number of nodes having degree k , and then degree distribution denoted as P ( k ) can be expressed as P ( k ) = N ( k ) / N . The averaging of a quantity X is denoted with h X i or with ¯ X . Speciﬁcally , the average degree of the network is denoted with ¯ k , and it equals ¯ k = 2 L / N . In the cases where we consider changes of the basic quantities like P ( k ) or N ( k ) over time , we add the parameter t as in N ( k , t ) or P ( k , t ) . In the next section we study the S - ESP process and we in - troduce a systematic method how to derive a master equation for processes like S - ESP . This method is also used in the fol - lowing sections to derive master equations for more complex processes . A . Simple Edge Selection Process The Simple Edge Selection Process ( S - ESP ) is deﬁned by the following steps that are supposed to be repeated in each discrete time unit t ( see Fig . 1 ) : Process 1 ( S - ESP ) 1 . An edge , called E i , is selected uniformly at random . 2 . An end vertex , called V i , of E i is selected uniformly at random . The other end vertex will be called V j . 3 . A vertex , called V l , is selected with a probability pro - portional to f ( k ) i . e . with probability f ( k ) N h f i where k is the degree of V l and h f i is the mean value of f , h f i ≡ P s f ( s ) P ( s ) . 4 . The edge E i is rewired from V i to V l i . e . the edge E i between V i and V j ) is deleted and a new edge between V l and V j is created . The process keeps the number of nodes and edges in the network constant , and the function f ( k ) models preferen - tial attachment . Preferential attachment is a concept stud - ied in much detail ( see for example [ 2 ] ) that aims at mod - eling how the agents ( processes ) in complex networks would choose / search an object on which they want to operate . For example in the complex network of web pages and links , if a web page is updated , the author is often providing links ( edges ) to other web pages . The links are going to pages ( nodes ) which are known to the author and these are the pages 3 FIG . 1 : ( color online ) Illustration of the S - ESP process . The process selects a random edge and rewires it to a node which was preferentially selected . A detailed explanation of prefer - ential selection and the process deﬁnition is provided in Sec - tion II . The rewiring is unconditional , this means that there is no test of the connectivity state between V l and V j . During the rewiring operation the following three cases can occur : In the case A there is no edge between the node V l and the node V j , therefore the process does not create a multiple edge or a self loop and it will keep the simple graph property . In the case B there is already an edge between V l and V j , and the process adds another edge between the nodes . In the last case C , if V l = V j the process creates a self - loop . having already many links pointing to them . In this case , the choice where to link is modeled choosing the function f ( k ) as f ( k ) = k , i . e . the nodes in step 3 of the S - ESP process are selected with higher probability if they have higher degree . The S - ESP process captures some aspects , like preferential attachment , of processes in real networks , however , this pro - cess generates multiple connections and self - loops , which are rarely observed in real networks . Multiple connections are created , because the edge is rewired irrespective of already existing connections between V j and V l . On the other hand , self - loops emerge when vertex V l is the same vertex as V j . To derive the master equation describing the dynamics of the degree distribution for the process above we start with a derivation of the probability term expressing the probability that V i is of degree k ′ and that V l is of degree k ′′′ . The master equation can be constructed parameterizing this term with various values of k ′ and k ′′′ which express all possible changes in degree of vertices touched by the process step . Selecting uniformly at random an edge and then selecting uniformly at random an end vertex of this edge is equal to se - lecting a vertex linearly preferentially [ 4 ] i . e . with preference function f ( k ) = k . Therefore , the probability that vertex V i has degree k ′ is given by Prob [ deg ( V i ) = k ′ ] = k ′ N ¯ kN ( k ′ ) ( 1 ) Degree of V i Degree of V l Change in N ( k ) k + 1 k − 1 + 2 k k − 2 k + 1 k ′′′ 6 = { k − 1 , k } + 1 k ′ 6 = { k + 1 , k } k − 1 + 1 k k ′′′ 6 = { k − 1 , k } − 1 k ′ 6 = { k + 1 , k } k − 1 TABLE I : The table provides a list of all cases at time t that lead to a change in the quantity N ( k , t ) at time t + 1 . The minimal conﬁguration describing changes in N ( k , t ) for the S - ESP process is shown in Figure 1 . The probability that the conﬁguration changes is equal to k ′ N ¯ k N ( k ′ ) f ( k ′′′ ) N h f i N ( k ′′′ ) as described in the text . The table is used to derive the master equation for the S - ESP ( and SG - ESP ) process . The mas - ter equation is generated using every row in the table exactly once to parameterize the probability conﬁguration term above which describes the probability that the quantity N ( k , t ) will change . If the degree parameter column contains a set of de - gree values ( as for example in the third row , second column ) a summation over this set must be used . The third column con - tains a multiplier expressing how much the quantity N ( k , t ) would change . Analogically , the probability that V l is of degree k ′′′ is given by f ( k ′′′ ) N h f i N ( k ′′′ ) . Since these two selections are independent of each other and since the order of selection is strictly deter - mined , the probability that V i is of degree k ′ and that V l is of degree k ′′′ is Prob [ deg ( V i ) = k ′ and deg ( V l ) = k ′′′ ] = k ′ N ¯ k N ( k ′ ) f ( k ′′′ ) N h f i N ( k ′′′ ) . ( 2 ) To compute the number N ( k , t + 1 ) of vertices having degree k at time t + 1 one has to consider the number of vertices N ( k , t ) having degree k already at time t minus the number of all vertices that changed their degree from k to any other value k ′ 6 = k , plus the number of all vertices that changed their degree from any value k ′ 6 = k to k . A list of all cases in which the quantity N ( k , t ) changes its value is provided in Table I . For example , the ﬁrst row in Table I means that if vertex V i had degree k + 1 and vertex V l had degree k − 1 at time t , both vertices will have degree k at time t + 1 . Thus , compared to the situation at time t there are two vertices more with degree k at time t + 1 and this is expressed in the third column of the table . Now every row of Table I is used to generate one term in the master equation as a parametrized version of the basic probability term ( 2 ) . If the degree parameters in the ﬁrst two columns specify a set of degree values k , then a summa - tion over this set must be used . After having calculated the probability of each case multiplied by its eﬀect ( the third row of Table I ) , we can write down the master equation for the number of vertices with degree k at time t + 1 : 4 FIG . 2 : ( color online ) Illustration of the SG - ESP process . The process selects a random edge and rewires it to a node which was preferentially selected . A detailed explanation of preferential selection and the process deﬁnition is provided in Section II . In contrast to S - ESP , according to the SG - ESP process the rewiring occurs only if V l 6 = V j and if V l is not directly connected by an edge to V j . The process veriﬁes ﬁrst if there is an edge between V l and V j and if there is no one ( case A ) the rewiring takes place , otherwise ( cases B and C ) the process leaves the original edge in place . N ( k , t + 1 ) = N ( k , t ) + 2 × k + 1 N ¯ k N ( k + 1 , t ) f ( k − 1 ) N h f i N ( k − 1 , t ) − 2 × k N ¯ k N ( k , t ) f ( k ) N h f i N ( k , t ) + 1 × X k ′′′ , k ′′′ 6 = { k − 1 , k } k + 1 N ¯ k N ( k + 1 , t ) f ( k ′′′ ) N h f i N ( k ′′′ , t ) + . . . ( 3 ) Writing down all cases and using the fact that P s f ( s ) N ( s ) = h f i N the master equation of the S - ESP pro - cess [ 4 ] is obtained : N ( k , t + 1 ) = N ( k , t ) − f ( k ) N h f i N ( k , t ) + f ( k − 1 ) N h f i N ( k − 1 , t ) − k N ¯ k N ( k , t ) + k + 1 N ¯ k N ( k + 1 , t ) ( 4 ) Note that in the above derivation the probability that one selects twice the same vertex , i . e . V l = V i , is not taken into account , since this probability is small . Nevertheless , the re - sulting master equation 4 is not fully correct . This issue is addressed in [ 6 ] . FIG . 3 : ( color online ) Wedges are paths of length 2 . The graph in this example contains the following 5 wedges : ( V 3 , V 1 , V 2 ) , ( V 1 , V 2 , V 3 ) , ( V 2 , V 3 , V 1 ) , ( V 1 , V 3 , V 4 ) , ( V 2 , V 3 , V 4 ) . The wedge distribution W ( k , k ′ , k ′′ ) is deﬁned in section IIC . In this example the wedge distribution is W ( 1 , 3 , 2 ) = 2 , W ( 2 , 3 , 2 ) = 1 , W ( 2 , 2 , 3 ) = 2 . B . Simple Graph Edge Selection Process A natural extension of the S - ESP process , which would keep the process within the class of simple graphs is to intro - duce a connectivity test whether there is an edge between the target nodes , and if one is detected , the rewiring would not take place . The process called Simple Graph Edge Selection Process ( SG - ESP ) can be deﬁned as follows ( see also Fig . 2 ) : Process 2 ( SG - ESP ) The following steps are repeated on a graph G in each discrete time unit t . 1 . An edge , called E i , is selected uniformly at random . 2 . An end vertex , called V i , of E i is selected uniformly at random . The other end vertex will be called V j . 3 . A vertex , called V l , is selected with a probability propor - tional to f ( k ) as in step 3 of the S - ESP process . ( a ) Check if V l is an end vertex of E i or if V l is directly connected to V j . If so , skip the next step . 4 . The edge E i is rewired from V i to V l . The only diﬀerence to the S - ESP process is the step 3a . However , to express analytically what this means , one has to know when the condition in step 3a is ( not ) satisﬁed . This means to know the probability that a vertex V l is ( not ) di - rectly connected to an edge E i , in other words V l is ( not ) a direct neighbor of V j . One of the main goals of the present paper is to show that we need to study not only edge distributions but also distri - butions of higher order objects ( wedges ) to understand the SG - ESP process in the class of simple graphs . In the next sections we investigate the relations of these distributions and show that they are necessary to analytically express the con - dition in step 3a of the SG - ESP process . C . Higher order distributions We use the term higher order distribution generally to denote a distribution of more complex objects than nodes . Apart from the degree distribution P ( k ) , the ﬁrst higher order distribution , which is necessary for further analysis , describes a distribution of edges and is deﬁned as P ( k , k ′ ) = ( 12 L ( k , k ′ ) L , if k 6 = k ′ , L ( k , k ′ ) L , if k = k ′ . ( 5 ) 5 FIG . 4 : ( color online ) Two non - isomorphic graphs G 1 and G 2 with N = 5 , L = 5 , where the node degrees are shown . The graphs have the same degree distribution P ( k ) = ( P ( 1 ) = 15 , P ( 2 ) = 35 , P ( 3 ) = 15 ) but diﬀerent edge distri - butions P G 1 ( k , k ′ ) = ( P ( 1 , 2 ) = 110 , P ( 1 , 3 ) = 0 , P ( 2 , 2 ) = 15 , P ( 2 , 3 ) = 310 ) and P G 2 ( k , k ′ ) = ( P ( 1 , 2 ) = 0 , P ( 1 , 3 ) = 110 , P ( 2 , 2 ) = 25 , P ( 2 , 3 ) = 210 ) . The example shows that in general the degree distribution P ( k ) can not uniquely deter - mine the edge distribution P ( k , k ′ ) , but P ( k , k ′ ) determines P ( k ) according to equation 6 . where L ( k , k ′ ) denotes the number of edges in the network whose end vertices have degree k and k ′ , and L denotes the to - tal number of edges in the network . The distribution P ( k , k ′ ) does not describe directly the distribution L ( k , k ′ ) L but there are two important reasons why the above form of the edge distribution is necessary : a ) P ( k , k ′ ) can be interpreted as a probability that a vertex with degree k has a neighbor with the degree k ′ , and this form can be directly used for the anal - ysis of the SG - ESP process ; b ) it is technically simpler to express the relation between P ( k , k ′ ) and P ( k ) as between L ( k , k ′ ) L and P ( k ) . Moreover , if needed , L ( k , k ′ ) L can be easily computed from P ( k , k ′ ) . The edge distribution P ( k , k ′ ) is symmetric , P ( k , k ′ ) = P ( k ′ , k ) , because in the deﬁnition of L ( k , k ′ ) we cannot distinguish which end vertex of the edge has degree k resp . k ′ . It was reported [ 3 ] , that P ( k ) = ¯ k k X k ′ P ( k , k ′ ) ( 6 ) and that for uncorrelated networks the edge distri - bution factorizes , namely P ( k , k ′ ) = ˜ P L ( k ) ˜ P L ( k ′ ) where ˜ P L ( k ) = kP ( k ) ¯ k . The next component needed for analysis of the SG - ESP process is a distribution describing probabilities of higher or - der objects called wedges . A wedge is an object formed by three vertices which are connected together by two edges ( a path of length 2 , see Fig . 3 ) . Similarly as for edges , we deﬁne the wedge distribution as : P ( k , k ′ , k ′′ ) = ( 12 W ( k , k ′ , k ′′ ) W , if k 6 = k ′′ , W ( k , k ′ , k ′′ ) W , if k = k ′′ . ( 7 ) where W ( k , k ′ , k ′′ ) is the number of wedges with the mid - dle node having degree k ′ and one of the end nodes with degree k and the other with the degree k ′′ . The number of all wedges in the network is denoted with W . The wedge distri - bution is symmetric in both outer arguments , P ( k , k ′ , k ′′ ) = P ( k ′′ , k ′ , k ) , but in general P ( k , k ′ , k ′′ ) 6 = P ( k ′ , k , k ′′ ) and P ( k , k ′ , k ′′ ) 6 = P ( k , k ′′ , k ′ ) . A vertex of degree k is a middle vertex of ` k 2 ´ = k 2 2 − k 2 wedges . Therefore the total number of wedges is fully de - termined by the degree distribution P ( k ) and is given by FIG . 5 : Two non - isomorphic graphs G 1 and G 2 with N = 10 , L = 11 and W = 15 , where the nodes are labeled with the degrees . The graphs have the same edge distribution P ( k , k ′ ) = ( P ( 1 , 2 ) = 122 , P ( 2 , 2 ) = 211 , P ( 2 , 3 ) = 722 , P ( 3 , 3 ) = 111 ) but diﬀerent wedge dis - tributions P G 1 ( k , k ′ , k ′′ ) = ( . . . , P ( 2 , 2 , 3 ) = 110 , . . . ) and P G 2 ( k , k ′ , k ′′ ) = ( . . . , P ( 2 , 2 , 3 ) = 215 , . . . ) . In general , an edge distribution can not determine the wedge distribution of a graph , but P ( k , k ′ , k ′′ ) determines P ( k , k ′ ) according to equa - tion 8 . W = √ 2 L 3 C 0 , where C 0 = ¯ kN “ h k 2 i− ¯ k ¯ k 2 ” 2 . It can be shown [ 3 ] , that C 0 equals to the clustering coeﬃcient in the case of an uncorrelated network . To derive the relation between the edge and the wedge dis - tribution we have to consider that k + k ′ − 2 wedges pass through an edge of degree ( k , k ′ ) . Further , considering how many edges a wedge can contribute to and using correct nor - malization , the following relation for k , k ′ > 1 is obtained : P ( k , k ′ ) = √ 2 LC 0 P k ′′ P ( k , k ′ , k ′′ ) + P ( k ′′ , k , k ′ ) k + k ′ − 2 ( 8 ) In a diﬀerent context and diﬀerently deﬁned , the distri - butions of more complex objects have also been studied in [ 7 , 10 , 18 ] . Another conﬁrmation of the importance of higher order distributions comes from the studies of complex inter - connection patterns called network motifs . As the authors of [ 11 ] reported , network motifs observed in the real networks clearly distinguish these networks from artiﬁcial randomly generated instances . D . Connection probabilities The wedge distribution introduced in the previous section can be used to express various connectivity probabilities be - tween nodes , edges and wedges . The connection probabilities in turn allow to describe the simple graph constraints . Assume an arbitrary vertex of degree k and an arbitrary edge of degree k ′ , k ′′ . If k is diﬀerent from k ′ and k ′′ , the vertex cannot be part of an edge with degree k ′ , k ′′ . In this case , we can consider a bipartite subgraph , where one parti - tion is represented by N ( k ) ( all vertices of degree k ) and the other partition is represented by all vertices of the edge set L ( k ′ , k ′′ ) . In this subgraph there are N ( k ) L ( k ′ , k ′′ ) possible edges , but only W ( k , k ′ , k ′′ ) of them are present . Therefore , the probability that an arbitrary vertex of degree k and an arbitrary edge of degree k ′ , k ′′ are part of the same wedge is W ( k , k ′ , k ′′ ) / ( N ( k ) L ( k ′ , k ′′ ) ) . Similar considerations can also be used for the cases k = k ′ and k = k ′′ , therefore the proba - bility P k , ( k ′ , k ′′ ) that a vertex of degree k is directly connected to a vertex of degree k ′ which is a part of an edge of degree k ′ , k ′′ is given by 6 P k , ( k ′ , k ′′ ) = 2 W · P ( k , k ′ , k ′′ ) ( N ( k ) − δ k , k ′ − δ k , k ′′ ) L ( k ′ , k ′′ ) ( 9 ) where δ i , j denotes the Kronecker delta . Analogous reason - ing for two distinct vertices leads to the probability that a vertex of degree k is directly connected to vertex of degree k ′ . This probability will be denoted as P k , k ′ and is given by P k , k ′ = 2 L · P ( k , k ′ ) ( N ( k ) − δ k , k ′ ) N ( k ′ ) . ( 10 ) If k 6 = k ′ then the edges L ( k , k ′ ) form a bipartite subgraph with the partitions N ( k ) and N ( k ′ ) . Therefore , an arbitrary vertex of degree k participates in L ( k , k ′ ) / N ( k ) edges of de - gree k , k ′ . In general , the number of edges of degree k , k ′ , which an arbitrary vertex of degree k participates in , is de - noted as T ( k , k ′ ) = ¯ kP ( k , k ′ ) P ( k ) . ( 11 ) In an analogous way , the number of wedges of degree k , k ′ , k ′′ which an arbitrary edge of degree k , k ′ participates in is √ 2 LC 0 2 P ( k , k ′ , k ′′ ) ( 2 − δ k , k ′ ) P ( k , k ′ ) . ( 12 ) This quantity can be also interpreted as the number of edges of degree k ′ , k ′′ that share the vertex of degree k ′ with another edge of degree k , k ′ . The wedge distribution is useful in many other ways to express the probabilities of connectivity resp . neighborhood relations . For example , the probability that a vertex which is a nearest neighbor of an edge of degree k , k ′ has degree k ′′ is given by P ( k ′′ | k , k ′ ) = P ( k ′′ , k , k ′ ) P k ′′ P ( k ′′ , k , k ′ ) . The wedge distribution can also be useful in obtaining more accurate estimations of the local clustering coeﬃcient com - pared to the situation when only the edge distribution is used ( see [ 13 ] for further results concerning the wedge distribution ) . E . Master equation for SG - ESP To derive the master equation of the SG - ESP process we follow the method introduced at the beginning of this section for the S - ESP process . First , we specify a general probabil - ity term describing , for the given conﬁguration of nodes ( see Fig . 2 ) , the probability that the conﬁguration change happens i . e . that the edge will be rewired . A list of all possible cases leading to a change in the quantity N ( k , t ) is the same as for S - ESP ( see Table I ) . Three probabilities have to be considered in order to evaluate the overall probability of the conﬁguration change . Firstly , as discussed in the previous sections , P ( k ′ , k ′′ ) is the probability that vertex V i in Fig . 2 is of degree k ′ and it has a direct neighbor vertex V j of degree k ′′ . Secondly , f ( k ′′′ ) N h f ( k ) i ( N ( k ′′′ ) − δ k ′′′ , k ′ − δ k ′′′ , k ′′ ) is the probability that ver - tex V l , which is selected with a probability proportional to f ( k ) , is of degree k ′′′ and is not a part of the edge E i . The last probability to consider is the probability that there is no edge between V l and V j . It is equal to ( 1 − P k ′′′ , ( k ′′ , k ′ ) ) as discussed above . Putting all together , the probability that the rewiring occurs is given by P ( k ′ , k ′′ ) f ( k ′′′ ) N h f ( k ) i ( N ( k ′′′ ) − δ k ′′′ , k ′ − δ k ′′′ , k ′′ ) × ( 1 − P k ′′′ , ( k ′′ , k ′ ) ) . ( 13 ) The enumeration of all possible contributions to N ( k , t + 1 ) is identical to the S - ESP process , so after summarizing all of them , we obtain the following master equation for the degree distribution . In the equation we suppose that the quanti - ties ( as N ( k ) , P ( k ′ , k ′′ ) and P k , ( k ′ , k ′′ ) ) related to some object distribution are functions of discrete time t , however in the following text we omit the time variable t to simplify the no - tation in cases where its presence is clear from the context . N ( k , t + 1 ) = N ( k ) − X k ′ , k ′′ P ( k ′ , k ′′ ) f ( k ) ( N ( k ) − δ k , k ′ − δ k , k ′′ ) N h f i ( 1 − P k , ( k ′ , k ′′ ) ) + X k ′ , k ′′ P ( k ′ , k ′′ ) f ( k − 1 ) ( N ( k − 1 ) − δ k − 1 , k ′ − δ k − 1 , k ′′ ) N h f i ( 1 − P k − 1 , ( k ′ , k ′′ ) ) − X k ′ , k ′′′ P ( k ′ , k ) f ( k ′′′ ) ( N ( k ′′′ ) − δ k ′′′ , k ′ − δ k ′′′ , k ) N h f i ( 1 − P k ′′′ , ( k ′ , k ) ) + X k ′ , k ′′′ P ( k ′ , k + 1 ) f ( k ′′′ ) ( N ( k ′′′ ) − δ k ′′′ , k ′ − δ k ′′′ , k + 1 ) N h f i ( 1 − P k ′′′ , ( k ′ , k + 1 ) ) . ( 14 ) To see the relation of this equation to the equation for S - ESP ( 4 ) all terms in the equation above can be expanded in a particular way . For example , after expanding all factors of the last term on the right - hand side of equation ( 14 ) , the term can be written as 7 Graph P ( k , k ′ ) P ( k ) P k ′ k ′ P ( k ′ , 2 ) „ 1 / 2 0 0 1 / 2 « ` ¯ k / 2 ¯ k / 4 ´ 1 „ 0 1 / 2 1 / 2 0 « ` ¯ k / 2 ¯ k / 4 ´ 1 / 2 TABLE II : This example shows that it is not possible to ex - press P k ′ f ( k ′ ) P ( k ′ , k ) by F ( f ( k ) , P ( k ) ) , where F denotes an arbitrary function . Consider the two edge distributions in the second column of the table , which describe edges with degree k , k ′ = 1 , 2 . Further assume that f ( k ) = k . Both edge distri - bution lead to the same degree distribution ( the third column ) according to equation 6 , but the expression P k ′ f ( k ′ ) P ( k ′ , 2 ) is diﬀerent . k + 1 N ¯ k N ( k + 1 ) − − X k ′ f ( k ′ ) P ( k ′ , k + 1 ) N h f i − f ( k + 1 ) ( k + 1 ) N 2 h f i ¯ k N ( k + 1 ) − − X k ′ , k ′′′ 2 W · f ( k ′′′ ) P ( k ′′′ , k ′ , k + 1 ) N h f i L ( 2 − δ k + 1 , k ′ ) ( 15 ) The other three terms of equation ( 14 ) can be written in a similar way . This form of equation ( 14 ) shows that all terms of the S - ESP process are contained in the master equation of the SG - ESP process ( the ﬁrst term in expression ( 15 ) corresponds to the last term in equation ( 4 ) etc ) . The additional terms in ( 14 ) arise from the simple graph constraint and they show how well and under which conditions the S - ESP process ap - proximates the SG - ESP process . For example , the additional terms become negligible in the limit of N ≫ 1 , WN · L ≪ 1 . This is an example of conditions under which simple networks can be treated as non - simple networks , but the equation ( 14 ) also allows more complex approximations to be investigated . The counter - examples in Figures 4 and 5 show , that in general it is not possible to obtain P ( k , k ′ , k ′′ ) from P ( k , k ′ ) or P ( k , k ′ ) from P ( k ) . One can also show by counter - example ( see table II ) that P k ′ f ( k ′ ) P ( k ′ , k ) cannot be expressed by F ( f ( k ) , P ( k ) ) , where F denotes an arbitrary function . This means that equation 14 can not be written in a self - consistent way and hence is not solvable in principle . To obtain a closed description we need to consider adding equations for higher order distributions into the system . To see what are the building blocks of SG - ESP master equa - tions for higher order distributions we consider ﬁrst the edges . In order to derive a master equation for the edge distribu - tion , all situations at time t which will contribute to L ( k , k ′ ) at time t + 1 must be enumerated . For example , if V i is of degree k + 1 we must know how many edges of degree k + 1 , k ′ participate in V i , because all these edges will lose a connection and contribute to L ( k , k ′ ) , too . However , vertex V i was not FIG . 6 : ( color online ) The randomly selected edge E i touches the edges ( red colored ) that share a common end - vertex with E i . Assuming that V i is of degree k and V j is of degree k ′ , the wedge distribution P ( k ′ , k , k ′′ ) is needed in order to know how many edges of degree k , k ′′ share V i as a common end - vertex with E i , see expression 12 . selected independently ( like vertex V l ) , but it is an end - vertex of the edge E i ( see Fig . 6 ) . Hence , the number of edges of a certain degree which participate in vertex V i is given by expression 12 . This expression is proportional to the wedge distribution P ( k , k ′ , k ′′ ) . Therefore , the wedge distribution is needed to derive the master equation for the edge distri - bution . Moreover , when trying to derive master equations for wedges , the problem persists : In order to know how many wedges of a certain degree share vertex V i , which is again part of an edge with prescribed degrees , we need the knowledge of a distribution which is of a higher order than that for wedges . The analysis above shows that to fully understand the be - havior of the SG - ESP process , a whole hierarchy of objects and their distributions must be involved . How far this hier - archy above the wedge distribution is reaching would be very diﬃcult to know , however one conclusion is that the main source of the problems is the edge selection Step 1 of the SG - ESP process and the simple graph constraint . A possibility how to understand more about this complex phenomena and still have a closed description of the process is to introduce more complex vertex selection rules which would approximate the edge selection rule . III . VERTEX BASED ADDITION AND DELETION OF EDGES In this section we describe a class of processes that pre - serves the simple graph structure and that can be modeled by a single self - consistent equation . This class will be called ”VADE” , which stands for ”Vertex based Addition and Dele - tion of Edges” and it aims at approximating the edge selection rule of SG - ESP with vertex selection rules . The VADE pro - cess is deﬁned as Process 3 ( VADE ) The following steps are repeated on a graph G in each dis - crete time unit t . 1 . With probability q do the following : ( a ) choose a vertex V i with a probability proportional to f 1 ( k ) ; ( b ) choose a vertex V j with a probability proportional to f 2 ( k ) ; 8 Degree of V i Degree of V j Change in L ( k , k ′ ) k − 1 k − 1 + 2 T ( k − 1 , k ′ ) k − 1 6 = { k , k ′ , k − 1 , k ′ − 1 } + T ( k − 1 , k ′ ) k ′ − 1 k ′ − 1 + 2 T ( k ′ − 1 , k ) k − 1 k ′ − 1 + T ( k − 1 , k ′ ) + T ( k ′ − 1 , k ) + 1 k ′ − 1 6 = { k , k ′ , k − 1 , k ′ − 1 } + T ( k ′ − 1 , k ) k k − 2 T ( k , k ′ ) k 6 = { k , k ′ , k − 1 , k ′ − 1 } − T ( k , k ′ ) k ′ k ′ − 2 T ( k ′ , k ) k k ′ − T ( k , k ′ ) − T ( k ′ , k ) k ′ 6 = { k , k ′ , k − 1 , k ′ − 1 } − T ( k ′ , k ) k − 1 k + T ( k − 1 , k ′ ) − T ( k , k ′ ) k − 1 k ′ + T ( k − 1 , k ′ ) − T ( k ′ , k ) k ′ − 1 k + T ( k ′ − 1 , k ) − T ( k , k ′ ) k ′ − 1 k ′ + T ( k ′ − 1 , k ′ ) − T ( k ′ , k ) TABLE III : Similarly as in Table I a list of the cases at time t that will lead to a change in the quantity L ( k , k ′ ) at time t + 1 is provided . The table gives only the cases where an edge is added and where k 6 = k ′ . The cases where the edge is deleted are analogical . Cases that follow from permutation are also not listed , for example , the case where V i has degree k ′ − 1 and V j has degree k − 1 is not listed , because this case follows directly from the case at line 4 by permutation . When considering all cases for the edge addition ( also the permuted ones ) a total of 24 is found , analogically we obtain 24 cases for the edge deletion . ( c ) if V i = V j or if V i is directly connected to V j , skip the next step ; ( d ) add an edge between V i and V j . 2 . With probability 1 − q do the following : ( a ) choose a vertex V l with a probability proportional to g 1 ( k ) ; ( b ) Choose a vertex V m with a probability proportional to g 2 ( k ) ; ( c ) if V l = V m or if V l is not directly connected to V m , skip the next step ; ( d ) delete the edge between V l and V m . The VADE process is similar to the SG - ESP process in several ways . It contains preferential selection parameters ( f 1 , f 2 , g 1 , g 2 ) , which give the process the ﬂexibility to ap - proximate the edge selection rule of SG - ESP . If the parame - ter q is chosen appropriately as we discuss at the end of the simulation section , the number of edges is stable in a narrow interval approximating the constant number of edges in the SG - ESP process . The process also preserves the simple graph structure , and the preferential selection parameters can be set to generate a degree distribution which is similar to the one generated by the SG - ESP process ( see the simulation study in Section IV ) . The reason why the VADE process can be modeled by a self - consistent master equation is that all the selection rules in the VADE process are deﬁned for vertices ; in contrast to the SG - ESP process where an edge selection rule is used . Namely , the probability that two vertices are directly connected with each other requires the knowledge of P ( k , k ′ ) ( see equation 10 ) , and also only from P ( k , k ′ ) we can derive how many edges of degree k , k ′ participate in a vertex of degree k , see expression ( 11 ) . This is the reason why the dynamics of the VADE process is fully captured in a closed master equation for the edge distribution . To derive a master equation for this process the two process branches ( edge deletion and edge addition ) can be analyzed independently and their contributions can be added together . Similarly as for the SG - ESP process , the probability that ver - tex V i is of degree k i , vertex V j is of degree k j and that the conditions mentioned in the step 1c of VADE are not met is given by A ( k i , k j ) = f 1 ( k i ) f 2 ( k j ) N ( k i ) “ N ( k j ) − δ k i , k j ”“ 1 − P k i , k j ” N 2 h f 1 ih f 2 i ( 16 ) The probability that vertex V l is of degree k l , vertex V m is of degree k m and that the conditions mentioned in the step 2c of VADE are not met is given by D ( k l , k m ) = g 1 ( k i ) g 2 ( k j ) N ( k m ) “ N ( k m ) − δ k l , k m ” P k l , k m N 2 h g 1 ih g 2 i ( 17 ) After the analysis of all situations at time t which will con - tribute to L ( k , k ′ ) at time t + 1 ( there is a total of 48 such situations , see Table III ) , and after considering that A ( k , k ′ ) as well as D ( k , k ′ ) are both symmetric in k , k ′ , the master equation for the edge distribution can be written as ( again , for notational simplicity the time variable is suppressed on the right hand side ) 9 L t + 1 ( k , k ′ ) = L ( k , k ′ ) + 2 q X X " A ( k − 1 , X ) „ T ( k − 1 , k ′ ) + 1 2 δ k ′ − 1 , X « + A ( X , k ′ − 1 ) „ T ( k ′ − 1 , k ) + 1 2 δ k − 1 , X « − A ( k , X ) T ( k , k ′ ) − A ( X , k ′ ) T ( k ′ k ) # + 2 ( 1 − q ) X X " D ( k + 1 , X ) T ( k + 1 , k ′ ) + D ( X , k ′ + 1 ) T ( k ′ + 1 , k ) − D ( k , X ) „ T ( k , k ′ ) − 1 2 δ k ′ , X « − D ( X , k ′ ) „ T ( k ′ , k ) − 1 2 δ X , k « # . ( 18 ) 0 . 001 0 . 01 1 10 100 1000 10000 l n P ( k ) ln k SG - ESP S - ESP FIG . 7 : ( color online ) Simulation experiments for a network with N = 1000 , L = 2000 . The x - axis represents degree values and the y - axis the values of P ( k ) , both axes are in logarithmic scale . The processes were simulated over 2 . 10 6 iterations to the equilibrium state . The ﬁgure shows the simulation results for the S - ESP and SG - ESP processes with f ( k ) = k . To obtain the resulting graph a time averaging over 15 instances separated with 10 4 states was computed . The S - ESP process condensates and all edges are rewired to a few nodes ( ﬁnally to only one node ) as self - connections . This equation is valid for k 6 = k ′ . If k = k ′ , the summation term on the right hand side must be multiplied with the fac - tor 1 / 2 . The four terms proportional to q account for the case when an edge is added , the four terms proportional to 1 − q ac - count for the case when an edge is deleted . The terms T ( k , k ′ ) account for the edges that change their degree because they participate in one of the involved vertices , whereas the terms δ k , k ′ account directly for the edge that is added or deleted . The aim of introducing the VADE process is mainly to show that certain processes can lie in the complexity hierarchy be - tween processes described on the level of the degree distribu - tion and processes having very high description complexity as SG - ESP . VADE also illustrates , which selection rules would bring the most problems thus providing a direction where the next modeling eﬀorts could concentrate . The description of VADE is closed on the edge level and therefore deﬁnitively solvable . However , to understand more deeply the relation between SG - ESP and VADE more research would be needed to solve its complex and nonlinear master equation . 0 . 001 0 . 01 0 . 1 1 1 10 100 l n P ( k ) ln k SG - ESPVADE FIG . 8 : ( color online ) Simulation experiments illustrating the similarity between the distributions P ( k ) of VADE and SG - ESP processes . The meaning of the axes is the same as in Figure 7 and the same averaging procedure was used . The parameters for the SG - ESP process are : N = 1000 , L = 2000 and f ( k ) = k except for f ( 0 ) = 5 . The network stabilizes in an equilibrium state with a distribution near to the distribution of a scale - free network . The VADE process was simulated with the parameters : N = 1000 , q = 0 . 004 , f 1 ( k ) = k , f 1 ( 0 ) = 1000 , f 2 ( k ) = k , g 1 = 1 , g 2 = 1 . IV . SIMULATIONS To numerically support the analysis we described in the previous sections , we simulated the S - ESP , SG - ESP and VADE processes . Our experiments focus on small networks and a very long simulation time where a diﬀerence between the S - ESP and SG - ESP processes is clearly visible . In all cases we ﬁrst generated a classical random network with Pois - son distribution and average degree 4 . 0 , which was then used as initial condition for all experiments . The experimental results in Figure 7 show that in situations where the eﬀects of simple graph constraints and of ﬁnite network size cannot be neglected , S - ESP and SG - ESP behave in a very diﬀerent way . S - ESP condensates , on the contrary SG - ESP is developing a highly interconnected kernel . The experimental results for the range of parameters in Figure 7 also point to the analysis in [ 5 ] , especially in relation to the analysis of the dense network kernel . Another conclusion from the simulation experiments ( see Fig . 8 ) is that the VADE process can approximate the SG - ESP process very closely due to the ﬂexibility caused by the preferential parameters f 1 , f 2 , g 1 , g 2 . This fact opens a pos - 10 0 500 1000 1500 2000 2500 3000 3500 4000 1 . 5x10 6 1x10 6 0 . 5x10 6 0 N u m be r o f E dge s L Time t ( discrete steps ) Process VADE FIG . 9 : ( color online ) The ﬁgure shows the simulation results for the VADE process with the same parameters as in Fig - ure 8 . The x - axis represents the discrete time and the y - axis the number of edges , both axes are in linear scale . The sim - ulation experiments show that the number of edges becomes quickly stable . sibility of having new processes which have a closed master equation but which can approximate the SG - ESP process . Figure 8 shows that the VADE process generates a scale free network with very small diﬀerence to SG - ESP . In Figure 9 the number of edges for the VADE process is plotted . The experiments show that if the parameter q of VADE is correctly set the number of edges will stay stable and it will approximate the SG - ESP process . The parameter q can be estimated using the following approximation : the number of edges will stay constant on average if the probability of adding an edge between two vertices with degree k , k ′ is equal to the probability of deleting an edge between two vertices with degree k , k ′ . So one has qA ( k , k ′ ) = ( 1 − q ) D ( k , k ′ ) ⇒ q = 1 1 + A ( k , k ′ ) / D ( k , k ′ ) = 1 1 + f 1 ( k ) f 2 ( k ′ ) ( 1 − P k , k ′ ) h g 1 ih g 2 i g 1 ( k ) g 2 ( k ′ ) P k , k ′ h f 1 ih f 2 i ( 19 ) Assuming that f 1 ( k ) = g 1 ( k ) and f 2 ( k ′ ) = g 2 ( k ′ ) this equa - tion will simplify to q = P k , k ′ ≈ 2 LP ( k , k ′ ) N 2 P ( k ) P ( k ′ ) ≈ 2 L N 2 . For the last approximation step an uncorrelated network is assumed and both k and k ′ are replaced with ¯ k . For the network parameters in Fig . 8 , a value of q = 0 . 004 is obtained . This value was used during the experiments and the results are approximating the objective value L = 2000 very closely ( see Figure 9 ) . V . CONCLUSION To summarize , the analysis in Section II has shown a method how to describe the process constraining steps that keep a network evolution process in the class of simple graphs . To model these constraints we introduced a new distribu - tion that described wedges - the paths of length 2 . The re - lation between edge distribution ( degree - degree correlation ) and wedges was also studied to understand the evolution of simple graphs . A combination of such constraints with simple edge selection rules can lead to a very high complexity involv - ing several higher order distributions . How far in the distri - bution hierarchy one has to go to obtain a closed description of the SG - ESP process is not clear and it would need more re - search to understand the situation fully . The study of simple graph constraints provides further reasons why it is worth - while studying ( and measuring on real networks ) the higher order distributions as for example the wedge distribution . Up to now , the processes were deﬁned in such a way , that it was possible to formulate a closed master equation for the degree distribution . However these processes either did not respect the simple graph structure or were limited in some other way . When assuming that self - organization is the driv - ing force for the emergence of complex network structures without self - loops and multiple connections , higher order dis - tributions are key , in particular for non - growing simple net - works . The present paper opens several directions for possible re - search . Further approximations of equation 14 ( or process modes and constraints ) can provide deeper insight into the processes on simple graphs or into the parameter ranges where they can be better understood . Another possibility is to study in more detail the intermediate VADE class of processes which are more complex than classical random graphs but simpler than processes containing edge selection rules . These pro - cesses can bring more light into the immense complexity of simple graphs through approximation of edge selection rules with more complex set of vertex selection rules . Acknowledgments We would like to thank Professor Peter Widmayer who sug - gested this interesting area to us and has continually sup - ported our research , Professor Narsingh Deo and Professor Joerg Nievergelt for inspiring discussions . The authors also wish to thank the anonymous referees for their valuable com - ments in improving the manuscript , and the linguist Richard Hall for help with proof - reading . [ 1 ] M . J . Alava and S . N . Dorogovtsev . Complex networks created by aggregation . Physical Review E , 71 ( 036107 ) , 2005 . [ 2 ] R . Albert and A . - L . Barab´asi . Statistical mechanics of complex networks . Rev . Modern Phys . , 74 : 47 – 97 , 2002 . [ 3 ] S . N . Dorogovtsev . Clustering of correlated networks . Physical Review E , 69 ( 027104 ) , 2004 . [ 4 ] S . N . Dorogovtsev and J . F . F . Mendes . Evolution of 11 networks . Oxford University Press , 2003 . [ 5 ] S . N . Dorogovtsev , A . M . Povolotsky , and A . N . Samukhin . Organization of complex networks without multiple connections . arXiv . org , ( cond - mat / 0505193 ) , 2005 . [ 6 ] T . S . Evans and A . D . K . Plato . Exact solution for the time evolution of network rewiring models . Physical Re - view E , 75 ( 056101 ) , 2007 . [ 7 ] S . Itzkovitz , R . Milo , N . Kashtan , G . Ziv , and U . Alon . Subgraphs in random networks . Physical Review E , 68 ( 026127 ) , 2003 . [ 8 ] J . Ohkubo and T . Horiguchi . Complex networks by non - growing model with preferential rewiring process . Jour - nal of the Physical Society of Japan , 74 : 1334 – 1340 , 2005 . [ 9 ] B . J . Kim , A . Trusina , P . Minnhagen , and K . Sneppen . Self organized scale - free networks from merging and re - generation . The European Physical Journal B , 43 ( 3 ) , 2005 . [ 10 ] P . Mahadevan , D . Krioukov , K . Fall , and A . Vahdat . Systematic topology analysis and generation using degree correlations . SIGCOMM , 2006 . [ 11 ] R . Milo , S . Shen - Orr , S . Itzkovitz , N . Kashtan , D . Chklovskii , and U . Alon . Network motifs : Sim - ple building blocks of complex networks . Science , 298 ( 5594 ) : 824 – 827 , 2002 . [ 12 ] C . Moore , G . Ghoshal , and M . E . J . Newman . Exact solu - tions for models of evolving networks with addition and deletion of nodes . Physical Review E , 74 ( 036121 ) , 2006 . [ 13 ] M . Natora . Structure of complex biological networks . Master’s thesis , Department of Computer Science , In - stitute of Theoretical Computer Science , Department of Physics , Institute of Neuroinformatics , ETH Zurich , 2007 . [ 14 ] M . E . J . Newman . The structure and function of complex networks . SIAM Review , 45 ( 2 ) : 167 – 256 , 2003 . [ 15 ] P . Erd˝os and A . R´enyi . On the evolution of random graphs . Magyar Tud . Akad . Mat . Kutat´o Int . K¨ozl . , 5 : 17 – 61 , 1960 . [ 16 ] Kwangho Park , Ying - Cheng Lai , and Nong Ye . Self - organized scale - free networks . Physical Review E , 72 ( 026131 ) , 2005 . [ 17 ] N . Sarshar and V . Roychowdhury . Scale - free and stable structures in complex ad hoc networks . Physical Review E , 69 ( 026101 ) , 2004 . [ 18 ] M . Angeles Serrano and Marian Boguna . Clustering in complex networks . i . general formalism . arxiv . org , ( cond - mat / 0608336 ) , 2006 .