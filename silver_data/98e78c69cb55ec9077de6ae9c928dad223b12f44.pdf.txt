58 PERVASIVE computing Published by the IEEE CS and IEEE ComSoc ■ 1536 - 1268 / 05 / $ 20 . 00 © 2005 IEEE R A P I D P R O T O T Y P I N G W ithin the manufacturing and engineering industries , rapid prototyping is the relatively fast physical fabrication of a design or concept for purposes such as demonstration , evaluation , or testing . Software engineers also use rapid prototyping to uncover requirements by analyzing pro - totypes provided early in the development process and gath - ering feedback . When devel - oping ubiquitous computing systems , which often include hardware , software , and ( of course ) human factors , these two uses of rapid prototyping form an ideal design and develop - ment methodology . 1 Much work on display - based ubicomp systems ( and rapid prototyping in general ) focus on pro - ducing proof - of - concept demonstrators , usually to gauge technical feasibility and collect initial user feedback . 2 In our work , we’ve found that it’s often equally important to investigate factors such as use and appropriation 3 and that in some cases , without user studies , technical feasibility can be meaningless . We used rapid prototyping combined with a phased , iterative , and user - centered design approach to develop five display - based ubicomp systems for real - world use over time . In this arti - cle , we discuss our aims , approach , and lessons learned . Prototyped systems The ubicomp systems that we developed and deployed use rapid prototyping techniques and a user - centered design approach . Hermes 1 Hermes 4 is a system of interactive office door displays ( shown in figure 1a ) , which provides asynchronous messaging facilities . We intend these displays to augment rather than replace existing messaging practices , such as the use of Post - it notes . Aims . In developing the Hermes 1 displays , we wanted to explore issues of adoption and situ - ated interaction in a location with both public and private elements ( that is , outside an office door ) . We aimed to evaluate the system in place , allowing it to evolve as further requirements emerged over a significant period of time ( months and years rather than the usual days or weeks ) with daily use from a group of real - world users . Approach . For Hermes 1 , we used prototyping and early deployment , including only a small set of features from those technically possible . The minimized functionality let us concentrate on ease Without investigation of real use , technical feasibility can be meaningless . Adopting multiphased , user - centered prototyping approaches—involving deployment over time outside the lab—can produce better functional systems . Dan Fitton , Keith Cheverst , Chris Kray , Alan Dix , Mark Rouncefield , and George Saslis - Lagoudakis Lancaster University Rapid Prototyping and User - Centered Design of Interactive Display - Based Systems of use and reliability , and the relatively low complexity meant that we could quickly develop and refine prototypes ( over a few days or weeks ) . From an early stage , we logged usage of our deployed prototypes . We employed a phased - development approach , 4 where each phase ( of approx - imately four months ) had a different pri - mary objective and involved several pro - totyping iterations . The first phase aimed to develop core functionality and involved deploying door displays out - side the offices of two of the system’s developers . This ensured some initial testing outside the lab but with users who wouldn’t let low reliability and ini - tial problems affect future use . From this initial phase , we uncovered a major issue impacting reliability : humans block the wireless network signal when standing in front of a Hermes 1 door display . Phase 2 aimed to increase system reli - ability , solving problems encountered during phase one and deploying three additional door displays . Phase 3 added new interaction meth - ods ( in response to user feedback ) and increased the number of deployed door displays from five to 10 . An interesting trade - off was that users were prepared to forgo security almost completely to reduce interaction time . To avoid including only techies in our experiment , we gave door displays to two departmental secretaries ( in phases 2 and 4 ) and a sociologist ( in phase 4 ) . Later phases added new features and further improvements to reliability . Pro - totype deployment , evolution , and use lasted nearly three years , only ending when we moved to a new computing building . Summary of development strategy . We conducted our initial feasibility study and requirements gathering by testing early prototypes with friendly users . We later expanded deployment to a broader range of users . We split the development process into phases , allowing for changes in the development focus . We split the phases into prototyping cycles , each last - ing a few days or weeks . Our user - centered design combined with rapid prototyping encouraged adoption and appropriation by maximizing usability . We collected feedback from users both formally ( questionnaires and interviews ) and informally ( email , complaints , and chance conversations ) and logged all user interactions . SPAM The SPAM ( SMS Public Asynchro - nous Messenger ) system provides a light - weight alternative to the usual work - place communication methods ( tele - phone , fax , and email ) . We developed the system to help support coordination across two sites in northern England that provide housing for former psychi - atric patients . SPAM enables asynchro - nous short - message - service messaging between remote SPAM displays and between SPAM displays and the mobiles phones of staff and patients . Aims . First , we wanted to develop and deploy a reliable , easy - to - use communi - cation system based on SMS to enable messaging to a place rather than a per - son . This was motivated by engaged phone lines causing communication problems . Also , we wanted to help sup - port coordination with staff members working with patients off site . 5 Second , we wanted this system to help us under - stand this domain further ; logging user interaction for later analysis was crucial . Approach . Our initial approach involved a Participatory Design workshop , 6 where we used chosen scenarios ( informed by previous ethnographic work ) and props ( including a Hermes display ) to generate discussions about requirements and pos - sible technology solutions . Following the workshop , we rapidly prototyped a system based on these requirements using mainly off - the - shelf hardware and software . This let us cre - ate a prototype solution quickly ( in approximately one month ) . We then spent approximately a month on testing and burn - in to ensure the system had strong reliability—an absolute necessity given the deployment domain . Immedi - ately following testing , we deployed the prototype systems at two locations . We quickly received feedback from users , which we used to drive minor modifica - tions—for example , blocking senders ( patients ) who sent offensive messages . OCTOBER – DECEMBER 2005 PERVASIVE computing 59 ( a ) Figure 1 . ( a ) Hermes 1 deployment , ( b ) a Hermes 2 showroom configuration , and ( c ) a Hermes 2 probe pack . ( b ) ( c ) 60 PERVASIVE computing www . computer . org / pervasive R A P I D P R O T O T Y P I N G Summary of development strategy . We gathered initial requirements at a design workshop , using rapid prototyping of scenarios ( rather than hardware and software ) with potential users . We then created rapid prototypes using mainly off - the - shelf hardware and software components to quickly produce a system ready for deployment . We included log - ging facilities in the prototype to enable use analysis . Hermes 2 Following the success of Hermes 1 and SPAM , 5 we’re currently aiming to under - stand how networked displays’ physical placement and design in semi - wild set - tings influence and facilitate collabora - tion and community . To do this , we plan to redesign the original Hermes system and improve its underlying technology . We hope to deploy 40 door displays in Lancaster University’s new computing department . Aims . In Hermes 1 , we used a one - size - fits - all approach for door display con - figuration ( see figure 1a ) ; with the forthcoming redeployment , we can investigate what users find acceptable in terms of parameters such as display size , number , housing , supporting infra - structure , and UI layout . At this early stage , we have two initial aims : to deter - mine the physical form factor and the display configurations users desire . Approach . To investigate our first aim , we’ve designed six hardware and UI con - figurations for door displays , including a range of sizes and display types . We rapidly prototyped these configurations using the appropriate off - the - shelf hard - ware and software . We mounted and arranged them to give an impression of how they might appear when deployed ( see figure 1b ) , simultaneously provid - ing showcase scenarios for all six poten - tial door display configurations . We then gave 10 future door display own - ers a semistructured tour around the showcases , which we videotaped . We explained each configuration in the con - text of a scenario to highlight potential use . The experiment seemed to engage the participants , and having different prototypes next to each other enabled users to pick out the configurations they preferred—a typical comment being “I like that [ user interface ] , but I’d want it on that display . ” To investigate our second initial aim , we’ve given probe packs 7 to all partici - pants in the showcase experiment . These packs contain a diary , instant camera , pen , and glue ( see figure 1c ) . The diary is for recording messaging activities over a period of seven days , with pages for each day to record and describe mes - sages they’d left for others and for them - selves as well as messages left by others for them . The camera lets participants take pictures of messages , which they can glue into the diary and annotated appropriately to describe its context . Additionally , we did some paper proto - typing of UI configurations with limited success but not as extensively as systems elsewhere have done . 8 Summary of development strategy . We created and displayed rapid prototyp - ing of multiple potential hardware and UI configurations . We gave potential users a guided tour , letting them choose which configuration they would prefer . Figure 2 . Hermes photo display deployment and user interface . We gave probe packs to participants in the showcase experiment to uncover requirements and provide materials for a forthcoming design workshop . Hermes Photo Display The Hermes Photo Display 9 extends functionality provided in Hermes 1 , enabling context sharing using pictures . It lets users send pictures both locally and remotely ( using methods such as multimedia messaging , email , and Blue - tooth ) to a location where they’re orga - nized into a presentation and appear on an appropriate display ( see figure 2 ) . We hope to support messaging to a place rather than a person to promote a sense of community . Aims . We aim to explore issues of use and user acceptance with this type of shared - picture - messaging display . To achieve this , we’re investigating areas such as interaction methods and information presentation . Approach . To date , our approach has involved a single display’s rapid proto - typing and deployment , focusing on methods of asynchronous and synchro - nous interaction through mobile phones . We initially deployed the display for use by a group of “friendly” users . Once reli - ability reached an acceptable level , we redeployed the system for real - world users ( see figure 2 ) . To elicit feedback from users in this public setting , we advertised for volunteers who we then asked to carry out prescribed tasks with the display and fill in a questionnaire . Summary of development strategy . We investigated the feasibility of a public pic - ture - messaging display in terms of the technology supporting the presentation of information and interaction methods . We used off - the - shelf and custom hard - ware and software to assess feasibility and enable deployment in our rapid pro - totyping . We investigated usage through logging and a questionnaire - based user study . Intelligent Office user interface The Intelligent Office system 10 con - trols various electrical appliances ( such as a fan , heater , and lamp ) by sensing environmental context and making proactive suggestions . The system makes these suggestions on the basis of rules it has automatically learned from a con - text history or from user input . For example , if it’s hot and the fan is off , it would prompt you to turn on the fan . However , such a system’s adoption and use raises many previously unaddressed HCI challenges . Aims . The work aimed to investigate how to make the reasoning behind the Intelligent Office system’s proactive behavior more visible to users , helping them to better understand it . This required a major UI redesign to provide a peripheral interactive desktop display ( see figure 3 ) , enabling manual control of appliances and information presenta - tion as well as providing a platform for exploring the system’s original goal . Approach . We initially used rapid pro - totyping and small - scale deployment to gather requirements . Feedback from the previous UI helped guide this process . Development primarily involved only the UI , leaving the Intelligent Office sys - tem unchanged . We used a questionnaire to help generate system requirements , presenting questions in the context of possible scenarios . Summary of development strategy . We used rapid prototyping of a UI for an intelligent office control system to explore improving the visibility of the system’s proactive decisions for the user . High - fidelity prototyping helped us demonstrate the concept to potential users and , together with a questionnaire , enabled us to gather feedback and un - cover requirements . Issues Building a novel ubicomp system typ - ically involves dealing with a broad range of issues , often due to tailored hardware and specialized software solu - tions . We encountered several key issues in our use of rapid prototyping . Tailoring off - the - shelf technology Many times during our work we sought to tailor ordinary , off - the - shelf technol - OCTOBER – DECEMBER 2005 PERVASIVE computing 61 Figure 3 . Intelligent office deployment and user interface ( insert ) . ogy—for example , GSM modems , PDA devices , PC hardware , and a games con - sole—to build our novel ubicomp pro - totypes . On the surface , this appears a practical solution , making use of readily available technology often with proven reliability at modest development cost . However , using this type of technology in ways the original designers might not have intended can have severe implica - tions . In several cases , we found areas such as operating system and program - ming - language support missing or incom - plete . Tailoring often requires extensive investigation and testing , greatly reduc - ing the rapidity with which developers can produce prototypes . When developing the Hermes Photo Display , enabling Bluetooth interaction using mobile phones proved far more time consuming than expected . After spending several weeks considering and testing various options , to gain the appropriate level of support and flexi - bility required , we had to use specific hardware , operating system , and pro - gramming APIs . When attempting to support authen - tication using iButton readers on the Hermes 1 door displays , we discovered a complete lack of suitable solutions to support the required Java communica - tions API on the platform we used . After spending weeks looking for an appro - priate solution , a commercial solution became available . Unfortunately , after deploying prototype door displays with iButton support , we found this adversely affected the door displays’ reliability , so we abandoned the idea . While tailoring existing off - the - shelf technology seems appealing and can prove useful in some cases , we see a trade - off between the pitfalls of attempt - ing to tailor existing technology and investing time and effort in a specialized solution . You must consider this trade - off carefully , especially in circumstances where you have limited or unavailable domain knowledge . Rapid prototyping and reliability The five systems we’ve described have high reliability requirements ( but not necessarily at all phases of development ) , and this contrasts with the usual rapid - ity of short - term demonstration or test - ing . Reliability issues have often raised various kinds of challenges . In the Hermes 1 system , where door displays were running 24 / 7 , we found that display devices had unreliable oper - ating system drivers and software com - ponents , occasionally causing a door dis - play to crash after several weeks . This has implications for • Housing . In the project’s early stages , we had to forgo some security features of the housing to let us remove and reset the door display device ( a PDA ) easily . • Hardware platform . To increase secu - rity , we had to modify door display devices to route the reset switch out - side the case . • Operating system and software plat - form . We had to temporarily decom - mission door displays to apply updates and change configuration settings to improve reliability . • Application . We added sending a reg - ular “heartbeat” from the client to the server to help us monitor whether a device was “alive” or not . The system used this information to notify a sys - tem administrator and the affected user via email . • User interface . Occasionally a door display would crash but still display a UI , making it appear functional , con - fusing users , and reducing trust . • Human factors . If someone wishing to leave a message on a door display doubts whether their message will actually reach its owner , he or she will simply use a Post - it note instead . During the SPAM system’s burn - in testing , we discovered that the GSM modems appeared to have a fault , occa - sionally causing them to stop respond - ing until reset . Unable to replace these components at this late stage , we con - figured the display systems so that a sin - gle press of the power button would shut down the display application and power off . Then , when powered on , the system would automatically start the applica - tion and restore the previous state . SPAM system users understood this fea - ture because other familiar information appliances , such as a mobile phone , might occasionally crash and similarly need to be turned off and back on . We based the Hermes picture display on a Philips DesXcape Smart Display ( a wireless Microsoft Windows XP Remote Desktop client ) , which enabled us to rapidly prototype and deploy a display system , requiring only power and wire - less network coverage . However , on sev - eral occasions , disruption to the wireless link caused the display to unexpectedly disconnect from the Remote Desktop host . Also , the Remote Desktop con - nection caused additional overhead that seemed to make the host machine less stable . Using a Smart Display in this case demonstrated a trade - off between the 62 PERVASIVE computing www . computer . org / pervasive R A P I D P R O T O T Y P I N G Tailoring often requires extensive investigation and testing , greatly reducing the rapidity with which developers can produce prototypes . need for reliability and for easy and fast deployment : requiring user feedback on the experience of using a high - fidelity prototype outweighed the minor relia - bility problems . We concluded that rather than attempt - ing to provide very high levels of reliabil - ity , it was more practical to provide fail - ure notification and to manage user expectations . Managing user expectations In low - fidelity , inside - the - lab proto - typing , encouraging users to suspend dis - belief ( or act as if a prototype is real and fully functional ) is an accepted practice . However , most users expect prototype systems that are deployed externally and intended for everyday use to behave like finished products . This might be a rea - sonable expectation given that we’re pro - viding a system to be integrated within existing working patterns , effectively implying high reliability even though the system is only an experimental prototype . Consequently , a crucial aspect of de - ploying in the real world is managing user expectations . We consider the de - velopment and maintenance of trust as a gradual process 11 , 12 and therefore added functionality slowly , in phases , to maintain strong reliability . We also tried to ensure that deployment stayed in line with system reliability , to avoid damag - ing the important initial trust - establish - ment process ( by ensuring that users’ first encounters with the prototype were successful ) . We haven’t always suc - ceeded with this . For example , during Hermes 1’s later deployment phases , reliability problems affected user trust , and for some users , we found reestab - lishing trust to be challenging—despite strong improvements in the system’s overall reliability . Fostering a user - centered approach During our work , it helped to use more traditional ethnographical methodologies to jump - start our user - centered rapid pro - totyping , gathering user requirements before the development process began ( as we’re doing with Hermes 2 ) to improve the initial prototypes’ usability and accep - tance . Effectively , this means that we’ll need fewer rapid prototyping cycles at the beginning of the development process . Using a Participatory Design workshop in the SPAM system let us develop a suc - cessful initial prototype , which nearly met all its user requirements . Time and again , the need has arisen for the designer to be sympathetic to users’ patterns of use . For example , during Her - mes 1’s early phases of development , we forced owners to interact with their door display through a Web browser . This caused a problem for two reasons . It was often inconvenient for users to open a Web page and enter their user name and PIN to set or read a message . Addition - ally , and perhaps more importantly , the approach didn’t fit with the way many users seem to process the task of leav - ing a message . Only by involving users in the system’s design did we develop approaches that fit with their existing work patterns—for example , offering use of MSN Messenger and integrating Her - mes 1 with their email systems . Deployment for understanding domains Recently employed in the Interliving Project , 13 technology probes are adap - tations of cultural probes ( which pro - vide ethnographic data on usage ) that help to inspire designers during the design process . These probes situate existing technologies in real homes , exposing inhabitants to new experiences , resulting in feedback different from what you might collect in a lab . While our use of prototype showcases does help pro - vide user feedback to inspire the design process , we also use technology probes differently and perhaps more simply— we embed a logging system into the tech - nology itself . Both Hermes 1 and SPAM included such logging of user interac - tions . Analyzing these logs improved our understanding of these two domains , helped drive the prototyping processes , and enabled us to quantify various as - pects of usage . Lessons learned Table 1 summarizes the different pro - totyping techniques we used in our user - centered rapid prototyping , along with their associated systems and key advan - tages and disadvantages . Additionally , it illustrates that we applied several tech - niques within each individual project , which has led to two broader central lessons . Multiphased prototyping In most cases , the faster or earlier you deploy a prototype , the faster you can obtain feedback and new requirements and improve the design . However , early prototypes are inherently unfinished and might have errors that , if you don’t man - age expectations , could negatively impact user attitudes toward the system and make user - centered design difficult . Consequently , we use a multiphased prototyping approach , driven by user - OCTOBER – DECEMBER 2005 PERVASIVE computing 63 We concluded that rather than attempting to provide very high levels of reliability , it was more practical to provide failure notification and to manage user expectations . 64 PERVASIVE computing www . computer . org / pervasive R A P I D P R O T O T Y P I N G centric considerations . We apply differ - ent prototyping techniques at different project stages to gather user feedback about system properties , contextual fac - tors , and their concerns . We then itera - tively validate and refine a prototype until it meets the users’ expectations and occasionally introduce new features to explore further options . In the case of TABLE 1 Summary of techniques used . Technique Systems Key advantages Key disadvantages Prototype showcases • Hermes 2 • Supports early user choice • Time consuming to ( demonstrating collections • Generates useful feedback organize , design , and build of potential prototypes • Users can signal the best parts potential prototypes to end users ) of the different prototypes • Difficult to preempt all presented concerns users might have Participatory Design workshops • SPAM • Helps users feel truly involved • Cost associated with ( supporting the user - centered • Will also be used in Hermes in the user design process organization of the workshop design of both early and more 2 and specific Hermes Photo • Can use props and prototypes mature prototype systems ) Display deployments to inspire discussion Paper prototyping • Hermes 2 • Low cost • Can be difficult to provide ( demonstrating early user • High flexibility sufficient fidelity for a user to interface designs on paper to • Helps include users early in the appreciate the scenario end users ) design process Questionnaire - based user studies • All • Low setup cost • Time consuming for user ( obtaining feedback on early • High flexibility to complete a questionnaire or more mature prototypes ) properly • Can be difficult to investigate the rationale for a participant’s response Lab - based testing of early • All • Efficient and useful for • Open to requirements capture prototypes ascertaining initial technical problem feasibility • Useful for burn - in reliability testing Early deployment of prototypes Real - world users • SPAM • Users can regularly experience • Difficult to maintain reliability , ( unbiased ) • Hermes 1 ( second phase real - world use of the prototype , trust , and regular use onward , where deployments generating useful feedback • Usually requires some form of involved end users not directly management and user support associated with the project ) • Hermes Photo Display ( second phase of deployment ) Friendly users ( connected • Hermes 1 ( initial phase where • Users can experience real - world • Sometimes difficult to involve with the work ) units were only deployed use with a potentially unreliable a range of users , so potentially outside the developers’ offices ) prototype without a large open to the requirements • Hermes Photo Display ( initial impact on trust ( and use ) capture problem phase of deployment ) • Generates useful feedback • Sympathy is likely to affect • Intelligent Office quickly judgment , so feedback may be • Will also be used in Hermes 2 biased , inaccurate , or both Cultural probes • SPAM • Helpful insights into use • Might not capture all use due ( obtaining ethnographic • Hermes 2 • Relatively easy and fast to set up to practicality of logging for data on usage ) • Will also be used for specific • Low financial cost participants deployments of the Hermes Photo Display—for example , to support specific societies and communities at Lancaster University Deployed prototypes as • SPAM • Easy to collect data • Implications for design technology probes • Hermes 1 • Relatively easy to analyze and • Analysis might include the ( integrating logging facilities • Will also be used for Hermes 2 quantify use time - consuming , manual data to help understand actual use and certain deployments of tagging and therefore help drive the Hermes Photo Display further developments ) prototype deployment , we distinguish phases in terms of the user groups exposed to the prototype . We incremen - tally move from fault - resilient users to sympathetic users before deploying it to real - world users . Combined with a lon - gitudinal perspective ( that is , evaluating prototypes for several months instead of just a few days ) , this approach lets us to gather more information than would have been possible otherwise . Examples from our five projects that might have gone unnoticed using a con - ventional prototyping approach include the impact of the iButton hardware unre - liability on user acceptance , usage issues with the initial UI in the Intelligent Office project , and the requirement for a block - ing feature in SPAM . Technical feasibility and use In our work , exposing users to pro - totypes to generate feedback has been crucial to enable use . For example , the original Intelligent Office prototype demonstrated that such a system was technically possible ( sensing environ - mental context and making proactive suggestions ) . However , after exposing the system to users , we found it was simply too difficult to use on a regular basis—the interaction model simply didn’t fit the desktop environment in which it was used . Another trade - off is in the use of off - the - shelf technology , which can provide benefits such as reducing development time and jumpstarting reliability , by using reliable building blocks . However , this type of technology typically must be tailored to a specific purpose , which we found sometimes difficult and challeng - ing . When developing the Hermes Photo Display , we found that the Bluetooth dis - covery process is relatively long and often unreliable ; during a user study with over 10 devices in range , the server had trouble discovering more than five or six at once . W e hope the experiences we’ve discussed will help other researchers and prac - titioners select an appro - priate prototyping technique for future projects . ACKNOWLEDGMENTS The UK’s Engineering and Physical Sciences Research Council’s C ASIDE ( Cooperative Applications in Situated Display Environments ) project ( grant EP / C005589 ) funded this work , which builds on work carried out under the EPSRC - funded Equator and C ASCO ( Con - text - Aware Support for Cooperative Applications in Ubiquitous Computing Environments ) projects . The Science Research Investment Fund ( SRIF II ) e - campus initiative will provide hardware support for future trials based on the work described . REFERENCES 1 . M . Weiser , “The Computer for the 21st Century , ” Scientific American , vol . 265 , no . 3 , 1991 , pp . 66 – 75 . 2 . J . F . McCarthy , T . J . Costa , and E . S . Lion - gosari , “UniCast , OutCast & GroupCast : Three Steps Toward Ubiquitous , Peripheral Displays , ” Ubicomp 2001 : Ubiquitous Com - puting , LNCS 2201 , Springer , 2001 , pp . 332 – 345 . 3 . M . L . Markus and T . Connolly , “Why CSCW Applications Fail : Problems in the Adoption of Interdependent Work Tools , ” Proc . Conf . Computer Supported Cooper - ative Work ( CSCW 90 ) , ACM Press , 1990 , pp . 371 – 380 . 4 . K . Cheverst , K . D . Fitton , and A . Dix , “Exploring the Evolution of Office Door Displays , ” Public and Situated Displays : OCTOBER – DECEMBER 2005 PERVASIVE computing 65 the AUTHORS Daniel Fitton is a research associate in the Department of Computing at Lancaster University . His research interests involve the design , rapid prototyping , investigation , and deployment of new and novel - situated display - based systems . He’s also writing his PhD thesis , which focuses on the support of messaging and awareness with inter - active situated technology . He received his BSc in computer science from Lancaster University . Contact him at the Dept . of Computing , InfoLab21 , South Dr . , Lancaster Univ . , Lancaster LA1 4WA , UK ; df @ comp . lancs . ac . uk ; www . dan - f . co . uk Keith Cheverst is a senior lecturer in the Department of Computing at Lancaster University . His research interests involve context - aware and ubiquitous computing— in particular , computer - supported cooperative work and human factors issues . He received his PhD in computer science from Lancaster University . Contact him at the Dept . of Computing , InfoLab21 , South Dr . , Lancaster Univ . , Lancaster LA1 4WA , UK ; kc @ comp . lancs . ac . uk . Chris Kray is a research associate in the Embedded Interactive Systems group at the Department of Computing at Lancaster University . His research interests include ubiquitous computing , spatial reasoning , applied AI , and human - computer interac - tion . He’s also working on a relative - positioning system and applications for perva - sive display infrastructures . He received his PhD from Saarland University . Contact him at the Dept . of Computing , InfoLab21 , South Dr . , Lancaster Univ . , Lancaster LA1 4WA , UK ; kray @ comp . lancs . ac . uk . Mark Rouncefield is a senior research fellow in the Department of Computing at Lancaster University . His research interests include computer - supported cooperative work and the empirical study of work , organization , human factors , and interactive computer systems design . This strongly interdisciplinary work has led to extensive and continuing collaborations with colleagues in sociology , computing , informatics , and management . Contact him at the Dept . of Computing , InfoLab21 , South Dr . , Lancaster Univ . , Lancaster LA1 4WA , UK ; m . rouncefield @ lancaster . ac . uk . George Saslis - Lagoudakis is a PhD student in the Department of Computing at Lancaster University . He research interests include display - based ubiquitous comput - ing systems and the interaction of personal mobile devices with such systems . He received his MSc in computer science from Imperial College , London . Contact him at the Dept . of Computing , InfoLab21 , South Dr . , Lancaster Univ . , Lancaster LA1 4WA , UK ; g . saslis - lagoudakis @ comp . lancs . ac . uk . Social and Interactional Aspects of Shared Display Technologies , Kluwer , 2003 , pp . 141 – 169 . 5 . K . Cheverst et al . , “SPAM on the Menu : The Practical Use of Remote Messaging in Community Care , ” Proc . Conf . Universal Usability ( CUU 03 ) , ACM Press , 2003 , pp . 23 – 29 . 6 . J . Greenbaum and M . Kyng , eds . , Design at Work : Cooperative Design of Computer Systems , Lawrence Erlbaum Associates , 1991 . 7 . W . Gaver , A . Dunne , and E . Pacenti , “Design : Cultural Probes , ” Interactions : New Visions of Human - Computer Inter - action , vol . 6 , no . 1 , 1999 , pp . 21 – 29 . 8 . J . Mankoff and B . Schilit , “Supporting Knowledge Workers beyond the Desktop with PALPlates , ” Proc . Conf . Human Fac - tors in Computing Systems ( CHI 97 ) , ACM Press , 1997 , pp . 550 – 551 . 9 . K . Cheverst et al . , “Exploring Bluetooth - Based Mobile Phone Interaction with the Hermes Photo Display , ” Proc . 7th Int’l Conf . Human Computer Interaction with Mobile Devices and Services ( Mobile HCI ) , ACM Press , 2005 , pp . 47 – 54 . 10 . K . Cheverst et al . , “Exploring Issues of User Model Transparency and Proactive Behav - iour in an Office Environment Control Sys - tem , ” to be published in User Modeling and User - Adapted Interaction , Kluwer , 2005 . 11 . K . Siau and Z . Shen , “Building Customer Trust in Mobile Commerce , ” Comm . ACM , vol . 46 , no . 4 , 2003 , pp . 91 – 94 . 12 . E . Sillence et al . , “Trust and Mistrust of Online Health Sites , ” Proc . S IGCHI Conf . Human Factors in Computing Systems ( CHI 04 ) , ACM Press , 2004 , pp . 663 – 670 . 13 . H . Hutchinson et al . , “Technology Probes : Inspiring Design for and with Families , ” Proc . Conf . Human Factors in Computing Systems ( CHI 03 ) , ACM Press , 2003 , pp . 17 – 24 . For more information on this or any other comput - ing topic , please visit our Digital Library at www . computer . org / publications / dlib . 66 PERVASIVE computing www . computer . org / pervasive R A P I D P R O T O T Y P I N G EXECUTIVE COMMITTEE President : GERALD L . ENGEL * Computer Science & Engineering Univ . of Connecticut , Stamford 1 University Place Stamford , CT 06901 - 2315 Phone : + 1 203 251 8431 Fax : + 1 203 251 8592 g . engel @ computer . org President - Elect : DEBORAH M . COOPER * Past President : CARL K . CHANG * VP , Educational Activities : MURALI VARANASI† VP , Electronic Products and Services : JAMES W . MOORE ( 2ND VP ) * VP , Conferences and Tutorials : YERVANT ZORIAN† VP , Chapters Activities : CHRISTINA M . SCHOBER * VP , Publications : MICHAEL R . WILLIAMS ( 1ST VP ) * VP , Standards Activities : SUSAN K . ( KATHY ) LAND * VP , Technical Activities : STEPHANIE M . WHITE† Secretary : STEPHEN B . SEIDMAN * Treasurer : RANGACHAR KASTURI† 2004 – 2005 IEEE Division V Director : GENE F . HOFFNAGLE† 2005 – 2006 IEEE Division VIII Director : STEPHEN L . DIAMOND† 2005 IEEE Division V Director - Elect : OSCAR N . GARCIA * Computer Editor in Chief : DORIS L . CARVER† Executive Director : DAVID W . HENNAGE† * voting member of the Board of Governors † nonvoting member of the Board of Governors E X E C U T I V E S T A F F Executive Director : DAVID W . HENNAGE Assoc . Executive Director : ANNE MARIE KELLY Publisher : ANGELA BURGESS Associate Publisher : DICK PRICE Director , Administration : VIOLET S . DOAN Director , Information Technology & Services : ROBERTCARE Director , Business & Product Development : PETER TURNER PURPOSE The IEEE Computer Society is the world’s largest association of computing profes - sionals , and is the leading provider of technical information in the field . MEMBERSHIP Members receive the month - ly magazine Computer , discounts , and opportu - nities to serve ( all activities are led by volunteer members ) . Membership is open to all IEEE members , affiliate society members , and others interested in the computer field . COMPUTER SOCIETY WEB SITE The IEEE Computer Society’s Web site , at www . computer . org , offers information and samples from the society’s publications and con - ferences , as well as a broad range of information about technical committees , standards , student activities , and more . BOARD OF GOVERNORS Term Expiring 2005 : Oscar N . Garcia , Mark A . Grant , Michel Israel , Rohit Kapur , Stephen B . Seidman , Kathleen M . Swigger , Makoto Takizawa Term Expiring 2006 : Mark Christensen , Alan Clements , Annie Combelles , Ann Q . Gates , James D . Isaak , Susan A . Mengel , Bill N . Schilit Term Expiring 2007 : Jean M . Bacon , George V . Cybenko , Richard A . Kemmerer , Susan K . ( Kathy ) Land , Itaru Mimura , Brian M . O’Connell , Christina M . Schober Next Board Meeting : 10 Mar . 06 , San Francisco IEEE OFFICERS President : W . CLEON ANDERSON President - Elect : MICHAEL R . LIGHTNER Past President : ARTHUR W . WINSTON Executive Director : JEFFRY W . RAYNES Secretary : MOHAMED EL - HAWARY Treasurer : JOSEPH V . LILLIE VP , Educational Activities : MOSHE KAM VP , Pub . Services & Products : LEAH H . JAMIESON VP , Regional Activities : MARC T . APTER President , Standards Assoc : DONALD N . HEIRMAN VP , Technical Activities : JOHN R . VIG IEEE Division V Director : GENE F . HOFFNAGLE IEEE Division VIII Director : STEPHEN L . DIAMOND President , IEEE - USA : GERARD A . ALPHONSE COMPUTER SOCIETY OFFICES Headquarters Office 1730 Massachusetts Ave . NW Washington , DC 20036 - 1992 Phone : + 1 202 371 0101 Fax : + 1 202 728 9614 E - mail : hq . ofc @ computer . org Publications Office 10662 Los Vaqueros Cir . , PO Box 3014 Los Alamitos , CA 90720 - 1314 Phone : + 1 714 8218380 E - mail : help @ computer . org Membership and Publication Orders : Phone : + 1 800 272 6657 Fax : + 1 714 821 4641 E - mail : help @ computer . org Asia / Pacific Office Watanabe Building 1 - 4 - 2 Minami - Aoyama , Minato - ku Tokyo107 - 0062 , Japan Phone : + 81 3 3408 3118 Fax : + 81 3 3408 3553 E - mail : tokyo . ofc @ computer . org