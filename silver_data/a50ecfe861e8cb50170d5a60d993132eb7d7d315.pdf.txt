18 What’s Eliza doing in the Chinese Room ? Incoherent hyperdocuments – and how to avoid them Manfred Thuering , Joerg M . Haake and Joerg Hannemann Integrated Publication and Information Systems Institute ( IPSI ) Gesellschaft fuer Mathematik und Datenverarbeitung ( GMD ) Postbox 104326 Dolivostrasse 15 , D – 6100 Darmstadt , F . R . G . e – mail : thuering @ darmstadt . gmd . de Abstract Research on understanding linear texts has shown that comprehension and navigation mainly depend on the reader’s ability to construct a coheren t mental representation . While the author of a traditional document can use a variety of structural cues to support his readers in building up such a representation , the author of a hyperdocument faces a new problem . If he wants to ensure that his readers understand the entire hyperdocument as a coherent entity , he needs means to indicate its structure in a comprehensi - ble way . In this paper , we propose a construction kit which provides dedicated design objects for this purpose . The design objects can be characterized as building blocks for three functionally different components of a hyperdocument : its content part , organizational part , and presentation part . In addition to the design objects , we propose some design rules which should guide the construction of coherent hyperdocuments . Keywords Design of hyperdocuments , coherent hyperdocuments , rhetorics of hypertext , hyperdocument construction kit , labelled links , composite nodes , navigation , comprehension of hyperdocuments . 1 Introduction Imagine a journalist writing a hyperdocument which describes the discussion about the intelligence of computers caused by [ Searle , 1980 ] . In the course of his work , the journalist builds up a complex hyper - text net which is partly presented in figure 1 . The screendump shows several nodes , which e . g . contain Searle’s main argument ( Searle’s Argument ) , its analysis carried out by the journalist ( Analysis of Searle’s Argument ) , notes about topics in rhetorics and in AI ( e . g . Toulmin schema and Turing test ) and several computer programs ( e . g . Eliza ) . To present the document to his readers the author uses a card oriented reading tool without graphical browsing facilities . 19 Figure 1 : Example for a simple content network Now imagine a reader who is a novice to AI exploring the document . She starts by opening the node Searle’s Argument , reads the text inside and without closing the node follows its link to Principles of AI . Again she reads the content and then moves on . Thus , she gradually makes her way through the net until her screen looks like the screendump in figure 2 . At that time the reader has already read a multitude of texts about a variety of topics some of them shar - ing only distant or unclear relationships . She has obtained a lot of information about AI but unfortunate - ly has only seen a minor part of the discussion about Searle’s provocative theses . Therefore , she is dis - appointed with the document and somehow believes that she might not understand what it is really about . Moreover , she is experiencing a growing sense of disorientation : Unable to remember all of her way through the net and unsure about where to go next , she is feeling lost in a complex labyrinth of heterogeneous information . When she opens the node Eliza and its window pops up over the text de - scribing the Chinese Room she suddenly finds herself confronted with Eliza . Knowing neither the pur - pose of this program nor what to do now , the reader asks herself with a tinge of desperation : ’What is Eliza doing in The Chinese Room ? ’ – and then pulls the plug . Fortunately , only few hypertext sessions end that way , but nevertheless many readers share some of the experiences described in our scenario . Two difficulties are typically related to the reception of hyperdo - cuments . First , it can be tough to find your way around in a complex hypertext net . Readers often get lost in hyperspace [ Conklin , 1987 ] , i . e . they do not know where they are in the overall structure of the document , or where to go next , or how to reach a desired destination [ Edwards , Hardman , 1989 ] . Se - cond , it can be difficult to understand a hyperdocument . Readers often have a hard time finding out what all the texts distributed over a variety of nodes have to do with each other . In that case , they fail to develop an understanding of the document as a coherent entity of closely related facts . Instead , they tend to see it as an aggregation of loosely linked chunks of information . Especially two features of a hyperdocument might foster such an impression . ( 1 ) The lack of appropriate labels for nodes and links impede the understanding of semantic relations between nodes , i . e . it remains unclear in which substantial way the contents of the nodes are connected . 20 Figure 2 : Screendump from example hyperdocument ( 2 ) The lack of higher order units which can represent part structures of the hypertext net hinder the identification of different content domains , i . e . it remains unclear which domains the document deals with and what their relations are . While readers may find it hard to understand a hyperdocument and may experience bewildering odys - seys through complex hypertext nets , the authors of a hyperdocument have to struggle with problems of their own . In contrast to writers of linear documents , they have no guidelines telling them what a hyperdocument should look like . Many rhetorical decisions have to be made without using widely ac - cepted conventions : What is a sensible structure for the document ? Which names are appropriate for the nodes ? Should the links be labelled ? What is the best way to present the document ? Since these deci - sions entail activities supplementary to the processes which are necessary to write a linear text , they are often regarded as cognitive overhead [ Conklin , 1987 ] . This additional workload may prevent au - thors from using the complete functionality of their hypertext system ( see e . g . [ Trigg , Irish , 1987 ] ) or may even cause them to completely refuse hypertext technology . Cognitive overhead and the lack of rhetorical guidelines complicate the authoring of hyperdocuments and may strongly contribute to the low quality of many hyperdocuments which more and more hyper - text readers complain about . Difficulties in navigation and understanding are certainly the main reasons for this complaint . Although both reasons seem to be independent at first sight , we believe that they are symptoms of the same disease : the lack of coherence in hyperdocuments . In the next chapter , we discuss this assumption more thoroughly : We first explain the notion of coher - ence for linear documents and then apply our findings to hyperdocuments . In chapter three we propose a construction kit for organizing hyperdocuments which aims at increasing their coherence . This kit is a part of SEPIA [ Streitz , Hannemann , Thuering , 1989 ] , a hypertext authoring system consisting of different activity spaces which are especially tailored to support the cognitive processes of authoring . In the last chapter we will briefly summarize our approach . 21 2 Coherence : A cognitive basis for understanding , navigation and authoring When people read a linear text they usually follow the sequence of information provided by the author thereby gradually building up a coherent mental representation . Therefore , the meaning of the text can be characterized as the result of a dynamic construction . Two types of inferences are especially in - teresting with respect to that construction . In order to understand the relation between clauses and sen - tences , readers infer ’small scale’ connections which link pieces of information together and make the text locally coherent [ van Dijk , Kintsch , 1983 ] . Furthermore , they infer ’large scale’ connections which are conclusions drawn from several clauses , sentences , paragraphs or even chapters . Such conclusions establish the global coherence of the text [ van Dijk , Kintsch , 1983 ] . They summarize the meaning of diverse chunks of information as an abstract ’macroproposition’ and thus represent their common topic . In the course of comprehension , a hierarchical macrostructure is built up which is an important part of the reader’s mental representation since it comprises the main ideas of the document . The construction of a coherent representation is not only necessary for understanding . It has also impor - tant consequences for navigation . For example , imagine you are reading a book about Artificial Intelli - gence in which the Chinese Room is mentioned . If you have built up a coherent mental representation you have inferred macropositions which represent what the room has got to do with AI as the overall topic , i . e . that it belongs to Searle’s argumentation which critically discusses the cognitive capacities of computers from a philosophical perspective . This knowledge is a first rate basis to reconstruct in which chapter , subchapter or even on which page the Chinese Room might be described and therefore supports backward navigation ( i . e . , finding information you have previously encountered ) . But that is not all . During reading there is a continuous generation of forward directed inferences about the con - tinuation of the text [ Pohl , 1982 ] . These anticipations not only facilitate understanding they are also extremely helpful for forward navigation : If you have formed a rough idea about Searle’s debate and anticipate that the next five pages will describe philosophical details which you are not interested in , you can decide to leave the current chapter and to continue at a place which looks more promising . Every author almost automatically employs a variety of rhetorical means to make his text coherent . At the local level , he uses cues , e . g . conjunctions , which trigger specific inferences . At the global level , he groups those ideas together which contribute to the same topic and presents them in a sensible se - quence . In order to indicate distinct chunks of information , he divides his text into chapters , subchap - ters , etc . and names these subunits according to their content . Thus , he eases the generation of macro - propositions and supports both , comprehension and navigation . Now , what can we learn from the coherence of linear documents for the reading and writing of hyperdo - cuments ? First of all , the concepts of local and global coherence can be applied to such documents . Of course , the content of a hypertext node has to suffice these two criteria , i . e . when generating text inside a node an author will rely on his skills as a writer of linear text and will provide the usual cues for his readers . But additionally , it is important that the author establishes cues hinting at local and global co - herence at the level of the hypertext net . If he wants his readers to perceive a semantic relation between the contents of two nodes he must provide adequate cues to make the net locally coherent . Clearly , it is not sufficient to merely link the nodes , since a link only indicates the existence of a relation without specifying its semantics . To convey the meaning of a link to his readers the author needs a set of typed links which are labelled according to their functionality , i . e . link labels must express what the source and the destination of a link have to do with each other . Labels which clarify local coherence relations not only facilitate the understanding of a hyperdocument . Together with the names of connected nodes , they also trigger inferences about what is to be expected when a node is opened and thus they efficiently support forward navigation . If the author wants his readers to recognize relationships exceeding the level of local coherence he must provide cues which help them to structure the document at the macrolevel . Therefore , he needs higher order units enabling him to comprise those part – structures of the hypertext net which he feels belong to the same domain or topic . Units of that kind may improve the global coherence of a hyperdocument 22 since they indicate which nodes share common features . Composite nodes as proposed by [ Halasz , 1988 ] might be a good way to implement such units since they make it possible to represent subnets as distinguished elements . Now let us take a second look at the example in our introduction . Keeping in mind the concept of local and global coherence , it becomes apparent what might cause the difficulties of our reader . Being a nov - ice in the field of AI , she has a hard time finding out what the links between the nodes mean and which nodes belong to the same domain . The lack of typed links which are appropriately labelled and the ab - sence of composite nodes strongly hinder the perception of coherence relations at the local as well as at the global level . This does not only lead to a poor understanding of the document but also impedes the reader’s navigation causing her to drift away from those nodes which she is mainly interested in . 3 A construction kit for the design of hyperdocuments When readers go through a hyperdocument they begin at one node and then successively follow links . Several approaches have been developed to reduce disorientation during this activity : [ Conklin , 1987 ] distinguishes organizational links which support navigation by providing hierarchical structures from referential links which may establish non - hierarchical structures as well . The tree items in KMS [ Ak - scyn , Mc Cracken , Yoder , 1988 ] correspond to Conklin’s organizational links . The aggregation of nodes and links is supported by composite nodes [ Halasz , 1988 ] , e . g . the fileboxes in NoteCards [ Ha - lasz , Moran , Trigg , 1987 ] . To present predefined tours to the reader , different kinds of paths have been developed [ Zellweger , 1989 ] , like guided tours [ Trigg , 1988 ] . For the purpose of an integrated presen - tation of several nodes , table tops have been proposed [ Trigg , 1988 ] , [ Marshall , Irish , 1989 ] . All these approaches try to support navigation by structuring the hyperdocument . Although this might be a step into the right direction we feel that it is not sufficient . If a reader wants to navigate effectively , she has to understand the relations between the nodes of the hyperdocument . Therefore , it is not enough to provide structure but it becomes necessary to notify explicitly or even explain the structure to the read - er . In order to improve both , navigation and comprehension , an author has to construct hyperdocuments which enhance the perception of local and global coherence relations . In accordance with [ Hannemann , Thuering , Streitz , 1990 ] , who proposed a theoretical framework for modelling the authoring activity of linear documents , we characterize the construction of coherent hy - perdocuments as a design problem . The means for generating and structuring a hyperdocument are provided by design objects , while design rules determine the proper use of these objects ( e . g . they say which objects may be combined with each other ) . The basic design objects of a hyperdocument are nodes and links . Nodes represent units of information while links indicate relations between those units . We distinguish atomic nodes which are not further decomposable from composite nodes ( cf . [ Halasz , 1988 ] ) which refer to a structure of nodes and links . Links can be established between complete nodes or between parts of nodes ( embedded links ) . In order to increase the coherence of a hyperdocument , nodes and links can be endowed with properties which facilitate the recognition of coherence relations . The resulting set of design objects consists of specific node and link types which can be used as building blocks for the creation of hyperdocuments and which allow a large variety of structures ranging from linear documents to highly non - linear , interconnected documents . In any case , the hyperdocument can be characterized as a graph of typed nodes and typed links . In the course of designing a hyperdocument , an author is generally confronted with three subproblems which correspond to the classical fields of rhetorics , i . e . inventio , dispositio and elocutio . He must : ♦ generate and select relevant information ( inventio ) , ♦ structure resp . order the selected information ( dispositio ) , and ♦ present the ordered information in an adequate way ( elocutio ) . The author of a hyperdocument needs design objects to implement the semantic and pragmatic deci - sions he makes in order to perform these tasks . We therefore propose that a hyperdocument should con - 23 sist of three main components which are suited to represent the final as well as the intermittent solutions of each subproblem mentioned above : ( 1 ) The content part is formed by design objects which represent the information the document con - sists of ( cf . chapter 3 . 1 ) : Content nodes contain the textual , graphical etc . parts of the document while content links indicate substantial connections between these parts . In order to help an author specify - ing those connections , it is necessary to provide links which pertinently reflect semantic relationships between content nodes and thus support the readers’ construction of local coherence . ( 2 ) The organizational part consists of design objects which serve the purpose of structuring : struc - ture nodes and structure links . These objects can be used to organize the content part in a specific manner ( cf . chapter 3 . 2 ) . Since the development of macrostructures can be influenced by structuring the content network , the organizational part of a hyperdocument mainly determines which global co - herence relations will be constructed by the reader . Therefore , the author can employ structure nodes and links to adapt his document to the needs and dispositions of different readers . ( 3 ) The presentation part associates an adequate presentation style to each design object . Since hyper - documents offer the opportunity to use many different kinds of presentation they expand the classical field of elocutio . In the following sections , we will focus on the first and second component by specifying their design objects and by proposing some general design rules . Due to space limitations , we will not describe the presentation part in detail . 3 . 1 The content part The content part of a hyperdocument can be designed using content nodes and content links . Each content node carries a name and may represent every kind of information , e . g . facts , opinions , claims etc . Atomic content nodes may contain a variety of data , like text or graphics , and form a unit which is not be segmented into more specific elements . Their data may be an explicit part of the hyperdocu - ment itself or they may be retrieved from external sources ( e . g . from an online DBMS ) . Atomic nodes with external sources manage the access to such sources of external information by mapping the exter - nal data format into the internal structure of the hypertext system . In contrast to atomic content nodes , composite content nodes are further decomposable . They represent the information of several content nodes and links as a unit and thus enable the author to cluster those pieces of information which he con - siders as belonging together . For instance , he might aggregate all content nodes and links which inform about a specific domain by putting them in the same composite node . A content link represents a relation between two content nodes , one of them being the source ( S ) the other being the destination ( D ) of the link . The semantic relationship between source and destination can be characterized as a specific dependency between S and D , i . e . the destination serves the source in a particular way . For example , if D describes the theoretical background of S , then the source is ex - plained by the destination . For the description of such dependencies we are currently developing a hier - archical link system . The labels of its links are derived from the Rhetorical Structure Theory [ Mann , Thompson , 1987 ] . The link system distinguishes three levels of abstraction : Level 1 : Links at this level carry no label . Therefore , they represent the most general and most unspecif - ic connection between two nodes . Level 2 : The labels of these links describe fairly global semantic relationships in the form of verbs which characterize the function of D with respect to S . Examples : ( a ) ’S is discussed by D’ ( b ) ’S is illustrated by D’ . Level 3 : The labels refine the semantic relationships of links at level 2 either by redefiniton , i . e . by using a more specific verb , or by expansion , i . e . by adding further attributes . Examples : ( a ) ’S is discussed by D’ is replaced by ’S is criticized by D’ ( redefinition ) . ( b ) ’S is illustrated by D’ is refined by adding ’graphically’ ( expansion ) . 24 The link system may be extended by including application specific links into level two and three . For example , for the purpose of knowledge representation level 2 may be supplemented with links like ’is - a’ , ’part - of’ , etc . The design objects of the content part , especially composite content nodes and content links , offer a good opportunity to increase the coherence of hyperdocuments . Composite nodes enable the author to effectively structure his net of content nodes and links according to domain specific criteria . Since each composite may contain other composites , the author can hierarchically organize all pieces of informa - tion which contribute to his document . A reader can use this structure to identify which domains are treated by the hyperdocument and to infer which relations might exist between those domains . If all composites are appropriately named they foster the perception of global coherence and furthermore lead to expectations about their content thus supporting navigational decisions . On account of their labels , content links of level 2 and 3 can facilitate the construction of local coher - ence . On behalf of the author , this might contribute to the reduction of cognitive overhead : First , the labels of the links support his analysis of the semantic relationship between two nodes [ Conklin , Bege - man , 1988 ] . The author needs not exert himself to find a good name for a link but can choose the most appropriate link from the predefined system . Second , the levels of the link label hierarchy support a continuous refinement of the links depending on the author’s current stage of knowledge ( cf . [ Conklin , Begeman , 1988 ] ) . Initially , an author may not know exactly what kind of relationship should be estab - lished between source and destination and therefore he may use a link of level 1 . When he feels more certain about that link he can substitute it by a more specific one . If the author preferably uses links of level 2 or 3 and additionally chooses adequate names for his nodes he can create hypertext nets of high comprehensibility in which the units ’source – link – destination’ constitute simple sentences . For ex - ample : ’robot reply – criticizes – Chinese room argument’ ( cf . figure 3 ) . On behalf of the reader , this should lead to a better understanding of the relations between nodes . In order to increase the coherence of his document , the author should use the objects of the content part according to some global design rules . For example , composite nodes should be used to hierarchically structure the content of the document into plausible , domain specific subunits . The label of a link should be as specific as possible and should constitute a comprehensible sentence together with the names of source and destination . Figure 3 : Example for a structured content part of a hyperdocument Now imagine what happens when the journalist of our introductory scenario uses content nodes and content links according to these general design rules . First of all , he will represent his material by atomic 25 content nodes , some of them being nodes with external source since they address programs which are stored outside the document ( e . g . Eliza ) . Related nodes will be connected by content links chosen from the link system . For example , SHRDLU and Principles of AI are connected by the link is _ illustrated _ by ( see figure 3 ) . Furthermore , the journalist structures his material using several composite content nodes : all information belonging to the discussion of Searle’s thesis are grouped together in a composite named Chinese Room debate wherelse AI programs and all information about AI in general are aggre - gated in the composite AI . The composite nodes are connected by links from the link system and may be part of other composites at a higher level . Proceeding this way , the journalist builds up a structured content net consisting of ( a ) composites nodes which represent the domains treated in the document ( b ) links which describe semantic relations between and inside the domains and ( c ) layers which are induced by nesting composites and thus reflect hierarchical ’part of relations’ among domains . 3 . 2 The organizational part While the design objects of the content part offer the opportunity to increase coherence under a content oriented perspective the design objects of the organizational part provide means to increase coherence by structuring the content net under a reader oriented perspective : Organizational design objects enable the author to adjust his hyperdocument to the needs and dispositions of different groups of readers with - out changing the whole content net . For example , instead of writing completely new documents for novices and experts of AI the author can define two diverse organization structures by referencing dif - ferent elements of the content net thus creating reader specific variants of his document . These variants can differ from each other with respect to several features : They may contain different parts of the con - tent net , they may use different content nodes as the reader’s starting point , and they may arrange the selected elements of the content net in different orders . For the purpose of creating such variants our construction kit provides two classes of design objects : structure nodes and structure links . Structure nodes comprise a subset of nodes and links of the content net and are implemented as com - posite nodes [ Halasz , 1988 ] which contain references to the comprised objects . Each structure node carries a name and has a starting node . The author may use two kinds of structure nodes which assign different degrees of freedom to the reader’s navigation : Sequencing nodes represent author - defined reading sequences through selected parts of the content net , i . e . the content net can only be traversed as determined by the sequencing node . Sequencing nodes may contain other sequencing nodes thus offering the possibility of hierarchical nesting . When a se - quencing node is traversed as a part of a superordinate sequencing node its content is included into the reading path of the superordinate node . Exploration nodes also represent a subset of the content net but without an additional ordering . There are no reading sequences different from those sequences implicated by the structure of the content net , i . e . the reader can simply follow the content links when exploring the subnet . An exploration node can only be reached by traversing a specific structure link ( see below ) , which is anchored in a sequencing node . Once a reader finishes her exploration she automatically gets back to that anchor and can continue from where she left the reading order defined by the superordinate sequencing node . In summary , sequencing nodes constrain the reader’s navigation through the document , while explora - tion nodes allow an unconstrained access to its content part . Instances of both kind of nodes can be con - nected by structure links which define sequencing relations . Structure links are directed links but pro - vide an additional ’ back functionality’ . They can carry the same labels as content links . Therefore , the author may either reuse the labels of his content links , or he may choose new ones from the link system . We distinguish two kinds of structure links . Sequencing links define organizational structures which associate the content of each sequencing node with a presentation sequence . They are used to define acyclic orderings ( e . g . linear sequence , branching sequence ) among content nodes or among content and sequencing nodes . An exploration link provides access to an exploration node . It is embedded into a sequencing node and points to the starting node of an exploration node . When a reader leaves an exploration node she is taken 26 back to the source of the exploration link . One may implement this functionality by automatically in - cluding ’back links’ for every content node in the exploration node . Within sequencing nodes , different kinds of presentation sequences ( or sequencing models ) can be de - fined . Following [ Zellweger , 1989 ] we distinguish sequential , branching and conditional paths . Se - quential paths present a set of nodes in a linear sequence . Branching paths include forks where a reader has to choose from a set of alternative nodes in order to move on . Conditional paths allow for the nesting of paths ( nested , hierarchical path decomposition ) , e . g . a sequencing node organized as a linear path may include another sequencing node which is organized as a branching path . Furthermore , next alter - natives can be dynamically computed based on the reader’s previous actions . An additional organizational structure which is orthogonal to predefined reading sequences is an index . In our construction kit an index node can be modelled as a special kind of sequencing node which con - tains an ordered set of key terms modelled as atomic content nodes together with lists of references to other nodes modelled as links . Due to space limitations we will not discuss indexing in further detail . The organizational design objects enable authors to impose additional structures on the semantic rela - tionships represented in the content part . By using structure nodes and structure links , it is possible to aggregate and order subsets of the content part with respect to the pecularities of different reader groups . In doing so , an author should follow some general design rules which aim at further increasing the global coherence of the hyperdocument . First of all , he should choose an appropriate starting point which serves as an introduction to the document . When constructing paths leaving from this point he should be particularly sensible for the dispositions of his readers , e . g . their interests and knowledge . This means that he should order and name sequencing nodes and links in a plausible way and should provide additional background information using exploration nodes and links . To demonstrate an application of the design objects and rules belonging to the organizational part , let us go back to the content net described in the previous chapter ( see figure 3 ) . Imagine the journalist of our scenario wants to structure the content part of his hyperdocument for readers who are unfamiliar with AI . He begins with an Introduction then gives an Overview and finishes with a Resume ( see figure 4 ) . These three nodes constitute the highest level of the hyperdocument . Therefore , they are grouped together in a primary sequencing node which is the entry point of the whole document . To assure a meaningful reading sequence , the primary sequencing node is implemented as a linear path . The Introduction is implemented as a text node in which the topic of the document is explained by in - forming the reader what is to be expected from the next parts of the document . In order to provide a comprehensive overview about the document’s structure and to ascertain an appropriate reading se - quence , the journalist decides to present the node Overview as a graphical branching path and to imple - ment it as a sequencing node which references elements of the content part : He selects the nodes from the content net ( e . g . Searle’s Argument , Robot reply , etc ) , includes them into the sequencing node , and defines Searle’s Argument as starting point . Three alternative lines of argumentation are established by defining the criticized _ by and rejected _ by links of the content net as sequencing links leaving the names of the content nodes and links unchanged . Some content nodes , for instance Searle’s Argument , contain information which the journalist judges as difficult to comprehend for novices in the field of AI . He therefore provides supplementary background knowledge to his readers via exploration links and nodes . Figure 4 shows two examples : ( 1 ) A part of the composite content node AI is included into an exploration node called AI programs which provides access to AI programs , like Eliza and SHRDLU , as well as to their descriptions . ( 2 ) The exploration node Searle’s Argument Structure provides the result of an analysis of Searle’s argu - mentation based on an extended Toulmin schema [ Toulmin , 1958 ] [ Schuler , Smith , 1990 ] . This schema is constituted by special node types and links which belong to level 3 of the link system . Both exploration nodes can be reached from the node Searle’s Argument via an exploration link and allow free browsing beginning at a dedicated starting point ( Issue resp . Description of AI programs ) . Whenever the reader finishes the exploration she gets back to Searle’s Argument and can move on to the other sections of the path . When she closes the node Overview she is finally taken to the Resume 27 Figure 4 : Example of a hyperdocument structure ( selected parts ) Note : Some node names are abbreviated . The dashed lines represent part - of relati - onships in and between structure nodes . which is the last node referenced in the organizational part . Figure 5 shows a sceendump illustrating a part of the document of our scenario . We have implemented this document using the HyperNeWS 28 toolkit 1 running on Sun workstations . Using the construction kit for building organizational structures yields several advantages . It enables the author to define alternative selections and orderings on his content net in order to adapt it to the spe - cific interests and dispositions of diverse reader groups . By combining the two types of structure nodes and structure links , he can create multiple variants of his document reaching from strictly linear se - quences to completely unrestricted hypertext nets with all kinds of combinations in between these two extremes . On behalf of the reader , document structures which are carefully developed on the basis of the design objects and principles described above should lead to more coherent hyperdocuments which ease the burden of comprehension and navigation . 3 . 3 The presentation part One important component of the design of a hyperdocument is its presentation to the user . In principle , hypertext nets can be presented in two ways : The graphical presentation uses iconized nodes connected by labeled arrows or edges , while the textual presentation shows the content of a node together with the connecting links ( e . g . as buttons ) . These kinds of presentation are not exclusive . Rather , the graphi - cal presentation may be used to select and open nodes in the textual presentation . Hypertext nets can be presented in three presentation styles : 1 The textual presentation displays the content of one or more content nodes together with their content links . In this mode a reader sees only a limited subset of the hyperdocument because there is no net view . 2 The graphical presentation visualizes a subset of the document by graphically displaying nodes and links in a net view . 3 The combined presentation allows the controlled mixture of the modes above , for exam - ple the simultaneous graphical display of a subnet together with the contents of some nodes ( analog to table tops [ Trigg , 1988 ] ) . The combination of the sequencing model ( see chapter 3 . 2 ) and the presentation styles constitutes nine basic classes of sequencing nodes which are illustrated in table 2 . Table 2 : Examples for the classes of sequencing nodes sequencing model presentation style sequential path branching path conditional path textual only one node opened at a ti - me or expansion as in Guide ( replacement button ) [ Brown , 1987 ] an opened node with more than one next buttons as in guided tours in NoteCards [ Trigg , 1988 ] an opened node with dyna - mically computed alternati - ve next buttons graphical a browser for a fixed traver - sion of a node sequence a graphbrowser displaying a subnet as iconized nodes and links a graphbrowser with dyna - mically computed alternati - ves combined a table top with fixed rea - ding sequence a table top like presentation of network structure incl . open nodes a dynamic table top The association of presentation styles with the objects to be presented can be exemplified using the introductionary example also used in the last two chapters . The exploration node AI programs is associated with the textual presentation because here the journalist wants to communicate detailed background information interconnected by embedded links which he / she thinks can hardly be pres - ented graphically . _ _ _ _ _ _ _ _ _ _ 1 . HyperNeWS is a product of the Turing Institute , George House , 36 North Hanover Street , Glasgow G1 2AD , UK 29 Figure 5 shows a screendump of the hyperdocument described in our scenario . The journalist has de - cided to present the Overview using the graphical presentation because structures can be best communi - cated graphically . The same holds for the exploration node Searle’s Argument Structure which can be reached from Searl’s Argument which is presented as a text node . 4 Summary Our proposal for the organization of hyperdocuments is centrally based on the notion of coherence . In order to increase local as well as global coherence , several design objects and rules have been presented which constitute a construction kit for the creation of hyperdocuments . The design objects can be sum - marized in a hierarchy of associated design object classes ( see figure 6 ) . Along the hierarchy , every subclass inherits properties from the superclass . hypertext object node link Figure 6 : Hierarchy of design object classes sequencing node content node structurelink contentlink atomic composite internalsource externalsource linear path alternative path conditional path explorationnode structure node sequencinglink explorationlink The implementation of these design objects is based on the hypermedia engine HyperBase [ Schuett , Streitz , 1990 ] which has been developed as part of the hypertext authoring system SEPIA [ Streitz , Han - nemann , Thuering , 1989 ] . Grounded on an analysis of the cognitive processes of authoring , SEPIA will consist of several activity spaces each dedicated to support specific activities of the author , like plan - ning or gathering information . The three components of a hyperdocument ( content , organization and presentation part ) will be the output of SEPIA’s rhetorical space , where assistance is provided by our construction kit . Documents produced with that kit will have to be empirically tested in order to find out if the design objects of the kit are appropriate to improve comprehension and navigation . 5 Acknowledgements This work is part of a larger effort in the WiBAS department at the Integrated Publication and Informa - tion Systems Institute ( IPSI ) . We wish to thank Helge Schuett and Wolfgang Schuler for their helpful comments . We owe special thanks to Erich Neuhold and Norbert Streitz for stimulating discussions . 6 References [ Akscyn , Mc Cracken , Yoder , 1988 ] R . M . Akscyn , D . L . Mc Cracken & E . A . Yoder . KMS : A distribu - ted hypermedia system for managing knowledge in organizations . Communications of the ACM , 31 ( 7 ) : 820 – 835 , July 1988 . [ Brown , 1987 ] P . J . Brown . Turning Ideas into Products : The Guide System . In Proceedings of the First ACM Workshop on Hypertext ( Hypertext ‘87 ) , pages 33 – 40 , University of North Carolina at Chapel Hill , November 13 – 15 , 1987 . 30 [ Conklin , 1987 ] J . Conklin . Hypertext : An Introduction and Survey . Computer Magazine , 20 ( 9 ) : 17 – 41 , September 1987 . [ Conklin , Begeman , 1988 ] J . Conklin & M . L . Begemann . gIBIS : A Hypertext Tool for Argumentation . ACM Transactions on Office Information Systems , 6 ( 4 ) : 303 – 331 , October 1988 . [ De Young , 1990 ] L . De Young . Linking considered harmful . In A . Rizk , N . A . Streitz & J . André ( Eds . ) , Hypertext : Concepts , Systems and Applications ( Proceedings of the European Conference on Hypertext , Paris , France , November 1990 ) , pages 238 – 249 . Cambridge : University Press . [ Edwards , Hardman , 1989 ] D . M . Edwards & L . Hardman . ’Lost in Hyperspace’ : Cognitive Mapping and Navigation in a Hypertext Environment . In : R . McAleese ( Ed . ) . Hypertext : theory into practice , pages 105 – 125 . Oxford : Intellect Limited , 1989 . [ Halasz , 1988 ] F . G . Halasz . Reflections on Notecards : Seven Issues for the Next Generation of Hyper - text Systems . Communications of the ACM , 31 ( 7 ) : 836 – 852 , July 1988 . [ Halasz , Moran , Trigg , 1987 ] F . G . Halasz , T . P . Moran & R . H . Trigg . NoteCards in a Nutshell . In J . M . Caroll & P . P . Tenner ( Eds . ) . Proceedings of the Conference on Human Factors in Computing Sy - stems and Graphics Interfaces , Toronto , Canada , April 5 – 9 , 1987 . [ Halliday , Hasan , 1976 ] M . A . K . Halliday & R . Hasan . Cohesion in English . London : Longman , 1976 . [ Hannemann , Thuering , Streitz , 1990 ] Hannemann , J . Thuering , M . & Streitz , N . A . : Schreiben als De - signproblem : Ein integrativer Ansatz . Paper presented at the 37th Conference of the German Psycho - logical Association , September 23 – 27 , 1990 , Kiel . An abbreviated version has been published in D . Frey ( Eds . ) Proceedings of the 37th Congress of the German Psychological Association . Goettingen : Hogrefe , 1990 . [ Mann , Thompson , 1987 ] W . C . Mann & S . A . Thompson . Rhetorical structure theory : A theory of text organization . In : L . Polanyi ( Ed . ) . Discourse structure , Norwood , N . J . : Ablex , 1987 . [ Marshall , Irish , 1989 ] C . C . Marshall & P . M . Irish . Guided Tours and On - Line Presentations : How Authors Make Existing Hypertext Intelligible for Readers . In Proceedings of the 2nd ACM Conference on Hypertext ( Hypertext ‘89 ) , pages 15 – 26 , Pittsburgh , PA , November 1989 . [ Pohl , 1982 ] R . F . Pohl . Acceptability of story continuation . In : A . Flammer & W . Kintsch ( Eds . ) . Dis - course Processing , Amsterdam , North - Holland , 1982 . [ Schuett & Streitz , 1990 ] Schuett , H . & Streitz , N . A . : HyperBase : A Hypermedia Engine Based on a Relational Database Management System . In A . Rizk , N . Streitz , and J . Andrè ( Eds . ) , Hypertext : Con - cepts , Systems , and Applications . Proceedings of the European Conference on Hypertext 1990 ( No - vember 27 – 30 , 1990 ) . Cambridge : Cambridge University Press , Electronic Publishing Series . [ Schuler & Smith , 1990 ] Schuler , W . & Smith , J . B . : Author’s Argumentation Assistant ( AAA ) : A Hy - pertext - Based Authoring Tool for Argumentative Texts . In A . Rizk , N . Streitz , and J . Andrè ( Eds . ) , Hy - pertext : Concepts , Systems , and Applications . Proceedings of the European Conference on Hypertext 1990 ( Nov . 27 – 30 , 1990 , Paris , France ) . Cambridge University Press , Electronic Publishing Series . [ Searle , 1980 ] J . R . Searle . Minds , brains , and programs . The Behavioral and Brain Sciences , ( 3 ) : 417 – 457 , 1980 . [ Smolensky , Fox , King , Lewis , 1988 ] P . Smolensky , B . Fox , R . King , C . Lewis . Computer - aided rea - soned discourse or , How to argue with a computer . In : R . Guindon ( Ed . ) . Cognitive Science and its Ap - plications for Human - Computer Interaction , pp 109 – 162 , 1988 . [ Streitz , Hannemann , Thuering , 1989 ] N . A . Streitz , J . Hannemann & M . Thuering . From Ideas and Arguments to Hyperdocuments : Travelling through Activity Spaces . In Proceedings of the 2nd ACM Conference on Hypertext ( Hypertext ‘89 ) , pages 343 – 364 , Pittsburgh , PA , November 5 – 8 , 1989 . [ Trigg , 1988 ] R . H . Trigg . Guided Tours and Tabletops : Tools for Communicating in a Hypertext Envi - ronment . ACM Transactions on Office Information Systems , 6 ( 4 ) : 398 – 414 , 1988 . [ Trigg , Irish , 1987 ] R . H . Trigg & P . M . Irish . Hypertext Habitats : Experiences of Writers in NoteCards . In Proceedings of the First ACM Workshop on Hypertext ( Hypertext ‘87 ) , pages 89 – 108 , University of North Carolina at Chapel Hill , November 13 – 15 , 1987 . [ Toulmin , 1958 ] S . Toulmin . The uses of argument . Cambridge : Cambridge University Press , 1958 . [ van Dijk , Kintsch , 1983 ] T . A . van Dijk & W . Kintsch . Strategies of Discourse Comprehension . Orlan - do : Academic Press , 1983 . 31 [ Zellweger , 1989 ] P . T . Zellweger . Scripted Documents : A Hypermedia Path Mechanism . In Proceed - ings of the 2nd ACM Conference on Hypertext ( Hypertext ‘89 ) , pages 1 – 14 , Pittsburgh , PA , November 5 – 8 , 1989 .