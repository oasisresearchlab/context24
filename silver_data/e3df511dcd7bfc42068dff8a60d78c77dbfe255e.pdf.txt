Iterative Integration of Visual Insights during Scalable Patent Search and Analysis Steffen Koch , Harald Bosch , Student Member , IEEE , Mark Giereth , and Thomas Ertl , Member , IEEE Abstract —Patents are of growing importance in current economic markets . Analyzing patent information has , therefore , become a common task for many interest groups . As a prerequisite for patent analysis , extensive search for relevant patent information is essential . Unfortunately , the complexity of patent material inhibits a straightforward retrieval of all relevant patent documents and leads to iterative , time - consuming approaches in practice . Already the amount of patent data to be analyzed poses challenges with respect to scalability . Further scalability issues arise concerning the diversity of users and the large variety of analysis tasks . With “PatViz , ” a system for interactive analysis of patent information has been developed addressing scalability at various levels . PatViz provides a visual environment allowing for interactive reintegration of insights into subsequent search iterations , thereby bridging the gap between search and analytic processes . Because of its extensibility , we expect that the approach we have taken can be employed in different problem domains that require high quality of search results regarding their completeness . Index Terms —Visual analytics , graphical user interfaces , information search and retrieval . Ç 1 I NTRODUCTION P ATENT analysis is an important task for a large variety of professionals , aiming at different objectives , while the amount of patent applications continuously increases . Statistics of the World Intellectual Property Organization ( WIPO ) [ 1 ] illustrate that there have been 1 . 85 million new patent filings in 2007 , 764 , 700 of them have been granted , and 6 . 3 million were in force , worldwide . As a consequence , electronic support systems are needed to assist patent analysts accomplishing their tasks . We presented the PatViz system [ 2 ] , which provides facilities for bridging the gap between retrieving and analyzing patent material by providing seamless integration of derived insights in consecutive query refinement . In this context , positive effects of gaining insight through visual exploration , enhancement of the iterative analysis process itself , and the consequential improvement of analytic scalability were described in detail . The discussion of other scalability issues , however , was largely omitted in this previous work . The efforts of the research program “Scalable Visual Analysis , ” 1 in which PatViz will be further developed , reflect the importance of scalability for any analysis . Therefore , this paper explores scalability aspects of PatViz more deeply and presents details about the system’s information retrieval back end . Due to the huge amount of available patent information , its high dimensionality , and heterogeneity , tools for patent analysis must be scalable with respect to visualizing this information appropriately , and , of course , the selection of metaphors that are suitable to transport insight to users . Prior art search , the monitoring of competitors , trend recognition , technology assessment , freedom to operate analysis , and objecting to infringing / trivial patents are typical tasks in business life and comprise just an excerpt of common objectives in patent analysis . All of these goals , which require different search strategies , have to be addressed by patent analysis tools . Therefore , task scalability is an important aspect that has to be taken into account . Apart from intellectual property specialists who are involved with the patent strategies of a company and reviewers from patent offices , many parties are interested in patent information . These include experts from the finance sector , patent lawyers , scientists , and many others . As a consequence , the patent analysis system must be adaptable to their specific needs , which introduces further scalability requirements for the support of various user groups . Another scalability aspect arises when different working environ - ments and infrastructural prerequisites are considered . While already the large amount of data makes patent analysis a hard task , also the complexity of available patent material hinders straightforward access to the information needed . For obvious reasons , applicants are trying to produce patent applications that still follow the rules of patentability , yet they also aim at achieving a maximum coverage for their patents , which again increases search complexity and judgment of their relevance . Since patent applications can address a large variety of technical fields , the language used within these sectors might differ greatly due to terminology and phrases that are commonly used within one of these fields . Furthermore , some patent applications are multilingual , others are only accessible in the language of the country where they have been applied for . Especially the claims section of patent documents makes use of legalese , which further exacerbates their IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 557 . The authors are with the Institute for Visualization and Interactive Systems , University of Stuttgart , Universitaetsstrasse 38 , 70569 Stuttgart , Germany . E - mail : { kochsn , bosch , giereth , ertl } @ vis . uni - stuttgart . de . Manuscript received 7 Dec . 2009 ; revised 29 Mar . 2010 ; accepted by AEIC Ming C . Lin 26 Apr . 2010 ; published online 2 June 2010 . Recommended for acceptance by J . J . van Wijk . For information on obtaining reprints of this article , please send e - mail to : tvcg @ computer . org , and reference IEEECS Log Number TVCGSI - 2009 - 12 - 0279 . Digital Object Identifier no . 10 . 1109 / TVCG . 2010 . 85 . 1 . DFG Priority Program “Scalable Visual Analysis” ( SPP 1335 ) , subproject “Scalable Visual Patent Analysis , ” www . visualanalytics . de . 1077 - 2626 / 11 / $ 26 . 00 (cid:2) 2011 IEEE Published by the IEEE Computer Society readability and reduces their retrievability for inexper - ienced patent searchers . In addition to the difficulties described above , problems common to the retrieval of natural language texts ( e . g . , ambiguities ) further increase the complexity [ 3 ] . All the issues pointed out in this paragraph pose challenges with respect to data scalability and retrieval scalability and are the most demanding problems to solve in patent analysis . As part of the EC - project “PATExpert” [ 4 ] , a new interface for advanced patent navigation and visualization , called “PatViz , ” has been developed . In PatViz , special attention has been paid to overcoming some of the previously described scalability problems , such as patent information overload , simplification of patent search and analysis , consideration of different user groups and tasks , as well as lowering the entry barrier for inventors that are not patent experts . As a consequence , one of the primary goals was to directly support the iterative patent retrieval cycles by utilizing interaction on the visual query representation and result set views to leverage insight integration into sub - sequent refinement cycles , since iterative refinement is the characteristic feature of patent search . We included arrange - ments supporting collaboration and training of users . Measures have been taken to introduce basic analysis provenance including visual analysis steps , thereby making findings better traceable . Special focus has also been put on the extensibility and flexibility of the system . We , therefore , expect that the approach we have taken is also suitable for different problem domains involving information retrieval of unstructured data and areas in which high quality of search results regarding their completeness is of importance . The main body of this paper is organized as follows : After an overview of related work in the field of patent analysis , further state of the art is referenced in the description of the different visualization facilities . Section 3 provides a closer examination of the patent analysis process . Section 4 introduces the PatViz system for visual patent analysis . The system’s scalability aspects are discussed in Section 5 . Subsequently , results of the user evaluation are presented in Section 6 , followed by the concluding Section 7 . 2 R ELATED W ORK Patent information is complex and potentially ambiguous as has been pointed out in detail in [ 2 ] . Analyzing patent data still requires human judgment to achieve good results , especially with respect to completeness and relevance of findings . It , therefore , constitutes a task that cannot be automated completely . However , combining interactive visualization and retrieval techniques intelligently can be a suitable approach to support users in their tasks . According to Thomas and Cook [ 5 ] , visual analytics utilize the capabilities of human visual perception to explore and explain large amounts of information . Scal - ability is hereby identified as a major challenge in the following respects : information scalability , visual scalability , display scalability , human scalability , and software scalability . In this paper , we will , therefore , discuss the PatViz user interface and also the implications raised by embedding it into the PATExpert prototype , using a slightly different classification of scalability . The most significant difference is the omission of display scalability . Instead , we address displays within the visual scalability and include a brief discussion of platform scalability issues . Information scal - ability is an aspect that has also been taken into account during the PATExpert project and it plays an important role in all of the back - end services . Here , not only information retrieval [ 6 ] , but also Natural Language Processing ( NLP ) is of importance [ 7 ] . There is also a significant increase in scientific research in patent information retrieval in general as well as NLP tasks in the intellectual property domain , as is evident by the rise of workshops , conferences , and interest groups like NTCIR , 2 IRF , 3 and others . However , information scalability also influences design decisions for the front end of an analytic system . To distinguish these aspects from scalability improvements in the information retrieval back - end services , we refer to them as data scalability aspects in the context of this paper . We also split human scalability to user and task scalability , thereby addressing the diversity of tasks and different users’ experience levels in addition to collaboration . All other terms regarding scalability are interpreted according to Thomas’s and Cook’s definition . Patent material contains nearly all data types as enumerated by Shneiderman [ 8 ] and , accordingly , methods to cope with multivariate data have to be employed . We account for multivariate data by using multiple coordinated views [ 9 ] allowing users to take diverse perspectives on the problem at hand . Exploration of these perspectives and insight detection with multiple views is supported through brushing and linking . In the following paragraphs , previous work in the field of patent analysis as well as related research and visual analysis systems will be described briefly . Citation analysis [ 10 ] and patent citation analysis ( see , in particular , [ 11 ] , [ 12 ] ) are widespread techniques for detecting the structure of document relations . Commercial products , such as Thom - son Aureka 4 or Delphion Citation Link , 5 provide citation link visualizations . An example for hierarchical structures within patent metadata is the International Patent Classifi - cation 6 ( IPC ) or the United States Patent and Trademark Office ( USPTO ) patent classification , which is used in [ 13 ] to visualize the evolution of patent spaces by displaying sequences of Treemaps [ 14 ] . Systems for the evaluation of structured data such as Polaris [ 15 ] enhance analysis tasks by providing techniques for direct manipulation of data views . WireVis [ 16 ] , for example , allows online reclustering of large amounts of transaction records to search for suspicious patterns . While those systems provide feasible approaches for relational data , e . g . , from data warehouses , the situation in patent analysis differs from such a scenario due to the incorporation of text ( and image ) retrieval leading to unsharp and uncertain results . Good examples for systems that address the analysis of text document collections are Jigsaw [ 17 ] and IN - SPIRE [ 18 ] . Contrary to our system , both approaches focus on medium sized and locally available 558 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 2 . http : / / research . nii . ac . jp / ntcir / . 3 . http : / / ir - facility . org / . 4 . http : / / science . thomsonreuters . com / m / pdfs / aureka _ factsheet . pdf . 5 . http : / / www . delphion . com / products / research / products - citelink . 6 . http : / / www . wipo . int / classifications / ipc / en / . collections . Jigsaw employs entity co - occurrence analysis in short reports to guide the user on which report to read next . IN - SPIRE projects the documents into a two - dimensional view and allows for comparing groups that relate to combinations of search queries . The iterative cycle of 1 ) query formulation , 2 ) visual representation of result sets , and 3 ) examination of the results is an important aspect of patent search and analysis . Current publicly available systems for patent search such as esp @ cenet 7 or DEPATISnet 8 provide either form - based or textual interfaces for query formulation and represent the results as lists and / or text fragments . Some of the commercially available systems , like Matheo Analyzer 9 and ANAVIST , 10 provide visualization of result sets either based on patent metadata or patent texts . Another advanced interface that offers better support for iterative query refinement , but only by the means of a textual interface , is Questel’s QPAT . 11 Other significant research in the context of this paper includes methods that build queries visually [ 19 ] , [ 20 ] , [ 21 ] , [ 22 ] —an overview can be found in [ 23 ] . As opposed to these query formulation approaches , our system adds the option to integrate multiple query languages and ways to interconnect query and result set view through visual insight integration . The approach we took relies on the integration of different patent search facilities . In contrast to metasearch engines , which typically combine different search engines that provide similar expressiveness , the PATExpert back end allows for the combination of semantically different search facilities and the integration of their specific features in a visual interface . With regard to collaboration , the approach mentioned above automatically raises the question for insight manage - ment as proposed by Chen et al . [ 24 ] utilizing an insight taxonomy and fact management framework . Other ap - proaches , such as in ManyEyes [ 25 ] or even more tailored to the visual analytics cycles as in the work by Shrinivasan and van Wijk [ 26 ] , already realize explicit insight management in different ways . We follow a method based on provenance analysis similar to VisTrails [ 27 ] . However , our approach records insights at a coarser level . As in VisTrails , our method is embedded in the analysis itself without forcing users to share insights explicitly and without interrupting them in their task . 3 T HE P ATENT A NALYSIS P ROCESS While the motivation of different groups of patent information users may differ greatly , searching for relevant patent information is part of almost every patent analysis task . Compared to Web search , retrieving patent informa - tion is much more demanding . A user’s need in Web search is generally satisfied by a few precise hits . Patent analysis , instead , must usually take into account all relevant patent documents . It is very difficult to query patent data without missing relevant information and without getting over - whelmed by very large result sets that cannot be handled efficiently by users any more . Much expertise and time is required to find a complete patent subset comprising all the relevant information without containing too much noise . All the mentioned characteristics lead to a process for patent analysis that is common in the domain . Fig . 1 depicts this process , which consists of three stages , namely , patent retrieval , patent result set analysis , and patent detail analysis . Beginning with an initial search query that describes the object of investigation roughly , the examiner iteratively refines the query . Hereby , obviously irrelevant clusters of patent documents are excluded based on aspects that were found in the documents returned from the search engine . If the examiner finds new features that also describe the object of investigation , e . g . , synonyms of already used keywords , the query is refined to widen the result set . These refinements are repeated until the examiner is confident that all relevant patent documents are contained within the result set and it does not comprise more documents than can be handled efficiently . The process described above explains why Boolean retrieval systems [ 3 ] are highly popular in the patent domain . The examiner relies on a system that includes and excludes features from the result set as precisely as the query describes . Otherwise , queries of that size could not be handled and the relevance of the result set could suffer . However , not only the natural language text content of patents hinders their retrievability , it is also the large amount of different types of data that make patent information analysis a challenging task . Depending on the user’s analytical task , different aspects fromthe pool ofpatent data might beof interest , either to start the retrieval with , or to drill down to certain aspects within the relevant set of already retrieved patent documents . 4 P AT V IZ As previously stated , support for iterative refinement of search requests should be an essential objective of patent search software . Thereby , query modification typically aims at either narrowing the request to remove noise from the results , or at widening the search because the user wants to find additional relevant patents . In either case , the insight that generates a user’s desire for refinement is normally KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 559 Fig . 1 . The patent analysis loop . 7 . Web - based service interface for patent search of the European Patent Office , http : / / ep . espacenet . com . 8 . http : / / www . dpma . de / service / depatisnet . html . 9 . http : / / www . matheo - analyzer . com / . 10 . http : / / www . stn - international . de / stninterfaces / stnanavist / stn _ anavist . html . 11 . http : / / www . qpat . com / index . htm . perceived through the display of the previous result set data . Hence , patent search software needs an efficient feedback loop to transfer insights from result set exploration to the query formulation . Our approach is different from the dynamic query approach introduced by Ahlberg et al . [ 28 ] and realized in systems - like Polaris [ 15 ] . The main dissim - ilarity is that the underlying back - end systems do not guarantee the completeness of a request’s result . Because completeness of results is of high priority in patent search , users are forced to build trust in their retrieved results by carrying out the described iterative query process . PatViz was built as a graphical front end for a set of different search engines and patent document analysis services developed in PATExpert . However , the patent domains accessible by PATExpert’s back - end systems were restricted 12 to the IPC main classes “optical recording” and “machine tools . ” The essential components of PatViz comprise a querying system , a multitude of visual result set representations , and the linkage between them . All these components are bundled in a desktop - like application that handles the data management and event propagation between the components . The remainder of this section mirrors the structure of the PatViz system itself and introduces its essential components . 4 . 1 Query System Querying the retrieval system is the initial task that has to be performed when working with a patent information system . This is true for almost every use case independent of the analysts’ specific goals . The central idea of our approach is the tight linkage between query reformulation and result representation . To understand this linkage , one has to understand the querying system of PATExpert . As described in Section 3 , queries in the patent domain tend to get complex and large . In PATExpert , it is possible to integrate different search facilities in one query , adding even more potential for complex queries . In its current state , PATExpert offers the following search facilities [ 6 ] : full text search , metadata search , image similarity search , semantic search , and document similarity search , whereby the latter represents a special case of full text search . The full text search engine provides conventional keyword search in our patent analysis systems . Patent full texts as well as all metadata are stored within a relational database . The image similarity search is accomplished by a system based on a vector space model . Thereby , feature vectors are computed from the images through several preprocessing steps . The semantic information extracted from the patent documents is stored in a W3C semantic Web format , which is accessible through a semantic repository . Each query subsystem has its own formal query language . To facilitate the usage of all query subsystems in one coherent interface , a possibility to integrate them as well as their query languages had to be developed first . The combination of different search expressions from different search facilities is possible through a Boolean integration language . 4 . 1 . 1 Boolean Integration of Search Facilities Providing different search engines that can be combined through a Boolean integration language allows for stating complex and powerful queries , but also makes query creation a sophisticated task for the user . To compensate the complexity of the new , combined query language , a visual query editor has been developed that is directly linked to a conventional textual interface . As a requirement , the editor had to provide a clear view of the logical structure of the whole query and a form - based way to create search expressions for each of the different facilities . The result of this integration can be seen in Fig . 2 . In order to create an appropriate metaphor for the Boolean integration language , we decided to use one that is closely related to the very common Syntax Diagrams [ 29 ] . Therefore , our approach uses node - link diagrams with an orthogonalized circuit - like graph layout as displayed in the right half of Fig . 3 . The set of operators for the Boolean integration language is limited to “AND , ” “OR , ” and “NOT . ” Links describe a combination of these constraints correlating directly with the binary operators “AND” and “OR” inside the visualization . A sequential link between two nodes always expresses the “AND” relation and has the semantical meaning that both constraints represented by the connected nodes have to be fulfilled by a patent to pass the filter function . A branching link , on the other hand , represents an alternative ( “OR” ) and has its semantic equivalent in a conjunction of filtered results of every 560 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 Fig . 2 . The graphical representation of combined search expressions for different retrieval facilities : Image similarity search ( blue ) , semantic search ( gray ) , keyword search ( green ) , and metadata search ( orange ) . 12 . This restriction was necessary to perform the natural language processing on the patent material , which was a prerequisite for the fulfillment of other scientific objectives in PATExpert . Fig . 3 . Orthogonalized layout of a text query with Boolean operators in text and graphical form . branch that belongs to the same junction . The “NOT” operator is represented by a box , which encloses the negated constraint . The boxes around each operator identify the scope of a “NOT” operator very clearly , as can be seen in red in Fig . 3 , too . Users can identify which terms are part of which Boolean operation , where the scope of an operator ends , and they can spot the positions where they might want to alter the query . 4 . 1 . 2 Creation of Search Statements The creation of query terms is supported by forms corresponding to the specialized subqueries . This ensures that only syntactically valid search terms can be created and it frees the user from the cognitive task of remembering possible filter operations and values by presenting them . Further interaction functionality allows to zoom and pan the graphical representation of the constructed query . Within the hierarchical graph representation , nodes can be zoomed in , while other nodes are put into the background and complex nodes can be collapsed / expanded to further enhance comprehensibility of the query graph . A string containing the query text is displayed in addition to the graphical representation . It also accentuates the logical structure of the query by reformatting the input with line breaks and indentation like in the example in the left half of Fig . 3 . On the one hand , this ensures that expert users who are familiar with the query language of the different search engines can still enter queries directly . On the other hand , having both representations available can help inexper - ienced users to learn the query language vocabulary . 4 . 2 Result Set Exploration The second group of components that is relevant to our interactive query refinement task is the representation of the query’s result set . PatViz provides 10 different views of the result set , which are shown in Fig . 4 . For their integration into the PatViz environment , all views must provide interfaces for basic brushing and linking operations . This means that they must be able to understand and create selection events . Every brushing operation in one view results in the selection of a subset of patent documents . This subset is encapsulated in a selection event and broadcast through the PatViz environment . When other views receive such an event , they have to display the selection within their view appropriately . For example , the world map varies the saturation and color of the countries according to the number of selected documents filed within the country . However , simply selecting a subset of documents is not enough to be able to reflect interesting subset definitions to the search query . Therefore , the views also need to deliver a description of the filter operation used to create the subset . In the example of the world map , this could be “ filing - country ¼ Sweden ” if users mark Sweden , or a concatenation of such statements if they select a multitude of countries . With this increased self - descriptiveness of selections , we can enrich the selection management with interactive adjustments of the underlying filter mechan - isms as well as create appropriate filter definitions for the search query reformulation . Within result set visualization environments , traditional interaction techniques for selecting specific data subsets KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 561 Fig . 4 . All available result set views in the PatViz desktop . These are from top to bottom and from left to right : 1 . Patent Graph —a configurable graph view that can show various connections between entities of the result set . 2 . World Map —a distribution of the patent documents over the filing countries . 3 . 3D IPC Treemap —a distribution of the patent documents over a classification schema shown in a 3D Treemap . 4 . The same in 2D . 5 . Aggregation Tree —a tree view that can aggregate the result set by an adjustable hierarchy . 6 . Text View —a viewer for patent document texts that can overlay results of the linguistic analysis and allow for intradocument navigation . 7 . Term Cloud —a cloud of words that refers to the most frequent terms . 8 . Geo - Timeline —a scatterplot of the filing date and filing country of patent documents . 9 . Bar Charts —a simple bar chart aggregation of the set by one choosable metadata field . 10 . Table —a table containing the most important data of the patent documents like number , title , and applicant . 11 . Selection Management —a graph - based tool to store , combine , and adjust selections . from the visualized information space may not be sufficient . Especially if the selection operation comprises separated subselections in multiple linked views of aggregated data , the selection of a particular data set may be difficult or even impossible . Therefore , PatViz contains a graph - based tool for visual selection management allowing for the combina - tion of data subsets by applying set operations on them . This tool provides increased expressiveness over classical approaches by utilizing them as building blocks for more complex extraction strategies . The tool itself provides a graph view ( see view 11 in Figs . 4 and 5 ) that contains nodes serving as interactive widgets . The directed graph , which can be built in a user - steered process , comprises three different types of nodes : content nodes , filter nodes , and operator nodes . In its initial state , the tool displays a single - source content node representing the entire set of patent documents contained in the current result set . Content nodes have a vertical bar attached to them symbolizing the size of the set they represent in relation to the whole set as imported from another view . Additionally , the bar is labeled with the exact size of the set . Content nodes can be connected to filter nodes , which constrain one of the set’s attributes , in order to restrict a content node’s set of documents . The result of the restriction is another content node with the reduced document set . The third type of nodes constitutes set operator nodes . These nodes allow for the combination of different content nodes , and thus , can have an arbitrary number of incoming edges and one outgoing edge , each again connected to corresponding content nodes . Boolean combinations of filtering constraints are ex - pressed directly by the graph structure . We allow the usage of explicit set operators , i . e . , union and intersection , via additional nodes besides the implicit combination contained in the graph structure itself , i . e . , sequences and branches . In contrast to the filter / flow metaphor [ 30 ] , these operators facilitate the combination of arbitrary sets of data objects without the need to generate multiple instances of a particular filter just to apply it in different combinations . Arbitrary input nodes can be created for our graph simply by performing a “classic” selection operation in one of the other result set views . DataMeadow [ 22 ] describes a related , also network - based approach , to combine filters on multidimen - sional data , whereby different aspects can be filtered at once using interactive visual metaphors called DataRoses . The construction of the graph itself is performed completely by the users . By guiding users when they interact with graph widgets , the creation of illegal graph configura - tions is prevented . Operations on the selection and filter component can be performed via direct manipulation . This applies to all types of nodes and their Boolean combination . Different filter nodes are created with respect to the data type of the property that should be constrained . After combining different sets and parameterizing filter nodes , every docu - ment subset can be reflected back to the result set visualization by selecting an arbitrary content node . 4 . 3 Query Refinement through Insight Integration This section emphasizes the importance of the described mechanismstointegrateresultsetrelatedinsightstoselection management and query formulation . Here , several levels of insight integration in the PatViz system can be identified . As stated earlier , reading documents in the patent domain tends to be rather laborious , but the documents provide a variety of metadata for creating aggregations , relations , and statistics . Thus , it is possible to create a rich set of views on result sets . Without integration , the interactions provided by an individual view are restricted to adjustment of view - dependent parameters like sorting , filtering , highlighting , zooming , and panning . The user can only gain insights by exploiting the set’s metadata , which is related to the current view . The first level of integration is brushing and linking between the views to make connections in the result set visible , e . g . , by cross - highlighting , the user can answer questions about the frequent filing countries of the applicant with the highest number of patents in the set . While being a powerful tool , brushing and linking can only show connections between the selection in one view and its representation in the other views . The second level of integration is the saving and recombining of selections . Multiple views can now be used to define subsets and combine them employing set operators , allowing the user to answer the same type of questions as above but with additional restrictions from other views , e . g . , Who is the applicant with the highest number of patent documents published prior to the year 1989 from Spain within my result set ? This question could also be formulated as a new query , but this would make the combination of the answer with other subsets of the result set more complicated . So far , the user did not leave the phase of exploring the result set . While this phase is important for creating insights regarding the problem domain , it interferes with the patent domain’s need for high “relevance” values of result sets . Therefore , query widening has to come into play . The third level of integration addresses this need in form of a query refinement by result set interaction . The views are aware of the type of data they are displaying and are capable of providing a search expression based on the user’s selection in the corresponding view . The selection management compo - nent , in turn , is capable of combining the selections and their attached search term description to complex queries . Finally , the visual query editor allows for the direct incorporation of combined selections , to find more or exclude documents of the specified kind . This aspect cannot be achieved by a single component , but only by the whole system . 562 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 Fig . 5 . The combination of selections from different views . Nodes are created from the views ( blue arrows ) and combined using an operator node ( shaded blue ) . The combination is then filtered by a publication date ( red node ) and the result is available as the sink node ( bottom center ) . Because the selection management tool does not depend on the type of documents in the sets , and because filter options are derived from the underlying data model , the selection management and its insight integration facility can be applied to other application domains without great difficulty . A detailed description of a use case , exemplifying iterative patent search and analysis with the proposed tool set , can be found in [ 2 ] . 5 S CALABILITY This section describes the design decisions that have been made for PATExpert to address scalability in the broader sense of Thomas and Cook [ 5 ] , because they also affect the scalability of PatViz either directly or indirectly . Thereby , the following aspects have been considered : Data Scalability , Visual Scalability , Platform Scalability , and User and Task Scalability . Most of the design facets that are described in the subsequent section have already been realized in the prototype of PatViz and the PATExpert back end . However , we also discuss some ideas that are planned to be integrated in order to increase the system’s scalability . 5 . 1 Software and Data Scalability The whole PATExpert system features a distributed architecture with several data sources , search engines , and services . The two central components in this architecture are the merger ( Fig . 6 ) integrating different search engines as well as their data sources , and the PatViz front end steering the search and analysis process . 5 . 1 . 1 PATExpert Back - End System The back - end system of PatViz relies on unique identifiers for the orchestration of services , in this case , the patent number . As a consequence , the minimal representation of a patent document contains only a patent number . Two principal types of communication exist within our system : search requests and document requests ( cf . Fig . 6 ) . The difference between both request types can be described as follows : search requests define a constraint without available knowledge about concrete documents , thereby formalizing the users’ information needs , while document requests are used to retrieve the ( meta ) data associated with given patent numbers . This means , for example , that the search engine for metadata does not need to cope with the textual content of the patent document , and the semantic search engine can ignore the bibliographic data . A disadvantage of this approach is that primary domain objects ( patent documents ) are returned on search requests , while accessing objects that are indirectly related to patent documents requires cumber - some and possible expensive operations to retrieve them for further analysis in the visual component . As a benefit , the lean data exchange mechanism makes the system applicable to other domains requiring iterative analysis of unstructured data ( other document types , images , etc . ) . For the visual components , however , further mechan - isms have to be foreseen to make the system adaptable . The described design decision has not only been taken to achieve a greater separation of concerns , but also to reduce the initial data transfer , since it is not known which data associated with a document are needed by the visualization module later on . Through this simplification , the network load is reduced and the latencies of request response cycles of both request types are low . In addition to that , combined queries can be distributed to the corresponding different search back ends and can be run in parallel . Depending on the query structure , the system throughput can be even increased by letting the merger send back partial results of those query parts that are connected disjunctively . A system can be created that does not have single points of failure , by making the back - end services ( including the merger ) redundantly available . Even parallel execution of subqueries would theoretically be possible , but neither feature has yet been implemented in the prototype system . Furthermore , the described architecture provides a large degree of freedom with respect to the system’s extensibility . This applies to additional back - end services , e . g . , new query facilities or analysis services and also to new visual tools that can be incorporated into the front end as described in Section 5 . 1 . 2 . All back - end components are connected via XML - based Web Services to allow for their easy integration into a common Web infrastructure . Within these components , the merger service takes a key role . If a query will be executed , an XML representation of the query is generated to be encapsulated in a Web Service request . As sketched in Fig . 6 , the merger is responsible for interpreting this XML request , decomposing it into the different subqueries , querying each search service , merging the results , eliminating duplicate results , and delivering them back to the visualization module . In addition to the Boolean requests mentioned earlier , the merger is also capable of handling fuzzy queries and has mechanisms to incorporate user feedback for adjusting the score of result set entries . For more details on the merger service , see the description by Codina et al . [ 6 ] . To summarize , the described architecture has been designed in a manner that enhances the ( back end’s ) system with respect to data scalability and software scalability , by KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 563 Fig . 6 . The flow of communication within the querying system . The result query builder ( upper left ) is capable of incorporating user - triggered update information from the result set view ( lower left ) directly . The result set view is updated indirectly after requerying the merger service , which is connected to the different search facilities ( right ) . providing possibilities to extend the overall system with new or redundant back ends for enhancement of data throughput and the inclusion of additional retrieval facil - ities . This design also facilitates the system’s adaptation to different problem domains . 5 . 1 . 2 PatViz Module The visualization component PatViz is modularized into different parts that can be mapped to the different stages of the visual analytics cycle in the patent analysis process . Search / query phase , result set analysis stage , and detail examination provide different visualizations to let users take different perspectives on the problem space within the corresponding stage . All views fulfill a contract that allows for their interoperability with each other and at a coarser level with the specific requirements of the back end . The interfaces needed for the visual components will be discussed in the following paragraphs . The visualizations that are available for analysis should be designed as flexible as possible , because , e . g . , a bar chart can be used to display any kind of objects as long as there is some nominal and some scalar data available that can be related to each other in a meaningful way . Each view in PatViz , therefore , has to be able to provide capability information with respect to the type of data it can display . On the one hand , this allows for dynamic checks on the suitability of data that is routed to the view given that the data are self - descriptive enough . On the other hand , extensibility with views for other scenarios taking the same type of data is guaranteed . In PatViz , this is solved by using an additional object - oriented model of the data that is available for visualization tasks in the front end . Unfortunately , knowledge of the model is not enough to create abstractions for user - steered interactive selections in order to provide advanced brush - ing and linking mechanisms , because the semantics for the selection is not taken into account . Highlighting data in other views can be accomplished by considering only primary domain objects or their ID , respectively , as it is done for search responses . But well - defined selection semantics are necessary for the creation of complex insights and for reusing them in subsequent analytic iterations ( see Section 4 . 3 ) . The views for result set and detail analysis are easily exchangeable , if they can provide information about what kind of data they are capable to display , which kind of data they are displaying as concrete instances , and how the selection semantics are defined on them . Defining specific semantics is often difficult because , depending on the selection gestures that are available within a view , ambig - uous interpretations of the constraint that should be applied are almost unavoidable . Visualization components must , therefore , implement three interfaces including a capability interface , an interface that makes the displayed data accessible , and an interface that provides information of what kind of semantics is associated with selection gestures . To realize them , we employ an object - oriented data model ( Fig . 7 ) within the client and provide facades [ 31 ] for the single views to allow them to access the data in the way they need , e . g . , in a set or table - oriented manner . With the object - oriented domain model and the visual components knowing which kind of data they need , lazy loading of model data can be achieved . As has been discussed , a minimal object model solely consists of a set of primary object IDs . Because views know what data they are meant to display , activation of such a view can trigger the loading or computation of the corresponding additional data . Even more fine - grained loading strategies are possible , e . g . , as a consequence of zooming into the details of a view , but this bears the risk of unresponsiveness to user interactions , since possible latencies emerging from the back - ends Web infrastructure are difficult to control . In some cases , such as loading of patent texts or images into separate views as a response to a user interaction , this disadvantage is acceptable . The palette of available visual analysis views can be adapted according to the size of the patent set that is under analysis , since the requirements regarding the amount of data that is needed for each view is known before . At least a user commitment can be requested before perspectives are activated that would have negative effects on the client’s performance . The visual perspectives that are used for query creation do not only need to fulfill the contract to the described internal interfaces but must also obey external restrictions , which are dictated by the expressiveness of the available back - end search facilities . Extensibility of the query views requires an additional mechanism , which allows for the integration of further visual search perspectives . In PatViz , this is technically realized by a hierarchical parser / gen - erator module , as depicted in Fig . 8 . The module is capable of parsing / accepting the textual as well as the visual 564 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 Fig . 7 . A simplified example of the object - oriented model of PatViz . The model consists of the primary domain object ( Patent Document , in this case ) , but can also hold data that are related to the primary object , which can be added by lazy loading . Fig . 8 . Different query representations can be processed by the hierarchical parser and are transformed into a general query model , which again allows for generating the other representations . representation of the combined query language . If expres - sions or visual constructs of a specific sublanguage are encountered , they are forwarded to the corresponding subparser . Both representations are updated automatically , if the changes applied by a user to one of them are syntactically correct , which is not guaranteed in the case of modifying the textual query . Due to the hierarchical parser / generator concept , the query system can also be adapted to other domains or extended by additional search facilities by adding new subparsers that can be created semiautomati - cally . Such an approach is very helpful for the automatic generation of the textual part of the query . However , the visual representation and the representation that is sent to the merger and finally to the corresponding search engine have still to be developed manually . The development of solutions that also facilitate the creation of interactive visual metaphors using a descriptive formalism has not been fully developed in PatViz yet . First tests for Semantic Web data with techniques , borrowed from the Fresnel display vocabulary , 13 indicate that this is possible . 5 . 2 Visual Scalability The efficient usage of available display space is an important aspect of visual scalability , which can be improved through different visualization approaches and interaction methods . As many other tools , PatViz addresses this aspect on a per - view level by providing common interaction techniques such as zooming , panning , and scrolling for most of the single views that are available in the user interface . The following section will highlight the measures taken to advance usage of display space for PatViz’ multiple coordinated views interface . PatViz provides different tabs to hold the multiple coordinated views for each iteration of the analytic cycle , namely , the query view , result views , and detail views . On ( re ) submission of a modified query , a new tab containing the set of views and a copy of the submitted query is generated ( c . f . Fig . 9 ) . As a consequence , former analytic results remain available and can be accessed at some later point in time . All views can be detached from the main PatViz window on user request to allow for the synchro - nous use of different views that do not reside in the same tab . This is also of advantage if several monitors are available , helping to avoid situations where views occupy different displays at the same time with distracting monitor frames in between . Occlusion is often an issue for multiple view environ - ments . Because we make use of drag gestures for either moving insights from one view to another or highlighting a selection in them , overlapping windows pose a problem . While we are aware that most windowing systems provide techniques to perform dragging between overlapping windows , we are convinced that visual inspection of all views used at the same time is particular beneficial for complex analytic tasks , as long as enough display space is available . However , good alignment of a variety of perspectives within a multiple coordinated views environ - ment in order to prevent occlusion is not easy to achieve . Especially , if the view’s constraints , such as minimum perceivable size and aspect ratio , are taken into account . PatViz’ solution is quite simple but works well for arranging multiple views in a delimited rectangular area such as a tab . It applies an ordered 14 and squarified treemap layout [ 32 ] , [ 33 ] to place the views within one tab . The hierarchy for creating the treemap is trivial ; it consists of the tabbed parent window and just one child level , containing all currently activated views . Users have two options for ordering the views , either in sequence of their activation or in the same order as the corresponding buttons in the tool bar . The idea behind this kind of placement aims at helping users to keep their mental maps , thereby allowing them to track the available views more easily if new ones are added or old ones removed . Furthermore , the squarification of the views is an approximation to a good aspect ratio for most visualizations and users can still use interactive zooming and panning to adjust them to their needs . One other option we contemplated was to change the views’ orientation automatically , reducing structural zoom , and even recom - puting the layout of content of the views wherever possible . However , it quickly became obvious that such a massive change in multiple views confused users too much . 5 . 3 Platform Scalability In companies , patent search is often carried out in research and development , strategic planning , and other contexts , involving different departments . Platform scalability , there - fore , plays an important role , if heterogeneous IT - infra - structures and different working environments like workstations dedicated for patent analysis , common office computers , or laptops should be employed for analytic tasks . Open communities , such as researchers and other groups interested in patent analysis , also rely on easy access to such a system . Visualization systems and applications that are usable via standard technologies such as Web browsers or which can be easily deployed via the Internet greatly affect scalability as has been shown , e . g . , with ManyEyes [ 25 ] . Different systems having different capabil - ities regarding processing and graphic performance can be KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 565 13 . http : / / www . w3 . org / 2005 / 04 / fresnel - info / . 14 . At the moment , we employ the pivot - by - middle method for the ordered treemap layout . Fig . 9 . An illustration of the history of searches and their individual view configuration . From an initial query , the first tab ( Result 1 ) contains available and selected views . After integrating insights in the first query and resubmitting it , a new tab with a new set of views is instantiated ( Result 2 ) . It contains a copy of the modified query as the first view . addressed , if some flexibility for the visualization technique is foreseen . The PATExpert back end allows for flexible solutions concerning the location of data storage and execution of search requests . To achieve a similarly flexible solution for deployment of and access to the PatViz system , a variety of prototypes have been developed in order to evaluate different Web - based deployment approaches . The rich - client PatViz front end , as described in this paper , can be easily deployed to any computer with a current Java Runtime Environment using the Java WebStart technology . This was especially useful to demonstrate the prototype to remote partners in the consortium . Even if no installation of Java is available , large parts of the PatViz system can still be used . In this case , the application runs completely on the server component . To interact with the system , the user has a Web site with a query interface and dynamically updated images of the result set views . Whenever the user clicks on an image , the event is registered and transmitted to the server together with the location of the click using asynchronous JavaScript . The server reacts on the event and renders the result into an image to be sent to the user . While this works well for click events and keystrokes , drag operations suffer from the transmission delay . Currently , this solution comes at the cost of reduced interaction support . In between these two extremes , search requests and result set views are also executable in Java Applets . This allows for their integration into existing Web environments like forums and Wikis . An approach for collaborative patent search using visualization applets in a Wiki is described in [ 34 ] . 5 . 4 User and Task Scalability Scalability issues also arise with respect to those who use analysis systems and their specific tasks . On the one hand , users with different levels of knowledge and experience want to use the analytics system to accomplish a diversity of tasks . On the other hand , collaboration between users is an important aspect regarding user scalability . This section will give a brief overview of what has been done to support both aspects in PatViz . Documentation helps analysts to continue work com - menced by others , and therefore , enables collaboration . Further , it can also be used to teach new examiners which steps to take during a patent search . The visual selection management described in Section 4 . 2 allows users to save and combine selections in order to steer the search process . The resulting graph can be stored for later ( re ) use . By applying this selection management tool , the analysts automatically document steps of their analytic sessions , thereby generating provenance data . Furthermore , saved graphs can be applied to new result sets , serving as ready to use analysis steps . Saving the various stages of a performed analysis may also be of value with respect to accountability . ( However , some patent researchers have expressed con - cerns with regard to such a functionality due to some countries’ legal practice of increasing the fee for infringing patents if there is evidence that someone in the sued organization had prior knowledge of the patent in ques - tion . ) The visual selection management tool is also scalable with respect to the possibility of creating different selection and filter paths in parallel . Users can always choose and change one of the ( intermediate ) results that have been created and check the effects of their refinements by redisplaying them in linked views . To ensure that all necessary steps have been taken , analysts often employ templates that can be worked through for common tasks . In PatViz , these templates come in the form of parameterizable queries . A parameterized query consists of a template query and a list of variables . These variables have fixed positions once the query is saved . Upon loading the query , the user will be requested to deliver a value for each parameter . This mechanism allows for easy creation of forms that can start an initial query for a special patent search task or at least provide templates and basic strategies for common search objectives . Moreover , it is possible to define presets for result set visualizations that are well suited for specific tasks such as infringement search , freedom - to - operate search , etc . How - ever , users can select more than one or alternative views if they wish , and are not prevented from using arbitrary views either . This feature has been explicitly requested by patent specialists of the PATExpert consortium . The combination of view and layout presets with parameterized forms allows for a task - and user - oriented customization of the PatViz system . Varying user experience levels are addressed at different stages of the analysis cycle . This is valid for the query formulation as shown in Section 4 . 1 . 2 as well as for the result set analysis , which provides very common views , e . g . , charts , and more complex ones for experienced users . However , some scalability aspects are inherently con - flicting . While software scalability can be accounted for by using generic visualizations in order to make them suitable to depict a variety of scenarios , specialization of views with respect to the problem domain can provide better filtering and sorting options . But even if specialized visualizations are designed to be compact , precise , and scalable , they might require more user knowledge to be interpreted correctly , hence decreasing user scalability . Besides , in visual scalability , the goals may be contradictory . On the one hand , the system should organize views in a space - efficient manner , while retaining ordering , aspect ratio , and zoom levels , on the other hand , single views should be placeable on auxiliary displays . Finding appropriate solu - tions for these conflicts is possible in some situations , but typically comes at the cost of increased effort . 6 R ESULTS To show the suitability of the approaches taken in the PatViz system , two evaluation tasks with two different groups of participants were conducted ( c . f . [ 2 ] ) . The viability of using a visual query representation was validated through a ques - tionnaire , while a “think - aloud” evaluation with patent specialists was carried out to evaluate the overall system with focus on iterative insight integration . Moreover , the PatViz system was presented several times to an interested audience including patent specialists , who commented on the approach we have taken . As mentioned in Section 4 . 1 , the visual query system consists of two coordinated views—a text - based and a visual one . For evaluating the query tool , we recruited 15 persons who took part in answering a setup questionnaire . Two of 566 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 them were specialists from the intellectual property domain , the other 13 participants 15 were postgraduates from the Department of Computer Science at the University of Stuttgart , Germany . With respect to the suitability of the visual query building facility and , correspondingly , the visual metaphors that were used in it , the evaluators disagreed on whether the Boolean AND operator should be represented by a sequential or a branching metaphor ( analogous for the OR operator ) . Nevertheless , none of them had difficulties to interpret the metaphors correctly . The comprehensibility of the provided visual query example was high . By far most of the study participants interpreted the visual example queries correctly . The same holds true for the test persons’ ability to recognize operator scopes . The result of the questionnaire’s evaluation suggests that even without using the query tool for direct insight integration , the approach already provides an advantage over a purely textual interface . The viability of our concept for insight integration into subsequent search / analysis cycles was much more de - manding to test and required experienced patent specialists knowledgeable in the technical field of the test scenario . Our evaluation data set contained 236 . 613 patent documents in the field of “optical recording” and “machine tools . ” Since it was difficult to find external patent specialists knowledge - able in these fields , patent specialists from the consortium were asked to take part in a think - aloud evaluation . Naturally , the validity of such a test is limited by the fact that participants were involved in the PATExpert consor - tium as well as by the relatively small sample for this evaluation . Thus , the results are informally presented . One frequently expressed comment indicated that most of the patent experts never worked with a system providing interlinked and interactive visual interfaces . While this was also one of the system’s properties that was most appreciated by the users , it became clear that such features are very difficult to use without any training . Subsequently , the evaluators were asked to carry out the same analysis tasks they are performing in their daily work . Interestingly , all patent users agreed that the visual interface is a valuable means for creating and editing complex queries for different search engines , but some of them were puzzled when they had to use it for the first time . In subsequent discussions , it became clear that many , mostly form - based , interfaces for patent search are de - signed in the same way patent documents are structured . Of course , this is not reflected within an interface that allows for arbitrary combinations of different constraints for search facilities ; however , it might be a good starting point for future enrichment of the query visualization tool with a third view that takes this issue into account . Another observation is that most of the patent experts used views like the tag cloud , the charts , and the world map more frequently than the more sophisticated ones . Nevertheless , after a quick introduction , the study participants were able to integrate the other views successfully into their analysis . This suggests that user scalability—regarding support for various user groups by providing multiple perspectives on the problem space and tools requiring different knowledge levels—is beneficial , aside from addressing task scalability . The most significant benefit that has been identified by the test users was the support for iterative refinement of queries and patent sets . Also , the synergetic effect of using different views of the same set in parallel were appreciated by the users and the linking and brushing facilities were soon used extensively after the participants became more familiar with the system . The evaluators commented positively on the variability and power of the system resulting from the degrees of freedom in moving back and forth in the stages of the analysis process and between different perspectives within one stage of the process . Again , we consider this circumstance as an indication that our assumptions regarding visual scalability are at least partially met . Separate from the evaluation sessions , PatViz has been presented as a running system in orchestration with all other services during several demonstrations . The scalability , with respect to its distributed characteristics , was thereby successfully presented using a system setup with the different PATExpert services deployed on multiple laptops . To summarize , on the one hand , the flexibility and implicit functionality provided by the developed prototype is difficult to comprehend when users start working with the system without previous instruction . On the other hand , a powerful and flexible demonstration prototype that facilitates different patent analysis tasks has been created . This fact has been recognized by the test users and was positively emphasized by them during the test sessions . 7 C ONCLUSION AND F UTURE W ORK We presented PatViz , a system for patent search and analysis , and addressed a variety of scalability issues . Also , the system’s back end , developed during the PATExpert project , contributes in many different ways to the creation of a flexible and extensible system that exceeds current patent retrieval tools . Scalability has been successfully considered at different levels with respect to patent information , users and tasks , information visualization , and collaboration . However , improvement of one scalability dimension might influence others negatively . This becomes most obvious when enhancing visual scalability by adding sophisticated visual interaction mechanisms , which can decrease user scalability in the sense that more training is necessary to use them effectively . PatViz aims to make the process of patent analysis more scalable as a whole . It supports users directly in the iterative refinement of search results , thereby creating a system for visual patent analysis . This is accomplished by supporting patent searchers in addressing different search facilities within one visual interface , by its tight integration of a variety of views presenting different perspectives on patent result sets , and the means to integrate insights interactively from these result sets to improve the query for subsequent refinement of the patent space under analysis . As part of the DFG Priority Program 1335 “Scalable Visual Analytics , ” we currently continue our work within the field of visual patent information analysis in cooperation with the Institute for Natural Language Processing at the University of Stuttgart , Germany . The focus will be shifted to the retrieval of textual patent information in order to further KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 567 15 . One of the goals was to find out whether persons who are familiar with Boolean concepts would be able to interpret and use the visual representation correctly . Computer scientists as well as patent researchers possess this knowledge . increase the reliability of the retrieval results and to enhance users’ trust in these new retrieval techniques . Thereby , more emphasis will be placed on Named Entity Recognition in patent texts and the development of new solutions for patent classification problems . PatViz will be used as the basis for our developments in this field of research . A CKNOWLEDGMENTS The authors wish to thank all partners of the PATExpert consortium . The work presented in this paper was funded by the European Commission in context of the FP6 project PATExpert and is supported by the German Science Foundation ( DFG ) as part of the Priority Program 1335 Scalable Visual Analytics . Furthermore , they would like to thank all persons who took part in the evaluation and demonstration sessions for providing helpful insights , suggestions , and recommendations . R EFERENCES [ 1 ] Economic Studies , Statistics and Analysis Division , World Intellectual Property Organization ( WIPO ) , World Intellectual Property Indicators , 2009 Edition , 2009 . [ 2 ] S . Koch , H . Bosch , M . Giereth , and T . Ertl , “Iterative Integration of Visual Insights during Patent Search and Analysis , ” Proc . IEEE Symp . Visual Analytics Science and Technology ( VAST ’09 ) , pp . 203 - 210 , Oct . 2009 . [ 3 ] C . D . Manning , P . Raghavan , and H . Schu¨tze , Introduction to Information Retrieval . Cambridge Univ . Press , 2008 . [ 4 ] L . Wanner , R . Baeza - Yates , S . Bru¨gmann , J . Codina , B . Diallo , E . Escorsa , M . Giereth , Y . Kompatsiaris , S . Papadopoulos , E . Pianta , G . Piella , I . Puhlmann , G . Rao , M . Rotard , P . Schoester , L . Serafini , and V . Zervaki , “Towards Content - Oriented Patent Document Processing , ” World Patent Information , vol . 30 , no . 1 , pp . 21 - 33 , 2008 . [ 5 ] Illuminating the Path : The Research and Development Agenda for Visual Analytics , J . J . Thomas and K . A . Cook , eds . Nat’l Visualiza - tion and Analytics Center , 2005 . [ 6 ] J . Codina , E . Pianta , S . Vrochidis , and S . Papadopoulos , “Integration of Semantic , Metadata and Image Search Engines with a Text Search Engine for Patent Retrieval , ” Proc . Workshop SemSearch , S . Bloehdorn , M . Grobelnik , P . Mika , and D . T . Tran , eds . , pp . 14 - 28 , 2008 . [ 7 ] A . Potrich and E . Pianta , “L - ISA : Learning Domain Specific Isa - Relations from the Web , ” Proc . Sixth Int’l Conf . Language Resources and Evaluation ( LREC ) , 2008 . [ 8 ] B . Shneiderman , “The Eyes Have It : A Task by Data Type Taxonomy for Information Visualizations , ” Proc . IEEE Symp . Visual Languages , pp . 336 - 343 , Sept . 1996 . [ 9 ] J . Roberts , “State of the Art : Coordinated & Multiple Views in Exploratory Visualization , ” Proc . Fifth Int’l Conf . Coordinated and Multiple Views in Exploratory Visualization 2007 . ( CMV ’07 ) , pp . 61 - 71 , July 2007 . [ 10 ] H . G . Small , “Co - Citation in the Scientific Literature : A New Measure of the Relationship between Two Documents , ” J . Am . Soc . for Information Science , vol . 24 , no . 4 , pp . 265 - 269 , 1973 . [ 11 ] A . Jaffe and M . Trajtenberg , Patents , Citations & Innovations . MIT Press , 2002 . [ 12 ] L . Reeve , H . Han , and C . Chen , “Information Visualization and the Semantic Web , ” Visualizing the Semantic Web , V . Geroimenko and C . Chen , eds . , Springer , 2006 . [ 13 ] D . Kutz , “Examining the Evolution and Distribution of Patent Classifications , ” Proc . Eighth Int’l Conf . Information Visualisation 2004 ( IV ’04 ) , pp . 983 - 988 , July 2004 . [ 14 ] B . Shneiderman , “Tree Visualization with Tree - Maps : 2 - d Space - Filling Approach , ” ACM Trans . Graphics , vol . 11 , no . 1 , pp . 92 - 99 , 1992 . [ 15 ] C . Stolte , D . Tang , and P . Hanrahan , “Polaris : A System for Query , Analysis , and Visualization of Multidimensional Rela - tional Databases , ” IEEE Trans . Visualization and Computer Graphics , vol . 8 , no . 1 , pp . 52 - 65 , Jan . - Mar . 2002 . [ 16 ] R . Chang , A . Lee , M . Ghoniem , R . Kosara , W . Ribarsky , J . Yang , E . Suma , C . Ziemkiewicz , D . Kern , and A . Sudjianto , “Scalable and Interactive Visual Analysis of Financial Wire Transactions for Fraud Detection , ” Information Visualization , vol . 7 , no . 1 , pp . 63 - 76 , 2008 . [ 17 ] J . Stasko , C . Go¨rg , and Z . Liu , “Jigsaw : Supporting Investigative Analysis through Interactive Visualization , ” Information Visualiza - tion , vol . 7 , no . 2 , pp . 118 - 132 , 2008 . [ 18 ] P . C . Wong , B . Hetzler , C . Posse , M . Whiting , S . Havre , N . Cramer , A . Shah , M . Singhal , A . Turner , and J . Thomas , “IN - SPIRE Infovis 2004 Contest Entry , ” Proc . IEEE Symp . Information Visualization , Oct . 2004 . [ 19 ] C . Ahlberg and B . Shneiderman , “Visual Information Seeking : Tight Coupling of Dynamic Query Filters with Starfield Displays , ” Proc . ACM SIGCHI , pp . 313 - 317 , 1994 . [ 20 ] A . Spoerri , “Infocrystal , ” Proc . ACM SIGCHI , pp . 11 - 12 , 1994 . [ 21 ] R . Baeza - Yates , G . Navarro , J . Vegas , and P . De La Fuente , “A Model and a Visual Query Language for Structured Text , ” Proc . Symp . String Processing and Information Retrieval : A South Am . Symp . , pp . 7 - 13 , Sept . 1998 . [ 22 ] N . Elmqvist , J . Stasko , and P . Tsigas , “DataMeadow : A Visual Canvas for Analysis of Large - Scale Multivariate Data , ” Information Visualization , vol . 7 , no . 1 , pp . 18 - 33 , 2008 . [ 23 ] T . Catarci , M . F . Costabile , S . Levialdi , and C . Batini , “Visual Query Systems for Databases : A Survey , ” J . Visual Languages and Computing , vol . 8 , no . 2 , pp . 215 - 260 , 1997 . [ 24 ] Y . Chen , J . Yang , and W . Ribarsky , “Toward Effective Insight Management in Visual Analytics Systems , ” Proc . IEEE Pacific Visualization Symp . 2009 ( PacificVis ’09 ) , pp . 49 - 56 , Apr . 2009 . [ 25 ] F . Viegas , M . Wattenberg , F . van Ham , J . Kriss , and M . McKeon , “ManyEyes : A Site for Visualization at Internet Scale , ” IEEE Trans . Visualization and Computer Graphics , vol . 13 , no . 6 , pp . 1121 - 1128 , Nov . / Dec . 2007 . [ 26 ] Y . B . Shrinivasan and J . J . van Wijk , “Supporting the Analytical Reasoning Process in Information Visualization , ” Proc . ACM SIGCHI , pp . 1237 - 1246 , 2008 . [ 27 ] S . P . Callahan , J . Freire , E . Santos , C . E . Scheidegger , C . T . Silva , and H . T . Vo , “VisTrails : Visualization Meets Data Management , ” Proc . 2006 ACM SIGMOD , pp . 745 - 747 , 2006 . [ 28 ] C . Ahlberg , C . Williamson , and B . Shneiderman , “Dynamic Queries for Information Exploration : An Implementation and Evaluation , ” Proc . SIGCHI , pp . 619 - 626 , 1992 . [ 29 ] N . Wirth , Systematic Programming : An Introduction . Prentice Hall PTR , 1973 . [ 30 ] B . Shneiderman , “Dynamic Queries for Visual Information Seeking , ” IEEE Software , vol . 11 , no . 6 , pp . 70 - 77 , Nov . 1994 . [ 31 ] E . Gamma , R . Helm , R . Johnson , and J . Vlissides , Design patterns : Elements of Reusable Object - Oriented Software . Addison - Wesley / Longman Publishing Co . , Inc . , 1995 . [ 32 ] B . Shneiderman and M . Wattenberg , “Ordered Treemap Layouts , ” Proc . IEEE Symp . Information Visualization , pp . 73 - 78 , 2001 . [ 33 ] M . Bruls , K . Huizing , and J . van Wijk , “Squarified Treemaps , ” Proc . Joint Eurographics and IEEE VGTC Symp . Visualization ( VisSym ’00 ) , pp . 33 - 42 , 2000 . [ 34 ] M . Giereth and T . Ertl , “Visualization Enhanced Semantic Wikis for Patent Information , ” Proc . 12th Int’l Conf . Information Visualisa - tion ( IV ’08 ) , pp . 185 - 190 , 2008 . Steffen Koch received the Diplom in informatik from the University of Stuttgart , where he is currently working toward the doctor’s degree and is also a teaching assistant . Through his work for different software companies , he gathered practical experience in planning and developing analytics systems of different scales . His research interests comprise the fields of information visualization and visual analytics with a special focus on text document and business intelligence visualization . During his work within the EC - project “PATExpert , ” he was involved in the development of the patent visualization and analysis module . At the moment , he contributes to the priority program “Scalable Visual Analytics , ” which is funded by the German Research Foundation ( DFG ) . 568 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS , VOL . 17 , NO . 5 , MAY 2011 Harald Bosch received the Master of Science degree in information systems from the Uni - versity of Stuttgart and the Universita¨t Hohen - heim . He is with the Institute for Visualization and Interactive Systems at the University of Stuttgart , where he is currently working toward the doctor’s degree . His research interests comprise the fields of information visualization , human - computer interaction , and visual analy - tics with a special focus on text documents and semantic Web . During his work within the EC - project “PATExpert , ” he was involved in the development of the visualization module . He is a student member of the IEEE . Mark Giereth received the Diplom in informatik from the University of Stuttgart , where he is a former member of the Institute for Visualization and Interactive Systems . He headed the visualization subproject within the EC - project “PATExpert . ” His research interests include information visualization and human - computer interaction with a special focus on visualization of semantic data . Currently , he works as a software developer and consultant at Innova - tions Software Technology GmbH . Thomas Ertl received the master’s degree in computer science from the University of Color - ado at Boulder , and the PhD degree in theore - tical astrophysics from the University of Tu¨bingen . Currently , he is a full professor of computer science at the University of Stuttgart , Germany , and the head of the Institute for Visualization and Interactive Systems ( VIS ) and the Visualization Research Center of the University of Stuttgart ( VISUS ) . His research interests include visualization , computer graphics , and human - computer interaction , in general , with a focus on volume rendering , flow visualization , multiresolution analysis , and parallel and hardware accelerated graphics for large data sets . He is the coauthor of more than 300 scientific publications and served on several program and paper committees as well as a reviewer for numerous conferences and journals in the field . He is a member of the IEEE . . For more information on this or any other computing topic , please visit our Digital Library at www . computer . org / publications / dlib . KOCH ET AL . : ITERATIVE INTEGRATION OF VISUAL INSIGHTS DURING SCALABLE PATENT SEARCH AND ANALYSIS 569