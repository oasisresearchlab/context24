THE USE OF GUIDELINES IN INTERFACE DESIGN Linda TetzlaJf IBM , T . . J . Watson Research Center P . O . Box 704 Yorktown Heights , NY 10598 lst @ ibm . com ABSTRACT We studied the use of an evolving interface style book to evaluate the role of such guidelines in the develop - ment of siyle - conforming interface desi M . Although P the designs were judged JO . bc gene ~ al y col ~ orming , study participants had sgmficant ddlicxdty m inte - rpreting the guidelines . our designers were manifestl { task oriented and itn atient with extraneous matcria . If’ The depended heav” y on the pictorial examples , often f to t E exclusion of the accompanying text . We con - clude that . dependency on guidelines should be mini - mized , and that guidelines should be developed primarily to complement toolkits and interactive exam - ples , focussing on information intrinsically unavailable through those vehicles , KEYWORDS : Guidelines , user interface design INTRODUCTION l’he urpose of user interface guidelines is to enable the f deve opment of usable , consistent applications , that conform to designated conventions . It is the experi - ence across the industr that a wide variet of tcch - ( / ’ i’ niques must be enliste to achieve this enc [ 3 , 4 , 8 , 9 ] . Anmug thcm is the creation of an interface style guide . Guidelines vary in content : Some enumerate general principles ; others explicitly specify intctface detail ; some focus on the presentation and behavior of the interface , while others address perfortnance character - istics of the inlerface in use . Some are general recom - mendations for usabdity [ 6 ] ; others , including those discussed here , define a style to bc used in the devel - opment of ap lications on particular platform [ I , 5 ] ? F or across plat orms 7 ] , ‘1’hese latter guides generally provide a centralim , explicit statement of the style to which clevelopcrs are expected tc ) conform . ‘i’he pro - { vide a reference point for both development am eval - uation . Permission to copy without fee all or part of this material is granted provided that the copies am not made or distributed for direct commercial advantage , the ACM copyright notice and the title of the publication and its date appear , and notice ia given that copying is by permission of the Association for Computing Machinery . To copy otherwise , or to republish , requires a fee and / or specific permission . @ 1991 ACM ( ) . 89791 - 383 - 3 / 91 / 0004 / 0329 . . . $ 1” . 5 ( 3 David R . Schwartz IBM , Programming Systems 11000 Regency Park Cary , NC 27511 Guidelines are almost never used in isolation . Iley may be accompanied by itemized checklists , a compli - ance process , and cc ) mpany - wide computer ccmfcrenc - ing . Other techniques include press and user feedback , a set of highly functional , conforming a placations , and Y supporting toolkits for application deve opment . Many of the techniques for assuring compliance are motivat ~ onal ( ~ . g . , inccntivcs ) or focus on recovering from fadures m the . dcvcloprncn ! process ( e . g . , con - sultutg , and rcwcwmg orgatuzatlons ) . In an ideal world , dcvelo crs would produce conforming a plica - 7 T tions on the n - st try ( probably not full usab e and / ’ consistent , but at least conforming ) . W ~ ile there arc social vehicles t } uit help achieve this ( e . g . , educational classes , informal information exchan c ) , d is ultimately t a cognitive task for the individual eveloper . In this study we explore the developer’s use of guidelines by means of a practice design task . When we began , we were skeptical that guidelines by themselves would be sr . dlicient for devclo ment of f conforming designs . Our objectives were the ollowing : l to dctertninc what role guidclims actually play in the design of conforming applications , l to determine how style guidelines are used in practice , l to study the interface design process empirically . METHODOLOGY Participants were asked tc ) develop a paper and pencil interface design conforming to guidehncs . The prob - Icm conccrncti on - line management of a compan s onsored , rccrcationzd activity ( SCCI : i urc 1 ) , and too ! f c a out a day to comfdctc . “1’hc prob ctn covered the critic , ai design issues dcvelopc ( i in the guidelines , ami was cxpcctcd to elicit a range of intcrfacc detail . Partici ants workcci at their own pace , and were asked E to ver alize all aspects of their work , including refer - ences to the book , Sessions were vicico taped , and the verbal protocols were logged by the experimenters in rcaI time . Following the session , participants were de - briefed and completed a satisfaction questionnaire . Materials Jn addition to the mblcm statemcnt2 participants were r ~ rovidcd a copy o a document dcscnbm how to build % e mtcnfaces in conformance with a prescri d style that covereci both the appearance and the behavior of the 329 interface . The document was divided into three sections : ‘1’hc first introduced the interface style and the principles on which it was based ; the second de - scribed the interface design process ; and the third ( Reference Section ) provicled an alphabeticall organ - “Z izcd description of each element ( button , wm ow , dia - log mechanism . . . ) in the design . Each item in the Reference Section included a textual definition , a graphic illustration , and a list of detads covering con - straints and conditions of use . The book was roughly 300 pages long , of which about 250 pages were devoted to the Itemized Reference Section . ‘1’he book was evolving as we worked , ami participants received the most recent version of the docutnent . Detailed results were fed back to designers and writers as they became available , resultin in upgrades to the % document . I“he results reported ere transcend indi - vidual versions of the document . Participants Nine people partici @ cd in the study . All were expe - rienced users of the s stem they were designing for , and all were experience d interface designers . We tested peo le with varying degrees of experience with the CF gui elines themselves and with different levels of gen - eral programming expcricncc , including backgrounds in both procedural and object oriented programming . Your company recreation club would like to strcamliie its procedures for managing its various team sports . ‘J’he general situation 1s as follows . Individual employees or their spouses submit either a paper or on - line Yaplication to play a ~ articular sport . For each sport , someone is responsible for making up teams , sched - u ing g ~ mes ancl keeping players reformed about what’s happening . Coordinators routinely create a set of team rosters , a schedule for the season , and an address list , so that team members c < an contact each other . In addition , they need to be able to respond to requests for detailed in - formation , and for summary reports about the league . Coordinators are volunteers , and arc hard to come by . Furthermore this activity only happens once a year , so they never get a chance to become experts with the system . As a result , the club is very concerned that the system be efficient and easy to USC , Most of the coordinators work for the company and have personal computers available to them for their regular work , so naturally , the club WWuld Iikc these facilities to con - form to company guide ] incs . The system is also made available to the teams for tracking in ( iividuat events . Your Task Your job is to design a Y idelinc conforming interface which will meet these objectives . You should desi r the interface to support t e range of sports sponsored by the chrb ( e . g . soccer , baseball , tennis , etc . ) althoug , for purposes of the exercise , you should illustrate your design for the sofiball season . Your design should be detailed e ~ ou ~ h so that a user could figure out how to use it and a compbnce coor - dinator could determine if it is gmdehnc conforming . Describe in detail how each of the following scenarios is to be performed . For each scenario please include : 1 . A sketch of all relevant windows , including their contents and any controls , icons , title bars , etc . 2 . A description of all available menus , 3 . A description of any dialo s used in the scenario . F 4 , A detailed description oft Ie anticipated user - interactions to accomplish the scenario . The Scenarios 1 . The user has just installed your softwnre . Describe what the user now sees . 2 . The coordinator needs to reschedule a game because four players \ vill hc out of towm . It will not be possible to swap times with another team , and the game can’t be schedutcd for a night when another act ivit y has the fields . Dcscribc how the coordinator changes the tmm’s schedule and the master schedule for the field . 3 . Onc of the team ca vtains calls up and asks the coordinator for all the inforrnat ion about his / her team , [ including all the in , ormation from the registration fbrtns , the team ] incup , the game schedule znd the name and network d of the captains of opposin teams . f S / he would like to get the information via the network . Describe how the coordinator makes t lis information available . 4 . ‘1’he club makes portable I’CS available for recording events during the game ( c , g . , scm - c , strikes , \ valks ) . The situation is as follows : Ilascs < areIoadcd . T’hc hatter hits the ball anti makes it successfully to first base ; the player on scconct gets safely to third ; the runner on third makes it home ; but the player on first is tagged out bcfbrc getting to second base . IIescribe in detail how the event is recorded . 5 . . I Iow would a club staff tnembcr make an on - line application form for a ncw sport - for example , tennis ? l ~ igm - c 1 : ‘1’he interface design problem 330 Two expert participants ( clesi $ ners of’ the guidelines themselves ) were used to provide a baseline for com - paring the resulting designs and the interface design process . We will refer to the other seven participants as ‘novices , ’ though this is merely to distinguish them from the guideline authors . RESULTS Guidelines in practice l’he guidelines covered many new concepts as well as intricate details of the proposed interface style . Many of the new concepts proved problematic for partic - ipants : l Some were only partially understood . l Some distinctions that seemed critical to guideline designers were not appreciated at all . l Some proved dfllcult to think through and im - plement , l Others struck them as fraught with potential usa - bility probletns . ? he perception of usabihty problems left them with the ( hlcmma of whether to conform in the face of their better jucigernent . Guidelines that result in unusable applications , may contaminate not only developers feelings about the articular recommendation , but may F affect their view o the guidelines as a whole . For ex - ample , the guidelines we studied encouraged developers to create logical and hierarchical structures of objects , often resulting in long interaction paths to get to even commonly used functions . Some participants reluc - tantly preserved the long paths , believing it was neces - sary for conformance . others pushed the guidelines aside and created more direct routes . Despite a decidedly imperfect understanding , as evi - denced b both the protocols and their own testimony 11 in the de riefing , participants were able to produce de - sign solutions that our evaluators ( including a guideline author ) judged largely conforming . 1Iowever , con - forming did not mean that the designs were identical . So , for example , some participants developed a direct mani ulation solution to the event recording scenario ( 4 , ~ esi ning a picture of a basebalI diamond around H w ~ ich p aycrs couki be dragged to indicate the course of the game . others developed variants on a score board which could be updated by means of controls or diqect entry . T’hc presentation and behavior of these solutious were uitc different , but were mostly within ? the range of con orrning dcsigrts . In the discussion that follows , we will focus first on the use of exalmples , which proved key in conveying inter - face style , and then move on to a more general dis - cussion of how participants worked with the book . Examples ‘1’he graphic illustrations of the user int . erfacc compo - nents and style were central to conve in ~ the sense of 1 ‘1’hcy were the uidelincs both in general and in etad . t cite spontaneously and almost universally as the re - ferred vehicle for learnin . f’ F The first exam le in the lrst chapter took on unusua importance , wit [ { articipants returning to it disproportionately – - proba ly because it was easy to find . Ilxamplcs were inspcctcd carefully , were frequent Iy referenced , and were copied directly in constructing the design . Participants all felt there should be more of thcm . Early versions of the book included examples that il - lustrated the use of a single control ( e . . , a particular ! menu type ) . Participants wanted examp es to integrate interface elements , to show how they could be put to - gether . % mc were frustrated by the inability to explore the examples interactively . Participants used examples beyond the sco r of their explicit context . So , for example , if scro bars ha - f pened to appear in an illustration intended to exemph y the use of radio buttons , if it was titnel ~ , the articipant might take the example as rcprcsentatwe of L th with - out further reference to the entry for the scroll bar . In some cases , these incidental details had been provided primarily to make the exam lcs more concrete . If $ these incidental items appeare generic , such as an icon representing the workstation itself , they were some - times taken to be part of the system and covered by the guidelines . On the other hand , things that were clearly application specific , such as a pie chart , were not . In summary , though the exam ~ lcs were no doubt constructed to ih . f ( ra [ e the assoclat ed text , in practice ( particularly in the Reference Section ) the text was used more as if it amofded the examples . Book usage There were two general strategies for approaching the book . The canonical strategy of reatiinq the introduc - tory material first was spontaneously initiated by only two of the seven guideline novices . Tle others tried to etnbark on the task { iirectly , 100kin only for the in - % formation they believed relevant to t eir work . How - eve ~ , these par - tici ants found they were unable to [ be n workin on t c task without getting a more en - 7 E f era feel for t c overall sense of the guidelines , an re - luctantly returned to the introductory material . They read until they fbund what they thought they needed to know — and often no farther , missing details that designers no doubt cxpcctcd thcm to absorb . Thus the prevailing preferred pattern of work was similar to the task - oriented behavior of adult , novice computer users , described by Carroll [ 2 ] . To the extent that the introductory material was ger - mane to their objcctivcs , ~ articipants read it with in - terest . Experienced parbcipants found the . neral r human factors uidclines contained in the boo ( e . g . , ! providing usefil feedback to the . user , friendly error mc , ssagcs , aesthetically pleasing screens . . . ) uninformative . I Io } vcvcr , specific guidance on strate - gies for approaching the dcsi Y were welcomed , and were consistently and carefu 1i’ considered . Partic - ipants were impatient with need essly long introductory material and with tcrmirmlogy that seemed peripheral to the task at hand . Carroll’s minimalist a preach [ 2 ] Cr seems as relevant here as it does to the cvelopment of user manuals . The alphabetical arrangement of the Reference Section encouraged browsing and facilit atcd serendipitous con - tact with other entries . For participants with mvious r { ex eriencc , the alphabetical arrangement of t e indi - vic ual terms and mterfacc controls roved effective , as [ there was considerable evidence o transfer of termi - 331 nology and concepts from previous versions of the book . Ho weve ~ , participants often did not read sections they beheved they reco ~ ized , lca ~ ing them vulnerable to more subtle changes m the { ieslgn . Desigh process ‘Ihere were two discernible stages in the design . In the first stage , participants attempted to identify the major user interface ob ects . The second stage consisted of iterations throu d the scenarios , each iteration achiev - ing a new level of detail in the design : Object decomposition : The guidelines mandated interfaces that were populated by the “objects” that users need to perform tasks , and object decomposition was recommended by the book as the first step in the design process . All participmts began with this task , roughing out a set of interface objects , largely based on the noun entities present in the problem statement . These were revised as the design progressed . It was not obvious to most participants what a number of the “objects” should be . Participants considered the objects in the user’s world , interface objects , and underlying application data , ancl it was not clear how these dMerent “objects” were to reiatc , This problem was most clearly manifested in their design of the schedule ( sc ~ nario 2 ) . Should there be an independent schedule obJect , or should schedule be an action on some other object such as a field or a team ? If schedule were an independent object , how should they imple - ment scenario 3 which asks for the schedule for a p . ar - tim . dar team ? If maintained for each team , how would they coordinate team schedules wit hin the league ? Functional design : Whether working generally in the task domain or following the story line of the scenarios , partic ~ pants began by considering in some detail the domam and task requirements c ) f the design . What kinds of functions needed to be provided ? How would the application be used ? For novices , this sta e of the desiF f was completely anchored in the prob em and ma e little reference to the book . In contrast , experts designed immediately in terms of the guideline detail . This stage was characterized by frequent use of short what - if scenarios used to elaborate understanding of the total function . Por example : What if 1 want the system to accumulate long - term statistics , , . What if I can’t @ the mouse to work on a park bench . . . The scenanos were spontaneous ( not a systematic elabo - rat ion of alternatives ) , and transient ( only some were encoded as notes for the design ) , though they seemed to make an important contribution to participants’ internal model . Coarse interface design : I ; unctional design was fol - lowed by working through the scenarios to consider the kinds of windows and interaction techniques to be used , but with little specification of the explicit detail that would appear on the screen . This involved gen - erally frustrating attempts to get ~ idance from the book , which rovided Me inte ratlvc information on K f how objects s ould combine to orm applications . At this point , most participants felt that b working 2 out the logical design , they had cornpletc the task . Some indicated that at this point , in real life , the J would take their sketch of the design to users for fee - back , ‘lhey re arded the elaboration of the design into f explicit contro s and visual layout as a mlmdane and . - . uninformative exercise . It was onl at the insistence 1 of the experimenter that they sketc cd out screen de - signs that could bc reviewed for compliance . Detailed interface design : In the final pass throu P the scenarios , participants worked out the details oft e desi . P This stage made the heaviest and most suc - cess u ] use of the Refcrencc Section . Guideline sociology We asked a . rticipants if the recess we had observed { r rna ~ ched t eir - normal way o working . While some mchcated - that It ~ id , others . ma @ e cIear that the exper - iment ar - hticmlly reduced gtmtelme usage . One partic - ipant claimed he never used guidelines in ma ! life , preferring to submerse himself in interactive examples of the interface environment . Another said that she and her colleagues mrcl rcferreci to guidelines . Instead K the dcsi ~ ed as best t cy could in terms of the task J an usabdity requirements of their users , and negoti - ated for compliance status only at the end of the proc - ess , making adjustments as necessary to obta”m it . A similar sentiment was echoed by another , impatient with the hi level principles and introductory material : P lle wante the book to explicitly specify the criteria against which hls appticat Ion wouId be evaluated . 130th in conversation with the partici ants and in in - f formal discussions with others involve in the guideline compliance process , it bccamc clear that guideline compliance was a subjective and interpretive process that used the book merely as a starting po”mt . CONCLUSIONS We had expecte ( i that guiticlines would rove diKlcult i source material to effect confcmning esigns . Our protocols indeed indicated that participants missed m ~ y critical ~ once ts and details . “I % at the resulting designs were Judge i to be largely conforming raises some interesting issues . For one thin , f \ vc believe that the design per se may not be a high y sensitive test of the effectiveness of the guidelines to elicit conforming design . The protocols revealed many roblcms not apparent in the paper and 1 > encil desi r Etat could bc expected to prove prob - etnatic ha the roccss been pursued through imple - mentation . f Pro dcms were finessed by designers and evaluators alike . Ilesigners copied b ~ rote or invented where they did not understand , an J evaluators com - pensated fbr clcsiguer error from their own under - standing , for example , treating serious conceptual flaws as minor labeling errors . Second , there is much yet to be understood about the process of judging design conformance . Reviewers were not consistent among themselves in their qualita - tive evaluation of the clesi 1s . Personal assessment of T usability sometimes intrw cd into their judgement of conformity . Further , there is no reason to suppose that conformance issues which seem critical to guide - line authors will also bc salient to rcvicwcrs in the press or to end users . LJscrs , at least , are more likely to think in terms of usability . Conformity will mean little if these arc not achieved . Nonetheless , the idclincs were more effective than we anticipated . ‘I ~ y were valuable in providing : 1 . Examples of conforming interface design . 33i ! 2 . Explicit strategies for tackling interface design . 3 . IdentKlcation of the major interface concepts and components . Examples appear to be the single most powerful vehicle for the communication of interface design style . Ex - amples in this study were static and limlted m scope . It seems clear that carefully crafted , rich , intcrnr $ ee examples would be more powerful still . Tognazzini [ 8 ] cretlts the simultaneous release of MacWrite and MacPaint with the Macintosh for much of the consistency across Macintosh applications . Im ortant considerations in the crafting of examples 1’ inc ude com elling coverage of critical material , atten - { tion to imp “cations of incidental material , and inte - gration of components . In those cases in which it is anticipated that the desi ~ er will need to extrapolate beyond the scope of the documentation , we would re - commend multlple examples , so that the direction and intent of the gui ( . lehnes are clear . Thus a model of mouse selection is better illustrated by drawin on text , f spreadsheet and graphics than sitnpl y by il ustrating with text alone . To assure conformity , guidelines should be developed in conjunction with the su porting environment and toolkits . 2 ‘l’hey should ad ress novel and integrative conceptual issues intrinsically unavailable in toolkits or examples . They should document their sco e and 2 limitations , addressing conditions of use for in ~ vidual components . Thus toolkits may dlctatc the form and parameters of a control , but something on ~ ~ per needs to relate the wwiet y of controls to the cleslgners task , and to the conditions under which each alternative n appropriate . An application may illustrate effective assignment of choices to menus ; nonetheless , the underlying organizational principle may be hard for designers to infer . But it must be understood that much written material may go unread , misunderstood , and consequently un - heeded , The longer and more complex the document , the greater the risk . To the extent that conformance to the interface is critical , the interface style needs to be carried in the examples , facilitated by toolkits , illus - t ~ ated by interactive demos or well - formed applica - tmns , and supported by iterative usability testing . Guidelines will be most effective as a succinct comple - ment to these more compelling techniques . ACKNOWLEDGEMENTS We are grateful to John Bennett , Tom Da non , JohrI 1 Karat and Bob Mack for comments on ear v drafts of this paper . REFERENCES 1 . 2 . 3 . 4 . 5 . 6 . 7 . 8 . 9 . Ap le . [ ~ uman interface guidelines : i des top inlerface . Addison - Wesley Company , Inc . , Reading , MA , 1987 . Carroll , J . M . The Nurnberg funnel . Tile A p ( e L Publis g De . rigm” 7 minimalist instruction for parficidar computer ski . ~ i ~ Press / Bradford Books , Cambridge , MA , Good , M . Ilevclo ing the X { JI style . In Nielsen , J ed . J Com inating user interfaces for c ; nsistemy . Academic Press , Inc . , Boston , MA , 1989 , 75 - 88 . lIapp , A . J . & Cohen , K . C . Consistency in the user interface : Common User Access impact study . ( TR54 . 5 13 ) . IBM , ESIl , User Interface Technology IXpartmcnt , lloca Raton , FL , 1989 . IBM . Common ( Jser Access : Advanced interface design uide . ( SC26 - 4582 ) . International Busi - ness d achincs Corporation , Boca Raton , FL , 1989 . ! ihn ~ idcrman , B . Designin the user inteflace . d Addison - Wesley , Reading , A , 1987 . Sun Microsystcrns , Inc . OPEN LOOP : Graphical user interface ap lication style guide - ( / ’ [ ines . Addison - Wesley , Rea mg , MA , 1990 . Tognazzini , il . Achieving consistency for the Macintosh . In Nielsen , J . , cd . Coordinating user interfaces for comistency . Academic Press , Inc . , Boston , MA , 1989 . 57 - 74 . Zcvin , R . Systems Application Architecture Common IJscr Access compliance process . IBM , 13SI . ) , ( Jser Interface Technology Planning De - partment . Boca Raton , FL , 1990 . 333