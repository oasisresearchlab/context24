Demo : Hivemind : IoT - based Democratization of Shared Devices in a Public Space ∗ Wonjung Kim , Seungchul Lee , Youngjae Chang , Taegyeong Lee , Seongwoong Kang , Inseok Hwang † , Junehwa Song School of Computing , KAIST | † Dept . of CSE & Graduate School of AI , POSTECH { wjkim , seungchul , yjchang , tglee , seongwoong } @ nclab . kaist . ac . kr | i . hwang @ postech . ac . kr | junesong @ nclab . kaist . ac . kr 1 INTRODUCTION Public spaces 1 are a basis of urban lives . The mode and culture of sharing could be an indicator of the quality of life in the cities . For example , the buses and restaurants should comfort and bring satisfaction to individual visitors , including the vulnerable with special needs . However , their operation mostly occurs in rather a closed and exclusive manner [ 2 ] . An inherent limitation to such an inclusive sharing lies in the exclusive modes of traditional device interfaces ; a variety of devices , called public devices hereafter , are installed in the public space and determine operational details of the space . As such , the space itself is shared , however , the public devices are controlled in exclusive ways . Could the sharing of the public space be operated in a democratic way ? To this end , we propose Hivemind , a system for a new socio - physical computing layer that sits between the individual visitors and the public devices . It transforms an exclusively - controlled de - vice in a public space into a true public device . It allows visitors to instantly participate in the democratic collective control of the device . Also , a diversity of off - the - shelf devices can be incorporated without modifying their implementation . 2 HIVEMIND SYSTEM DESIGN 2 . 1 Challenges for Social Control and Use Designing a system for social control and use is a complex process , which encompasses three different entities , i . e . , users , devices , and spaces . Each of these already entails a high degree of diversity and heterogeneity , and they collectively further exacerbate the situation . A variety of aspects should be considered in the process , e . g . , the demographic distribution of visitors , their eligibility to control a device , frequency and regularity of their visits , their relationships , e . g . , strangers or acquaintances , the physical shape and size of the space , etc . A public space further compounds the situation with its inherent uncertainty . For example , visitors freely visit and leave different spaces at any time . It is difficult to know who the visitors are and ∗ This is a companion paper and a subset of the full paper that the authors published in MobiSys’21 [ 1 ] , and details of the system could be seen in the full paper . 1 Here , we use a broader meaning of public space – places generally accessible to members of the public , such as cafés , trains , shops , and movie theaters . Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for third - party components of this work must be honored . For all other uses , contact the owner / author ( s ) . MobiHoc ’22 , October 17 – 20 , 2022 , Seoul , Republic of Korea © 2022 Copyright held by the owner / author ( s ) . ACM ISBN 978 - 1 - 4503 - 9165 - 8 / 22 / 10 . https : / / doi . org / 10 . 1145 / 3492866 . 3561253 Actuator 20 ℃ 26 ℃ 24 ℃ 25 ℃ 26 ℃ 23 ℃ 19 ℃ 24 ℃ 23 . 4 ℃ Consensus Figure 1 : Social control and use of public IoT devices LAYERS ParticipantDiscovery & Authorization Social Control Interaction Aggregation & Consensus Device Control Device Connectivity Actuators Control Server ➋ Influence - aware Authorizer ➌ Entity Manager Device schema Participants & preferences ➏ Preference Aggregation Engine ➎ Social Control UI Voting Preference distribution Chat … ➍ Schema - based Control UI Generator Schema - UI templates ➐ Device Control Command Generator Participant Device ( Mobile App ) Notification of eligibility Admin Tool Policy authoring tool Registered actuators DB Authorizationrequest Authorized user entries Consensus Actuator state Preference ( vote ) ➊ Device Discoverer Mic . … Control command for ‘ set _ state ’ ( device API ) BLE Space info , Actuator info , Preferencedistribution , … P o li c i e s and s c h e m a s … 5 4 1 2 3 6 7 Figure 2 : The 5 - layered Architecture for Social Control - and - Use of IoT Devices & the Hivemind System when they visit , etc . Similarly , the visitors and the public devices confront each other in an unpredictable way . Such high complex - ity and uncertainty would make the adoption of common design strategies unpractical . 2 . 2 System Overview Hivemind enables democratic control - and - use of devices , in which the operation of devices is determined by the public . Specifically , Hivemind targets following design goals : wide coverage of devices , asynchronous voting , continual and transparent decision - making , in - stantparticipation , dynamicassessmentof votingrights , andprogramming - free deployment . The system is created as a realization of the five - layered archi - tecture – a guide for achieving the aforementioned design goals . The architecture is developed by applying the principle of separa - tion of concerns repeatedly . It comprises Device Connectivity Layer , Participant Discovery and Authorization Layer , Social Control In - teraction Layer , Aggregation and Consensus Layer , Device Control Layer ( Fig . 2 ) . It offers a systematic perspective and insight into the otherwise extremely complex large - scale problem . As shown in Fig . 2 , Hivemind comprises three main physical components ; a mobile app installed in the visitors’ smartphones , a control server located either in the cloud or on - site , and public 289 MobiHoc ’22 , October 17 – 20 , 2022 , Seoul , Republic of Korea Wonjung Kim et al . devices installed in the public space . The system can also include auxiliary devices for discovery and authorization . 2 . 2 . 1 Features of Hivemind . Hivemind introduce the idea of influence - aware authorization . It dynamically grants voting rights to participants as soon as they enter an area of influence ( AoI ) . AoI is the spatial region where the operation of a device is perceived ( e . g . , the region where sound from a public speaker is heard ) . Hivemind also provides utility - based preference aggregation as a basis to flexibly include various aggregation and consensus - building policies fitting to different so - cial and spatial contexts . Hivemind further leverages asynchronous and continual decision - making ; participants can voice their prefer - ences whenever they want , which is continuously reflected into the current choice . Hivemind also adopts a common abstraction of control commands to address the heterogeneity of the devices and their vendor - specific native APIs . 2 . 2 . 2 System components and operation flow . A space admin starts by choosing which functionalities of an IoT device shall be open to the visitors , e . g . , the temperature range of an AC , with proper constraints , e . g . , within 18 - 27 ◦ C . The admin then chooses the aggregation and authorization policy proper to the deployment environment through the Hivemind’s Policy Authoring Tool . The admin may place auxiliary devices on the site such as a BLE beacon for discovery and authorization . Assume that a user happens to approach an IoT device . Her Hivemind app , running Device Discoverer in the background , detects the beacon registered above , indicating that she may enter the device’s AoI . The app starts the authorization process and negotiates with Influence - aware Authorizer at the control server , sending the “location proof” information sensed by the mobile app . Upon authorization , Entity Manager registers this user as an authorized visitor around that device . Now her mobile app’s Voting UI shows the current setting ( e . g . , currently set temperature or volume level ) sourced from the control server . Also , the Voting UI grants her to vote for her own preferred setting as well as presents the preference distribution of other visitors currently present . At the control server of Hivemind , Preference Aggregation Engine collects the votes . A new visitor’s vote is added to the set of votes . An existing visitor may vote again , which overwrites her latest vote . Hivemind supports asynchronous voting ; a vote remains effective unless she leaves the place or updates her vote . The updated set of votes triggers a new decision point to be evaluated as per the aggregation policy configured by the admin . Finally , Device Control Command Generator applies this new setting through vendor - or actuator - native APIs . 3 DEMONSTRATION We perform a live demonstration of Hivemind so that participants can experience the system and service on site . We set up a public TV and speaker on the demo site , and the participants experience the social control and use of the TV and speaker ; they collectively choose the TV channels and music to be played on the speaker with other participants . The service will be accessed by upto 20 participants at the same time . Visitors could join on the demo and participate on the collective control by scanning the QR code a b c Figure 3 : Screenshots of Hivemind mobile - side app provided at the demo site and installing the Hivemind Android app . For Apple users , we prepare separate Android devices which pre - install the Hivemind app . Fig . 3 shows screen shots of Hivemind app . Fig . 3 - ( a ) shows the list of public devices for which the participants could join the collec - tive control . Once a participant selects a device , she could specify and submit her own preference to the system as shown in Fig . 3 - ( c ) . To help the participant understand the current context regarding the social control of the device , the app provides the summary of the distribution of preferences as specified by other participants ( Fig . 3 - ( b ) ) . It further shows the summary of the adopted aggregation and decision making policies . Example use case of the demo : Sookyung , a graduate student , would like to participate on the Hivemind demo . For the regis - tration , she captures the prepared QR code with her smartphone , which leads to the link to download the Hivemind app . After she install the app , the app notifies her that she can control the TV channel collectively with other participants . She opens the app and notices the current TV channel , which is set to CNN . But , she enters her preferred channel of BBC into the app , which is imme - diately collected by the Hivemind server . Preference Aggregation Engine aggregates the preferences of all participators in the demo site and then selects the channel that maximizes the satisfaction of participants . The server applies the channel to the TV through its native API . Sookyung sees that the new channel is still different from her most preferred one . After checking the distribution of other visitors’ preferences , she understands with this new decision . ACKNOWLEDGMENTS This research was supported by the Ministry of Science and ICT , Korea , under the ITRC ( Information Technology Research Center ) support program ( IITP - 2020 - 0 - 01778 ) supervised by the IITP . REFERENCES [ 1 ] Wonjung Kim , Seungchul Lee , Youngjae Chang , Taegyeong Lee , Inseok Hwang , and Junehwa Song . 2021 . Hivemind : Social Control - and - Use of IoT towards Democratization of Public Spaces . In Proceedings of the 19th Annual International Conference on Mobile Systems , Applications , and Services ( Virtual Event , Wisconsin ) ( MobiSys’21 ) . AssociationforComputingMachinery , NewYork , NY , USA , 467 – 482 . https : / / doi . org / 10 . 1145 / 3458864 . 3466626 [ 2 ] Jeremy Németh and Stephen Schmidt . 2011 . The Privatization of Public Space : Modeling and Measuring Publicness . Environment and Planning B : Planning and Design 38 , 1 ( 2011 ) , 5 – 23 . 290