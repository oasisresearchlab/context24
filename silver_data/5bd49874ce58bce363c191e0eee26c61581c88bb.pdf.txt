Similarity Analysis of Patent Claims Using Natural Language Processing Techniques Kishore Varma Indukuri , Anurag Anil Ambekar , Ashish Sureka SETLabs , Infosys Technologies Ltd . kishore varma @ infosys . com , anurag ambekar @ infosys . com ashish sureka @ infosys . com Abstract Claims typically found at the end of a patent document are one of the key elements of a patent and deﬁne the boundaries or scope of protection conferred by a patent . Claims of related patents also need to be read and reviewed carefully by an inventor or a patent attorney at the time of drafting a patent application . We present a method and a tool to do a claim similarity analysis between two different patents based on natural language processing techniques . The technique proposed in this paper relies on computing similarity between two claims based on syntactic and semantic matching of the natural language text describing the claims . We present results of experiments performed on patent claim data obtained from patents published on Google patents website . The motivation behind the research presented in this paper is to build patent processing tools to increase the overall productivity of a patent analyst or a patent attorney while doing claims infringement , validity and quality analysis . 1 . Introduction Claims are one of the most important elements of a patent . Every patent contains one or more claims typically found at the end of a patent document which deﬁnes the extent or scope of the protection conferred by a patent or by a patent application . Patent examiners and patent attorneys closely examine claims to determine whether a proposed invention is patentable and whether a patent has been infringed . Patent claims play a very important role at the time of drafting a patent application or at the time of a patent infringement litigation or lawsuit . Patent analysts , intellectual - property ( IP ) attorneys and inventors often need to compare claims from two different patents or patent applications for the purpose of claim infringement and validation analysis . Due to large content of inforamation available , manually comparing claim of one patent against claims in several other patent documents is time consuming and a non - trivial exercise . Hence there is a great demand for tools that can bring automation to the process of claim analysis and assist an inventor or a patent analyst to perform a more effective examination of patent claims . Research and development on patent processing has focused on patent document retrieval sys - tems based on keyword and non - keyword based search , cross - language and cross - genre retrieval . A substantial amount of work has been done in the area of patent classiﬁcation and categorization , clustering , summarization , key - phrase extraction , patent document visualization and navigation for readability enhancement and patent mapping [ 1 , 8 ] . Some papers have been published speciﬁcally in the area of patent claim analysis which is primary focus of this paper . However , based on our International Conference on Computational Intelligence and Multimedia Applications 2007 0 - 7695 - 3050 - 8 / 07 $ 25 . 00 © 2007 IEEE DOI 10 . 1109 / ICCIMA . 2007 . 40 169 International Conference on Computational Intelligence and Multimedia Applications 2007 0 - 7695 - 3050 - 8 / 07 $ 25 . 00 © 2007 IEEE DOI 10 . 1109 / ICCIMA . 2007 . 40 169 Figure 1 . Text processing pipeline for comput - ing lexical or syntactical similarity between two patent claims . Figure 2 . Text processing pipeline for comput - ing semantic similarity between survey , majority of the work on patent claim processing is on approaches for improving the read - ability of a patent claim [ 5 , 4 ] . This paper contributes to the area of similarity analysis between claims for the purpose of infringement , in - validation and claim scope analysis . We describe a method that computes a similarity score between two claims based on simple lex - ical matching and knowledge - based semantic matching . We built a prototype based on the method where the claims residing in a repository most relevant to a query claims displayed to the user in the order of their similarity or closeness to the query claim . Through experiments performed on sample patent data obtained from Google patents website , we show that the method results in good accuracy . 2 . Solution Architecture The claim similarity detection system proposed in this paper relies on computing the Syntactic ( Section 2 . 1 ) and Semantic ( Section 2 . 2 ) similarity between the elements of two claims . Figure 3 . Output result screen of the prototype Figure 4 . Intercluster Properties of Categories in exper - imental data , plotted for Semantic Similarity ( Se ) and Syntactic Similariy ( Sy ) 170170 2 . 1 . Syntactic Similarity Computation Figure 1 illustrates a text processing pipeline for determining syntactic similarity between two claim texts . Syntactic similarity is based on the assumption that the similarity between two texts is proportional to the number of identical words ( exact word matches ) between two texts . The raw textual data is basically a bag of words and is ﬁrst passed through a part - of - speech tagger for extracting singular and plural nouns . We are using the Stanford log - linear part - of - speech tagger that reads a text and assigns parts of speech ( such as the verb , the noun , the pronoun , the adjective , the adverb etc ) to each word [ 7 , 6 ] . We just extract the nouns and ignore other parts of speech . We capture all the occurrences of a particular noun in a sentence and each occurrence is retained for further processing in the text processing pipeline . The frequency of the occurrence of a word is also important in computing syntactic as well as semantic similarity . As illustrated in Figure 1 , the next step after extracting all the nouns is word stemming . Word stemming is a process of reducing a word to its base or root form . Word stemming is done for term normalization and is commonly used in information retrieval and search applications . We are using the Java implementation of the Lovins stemmer distributed under the GNU General Public License [ 2 ] . The output of word stemmer is a set of words . The last step is to compute Syntactic similarity ( S L ) between two texts . This score must be proportional to the number of identical words . S L should be inversely proportional to the total number of words . This avoids the score from being biased towards claims containing a larger number of words as compared to claims with lesser number of words . We used the following formula in all our experiments . S L = [ ( S A → S B ) + ( S B → S A ) ] / [ 2 × ( S A ∪ S B ) − ( S A → S B ) − ( S B → S A ) ] Where S A represents a set of word stems from claim ‘A’ and S B represents a set of word stems from claim ‘B’ . S A → S B represents number of words in S A that are present in S B and S A ∪ S B represents the total number of words in the two sets . 2 . 2 . Semantic Similarity Computation Figure 2 illustrates a text processing pipeline for determining semantic similarity between two claim texts [ 3 ] . The ﬁrst step in the semantic similarity computation process is to extract all the singular and plural nouns present in the text for the two claims that we want to compare . We use WordNet ( a semantic network database for English developed at Princeton University ) [ 3 ] to determine the semantic similarity between the nouns of one claim with the nouns of the other claim . Each noun in the ﬁrst claim is compared with all nouns in the second claim and the similarity score for the one which is most similar is recorded . The set - to - matrix conversion module illustrated in Figure 2 prepares a data structure that enables comparison of words between the two texts . We are using perl modules ( Version : 1 . 04 ) for computing measures of semantic relatedness based on WordNet which can be downloaded from http : / / search . cpan . org / ∼ sid / website . The last step in the process consists of adding the semantic similarity scores of each word pairs to determine the semantic similarity between two claim texts . We built a graphical user interface ( GUI ) based interactive tool implementing the technique described in this paper . Figure 3 is a sample screen - shot of the tool . In the input screen , end - user can choose a subject category or leave it blank for the system to search entire database in input interface . The output screen displays the search results containing the claim ID , claim text , syntactic and similarity score as well as the score computed as a combination of both syntactic and semantics similarity measures . A user can then sort results based on any of the three similarity measures . 171171 3 . Example Below is a list of three independent claims extracted from patent documents obtained from Google patents website . The ﬁrst two claims are on pressure cooker patents and the third one is on a door lock . The word counts for the three claims are 96 , 91 and 175 . The word count shows that patent claims can be very lengthy and reading each claim separately and doing a manual anal - ysis can be a costly and time consuming operation . Table 1 presents the output of part - of - speech ( POS ) tagger and word stemmer for each of the patent claims . There are seven words matching between the two pressure cooker patents . Total number of nouns are 28 and 24 in patents 4024982 and 3973694 respectively . Hence , the lexical similarity between them is ( 2 ∗ 7 ) / ( 28 + 24 ) = 0 . 269 . Based on the alternate formula speciﬁed in Section 2 . 1 , the lexical similarity between the two pres - sure cooker patent claims will be [ ( 14 ) + ( 10 ) ] / [ ( 28 + 24 ) − ( 14 ) − ( 10 ) ] = 0 . 3 . There are no common nouns between any of the two pressure cooker patent claims and the claim on door lock . Hence the lexical similarity between either 4024982 or 3973694 and 4116027 is 0 . Table in Figure 5 represents the most semantically similar words between the two pressure cooker patents . 1 . P atent : 4024982 ( Pressure cooker ) : Pressure cooker consisting of a pan part and a lid which can be locked thereto in pressure tight manner , the pan part having a plain circumferential outwardly bent rim and the lid being provided with a closure part rotatable concentrically thereto , the lid and closure part having on their periphery ﬂanges each engaging under the pan edge over a maximum of half the length thereof , these ﬂanges being constructed so as to be movable into one another and arranged so that the pan rim can be released from the ﬂanges at least over half its circumference . 2 . P atent : 3973694 ( Pressure cooker ) : A pressure cooker having pot and lid parts rotatable relative to each other and connectable with each other by a bayonet type joint , and pot and lid handles respectively connectable with each other , comprising : a pressure limiting valve mounted on said lid ; cockable spring means for manually loading said pressure limiting valve to a desired pressure within a range of pressures within said pressure cooker ; means for locking said pot and lid handles with each other ; and means for cocking said spring only with said lid and pot handles locked together . 3 . P atent : 4116027 ( Door lock ) : A door lock comprising a frame , an elongate belt disposed in said frame for movement in the direction of the bolt axis , said bolt having a cavity therein and having a nose end extending outwardly beyond said frame , ﬁrst means carried by said frame and extending into said cavity for movement between ﬁrst and second positions generally in a direction parallel to said bolt axis , a latch disposed to slide laterally of said bolt axis within said cavity between an unlock position in which said latch is aligned with said ﬁrst means in the direction of said bolt axis for abutment therewith such that movement of said ﬁrst means from said ﬁrst to said second position results in conjoint movement of said latch and said bolt to retract said bolt and a lock position in which said latch is spaced from said ﬁrst means laterally of said bolt axis in both said ﬁrst and second positions of said ﬁrst means , and means for selectively positioning said latch in either said lock or said unlock position . 4 . Experimental Results For experimental purpose , we constructed a database of 73 independent patent claims varying in four categories pressure cooker , bicycle , tissue paper and ceiling fans . Each category had approxi - mately an equal share in the database ( Pressure Cooker : 20 , Tissue Paper : 16 , Bicycle : 21 , Ceiling 172172 No SNoun P Noun StmW ords 4024982 bayonet , cooker , cooker , joint , lid , lid , lid , lid , lid , pot , pot , pot , pot , pressure , pressure , pressure , pressure , pressure , range , spring , spring , type , valve , valve means , means , parts , pres - sures bayonet , cooker , cooker , joint , li , li , li , li , li , mean , mean , part , pot , pot , pot , pot , pressur , pressur , pressur , pressur , pressur , pressur , rang , spring , spring , typ , valv , valv 3973694 circumference , closure , closure , cooker , edge , half , length , lid , lid , lid , manner , maximum , part , part , part , part , periphery , plain , pressure , Pressure , rim , rim ﬂanges , ﬂanges circumfer , closur , closur , cooker , edg , ﬂang , ﬂang , half , length , li , li , li , man - ner , maxim , part , part , part , part , pe - riph , plain , pressur , pressur , rim , rim 4116027 abutment , belt , bolt , bolt , bolt , bolt , bolt , bolt , bolt , bolt , cavity , cavity , cav - ity , conjoint , direction , direction , direc - tion , door , end , frame , frame , frame , frame , lock , lock , lock , movement , movement , movement , nose , paral - lel , position , position , position , posi - tion , positioning , therewith axis , axis , axis , po - sitions , posi - tions , results abutm , ac , ac , ac , belt , bolt , bolt , bolt , bolt , bolt , bolt , bolt , bolt , cav , cav , cav , conjoint , direct , direct , direct , door , en , fram , fram , fram , fram , lock , lock , lock , mov , mov , mov , no , parallel , posit , posit , posit , posit , posit , posit , posit , result , therewith Table 1 . Singular ( SNoun ) and Plural ( P Noun ) nouns along with their stemmed words Fan : 16 ) . Figure 2 shows the similarity of each of the point belonging to a category with respect to all the points in the same category . So more dense the cluster is , the more similar the data points are of the same category . The categories which have many outliers ( categories of lower density ) may result in poor ranking . We randomly selected 16 independent claims ( four from each category ) to test the accuracy of our algorithm and then ran our algorithm for each of these query claims . We calculate the accuracy parameter based on the top - 5 , top - 10 , top - 15 results sorted on similarity scores . Accuracy - Top 15 is deﬁned as the ratio of the number of patent claims belonging to the category of the query claim occurring in the top - 15 results to 15 . For example , if we get the number of patent claims belonging to the category of the query claim as 10 in the top 15 then , Accuracy - Top 15 = 10 / 15 = 0 . 67 . Similarly , Accuracy - Top 10 and Accuracy - Top 5 are calculated . The results table is sorted on semantic , syntactic and average similarity scores to give three different values of Accuracy - Top 15 , Accuracy - Top 10 and Accuracy - Top 5 . Figures 4 , 4 and 4 give the comparison of Accuracy - Top 5 , Accuracy - Top 10 and Accuracy - Top 15 respectively for all 16 query claims . Figure 6 shows some of the points from Figure 3 plotted on Figure 2 . As can be seen , the query claim , if near to the category centroid , will result in high conﬁdence prediction of category and also shows the point of the category which is the nearest to the queried claim . We do a worst - case analysis wherein we ﬁnd the ranking error re . Value of re varies from 0 - 1 . Larger the re valve , bad is the ranking of the same category claim . Average re for the average similarity , semantic similarity and syntactic similarity measures are 0 . 20 , 0 . 21 and 0 . 26 respectively . Thus , in our experimentation , the percentage of other category claims above the worst ranked same category claim does not exceed 26 % . Let the number of patent claims in the database be N , the number of patent claims belonging to 173173 4024982 4024982 Similarity bayonet edge 0 . 111 cooker cooker 1 joint part 0 . 333 lid lid 1 pot cooker 0 . 333 pot maximum 0 . 333 pressure pressure 1 pressures pressure 1 range length 0 . 333 range maximum 0 . 333 spring length 0 . 25 spring part 0 . 25 type manner 0 . 333 valve part 0 . 25 means part 0 . 25 parts part 0 . 166 Figure 5 . Most semantically similar words Figure 6 . Cluster Points Figure 7 . Ranking - Error Figure 8 . Accuracy - Top 5 Figure 9 . Accuracy - Top 10 Figure 10 . Accuracy - Top 15 the query claim category be Nq . If the lowest rank of the patent claim belonging to the query claim category is lw then the re is given by , re = ( N − lw ) / ( N − Nq ) The Figure 7 gives the ranking error for the query claim iterations . Iterations 1 - 4 are for category pressure cooker , Iterations 5 - 8 are for category tissue paper , Iterations 9 - 12 are for category bicycle and iterations 13 - 16 are for category ceiling fan . 5 . Summary We propose a method and describe a tool to perform patent claim similarity analysis based on natural language processing techniques . The proposed technique is based on determining the simi - larity between two claims as a measure of the syntactic and semantic similarity between their texts . An automation to the process of patent claim analysis is required by patent analysts and attorneys because the manual process of comparing claims is difﬁcult due to the vast amount of information content that needs to be analyzed . We performed experiments on published patent documents ob - tained from Google patents website . Through experiments , we conclude that a combination of both syntactic and semantic similarity is an important indicator for determining the overall similarity between patent claims . We also conclude that search relevance can be increased and the search 174174 space can be decreased by manually or automatically categorizing the patents and the query based on topics . 6 . Acknowledgement Thanks to Subhadip Sarkar and Pinaki Ghosh from Intellectual Property Cell of Infosys Tech - nologies Limited for all their constant help in the project . References [ 1 ] A . Fujii , M . Iwayama , and N . Kando . Introduction to the special issue on patent processing . Inf . Process . Manage . , 43 ( 5 ) : 1149 – 1153 , 2007 . [ 2 ] J . B . Lovins . Development of a stemming algorithm . Published in Mechanical translation and computational linguistics , ( 11 ) : 22 – 31 , 1968 . [ 3 ] R . Richardson , A . F . Smeaton , and J . Murphy . Using WordNet as a knowledge base for measuring semantic similarity between words . In Proceedings of AICS Conference , CA - 1294 , Dublin , Ireland , 1994 . [ 4 ] S . Sheremetyeva . Natural language analysis of patent claims . In Proceedings of the ACL - 2003 workshop on Patent corpus processing , pages 66 – 73 , Morristown , NJ , USA , 2003 . Association for Computational Linguistics . [ 5 ] A . Shinmori , M . Okumura , Y . Marukawa , and M . Iwayama . Patent claim processing for readability : structure analysis and term explanation . In Proceedings of the ACL - 2003 workshop on Patent corpus processing , pages 56 – 65 , Morristown , NJ , USA , 2003 . Association for Computational Linguistics . [ 6 ] K . Toutanova , D . Klein , C . D . Manning , and Y . Singer . Feature - rich part - of - speech tagging with a cyclic dependency network . In NAACL ’03 : Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology , pages 173 – 180 , Morristown , NJ , USA , 2003 . Associ - ation for Computational Linguistics . [ 7 ] K . Toutanova and C . D . Manning . Enriching the knowledge sources used in a maximum entropy part - of - speech tagger . In Proceedings of the 2000 Joint SIGDAT conference on Empirical methods in natural language processing and very large corpora , pages 63 – 70 , Morristown , NJ , USA , 2000 . Association for Computational Linguistics . [ 8 ] Y . - H . Tseng , C . - J . Lin , and Y . - I . Lin . Text mining techniques for patent analysis . Inf . Process . Manage . , 43 ( 5 ) : 1216 – 1247 , 2007 . 175175