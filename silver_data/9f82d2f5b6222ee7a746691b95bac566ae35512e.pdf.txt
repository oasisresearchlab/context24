International Joint Conference on Natural Language Processing , pages 543 – 551 , Nagoya , Japan , 14 - 18 October 2013 . TopicRank : Graph - Based Topic Ranking for Keyphrase Extraction Adrien Bougouin and Florian Boudin and B´eatrice Daille Universit´e de Nantes , LINA , France { adrien . bougouin , florian . boudin , beatrice . daille } @ univ - nantes . fr Abstract Keyphrase extraction is the task of iden - tifying single or multi - word expressions that represent the main topics of a doc - ument . In this paper we present Topi - cRank , a graph - based keyphrase extrac - tion method that relies on a topical rep - resentation of the document . Candidate keyphrases are clustered into topics and used as vertices in a complete graph . A graph - based ranking model is applied to assign a signiﬁcance score to each topic . Keyphrases are then generated by select - ing a candidate from each of the top - ranked topics . We conducted experiments on four evaluation datasets of different languages and domains . Results show that TopicRank signiﬁcantly outperforms state - of - the - art methods on three datasets . 1 Introduction Keyphrases are single or multi - word expres - sions that represent the main topics of a doc - ument . Keyphrases are useful in many tasks such as information retrieval ( Medelyan and Wit - ten , 2008 ) , document summarization ( Litvak and Last , 2008 ) or document clustering ( Han et al . , 2007 ) . Although scientiﬁc articles usually provide them , most of the documents have no associated keyphrases . Therefore , the problem of automati - cally assigning keyphrases to documents is an ac - tive ﬁeld of research . Automatic keyphrase extraction methods are di - vided into two categories : supervised and un - supervised methods . Supervised methods re - cast keyphrase extraction as a binary classiﬁca - tion task ( Witten et al . , 1999 ) , whereas unsuper - vised methods apply different kinds of techniques such as language modeling ( Tomokiyo and Hurst , 2003 ) , clustering ( Liu et al . , 2009 ) or graph - based ranking ( Mihalcea and Tarau , 2004 ) . In this paper , we present a new unsupervised method called TopicRank . This new method is an improvement of the TextRank method ap - plied to keyphrase extraction ( Mihalcea and Tarau , 2004 ) . In the TextRank method , a document is represented by a graph where words are vertices and edges represent co - occurrence relations . A graph - based ranking model derived from PageR - ank ( Brin and Page , 1998 ) is then used to assign a signiﬁcance score to each word . Here , we pro - pose to represent a document as a complete graph where vertices are not words but topics . We de - ﬁne a topic as a cluster of similar single and multi - word expressions . Our approach has several advantages over Tex - tRank . Intuitively , ranking topics instead of words is a more straightforward way to identify the set of keyphrases that covers the main topics of a docu - ment . To do so , we simply select a keyphrase can - didate from each of the top - ranked clusters . Clus - tering keyphrase candidates into topics also elimi - nates redundancy while reinforcing edges . This is very important because the ranking performance strongly depends on the conciseness of the graph , as well as its ability to precisely represent seman - tic relations within a document . Hence , another advantage of our approach is the use of a com - plete graph that better captures the semantic rela - tions between topics . To evaluate TopicRank , we follow Hasan and Ng ( 2010 ) who stated that multiple datasets must be used to evaluate and fully understand the strengths and weaknesses of a method . We use four evaluation datasets of different languages , document sizes and domains , and compare the keyphrases extracted by TopicRank against three baselines ( TF - IDF and two graph - based methods ) . TopicRank outperforms the baselines on three of the datasets . As for the fourth one , an additional experiment shows that an improvement could be achieved with a more effective selection strategy . 543 The rest of this paper is organized as follows . Section 2 presents the existing methods for the keyphrase extraction task , Section 3 details our proposed approach , Section 4 describes the eval - uation process and Section 5 shows the analyzed results . Finally , Section 6 concludes this work and suggests directions for future work . 2 Related Work The task of automatic keyphrase extraction has been well studied and many supervised and un - supervised approaches have been proposed . For supervised methods , keyphrase extraction is often treated as a binary classiﬁcation task ( Witten et al . , 1999 ) . Unsupervised approaches proposed so far have involved a number of techniques , including language modeling ( Tomokiyo and Hurst , 2003 ) , clustering ( Liu et al . , 2009 ) and graph - based rank - ing ( Mihalcea and Tarau , 2004 ) . While supervised approaches have generally proven to be more suc - cessful , the need for training data and the bias to - wards the domain on which they are trained re - main two critical issues . In this paper , we concentrate on graph - based ranking methods for keyphrase extraction . Start - ing with TextRank ( Mihalcea and Tarau , 2004 ) , these methods are becoming the most widely used unsupervised approaches for keyphrase extraction . In TextRank , a document is represented as a graph in which vertices are words connected if they co - occur in a given window of words . The signif - icance of each vertex is computed using a ran - dom walk algorithm derived from PageRank ( Brin and Page , 1998 ) . Words corresponding to the top ranked vertices are then selected and assembled to generate keyphrases . Wan and Xiao ( 2008 ) propose SingleRank , a simple modiﬁcation of TextRank that weights the edges with the number of co - occurrences and no longer extracts keyphrases by assembling ranked words . Keyphrases are noun phrases extracted from the document and ranked according to the sum of the signiﬁcance of the words they con - tain . Although it improves the results , this scoring method has no proper justiﬁcation and tends to as - sign high scores to long but non important phrases . For example , “nash equilibrium” , from the ﬁle J - 14 . txt of our evaluation dataset named SemEval , is a keyphrase composed of the two most signiﬁcant words in the document , according to SingleRank . Therefore , SingleRank succeeds to extract it , but candidates such as “unique nash equilibrium” or “exact nash equilibrium” which are longer , then have a better score , are extracted too . With Topi - cRank , we aim to circumvent this by ranking clus - ters of single and multi - word expressions instead of words . Wan and Xiao ( 2008 ) use a small number of nearest neighbor documents to compute more ac - curate word co - occurrences and reinforce edge weights in the word graph . Borrowing co - occurrence information from multiple documents , their approach improves the word ranking perfor - mance . Instead of using words , Liang et al . ( 2009 ) use keyphrase candidates as vertices . Applied to Chinese , their method uses query log knowl - edge to determine phrase boundaries . Tsatsaro - nis et al . ( 2010 ) propose to connect vertices em - ploying semantic relations computed using Word - Net ( Miller , 1995 ) or Wikipedia . They also experi - ment with different random walk algorithms , such as HITS ( Kleinberg , 1999 ) or modiﬁed PageRank . Liu et al . ( 2010 ) consider the topics of words using a Latent Dirichlet Allocation model ( Blei et al . , 2003 , LDA ) . As done by Haveliwala ( 2003 ) for Information Retrieval , they propose to decom - pose PageRank into multiple PageRanks speciﬁc to various topics . A topic - biased PageRank is computed for each topic and corresponding word scores are combined . As this method uses a LDA model , it requires training data . With TopicRank , we also consider topics , but our aim is to use a single document , the document to be analyzed . 3 TopicRank TopicRank is an unsupervised method that aims to extract keyphrases from the most important top - ics of a document . Topics are deﬁned as clus - ters of similar keyphrase candidates . Extract - ing keyphrases from a document consists in the following steps , illustrated in Figure 1 . First , the document is preprocessed ( sentence segmen - tation , word tokenization and Part - of - Speech tag - ging ) and keyphrase candidates are clustered into topics . Then , topics are ranked according to their importance in the document and keyphrases are extracted by selecting one keyphrase candidate for each of the most important topics . Section 3 . 1 ﬁrst explains how the topics are identiﬁed within a document , section 3 . 2 presents the approach we use to rank them and section 3 . 3 describes the keyphrase selection . 544 Candidate Extraction Candidate Clustering Graph - Based Ranking Keyphrase Selection Preprocessing Document Keyphrases Figure 1 : Processing steps of TopicRank . 3 . 1 Topic Identiﬁcation Keyphrases describe the most important topics of a document , thus the ﬁrst step is to identify the keyphrase candidates that represent them . Hulth ( 2003 ) stated that most keyphrases assigned by human readers are noun phrases . Hence , the most important topics of a document can be found by extracting their most signiﬁcant noun phrases . We follow Wan and Xiao ( 2008 ) and extract the longest sequences of nouns and adjectives from the document as keyphrase candidates . Other methods use syntactically ﬁltered n - grams that are most likely to contain a larger number of candi - dates matching with reference keyphrases , but the n - gram restricted length is a problem . Indeed , n - grams do not always capture as much information as the longest noun phrases . Also , they are less likely to be grammatically correct . In a document , a topic is usually conveyed by more than one noun phrase . Consequently , some keyphrase candidates are redundant in regard to the topic they represent . Existing graph - based methods ( TextRank , SingleRank , etc . ) do not take that fact into account . Keyphrase candidates are usually treated independently and the information about the topic they represent is scattered through - out the graph . Thus , we propose to group similar noun phrases as a single entity , a topic . We consider that two keyphrase candidates are similar if they have at least 25 % of overlapping words 1 . Keyphrase candidates are stemmed to re - duce their inﬂected word forms into root forms 2 . To automatically group similar candidates into 1 The value of 25 % has been deﬁned empirically . 2 We chose to use stems because of the availability of stemmers for various languages , but using lemmas is another possibility that could probably work better . topics , we use a Hierarchical Agglomerative Clus - tering ( HAC ) algorithm . Among the commonly used linkage strategies , which are complete , aver - age and single linkage , we use the average link - age , because it stands as a compromise between complete and single linkage . In fact , using a highly agglomerative strategy such as complete linkage is more likely to group topically unrelated keyphrase candidates , whereas a strategy such as single linkage is less likely to group topically re - lated keyphrase candidates . 3 . 2 Graph - Based Ranking TopicRank represents a document by a complete graph in which topics are vertices and edges are weighted according to the strength of the seman - tic relations between vertices . Then , TextRank’s graph - based ranking model is used to assign a sig - niﬁcance score to each topic . 3 . 2 . 1 Graph Construction Formally , let G = ( V , E ) be a complete and undi - rected graph where V is a set of vertices and the edges E a subset 3 of V × V . Vertices are topics and the edge between two topics t i and t j is weighted according to the strength of their semantic rela - tion . t i and t j have a strong semantic relation if their keyphrase candidates often appear close to each other in the document . Therefore , the weight w i , j of their edge is deﬁned as follows : w i , j = X c i ∈ t i X c j ∈ t j dist ( c i , c j ) ( 1 ) dist ( c i , c j ) = X p i ∈ pos ( c i ) X p j ∈ pos ( c j ) 1 | p i − p j | ( 2 ) where dist ( c i , c j ) refers to the reciprocal dis - tances between the offset positions of the candi - date keyphrases c i and c j in the document and where pos ( c i ) represents all the offset positions of the candidate keyphrase c i . Our approach to construct the graph differs from TextRank . G is a complete graph and topics are therefore interconnected . The completeness of the graph has the beneﬁt of providing a more exhaustive view of the relations between topics . Also , computing weights based on the distances between offset positions bypasses the need for a manually deﬁned parameter , such as the window of words used by state - of - the - art methods ( Tex - tRank , SingleRank , etc ) . 3 E = { ( v 1 , v 2 ) | ∀ v 1 , v 2 ∈ V , v 1 6 = v 2 } 545 [ methods ; numerical solution methods ] [ model ; mathematical model ] [ ion exchange ; ion exchanger compression ; compressible ion exchanger ] [ inverse problems ] [ efficiency ] [ process ] [ unique solvability ] [ numerical experiment ] 0 . 020 0 . 023 0 . 011 0 . 033 0 . 006 0 . 016 0 . 022 0 . 193 0 . 063 0 . 008 0 . 015 0 . 034 0 . 006 0 . 085 0 . 011 0 . 068 0 . 017 0 . 009 0 . 0 0 5 0 . 016 0 . 010 0 . 004 0 . 003 0 . 006 0 . 009 0 . 0 0 5 0 . 002 0 . 004 Inverse problems for a mathematical model of ion exchange in a compressible ion exchanger A mathematical model of ion exchange is considered , allowing for ion exchanger compression in the process of ion exchange . Two inverse problems are investigated for this model , unique solvability is proved , and numerical solution methods are proposed . The efficiency of the proposed methods is demon - strated by a numerical experiment . Keyphrases assigned by human annotators : ion exchange ; mathematical model ; inverse problems ; nume - rical solution methods ; unique solvability ; compressible ion exchanger ; ion exchanger compression Keyphrases assigned by TopicRank : ion exchange ; mathematical model ; inverse problems ; nume - rical solution methods ; process ; unique solvability ; efficiency ; numerical experiment Figure 2 : Sample graph build by TopicRank from Inspec , ﬁle 2040 . abstr . Figure 2 shows a sample graph built for an abstract from one of our evaluation datasets ( In - spec ) . Vertices are topics , represented as clusters of lexically similar keyphrase candidates , and con - nected with all the others . In the example , we see the naivety of our clustering approach . Indeed , the clustering succeeds to group “ion exchanger” , “ion exchanger compression” and “compressible ion exchanger” , but the clustering of “methods” with “numerical solution methods” and “model” with “mathematical model” may be ambiguous as “methods” and “model” can be used to refer to other methods or models . 3 . 2 . 2 Subject Ranking Once the graph is created , the graph - based rank - ing model TextRank , proposed by Mihalcea and Tarau ( 2004 ) , is used to rank the topics . This model assigns a signiﬁcance score to topics based on the concept of “voting” : high - scoring topics contribute more to the score of their connected topic t i : S ( t i ) = ( 1 − λ ) + λ × X t j ∈ V i w j , i × S ( t j ) X t k ∈ V j w j , k ( 3 ) where V i are the topics voting for t i and λ is a damping factor generally deﬁned to 0 . 85 ( Brin and Page , 1998 ) . 3 . 3 Keyphrase Selection Keyphrase selection is the last step of Topi - cRank . For each topic , only the most represen - tative keyphrase candidate is selected . This selec - tion avoids redundancy and leads to a good cover - age of the document topics , because extracting k keyphrases precisely covers k topics . To ﬁnd the candidate that best represents a topic , we propose three strategies . Assuming that a topic is ﬁrst introduced by its generic form , the ﬁrst strategy is to select the keyphrase candidate that appears ﬁrst in the document . The second strategy assumes that the generic form of a topic is the one that is most frequently used and the third strategy selects the centroid of the cluster . The centroid is the candidate that is the most similar to the other candidates of the cluster 4 . 4 Experimental Settings 4 . 1 Datasets To compare the keyphrases extracted by Topi - cRank against existing methods , we employ four standard evaluation dataset of different languages , document sizes and domains . The ﬁrst dataset , formerly used by Hulth ( 2003 ) , contains 2000 English abstracts of journal papers from the Inspec database . The 2000 abstracts are divided into three sets : a training set , which con - tains 1000 abstracts , a validation set containing 500 abstracts and a test set containing the 500 re - maining abstracts . In our experiments we use the 500 abstracts from the test set . Several reference keyphrase sets are available with this dataset . Just as Hulth ( 2003 ) , we use the uncontrolled refer - ence , created by professional indexers . The second dataset was built by Kim et al . ( 2010 ) for the keyphrase extraction task of the Se - mEval 2010 evaluation campaign . This dataset is 4 The similarity between two candidates is computed with the stem overlap measure used by the clustering algorithm . 546 Corpus Documents Keyphrases Type Language Number Tokens average Total Average Missing Inspec Abstracts English 500 136 . 3 4913 9 . 8 21 . 8 % SemEval Papers English 100 5179 . 6 1466 14 . 7 19 . 3 % WikiNews News French 100 309 . 6 964 9 . 6 4 . 4 % DEFT Papers French 93 6844 . 0 485 5 . 2 18 . 2 % Table 1 : Dataset statistics ( missing keyphrases are counted based on their stemmed form ) . composed of 284 scientiﬁc articles ( in English ) from the ACM Digital Libraries ( conference and workshop papers ) . The 284 documents are divided into three sets : a trial set containing 40 documents , a training set , which contains 144 documents and a test set containing 100 documents . In our exper - iments we use the 100 documents of the test set . As for the reference keyphrases , we use the com - bination of author and reader assigned keyphrases provided by Kim et al . ( 2010 ) . The third dataset is a French corpus that we created from the French version of WikiNews 5 . It contains 100 news articles published between May 2012 and December 2012 . Each document has been annotated by at least three students . We combined the annotations of each document and removed the lexical redundancies . All of the 100 documents are used in our experiments . The fourth dataset is a French corpus made for the keyphrase extraction task of the DEFT 2012 evaluation campaign ( Paroubek et al . , 2012 ) . It contains 468 scientiﬁc articles extracted from ´Erudit . These documents are used for two tasks of DEFT and are , therefore , divided in two datasets of 244 documents each . In our experiments we use the test set of the second task dataset . It contains 93 documents provided with author keyphrases . Table 1 gives statistics about the datasets . They are different in terms of document sizes and num - ber of assigned keyphrases . The Inspec and WikiNews datasets have shorter documents ( ab - stract and news articles ) compared to SemEval and DEFT that both contain full - text scientiﬁc ar - ticles . Also , the keyphrases provided with the datasets are not always present in the documents ( less than 5 % of missing keyphrases for Wikinews and about 20 % of missing keyphrases for the other datasets ) . This induces a bias in the re - 5 The WikiNews dataset is available for free at the given url : https : / / github . com / adrien - bougouin / WikinewsKeyphraseCorpus . sults . As explained by Hasan and Ng ( 2010 ) , some researchers avoid this problem by removing missing keyphrases from the references . In our experiments , missing keyphrases have not been removed . However , we evaluate with stemmed forms of candidates and reference keyphrases to reduce mismatches . 4 . 2 Preprocessing For each dataset , we apply the following pre - processing steps : sentence segmentation , word tokenization and Part - of - Speech tagging . For word tokenization , we use the TreebankWordTo - kenizer provided by the python Natural Language ToolKit ( Bird et al . , 2009 ) for English and the Bonsai word tokenizer 6 for French . For Part - of - Speech tagging , we use the Stanford POS - tagger ( Toutanova et al . , 2003 ) for English and MElt ( Denis and Sagot , 2009 ) for French . 4 . 3 Baselines For comparison purpose , we use three base - lines . The ﬁrst baseline is TF - IDF ( Sp¨arck Jones , 1972 ) , commonly used because of the difﬁculty to achieve competitive results against it ( Hasan and Ng , 2010 ) . This method relies on a col - lection of documents and assumes that the k keyphrase candidates containing words with the highest TF - IDF weights are the keyphrases of the document . As TopicRank aims to be an improve - ment of the state - of - the - art graph - based methods for keyphrase extraction , the last two baselines are TextRank ( Mihalcea and Tarau , 2004 ) and Sin - gleRank ( Wan and Xiao , 2008 ) . In these meth - ods , the graph is undirected , vertices are syn - tactically ﬁltered words ( only nouns and adjec - tives ) and the edges are created based on the co - occurrences of words within a window of 2 for 6 The Bonsai word tokenizer is a tool provided with the Bonsai PCFG - LA parser : http : / / alpage . inria . fr / statgram / frdep / fr _ stat _ dep _ parsing . html . 547 Methods Inspec SemEval WikiNews DEFT P R F P R F P R F P R F TF - IDF 32 . 7 38 . 6 33 . 4 13 . 2 8 . 9 10 . 5 33 . 9 35 . 9 34 . 3 10 . 3 19 . 1 13 . 2 TextRank 14 . 2 12 . 5 12 . 7 7 . 9 4 . 5 5 . 6 9 . 3 8 . 3 8 . 6 4 . 9 7 . 1 5 . 7 SingleRank 34 . 8 40 . 4 35 . 2 4 . 6 3 . 2 3 . 7 19 . 4 20 . 7 19 . 7 4 . 5 9 . 0 5 . 9 TopicRank 27 . 6 31 . 5 27 . 9 14 . 9 10 . 3 12 . 1 † 35 . 0 37 . 5 35 . 6 † 11 . 7 21 . 7 15 . 1 † Table 2 : Comparison of TF - IDF , TextRank , SingleRank and TopicRank methods , when extracting a maximum of 10 keyphrases . Results are expressed as a percentage of precision ( P ) , recall ( R ) and f - score ( F ) . † indicates TopicRank’s signiﬁcant improvement over TextRank and SingleRank at 0 . 001 level using Student’s t - test . TextRank and 10 for SingleRank . As well as their window size , they differ in the weighting of the graph : TextRank has an unweighted graph and SingleRank has a graph weighted with the number of co - occurrences between the words . A graph - based ranking model derived from PageR - ank ( Brin and Page , 1998 ) ranks each vertex and extracts multi - word keyphrases according to the ranked words . In TextRank , the k - best words are used as keyphrases and the adjacent sequences in the document are collapsed into multi - word keyphrases . Although k is normally proportional to the number of vertices in the graph , we set it to a constant number , because experiments conducted by Hasan and Ng ( 2010 ) show that the optimal value of the ratio depends on the size of the docu - ment . In SingleRank , noun phrases extracted with the same method as TopicRank are ranked by a score equal to the sum of their words scores . Then , the k - best noun phrases are selected as keyphrases . For all the baselines , we consider keyphrase candidates which have the same stemmed form as redundant . Once they are ranked we keep the best candidate and remove the others . This can only affect the results in a positive way , because the evaluation is performed with stemmed forms , which means that removed candidates are consid - ered equal to the retained candidate . 4 . 4 Evaluation Measures The performances of TopicRank and the base - lines are evaluated in terms of precision , recall and f - score ( f1 - measure ) when a maximum of 10 keyphrases are extracted ( k = 10 ) . As said be - fore , the candidate and reference keyphrases are stemmed to reduce the number of mismatches . 5 Results To validate our approach , we designed three ex - periments . The ﬁrst experiment compares Topi - cRank 7 to the baselines 8 , the second experiment individually evaluates the modiﬁcations of Topi - cRank compared to SingleRank 9 and the last ex - periment compares the keyphrase selection strate - gies . To show that the clusters are well ranked , we also present the results that could be achieved with a “perfect” keyphrase selection strategy . Table 2 shows the results of TopicRank and the three baselines . Overall , our method outperforms TextRank , SingleRank and TF - IDF . The results of TopicRank and the baselines are lower on Se - mEval and DEFT ( less than 16 % of f - score ) , so we deduce that it is more difﬁcult to treat long docu - ments than short ones . On Inspec , TopicRank fails to do better than all the baselines , but on SemEval , WikiNews and DEFT , it performs better than TF - IDF and signiﬁcantly outperforms TextRank and SingleRank . Also , we observe a gap between TF - IDF’s and the two graph - based baselines results . Although TopicRank is a graph - based method , it overcomes this gap by almost tripling the f - score of both TextRank and SingleRank . Table 3 shows the individual modiﬁcations of TopicRank compared to SingleRank . We evalu - ate SingleRank when vertices are keyphrase can - didates ( + phrases ) , vertices are topics ( + topics ) and when TopicRank’s graph construction is used 7 Results reported for TopicRank are obtained with the ﬁrst position selection strategy . 8 TopicRank and the baselines implementations can be found at the given url : https : / / github . com / adrien - bougouin / KeyBench / tree / ijcnlp _ 2013 . 9 The second experiment is performed with SingleRank instead of TextRank , because SingleRank also uses a graph with weighted edges and is , therefore , closer to TopicRank . 548 Methods Inspec SemEval WikiNews DEFT P R F P R F P R F P R F SingleRank 34 . 8 40 . 4 35 . 2 4 . 6 3 . 2 3 . 7 19 . 4 20 . 7 19 . 7 4 . 5 9 . 0 5 . 9 + phrases 21 . 5 25 . 9 22 . 1 9 . 6 7 . 0 8 . 0 † 28 . 6 30 . 1 28 . 9 † 10 . 5 19 . 7 13 . 5 † + topics 26 . 6 30 . 2 26 . 8 14 . 7 10 . 2 11 . 9 † 31 . 0 32 . 8 31 . 4 † 11 . 5 21 . 4 14 . 8 † + complete 34 . 9 41 . 0 35 . 5 5 . 5 3 . 8 4 . 4 20 . 0 21 . 4 20 . 3 4 . 4 9 . 0 5 . 8 TopicRank 27 . 6 31 . 5 27 . 9 14 . 9 10 . 3 12 . 1 † 35 . 0 37 . 5 35 . 6 † 11 . 7 21 . 7 15 . 1 † Table 3 : Comparison of the individual modiﬁcations from SingleRank to TopicRank , when extracting a maximum of 10 keyphrases . Results are expressed as a percentage of precision ( P ) , recall ( R ) and f - score ( F ) . † indicates a signiﬁcant improvement over SingleRank at 0 . 001 level using Student’s t - test . with word vertices ( + complete ) . Using keyphrase candidates as vertices signiﬁcantly improves Sin - gleRank on SemEval , WikiNews and DEFT . On Inspec , it induces a considerable loss of perfor - mance caused by an important deﬁcit of con - nections that leads to connected components , as shown in Figure 3 . When we look at the dis - tribution of “fuzzy” into the graph , we can see that it is scattered among the connected compo - nents and , therefore , increases the difﬁculty to se - lect “fuzzy Bayesian inference techniques” as a keyphrase ( according to the reference ) . The other datasets contain longer documents , which may dampen this problem . Overall , using topics as ver - tices performs better than using keyphrase candi - dates . Using topics signiﬁcantly outperforms Sin - gleRank on SemEval , WikiNews and DEFT . As for the new graph construction , SingleRank is im - proved on Inspec , SemEval and WikiNews . Re - sults on DEFT are lower than SingleRank , but still competitive . Although the improvements are not signiﬁcant , the competitive results point out that the new graph construction can be used instead of the former method , which requires to manually de - ﬁne a window of words . Experiments show that the three contributions are improvements and Top - icRank beneﬁts from each of them . Table 4 shows the results of TopicRank when selecting either the ﬁrst appearing candidate , the most frequent one or the centroid of each cluster . Selecting the ﬁrst appearing keyphrase candidate is the best strategy of the three . It signiﬁcantly outperforms the frequency and the centroid strate - gies on SemEval , WikiNews and DEFT . On Se - mEval and DEFT , we observe a huge gap between the results of the ﬁrst position strategy and the oth - ers . The two datasets are composed of scientiﬁc articles where the full form of the main topics are often introduced at the beginning and then , con - veyed by abbreviations or inherent concepts ( e . g . the ﬁle C - 17 . txt from SemEval contains packet - switched network as a keyphrase where packet is more utilized in the content ) . These are usually more similar to the generic form and / or more fre - quent , which explains the observed gap . basic relationships principal concepts bayesian decision procedure bayesian approach problems case technique decision making fuzzy data fuzzy bayesian inference techniques mathematical fundamentals main operations fuzzy pseudofuzzy quantities concept practical realization modus ponens rule fuzzy bayesian method 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 Figure 3 : Connected component problem with the method SingleRank + phrases . Example taken from Inspec , ﬁle 1931 . abstr . To observe the ranking efﬁciency of TopicRank , we also evaluate it without taking the keyphrase selection strategy into account . To do so , we ex - tract the top - ranked clusters and mark the refer - ence keyphrases into them . We deduce the up - per bound results of our method by computing the precision , recall and f - score where the number of correct matches is equal to the number of clusters containing at least one reference keyphrase . The upper bound results show that our method could possibly perform better than all the baselines for the four datasets . Even on Inspec , the loss of performance can be bypassed by a more efﬁcient keyphrase selection strategy . 549 Methods Inspec SemEval WikiNews DEFT P R F P R F P R F P R F First position 27 . 6 31 . 5 27 . 9 14 . 9 10 . 3 12 . 1 † 35 . 0 37 . 5 35 . 6 † 11 . 7 21 . 7 15 . 1 † Frequency 26 . 7 30 . 2 26 . 8 1 . 7 1 . 2 1 . 4 25 . 7 27 . 6 26 . 2 1 . 9 3 . 8 2 . 5 Centroid 24 . 5 28 . 0 24 . 7 1 . 9 1 . 2 1 . 5 28 . 1 29 . 9 28 . 5 2 . 6 5 . 0 3 . 4 Upper bound 36 . 4 39 . 0 35 . 6 37 . 6 25 . 8 30 . 3 42 . 5 44 . 8 42 . 9 14 . 9 28 . 0 19 . 3 Table 4 : Comparison of the keyphrase candidate selection strategies against the best possible strategy ( upper bound ) , when extracting a maximum of 10 keyphrases . Results are expressed as a percentage of precision ( P ) , recall ( R ) and f - score ( F ) . † indicates the ﬁrst position strategy’s signiﬁcant improvement over the frequency and the centroid strategies at 0 . 001 level using Student’s t - test . 6 Conclusion and Future Work In this paper we presented TopicRank , an unsu - pervised method for keyphrase extraction . Topi - cRank extracts the noun phrases that represent the main topics of a document . The noun phrases are clustered into topics and used as vertices in a com - plete graph . The resulting graph stands as a topical representation of the document . Topics are scored using the TextRank ranking model and keyphrases are then extracted by selecting the most represen - tative candidate from each of the top - ranked top - ics . Our approach offers several advantages over existing graph - based keyphrase extraction meth - ods . First , as redundant keyphrase candidates are clustered , extracted keyphrases cover the main topics of the document better . The use of a com - plete graph also captures the relations between topics without any manually deﬁned parameters and induces better or similar performances than the state - of - the - art connection method that uses a co - occurrence window . We conducted experi - ments on four standard evaluation datasets of dif - ferent languages , document sizes and domains . Results show that TopicRank outperforms TF - IDF and signiﬁcantly improves the state - of - the - art graph - based methods on three of them . In future work , we will further improve the topic identiﬁcation and the keyphrase selection . More precisely , we will develop an evaluation pro - cess to determine cluster quality and then focus on experimenting with other clustering algorithms and investigate the use of linguistic knowledge for similarity measures . As for the keyphrase selec - tion , our experiments show that the current method does not provide the best solution that could be achieved with the ranked clusters . We plan to im - prove it using machine learning methods . Acknowledgments The authors would like to thank the anonymous reviewers for their useful advice and comments . This work was supported by the French National Research Agency ( TermITH project – ANR - 12 - CORD - 0029 ) . References Steven Bird , Ewan Klein , and Edward Loper . 2009 . Natural Language Processing with Python . O’Reilly Media . David M . Blei , Andrew Y . Ng , and Michael I . Jordan . 2003 . Latent Dirichlet Allocation . Journal of Ma - chine Learning Research , 3 : 993 – 1022 . Sergey Brin and Lawrence Page . 1998 . The Anatomy of a Large - Scale Hypertextual Web Search Engine . Computer Networks and ISDN Systems , 30 ( 1 ) : 107 – 117 . Pascal Denis and Benoˆıt Sagot . 2009 . Coupling an Annotated Corpus and a Morphosyntactic Lexicon for State - of - the - Art POS Tagging with Less Human Effort . In Proceedings of the 23rd Paciﬁc Asia Con - ference on Language , Information and Computation ( PACLIC ) , pages 110 – 119 , Hong Kong , December . City University of Hong Kong . Juhyun Han , Taehwan Kim , and Joongmin Choi . 2007 . Web Document Clustering by Using Automatic Keyphrase Extraction . In Proceedings of the 2007 IEEE / WIC / ACM International Conferences on Web Intelligence and Intelligent Agent Technology , pages 56 – 59 , Washington , DC , USA . IEEE Computer So - ciety . Kazi Saidul Hasan and Vincent Ng . 2010 . Conun - drums in Unsupervised Keyphrase Extraction : Mak - ing Sense of the State - of - the - Art . In Proceedings of the 23rd International Conference on Computa - tional Linguistics : Posters , pages 365 – 373 , Strouds - burg , PA , USA . Association for Computational Lin - guistics . 550 Taher H . Haveliwala . 2003 . Topic - Sensitive PageR - ank : A Context - Sensitive Ranking Algorithm for Web Search . IEEE Transactions on Knowledge and Data Engineering , 15 ( 4 ) : 784 – 796 . Anette Hulth . 2003 . Improved Automatic Keyword Extraction Given More Linguistic Knowledge . In Proceedings of the 2003 Conference on Empirical Methods in Natural Language Processing , pages 216 – 223 , Stroudsburg , PA , USA . Association for Computational Linguistics . Su Nam Kim , Olena Medelyan , Min - Yen Kan , and Timothy Baldwin . 2010 . SemEval - 2010 task 5 : Au - tomatic Keyphrase Extraction from Scientiﬁc Arti - cles . In Proceedings of the 5th International Work - shop on Semantic Evaluation , pages 21 – 26 , Strouds - burg , PA , USA . Association for Computational Lin - guistics . Jon M . Kleinberg . 1999 . Authoritative Sources in a Hyperlinked Environment . Journal of the ACM ( JACM ) , 46 ( 5 ) : 604 – 632 , sep . Weiming Liang , Chang - Ning Huang , Mu Li , and Bao - Liang Lu . 2009 . Extracting Keyphrases from Chi - nese News Articles Using TextRank and Query Log Knowledge . In Proceedings of the 23rd Paciﬁc Asia Conference on Language , Information and Compu - tation , pages 733 – 740 , Hong Kong , December . City University of Hong Kong . Marina Litvak and Mark Last . 2008 . Graph - Based Keyword Extraction for Single - Document Summa - rization . In Proceedings of the Workshop on Multi - Source Multilingual Information Extraction and Summarization , pages 17 – 24 , Stroudsburg , PA , USA . Association for Computational Linguistics . Zhiyuan Liu , Peng Li , Yabin Zheng , and Maosong Sun . 2009 . Clustering to Find Exemplar Terms for Keyphrase Extraction . In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing : Volume 1 , pages 257 – 266 , Stroudsburg , PA , USA . Association for Computa - tional Linguistics . Zhiyuan Liu , Wenyi Huang , Yabin Zheng , and Maosong Sun . 2010 . Automatic Keyphrase Extrac - tion Via Topic Decomposition . In Proceedings of the 2010 Conference on Empirical Methods in Nat - ural Language Processing , pages 366 – 376 , Strouds - burg , PA , USA . Association for Computational Lin - guistics . Olena Medelyan and Ian H . Witten . 2008 . Domain - Independent Automatic Keyphrase Indexing with Small Training Sets . Journal of the American Society for Information Science and Technology , 59 ( 7 ) : 1026 – 1040 , may . Rada Mihalcea and Paul Tarau . 2004 . TextRank : Bringing Order Into Texts . In Dekang Lin and Dekai Wu , editors , Proceedings of the 2004 Con - ference on Empirical Methods in Natural Language Processing , pages 404 – 411 , Barcelona , Spain , July . Association for Computational Linguistics . George A . Miller . 1995 . WordNet : a Lexical Database for English . Communications of the Association for Computational Linguistics , 38 ( 11 ) : 39 – 41 . Patrick Paroubek , Pierre Zweigenbaum , Dominic For - est , and Cyril Grouin . 2012 . Indexation libre et contrˆol´ee d’articles scientiﬁques . Pr´esentation et r´esultats du d´eﬁ fouille de textes DEFT2012 ( Con - trolled and Free Indexing of Scientiﬁc Papers . Pre - sentation and Results of the DEFT2012 Text - Mining Challenge ) [ in French ] . In Proceedings of the Joint Conference JEP - TALN - RECITAL 2012 , Workshop DEFT 2012 : D ´Eﬁ Fouille de Textes ( DEFT 2012 Workshop : Text Mining Challenge ) , pages 1 – 13 , Grenoble , France , June . ATALA / AFCP . Karen Sp¨arck Jones . 1972 . A Statistical Interpretation of Term Speciﬁcity and its Application in Retrieval . Journal of Documentation , 28 ( 1 ) : 11 – 21 . Takashi Tomokiyo and Matthew Hurst . 2003 . A Lan - guage Model Approach to Keyphrase Extraction . In Proceedings of the ACL 2003 Workshop on Multi - word Expressions : Analysis , Acquisition and Treat - ment - Volume 18 , pages 33 – 40 , Stroudsburg , PA , USA . Association for Computational Linguistics . Kristina Toutanova , Dan Klein , Christopher D . Man - ning , and Yoram Singer . 2003 . Feature - Rich Part - of - Speech Tagging with a Cyclic Dependency Network . In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology - Volume 1 , pages 173 – 180 , Strouds - burg , PA , USA . Association for Computational Lin - guistics . George Tsatsaronis , Iraklis Varlamis , and Kjetil Nørv˚ag . 2010 . SemanticRank : Ranking Keywords and Sentences Using Semantic Graphs . In Proceed - ings of the 23rd International Conference on Com - putational Linguistics , pages 1074 – 1082 , Strouds - burg , PA , USA . Association for Computational Lin - guistics . Xiaojun Wan and Jianguo Xiao . 2008 . Single Doc - ument Keyphrase Extraction Using Neighborhood Knowledge . In Proceedings of the 23rd National Conference on Artiﬁcial Intelligence - Volume 2 , pages 855 – 860 . AAAI Press . Ian H . Witten , Gordon W . Paynter , Eibe Frank , Carl Gutwin , and Craig G . Nevill Manning . 1999 . KEA : Practical Automatic Keyphrase Extraction . In Pro - ceedings of the 4th ACM Conference on Digital Libraries , pages 254 – 255 , New York , NY , USA . ACM . 551