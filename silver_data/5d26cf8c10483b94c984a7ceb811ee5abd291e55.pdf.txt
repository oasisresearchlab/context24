The edge - weighted clique problem : Valid inequalities , facets and polyhedral computations q Elder Magalh ~ aes Macambira a , Cid Carvalho de Souza b , * a Departamento de Estat (cid:19) ıstica e Computa c (cid:223) ~ a o , Universidade Estadual do Cear (cid:19) a , 60455 - 760 Fortaleza - CE , Ceara , Brazil b Instituto de Computa c (cid:223) ~ a o , Universidade Estadual de Campinas , C . P . 6176 , 13083 - 970 Campinas - SP , Brazil Abstract Let K n (cid:136) (cid:133) V ; E (cid:134) be the complete undirected graph with weights c e associated to the edges in E . We consider the problem of ﬁnding the subclique C (cid:136) (cid:133) U ; F (cid:134) of K n such that the sum of the weights of the edges in F is maximized and j U j 6 b , for some b 2 (cid:137) 1 ; . . . ; n (cid:138) . This problem is called the Maximum Edge - Weighted Clique Problem ( MEWCP ) and is NP - hard . In this paper we investigate the facial structure of the polytope associated to the MEWCP introducing new classes of facet deﬁning inequalities . Computational experiments with a branch - and - cut algorithm are reported con - ﬁrming the strength of these inequalities . All instances with up to 48 nodes could be solved without entering into the branching phase . Moreover , we show that some of these new inequalities also deﬁne facets of the Boolean Quadric Polytope and generalize many of the previously known inequalities for this well - studied polytope . (cid:211) 2000 Elsevier Science B . V . All rights reserved . Keywords : Edge - weighted cliques ; Polyhedral combinatorics ; Integer programming ; Branch - and - cut ; Boolean quadric polytope 1 . Introduction Let K n (cid:136) (cid:133) V ; E (cid:134) be the complete undirected graph with weights c e associated to the edges in E . We consider the problem of ﬁnding the subclique C (cid:136) (cid:133) U ; F (cid:134) of K n such that the sum of the weights of the edges in F is maximized and j U j 6 b , for some integer b 2 (cid:137) 1 ; . . . ; n (cid:138) . This problem is called the Maximum Edge - Weighted Clique Problem ( MEWCP ) . European Journal of Operational Research 123 ( 2000 ) 346 – 371 www . elsevier . com / locate / orms q This research was supported by Fundac (cid:223) ~ ao de Amparo (cid:18) a Pesquisa do Estado de S ~ ao Paulo ( grant number 96 / 0884 - 9 ) , by Conselho Nacional de Desenvolvimento Cient (cid:19) ıﬁco e Tecnol (cid:19) ogico do Brasil ( grant number 300883 / 94 - 3 ) and Pronex Project 107 / 97 ( MCT / FINEP , Brazil ) . * Corresponding author . E - mail addresses : elder @ uece . br ( E . M . Macambira ) , cid @ dcc . unicamp . br ( C . C . de Souza ) . 0377 - 2217 / 00 / $ - see front matter (cid:211) 2000 Elsevier Science B . V . All rights reserved . PII : S 0 3 7 7 - 2 2 1 7 ( 9 9 ) 0 0 2 6 2 - 3 The MEWCP can be easily seen to be NP - hard , since the usual MAX - CLIQUE problem reduces polynomially to it . Heuristic algorithms based on local search have been proposed in [ 14 ] to ﬁnd good suboptimal solutions for this problem . Exact algorithms based on Integer Programming formulations have been proposed in [ 5 , 6 , 12 ] . The natural formulation presented in [ 5 ] uses only binary variables corresponding to the edges of K n . The authors investigate the problem from a polyhedral point of view . Several facet deﬁning inequalities are introduced and computational results obtained by a cutting - plane algorithm using these inequalities are reported . From their computational experiments , the authors conclude that the cutting - plane approach was not suitable to solve the MEWCP even for moderate sized instances . The largest instance they solve refers to a graph on 25 nodes but extremely poor performances are reported for quite smaller instances . In [ 6 ] , an extended formulation is proposed that includes binary variables not only for the edges but also for the nodes in K n . The authors did not investigate the new model from a polyhedral point of view . A ﬁrst polyhedral investigation of the extended formulation is done in [ 12 ] where several classes of facet deﬁning inequalities for the associated polytope are presented . The authors also prove that the lower bounds provided by the extended formulation are better than those coming from the natural formulation on the edge variables . The computational results reported in [ 12 ] are much more encouraging than those reported in [ 5 ] . The instances tested include graphs with up to 30 nodes and most of them have been solved to optimally by pure cutting - planes ( no branching was necessary ) . Many facet deﬁning inequalities introduced in [ 12 ] for the MEWCP , such as the clique and cut in - equality , are based upon facet deﬁning inequalities for the Boolean Quadric Polytope ( BQP ) investigated in [ 11 ] . In fact , the polytope associated to the extended formulation of MEWCP is contained in the BQP and , therefore , any inequality valid for the BQP is also valid for the polytope associated to MEWCP . In this paper we go further in investigating the facial structure of the polytope associated to the extended formulation of the MEWCP in order to have a better understanding of it . For this , we introduce three new classes of valid and facet deﬁning inequalities for this polytope . The ﬁrst class of inequalities proposed here generalizes the clique , the cut and the (cid:133) s ; t (cid:134) - cut inequalities studied in [ 11 ] for the BQP . We prove the validity of these new inequalities and derive su(cid:129)cient conditions under which they are facet deﬁning for the MEWCP polytope . Moreover , we show that the validity and facetness properties can also be extended to the BQP . The second and third classes of inequalities generalize the tree inequalities originally introduced in [ 9 ] and further studied in [ 12 ] . The generalization goes in two di(cid:128)erent directions . For both of them we have been able to proof that some special cases correspond to facet deﬁning inequalities for the MEWCP . Besides the search for new classes of facet deﬁning inequalities , we also have carried out computa - tional experiments with a branch - and - cut algorithm that we have implemented . The main goals with these experiments were to evaluate the strength of the new inequalities introduced here and to compare di(cid:128)erent cutting - plane strategies for the MEWCP . To date , to the best of our knowledge , no comparison between di(cid:128)erent cutting strategies have appeared in the literature for this problem . We have run the code on instances with up to 48 nodes and the results conﬁrm that at least the ﬁrst class of inequalities we have introduced is computationally useful . Even when using a pure cutting plane algorithm based on a quite small subset of these inequalities , we were able to solve all instances of our data set to optimality . The paper is organized as follows . In Section 2 we give the extended Integer Programming formulation for the MEWCP and summarize the main polyhedral results from the literature which are important for our work . Section 3 describes our ﬁrst class of inequalities generalizing the clique , the cut and the (cid:133) s ; t (cid:134) - cut inequalities . Section 4 discusses two possible generalizations of the tree inequalities leading to two distinct classes of valid inequalities for the MEWCP . In Section 5 we describe a branch - and - cut algorithm that uses some of the inequalities introduced in the previous section and report our computational results . Before going to the next section , we introduce some notation that we use in the sequel . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 347 Let S and T be any two disjoint subsets of nodes in a graph G (cid:136) (cid:133) V ; E (cid:134) . Then , E (cid:133) S (cid:134) denotes the set of all edges in the subgraph induced by S in G . The set of all edges having exactly one end node in S and the other end node in T is denoted by d (cid:133) S ; T (cid:134) . To make the notation easier , for any node u 2 V ; d (cid:133) u (cid:134) is used to denote the set of edges in d (cid:133)f u g ; V (cid:255) f u g(cid:134) . If p is a vector in R j V j , we deﬁne p (cid:133) S (cid:134) (cid:136) P u 2 S p u . Analogously , if c 2 R j E j and H is a subset of edges in E , we deﬁne c (cid:133) H (cid:134) (cid:136) P e 2 H c e . To simplify the notation , we also use c (cid:133) S (cid:134) and c (cid:133) S ; T (cid:134) to denote P e 2 E (cid:133) S (cid:134) c e and P e 2 d (cid:133) S ; T (cid:134) c e , respectively . 2 . An extended integer programming formulation for MEWCP In this section we describe the Integer Programming ( IP ) formulation for MEWCP . Given the complete undirected graph K n (cid:136) (cid:133) V ; E (cid:134) , the variables in the formulation are divided into two sets : the edge variables , denoted by y ij for each (cid:133) i ; j (cid:134) 2 E , and the node variables , denoted by x i for each i 2 V . More formally , if C (cid:136) (cid:133) U ; F (cid:134) is a clique in K n , we deﬁne : x i (cid:136) 1 if node i 2 U ; 0 otherwise ; (cid:26) and y ij (cid:136) 1 if edge (cid:133) i ; j (cid:134) 2 F ; 0 otherwise : (cid:26) According to these deﬁnitions , an IP formulation for MEWCP is given by max X i ; j ; i < j c ij y ij subject to y ij 6 x i 8(cid:133) i ; j (cid:134) 2 E ; i < j ; (cid:133) I (cid:134) y ij 6 x j 8(cid:133) i ; j (cid:134) 2 E ; i < j ; (cid:133) II (cid:134) x i (cid:135) x j (cid:255) y ij 6 1 8(cid:133) i ; j (cid:134) 2 E ; i < j ; (cid:133) III (cid:134) X j 2 V (cid:255)f i g y ij (cid:255) (cid:133) b (cid:255) 1 (cid:134) x i 6 0 8 i 2 V ; (cid:133) IV (cid:134) y ij 2 f 0 ; 1 g 8(cid:133) i ; j (cid:134) 2 E ; x i 2 f 0 ; 1 g 8 i 2 V : Inequalities ( I ) and ( II ) ensure that an edge is not in the clique if one of its end nodes is not in the clique . Inequality ( III ) says that the edge is in the clique if both its end nodes are in the clique and , ﬁnally , in - equality ( IV ) limits the number of edges incident to each node i to either (cid:133) b (cid:255) 1 (cid:134) or 0 depending if node i is in the clique or is not in the clique , respectively . Note that by dropping the constraints in ( IV ) , we obtain the linearization for formulating the BQP [ 11 ] . Let us denote by P C (cid:133) b (cid:134) the convex hull of all incidence vectors of cliques in K n with at most b nodes and by P B the convex hull of 0 – 1 vectors satisfying constraints ( I ) , ( II ) , ( III ) . Therefore , P B is the BQP and we have that P C (cid:133) b (cid:134) (cid:18) P B . From this observation , it turns out that any valid inequality for P B is also valid for P C (cid:133) b (cid:134) but , clearly , the facetness property may be lost . Below we summarize some results that are known for P C (cid:133) b (cid:134) which we will use later . Proofs of these results can be found in [ 12 ] , except the one for Proposition 2 . 6 . Proposition 2 . 4 includes the correction pointed out in [ 8 ] for a prior result appearing in [ 12 ] . 348 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 The convention adopted in this text to represent the support graphs of the inequalities is the following : ( i ) dashed - line circles indicate nodes with negative coe(cid:129)cients , ( ii ) circles ﬁlled in grey indicate nodes with null coe(cid:129)cient , ( iii ) solid - line circles indicate nodes with positive coe(cid:129)cients , ( iv ) dashed lines indicate edges with negative coe(cid:129)cients and ( v ) solid lines indicate edges with positive coe(cid:129)cients . For sake of brevity , we shall use simply the term support to refer to the support graph of an inequality . Proposition 2 . 1 . Given the complete undirected graph K n (cid:136) (cid:133) V ; E (cid:134) with j V j (cid:136) n and j E j (cid:136) m (cid:136) n 2 (cid:18) (cid:19) ; the dimension of P C (cid:133) b (cid:134) is given by dim (cid:133) P C (cid:133) b (cid:134)(cid:134) (cid:136) n if b (cid:136) 1 ; n (cid:135) m if 2 6 b 6 n : (cid:26) Thus , for nontrivial instances of the problem , the polytope is full - dimensional . It follows that , if we want to prove that the face F deﬁned by a valid inequality p (cid:133) x ; y (cid:134) 6 p 0 for P C (cid:133) b (cid:134) is a facet , we only have to show that F is proper and any other inequality deﬁning a face that contains F is a positive scalar multiple of p (cid:133) x ; y (cid:134) 6 p 0 ( cf . [ 10 ] ) . The proofs in this text are based on this well - known technique usually referred in the literature as the indirect method . The next two propositions establish the conditions under which the inequalities in the original formu - lation are facet deﬁning for P C (cid:133) b (cid:134) . Proposition 2 . 2 . Let n P 3 : For every two distinct nodes i ; j 2 V ; the inequalities y ij (cid:255) x i 6 0 and x i (cid:135) x j (cid:255) y ij 6 1 define facets of P C (cid:133) b (cid:134) if and only if b P 3 . Proposition 2 . 3 . For every node i 2 V ; the star inequality X j 2 V (cid:255)f i g y ij (cid:255) (cid:133) b (cid:255) 1 (cid:134) x i 6 0 ; defines a facet of P C (cid:133) b (cid:134) if and only if b 6 n (cid:255) 1 : The above inequality is called a star inequality since its support graph is a tree with a single node of degree higher than one ( which by deﬁnition is a star graph ) . Proposition 2 . 4 . Let T (cid:18) V be a subset of nodes in K n : If j T j P 3 and 1 6 b 6 j T j (cid:255) 2 ; the clique inequality b X i 2 T x i (cid:255) X e 2 E (cid:133) T (cid:134) y e 6 b (cid:133) b (cid:135) 1 (cid:134) = 2 (cid:133) 1 (cid:134) defines a facet of P C (cid:133) b (cid:134) if and only if T (cid:136) V and b 6 b (cid:255) 1 or b 6 b (cid:255) 2 : Special cases of the clique inequalities are obtained when j T j (cid:136) 3 and b (cid:136) 1 which are called the clique triangle inequalities . The support graph of such an inequality is given in Fig . 1 ( a ) . Proposition 2 . 5 . Let S (cid:18) V and T (cid:18) V (cid:255) S be two disjoint subset of nodes in K n . For j S j (cid:136) s P 1 and j T j (cid:136) t P 2 ; the cut inequality E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 349 X e 2 d (cid:133) S ; T (cid:134) y e (cid:255) X e 2 E (cid:133) S (cid:134) y e (cid:255) X e 2 E (cid:133) T (cid:134) y e (cid:255) X i 2 S x i 6 0 (cid:133) 2 (cid:134) defines a facet of P C (cid:133) b (cid:134) if and only if j S j (cid:136) 1 and b P 3 or j S j P 2 and b P 4 : When s (cid:136) 1 and t (cid:136) 2 , we have the cut triangle inequalities whose support is shown in Fig . 1 ( b ) . Like the clique inequalities , the cut inequalities were introduced for the BQP by Padberg in [ 11 ] . In the latter paper , the author also introduces the (cid:133) s ; t (cid:134) - cut inequalities and proves their validity for P B . Though the (cid:133) s ; t (cid:134) - cut inequalities have not been considered earlier in the literature of MEWCP , its validity with respect to P C (cid:133) b (cid:134) is immediate from the fact that P C (cid:133) b (cid:134) (cid:18) P B . It turns out that , like the clique and cut inequalities , the (cid:133) s ; t (cid:134) - cut inequalities are special cases of the new inequalities we introduce in the next section . Proposition 2 . 6 . Let S (cid:18) V and T (cid:18) V (cid:255) S be two disjoint subset of nodes in K n ; where j S j (cid:136) s and j T j (cid:136) t : The (cid:133) s ; t (cid:134) - cut inequality X e 2 d (cid:133) S ; T (cid:134) y e (cid:255) X e 2 E (cid:133) T (cid:134) y e (cid:255) X e 2 E (cid:133) S (cid:134) y e (cid:135) (cid:133) s (cid:255) t (cid:134) X i 2 S x i (cid:135) (cid:133) t (cid:255) s (cid:255) 1 (cid:134) X i 2 T x i 6 1 2 (cid:133) t (cid:255) s (cid:134)(cid:133) t (cid:255) s (cid:255) 1 (cid:134) (cid:133) 3 (cid:134) is valid for P C (cid:133) b (cid:134) : We close this section by presenting the tree inequalities . They have been ﬁrst introduced in [ 9 ] and further studied in [ 12 ] . The proposition below appears in the latter paper . Proposition 2 . 7 . Let T (cid:136) (cid:133) W ; H (cid:134) be a tree in K n (cid:136) (cid:133) V ; E (cid:134) such that ; j W j (cid:136) b (cid:135) 1 : If b P 3 then the tree inequality X e 2 H y e (cid:255) X i 2 W (cid:133) d i (cid:255) 1 (cid:134) x i 6 0 ; (cid:133) 4 (cid:134) where d i is the degree of node i in T ; defines a facet of P C (cid:133) b (cid:134) if and only if b (cid:136) n (cid:255) 1 or T is not a star : Note that , among the inequalities presented here , tree and star inequalities are the only ones whose validity depends on b , the size of the largest feasible clique . In Section 4 we generalize the tree inequalities in Fig . 1 . ( a ) Support graph of clique triangle inequality with T (cid:136) f i ; j ; k g and b (cid:136) 1 . The corresponding clique triangle inequality is x i (cid:135) x j (cid:135) x k (cid:255) y ij (cid:255) y ik (cid:255) y jk 6 1 . ( b ) Support graph of cut triangle inequality with S (cid:136) f i g and T (cid:136) f j ; k g . The corresponding cut triangle inequality is y ij (cid:135) y ik (cid:255) y jk (cid:255) x i 6 0 . 350 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 two di(cid:128)erent ways and obtain large classes of valid inequalities of P C (cid:133) b (cid:134) which are also related to b . We show that , at least for some special cases , these generalized inequalities deﬁne facets of P C (cid:133) b (cid:134) . 3 . Generalization of clique , cut and (cid:133) s ; t (cid:134) - cut inequalities In this section we introduce a new class of inequalities for P C (cid:133) b (cid:134) . We give validity and facetness results and we show that this class contains all the clique , the cut and the (cid:133) s ; t (cid:134) - cut inequalities ( Propositions 2 . 4 , 2 . 5 and 2 . 6 , respectively ) . Finally , we extend these results to the BQP P B . Let us start by deﬁning one such inequality . For this , let a be an integer and S and T be two disjoint subsets of nodes in V . The a - inequality corresponding to S and T is given by X e 2 d (cid:133) S ; T (cid:134) y e (cid:255) X e 2 E (cid:133) S (cid:134) y e (cid:255) X e 2 E (cid:133) T (cid:134) y e (cid:255) a X i 2 S x i (cid:135) (cid:133) a (cid:255) 1 (cid:134) X i 2 T x i 6 1 2 a (cid:133) a (cid:255) 1 (cid:134) : (cid:133) 5 (cid:134) Notice that when S is empty and a (cid:136) b (cid:135) 1 in ( 5 ) , we obtain a clique inequality ( 1 ) . On the other hand , if a (cid:136) 0 or a (cid:136) 1 , inequality ( 5 ) reduces to a cut inequality ( 2 ) . Finally , for a (cid:136) t (cid:255) s , inequality ( 5 ) reduces to a (cid:133) s ; t (cid:134) - cut inequality ( 3 ) . It is worth noting that the inequalities ( I ) , ( II ) and ( III ) from the original for - mulation are also special cases of ( 5 ) since ( I ) and ( II ) are cut inequalities and ( III ) is a (cid:133) s ; t (cid:134) - cut inequality . Therefore , the inequalities in ( 5 ) generalize all those previously known inequalities . The validity of the a - inequalities with respect to P C (cid:133) b (cid:134) is given below . Proposition 3 . 1 . Let S (cid:18) V and T (cid:18) V (cid:255) S be two disjoint subsets of nodes in K n : Then ; for every integer a ; the a - inequality in ( 5 ) is valid P C (cid:133) b (cid:134) : Proof . Let C (cid:136) (cid:133) U ; F (cid:134) be any feasible clique in K n ( i . e . , j U j 6 b ) . Suppose that j U \ S j (cid:136) ~ s and j U \ T j (cid:136) ~ t : Thus , for the incidence vector of C inequality ( 5 ) gives : ~ t ~ s (cid:255) ~ t (cid:133) ~ t (cid:255) 1 (cid:134) = 2 (cid:255) ~ s (cid:133) ~ s (cid:255) 1 (cid:134) = 2 (cid:255) a ~ s (cid:135) (cid:133) a (cid:255) 1 (cid:134) ~ t 6 (cid:133) a (cid:134)(cid:133) a (cid:255) 1 (cid:134) = 2 ) (cid:255) 1 2 (cid:137) ~ t 2 (cid:255) 2 ~ t ~ s (cid:255) ~ t (cid:255) 2 (cid:133) a (cid:255) 1 (cid:134) ~ t (cid:135) ~ s 2 (cid:255) ~ s (cid:135) 2 a ~ s (cid:135) (cid:133) a (cid:134)(cid:133) a (cid:255) 1 (cid:134)(cid:138) 6 0 ) (cid:255) 1 2 (cid:137) ~ t 2 (cid:255) 2 ~ t ~ s (cid:255) ~ t (cid:255) 2 (cid:133) a (cid:255) 1 (cid:134) ~ t (cid:135) ~ s 2 (cid:135) ~ s (cid:133) 2 a (cid:255) 1 (cid:134) (cid:135) (cid:133) a (cid:134)(cid:133) a (cid:255) 1 (cid:134)(cid:138) 6 0 : After factorizing the second order polynomial in ~ s and the terms ~ t , we get (cid:255) 1 2 (cid:137) ~ t 2 (cid:255) ~ t (cid:133) 2 ~ s (cid:135) 2 a (cid:255) 1 (cid:134) (cid:135) (cid:133) ~ s (cid:135) a (cid:134)(cid:133) ~ s (cid:135) a (cid:255) 1 (cid:134)(cid:138) 6 0 : By factorizing the second order polynomial in ~ t we obtain (cid:255) 1 2 (cid:137)(cid:133) ~ t (cid:255) (cid:133) ~ s (cid:135) a (cid:134)(cid:134)(cid:133) ~ t (cid:255) (cid:133) ~ s (cid:135) a (cid:255) 1 (cid:134)(cid:134)(cid:138) 6 0 ) (cid:255) 1 2 (cid:133) ~ t (cid:255) ~ s (cid:255) a (cid:134)(cid:133) ~ t (cid:255) ~ s (cid:255) a (cid:135) 1 (cid:134) 6 0 : Since ~ t (cid:255) ~ s (cid:255) a and ~ t (cid:255) ~ s (cid:255) a (cid:135) 1 are consecutive integers , the inequality must hold . (cid:3) Before proving that the a - inequalities deﬁne facets of P C (cid:133) b (cid:134) , we give the lemma below characterizing the incidence vectors of feasible cliques which are roots of these inequalities ( i . e . , the vectors lying on the hyperplane deﬁned by one such inequality ) . This will be useful in proving the facetness property . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 351 Lemma 3 . 1 . Let C (cid:136) (cid:133) U ; F (cid:134) be a clique of K n (cid:136) (cid:133) V ; E (cid:134) and S and T be two disjoint subsets of nodes in V . Moreover , let ~ s and ~ t be given by ~ s (cid:136) j U \ S j and ~ t (cid:136) j U \ T j : Then , for every integer a , the roots of the a - inequality ( 5 ) corresponding to S and T are obtained for all cliques C (cid:136) (cid:133) U ; F (cid:134) satisfying ~ t (cid:136) a (cid:135) ~ s or ~ t (cid:136) a (cid:135) ~ s (cid:255) 1 : Proof . Immediate from the proof of Proposition 3 . 1 . (cid:3) We now establish su(cid:129)cient conditions such that the a - inequalities deﬁne facets for P C (cid:133) b (cid:134) . Proposition 3 . 2 . Let S (cid:18) V and T (cid:18) V (cid:255) S be two disjoint subsets of nodes in K n ; with j S j (cid:136) s and j T j (cid:136) t : For every positive integer a ; if s P 1 ; t P a (cid:135) 1 and b P a (cid:135) 3 ; the a - inequality corresponding to S and T defines a facet of P C (cid:133) b (cid:134) : Proof . From Proposition 3 . 1 , we know that the a - inequality is valid . Now , let F be the face deﬁned by this inequality in P C (cid:133) b (cid:134) . We start by proving that F is proper . Since a > 0 ; s P 1 ; t P a (cid:135) 1 and b P a (cid:135) 3 , there exists a feasible clique C formed by exactly a (cid:135) 1 nodes in T and exactly one node in S . By Lemma 3 . 1 , the incidence vector of C lies on F which , therefore , is not empty . We now show that P C (cid:133) b (cid:134) 6(cid:136) F . If a > 1 , this is easily seen from the fact that 0 2 P C (cid:133) b (cid:134) (cid:255) F . So , let us assume that a (cid:136) 1 . Since in this case t P 2 and b P 4 , there exists a feasible clique C 0 formed by exactly 2 nodes of T . The left - hand side of the a - inequality for the incidence vector of C 0 is (cid:255) 1 while the right - hand side is null . Thus , we conclude that P C (cid:133) b (cid:134) 6(cid:136) F for all positive a and , therefore , F is a proper face of P C (cid:133) b (cid:134) . Assume now that p x (cid:135) c y 6 p 0 is a generic inequality valid for P C (cid:133) b (cid:134) deﬁning the face F (cid:133) p ; c (cid:134) (cid:136) f(cid:133) x ; y (cid:134) 2 P C (cid:133) b (cid:134) : p x (cid:135) c y (cid:136) p 0 g with the property that F (cid:18) F (cid:133) p ; c (cid:134) . If we show that p x (cid:135) c y 6 p 0 is a positive scalar multiple of the a - inequality , the proof will be completed . Now , to establish the appropriate relations between the coe(cid:129)cients in p ; c and p 0 we have to ﬁnd in - cidence vectors of feasible cliques that lie on the face F ( and therefore are also in F (cid:133) p ; c (cid:134) ) . The incidence vectors given here can be easily checked to satisfy this condition by noting that they are in the form de - scribed in Lemma 3 . 1 . Below we assume that each of these vectors represent a feasible clique C (cid:136) (cid:133) U ; F (cid:134) such that ~ S (cid:136) S \ U and ~ T (cid:136) T \ U . (cid:3) Claim 1 . c u ; v (cid:136) (cid:255) k and c v ; v 0 (cid:136) k for all u 2 S ; v ; v 0 2 T with v 6(cid:136) v 0 and for some constant k 2 R : Proof . Consider ~ T (cid:18) T ; such that j ~ T j (cid:136) a (cid:255) 1 : Let u 2 S ; v 2 T (cid:255) ~ T and v 0 2 T (cid:255) (cid:133) ~ T [ f v g(cid:134) be three nodes arbitrarily chosen . The following incidence vectors of feasible cliques lie on F : X ~ T ; X ~ T [ f v g ; X ~ T [ f u ; v 0 g and X ~ T [ f u ; v ; v 0 g : This implies the following equalities : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p v (cid:135) c (cid:133)f v g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) p v 0 (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:135) c (cid:133)f v 0 g ; ~ T (cid:134) (cid:135) c u ; v 0 (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) p v 0 (cid:135) p v (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:135) c (cid:133)f v 0 g ; ~ T (cid:134) (cid:135) c (cid:133)f v g ; ~ T (cid:134) (cid:135) c u ; v 0 (cid:135) c u ; v (cid:135) c v ; v 0 (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) : By summing up all these equations after multiplying them by the numbers in parentheses , we obtain that c u ; v (cid:136) (cid:255) c v ; v 0 (cid:136) (cid:255) k , for some constant k 2 R . (cid:3) Claim 2 . c u ; u 0 (cid:136) k for all u ; u 0 2 S with u 6(cid:136) u 0 : 352 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 Proof . Consider ~ T (cid:18) T ; such that j ~ T j (cid:136) a ; u 2 S and u 0 2 S (cid:255) f u g : The following incidence vectors of feasible cliques lie on F : X ~ T and X ~ T [ f u g : Moreover , for every node v 2 T (cid:255) ~ T ; ~ T [ f u ; u 0 ; v g is a feasible clique whose incidence vector lies on F and the same holds for the clique ~ T [ f u 0 ; v g : Therefore , the fol - lowing equations are satisﬁed : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) p u 0 (cid:135) p v (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:135) c (cid:133)f u 0 g ; ~ T (cid:134) (cid:135) c (cid:133)f v g ; ~ T (cid:134) (cid:135) c u ; u 0 (cid:135) c u ; v (cid:135) c u 0 ; v (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u 0 (cid:135) p v (cid:135) c (cid:133)f u 0 g ; ~ T (cid:134) (cid:135) c (cid:133)f v g ; ~ T (cid:134) (cid:135) c u 0 ; v (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) : By summing up all these equations after multiplying them by the numbers in parentheses , and using Claim 1 , we conclude that c u ; u 0 (cid:136) (cid:255) c u ; v (cid:136) k . Claim 3 . p u (cid:136) ak for all u 2 S : Proof . Let ~ T (cid:18) T with j ~ T j (cid:136) a and u be an arbitrary node of S . Again we consider the feasible cliques represented by ~ T and ~ T [ f u g whose incidence vectors lie on F . This implies that the following two equations hold : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:136) p 0 : By subtracting the ﬁrst equation from the second one and using Claim 1 , we obtain that p u (cid:136) (cid:255) c (cid:133)f u g ; ~ T (cid:134) (cid:136) ak . Claim 4 . p v (cid:136) (cid:255) k (cid:133) a (cid:255) 1 (cid:134) for all v 2 T : Proof . Consider ~ T (cid:18) T ; such that j ~ T j (cid:136) a (cid:255) 1 and v 2 T (cid:255) ~ T : The cliques whose node sets are given by ~ T and ~ T [ f v g both have incidence vectors on F : Thus , the following system of equations hold : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p v (cid:135) c (cid:133)f v g ; ~ T (cid:134) (cid:136) p 0 : Again , by subtracting the ﬁrst equation from the second one and using Claim 1 , we can conclude that p v (cid:136) (cid:255) c (cid:133)f v g ; ~ T (cid:134) (cid:136) (cid:255) k (cid:133) a (cid:255) 1 (cid:134) : Claim 5 . If j V (cid:255) (cid:133) S [ T (cid:134)j P 2 ; c z ; w (cid:136) 0 for all z ; w 2 V (cid:255) (cid:133) S [ T (cid:134) with z 6(cid:136) w : Proof . Let ~ T be a subset of T , such that j ~ T j (cid:136) a : Consider the feasible cliques with node sets given by ~ T ; ~ T [ f z g ; ~ T [ f w g and ~ T [ f z ; w g . The incidence vectors of these cliques lie on F . Thus , we obtain the following linear system : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p z (cid:135) c (cid:133)f z g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p w (cid:135) c (cid:133)f w g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p w (cid:135) p z (cid:135) c (cid:133)f w g ; ~ T (cid:134) (cid:135) c (cid:133)f z g ; ~ T (cid:134) (cid:135) c w ; z (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) : By summing up these equations after multiplying them by the numbers indicated in parentheses , we get that c z ; w (cid:136) 0 . (cid:3) E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 353 Claim 6 . c u ; z (cid:136) c v ; z (cid:136) 0 for all u 2 S ; v 2 T and z 2 V (cid:255) (cid:133) S [ T (cid:134) : Proof . Let ~ T be a subset of T ; such that j ~ T j (cid:136) a : Consider the feasible cliques with node sets given by ~ T ; ~ T [ f z g ; ~ T [ f u g and ~ T [ f u ; z g : Since the incidence vectors of these cliques are in F ; the following equations hold : c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; (cid:133) 6 (cid:134) c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p z (cid:135) c (cid:133)f z g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; (cid:133) 7 (cid:134) c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:135) p u (cid:135) p z (cid:135) c (cid:133)f u g ; ~ T (cid:134) (cid:135) c (cid:133)f z g ; ~ T (cid:134) (cid:135) c u ; z (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) : Multiplying these equations by the numbers in parentheses and summing up , we conclude that c u ; z (cid:136) 0 . Now , let ^ T be a subset of T satisfying j ^ T j (cid:136) a (cid:255) 1 and v be a node in T (cid:255) ^ T . The feasible cliques with nodes given by ^ T ; ^ T [ f v g ; ^ T [ f z g and ^ T [ f v ; z g have their incidence vectors in F and this leads to the following system of equations : c (cid:133) ^ T (cid:134) (cid:135) p (cid:133) ^ T (cid:134) (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; c (cid:133) ^ T (cid:134) (cid:135) p (cid:133) ^ T (cid:134) (cid:135) p z (cid:135) c (cid:133)f z g ; ^ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ^ T (cid:134) (cid:135) p (cid:133) ^ T (cid:134) (cid:135) p v (cid:135) c (cid:133)f v g ; ^ T (cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) ; c (cid:133) ^ T (cid:134) (cid:135) p (cid:133) ^ T (cid:134) (cid:135) p v (cid:135) p z (cid:135) c (cid:133)f v g ; ^ T (cid:134) (cid:135) c (cid:133)f z g ; ^ T (cid:134) (cid:135) c v ; z (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) : Multiplying these equations by the numbers in parentheses and summing up , we conclude that c v ; z (cid:136) 0 . (cid:3) Claim 7 . p z (cid:136) 0 for all z 2 V (cid:255) (cid:133) S [ T (cid:134) : Proof . Let us deﬁne ~ T as in Claim 6 . Subtracting Eq . ( 6 ) from Eq . ( 7 ) we conclude that p z (cid:136) 0 since , from Claim 6 , c (cid:133)f z g ; ~ T (cid:134) (cid:136) 0 . (cid:3) Claim 8 . p 0 (cid:136) (cid:255) k 2 a (cid:133) a (cid:255) 1 (cid:134) : Proof . Since for ~ T (cid:26) T with j ~ T j (cid:136) a we have a feasible clique with incidence vector in F ; Claims 1 and 4 imply that c (cid:133) ~ T (cid:134) (cid:135) p (cid:133) ~ T (cid:134) (cid:136) k a (cid:133) a (cid:255) 1 (cid:134) 2 (cid:255) ak (cid:133) a (cid:255) 1 (cid:134) (cid:136) p 0 ) p 0 (cid:136) (cid:255) k 2 a (cid:133) a (cid:255) 1 (cid:134) : Finally , since p x (cid:135) c y 6 p 0 is valid for P C (cid:133) b (cid:134) by hypothesis , k must be negative and this completes the proof . (cid:3) The following observations can be used to extend the results of Proposition 3 . 2 : 1 . When a (cid:136) 0 , the a - inequality reduces to the cut inequality for the set T . Necessary and su(cid:129)cient condi - tions for a cut inequality to be facet deﬁning for P b (cid:133) C (cid:134) are given in Proposition 2 . 5 . However , the con - ditions in Proposition 3 . 2 are not necessary conditions for the a - inequalities to deﬁne facets of P C (cid:133) b (cid:134) in general . This can be seen from the fact that they do not include the clique inequalities since , in the latter case , j S j (cid:136) s (cid:136) 0 . 2 . If j S j (cid:136) s (cid:136) 1 , the condition b P a (cid:135) 3 can be replaced by b P a (cid:135) 2 since Claim 2 is not necessary any - more . 3 . If a is negative (cid:133) a 6 (cid:255) 1 (cid:134) ; the proof still holds for t P 1 ; s P j a j (cid:135) 2 and b P j a j (cid:135) 4 . To see this , it suf - ﬁces to deﬁne S 0 (cid:136) T ; T 0 (cid:136) S and a 0 (cid:136) 1 (cid:255) a (cid:136) 1 (cid:135) j a j . In this case a 0 P 2 and the a - inequality for S and T is precisely the same as the a 0 - inequality for S 0 and T 0 . 354 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 4 . Now consider the case where a > 1 ; 1 6 t 6 a but s P a (cid:135) 1 . Using the notation introduced at the end of Section 1 , the a - inequality can be written as y (cid:133) S ; T (cid:134) (cid:255) y (cid:133) S [ T (cid:134) (cid:255) a x (cid:133) S (cid:134) (cid:135) (cid:133) a (cid:255) 1 (cid:134) x (cid:133) T (cid:134) 6 a (cid:133) a (cid:255) 1 (cid:134) = 2 : Deﬁning a 0 (cid:136) 1 (cid:255) a ; S 0 (cid:136) T and T 0 (cid:136) S , the a - inequality becomes y (cid:133) S 0 ; T 0 (cid:134) (cid:255) y (cid:133) S 0 [ T 0 (cid:134) (cid:255) a 0 x (cid:133) S 0 (cid:134) (cid:135) (cid:133) a 0 (cid:255) 1 (cid:134) x (cid:133) T 0 (cid:134) 6 a 0 (cid:133) a 0 (cid:255) 1 (cid:134) = 2 : Notice that , if s 0 (cid:136) j S 0 j and t 0 (cid:136) j T 0 j , we have that : s 0 (cid:136) t P 1 ; t 0 (cid:136) s P a (cid:135) 1 (cid:136) 2 (cid:135) j a 0 j ; b P a (cid:135) 3 (cid:136) 4 (cid:135)j a 0 j and a 0 6 (cid:255) 1 . Thus , from observation 3 above , the facetness proof still holds in this case . If a (cid:136) 1 (cid:133) a 0 (cid:136) 0 (cid:134) and we keep the conditions above on s and t , we obtain the cut inequality for the set S and observation 1 holds . Now , notice that the proof of Proposition 3 . 1 still holds when we drop the condition bounding the size of the feasible cliques to b . This means that the a - inequalities are also valid for the BQP P B . Moreover , since P C (cid:133) b (cid:134) (cid:18) P B and P C (cid:133) b (cid:134) is full - dimensional ( for b P 2 ) , the same set of a(cid:129)nely independent points used to prove that ( 5 ) deﬁnes a facet of P C (cid:133) b (cid:134) can be used to prove that this inequality also deﬁnes facet for P B . As for P C (cid:133) b (cid:134) , it is interesting to note that the a - inequalities generalize many of the previously known in - equalities of the BQP such as the clique , the cut and the (cid:133) s ; t (cid:134) - cut inequalities . The proposition below formalizes this result . Proposition 3 . 3 . Let S (cid:18) V and T (cid:18) V (cid:255) S be two disjoint subsets of nodes in K n ; with j S j (cid:136) s and j T j (cid:136) t P 2 : For every positive integer a ; if s P 1 and t P a (cid:135) 1 ; the a - inequality corresponding to S and T defines a facet of the BQP P B . Similar observations to those following Proposition 3 . 2 can also be drawn in this case . 4 . Generalization of tree inequalities In this section we generalize the tree inequalities given in Proposition 2 . 7 . This generalization goes in two di(cid:128)erent ways . In the ﬁrst generalization we obtain new valid inequalities for P C (cid:133) b (cid:134) by decreasing the size of the tree . To recover validity and to strengthen the inequality we increase its RHS and enlarge its support via a lifting operation ( cf . [ 10 ] ) . The support graph of the resulting inequality is disconnected and , to the best of our knowledge , these are the ﬁrst inequalities for P C (cid:133) b (cid:134) with this feature . We note that a very similar result is presented in [ 3 ] for the equicut problem . In the latter problem , cycles seem to play a role which is very similar to that of trees for the MEWCP . By exploring this idea we have been able to derive a second generalization for the tree inequalities which can be viewed as special combinations of originally nonvalid inequalities for P C (cid:133) b (cid:134) . These two generalizations are discussed in the following subsections . The main result of this section is that both generalizations lead to valid inequalities for P C (cid:133) b (cid:134) and , for some special cases , they can be shown to be facet deﬁning for P C (cid:133) b (cid:134) . 4 . 1 . Small tree inequalities Given a tree T (cid:136) (cid:133) W ; H (cid:134) in K n consider the value of x T (cid:133) x ; y (cid:134) given by x T (cid:133) x ; y (cid:134) (cid:136) P e 2 H y e (cid:255) P i 2 W (cid:133) d i (cid:255) 1 (cid:134) x i . The inequality in Proposition 2 . 7 can be rewritten as E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 355 x T (cid:133) x ; y (cid:134) (cid:136) X e 2 H y e (cid:255) X i 2 W (cid:133) d i (cid:255) 1 (cid:134) x i 6 0 (cid:133) 8 (cid:134) for j W j (cid:136) b (cid:135) 1 . The validity of this inequality is based on the following lemma taken from [ 2 ] . Lemma 4 . 1 . Let C (cid:136) (cid:133) U ; F (cid:134) and T (cid:136) (cid:133) W ; H (cid:134) be a clique and a tree of K n ; respectively : Define (cid:133) x C ; y C (cid:134) to be the incidence vector of C and assume that A (cid:136) U \ W : If c (cid:133) A (cid:134) is the number of connected components induced by A in T and d T (cid:133) A (cid:134) is the cutset of A in T ; then w T (cid:133) x C ; y C (cid:134) (cid:136) c (cid:133) A (cid:134) (cid:255) j d T (cid:133) A (cid:134)j : Proof . We compute x T (cid:133) x C ; y C (cid:134) (cid:136) X e 2 H y Ce (cid:135) X u 2 W (cid:133) 1 (cid:255) d u (cid:134) x Cu (cid:136) X e 2 E (cid:133) A (cid:134) \ H 1 (cid:135) X u 2 A (cid:133) 1 (cid:255) d u (cid:134) (cid:136) X e 2 E (cid:133) A (cid:134) \ H 1 (cid:135) j A j (cid:255) X u 2 A d u : The ﬁrst summation corresponds to the number of edges in the forest induced by A in T and , therefore , it is equal to j A j (cid:255) c (cid:133) A (cid:134) . In the second summation each edge joining two nodes i and j in A is counted twice ( in d i and d j ) and the edges going from A to W (cid:255) A ( those in d T (cid:133) A (cid:134)(cid:134) appear only once . This yields P u 2 A d u (cid:136) 2 (cid:133)j A j (cid:255) c (cid:133) A (cid:134)(cid:134) (cid:135) j d T (cid:133) A (cid:134)j . Therefore x T (cid:133) x C ; y C (cid:134) (cid:136) j A j (cid:255) c (cid:133) A (cid:134) (cid:135) j A j (cid:255) 2 j A j (cid:135) 2 c (cid:133) A (cid:134) (cid:255) j d T (cid:133) A (cid:134)j (cid:136) c (cid:133) A (cid:134) (cid:255) j d T (cid:133) A (cid:134)j : (cid:3) From the lemma above , we have that x T (cid:133) x ; y (cid:134) is never greater than zero , except when A (cid:136) W ( A is the set of all nodes in the tree ) , in which case we have c (cid:133) A (cid:134) (cid:136) 1 and j d T (cid:133) A (cid:134)j (cid:136) 0 , implying that x T (cid:133) x ; y (cid:134) (cid:136) 1 . A root of x T (cid:133) x ; y (cid:134) 6 0 is obtained when c (cid:133) A (cid:134) (cid:136) j d T (cid:133) A (cid:134)j , meaning that each of the subtrees in the forest induced by A in T can be disconnected from the remaining nodes of T by removing a single edge ( that is , the nodes in W (cid:255) A are all contained in a single subtree of T ) . Clearly , this lemma proves the validity of the tree inequalities whenever we can ensure that not all nodes of the tree belong simultaneously to a feasible clique . This is the case when j W j P b (cid:135) 1 . But , what if j W j 6 b ? Below we focus on the case when j W j (cid:136) b . From Lemma 4 . 1 , the only incidence vector of a feasible clique that violates the corresponding tree inequality is the one associated to the clique C composed by all nodes of the tree T (cid:136) (cid:133) W ; H (cid:134) . Thus , the tree inequality x T (cid:133) x ; y (cid:134) 6 0 is not valid for P C (cid:133) b (cid:134) when j W j (cid:136) b . To recover the validity of the inequality we simply increment its RHS to one . However , the new inequality we obtain in that way is weak since the only feasible clique whose incidence vector satisﬁes it at equality is the clique C deﬁned above . To get a stronger inequality , consider the a - inequality for a (cid:136) 2 which is given by x 1 (cid:133) x ; y (cid:134) (cid:136) X e 2 d (cid:133) S ; S 0 (cid:134) y e (cid:255) X e 2 E (cid:133) S 0 (cid:134) y e (cid:255) X e 2 E (cid:133) S (cid:134) y e (cid:255) 2 X i 2 S x i (cid:135) X i 2 S 0 x i 6 1 ; (cid:133) 9 (cid:134) where S (cid:18) V (cid:255) W and S 0 (cid:18) V (cid:255) (cid:133) W [ S (cid:134) , with S 0 6(cid:136) ; . Now , let (cid:133) x ; y (cid:134) denote the incidence vector of a feasible clique . Note that , when x T (cid:133) x ; y (cid:134) (cid:136) 1 ; x i (cid:136) 0 for all nodes in S [ S 0 and hence x 1 (cid:133) x ; y (cid:134) (cid:136) 0 . On the other hand , if x 1 (cid:133) x ; y (cid:134) (cid:136) 1 , from Lemma 4 . 1 , we must have x T (cid:133) x ; y (cid:134) 6 0 . These arguments prove the validity of the inequality given in the next proposition . 356 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 Proposition 4 . 1 . Let T (cid:136) (cid:133) W ; H (cid:134) be a tree in K n (cid:136) (cid:133) V ; E (cid:134) such that j W j (cid:136) b ; S (cid:18) V (cid:255) W and S 0 (cid:18) V (cid:255) (cid:133) W [ S (cid:134) ; where S 0 6(cid:136) ; : The tree (cid:135) 2 (cid:255) inequality x T (cid:133) x ; y (cid:134) (cid:135) x 1 (cid:133) x ; y (cid:134) 6 1 ; (cid:133) 10 (cid:134) where x T (cid:133) x ; y (cid:134) and x 1 (cid:133) x ; y (cid:134) are defined as in ( 8 ) and ( 9 ) , respectively , is valid for P C (cid:133) b (cid:134) : Clearly , by adding the term x 1 (cid:133) x ; y (cid:134) to the LHS of the original ( valid ) inequality x T (cid:133) x ; y (cid:134) 6 1 , we have gone to a higher dimensional face of P C (cid:133) b (cid:134) ( since S 0 6(cid:136) ; ) . Therefore , this addition can be viewed as a si - multaneous lifting operation applied to the inequality x T (cid:133) x ; y (cid:134) 6 1 . Though validity can be easily proved for the inequalities presented in Proposition 4 . 1 , we have not been able to establish necessary and su(cid:129)cient conditions to ensure the facetness property . However , the next proposition presents a case in which these inequalities deﬁne facets of P C (cid:133) b (cid:134) . Proposition 4 . 2 . If T (cid:136) (cid:133) W ; H (cid:134) is a path ; b P 6 and j S 0 j P 3 ; the inequality in Proposition 4 . 1 defines a facet for P C (cid:133) b (cid:134) . Proof . From Proposition 4 . 1 , we have that inequality x T (cid:133) x ; y (cid:134) (cid:135) x 1 (cid:133) x ; y (cid:134) 6 1 is valid . Now , let F be the face deﬁned in P C (cid:133) b (cid:134) by this inequality . Clearly , F is proper since the null vector is in P C (cid:133) b (cid:134) (cid:255) F and the ( unitary ) feasible clique formed by a single node in S 0 has its incidence vector in F . Assume now that p x (cid:135) c y 6 p 0 is a generic inequality valid for P C (cid:133) b (cid:134) and such that F (cid:18) F (cid:133) p ; c (cid:134) (cid:136) f(cid:133) x ; y (cid:134) 2 P C (cid:133) b (cid:134) : p x (cid:135) c y (cid:136) p 0 g . It remains to prove that p x (cid:135) c y 6 p 0 is a positive scalar multiple of x T (cid:133) x ; y (cid:134) (cid:135) x 1 (cid:133) x ; y (cid:134) 6 1 . This is done by comparing the values of p x (cid:135) c y for di(cid:128)erent incidence vectors of feasible cliques lying on F and , by hypothesis , on F (cid:133) p ; c (cid:134) . Throughout the proof , X C denotes the incidence vector of a feasible clique C . The feasibility of such cliques can be trivially checked . Moreover , the incidence vectors of all those cliques can be easily veriﬁed to be in F by applying Lemmas 4 . 1 and 3 . 1 . Thus , for sake of brevity , we omit the proofs of these facts in the claims below . (cid:3) Claim 1 . For all u 2 S 0 ; X f u g 2 F . Therefore , we have that p u (cid:136) p 0 . Claim 2 . For all distinct nodes u ; v 2 S 0 ; X f u ; v g 2 F . Thus , p u (cid:135) p v (cid:135) c u ; v (cid:136) p 0 , and , from Claim 1 , we obtain that c u ; v (cid:136) (cid:255) p 0 . Claim 3 . For all distinct nodes u ; v ; z 2 S 0 and w 2 S ; X f u ; v ; z ; w g and X f u ; v ; w g are in F . Therefore , we have the following system of equations : p u (cid:135) p v (cid:135) p z (cid:135) p w (cid:135) c u ; v (cid:135) c u ; z (cid:135) c u ; w (cid:135) c v ; z (cid:135) c v ; w (cid:135) c z ; w (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; p u (cid:135) p v (cid:135) p w (cid:135) c u ; v (cid:135) c u ; w (cid:135) c v ; w (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) : After multiplying these equations by the numbers in parentheses and summing up , we obtain that p z (cid:135) c u ; z (cid:135) c v ; z (cid:135) c z ; w (cid:136) 0 . From Claims 1 and 2 , this implies that c z ; w (cid:136) p 0 . Using this result in the ﬁrst equation of the system above , yields p w (cid:136) (cid:255) 2 p 0 . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 357 Claim 4 . For all w 1 ; w 2 2 S and u ; v ; z ; 2 S 0 , where w 1 6(cid:136) w 2 and u 6(cid:136) v 6(cid:136) z , the vectors X f u ; v ; z ; w 1 ; w 2 g and X f u ; v ; z ; w 1 g are in F . Thus , we have that p u (cid:135) p v (cid:135) p z (cid:135) p w 1 (cid:135) p w 2 (cid:135) c (cid:133)f u ; v ; z ; w 1 g(cid:134) (cid:135) c u ; w 2 (cid:135) c v ; w 2 (cid:135) c z ; w 2 (cid:135) c w 1 ; w 2 (cid:136) p 0 (cid:133)(cid:2) 1 (cid:134) ; p u (cid:135) p v (cid:135) p z (cid:135) p w 1 (cid:135) c (cid:133)f u ; v ; z ; w 1 g(cid:134) (cid:136) p 0 (cid:133)(cid:2)(cid:133)(cid:255) 1 (cid:134)(cid:134) : Multiplying the equations by the number in parentheses and summing up we obtain that p w 2 (cid:135) c u ; w 2 (cid:135) c v ; w 2 (cid:135) c z ; w 2 (cid:135) c w 1 ; w 2 (cid:136) 0 . From Claim 3 , we conclude that c w 1 ; w 2 (cid:136) (cid:255) p 0 . Claim 5 . For all z 2 V (cid:255) (cid:133) W [ S [ S 0 (cid:134) and u ; v 2 S 0 , with u 6(cid:136) v , the vectors X f u ; v ; z g and X f u ; z g are in F . This implies the system below : p u (cid:135) p v (cid:135) p z (cid:135) c u ; v (cid:135) c u ; z (cid:135) c v ; z (cid:136) p 0 ; p u (cid:135) p z (cid:135) c u ; z (cid:136) p 0 : Subtracting the two equations and using Claims 1 and 2 we conclude that c v ; z (cid:136) 0 and , since u and v have been arbitrarily chosen in S 0 . From the last equation , we can also obtain that p z (cid:136) 0 . Claim 6 . Let u ; z ; v and w be any four distinct nodes such that u 2 S and z ; v 2 S 0 and w 2 V (cid:255) (cid:133) W [ S [ S 0 (cid:134) . The incidence vectors X f u ; v ; z ; w g and X f u ; v ; z g are in F . This implies the following system of equations : p u (cid:135) p v (cid:135) p z (cid:135) p w (cid:135) c (cid:133)f u ; v ; z g(cid:134) (cid:135) c u ; w (cid:135) c v ; w (cid:135) c z ; w (cid:136) p 0 ; p u (cid:135) p v (cid:135) p z (cid:135) c (cid:133)f u ; v ; z g(cid:134) (cid:136) p 0 : Subtracting the two equations we obtain that p w (cid:135) c u ; w (cid:135) c v ; w (cid:135) c z ; w (cid:136) 0 which , from Claim 5 , implies that c u ; w (cid:136) 0 . Up to now we have proved that all coe(cid:129)cients of p and c related to nodes and edges not involving nodes of the path T ( nodes in W ) satisfy the conditions needed for the tree + 2 - inequality to be facet deﬁning . In the next steps we deal with the remaining coe(cid:129)cients . Initially , let W (cid:136) f u 1 ; . . . ; u b g and H (cid:136) f(cid:133) u 1 ; u 2 (cid:134) ; . . . ; (cid:133) u b (cid:255) 1 ; u b (cid:134)g be the nodes and edges of path T , re - spectively . Note that symmetry implies that proofs involving nodes (cid:133) u 1 ; . . . ; u p (cid:134) , for 1 6 p 6 b (cid:255) 1 , also hold for nodes (cid:133) u b (cid:255) p (cid:135) 1 ; . . . ; u b (cid:134) . Claim 7 . Since X f j ; u 1 ; . . . ; u p g and X f j ; z ; u 1 ; . . . ; u p g for all j 2 S 0 ; z 2 V (cid:255) (cid:133) W [ S [ S 0 (cid:134) and p 6 b (cid:255) 2 are in F . The following system of equations hold : p j (cid:135) p (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f j ; u 1 ; . . . ; u p g(cid:134) (cid:136) p 0 ; p z (cid:135) c j ; z (cid:135) c (cid:133)f z g ; f u 1 ; . . . ; u p g(cid:134) (cid:135) p j (cid:135) p (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f j ; u 1 ; . . . ; u p g(cid:134) (cid:136) p 0 : Subtracting the two equations , from Claim 5 , we conclude that c (cid:133) z ; f u 1 ; . . . ; u p g(cid:134) (cid:136) 0 : Now , varying p from 1 to (cid:133) b (cid:255) 2 (cid:134) and using the symmetry of the path , we conclude that c z ; u i (cid:136) 0 for all i (cid:136) 1 ; . . . ; b . 358 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 Claim 8 . Since v f j ; u 1 ; . . . ; u p g and v f j ; k ; u 1 ; . . . ; u p g for all j ; k 2 S 0 and p 6 b (cid:255) 2 are in F , we have that c (cid:133) k ; f u 1 ; . . . ; u p g(cid:134) (cid:136) 0 ( the system of equations is identical to the one used in Claim 7 with z replaced by k ) . Varying p from 1 to (cid:133) b (cid:255) 2 (cid:134) and using the symmetry of the path , we conclude that c k ; u i (cid:136) 0 for all i (cid:136) 1 ; . . . ; b : Claim 9 . Let i ; j ; k be three distinct nodes arbitrarily chosen and such that i 2 S and j ; k 2 S 0 : For p 6 b (cid:255) 3 ; the following incidence vectors are in F : v f j ; u 1 ; . . . ; u p g and v f i ; j ; k ; u 1 ; . . . ; u p g : This leads to the following system of equations : p j (cid:135) p (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f j ; u 1 ; . . . ; u p g(cid:134) (cid:136) p 0 ; p i (cid:135) p k (cid:135) p j (cid:135) p (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f j ; u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f i g ; f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f k g ; f u 1 ; . . . ; u p g(cid:134) (cid:135) c i ; j (cid:135) c i ; k (cid:135) c j ; k (cid:136) p 0 : Subtracting the two equations we obtain that p i (cid:135) p k (cid:135) c (cid:133)f i g ; f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f k g ; f u 1 ; . . . ; u p g(cid:134) (cid:135) c i ; j (cid:135) c i ; k (cid:135) c j ; k (cid:136) 0 ; which from Claims 1 – 3 and 8 , implies that c (cid:133)f i g ; f u 1 ; . . . ; u p g(cid:134) (cid:136) 0 : Thus , for p (cid:136) 1 ; . . . ; b (cid:255) 3 ; c i ; u p (cid:136) 0 and , since b P 6 ; we can extend this result , using the symmetry of the path , so that it holds for all p 2 f 1 ; . . . ; b g : Besides the coe(cid:129)cients of nodes and edges that are internal to the path , it remains to prove that the coe(cid:129)cients for all chords in the path are null . This is done in the next step . Claim 10 . Let p 6 b (cid:255) 3 ; b P r > p (cid:135) 2 and z be an arbitrary node in S 0 . The following cliques are feasible and their incidence vectors can be easily verified to be in F : f z ; u 1 ; . . . ; u p ; u r ; . . . ; u b g ; f z ; u 1 ; . . . ; u p (cid:135) 1 ; u r ; . . . ; u b g ; f z ; u 1 ; . . . ; u p (cid:135) 1 g and f z ; u r ; . . . ; u b g : Together with the previous results this implies the following equations ( in which we have already cancelled the terms p 0 ; p z and p z ; u i for all i (cid:136) 1 ; . . . ; b ; according to Claims 1 and 8 ) : p (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) p (cid:133)f u r ; . . . ; u b g(cid:134) (cid:135) c (cid:133)f u 1 ; . . . ; u p g(cid:134) (cid:135) c (cid:133)f u r ; . . . ; u b g(cid:134) (cid:135) c (cid:133)f u 1 ; . . . ; u p g ; f u r ; . . . ; u b g(cid:134) (cid:136) 0 ; p (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g(cid:134) (cid:135) p (cid:133)f u r ; . . . ; u b g(cid:134) (cid:135) c (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g(cid:134) (cid:135) c (cid:133)f u r ; . . . ; u b g(cid:134) (cid:135) c (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g ; f u r ; . . . ; u b g(cid:134) (cid:136) 0 ; p (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g(cid:134) (cid:135) c (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g(cid:134) (cid:136) 0 ; p (cid:133)f u r ; . . . ; u b g(cid:134) (cid:135) c (cid:133)f u r ; . . . ; u b g(cid:134) (cid:136) 0 : The last three equations imply that c (cid:133)f u 1 ; . . . ; u p (cid:135) 1 g ; f u r ; . . . ; u b g(cid:134) (cid:136) 0 : If we sequentially increase p by one from p (cid:136) 0 to p (cid:136) b (cid:255) 3 ; and for each value of p we sequentially decrease r from r (cid:136) b down to r (cid:136) p (cid:135) 3 ; we can prove ( by using all the intermediary results obtained so far in this procedure ) that c u p (cid:135) 1 ; u r (cid:136) 0 for all 0 6 p 6 b (cid:255) 3 and all p (cid:135) 3 6 r 6 b : In other words , we conclude that the coe(cid:129)cient c e is null for all chords e of the path T . In the third equation , varying p from 0 to b (cid:255) 2 and using the fact that the coe(cid:129)cients for all chords in the path are null , we conclude that p u 1 (cid:136) 0 and c u p (cid:135) 1 ; u p (cid:135) p u p (cid:135) 1 (cid:136) 0 for all 1 6 p 6 b (cid:255) 2 . Symmetrically , we conclude that p u b (cid:136) 0 and that c u p (cid:135) 1 ; u p (cid:135) p u p (cid:136) 0 for all 2 6 p 6 b (cid:255) 1 : This implies that , for some constant k 2 R , c e (cid:136) (cid:255) p u (cid:136) k for all edges e of the path and all nodes u which are not end nodes of path . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 359 Finally , the incidence vector of the ( feasible ) clique C formed by all the nodes of the path lies on F . Therefore , using the results of the two paragraphs above , this implies that p (cid:133) C (cid:134) (cid:135) c (cid:133) C (cid:134) (cid:136) k (cid:133) b (cid:255) 1 (cid:134) (cid:255) 7 k (cid:133) b (cid:255) 2 (cid:134) (cid:136) p 0 ; and we must have k (cid:136) p 0 : Since p x (cid:135) c y 6 p 0 is valid for P C (cid:133) b (cid:134) , k has to be positive and this completes the proof . (cid:3) 4 . 2 . Block - tree inequalities Consider the tree inequality for T (cid:136) (cid:133) W ; H (cid:134) and the result given in Lemma 4 . 1 . Clearly , c (cid:133) A (cid:134) is always less than or equal to j d T (cid:133) A (cid:134)j except if A (cid:136) W in which case c (cid:133) A (cid:134) (cid:136) 1 and j d T (cid:133) A (cid:134)j (cid:136) 0 : Therefore , the tree inequality is valid for P C (cid:133) b (cid:134) if and only if j W j > b : We now show that when suitable conditions are sat - isﬁed , the sum of nonvalid tree inequalities also gives rise to strong valid inequalities for P C (cid:133) b (cid:134) . This idea was ﬁrst investigated in [ 2 , 3 ] , and is also described in [ 4 ] in the context of the equicut polytope . Due to the notation used in these previous works and the analogy between the roles played by cycles in cut problems and those played by trees in clustering problems , we call these inequalities block - tree inequalities . Let (cid:7) be a collection of trees (cid:133) T 1 (cid:136) (cid:133) W 1 ; H 1 (cid:134) ; . . . ; T t (cid:136) (cid:133) W t ; H t (cid:134)(cid:134) of a graph G satisfying the following property : if u 2 W i \ W j for some pair f i ; j g (cid:18) f 1 ; . . . ; t g with i 6(cid:136) j ; then u 2 W k \ W ‘ for all pairs f k ; ‘ g (cid:18) f 1 ; . . . ; t g : For each tree T i of (cid:7) ; we can deﬁne the tree inequality as before , i . e . , x (cid:133) T i (cid:134)(cid:133) x ; y (cid:134) 6 0 : The tree combi - nation inequality for (cid:7) is given by the sum of these inequalities , i . e . x (cid:133) (cid:7) (cid:134)(cid:133) z ; y (cid:134) (cid:136) X T i 2 (cid:7) x (cid:133) T i (cid:134)(cid:133) x ; y (cid:134) 6 0 : (cid:133) 11 (cid:134) Consider the subgraph of G formed by the edges and nodes in (cid:7) . Let N be deﬁned as the set of nodes that are common to all trees in (cid:7) : If the nodes in N are removed from this subgraph , what remains is a forest of subtrees . Assume that (cid:133) S 1 ; . . . ; S r (cid:134) is the set of all these subtrees . Moreover , if q i denotes the number of nodes in S i for i 2 (cid:137) 1 ; . . . ; r (cid:138) suppose that q 1 P (cid:1) (cid:1) (cid:1) P q r : We deﬁne (cid:22) Q (cid:136) P t (cid:255) 1 i (cid:136) 1 q i : In Fig . 2 it is shown the support of a tree combination inequality for which t (cid:136) 3 and (cid:22) Q (cid:136) 6 : Proposition 4 . 3 . Let (cid:7) be a tree combination in G (cid:136) (cid:133) V ; E (cid:134) such that V (cid:133) (cid:7) (cid:134) (cid:136) S ti (cid:136) 1 W i : Suppose that j V (cid:133) (cid:7) (cid:134)j (cid:136) b (cid:135) (cid:22) b ; where (cid:22) b P 0 : Then ; the block (cid:255) tree inequality ( 11 ) is valid for P C (cid:133) b (cid:134) if and only if (cid:22) Q < (cid:22) b : Fig . 2 . Support graph of the tree combination inequality for t (cid:136) 3 . 360 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 Proof . Necessity : Suppose that (cid:22) Q P (cid:22) b : This implies that there exists a set K of k 6 t (cid:255) 1 subtrees such that the number of nodes in all subtrees in K is greater than or equal to (cid:22) b : Deﬁne S to be the set of all nodes of V (cid:133) (cid:7) (cid:134) that are not in V (cid:133) K (cid:134) ( (cid:136) { nodes of subtrees in K g(cid:134) : The incidence vector (cid:133) x S ; y S (cid:134) of S can be easily checked to be in P C (cid:133) b (cid:134) : From Lemma 4 . 1 , x (cid:133) T i (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) c (cid:133) S \ W i (cid:134) (cid:255) j d T (cid:133) S \ W i (cid:134)j : However , j d T (cid:133) S \ W i (cid:134)j can be computed as c (cid:133) S \ W i (cid:134) (cid:135) c (cid:133) W i (cid:255) S (cid:134) (cid:255) 1 which yields x (cid:133) T i (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) 1 (cid:255) c (cid:133) W i (cid:255) S (cid:134) : Thus , x (cid:133) (cid:7) (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) X t i (cid:136) 1 x (cid:133) T i (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) X t i (cid:136) 1 (cid:133) 1 (cid:255) c (cid:133) W i (cid:255) S (cid:134)(cid:134) (cid:136) t (cid:255) X t i (cid:136) 1 c (cid:133) W i (cid:255) S (cid:134) (cid:136) t (cid:255) k P t (cid:255) (cid:133) t (cid:255) 1 (cid:134) P 1 : The left - hand side of inequality ( 11 ) is positive for this feasible solution and therefore the inequality is not valid . Necessity is proved . Su(cid:129)ciency : We assume that ( 11 ) is not valid and we end up with the conclusion that (cid:22) Q must be greater than or equal to (cid:22) b : For this , let S be a subset of V such that (cid:133) x S ; y S (cid:134) violates ( 11 ) , i . e . x (cid:133) (cid:7) (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) t (cid:255) X t i (cid:136) 1 c (cid:133) W i (cid:255) S (cid:134) P 1 which implies that X t i (cid:136) 1 c (cid:133) W i (cid:255) S (cid:134) 6 t (cid:255) 1 : Now , since (cid:133) x S ; y S (cid:134) violates ( 11 ) , there exists at least one tree T j in (cid:7) such that x (cid:133) T j (cid:134)(cid:133) x S ; y S (cid:134) (cid:136) 1 : This implies that all nodes in W j and , consequently , all nodes in N are in S . Thus , from the last expression above , we can conclude that there are at most t (cid:255) 1 subtrees in (cid:7) ( obtained by removing the nodes in N ) that do not contain nodes in S . If (cid:22) Q < (cid:22) b ; the previous observation implies that j S j > b and , therefore , S cannot be a feasible clique . We conclude that , if ( 11 ) is not valid , then (cid:22) Q P (cid:22) b and this completes the proof . (cid:3) Again , it is hard to ﬁnd necessary and su(cid:129)cient conditions for inequality ( 11 ) to be facet deﬁning for P C (cid:133) b (cid:134) . Nevertheless , we have found one case for which facet deﬁning inequalities can be obtained by combining nonvalid tree inequalities . This case is described below . Suppose that (cid:7) is a collection of two trees T 1 and T 2 that have one node v c in common (cid:133) N (cid:136) f v c g(cid:134) and the degree of any node i in trees T 1 and T 2 is not greater than 2 . In this case , each of the trees of the combination reduces to a path and the support graph of the tree combination inequality looks like a cross centered at node v c ( see Fig . 3 ) . Removing node v c from the support graph , what remains is a forest composed of four paths . Let (cid:133) V (cid:133) P 1 (cid:134) ; P 1 (cid:134) ; . . . ; (cid:133) V (cid:133) P 4 (cid:134) ; P 4 (cid:134) be those paths , q 1 P q 2 P q 3 P q 4 (cid:133) q i (cid:136) j V (cid:133) P i (cid:134)j(cid:134) and v i 1 ; . . . ; v iq i denote the nodes E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 361 of V (cid:133) P i (cid:134) : Moreover , deﬁne p j to be the minimum of q k (cid:135) q ‘ for k and ‘ in f 1 ; 2 ; 3 ; 4 ; g (cid:255) f j g : The tree combination inequality corresponds to X e 2 P 1 [ P 2 [ P 3 [ P 4 y e (cid:255) 2 x v c (cid:255) X 4 i (cid:136) 1 X q j (cid:255) 1 j (cid:136) 1 x v ij 6 0 : (cid:133) 12 (cid:134) The following result can be proved . Proposition 4 . 4 . Let (cid:7) be cross centered at a node v c and spanning the graph G (cid:136) (cid:133) V ; E (cid:134) : Suppose that q 2 (cid:135) q 3 (cid:135) q 4 P b and j V (cid:133) (cid:7) (cid:134)j (cid:136) b (cid:135) (cid:22) b : Then ; for b > (cid:22) b P 3 ; the following holds : • Inequality ( 12 ) is valid for P C (cid:133) b (cid:134) : • Inequality ( 12 ) is facet defining for P C (cid:133) b (cid:134) if and only if q j (cid:135) p j (cid:136) b for all j (cid:136) 1 ; 2 ; 3 ; 4 : 5 . Computational results We now describe the computational experiments that we have carried out . Our primary goal is to conﬁrm that the inequalities that we have introduced here are useful when optimizing over the polytope P C (cid:133) b (cid:134) : A second goal is to compare di(cid:128)erent cutting plane strategies since a large variety of facet deﬁning inequalities for P C (cid:133) b (cid:134) are found in the literature and , in principle , they can all be considered when designing a branch - and - cut algorithm for MEWCP . In the literature , for the extended formulation , only one strategy has been tested in [ 12 ] . To achieve our goals , we have implemented a branch - and - cut algorithm whose main features are : ( i ) use of a primal heuristic to provide a priori lower bounds ; ( ii ) since most inequalities we have used as cutting planes have very small support graphs , exact separation routines have been implemented to separate them , the only exception being the one designed to generate violated tree inequalities ; ( iii ) branching on the most Fig . 3 . Support graph of the tree combination inequality with cross centered at node v c . 362 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 fractional variable if no violated inequality is found or tailing - o(cid:128) has been detected ( objective function change less than 0 . 0001 after 30 LPs ) ; ( iv ) the strategy for node selection in the branch - and bound tree is Best Bound and ( v ) the LP solver is CPLEX 3 . 0 ( see [ 1 ] ) . All tests have been done in a Sun SPARC 1000 machine . We now describe in more details some of the features listed above . 5 . 1 . Primal heuristics To derive an initial lower bounds , we use an algorithm which ﬁts in the framework of Greedy Ran - domized Adaptive Local Search Procedures ( GRASP ) . The main ideas of GRASP are discussed in [ 7 ] . Essentially , our heuristic starts by building a feasible solution which is then given as an input for the local search heuristic Greedy All described in [ 14 ] . The initial solution is built as follows . First we pick one node of the graph and add it to the clique . At each iteration , a list of k nodes providing the largest aug - mentations in the objective function is constructed . Then , a randomly chosen node of the list is added to the current clique and the procedure keeps repeating these steps until b nodes have been added to the clique or no more nodes are to be examined . For all test instances this easy - to - implement heuristic reaches the optimal solution . Thus , if good upper bounds come up from the formulations , the branch - and - bound process presumably will stop soon . 5 . 2 . Separation routines We have conducted several computational experiments comparing both CPU times and upper bounds obtained by cutting - planes ( without entering the branching phase ) for exact and heuristic separation routines for various classes of inequalities . It was possible to use exact separation since the support graphs of the inequalities generated by our cutting plane algorithm have quite few nodes . We have also considered the use of inequalities with larger supports . However , this had a huge impact on the time needed to solve the LPs . We have not been able to design good heuristics for separation . The best performances of our code for all cutting strategies were always achieved when using exact separations , which have been implemented by simple enumeration algorithms . However , many of these separation algorithms have complexity of H (cid:133) n 4 (cid:134) or even H (cid:133) n 5 (cid:134) ; which is too much time consuming . Our conclusion is that this is certainly a topic that deserves more attention : one should look for a better compromise in which fast heuristics are designed so as to provide a considerable amount of violated inequalities when they exist . The only inequalities that we have not separated exactly are those having trees as part of their support graphs . For the tree inequality ( 4 ) , Park et al . [ 12 ] present a theorem which states that the most violated tree inequality can be found in polynomial time if its node set is ﬁxed in advance ; otherwise , the problem is NP - hard . They also have developed a two - phase heuristic separation for these inequalities . The ﬁrst phase chooses the nodes in the tree , that is , the set W . The second phase computes the optimal tree spanning W . The procedure starts by ﬁnding the set ~ W corresponding to all nodes in V whose variables are not null . If j ~ W j is less than b (cid:135) 1 ; the procedure fails . Otherwise , suppose that ~ W (cid:136) f u 1 ; . . . ; u p g and x u i 6 x u i (cid:135) 1 for all i 2 f 1 ; . . . ; p g ; where p P b (cid:135) 1 : Then an optimal tree is built for all sets W (cid:136) (cid:133)f u 1 ; u 2 ; . . . ; u b (cid:135) 1 g [ f u j g(cid:134) (cid:255) f u i g ; where i 2 f 1 ; . . . ; b (cid:135) 1 g and j 2 f b (cid:135) 2 ; . . . ; p g : All violated inequalities found are added to the current formulation [ 13 ] . We also have implemented our own heuristic which builds the tree in a greedy fashion starting once with each edge of the graph . A few more inequalities could be separated with this heuristic . But in general , the results we have obtained for both heuristics were discouraging as we will show later . Typically , the number E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 363 of violated inequalities found is extremely low . We have not been able to understand precisely the causes of this behaviour . It may be the case that the heuristics perform badly or , on the other hand , the incidence vectors satisfying the original formulation often satisfy the tree inequalities . Despite of this fact , to test the cutting strategy proposed in [ 12 ] , we have decided to separate them . In the results reported below , we have used our own separation heuristic for trees . An important remark concerning the separation of a - inequalities is that , if the sets S and T are ﬁxed then , given a fractional solution (cid:133) x (cid:3) ; y (cid:3) (cid:134) of the current linear relaxation , it is easy to compute the ( integer ) values of a which correspond to the maximum violation of the a - inequality . To see this , let us rewrite the a - inequality for x (cid:3) ; y (cid:3) ; S and T . Deﬁning k 0 and k such that k 0 (cid:136) X e 2 d (cid:133) S ; T (cid:134) y (cid:3) e (cid:255) X e 2 E (cid:133) S (cid:134) [ E (cid:133) T (cid:134) y (cid:3) e (cid:255) X i 2 T x (cid:3) i and k (cid:136) X i 2 T x (cid:3) i (cid:255) X i 2 S x (cid:3) i ; the inequality becomes 2 k 0 (cid:135) 2 k a 6 a 2 (cid:255) a , i . e . , a 2 (cid:255) (cid:133) 2 k (cid:135) 1 (cid:134) a (cid:255) 2 k 0 P 0 : (cid:133) 13 (cid:134) Hence , the most violated inequalities ( if they exist ) are obtained by setting a to either (cid:133) 2 k (cid:135) 1 (cid:134) = 2 b c or (cid:133) 2 k (cid:135) 1 (cid:134) = 2 d e ; since these are the integer values minimizing the LHS of inequality ( 13 ) . The above procedure is used to generate a - inequalities in one of our cutting strategies . In the description of such strategy we denote by a (cid:3) the values of a computed by this procedure . 5 . 3 . Test instances As in [ 5 , 12 ] , the instances are partitioned into two sets . In the ﬁrst one , all edge weights are positive , while in the second one , positive and negative edge weights are allowed . The weights were randomly generated according to the scheme described in [ 14 ] , i . e . • 1 6 c ij 6 1000 r k (cid:133) 1 6 c ij 6 1000 (cid:134) for positive weights , and • (cid:255) 1000 r k 6 c ij 6 1000 r k (cid:133)(cid:255) 1000 6 c ij 6 1000 (cid:134) for positive and negative weights , where k 2 f 1 ; . . . ; 5 g and r 2 (cid:133) 0 ; 1 (cid:138) . We have generated instances for n 2 f 30 ; 40 ; 42 ; 44 ; 45 ; 46 ; 48 g and for ﬁve possible values of k and b (cid:136) n = 2 b c : This choice of b was motivated from our preliminary tests which indicated that , for ﬁxed n and edge weights , these are usually the most di(cid:129)cult instances . This is in ac - cordance with prior computational experiments reported in the literature [ 12 ] . We also have carried out some experiments with instances corresponding to the classical Max - Clique problem ( the edge weights were assigned according to the scheme proposed in [ 5 ] ) . However , as pointed out in [ 12 ] , in this case there are other approaches that seem to be more suitable to tackle the problem . Our experiments with those instances have shown that , for graphs with 30 – 40 nodes and densities taking values in the set f 0 : 25 ; 0 : 50 ; 0 : 80 g , the pure branch - and - bound algorithm is already able to solve the problem in few minutes . Our implementation of the branch - and - cut algorithm even with the best cutting - plane strategies spends too much time in separating inequalities . For those instances , this large computational e(cid:128)ort has not paid o(cid:128) since the overall running times of the branch - and - cut algorithm have shown to be higher than those of the branch - and - bound algorithm . The only positive observation with respect to the new inequalities and the classical Max - Clique problem is that , when they are included in the cutting - plane strategies , they cause an enormous reduction in the number of nodes opened by the enumeration algo - 364 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 rithms . Due to the above facts , we have not pursued the tests with the instances of the classical Max - Clique problem . 5 . 4 . Cutting strategies Since there are many di(cid:128)erent families of facet deﬁning inequalities that are known for P C (cid:133) b (cid:134) ; several alternative cutting strategies can be applied in a branch - and - cut algorithm for the Maximum Edge - Weighted Clique Problem . The strategies we have tested in our computational experiments involve the inequalities listed below . The notation in parentheses is used in the sequel to denote the corresponding inequalities . • cut triangle (cid:133) M (cid:134) ; • cut : for j S j (cid:136) 1 and j T j (cid:136) 3 (cid:133) C 1 ; 3 (cid:134) ; • cut : for j S j (cid:136) 2 and j T j (cid:136) 3 (cid:133) C 2 ; 3 (cid:134) ; • tree ( TRE ) ; • clique triangle (cid:133) C M (cid:134) ; • (cid:133) s ; t (cid:134) - cut : for j S j (cid:136) 1 and j T j (cid:136) 3 ( st C 1 ; 3 ) ; • (cid:133) s ; t (cid:134) - cut : for j S j (cid:136) 1 and j T j (cid:136) 4 ( st C 1 ; 4 ) ; • a : for a (cid:136) 2 ; j S j (cid:136) 1 and j T j (cid:136) 4 (cid:133)(cid:133) a (cid:136) 2 (cid:134) 1 ; 4 (cid:134) ; • a : for a (cid:3) ; j S j (cid:136) 1 and j T j (cid:136) 3 (cid:133)(cid:133) a (cid:3) (cid:134) 1 ; 3 (cid:134) ; • a : for a (cid:3) ; j S j (cid:136) 1 and j T j (cid:136) 4 (cid:133)(cid:133) a (cid:3) (cid:134) 1 ; 4 (cid:134) ; • a : for a (cid:3) ; j S j (cid:136) 2 and j T j (cid:136) 3 (cid:133)(cid:133) a (cid:3) (cid:134) 2 ; 3 (cid:134) ; In our experiments ﬁve di(cid:128)erent strategies were compared . The choice of these strategies was based on preliminary tests we have run on small instances for which they have shown to be the most e(cid:128)ective . Using the notation introduced above , the ﬁve strategies can be summarized as follows : • Strategy 1 : M ; C 1 ; 3 and C 2 ; 3 ; • Strategy 2 : M ; C M and TRE ; • Strategy 3 : M ; stC 1 ; 3 and stC 1 ; 4 ; • Strategy 4 : M and (cid:133) a (cid:136) 2 (cid:134) 1 ; 4 ; • Strategy 5 : M ; (cid:133) a (cid:3) (cid:134) 1 ; 3 ; (cid:133) a (cid:3) (cid:134) 1 ; 4 and (cid:133) a (cid:3) (cid:134) 2 ; 3 . Note that Strategy 2 corresponds to the one used in [ 12 ] . We have noticed that the performance of the code is extremely sensitive to the parameters of the branch - and - cut algorithm . In particular , the number of cuts added at each iteration ( after each LP ) seem to in - ﬂuence a lot the behaviour of the algorithm . We have ﬁxed the maximum number of cuts generated at each iteration to maxcut (cid:136) 25 n = 2 d e for each class of inequalities . The separation routines are called in the same order they appear in the description of the strategy . The separation of a new family of inequalities is only executed if the number of violated in - equalities found for the previous family is less than maxcut / 2 . In [ 12 ] there is also an analogous parameter for maxcut but no reference for the value used in the computations is given . 5 . 5 . Comparison between cutting strategies The ﬁrst test we have done concerns the pure branch - and - bound code using CPLEX 3 . 0 with default parameters . The larger instances of MEWCP used in computational experiments reported in the literature refer to graphs with up to 30 nodes [ 5 , 12 ] . Using branch - and - bound we have been able to solve most of the 30 node graphs in about 1 hour of CPU . Therefore , the real challenge seems to solve problems for graphs with more than 40 nodes . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 365 In Tables 1 – 5 , we show the results obtained with Strategies 1 – 5 , respectively , for 10 instances from our sample . In each of these we have the columns : n : the number of nodes in the graph ; b : the maximum cardinality of a feasible clique ; k : the parameter used to generate the edge weights ; # Cuts : the number of nodes in the enumeration tree ; # LP : the number of LPs solved ; # Cuts : the number of cuts generated for each family of valid inequalities in the corresponding strategy ; First Node : the value of the lower bound after the last LP solved in the ﬁrst node of the enumeration tree and Time : the CPU time ( in seconds ) needed to solve the instance . Initially , for comparison purposes , we have restricted ourselves to the 10 instances in Tables 1 – 5 for which n lies in the range f 40 ; . . . ; 45 g : The optimal values for all these instances are given in columns First Node of Table 1 . We have concentrated our analysis of the computational results on two main aspects . First we inves - tigate the quality of the cuts generated in each strategy in terms of their ability in describing the optimal Table 1 Computational results for instances using Strategy 1 n b k # Nodes # LP # Cuts First Node Time ( s ) # M # C 1 ; 3 # C 2 ; 3 Positive weights 40 20 1 0 17 5289 3000 0 109346 3719 . 52 40 20 3 0 18 5075 2407 300 68759 4063 . 29 40 20 4 0 27 5053 2523 1200 60782 5419 . 51 44 22 1 0 15 6399 1650 0 136525 3734 . 54 45 22 5 0 23 8090 3628 226 69563 7873 . 28 Positive and negative weights 40 20 1 0 55 4044 4197 3800 70348 23805 . 20 40 20 5 0 10 1596 2127 0 27967 522 . 46 42 21 5 0 8 2738 678 105 35460 295 . 94 44 22 1 0 63 5604 6471 4510 90620 47799 . 73 45 22 1 0 29 5987 6351 791 102295 23572 . 92 Table 2 Computational results for instances using Strategy 2 n b k # Nodes # LP # Cuts First Node Time ( s ) # M # C M # TRE Positive weights 40 20 1 6 20 5216 802 0 110437 . 83 2851 . 44 40 20 3 8 27 4862 293 1 69901 . 67 2929 . 24 40 20 4 12 40 5033 360 3 61867 . 32 3917 . 87 44 22 1 0 14 6328 634 1 136525 2439 . 72 45 22 5 6 28 8047 356 0 70166 . 45 6702 . 60 Positive and negative weights 40 2 1 64 107 4082 1407 74 76625 . 67 22335 . 44 40 20 5 0 7 1458 524 90 27967 162 . 77 42 21 5 0 8 2729 534 0 35460 285 . 00 44 22 1 78 122 5644 1554 74 97368 . 92 37371 . 73 45 22 1 10 30 5974 1254 44 105735 . 75 8717 . 98 366 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 solution . This is done by looking at the number of nodes opened in the enumeration tree . According to that , Strategies 1 , 4 and 5 , for which all instances have been solved without branching , outperform Strategies 2 and 3 , for which branching is often needed . These three strategies generate about the same number of cuts but in Strategies 4 and 5 less LPs have been solved which may indicate that the a - inequalities are producing deeper cuts than the previously known (cid:133) 1 ; 3 (cid:134) and (cid:133) 2 ; 3 (cid:134) cut - inequalities . Now , if we turn our attention to the CPU time spent in solving these instances , the following obser - vations apply . Strategies 2 , 4 and 5 correspond , respectively , to the fastest runs in 6 , 1 and 3 of the 10 instances . The direct comparison between Strategies 4 and 5 shows that the algorithm runs faster with Strategy 5 in 7 of the 10 instances . Thus , we are left with two promising strategies , namely Strategies 2 and 5 . Though Strategy 2 runs faster than Strategy 5 in 70 % of the instances , the latter should not be discarded since , as for instance (cid:133) 40 ; 20 ; 1 (cid:134) with positive and negative weights , it can be more than 40 % faster than the former . Table 3 Computational results for instances using Strategy 3 n b k # Nodes # LP # Cuts First Node Time ( s ) # M # stC 1 ; 3 # stC 1 ; 4 Positive weights 40 20 1 0 17 5267 3000 0 109346 3777 . 23 40 20 3 0 16 4922 2451 0 68759 2881 . 20 40 20 4 2 22 5060 2597 155 60786 . 21 3154 . 60 44 22 1 0 15 6360 1650 0 136525 3942 . 37 45 22 5 2 27 8141 3687 164 69578 . 13 10775 . 66 Positive and negative weights 40 20 1 8 40 4046 4639 433 73004 . 21 12832 . 67 40 20 5 0 10 1588 2127 200 27967 489 . 44 42 21 5 0 8 2739 678 105 35460 287 . 34 44 22 1 8 44 5543 5763 497 93037 . 97 35065 . 61 45 22 1 2 25 5948 4590 83 102994 . 05 12784 . 62 Table 4 Computational results for instances using Strategy 4 n b k # Nodes # LP # Cuts First Node Time ( s ) # M # (cid:133) a (cid:136) 2 (cid:134) 1 ; 4 Positive weights 40 20 1 0 19 5251 4000 109346 5616 . 77 40 20 3 0 18 4849 3500 68759 3336 . 02 40 20 4 0 20 5027 4500 60782 6483 . 45 44 22 1 0 14 6313 1100 136525 3826 . 79 45 22 5 0 22 8051 3941 69563 9276 . 42 Positive and negative weights 40 20 1 0 32 4034 11500 70348 23827 . 81 40 20 5 0 7 1546 1500 27967 214 . 15 42 21 5 0 8 2726 1050 35460 614 . 59 44 22 1 0 36 5537 13750 90620 37290 . 87 45 22 1 0 27 5962 9008 102295 23465 . 26 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 367 It is also important to observe that we have adopted a conservative strategy with respect to branching . Since our primary goal was to measure the ability of the new inequalities in describing the optimal so - lution , our branch - and - cut algorithm was designed to favor the cutting plane phase rather than branching . From this observation one can raise the following question that appears in many branch - and - cut appli - cations : how long should one proceed in a cutting - plane phase before branching so as to obtain smaller CPU times ? The cuts of Strategy 2 are not as good as those in Strategy 5 to describe the optimal solution but this disadvantage is overcame in most of the instances by the fact that branching allows us to obtain the optimal solution quicker . The design of a more ﬂexible branching policy in a branch - and - cut algorithm based on Strategy 5 may lead to a faster implementation though we have not investigated further in this direction . As general conclusion , we can say that the a - inequalities we have introduced in this paper are com - putationally useful . The results we have obtained are comparable with , and sometimes better than , the best results obtained by using other inequalities reported in the literature . Finally , to have a better insight on the performance of our algorithm with Strategy 5 , we have generated further instances with n P 40 ( the literature only reports results for n 6 30 ) . We have tried to solve these problems with a standard branch - and - bound procedure limiting the number of nodes in the enumeration tree to 20000 and CPU time to 1 hour . The only instances solved were for the pairs (cid:133) n ; k (cid:134) 2 f(cid:133) 40 ; 5 (cid:134)g with positive edge weights and (cid:133) n ; k (cid:134) 2 f(cid:133) 40 ; 4 (cid:134) ; (cid:133) 40 ; 5 (cid:134) ; (cid:133) 42 ; 4 (cid:134) ; (cid:133) 42 ; 5 (cid:134)g with positive and negative edge weights . Tables 6 and 7 summarize the results we have obtained for the branch - and - cut algorithm . Notice that all instances have again been solved in the ﬁrst node of the enumeration tree . Finally , we also have looked at the following question . Given the sets S and T , which are the values of a (cid:3) that are found by the separation routines in Strategy 5 ? We have observed that the best value for a ( i . e . , a (cid:3) ) usually belongs to the set f 0 ; 1 ; . . . ; t (cid:255) s g ; where s (cid:136) j S j and t (cid:136) j T j . The ﬁrst two values correspond to cut inequalities for the sets T and S , respectively , while the last value corresponds to a (cid:133) s ; t (cid:134) - cut inequality . For the a (cid:3) (cid:133) 1 ; 3 (cid:134) separation routine , 50 % to 70 % of the inequalities generated were cut inequalities and the re - mainder were (cid:133) s ; t (cid:134) - cut inequalities . For the a (cid:3) (cid:133) 1 ; 4 (cid:134) separation routine , the huge majority of the inequalities that have been separated ( typically more than 90 % ) were neither cut nor (cid:133) s ; t (cid:134) - cut inequalities . With the policy we have adopted to call the separation routines , the code has never called the a (cid:3) (cid:133) 2 ; 3 (cid:134) separation routine . Table 5 Computational results for instances using Strategy 5 n b k # Nodes # LP # Cuts First Node Time ( s ) # M # (cid:133) a (cid:3) (cid:134) 1 ; 3 # (cid:133) a (cid:3) (cid:134) 1 ; 4 # ( a (cid:3) (cid:134) 2 ; 3 Positive weights 40 20 1 0 20 5831 2700 0 0 109346 4267 . 23 40 20 3 0 17 4911 2400 0 0 68759 3015 . 97 40 20 4 0 19 4754 3000 0 0 60782 3125 . 80 44 22 1 0 16 6350 1200 0 0 136525 3902 . 93 45 22 5 0 36 8097 3600 0 0 69563 8712 . 95 Positive and negative weights 40 20 1 0 32 4079 6068 1500 0 70348 12481 . 00 40 20 5 0 9 1604 1404 500 0 27967 477 . 35 42 21 5 0 9 2787 900 0 0 35460 707 . 50 44 22 1 0 40 5590 7827 2200 0 90620 20388 . 73 45 22 1 0 32 5981 6300 0 0 102295 16111 . 23 368 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 6 . Conclusions In this paper we have introduced some new classes of valid and facet deﬁning inequalities for P C (cid:133) b (cid:134) ; the polytope corresponding to the convex hull of integer solutions for MEWCP . The a - inequalities were shown to be computationally e(cid:128)ective . Moreover we have been able to show that they generalize previously known classes of facet deﬁning inequalities not only for P C (cid:133) b (cid:134) but also for the BQP P B . The tree inequalities studied in [ 9 , 12 ] have been generalized here to include the case where the nodes in the tree do not form a cover for the feasible cliques . A second generalization for the tree inequalities is proposed in which a linear combination of nonvalid tree inequalities gives rise to a valid inequality for P C (cid:133) b (cid:134) which , for special cases , has been proved to deﬁne a facet of this polytope . Computational use of both these generalized tree inequalities has still to be investigated . Very recently , in [ 8 ] , computational experiments have shown that the a - inequalities represent the large majority of the set of all facet deﬁning inequalities for P C (cid:133) b (cid:134) whose support graphs have from 3 to 5 nodes . Table 6 Computational results for instances with positive weights using branch - and - cut algorithm and Strategy 5 n k # Nodes # LP # Cuts First Node Time ( s ) M (cid:133) a (cid:3) (cid:134) 1 ; 3 (cid:133) a (cid:3) (cid:134) 1 ; 4 (cid:133) a (cid:3) (cid:134) 2 ; 3 40 1 0 20 5831 2700 0 0 109346 4267 . 23 2 0 9 4000 0 0 0 82451 784 . 85 3 0 17 4911 2400 0 0 68759 3015 . 97 4 0 19 4754 3000 0 0 60782 3125 . 80 5 0 8 3500 0 0 0 60513 621 . 12 42 1 0 28 6117 4800 0 0 120299 8894 . 25 2 0 30 5318 5700 0 0 87810 8732 . 11 3 0 22 5493 3300 0 0 76554 4736 . 14 4 0 11 5021 0 0 0 69482 1245 . 75 5 0 9 4200 0 0 0 67383 752 . 83 44 1 0 16 6350 1200 0 0 136525 3902 . 93 2 0 30 6355 5400 0 0 98186 13599 . 25 3 0 14 6814 300 0 0 84675 2149 . 72 4 0 16 6538 900 0 0 75274 3553 . 14 5 0 12 5681 300 0 0 69540 1508 . 55 45 1 0 36 7568 6600 0 0 138694 22275 . 82 2 0 37 7516 6686 0 0 98321 26268 . 18 3 0 33 6819 5543 0 0 82743 18208 . 38 4 0 24 7373 3000 0 0 77500 6685 . 92 5 0 27 8097 3600 0 0 69563 8712 . 95 46 1 0 40 8533 7500 0 0 142985 35398 . 46 2 0 34 8687 5400 0 0 108243 18581 . 20 3 0 17 7597 900 0 0 94859 2971 . 74 4 0 29 8742 3900 0 0 78747 12944 . 28 5 0 30 8616 4200 0 0 72431 12413 . 82 48 1 0 39 9621 6600 0 0 163397 39312 . 96 2 0 54 9133 9828 0 0 115471 60796 . 54 3 0 40 8622 7380 1200 0 96666 45622 . 65 4 0 19 8506 1200 0 0 88728 6147 . 11 5 0 16 9000 0 0 0 82117 3186 . 07 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 369 We have run several computational experiments both to conﬁrm the strength of the a - inequalities and to compare di(cid:128)erent cutting strategies to be used in a cutting - plane framework . Our results show that a quite small subclass of the a - inequalities is already very good in describing the part of P C (cid:133) b (cid:134) on which lies the optimal solution . Moreover , the CPU times needed by the branch - and - cut algorithm generating a - in - equalities are comparable ( sometimes favorably ) with those needed by the fastest algorithm based on in - equalities introduced earlier in the literature . Acknowledgements The authors are very grateful to Dr . Marcel Hunting for many corrections and suggestions on earlier versions of the text . Table 7 Computational results for instances with positive and negative weights using branch - and - cut algorithm and Strategy 5 n k # Nodes # LP # Cuts First Node Time ( s ) M (cid:133) a (cid:3) (cid:134) 1 ; 3 (cid:133) a (cid:3) (cid:134) 1 ; 4 (cid:133) a (cid:3) (cid:134) 2 ; 3 40 1 0 32 4079 6068 1500 0 70348 12481 . 00 2 0 17 2155 3600 0 0 45404 2219 . 68 3 0 13 2282 2400 0 0 34091 1298 . 51 4 0 25 2358 5929 500 0 27758 4759 . 35 5 0 9 1604 1404 500 0 27967 477 . 35 42 1 0 35 4805 6689 2100 0 81633 18754 . 11 2 0 26 3561 5400 0 0 46828 5569 . 29 3 0 12 2635 1800 0 0 36689 1119 . 90 4 0 5 1586 300 0 0 35987 66 . 63 5 0 9 2787 900 0 0 35460 707 . 50 44 1 0 40 5590 7827 2200 0 90620 20388 . 73 2 0 18 3437 3300 0 0 56960 4201 . 43 3 0 13 3278 1800 0 0 40697 1277 . 06 4 0 33 2393 7352 2750 0 32601 14388 . 82 5 0 18 2507 3900 0 0 29407 2633 . 66 45 1 0 32 5981 6300 0 0 102295 16111 . 23 2 0 27 4014 5700 0 0 55103 11021 . 61 3 0 9 2403 1200 0 0 43914 637 . 28 4 0 27 2773 6600 0 0 33990 7549 . 38 5 0 30 3373 7171 563 0 30974 9397 . 09 46 1 0 33 6039 6600 0 0 99550 19276 . 87 2 0 23 3808 4500 0 0 58361 5988 . 41 3 0 27 3248 6300 0 0 43915 7323 . 71 4 0 38 3444 8220 3450 0 32698 20632 . 69 5 0 16 3415 2700 0 0 31000 1693 . 50 48 1 0 55 7462 11036 4200 0 113478 63603 . 96 2 0 42 5211 8581 3600 0 61768 33527 . 03 3 0 24 4101 5100 0 0 45941 6625 . 02 4 0 15 3178 2488 600 0 36903 2781 . 26 5 0 39 3692 9115 1800 0 31351 24048 . 16 370 E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 References [ 1 ] CPLEX Optimization , Inc . Using the CPLEX Callable Library including Using the CPLEX Linear Optimizer with CPLEX Barrier and Mixed Integer Solvers , Version 3 . 0 , 1989 – 1994 . [ 2 ] C . C . de Souza , The graph equipartition problem : Optimal solutions , extensions and applications , Ph . D . thesis , Universit (cid:19) e Catholique de Louvain , Facult (cid:19) e des Sciences Appliqu (cid:19) es , Unit (cid:19) e de Gestion Industrielle , Louvain - La - Neuve , Belgique , November 1993 . [ 3 ] C . C . de Souza , M . Laurent , Some new classes of facets for the equicut polytope , Discrete Applied Mathematics 62 ( 1995 ) 167 – 192 . [ 4 ] M . M . Deza , M . Laurent , Geometry of Cuts and Metrics , Springer , Berlin , 1997 . [ 5 ] U . Faigle , G . Dijkhuizen , A cutting - plane approach to the edge - weighted maximal clique problem , European Journal of Operational Research 69 ( 1993 ) 121 – 130 . [ 6 ] U . Faigle , R . Schrader , R . Suletzki , A cutting - plane algorithm for optimal graph partitioning , Methods of Operations Research 57 ( 1986 ) 109 – 116 . [ 7 ] T . A . Feo , M . G . C . Resende , Greedy randomized adaptive search procedures , Journal of Global Optimization 6 ( 1995 ) 1 – 27 . [ 8 ] Hunting , M . M . G . , Relaxations techniques for discrete optimization problems , Ph . D . thesis , University Twente , Enschede , Netherlands , 1998 . [ 9 ] E . L . Johnson , A . Mehrotra , G . L . Nemhauser , Min - cut clustering , Mathematical Programming 62 ( 1993 ) 133 – 151 . [ 10 ] G . L . Nemhauser , L . A . Wosley , Integer and Combinatorial Optimization , Wiley , New York , 1988 . [ 11 ] M . Padberg , The Boolean quadric polytope : some characteristics , facets and relatives , Mathematical Programming B - 45 ( 1989 ) 139 – 172 . [ 12 ] K . Park , K . Lee , S . S . Park , An extended formulation approach to the edge - weighted maximal clique problem , European Journal of Operational Research 95 ( 1996 ) 671 – 682 . [ 13 ] S . S . Park , Private Communication . [ 14 ] H . Sp (cid:127) ath , Heuristically determining cliques of given cardinality and with minimal cost within weighted complete graphs , Zeitschrift f (cid:127) ur Operations Research 29 ( 1985 ) 125 – 131 . E . M . Macambira , C . C . de Souza / European Journal of Operational Research 123 ( 2000 ) 346 – 371 371