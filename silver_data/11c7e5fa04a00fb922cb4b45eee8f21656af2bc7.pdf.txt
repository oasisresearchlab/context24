Trigger - Action Programming in the Wild : An Analysis of 200 , 000 IFTTT Recipes Blase Ur † , Melwyn Pak Yong Ho , Stephen Brawner , Jiyun Lee , Sarah Mennicken ‡ , Noah Picard , Diane Schulze , Michael L . Littman Brown University , † Carnegie Mellon University , ‡ University of Zurich bur @ cmu . edu , melwyn pak @ alumni . brown . edu , stephen brawner @ brown . edu , jiyun lee @ brown . edu , mennicken @ iﬁ . uzh . ch , noah picard @ brown . edu , diane schulze @ brown . edu , mlittman @ cs . brown . edu ABSTRACT While researchers have long investigated end - user program - ming using a trigger - action ( if - then ) model , the website IFTTT is among the ﬁrst instances of this paradigm being used on a large scale . To understand what IFTTT users are creating , we scraped the 224 , 590 programs shared pub - licly on IFTTT as of September 2015 and are releasing this dataset to spur future research . We characterize aspects of these programs and the IFTTT ecosystem over time . We ﬁnd a large number of users are crafting a diverse set of end - user programs—over 100 , 000 different users have shared pro - grams . These programs represent a very broad array of con - nections that appear to ﬁll gaps in functionality , yet users of - ten duplicate others’ programs . Author Keywords IFTTT ; End - User Programming ; End - User Composition ; Trigger - Action Programming ; Internet of Things ( IoT ) ACM Classiﬁcation Keywords H . 5 . 2 Information Interfaces and Presentation ( e . g . , HCI ) : User Interfaces INTRODUCTION Recent years have seen a proliferation of physical Internet - of - Things ( IoT ) devices [ 6 , 20 ] and social media sites [ 28 ] . In - dividual users frequently utilize many physical devices [ 13 ] and online services [ 22 ] in conjunction , necessitating tools that enable users to connect and manage these devices and services . One of the most straightforward approaches to do so is a trigger - action model . Users conﬁgure the behavior of a system by specifying triggers ( e . g . , “if there is motion” ) and their resultant actions ( e . g . , “turn on the lights” ) . Because of its conceptual simplicity , the trigger - action model for com - posing different sensors and devices has attracted signiﬁcant research attention [ 3 , 4 , 5 , 8 , 9 , 14 , 17 , 18 , 25 ] . Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page . Copyrights for components of this work owned by others than the author ( s ) must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , topostonserversortoredistributetolists , requirespriorspeciﬁcpermission and / or a fee . Request permissions from Permissions @ acm . org . CHI’16 , May 07 - 12 , 2016 , San Jose , CA , USA Copyright is held by the owner / author ( s ) . Publication rights licensed to ACM . ACM 978 - 1 - 4503 - 3362 - 7 / 16 / 05 ? $ 15 . 00 DOI : http : / / dx . doi . org / 10 . 1145 / 2858036 . 2858556 Despite this attention , the website IFTTT ( “If This Then That” ) is one of the ﬁrst large - scale deployments of trigger - action programming in the wild . IFTTT enables users to write trigger - action programs that connect numerous services ( e . g . , Gmail and Dropbox ) , social media sites ( e . g . , Facebook and Twitter ) , and physical devices ( e . g . , Fitbit and Philips Hue ) . The growing popularity of IFTTT since its 2011 launch raises many questions about the trigger - action programs its users are writing . To investigate these questions , we performed a web scrape of the 224 , 590 IFTTT programs ( termed recipes ) shared publicly as of September 2015 . In this paper , we an - alyze and characterize this dataset : the types of recipes that have been created ; who has created them ; how recipes are de - scribed ; and how IFTTT has grown over time . Our dataset en - compasses IFTTT recipes from over 100 , 000 different users , most of whom have shared only one or two programs . Many recipes , however , effectively duplicate existing recipes . To encourage further research on trigger - action program - ming , we are also releasing this dataset to other researchers . 1 We conclude by highlighting key insights from our analyses . RELATED WORK A number of research studies over the last 15 years have ex - amined trigger - action programming or related interfaces [ 3 , 5 , 9 , 17 , 18 , 19 , 25 , 26 ] . In the literature , the trigger - action paradigm is discussed under a few different names , including end - user device composition . Trigger - action programming has also been adopted for controlling a handful of consumer devices in smart homes [ 15 , 23 , 27 ] . The IFTTT service we study in this paper is , to our knowl - edge , the most widely used instance of trigger - action pro - gramming . Two prior studies pay particular attention to IFTTT . To evaluate the feasibility of trigger - action program - ming for household devices , our group previously scraped IFTTT in 2013 [ 25 ] . At that time , we evaluated only the recipes involving physical devices , which are a small fraction of the overall number of recipes . We also showed that users could successfully write trigger - action programs with multi - ple triggers and actions regardless of prior experience [ 25 ] . More recently , Huang and Cakmak [ 9 ] examined potential ambiguities in IFTTT - style trigger - action programming . 1 The dataset is available at http : / / www . upod . io / datasets Table 1 . Key characteristics of the 2015 and 2013 IFTTT datasets . Characteristic 2015 2013 # of trigger channels 177 52 # of triggers 768 180 # of action channels 143 45 # of actions 368 106 # of recipes 224 , 590 67 , 820 # of authors 106 , 452 35 , 495 # of adoptions ( across recipes ) 11 , 718 , 336 1 , 293 , 639 Mean # of adoptions per recipe 52 . 2 19 . 1 Median # of adoptions per recipe 1 1 METHODOLOGY We collected all IFTTT recipes shared publicly as of Septem - ber 6 , 2015 . To do so , we wrote a web scraper using the Se - lenium browser - automation framework [ 21 ] . IFTTT assigns each public recipe a unique numerical identiﬁer , or ID . IDs appear to have been assigned sequentially beginning with 1 , and each recipe is available at https : / / ifttt . com / recipes / ID , en - abling us to visit each recipe sequentially . We wrote a parser that used heuristics to extract key features from each recipe’s page and write them to a single tab - delimited ﬁle . We introduce the terminology we use in our dataset and in this paper through the following example recipe : • ID : 59528 • Trigger Channel : Instagram ( The device or service ) • Trigger : Any new photo by you • Action Channel : Dropbox • Action : Add ﬁle from URL • Author : lehmann heat ( The user who created the recipe ) • Date : September 29 , 2012 ( Date of posting ) • Adoptions : 520 ( How many other users have added the recipe to “my recipes” ) • Description : “Dropbox my Instagrams” ( User - provided text that serves as the recipe’s title ) RESULTS Our dataset comprises 224 , 590 recipes . As we detail through - out this section , we ﬁnd that most authors create only a few recipes . The recipes in our dataset were created by 106 , 452 different authors who chose to publish their work ( IFTTT users need not share their recipes publicly ) . Users can also adopt programs written by other users . In total , recipes have been adopted nearly 12 million times . Table 1 compares our 2015 dataset with the dataset our group previously collected in 2013 [ 25 ] . In the last two years , IFTTT has roughly tripled the number of triggers and actions . The number of authors and recipes has similarly tripled , while the number of times recipes have been adopted has increased 10 - fold . Our dataset thus documents the proliferation of end - user programming in the wild . Triggers and Actions We distinguish between the channel , which is the device or service ( e . g . , “Weather” ) , and the trigger or action itself ( e . g . , “Weather : Current pollen count rises above . . . ” ) . In our dataset , 220 different channels are used . Figure 1 . Histogram of recipe adoptions by other users . We observed 177 different trigger channels , encompassing 768 different triggers . The most popular ones triggered thou - sands of recipes . The median number of recipes using a given trigger channel was 119 ( mean 1 , 269 ) . The ﬁve most fre - quently used trigger channels were Feed ( 53 , 656 recipes ) , In - stagram ( 18 , 698 ) , Date & Time ( 16 , 357 ) , Weather ( 13 , 717 ) , and Twitter ( 12 , 123 ) . In contrast , Quip triggered a single recipe , while seven others each triggered fewer than ten . Similarly , a few triggers were used across numerous recipes . The median number of recipes using each trigger was 22 ( mean 292 ) . “Feed : New feed item” triggered 46 , 697 recipes , while “Instagram : Any new photo by you” triggered 8 , 733 recipes . In contrast , 49 of the 768 triggers we observed were used in only a single recipe . We found similarly diverse usage patterns among actions . We observed 143 different action channels , encompassing 368 different actions . The median number of recipes using a given action channel was 90 ( mean 1 , 571 ) . The ﬁve most frequently used action channels were Twitter ( 37 , 595 recipes ) , Email ( 19 , 882 ) , SMS ( 13 , 847 ) , Facebook ( 11 , 819 ) , and Evernote ( 11 , 737 ) . In contrast , Qblinks Qmote was used in one recipe . Of the 368 different actions , the median was used in 21 . 5 recipes , while the mean was used in 610 recipes . Whereas 23 actions were used in only a single recipe , 46 actions were each used in over 1 , 000 different recipes , and the four most popular actions were each used in over 10 , 000 recipes . Recipes Recipes differed sharply in the number of times other users have adopted them ( Figure 1 ) . The mean number of adoptions per recipe is 52 , while the median is 1 ; only 43 . 1 % of recipes have been adopted at least twice . In contrast , a few recipes have been adopted more than 100 , 000 times each . The most frequently adopted recipe was “Rain Tomor - row ? ” [ 1 ] , which sends an SMS if rain is forecasted for the next day . In contrast , other recipes had never been adopted for seemingly two distinct reasons . Some such recipes appear to be tests ( e . g . , recipes titled “test” , “aaa” , etc . ) . Many others , however , effectively duplicate previously existing recipes . Authors Many different users wrote recipes , but only a few were par - ticularly proliﬁc . In total , 106 , 452 different authors created the 224 , 590 recipes in our dataset . Each author created be - tween 1 and 524 different recipes ( Figure 2 ) , with a mean of Figure 2 . The number of authors who created a given number of recipes , with outliers ( the handful of extremely proliﬁc authors ) removed . Figure 3 . Author h - indices . We exclude an outlier with h - index 117 . Figure 4 . A word cloud of the most frequent words used in recipe de - scriptions after removing channel names and ﬁltering duplicates . 2 . 11 recipes . While 68 % of authors posted only 1 recipe , 7 % shared at least 5 recipes and 2 . 5 % shared at least 10 . In the last two years , the number of authors grew substantially ; the 2013 dataset contains recipes from only 35 , 495 authors , each of whom had shared between 1 and 126 recipes . A few authors were especially productive . Kev ( 524 recipes ) , K0ha ( 371 recipes ) , and Flipefr ( 338 recipes ) shared the most recipes . To further understand authors’ productivity , we com - puted a variant of the biliometric h - index . In our deﬁnition , an IFTTT author with h - index N has shared N recipes , each of which has been adopted by at least N other users . As shown in Figure 3 , h - indices ranged from 1 to 117 , with mean 1 . 02 . Overall , 1 . 4 % of authors had an h - index of at least 5 , and 0 . 3 % an h - index of at least 10 . These highly productive users ( sometimes termed “gardeners” in research on end - user com - puting [ 16 ] ) create widely used , standardized programs to ob - viate each user reinventing commonly desired features . Recipe Descriptions While manually examining users’ descriptions of recipes , we observed a handful of description styles . Some variants ex - plicitly described the recipe itself ( “Sends post to Twitter” ) or did so more implicitly ( “Tweet latest post” ) . Other descrip - tions used if - then or when - then phrasing , sometimes omitting the “then” ( “If new post , send to Twitter” ) . Authors also used arrows to describe connections ( “Post - > Twitter” ) . Other methods of description were more abstract explanations of the Figure 5 . A heat map of the most connected trigger and action channels showing the number of different recipes that connect that trigger to that action . White indicates no such recipes , and dark red the most . recipe’s function ( “Rain Alert ! ” ) . Users sometimes referred to themselves in the descriptions ( “Let me know if it rains” ) or described their intended response ( “Get an umbrella ! ” ) . To distill some of the important elements of users’ descrip - tions , we made a word cloud of the language most frequently used in recipe descriptions ( Figure 4 ) . We pre - processed de - scriptions by removing non - ASCII characters , lowercasing all words , and dropping duplicate descriptions . We also re - moved channel names and common English words . Trigger - Action Connections We next analyzed what triggers and actions recipes con - nected . There are 25 , 311 possible combinations of 177 trig - ger channels and 143 action channels . Even though our dataset includes over 200 , 000 recipes , only 5 , 555 different combinations appear ( one - ﬁfth of the possible space ) . While connections between trigger and action channels were sparse overall , the most popular channels were highly con - nected . Figure 5 displays a heat map of how the 20 most frequently connected trigger channels connect to the 20 most frequently connected action channels . Only a handful of pop - ular channels were not connected to each other ( indicated by white on the heat map ) , and the most frequent combination of channels ( Feed triggering Email ) , occurred in 9 , 099 recipes . Although the IoT receives substantial media attention , a mi - nority of IFTTT recipes involve physical devices , as was the case in 2013 [ 25 ] . These recipes have many of the same char - acteristics as recipes involving online services , yet are less frequently used and less densely connected to other channels . Duplication In addition to examining how channels are connected , we also analyzed the lower - level connections between triggers and actions . The 768 different triggers and 368 different actions allow for 282 , 624 combinations . Nevertheless , only 15 , 961 ( 6 % ) of the unique combinations appeared . Figure 6 . The number of newly created recipes posted each month . Figure 7 . The number of authors posting recipes each month . The most commonly created combination , “Feed : New feed item → Email : Send me an email” was the basis for 6 , 817 dif - ferent recipes . The top ten most common combinations were each used in over 2 , 000 recipes , while the top 100 were each used in at least 309 recipes . Overall , each distinct trigger - action combination was used in a median of 2 and a mean of 14 . 1 different recipes . Good - Turing smoothing [ 7 ] estimates that the chance of a newly shared recipe instantiating an unob - served trigger - action combination is only 3 . 3 % ; the observed examples cover much of the likely space of combinations . Longitudinal Analysis Finally , we examined IFTTT over time . The number of recipes posted to IFTTT grew exponentially at a rate of 50 % per year , as shown in Figure 6 . However , many “new” recipes were simply duplicates of previous recipes in the sense of reusing the same trigger - action combination . Authorship on IFTTT exhibited similar growth patterns . Notably , as shown in Figure 7 , a large number of ﬁrst - time authors appear to be successfully using IFTTT’s trigger - action programming . DISCUSSION To our knowledge , our analysis of 224 , 590 trigger - action pro - grams from 106 , 452 authors is the largest - scale investiga - tion of the type to date . Prior studies of end - user program - ming in the wild , examining email ﬁltering rules [ 12 ] and web macros [ 2 , 10 ] , had previously found that up to a few thousand authors could successfully share programs or rules anonymously . Below , we highlight four key insights from our initial analysis of an ecosystem of 40 × as many authors shar - ing recipes , albeit using a far more limited paradigm . Explosion of Channels and Connections Our longitudinal analyses show that the number of new chan - nels being added , new recipes being written , and distinct users writing recipes each month have increased over time . This result directly highlights the continued growth of trigger - action programming in the real world and its relevance to a range of online services and physical devices . It also suggests the need to provide users with more support for discovering functionality and perhaps even managing recipe collections . Duplicated Recipes A striking fraction of recipes were duplicates of each other . Rather than using an existing recipe , IFTTT users frequently wrote and shared their own duplicate . This is particularly no - table in light of IFTTT’s interface , in which searching for ex - isting recipes is emphasized over creating a new recipe . That many users took the ostensibly more complex route suggests that the bar for expressing trigger - action programs is lower than searching , or that search features are perhaps lacking . Recipes Fill Gaps in Functionality Over 100 , 000 IFTTT users have shared recipes publicly , yet most ( 93 % ) shared fewer than 5 . Additionally , the majority of recipes have been adopted only once . Most users are not writ - ing and sharing an entire portfolio of trigger - action recipes , which suggests that users are expressing trigger - action pro - grams mainly to ﬁll gaps in the spectrum of things they want , rather than constructing a whole new universe . As has been documented for decades [ 11 ] , users choose to customize their environments using end - user programming for a number of reasons , ranging from automating their own repeated patterns to adopting “neat” customizations they observe others using , especially in the presence of a robust sharing ecosystem [ 12 ] . Importance of a Broad Array of Connections The most popular trigger and action channels are densely con - nected to each other , whereas the overall space of connec - tions is far sparser , yet far from empty . This result high - lights the value of services that support connecting a huge array of triggers to a huge array of actions . Only some of the possible connections will be made , but each provides value . The most popularly connected channels center on three cate - gories : communication ( e . g . , SMS ) ; social media ( e . g . , Insta - gram ) ; and contextual data ( e . g . , time , location , and weather ) . Philips Hue is the only physical device among popular chan - nels , emphasizing that the IoT is not yet here in full force . Future Challenges for Trigger - Action Programming Although our analyses show wide use of trigger - action pro - gramming in the real world , future challenges remain . Mov - ing forward , there are many open questions on how to make recipes more expressive . Currently , IFTTT - style approaches are limited by their lack of a sense of history or learning , po - tentially limiting usefulness in the real world . Furthermore , recipes can suffer from ambiguity [ 9 ] or temporal uncertainty . In addition , supporting everyday uses in the IoT remains a challenge . In the real world , a recipe can fail to complete for reasons ranging from network failures to a device being un - plugged , raising questions about handling failures . Further - more , debugging IFTTT recipes is difﬁcult or impossible , yet obvious solutions would raise privacy concerns [ 24 ] . ACKNOWLEDGMENTS We thank Linden Tibbets and IFTTT for permitting us to share the collected dataset for academic purposes . This work was supported in part by a gift from Microsoft Research . REFERENCES 1 . Alexander Tibbets . 2014 . Rain Tomorrow ? https : / / ifttt . com / recipes / 165139 - rain - tomorrow - get - a - notification . ( 2014 ) . 2 . Christopher Bogart , Margaret Burnett , Allen Cypher , and Christopher Scafﬁdi . 2008 . End - User Programming in the Wild : A Field Study of CoScripter Scripts . In Proc . VL / HCC . 3 . Yngve Dahl and Reidar - Martin Svendsen . 2011 . End - User Composition Interfaces for Smart Environments : A Preliminary Study of Usability Factors . In Design , User Experience , and Usability . Theory , Methods , Tools and Practice . 118 – 127 . 4 . Scott Davidoff , Min Kyung Lee , Charles Yiu , John Zimmerman , and Anind K . Dey . 2006 . Principles of smart home control . In Proc . Ubicomp . 5 . Anind K . Dey , Timothy Sohn , Sara Streng , and Justin Kodama . 2006 . iCAP : Interactive prototyping of context - aware applications . In Proc . Pervasive . 6 . Colin Dixon , Ratul Mahajan , Sharad Agarwal , A . J . Brush , Bongshin Lee , Stefan Saroiu , and Paramvir Bahl . 2012 . An Operating System for the Home . In Proc . NSDI . 7 . William A . Gale and Geoffrey Sampson . 1995 . Good - Turing frequency estimation without tears . Journal of Quantitative Linguistics 2 ( 1995 ) , 217 – 237 . 8 . Manuel Garc ´ ıa - Herranz , Pablo Haya , and Xavier Alamn . 2010 . Towards a Ubiquitous End - User Programming System for Smart Spaces . Journal of Universal Computer Science 16 , 12 ( 2010 ) , 1633 – 1649 . 9 . Justin Huang and Maya Cakmak . 2015 . Supporting mental model accuracy in trigger - action programming . In Proc . UbiComp . 10 . Gilly Leshed , Eben M . Haber , Tara Matthews , and Tessa Lau . 2008 . CoScripter : Automating & Sharing How - to Knowledge in the Enterprise . In Proc . CHI . 11 . Wendy E . Mackay . 1990 . Patterns of Sharing Customizable Software . In Proc . CSCW . 12 . Wendy E . Mackay . 1991 . Triggers and Barriers to Customizing Software . In Proc . CHI . 13 . Michelle L . Mazurek , J . P . Arsenault , Joanna Bresee , Nitin Gupta , Iulia Ion , Christina Johns , Daniel Lee , Yuan Liang , Jenny Olsen , Brandon Salmon , Richard Shay , Kami Vaniea , Lujo Bauer , Lorrie Faith Cranor , Gregory R . Ganger , and Michael K . Reiter . 2010 . Access control for home data sharing : Attitudes , needs and practices . In Proc . CHI . 14 . Sarah Mennicken and Elaine M . Huang . 2012 . Hacking the natural habitat : An in - the - wild study of smart homes , their development , and the people who live in them . In Proc . Pervasive . 15 . Sarah Mennicken , Jo Vermeulen , and Elaine M . Huang . 2014 . From Today’s Augmented Houses to Tomorrow’s Smart Homes : New Directions for Home Automation Research . In Proc . UbiComp . 16 . Bonnie A . Nardi . 1993 . A Small Matter of Programming : Perspectives on End User Computing . MIT Press , Cambridge , MA , USA . 17 . Mark W . Newman . 2006 . Now We’re Cooking : Recipes for End - User Service Composition in the Digital Home . In Position Paper – CHI 2006 Workshop IT @ Home . 18 . Mark W . Newman , Ame Elliott , and Trevor F . Smith . 2008 . Providing an Integrated User Experience of Networked Media , Devices , and Services through End - User Composition . In Proc . Pervasive . 19 . John F . Pane , Chotirat “Ann” Ratanamahatana , and Brad A . Myers . 2001 . Studying the language and structure in non - programmers’ solutions to programming problems . Int . J . Human - Computer Studies 54 , 2 ( 2001 ) , 237 – 264 . 20 . Samsung Smart Things . 2016 . Compatible products . https : / / www . smartthings . com / compatible - products . ( 2016 ) . 21 . SeleniumHQ . 2015 . Selenium WebDriver . http : / / www . seleniumhq . org / . ( 2015 ) . 22 . Manya Sleeper , William Melicher , Hana Habib , Lujo Bauer , Lorrie Faith Cranor , and Michelle Mazurek . 2016 . Sharing personal content online : Exploring channel choice and multi - channel behaviors . In Proc . CHI . 23 . Supermechanical . 2013 . Twine . http : / / supermechanical . com / twine / . ( 2013 ) . 24 . Blase Ur , Jaeyeon Jung , and Stuart Schechter . 2014a . Intruders Versus Intrusiveness : Teens’ and Parents’ Perspectives on Home - Entryway Surveillance . In Proc . UbiComp . 25 . Blase Ur , Elyse McManus , Melwyn Pak Yong Ho , and Michael L . Littman . 2014b . Practical Trigger - Action Programming in the Smart Home . In Proc . CHI . 26 . Marcel Walch , Michael Rietzler , Julia Greim , Florian Schaub , Bj orn Wiedersheim , and Michael Weber . 2013 . homeBLOX : making home automation usable . In UbiComp Adjunct Proceedings . 27 . Wigwag . 2013 . Wigwag . http : / / www . wigwag . com / . ( 2013 ) . 28 . Xuan Zhao , Cliff Lampe , and Nicole Ellison . 2016 . Negotiating platforms , people and practices : How people manage content sharing across social media . In Proc . CHI .