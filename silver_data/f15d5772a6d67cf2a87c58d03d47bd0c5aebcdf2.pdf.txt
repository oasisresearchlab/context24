Gerhard Fischer 1 FirstMonday Submission Beyond “Couch Potatoes” : From Consumers to Designers and Active Contributors Gerhard Fischer University of Colorado , Center for LifeLong Learning and Design ( L3D ) Department of Computer Science , Campus Box 430 Boulder , CO 80309 - 0430 - USA gerhard @ cs . colorado . edu Abstract The fundamental challenge for computational media is to contribute to the invention and design of cultures in which humans can express themselves and engage in personally meaningful activities . Cultures are substantially defined by their media and tools for thinking , working , learning , and collaborating . New media change ( 1 ) the structure and contents of our interests , ( 2 ) the nature of our cognitive and collaborative tools , and ( 3 ) the social environment in which thoughts originate and evolve , and mindsets develop . Unfortunately , a large number of new media are designed from a perspective of seeing and treating humans primarily as consumers . In personally meaning and important activities , the possibility for humans to be and to act as designers ( in cases in which they desire to do so ) should be accessible not only to a small group of “high - tech scribes , ” but rather to all interested individuals and groups . While the core message of the article applies to cultures , mindsets , media , technologies , and educational systems in general , my examples are mostly drawn from computational media , and more specifically from human computer interaction as a particular domain . Keywords : consumer ; designer ; personal meaningful activities ; active contributor ; mindsets ; informed participation ; meta - design ; design time and use time ; seeding , evolutionary growth , reseeding model ; unselfconscious cultures of design ; high - tech scribes ; division of labor ; social creativity ; social capital ; computational environments supporting active contributors ; domain - oriented design environments ; Envisionment and Discovery Collaboratory ; living computational memories Gerhard Fischer 2 FirstMonday Submission Table of Contents 1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 2 Images of Humans . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2 . 1 A Consumer Perspective . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2 . 2 A Designer Perspective . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2 . 3 Beyond Binary Choices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 3 Implications of a Designer Perspective . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 3 . 1 Informed Participation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 3 . 2 Meta - Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 3 . 3 The Seeding , Evolutionary Growth , and Reseeding Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 4 Technology and Media Support for Designer Roles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 4 . 1 Domain - Oriented Design Environments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 4 . 2 Envisionment and Discovery Collaboratory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 4 . 3 Living Computational Memories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 5 The Ubiquity of the Consumer / Designer Spectrum . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 5 . 1 Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 5 . 2 Open Source : A Success Model of Collaborative Design in a Designer Culture . . . . . . . . . . . . . . . . . . . . . . . 19 5 . 3 Learning and Education . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 6 Assessment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 6 . 1 Technology Assessment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 6 . 2 Utility = Value / Effort . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 6 . 3 Social Capital . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 6 . 4 Trade - offs in a “Do - It - Yourself Society” . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 6 . 5 Mindsets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 6 . 6 Cross - Cultural Perspectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 7 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 8 Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 9 References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 Gerhard Fischer 3 FirstMonday Submission List of Figures Figure 1 : Children Creating their Own Jewelry _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 4 Figure 2 : Beyond Binary Choices — The Consumer / Designer Spectrum _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 7 Figure 3 : Duality between Learning and Contributing _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 9 Figure 4 : Design and Use Time _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 10 Figure 5 : The Seeding , Evolutionary Growth , Reseeding Process Model _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 11 Figure 6 : Technology and Media Support for Consumer and Designer Roles _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 13 Figure 7 : A Domain - Oriented Design Environment for Computer Network Design _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 14 Figure 8 : A Layered Architecture Supporting Human Problem Domain Interaction _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 15 Figure 9 : The Envisionment and Discovery Collaboratory _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 16 Figure 10 : The Participate - in - the - Action ( PiTa Board ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 17 List of Tables Table 1 : Comparing Consumer and Designer Roles _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 7 Table 2 : Traditional versus New Models of Working and Learning in Organizations _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 21 Gerhard Fischer 4 FirstMonday Submission 1 Introduction Cultures are substantially defined by their media and their tools for thinking , working , learning , and collaborating . A large number of the new media are designed to see humans only as consumers . Television is the most obvious medium that promotes this mindset and behavior [ Fischer , 1999 ; Postman , 1985 ] and contributes to the degeneration of humans into “couch potatoes , ” for whom a remote control is the most important instrument of their cognitive activities ( a “couch potato” is a colloquial expression for a person who spends a lot of time on a couch consuming food and information in a passive fashion and who rarely engages in intellectual or physical activities ) . A consumer mindset is not limited to television . In our educational institutions learners are often treated as consumers , creating a mindset of consumerism for the rest of their lives [ Illich , 1971 ] . Citizens often feel left out of the decisions by policy makers , denying them opportunities to take an active role . Computational media have the unique potential to let people be designers or assist them to gradually become designers . Unfortunately , most current computational environments do not allow users to act as contributors and designers . Figure 1 : Children Creating their Own Jewelry The basic idea of the paper is illustrated in Figure 1 : rather than buying jewelry as a finished product , these children create their own jewelry — they act as designers . The store supports this process by providing a great Gerhard Fischer 5 FirstMonday Submission variety of basic materials , tools , and a social setting including space and a human coach or facilitator to help the children . The concept “ designer” in the context of this paper is used very broadly for a person who wants to act as an active participant and contributor in personally meaningful activities . In this paper I will : ( 1 ) differentiate between consumer and designer perspectives ; ( 2 ) discuss media support or limitations for these roles ; ( 3 ) describe innovative computational media from this perspective and illustrate them with examples from our work ( for more information see : http : / / www . cs . colorado . edu / ~ l3d / ) ; and ( 4 ) provide some evidence for the ubiquity of this framework in our society . 2 Images of Humans Depending on work , learning , and leisure activities , different people will consider different activities as personally meaningful and important . In today’s world with more information available and delivered in our homes , classrooms , and entertainment centers , a consumer perspective is well supported , and can easily and completely fill our lives thereby reducing “doing” activities even more in favor of “watching” activities . 2 . 1 A Consumer Perspective The Director of Research for Time Warner Entertainment , in his closing plenary address at the Computer Human Interaction ( CHI’95 ) 1995 conference , argued that the design of a remote control to browse and efficiently select 500 or more TV channels as the basic challenge for the human computer interaction ( HCI ) research community . Without a doubt , solving this problem is of great commercial interest to industries that regard humans as the pure consumers ( meaning consumption is their highest priority or most important activity—but is it , or should it be , a focal issue for HCI ? In the early days of computing , humans were considered the “servants” of computers . As computers became cheaper , the basic economic criteria started to change and considerations of how to use computational power to augment and empower human beings were pioneered by some early visionaries [ Engelbart & English , 1968 ; Kay , 1984 ] . These new ideas were neither known nor embraced by the community at large . The Artificial Intelligence community developed expert systems ( such as MYCIN [ Buchanan & Shortliffe , 1984 ] ) , which were behaviorally unacceptable because they restricted knowledgeable and skilled human professionals to a consumer role by allowing them only to answer “yes” or “no” to questions generated by the system . Other disciplines such as human factors [ Norman , 1988 ] often considered humans as system components with specific characteristics such as limited attention span , faulty memory , and easy distractibility along with other “undesirable” characteristics . 2 . 2 A Designer Perspective Early research in HCI focused on novices and naive users , and how walk - up - and - use systems could support their needs . Little consideration in the first decade of HCI research was given to the following perspectives : • to support domain designers ( being skilled and knowledgeable in specific domains ) who are neither novices nor naive users , but who are interested in their work and who see the computer as a means rather than as an end [ Henderson & Kyng , 1991 ; Nardi , 1993 ] ; • to create co - adaptive environments , in which users change , because they learn , and in which systems change , because users have the ability to adapt systems to better suit their practices [ Mackay , 1990 ] ; • how to create intrinsically motivating computational environments [ Csikszentmihalyi , 1990 ] , in which users of all backgrounds would feel in control , and could engage in activities which they would find interesting , challenging , rewarding , and matched to their needs and interests ; and • how to design media for collaborative design , and in particular media to support design communities to create , share and manage knowledge [ Fischer & Ostwald , 2001 ] . Gerhard Fischer 6 FirstMonday Submission The HCI community slowly started to understand that ( at least ) some humans wanted to be more than consumers , and were not content with being novices or naive users indefinitely . New design philosophies introduced important new research objectives such as user - centered design [ Norman & Draper , 1986 ] , learner - centered design [ Communications of the ACM , 1996 ] , and human - centered design [ Flanagan et al . , 1997 ] . Some members of the AI community started to consider the true goal of AI not as the replacement of human beings , but as the empowerment and augmentation of humans [ Fischer & Nakakoji , 1992 ; Terveen , 1995 ] . My arguments in this paper rest on the fundamental belief that humans ( not all of them , not at all times , not in all contexts ) want to be and act as designers in personally meaningful activities requiring convivial tools which are defined as follows [ Illich , 1973 ] : “convivial tools allow users to invest the world with their meaning , to enrich the environment with the fruits of their vision and to use them for the accomplishment o f a purpose they have chosen” . Convivial tools encourage users to be actively engaged in generating creative extensions to the artifacts given to them and have the potential to break down the strict counterproductive barriers between consumers and designers [ Brown & Duguid , 2000 ] . Many computer users and designers today are domain professionals , competent practitioners , and discretionary users and should not be considered naïve users , or dummies ( despite the infinite number of books entitled “X for Dummies” ) . They worry about tasks , they are motivated to contribute and to create good products , they care about personal growth , and they want to have convivial tools that make them independent of “ high - tech scribes ” ( whose role is defined by the fact that the world of computing is still too much separated into a population of elite scribes who can act as designers and a much larger population of intellectually disenfranchised computer phobes who are forced into a consumer role ) . The experience of having participated in the framing and solving of a problem or in the creation of an artifact ( see Figure 1 ) makes a difference to those who are affected by the solution and therefore consider it personally meaningful and important : “people are more likely to like a solution if they have been involved in its generation ; even though it might not make sense otherwise” [ Rittel , 1984 ] . A fundamental challenge for the next generation of computational media and new technologies is not to deliver predigested information to individuals , but to provide the opportunity and resources for social debate , discussion , and collaborative design . In many design activities , learning cannot be restricted to finding knowledge that is “out there . ” For most design problems ( ranging from urban design to graphics design and software design that we have studied over many years ) , the knowledge to understand , frame , and solve problems does not exist ; rather it is constructed and evolved during the process of solving these problems , exploiting the power of the “symmetry of ignorance” [ Rittel , 1984 ] and “breakdowns” [ Fischer , 1994 ; Schön , 1983 ] . From this perspective , access to existing information and knowledge ( often seen as the major advance of new media ) is a very limiting concept [ Arias et al . , 1999 ; Brown et al . , 1994 ; PCAST , 1997 ] and should be complemented by creating opportunities for people to engage in informed participation ( see section 3 . 1 and [ Arias et al . , 1999 ] ) . 2 . 3 Beyond Binary Choices By arguing for the desirability of humans to be designers , I want to state explicitly that there is nothing wrong with being a consumer and that we can learn and enjoy many things in a consumer role ( e . g . , listening to a lecture , watching a tennis match , attending a concert , seeing things in a movie on our couch that we are unable to see first hand ) . I also do not assume that being a consumer or being a designer would be a binary choice : it is rather a continuum [ Repenning et al . , 1999 ] ranging from passive consumer , to active consumer , to end - user , to user , to power users , to domain designer , all the way to meta - designer ( see Figure 2 ) . It is also the case that the same person is and wants to be a consumer in some situations and in others a designer ; therefore “consumer / designer” is not an attribute of a person , but of a context . Good designers should be well - informed consumers ( e . g . , they should exploit reuse as a powerful design strategy by “consuming” existing information , and exploit the contributions of the “giants” who preceded them ) . Gerhard Fischer 7 FirstMonday Submission Consumer < - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - > Designer passive consumer active consumer end - user user power users , local developers domain designer meta - designer Figure 2 : Beyond Binary Choices — The Consumer / Designer Spectrum In thinking about the role of new media and new technologies for the future , the consumer asks : “Is a new future coming ? ” whereas the designer asks : “How can we invent and create a new future ? ” The designer understands that the future is not out there to be “discovered” ( like Columbus discovered America ) —but i t has to be invented and designed . Accepting this will raise the issue : who will design the future ? I claim that ( 1 ) social scientists ( interested in understanding new media ) should not be content with either assessing or evaluating new media which others have designed , and that ( 2 ) the HCI community should not restrict its efforts to user interfaces or the computer part of HCI confining itself to focus solely on some technical issues in the context of a world defined by others . Based on the great benefits derived from the division of labor [ Campbell , 1969 ; Florida , 2002 ] professional designers play an important role in our society . The “average” person does not want to build her / his own house , design her / his own car , or write her / his own software system or sorting routine , and therefore is glad to delegate such tasks to domain designers . Likewise , most people do not have the time to participate equally in all aspects of the political system in order to become fully engaged and informed , and therefore rely on intermediaries who act in their interests . The situation is only problematic when ( 1 ) someone wants to be a designer in personally meaningful activities but is forced to be a consumer ; and ( 2 ) someone wants to be a consumer in personally irrelevant activities but is forced to be a designer . Table 1 : Comparing Consumer and Designer Roles consumer designer activity use , listen , surf ; access existing information ; acquire prerequisites for engaging in design activities modify , create , make your own waves ; informed participation learning effort small large depth of understanding shallow deep engagement normal substantial learning opportunities limited because no artifacts are created the “back - talk” and the “breakdowns” from the artifacts created lead to learning opportunities mismatch wanting to be a designer in personally relevant activities wanting to be a consumer in personally irrelevant activities rewards pleasure develop new skills , peer recognition , social capital Gerhard Fischer 8 FirstMonday Submission For example : I personally prefer to be a consumer with respect to technology that I use only occasionally such as cellular phones , car radios , VCRs , and voice mail . Each of these systems comes with hundreds of pages of documentation , including extensive customization features and for which I do not have the interest nor the time to understand , learn , and remember . My interest to act as designer is very different for core technologies that I use on a daily basis for personally meaningful and important tasks such as writing papers , developing presentations , and communicating with others . Table 1 summarizes consumer and designer roles according to some of the criteria discussed . A critical challenge addressed by our research is to support a migration path [ Burton et al . , 1984 ] between the different roles mentioned in Figure 2 : consumers , power - users , and designers are nurtured and educated , not born , and people must be supported to assume these roles . This is a social as well a technical challenge that underlies many of the core ideas of this paper . 3 Implications of a Designer Perspective Whereas computer scientists find computers intrinsically interesting and like computers because they get to program , skilled domain workers regard computers as useful , sometimes even indispensable machines capable of helping them work on their problems more productively , creatively , and with greater pleasure [ Landauer , 1995 ; Nardi , 1993 ] . Skilled domain workers are not novices or naive users , particularly with respect to domain concepts . They are people who have computational needs , who want and need to be designers in personally meaningful tasks . They make serious use of computers in their work , but they are not interested in becoming professional computer scientists . They are skilled and knowledgeable in their respective domains ; they use computers by choice and over extended periods of time . To understand their use of computers requires a new orientation for many current HCI efforts . Rather than focusing exclusively on short - term , tool - oriented events HCI must also investigate activities that extend over days , months , and years such as educational , social , and organizational needs [ Carroll , 1993 ] . Traditional HCI efforts have focused on evaluating the user interface aspects of tools , rather than their applicability to the problem domain . 3 . 1 Informed Participation “If you don ' t participate , then your voice won ' t be heard” — a participant in a planning session of a neighborhood transportation system Informed participation is a form of collaborative design in which participants from all walks of life—not just skilled computer professionals—are empowered to incrementally acquire ownership in problems and to contribute actively to their solutions [ Brown et al . , 1994 ; Fischer & Ostwald , 2002 ] . Informed participation attempts to address the open - ended and multidisciplinary design problems that are most pressing in our society . These problems , which typically involve a combination of social and technological issues [ Greenbaum & Kyng , 1991 ] , do not have “right” answers , and the knowledge to understand and resolve them changes rapidly , thus requiring an ongoing and evolutionary approach to problem solving . Informed participation involves communities of interest [ Fischer , 2001 ] made up of people from different communities of practice [ Wenger , 1998 ] , each having a unique stake in a common problem . Stakeholders are engaged in both learning and contributing activities . New knowledge is constructed when learning and contributing feed each other , ultimately producing a greater shared understanding than could be achieved by each of the participants on their own [ Resnick et al . , 1991 ] . Informed participation emphasizes mutual learning for sharing the unique knowledge that each stakeholder brings to a design problem , and evolution - based design approaches , in which problem framing and problem solving are intertwined [ Schön , 1983 ] . Another key emphasis of informed participation is to leverage prior and related design efforts as a source of problem - solving knowledge . While no two problems are exactly the same , similar problems can provide valuable insights that help to understand the problem at hand . Informed participation is impossible in communities in which most of the members regard themselves as consumers . Individuals within communities must be encouraged to evolve into power - users [ Nardi , 1993 ] who Gerhard Fischer 9 FirstMonday Submission not only use artifacts and information , but also modify and extend them [ Mackay , 1990 ] . Individuals ( acting as designers ) must acquire a new mindset—they are no longer passive receivers of knowledge , but need to be active researchers , constructors , and communicators of knowledge . Knowledge is no longer handed down from above ( either from specialists in design , from managers in organizations , or from teachers in courses ) , but is constructed collaboratively in the context of design . Figure 3 characterizes the duality and the distributed nature of knowledge : a specific user can learn ( specifically : learn in context and on demand ) from a computational environment containing knowledge and tools contributed by many stakeholders , but if these users considers themselves designers , they will also contribute to the environment ( assuming mechanisms are available that allow them to do so with a reasonable effort ) . This perspective illustrates the concepts and need for co - adaptive systems : ( 1 ) users learn from the systems [ Fischer , 1991 ] , ( 2 ) users act as innovators , co - developers and designers who adapt and evolve the systems [ Lieberman , 2001 ; Oppermann , 1994 ] , and ( 3 ) support for collaborative learning allows users to share these adaptations with others [ Fischer , 2001 ] . End - User Modifiability , End - User Programming Learning on Demand Figure 3 : Duality between Learning and Contributing Informed participation is based on the fundamental claim mentioned before ( see section 2 . 2 ) that one of the major roles of new media is to provide the opportunity and resources for social debate and discussion , rather than to merely provide access to predigested information . We cannot really be informed unless we participate ; and we cannot really participate unless we are informed . By supporting informed participation effectively , we address the fundamental challenge of how to invent and design a culture in which a l l participants in collaborative design processes can express themselves and engage in personally meaningful activities . 3 . 2 Meta - Design Meta - design [ Fischer & Scharff , 2000 ] is a methodology that characterizes objectives , techniques , and processes for creating new media and environments that allow stakeholders to act as designers and contribute to and benefit from the creativity of the group . A fundamental objective of meta - design is to create socio - technical environments that will help all learners and workers to be creative by allowing them to go beyond the explicitly described functionality of any artifact , to use it in new ways , to evolve it , and to explore its potential for new processes . Empirical findings [ Fischer et al . , 2001 ; Henderson & Kyng , 1991 ] provide rationale for the following meta - design requirements : • Software systems must evolve ; they cannot be completely designed prior to use . Design is a process that intertwines problem solving and problem framing [ Rittel , 1984 ] . Software users and designers will not fully determine a system’s desired functionality until that system is put to use , and then its evolution will continue with sustained use . Gerhard Fischer 10 FirstMonday Submission • Software systems must evolve at the hands of the users . End users experience a system’s deficiencies ; consequently , they have to play an important role in driving its evolution . Software systems need to contain mechanisms that allow end - user modification of system functionality [ Repenning , 1994 ] . • Software systems must be designed for evolution . Through our previous research in software design , we have discovered that systems need to be designed a priori for evolution [ Girgensohn , 1992 ] . Software architectures need to be developed for software that is designed to evolve [ Eisenberg & Fischer , 1994 ] . This is not only true for software , but for other artifacts as well , such as buildings [ Brand , 1995 ] . Brand argues : “ Almost no buildings adapt well . They’re designed not to adapt ; also budgeted and financed not to , constructed not to , administered not to , maintained not to , regulated and taxed not to , even remodeled not to . But all buildings ( except monuments ) adapt anyway , however poorly , because t h e usages in and around them are changing constantly” . Figure 4 differentiates between design and use stages of an artifact . At design time , system developers by engaging in participatory design processes with users ( or their representatives ) create environments and tools . In conventional design approaches they create complete systems and make decisions for users for situational contexts and for tasks that they can only anticipate . In meta - design approaches they “underdesign” systems [ Brand , 1995 ; Brown & Duguid , 2000 ] so that unexpected uses of the artifact at use time can be accommodated by stakeholders . Underdesign is not less work and it is not less demanding , but it is different : it does create solutions , but it creates environments in which “owners of problems” in situated settings can create solutions themselves . Figure 4 : Design and Use Time Meta - design takes place at design time and is focused on the design of 1 . the technical infrastructure providing mechanisms , such as end - user modifiability and end - user programming , that allow stakeholders to evolve the system at use time ; 2 . a learning environment and work organization that allows stakeholders to migrate from passive consumers to end - users , users , and power users ( see Figure 2 ) ; and 3 . the socio - technical environment in which stakeholders are recognized and rewarded by their contribution and can accumulate social capital ( see section 6 . 3 . and [ Florida , 2002 ; Putnam , 2000 ] ) . Meta - design extends the traditional notion of system design beyond the original development of a system to include an ongoing process in which the stakeholders of the system become co - developers . For example , meta - design concepts embedded in Microsoft Word include : ( 1 ) users can tailor the system by setting different parameters as their personal preferences ; ( 2 ) they can not only use spelling correctors , but they can extend the spelling dictionaries ; ( 3 ) they can write macros to create new operations ; and ( 4 ) they can create programs in VisualBasic to extend the functionality of the system . The goal of making systems extensible by users does not imply transferring the responsibility of good system design to the user . Normal users will in general not build tools of the quality a professional designer would . In fact , they are not concerned with the tool , per se , but in doing their work . However , if the tool does not satisfy the needs or the tastes of the users ( which they know best ) then users should be able to adapt the system Gerhard Fischer 11 FirstMonday Submission without always requiring the assistance of developers . Gantt and Nardi [ Gantt & Nardi , 1992 ] describe the emergence of “power users” and “local developers” who are technically inclined to perform system modifications that other end - users are not inclined to perform . Extensible systems , together with power users who can perform modifications , enable a process of co - adaptivity between users and system [ Mackay , 1990 ] . Users learn to operate a system and adapt to its functionality , and systems are modified to adapt to the practices of its users . Some of the meta - design principles that we have explored in our own work are : • support for the seeding , evolutionary growth , and reseeding model , a process model for systems that evolve as they are used ( see section 3 . 3 ) ; • domain - oriented design environments that take advantage of existing user knowledge and make the functionality of the system transparent and accessible so that the computational drudgery required of the user can be substantially reduced ( see section 4 . 1 ) ; and • innovative interaction techniques as supported by the Envisionment and Discovery Collaboratory ( see section 4 . 2 ) and living computational memories ( see section 4 . 3 ) . The key challenge for meta - design is the extent to which users can understand a system , learn it , and make changes . Meta - design must include design for coping with novelty , design for improvisation , and design for adaptation . Making a system extensible introduces additional costs during system development . 3 . 3 The Seeding , Evolutionary Growth , and Reseeding Model Despite the best efforts at design time , systems need to evolve at use time to fit new needs , account for changing tasks , and incorporate new technologies . Designing systems as open , evolving environments is therefore not an option , but a necessity . The seeding , evolutionary growth , and reseeding ( SER ) model [ Fischer et al . , 2001 ] is a descriptive and prescriptive process model for evolving complex environments . It postulates that systems that evolve over a sustained time span must continually alternate between periods of activity and unplanned evolution , and periods of deliberate ( re ) structuring and enhancement . The SER model is based on the observation that design problems in the real world require open systems that users can modify and evolve ( see Figure 4 ) . The SER methodology ( by creating a seed instead of a complete system ) honors emergent behavior and it explores interesting new ground between the two extremes of “put - all - the - knowledge - in - at - the - beginning” and “just - provide - an - empty - framework ” [ Fischer et al . , 2001 ] . The SER model ( see Figure 5 ) encourages system designers to conceptualize their activity as meta - design ( see section 3 . 2 ) thereby aiming to support users as designers in their own right , rather than as passive consumers of systems and information . Users are seen as informed participants [ Arias et al . , 1999 ; Drucker , 1994 ] who frame and design solutions to problems , as well as designers in use [ Henderson & Kyng , 1991 ] who modify and extend their systems as needed to suit their purposes . Figure 5 : The Seeding , Evolutionary Growth , Reseeding Process Model Gerhard Fischer 12 FirstMonday Submission We have explored the feasibility and usefulness of the SER model in the development of domain - oriented design environments , organizational memories , courses – as - seeds and course information environments in education , and open systems approaches . The evolutions of these systems share common elements , all of which relate to sustained knowledge use and construction in support of informed participation . Seeding . System design methodologies of the past were focused on the objective to build complex information systems as “complete” artifacts through the large efforts of a small number of people . Conversely , instead of attempting to build complete and closed systems , the SER model advocates building seeds that can be evolved over time through the small contributions of a large number of people . A seed is an initial collection of domain knowledge that is designed to evolve at use time . It is created by environment developers and future users to be as complete as possible . However , no information repository can be truly complete due to the situated and tacit nature of knowledge as well as the constant changes occurring in the environment in which the system is embedded [ Suchman , 1987 ; Winograd & Flores , 1986 ] . No absolute requirements exist for the completeness , correctness , or specificity of the information in the seed , but the shortcomings and breakdowns often provoke users to add new information to the seed . Evolutionary Growth . The evolutionary growth phase is one of decentralized evolution as the seed is used and extended to do work or explore a problem . In this phase , developers are not directly involved because the focus is on problem framing and problem solving . Instead , the participants have a direct stake in the problem at hand and are designing solutions to problems . During the evolutionary growth phase , the information repository plays two roles simultaneously : ( 1 ) i t provides resources for work ( information that has been accumulated from prior use ) , and ( 2 ) it accumulates the products of work , as each project contributes new information to the seed . During the evolutionary growth phase , users focus on solving a specific problem and creating problem - specific information rather than on creating reusable information . As a result , the information added during this phase may not be well integrated with the rest of the information in the seed . Reseeding . Reseeding is a deliberate and centralized effort to organize , formalize , and generalize information and artifacts created during the evolutionary growth phase [ Shipman & McCall , 1994 ] . The goal of reseeding is to create an information repository in which useful information can be found , reused , and extended . As in the seeding phase , developers are needed to perform substantial system and information space modifications , but users must also participate because only they can judge what information is useful and what structures will serve their work practices . Reseeding is necessary when evolutionary growth no longer proceeds smoothly . It is an opportunity to assess the information created in the context of specific projects and activities , and to decide what should be incorporated into a new seed to support the next cycle of evolutionary growth and reseeding . For example , open source software systems [ Raymond & Young , 2001 ] often evolve for some time by adding patches , but eventually a new major version must be created that incorporates the patches in a coherent fashion . The SER model is motivated by how large software systems , such as Emacs , Unix , MS - Word , and MS - Office have evolved over time . In such systems , users develop new techniques and extend the functionality of the system to solve problems that were not anticipated by the systems’ developers ( following the observation that any artifact should be useful in the expected way , but a truly great artifact lends itself to uses t h e original designers never expected ) . Whereas the people in the above - mentioned development environments are computationally sophisticated and experienced users , our focus has been on collaborative design in which original environments need to be extended by domain designers ( end - users with respect to computational media ) who are neither interested in nor trained in the ( low - level ) details of computational environments . Domain designers are more interested in their design task at hand than in maintaining and evolving knowledge repositories per se . At the same time , important knowledge is produced during daily design activities that should be captured . Rather than expect designers to spend extra time and effort to evolve the memory as they design , we provide tools to help them record information quickly and without detailed regard for how the information should be integrated with the seed . Periodically performed reseeding as a collaborative activity between environment developers and Gerhard Fischer 13 FirstMonday Submission domain designers integrates , restructures , and reorganizes the information accumulated during the evolutionary growth phase . 4 Technology and Media Support for Designer Roles This section illustrates the conceptual framework articulated in the previous section with specific developments in our research center . It discusses specifically some of the unique abilities of each environment with respect to the consumer / designer roles describing the following examples : • Domain - Oriented Design Environments ( DODEs ) helping users to interact in their world and making information available on demand ; • Envisionment and Discovery Collaboratory ( EDC ) empowering stakeholders to articulate their knowledge and supporting informed participation in face - to - face environments ; • Living Computational Memories managing externalizations thereby sustaining community and providing support for the SER model . Conviviality ( see section 2 . 2 ) is a dimension that sets computers apart from other communication and information technologies ( e . g . , television ) that are passive and cannot conform to the users ' own tastes and tasks . Passive technologies offer some selective power , but they cannot be extended in ways that the designer of those systems did not directly foresee . Unfortunately , the potential for conviviality exists in many current computer systems only in principle . Many users perceive computer systems as unfriendly , uncooperative , and their use as too time consuming ; they spend more time fighting the computer than solving their problems . Many users depend on specialists ( “high - tech scribes” ) for help , and despite the fact that they deal with “soft” ware , they do not experience software as “soft” ( i . e . , the behavior of a system cannot be changed without reprogramming it substantially ) . Figure 6 classifies media along the consumer / designer spectrum . Broadcast media , like television and magazines , draw strict boundaries between producers of information and consumers , thereby limiting the opportunity for collaborative interaction . Though these strict boundaries are appropriate for some media in some contexts , they may be very counterproductive and inhibit any creative behavior in other settings . There is a fundamental difference between printed and computational media : in print media , a fixed context is created at design time whereas computational media have the potential that context , form , and behavior at use time can take advantage of contextual factors known only at use time ( see Figure 4 ) . The technical challenge is to allow users to articulate some contextual factors ( leading to adaptable systems ) or to let the systems infer some of them ( leading to adaptive systems ) [ Fischer , 1993 ; Oppermann , 1994 ] . Consumer < - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - > Designer TV Print Media Current Computational Media Envisioned Computational Media Figure 6 : Technology and Media Support for Consumer and Designer Roles 4 . 1 Domain - Oriented Design Environments If the most important role for computation is to provide people with a powerful medium for expression ( in which they choose a specific role along the consumer / designer spectrum ; see Figure 2 ) , then the medium should support them in working on the task , rather than require them to focus their intellectual resources on the medium itself . When users suffer from a tool mastery burden , their tasks fade to the background while Gerhard Fischer 14 FirstMonday Submission effort is put toward mastering the tool . To bring tasks to the forefront , computers must become “invisible” [ Norman , 1998 ] allowing users put the majority of their efforts toward interacting with the problem domain , rather than the computer . Domain Oriented Design Environments ( DODEs ) [ Fischer , 1994 ] are computational systems that support human problem domain interaction ( see Figure 8 ) rather than just human computer interaction . The central theoretical vision of DODEs is to provide contextualized support for reflection - in - action [ Schön , 1983 ] in design activities . DODEs combine an action space with a reflection - space , linked by components such as critics and argumentation illustrator . Figure 7 : A Domain - Oriented Design Environment for Computer Network Design Figure 7 shows a DODE for the domain of computer network design . It illustrates the major components ( the numbers refers to the numbered panes in the figure ) : 1 . an argumentation component ( serving as the reflection space ) ; 2 . a palette of building blocks ( supporting design by composition ) ; 3 . a workspace in which a new artifact can be created ; 4 . a specification component ( allowing designers to specify priorities ) ; and 5 . a catalog of existing artifacts ( supporting design by modification ) . Gerhard Fischer 15 FirstMonday Submission Not shown in the screen image are the critiquing component that increases the “back - talk” of the design situation [ Schön , 1983 ] by taking advantage of contextual factors known only at use time , and a simulation component that computes the consequences of specific assumptions . DODEs achieve external simplicity with internal complexity . Figure 8 illustrates how the external simplicity is achieved : users ( being skilled domain workers in some specific domain ) have to bridge only a short conceptual distance from the problems in their respective domain to the design environments for their respective domain . This is very different from conventional computational environments where all problems had to be described in the semantics of the computer or in a general purpose programming language . Problem Domains Design Environments Assembly Languages Programming Languages Computer User CompilerDeveloper EnvironmentDeveloper DomainDesigner Figure 8 : A Layered Architecture Supporting Human Problem Domain Interaction DODEs have provided a framework for our research about computational support for design by supporting the development of : • a software architecture ( integrating the components mentioned above ) [ Fischer , 1994 ] ; • substrates with which these components can be developed [ Ostwald , 2001 ; Repenning , 2001 ] ; and • the SER process model ( see section 3 . 3 ) describing how to build , use , and evolve ( 1 ) the general DODE architecture , ( 2 ) specific domain - oriented DODEs , and ( 3 ) the individual artifacts developed within a DODE . 4 . 2 Envisionment and Discovery Collaboratory DODEs were built during the 1990s , using the computational environments available at the time : personal workstations . Over time , we became aware of some of the limitations of DODES , such as requiring large efforts by a few , and providing insufficient support for collaborative design . With new technologies emerging ( Smartboards , personal digital assistants , intelligent building blocks , ubiquitous environment , augmented reality ) , we started to develop the Envisionment and Discovery Collaboratory ( EDC ) [ Arias et al . , 2000 ] , which can be considered a second generation DODE . The EDC helps people to articulate their knowledge and communicate with others thereby supporting informed participation . By gathering in face - to - face meetings around a computationally enhanced Smartboard , the EDC provides an environment in which users can express their views , learn other views , and coordinate their views . As an engaging forum , the EDC motivates participation , and gives problem owners a voice in framing and solving problems . Figure 9 illustrates one version of the EDC supported by Smartboards . Gerhard Fischer 16 FirstMonday Submission Figure 9 : The Envisionment and Discovery Collaboratory The EDC is an explicit attempt to create an open system ( following the process of the SER model ) to address some of the shortcomings of closed systems . Closed systems ( in which the essential functionality is anticipated and designed at design time ; see Figure 4 ) are inadequate to cope with the tacit nature of knowledge and the situatedness of real - world problems . In our research we have carefully analyzed why simulation environments such as SimCity [ Maxis , 2000 ] are not be used for real planning and working environments . SimCity supports some superficial kinds of modifications ( such as changing the appearance of buildings in the city ) , but most functional aspects of the simulation environment have been determined at the original design time . For example , the only way to reduce crime in a simulated city is to add more police stations . It is impossible to explore other solutions , such as increasing social services . Because the functionality of the system was fixed when the system was created , exploring concepts that were not conceived by the system designers is difficult . Because of its closed nature , SimCity may be a good tool for passive education or entertainment , but it is inadequate for actual city planning tasks as our empirical investigations have demonstrated [ Arias et al . , 2000 ] . One vision that drives the EDC is to create an end - user extensible version of Simcity . In the version of the EDC shown in Figure 9 , only one user can interact with the game board at a time . This is due to limitations in the SmartBoard technology and has limited the ability of users to engage in informed participation when gathered around the table . Based on the conceptual framework outlined in this paper and on assessments which identified limitations of the SmartBoard technology ( such as : no support for simultaneous actions , moded interactions , lack of computationally enhanced physical building blocks ) , we are exploring new environments using more sophisticated technology that will make it easier for users to act as designers and active contributors . Using a DGT Electronic Chessboard [ Eden , 2002 ] , we have created an initial version of a new game board called the Participate - in - the - Action Board ( PitA - Board ) . The underlying technology consists of an 8 - by - 8 grid that can sense the location and identity of 15 distinct transducers . By using multiple grids assembled in tandem , we will be able to create versions that are of a more appropriate size for small groups of users . In Figure 10 , users interact in parallel with an experimental PitA - Board prototype that supports ( 1 ) parallel interactions , rather than single - threads of interaction ; ( 2 ) multiple “points of control” to allow the association of various “modes” with various physical objects in the system ; and ( 3 ) direct sensing of objects placed upon the board . Gerhard Fischer 17 FirstMonday Submission Figure 10 : The Participate - in - the - Action ( PiTa Board ) The combination of these affordances [ Norman , 1993 ] allows multiple users to interact with the virtual environment directly and simultaneously leads to more engaging forms of interaction . Because our interface objects behave more like the domain objects they represent , they support human problem domain interaction by “making the computer invisible” ( see Figure 8 ) . In future research , we will investigate in more detail whether these more direct associations provide an interface that is more accessible to naïve users and provides a medium that supports a more natural interaction with the underlying simulation medium [ Eden , 2002 ] . 4 . 3 Living Computational Memories Living computational memories [ Terveen et al . , 1995 ] manage the information content of evolving systems discussed in this article . They can stand alone , but they can also serve as components in DODEs and the EDC . Living computational repositories developed with the SER model can overcome the fundamental limitations which closed systems will have when applied to real world problems . We have investigated living computational memories in a variety of different settings , including : ( 1 ) argumentation spaces in DODEs and the EDC ( see sections 4 . 1 and 4 . 2 ) ; ( 2 ) conceptual spaces ( glossaries ) associated with the work of research groups [ Fischer & Ostwald , 2001 ] ; ( 3 ) course information environments for courses taught in universities [ dePaula et al . , 2001 ] ; and ( 4 ) organizational memories supporting knowledge management [ Fischer & Ostwald , 2001 ] . To support users as effectively as possible , we have designed and implemented a number of different substrates including Swikis [ Guzdial & Jocken , 2001 ; Scharff , 2002 ] , Dynasite [ Ostwald , 2001 ] , and livingOM [ Ostwald , 2002 ] . Design cultures in which people engage in informed participation lead to new forms of knowledge creation , integration , and dissemination [ Fischer & Ostwald , 2001 ] ( as further discussed in section 5 . 2 ) . A principal challenge of informed participation is to capture a significant portion of the knowledge generated by work done within a community . Experiences with organizational memories and collaborative work have exposed two barriers to capturing information : ( 1 ) individuals must perceive a direct benefit in contributing to organizational memory that is large enough to outweigh the effort [ Grudin , 1994 ] ; and ( 2 ) the effort required to contribute to organizational memory must be minimal so it will not interfere with getting the real work done [ Carroll & Rosson , 1987 ] . Gerhard Fischer 18 FirstMonday Submission Externalizations [ Bruner , 1996 ] ( created for example by the stakeholders in a problem framing and solving session supported by the EDC ; see Figure 9 ) have the following essential roles to support informed participation in a designer culture : • they assist in the translation of vague mental conceptualizations of ideas into more concrete representations . They require the expression of ideas in an explicit form , and in this process , as well as the end result , may reveal ideas and assumptions that beforehand were only tacit [ Polanyi , 1966 ] ; • they provide a means for stakeholders to interact with , react to , negotiate around , and build upon ideas . Such a “conversation with the materials” of the design problem [ Schön , 1983 ] is a crucial mode of design that can inspire new and creative ideas ; and • they focus discussions upon relevant aspects of the framing and understanding of the problem being studied , thereby providing a concrete grounding and a common language among stakeholders . Living computational memories serve a member community but they are also ( at least partially ) open to “outsiders” . They must serve the spectrum of users , and support migration among different roles rather than pigeon - hole users in whatever role . The different consumer / designer roles ( see Figure 2 ) in the context of living computational memories are : • Consumers — come from outside of the member community visiting the memory but they do not use it as part of their day - to - day activities ; this group includes passive consumers who merely view contents and active consumers who might add a comment or sign a guest book . • Users — are the members of the community , who use the memory in their day - to - day activities . They contribute to the memory , but not all contribute on the same level : ( 1 ) end - users add content to the memory ( for example , they maintain their personal page and contribute their work to the system , as well as commenting on the work of others ) ; ( 2 ) power - users add contents to the memories just as end - users do , but in addition they are interested ( or become interested over time ) in how the system works and how they can modify it . Power users can emerge either coming from the user community ( learning over time more technical knowledge ) or from the developer community ( learning over time more application knowledge ) . Either way , they have a mix of knowledge that includes eventually both domain knowledge and tool knowledge . • Developers — are specialists in the technical aspects of the memories and the underlying implementation details . Developers in general have limited knowledge about the users’ domain . They have the technical knowledge to make major changes to the system , but must rely on users to know what changes to make . • Meta - designers — are developers who are concerned to create the social and technical context that will enable users to be active and creative and they create mechanisms that will put owners of problems in charge . They must know about both the application domain and technology in depth . They are responsible to design basic schema and mechanisms that are implemented by the developer , extended by the power - user , customized by the end - user , and accessed by the consumer . 5 The Ubiquity of the Consumer / Designer Spectrum The previous section illustrated the conceptual framework articulated in section 3 of the consumer / designer distinction with specific developments in our research center . The consumer / designer distinction provides important requirements for these developments and at the same time , these developments help to deepen our understanding of the consumer / designer perspective . This section briefly discusses the consumer / designer perspective as a fundamental aspect of human behavior in three specific different application domains : ( 1 ) architecture , ( 2 ) open source , and ( 3 ) learning and education . Gerhard Fischer 19 FirstMonday Submission 5 . 1 Architecture Architecture has served as the prime example for the argument of many design methodologists ( e . g . , [ Rittel , 1984 ; Schön , 1983 ] who demonstrate with their work that the design of complex systems requires the integration of problem framing and problem solving . New requirements emerge during development because they cannot be identified until portions of the system have been designed and implemented . The conceptual structures underlying complex systems are too complicated to be specified accurately in advance and too complex to be built faultlessly . Problem framing and problem solving have to co - evolve requiring the owners of the problems to be present in the development . The attempt to build complete systems at design time ( see Figure 4 ) implies that all the design intelligence gets forced to the earliest part of the building process , when everyone knows the least about what is really needed [ Brand , 1995 ] . Without customizability and extensibility built into the initial design , users have no possibility to react to breakdowns [ Fischer , 1994 ] . Alexander calls a design culture in which owners of problems can react to breakdown unselfconscious [ Alexander , 1964 ] . The strength of an unselfconscious culture of design is that the actual use context is known at the time when breakdowns occur rather than anticipated at design time . Architecture also serves as a good example domain to understand the pitfalls associated with evolutionary design . The Oregon Experiment [ Alexander et al . , 1975 ] ( a housing experiment at the University of Oregon instantiating the concept of end - user - driven evolution ) serves as an interesting case study that end - user - driven evolution is no guarantee for success . The analysis of its limited success indicated two major reasons : ( 1 ) there was a lack of continuity over time , and ( 2 ) professional developers and users did not collaborate , so there was a lack of synergy . These findings have led us in part to postulate the need for a reseeding phase ( making evolutionary development more sustainable ) , in which developers and users engage in intense collaborations possibly redirecting the direction of the evolutionary growth . With design rationale captured , communication enhanced , and end - user modifiability supported , developers have a rich source of information to evolve the system in the way users really need it . 5 . 2 Open Source : A Success Model of Collaborative Design in a Designer Culture “Linux was the first project to make a conscious and successful effort to use the entire world as a talent pool” — Raymond , E . S . & Young , B . ( 2001 ) Open source development [ Raymond & Young , 2001 ] is an activity where a community of software developers collaboratively constructs systems to help solve problems of shared interest and for mutual benefit . Understanding open source as a process of collaborative design [ Scharff , 2002 ] highlights the socio - technical aspects of open source software where the participation of a community is vital to its success , and where the final product emerges out of the contributions of the entire community . Development in the open source community has been characterized by principles such as “ ( 1 ) in gift cultures , social status is determined not by what you control but by what you give away , ( 2 ) prestige is a good way to attract attention and cooperation from others , and ( 3 ) utilization is the sincerest form of flattery . ” Powerful tools and environments such as the Linux operating system and the Apache Web server have become both useful and reliable because of the evolutionary contributions of a large community of motivated developers . They provide an interesting existence proof that reliable , useful , and complex systems can be built in a decentralized “Bazaar style” by many rather than in a centralized , “Cathedral style” by a few [ Resnick , 1994 ] . A defining characteristic of open source software is that the source code for that software can be obtained and modified by anyone who wishes to do so . The ability to change source code is an enabling condition for collaborative construction of software because it allows software developers to make changes to the behavior of the software . This changes software from a fixed entity that is produced and controlled by a closed group of designers to an open effort where a community can collaboratively design following the framework provided by the SER model ( see section 3 . 3 ) . Open source software provides technical and legal mechanisms allowing users who would otherwise be passive consumers to become active contributors . While this is a necessary condition , it is by no means a sufficient condition : beyond having the technical skill to change the software , Gerhard Fischer 20 FirstMonday Submission engaging in modification requires the time , inclination , and motivation to do so . Using open source as a success model for collaborative design [ Scharff , 2002 ] , we have identified the following principles : 1 . making changes must seem possible : users should not be intimidated and should not have the impressions that they are incapable of making changes ; the more users become convinced that changes are not as hard as they think they are , the more they may be willing to participate ; 2 . changes must be technically feasible : if a system is closed , then users cannot make any changes ; as a necessary prerequisite , there needs to be possibilities for extension ( created by a meta - design methodology , see section 3 . 2 ) ; 3 . benefits must be perceived : contributors have to believe that what they get in return justifies the investment they make . The benefits perceived may vary and can include : professional benefits ( helping for one’s own work ) , social benefits ( increased status in a community , possibilities for jobs ) , and personal benefits ( engaging in fun activities ) ; 4 . open source environments must support tasks that people engage in : the best open source system will not succeed if it is focused on activities that people do rarely or consider of marginal value ; and 5 . low barriers must exist to sharing changes : if sharing is awkward , it creates an unnecessary burden that participants may feel unwilling to overcome . Evolutionary growth is greatly accelerated in systems in which participants can share changes and keep track of multiple versions easily . 5 . 3 Learning and Education Learning from breakdowns [ Fischer , 1994 ; Schön , 1983 ] is an effective way to learn by trying to do something and getting stuck . We can make mistakes only when we do something — not when we engage in passive observation . Learning by doing is in sharp contrast to one of the most frequently practiced but most impoverished paradigms of education ( based on the assumption that learners are consumers of knowledge ) : a setting where “ a single , all - knowing teacher tells or shows presumably unknowing learners something they presumably know nothing about” [ Bruner , 1996 ] . This model of education ( which is widely practiced in our educational institutions ) has led critics such as Illich [ Illich , 1971 ] to the claim that our schools and universities are the “reproductive organs of a consumer society” and “ people who are hooked on teaching are conditioned to be customers for everything else . ” As an alternative , we should reconceptualize and reinvent classrooms and work environments as places where ( 1 ) communities of mutual learners act simultaneously as learners and as active contributors , ( 2 ) peer - to - peer learning is supported and teachers act as “guides on the side” rather than as “sages on the stage” , and ( 3 ) where courses are considered as seeds rather than finished products [ dePaula et al . , 2001 ] . Such models of learning and education will require innovative computational environments that will share many of the requirements and challenges articulated in this article . The argument that consumerism is a mindset [ Fischer , 1999 ] implies that there is no evidence that a “big switch” theory will succeed , meaning that a student who was educated as a passive consumer will suddenly switch to being an active contributor . If the world of working and living requires a designer perspective ( by relying on collaboration , creativity , definition and framing of problems , dealing with uncertainty , change , and distributed cognition ) , then our schools and universities need to prepare learners to be designers rather than consumers to have meaningful and productive lives . The approach presented in this paper is in line with characterizations of post - tayloristic work environments [ Brown & Duguid , 2000 ] attempting to increase the creativity of their workers by finding new ways to conceptualize working and learning . Some of the key dimensions of this perspective are illustrated in Table 2 . Gerhard Fischer 21 FirstMonday Submission Table 2 : Traditional versus New Models of Working and Learning in Organizations traditional new paradigm knowledge transmission knowledge construction learning classroom , curriculum driven on demand , in context tasks system driven ( canonical ) user / task driven social structures individuals in hierarchical structures collaborative in flat structures work style standardize improvise information spaces closed , static open , dynamic breakdowns error to be avoided opportunity for innovation and learning communication top - down peer - to - peer Our work in courses with students over the years has provided some encouragement that there is interest among some of the students to act as designers . For example : in courses focused on integrating the web into their activities , we failed to entice students to spend a significant amount of time browsing the web . Although the students spent some time looking at suggested sites , they were not too interested in spending a lot of time browsing . They had little patience for technical problems like the network being slow , or down , and quickly become frustrated if they could not find the information they were seeking . This attitude changed significantly when the students started creating their own sites . We noticed that once they got over the initial learning curve for web authoring tools they were using , they had much more patience for the technology especially when they were able to see and could show to others the pages that they had created on the web . To support this migration path from consumer to designer [ Burton et al . , 1984 ] , it is important that the difficulty of getting students to learn enough of the technology to start creating their own sites is not underestimated . This is especially true for students with limited technical experience and interest ( who will stumble over file formats , HTML tags , and protection codes ) . The learning efforts and the design efforts need to be minimized by having powerful web authoring tools [ Guzdial & Jocken , 2001 ; Ostwald , 2002 ] and by shielding the students ( use scaffolding techniques and wizards ) from the added difficulties of setting up sites on servers . 6 Assessment The basic theme addressed by this article is to explore the fundamental challenge for computational media to contribute to the invention and design of cultures in which humans can express themselves and engage in personally meaningful activities . The system developments described in section 4 were driven by this and related objectives including : ( 1 ) how we can support skilled domain workers who are neither novices nor naive users , but who are interested in their work and who see the computer as a means rather than as an end ; and ( 2 ) how we can create co - adaptive environments , in which users change , because they learn , and in which systems change , because users become co - developers and active contributors . While environments developed within a meta - design framework and providing support for the SER model are necessary , they are not sufficient to create a designer culture . Claims made more than a decade ago such as “technology will become so flexible that users will be able to customize it ever - more precisely to meet their particular needs — a process that might be termed ‘mass customization’” based on “providing people with easy - to - use programming tools so they can customize the information systems and computer applications that they work with ” [ Brown , 1991 ] have at best been only partially a reality . This section will assess the claims and hopes from a number of different dimensions . Gerhard Fischer 22 FirstMonday Submission 6 . 1 Technology Assessment The computational environments described in this article were developed to give owners of problems a voice by simultaneously transcending the limitations of closed systems and honoring the knowledge of domain workers coming from different communities of practice . Their developments were driven by the hypothesis that many of the distinctions between designers and users should become blurred and that all humans can potentially become designers in case they find the tasks personally meaningful enough . As argued earlier , there is ample evidence that closed systems do not work , including the limitations of closed expert systems [ Winograd & Flores , 1986 ] , closed simulations such as Simcity [ Arias et al . , 2000 ] , and closed computational memories [ Fischer & Ostwald , 2001 ; Terveen et al . , 1995 ] . Because users experience breakdowns and insufficiencies of an environment in their work , they should be able to report , react to , and resolve those problems . Mechanisms which empower owners of problems to change , tailor , and modify their environments are a cornerstone of extensible and evolvable systems . At the core of our approach to evolutionary design lies the ability of owners of problems to make significant changes to system functionality , and to share those modifications within a community of designers . The types of changes that must occur during the evolutionary growth of a system go beyond the setting of predefined parameters or preferences and include the ability to alter system behavior in non - trivial ways . Lessons learned from our work show that in order to support the development of the designer culture needed to address the challenges of open systems , activities at design time and use time ( see Figure 4 ) need to be reconceptualized . The experience which we have gained with developing systems from a meta - design perspective has indicated that a substantial part of the system needs to be dedicated to components , structures , and mechanisms to support users acting as designers . The extensibility component of one of our domain - oriented design environments ( see section 4 . 1 ) contains more than 60 percent of the program code of the overall system [ Girgensohn , 1992 ] indicating that meta - design is a non - trivial task . Henderson and Kyng [ Henderson & Kyng , 1991 ] argue that design for extensibility is still advantageous because the resources saved in the initial development by ignoring extensibility will be spent several times over during the system ' s lifetime . Unless extensibility and evolvability are considered as a necessity rather than a luxury , the possibilities at use time will be limited and the efforts required too large . 6 . 2 Utility = Value / Effort “Humans want things as easy as possible for them . The reason we are a consumer society is because that’s what we want to be . ” — a student in one of our courses Building systems that supports users to act as designers and not just as consumers are often less successful than the meta - designers have hoped for . Environments inviting informed participation are created with many good intentions at design time but the participation and contributions that actually occur often do not live up to the expectations , a finding which can be characterized by “build it—and they will not come” [ Smith & Farquhar , 2000 ] . Analyses of these failures of adoption and sustained use of systems can be seen in many domains , including groupware applications , organizational memories , and knowledge management systems . The missing contributions can be attributed to many factors , including lack of institutional buy - in of proposed technologies , insufficient involvement of users during development ( ignoring principles of participatory design ) , and lack of attention to the dimensions discussed in this paper . We will analyze these barriers using the equation “utility = value / effort” meaning that people will decide on the worthiness of doing something ( utility ) by relating the ( perceived ) value of an activity to the ( perceived ) effort of doing it . In many design activities , the question to be asked is : “who puts in the effort ? ” , and there exists often an important trade - off : more effort at design time results in smaller efforts at use time . Major efforts at design time are needed to create DODEs and EDCs , to seed computational memories with substantial content , and to create the meta - design structures that will empower users at use time to engage in informed participation and greatly reduce their efforts . Value consideration at design time can lead to “better” systems that ( 1 ) more Gerhard Fischer 23 FirstMonday Submission people will buy ( economic incentive ) or ( 2 ) more people will use ( social capital ) . Value at use time is greatly influenced by allowing people to engage in personally meaningful tasks . People are willing to spend considerable efforts on things that are important to them and the value dimension for truly personal meaningful task will be more important than the effort dimension . Learning to drive an automobile is not an easy task , but almost all people learn it because they associate a high personal value with it . A mother who learns that her child is autistic is probably more motivated to join a social network of other caregivers as can be inferred from the following statement ( quoted in autism articles in Time Magazine , May 6 , 2002 ) : “When I stopped crying , I went to my office and called everyone I had ever met who was in any way connected to the world of special - need kids . We made a lot of mistakes before finding the perfect match for our child” . Despite small efforts to contribute to computational memories , we have found that people will not do it if they personally consider the value to be at best marginal . 6 . 3 Social Capital “I have better things to do with my life than write Word macros . ” — a researcher in our center Social capital ( e . g . , in the work of [ Putnam , 2000 ] ) means reciprocity — if you do something for someone , they are more likely to do something for you — and it is based on mutual respect and being a good citizen . The general decline in social capital in society observed by Putnam is attributable to several factors , but he argues one of them is that television and other mass media take too much of many people’s time . This will reduce people’s active pursuits leading to a shift from a “doing culture” to a “watching culture” [ Florida , 2002 ] ( and increase the number of “couch potatoes” in our societies ) . The designer culture envisioned in this paper relies on people who are willing to contribute because a problem or an activity is personally meaningful to them , and / or their contribution helps to come up with a better solution . The incentive for the contribution is rarely monetary . Recommmender systems [ Terveen & Hill , 2001 ] are a good example relying on this behavior : the recommenders get rewarded by recognition and feedback and the users will be satisfied if they receive recommendations that are relevant and interesting . Social capital is of critical importance to motivate people to share their individual contributions , modifications and extensions to evolving systems and computational memories with other users . A designer culture relies on active contributors who are knowledgeable in their respective fields . In computational environments they must also have the technical competence to articulate their knowledge . While these two aspects are necessary , they are not sufficient . People must be motivated and rewarded for investing time and effort to become knowledgeable enough to act as designers . These rewards may range from ( 1 ) feeling in control ( i . e . , independent from “high - tech scribes” ) , ( 2 ) being able to solve or contribute to the solution of a problem , ( 3 ) a passion to master a tool in greater depth , ( 4 ) an ego - satisfying contribution to a group , and ( 5 ) good citizenship in a community . A designer culture emphasizes the social character of working and learning “in which people act as resources for one another , rather just as one another’s information provider” [ Brown & Duguid , 2000 ] . In a design culture , skilled domain worker s will see providing additional information as part of their work rather than as an extra task . A first step in this direction is to identify and encourage members of the community who are interested and inclined to become power - users [ Nardi , 1993 ] . These users are more willing to learn new mechanisms and can assume a leadership role within the community . The emergence of such roles is another indication of community formation and is an essential aspect of social capital . The design of our systems ( see section 4 ) has been driven by the design objective that serious learning and active contributing ( see Figure 3 ) does not have to be unpleasant but can be personally meaningful , empowering , engaging , and fun . Gerhard Fischer 24 FirstMonday Submission 6 . 4 Trade - offs in a “Do - It - Yourself Society” “You ' re not going to make a Hollywood feature with iMovie , but you can make some pretty cool home movies from the holidays . “ — a researcher in our center This article advocates the desirability of a designer culture for tasks and activities that people consider personally meaningful , which they enjoy doing , and in which they want to be independent of high - tech scribes or . A “Do - It - Yourself Society” is often associated with these goals : creating your own artifacts instead of buying of - the - shelf products ( see Figure 1 ) . There has been another shift taking place , starting with self - service restaurants and self - service gas stations a few decades ago , and this trend has been greatly accelerated over the last 10 years . Through modern tools ( including electronic commerce supported by the Web ) , humans are empowered to do many tasks themselves that were done previously by skilled domain workers serving as agents and intermediaries [ Brown & Duguid , 2000 ] . While this shift provides power , freedom , and control to customers ( e . g . , banking can be done at any time of the day with ATMs , and from any location with the Web ) , it has lead also to some less desirable consequences . People may consider some of these tasks personally not very meaningful and therefore would be more than content with a consumer role . Aside from simple tasks that require a small or no learning effort , customers lack the experience the professionals have acquired and maintained through daily use of systems , and the broad background knowledge to do these tasks efficiently and effectively . The tools used to do these tasks — banking , travel reservations , buying airline tickets , checking out groceries at the supermarket — are core technologies for the professionals , but occasional technologies for the customers . This will put a new , substantial burden on customers rather than having skilled domain workers doing these tasks . 6 . 5 Mindsets This article is based on the hypotheses ( 1 ) that cultures are substantially defined by their media and their tools for thinking , working , learning , and collaborating , ( 2 ) that a large number of new media are designed to see humans only as consumers , and ( 3 ) that people , particularly young people in our educational institutions , form mindsets based on their exposure to specific media [ Fischer , 1999 ] . The current mindset about learning , teaching , and education is dominated by a view in which teaching is often fitted “into a mold in which a single , presumably omniscient teacher explicitly tells or shows presumably unknowing learners something they presumably know nothing about” [ Bruner , 1996 ] . A critical challenge is a reformulation and reconceptualization of this impoverished and misleading conception . Learning should not take place in a separate phase and in a separate place , but should be integrated into people’s lives allowing them to construct solutions to their own problems . As they experience breakdowns in doing so , they should be able to learn on demand by gaining access to directly relevant information . The direct usefulness of new knowledge for actual problem situations greatly improves the motivation to learn the new material because the time and effort invested in learning are immediately worthwhile for the task at hand — not merely for some putative long - term gain . As argued before ( see section 2 . 2 ) : to create designer mindsets , learning cannot be restricted to finding knowledge that is “out there” . Rather than serving as the “reproductive organ of a consumer society” [ Illich , 1971 ] , educational institutions must cultivate the development of a “designer mindset” by creating habits and tools that help people become empowered and willing to actively contribute to the design of their lives and communities . Beyond supporting contributions from individual designers , we need to find ways to build a culture and mindset of sharing , supported by effective technologies and sustained by personal motivation to occasionally work for the benefit of groups and communities . This includes finding ways for people to see work done for the benefits of others being " on - task " , rather than as extra work for which there is no recognition and no reward . If learning can become a new form of labor [ Zuboff , 1988 ] , then why can the same objective not be associated with sharing ? Gerhard Fischer 25 FirstMonday Submission 6 . 6 Cross - Cultural Perspectives I have written this paper coming from a specific cultural background : an embedding in European / American culture in which individualism may be more valued than collectivism [ John - Steiner , 2000 ] . There are other cultural backgrounds in which people feel more comfortable being guided by a sage ( i . e . , by listening to a teacher , by accepting the opinion articulated or the artifact created by an expert ) . There is growing evidence that many computational artifacts ( as they take more cultural themes into account in areas such as participatory design , computer - supported cooperative work , and computer - supported collaborative learning ) will require more than simple translation efforts when ideas and systems are moved across cultural boundaries . Some quotes from Chinese and Japanese students taking some of my courses at the University of Colorado , Boulder , provide evidence of these cultural differences : • “I have no designer experience in school education that I can remember . I was astonished by t h e heated arguments in the USA ' s classroom when I first took a course at CU . Sometimes students act a s teachers . They speak out their minds and opinions loudly . ” • “In China , students are taught to respect instructors , which is good , however , the students are only supposed to be listeners and followers , and students and instructors are never at the same level . Therefore , there ' s no way for students and instructors to be co - learners and co - designers . There ' s an old Chinese saying that youngsters should not point out elders ' faults . Teachers are superior . ” I believe that we all become more aware of our own cultures as we encounter , reflect and discuss different cultures—an effort that I would consider an important element of the “designer culture” articulated in this paper . 7 Conclusions Peter Drucker argued that “there is nothing so useless as doing efficiently that which should not be done at all . ” Adding new media and new technologies to existing practices will not change the consumer mindsets of learners and workers . We need to explore new computational media based on fundamental aspects of how we think , create , work , learn , and collaborate . It simply is not good enough to spend money on new technologies and then to use it in old ways . New tools should not only help people to do known cognitive tasks more easily , but they should lead to fundamental alterations in the way problems are solved . In a designer culture breakdowns will be seen as opportunities rather than as things to be avoided ; teachers will understand their roles not only as truth - tellers and oracles , but as coaches , facilitators , and mentors ; and knowledge will not be presented as a commodity to be acquired or delivered , but as a human struggle to understand and as a source to deal with personally meaningful problems . The future of how we live , think , create , work , learn , and collaborate is not out there to be “discovered”— it has to be invented and designed . This design should not be dominated or solely determined by technocrats or Hollywood , but requires the interdisciplinary collaboration among different social groups . It is of critical importance that the human and social sciences are not content with a spectator and Cassandra role in this process . Computational media offer the possibilities and the potential to allow people to express themselves and to create personally meaningful environments . These possibilities should not be accessible only to a small group of high - tech scribes , but should provide an opportunity for all interested individuals and groups . The socio - technical design of computational environments requires the social inclusion and active participation of the users as active contributors , rather than the more typical situation in which the designers are far removed from the daily tasks and activities of the people who use the environments . Computational media can have the same fundamental impact on our individual lives and our societies as reading and writing had to move us from oral to literal societies . The true contribution of computational media might be to allow all of us to take on , or incrementally grow into a designer role in areas that we consider personally meaningful and important so we do not mind additional efforts . Gerhard Fischer 26 FirstMonday Submission 8 Acknowledgments The author would like to thank the members of the Center for LifeLong Learning & Design ( L3D ) , who have made major contributions to the conceptual framework and systems described in this paper . A special thank you goes to : ( 1 ) Jonathan Ostwald who has helped me to create many of the illustrations used in the paper and who has provided critical feedback to an earlier version , ( 2 ) Ernie Arias and Hal Eden who are the major developers of the Envisionment and Discovery Collaboratory , and ( 3 ) to Eric Scharff and Yunwen Ye who collaborated with me on themes focused on social capital , open source communities and software reuse . Blair McMaster ( University of Canterbury , New Zealand ) provided valuable feedback on an earlier draft . The research described has benefited substantially from major initiatives at the University of Colorado at Boulder including : the Alliance for Technology , Learning and Society ; the Integrated Teaching and Learning Laboratory ; and the Discovery Learning Initiative . Details about these initiatives can be found at : http : / / www . colorado . edu / . The research was supported by ( 1 ) the National Science Foundation , Grants ( a ) REC - 0106976 “Social Creativity and Meta - Design in Lifelong Learning Communities” , and ( b ) CCR - 0204277 “A Social - Technical Approach to the Evolutionary Construction of Reusable Software Component Repositories” ; ( 2 ) SRA Key Technology Laboratory , Inc . , Tokyo , Japan ; and ( 3 ) the Coleman Initiative , San Jose , CA . 9 References Alexander , C . ( 1964 ) The Synthesis of Form , Harvard University Press , Cambridge , MA . Alexander , C . , Silverstein , M . , Angel , S . , Ishikawa , S . , & Abrams , D . ( 1975 ) The Oregon Experiment , Oxford University Press , New York . Arias , E . G . , Eden , H . , Fischer , G . , Gorman , A . , & Scharff , E . ( 1999 ) " Beyond Access : Informed Participation and Empowerment , " Proceedings of the Computer Supported Collaborative Learning ( CSCL ' 99 ) Conference , Stanford , pp . 20 - 32 . Arias , E . G . , Eden , H . , Fischer , G . , Gorman , A . , & Scharff , E . ( 2000 ) " Transcending the Individual Human Mind—Creating Shared Understanding through Collaborative Design , " ACM Transactions on Computer Human - Interaction , 7 ( 1 ) , pp . 84 - 113 . Brand , S . ( 1995 ) How Buildings Learn : What Happens After They ' re Built , Penguin Books , New York . Brown , J . S . ( 1991 ) " Research That Reinvents the Corporation , " Harvard Business Review , January - February 1991 , pp . 102 - 111 . Brown , J . S . , & Duguid , P . ( 2000 ) The Social Life of Information , Harvard Business School Press , Boston , MA . Brown , J . S . , Duguid , P . , & Haviland , S . ( 1994 ) " Toward Informed Participation : Six Scenarios in Search of Democracy in the Information Age , " The Aspen Institute Quarterly , 6 ( 4 ) , pp . 49 - 73 . Bruner , J . ( 1996 ) The Culture of Education , Harvard University Press , Cambridge , MA . Buchanan , B . G . , & Shortliffe , E . H . ( Eds . ) ( 1984 ) Rule - Based Expert Systems : The MYCIN Experiments of the Stanford Heuristic Programming Project , Addison - Wesley Publishing Company , Reading , MA . Burton , R . R . , Brown , J . S . , & Fischer , G . ( 1984 ) " Analysis of Skiing as a Success Model of Instruction : Manipulating the Learning Environment to Enhance Skill Acquisition . " In B . Rogoff , & J . Lave ( Eds . ) , Everyday Cognition : Its Development in Social Context , Harvard University Press , Cambridge , MA - London , pp . 139 - 150 . Campbell , D . T . ( 1969 ) " Ethnocentrism of Disciplines and the Fish - Scale Model of Omniscience . " In M . Sherif , & C . W . Sherif ( Eds . ) , Interdisciplinary Relationships in the Social Sciences , Aldine Publishing Company , Chicago , pp . 328 - 348 . Gerhard Fischer 27 FirstMonday Submission Carroll , J . M . ( 1993 ) " Creating a Design Science of Human - Computer Interaction , " Interacting with Computers , 5 ( 1 ) , pp . 3 - 12 . Carroll , J . M . , & Rosson , M . B . ( 1987 ) " Paradox of the Active User . " In J . M . Carroll ( Ed . ) , Interfacing Thought : Cognitive Aspects of Human - Computer Interaction , The MIT Press , Cambridge , MA , pp . 80 - 111 . Communications of the ACM ( 1996 ) Communications of the ACM Special Issue on ' Learner - Centered Design ' , 39 ( 4 ) . Csikszentmihalyi , M . ( 1990 ) Flow : The Psychology of Optimal Experience , HarperCollins Publishers , New York . dePaula , R . , Fischer , G . , & Ostwald , J . ( 2001 ) " Courses as Seeds : Expectations and Realities , " Proceedings of the Second European Conference on Computer - Supported Collaborative Learning ( Euro - CSCL ' 2001 ) , Maastricht , Netherlands , pp . 494 - 501 . Drucker , P . F . ( 1994 ) " The Age of Social Transformation , " The Atlantic Monthly ( November ) , pp . 53 - 80 . Eden , H . ( 2002 ) Conceptual and Technological Support for Social Creativity in Face - to - Face Collaboration , Ph . D . Dissertation ( forthcoming ) , University of Colorado at Boulder . Eden , H . ( 2002 ) " Getting in on the ( Inter ) Action : Exploring Affordances for Collaborative Learning in a Context of Informed Participation . " In G . Stahl ( Ed . ) , Proceedings of the Computer Supported Collaborative Learning ( CSCL ' 2002 ) Conference , Boulder , CO , p . ( in press ) . Eisenberg , M . , & Fischer , G . ( 1994 ) " Programmable Design Environments : Integrating End - User Programming with Domain - Oriented Assistance . " In Human Factors in Computing Systems , CHI ' 94 ( Boston , MA ) , ACM , New York , pp . 431 - 437 . Engelbart , D . C . , & English , W . K . ( 1968 ) " A Research Center for Augmenting Human Intellect . " In Proceedings of the AFIPS Fall Joint Computer Conference , The Thompson Book Company , Washington , DC , pp . 395 - 410 . Fischer , G . ( 1991 ) " Supporting Learning on Demand with Design Environments . " In L . Birnbaum ( Ed . ) , International Conference on the Learning Sciences ( Evanston , IL ) , Association for the Advancement of Computing in Education , pp . 165 - 172 . Fischer , G . ( 1993 ) " Shared Knowledge in Cooperative Problem - Solving Systems - Integrating Adaptive and Adaptable Components . " In M . Schneider - Hufschmidt , T . Kuehme , & U . Malinowski ( Eds . ) , Adaptive User Interfaces - Principles and Practice , Elsevier Science Publishers , Amsterdam , pp . 49 - 68 . Fischer , G . ( 1994 ) " Domain - Oriented Design Environments , " Automated Software Engineering , 1 ( 2 ) , pp . 177 - 203 . Fischer , G . ( 1994 ) " Turning Breakdowns into Opportunities for Creativity , " Knowledge - Based Systems , Special Issue on Creativity and Cognition , 7 ( 4 ) , pp . 221 - 232 . Fischer , G . ( 1999 ) " Lifelong Learning : Changing Mindsets . " In G . Cumming , T . Okamoto , & L . Gomez ( Eds . ) , 7th International Conference on Computers in Education on " New Human Abilities for the Networked Society " ( ICCE ' 99 , Chiba , Japan ) , IOS Press , Omaha , pp . 21 - 30 . Fischer , G . ( 2001 ) " Communities of Interest : Learning through the Interaction of Multiple Knowledge Systems , " 24th Annual Information Systems Research Seminar In Scandinavia ( IRIS ' 24 ) , Ulvik , Norway , pp . 1 - 14 . Fischer , G . , Grudin , J . , McCall , R . , Ostwald , J . , Redmiles , D . , Reeves , B . , & Shipman , F . ( 2001 ) " Seeding , Evolutionary Growth and Reseeding : The Incremental Development of Collaborative Design Environments . " In G . M . Olson , T . W . Malone , & J . B . Smith ( Eds . ) , Coordination Theory and Collaboration Technology , Lawrence Erlbaum Associates , Mahwah , NJ , pp . 447 - 472 . Gerhard Fischer 28 FirstMonday Submission Fischer , G . , & Nakakoji , K . ( 1992 ) " Beyond the Macho Approach of Artificial Intelligence : Empower Human Designers - Do Not Replace Them , " Knowledge - Based Systems Journal , Special Issue on AI in Design , 5 ( 1 ) , pp . 15 - 30 . Fischer , G . , & Ostwald , J . ( 2001 ) " Knowledge Management — Problems , Promises , Realities , and Challenges , " IEEE Intelligent Systems , January / February 2001 , pp . 60 - 72 . Fischer , G . , & Ostwald , J . ( 2002 ) " Seeding , Evolutionary Growth , and Reseeding : Enriching Participatory Design with Informed Participation , " Proceedings of the Participatory Design Conference ( PDC’02 ) , Malmö University , Sweden , pp . 135 - 143 . Fischer , G . , & Scharff , E . ( 2000 ) " Meta - Design—Design for Designers , " 3rd International Conference on Designing Interactive Systems ( DIS 2000 ) , New York , pp . 396 - 405 . Flanagan , J . , Huang , T . , Jones , P . , & Kasif , S . ( 1997 ) Human - Centered Systems : Information , Interactivity , and Intelligence , Beckman Institute , University of Illinois . Florida , R . ( 2002 ) The Rise of the Creative Class and How It ' s Transforming Work , Leisure , Community and Everyday Life , Basic Books , New York , NY . Gantt , M . , & Nardi , B . A . ( 1992 ) " Gardeners and Gurus : Patterns of Cooperation Among CAD Users . " In P . Bauersfeld , J . Bennett , & G . Lynch ( Eds . ) , Proceedings of ACM CHI ' 92 Conference on Human Factors in Computing Systems , ACM , New York , pp . 107 - 117 . . Girgensohn , A . ( 1992 ) End - User Modifiability in Knowledge - Based Design Environments , Ph . D . Dissertation , University of Colorado at Boulder . Greenbaum , J . , & Kyng , M . ( Eds . ) ( 1991 ) Design at Work : Cooperative Design of Computer Systems , Lawrence Erlbaum Associates , Inc . , Hillsdale , NJ . Grudin , J . ( 1994 ) " Groupware and Social Dynamics : Eight Challenges for Developers , " Communications of the ACM , 37 ( 1 ) , pp . 92 - 105 . Guzdial , M . , & Jocken , R . ( 2001 ) Swiki / CoLab , Available at http : / / coweb . cc . gatech . edu / csl / 9 . Henderson , A . , & Kyng , M . ( 1991 ) " There ' s No Place Like Home : Continuing Design in Use . " In J . Greenbaum , & M . Kyng ( Eds . ) , Design at Work : Cooperative Design of Computer Systems , Lawrence Erlbaum Associates , Inc . , Hillsdale , NJ , pp . 219 - 240 . Illich , I . ( 1971 ) Deschooling Society , Harper and Row , New York . Illich , I . ( 1973 ) Tools for Conviviality , Harper and Row , New York . John - Steiner , V . ( 2000 ) Creative Collaboration , Oxford University Press , Oxford . Kay , A . C . ( 1984 ) " Computer Software , " Scientific American , 251 ( 3 ) , pp . 52 - 59 . Landauer , T . K . ( 1995 ) The Trouble with Computers , MIT Press , Cambridge , MA . Lieberman , H . ( Ed . ) ( 2001 ) Your Wish is My Command : Programming by Example , Morgan Kaufmann , San Francisco . Mackay , W . E . ( 1990 ) Users and Customizable Software : A Co - Adaptive Phenomenon , Sloan School of Management Dissertation , Massachusetts Institute of Technology . Maxis ( 2000 ) SimCity 3000 , Available at http : / / www . simcity . com . Nardi , B . A . ( 1993 ) A Small Matter of Programming , The MIT Press , Cambridge , MA . Norman , D . A . ( 1988 ) The Psychology of Everyday Things , Basic Books , New York . Norman , D . A . ( 1993 ) Things That Make Us Smart , Addison - Wesley Publishing Company , Reading , MA . Norman , D . A . ( 1998 ) The Invisible Computer , The MIT Press , Cambridge , MA . Gerhard Fischer 29 FirstMonday Submission Norman , D . A . , & Draper , S . W . ( Eds . ) ( 1986 ) User - Centered System Design , New Perspectives on Human - Computer Interaction , Lawrence Erlbaum Associates , Inc . , Hillsdale , NJ . Oppermann , R . ( Ed . ) ( 1994 ) Adaptive User Support , Lawrence Erlbaum , Hillsdale , New Jersey . Ostwald , J . ( 2001 ) DynaSites , Available at http : / / www . cs . colorado . edu / ~ ostwald / dynasites . html . Ostwald , J . ( 2002 ) livingOM , Available at http : / / webguide . cs . colorado . edu : 9080 / entwine / Projects / livingOM . PCAST ( 1997 ) Report to the President on the Use of Technology to Strengthen K - 12 Education in the United States , Available at http : / / www . whitehouse . gov / WH / EOP / OSTP / NSTC / PCAST / k - 12ed . html . Polanyi , M . ( 1966 ) The Tacit Dimension , Doubleday , Garden City , NY . Postman , N . ( 1985 ) Amusing Ourselves to Death—Public Discourse in the Age of Show Business , Penguin Books , New York . Putnam , R . ( 2000 ) Bowling Alone : The Collapse and Revival of American Community , Simon and Schuster , New York , NY . Raymond , E . S . , & Young , B . ( 2001 ) The Cathedral and the Bazaar : Musings on Linux and Open Source by an Accidental Revolutionary , O ' Reilly & Associates , Sebastopol , CA . Repenning , A . ( 1994 ) " Programming Substrates to Create Interactive Learning Environments , " Journal of Interactive Learning Environments , Special Issue on End - User Environments , 4 ( 1 ) , pp . 45 - 74 . Repenning , A . ( 2001 ) Agentsheets , Available at http : / / www . agentsheets . com / . Repenning , A . , Ioannidou , A . , & Phillips , J . ( 1999 ) " Collaborative Use & Design of Interactive Systems . " In C . Hoadley ( Ed . ) , Proceedings of the Computer Supported Collaborative Learning ( CSCL ' 99 ) Conference , Stanford University , Palo Alto , CA , pp . 475 - 487 . Resnick , L . B . , Levine , J . M . , & Teasley , S . D . ( Eds . ) ( 1991 ) Perspectives on Socially Shared Cognition , American Psychological Association , Washington , DC . Resnick , M . ( 1994 ) Turtles , Termites , and Traffic Jams , The MIT Press , Cambridge , MA . Rittel , H . ( 1984 ) " Second - Generation Design Methods . " In N . Cross ( Ed . ) , Developments in Design Methodology , John Wiley & Sons , New York , pp . 317 - 327 . Scharff , E . ( 2002 ) Open Source Software , a Conceptual Framework for Collaborative Artifact and Knowledge Construction , Ph . D . Dissertation , University of Colorado at Boulder . Schön , D . A . ( 1983 ) The Reflective Practitioner : How Professionals Think in Action , Basic Books , New York . Shipman , F . , & McCall , R . ( 1994 ) " Supporting Knowledge - Base Evolution with Incremental Formalization . " In Human Factors in Computing Systems , INTERCHI ' 94 Conference Proceedings , ACM , New York , pp . 285 - 291 . Smith , R . G . , & Farquhar , A . ( 2000 ) " The Road Ahead for Knowledge Management — An AI Perspective , " AI Magazine , 21 ( 4 ) , pp . 17 - 40 . Suchman , L . A . ( 1987 ) Plans and Situated Actions , Cambridge University Press , Cambridge , UK . Terveen , L . , & Hill , W . ( 2001 ) " Beyond Recommender Systems : Helping People Help Each Other . " In J . M . Carroll ( Ed . ) , Human - Computer Interaction in the New Millennium , ACM Press , New York , pp . 487 - 509 . Terveen , L . G . ( 1995 ) " An Overview of Human - Computer Collaboration , " Knowledge - Based Systems Journal , Special Issue on Human - Computer Collaboration , 8 ( 2 - 3 ) , pp . 67 - 81 . Terveen , L . G . , Selfridge , P . G . , & Long , M . D . ( 1995 ) " Living Design Memory : Framework , Implementation , Lessons Learned , " Human - Computer Interaction , 10 ( 1 ) , pp . 1 - 37 . Gerhard Fischer 30 FirstMonday Submission Wenger , E . ( 1998 ) Communities of Practice — Learning , Meaning , and Identity , Cambridge University Press , Cambridge , UK . Winograd , T . , & Flores , F . ( 1986 ) Understanding Computers and Cognition : A New Foundation for Design , Ablex Publishing Corporation , Norwood , NJ . Zuboff , S . ( 1988 ) In the Age of the Smart Machine , Basic Books , Inc . , New York .