Discrete Optimization The equitable dispersion problem Oleg A . Prokopyev a , * , Nan Kong b , Dayna L . Martinez - Torres c a Department of Industrial Engineering , University of Pittsburgh , Pittsburgh , PA 15261 , United States b Weldon School of Biomedical Engineering , Purdue University , West Lafayette , IN 47907 , United States c Department of Industrial and Management Systems Engineering , University of South Florida , Tampa , FL 33620 , United States a r t i c l e i n f o Article history : Received 20 July 2007 Accepted 4 June 2008 Available online 13 June 2008 Keywords : Equitable dispersion Maximum dispersion Equity Binary nonlinear programming a b s t r a c t Most optimization problems focus on efﬁciency - based objectives . Given the increasing awareness of sys - tem inequity resulting from solely pursuing efﬁciency , we conceptualize a number of new element - based equity - oriented measures in the dispersion context . We propose the equitable dispersion problem that maximizes the equity among elements based on the introduced measures in a system deﬁned by inter - element distances . Given the proposed optimization framework , we develop corresponding math - ematical programming formulations as well as their mixed - integer linear reformulations . We also discuss computational complexity issues , related graph - theoretic interpretations and provide some preliminary computational results . (cid:2) 2008 Elsevier B . V . All rights reserved . 1 . Introduction Suppose , we are given a set N of n elements , and d ij , the inter - element distance between any two elements i and j . The so - called Maximum Dispersion Problem ( Max DP ) is to select a subset M # N of cardinality m , i . e . , j M j ¼ m , such that some efﬁciency - based function z ð M Þ of d ij from the selected subset M is maximized . The problem is then formulated as max M # N f z ð M Þ : M 2 F g , where F is the set containing all subsets of N . Two important and widely ad - dressed functions in the literature ( see , e . g . , [ 3 ] ) are the sum and minimum of d ij for all i ; j 2 M , respectively . The former and latter functions can thus be written as P i < j ; i ; j 2 M d ij and min i < j ; i ; j 2 M d ij , where it is usually assumed that for all i ; j 2 N , we have d ij ¼ d ji . Hence , the ﬁrst selection criterion for the maximally disperse set is called Maxsum and the second criterion is called Maxmin . To differentiate the two resultant maximization problems , we name them accord - ingly as Maxsum DP and Maxmin DP . Deﬁne a binary variable x i ¼ 1 if element i belongs to M and x i ¼ 0 otherwise , for i ¼ 1 ; . . . ; n . Then the problem with the former objective can be rewritten as a cardinality - constrained quadratic 0 – 1 programming problem : max x 2f 0 ; 1 g n X n (cid:2) 1 i ¼ 1 X n j ¼ i þ 1 d ij x i x j ð 1 Þ s : t : X n i ¼ 1 x i ¼ m ; ð 2 Þ x i 2 f 0 ; 1 g ; i ¼ 1 ; . . . ; n : ð 3 Þ Problems ( 1 ) – ( 3 ) sometimes is also referred to as maximum diversity / similarity problem [ 15 ] , where d ij measures the differ - ence / similarity between elements i and j . Problems of type ( 1 ) – ( 3 ) can be tackled using algorithms designed for solving quadratic 0 – 1 programs [ 8 , 25 ] , or we can easily obtain a classical linear mixed 0 – 1 reformulation ( see e . g . , [ 17 , 23 ] ) , which , in turn , can be solved using any standard mixed integer programming ( MIP ) solver ( e . g . , CPLEX , XPRESS - MP ) : max x 2f 0 ; 1 g n X n (cid:2) 1 i ¼ 1 X n j ¼ i þ 1 d ij z ij s : t : ð 2 Þ ; ð 3 Þ ; and z ij P x i þ x j (cid:2) 1 ; z ij 6 x i ; z ij 6 x j ; 1 6 i < j 6 n ; ð 4 Þ z ij 2 f 0 ; 1 g ; 1 6 i < j 6 n : ð 5 Þ In the literature , the maximum dispersion problem with the second objective is also referred to as the p - dispersion problem [ 12 , 22 , 24 ] . It is regarded as a maxmin problem among individual inter - element distances . A mixed - integer 0 – 1 reformulation of the problem is pre - sented as : max y ; ð 6 Þ s : t : ð 2 Þ — ð 5 Þ ; and y 6 d ij þ ð 1 (cid:2) z ij Þ b ij ; 1 6 i < j 6 n : ð 7 Þ Note that b ij is conveniently chosen as d U (cid:2) d ij , where d U is an upper bound on the optimal value of y , e . g . , d U ¼ max i ; j 2 N d ij . The above lin - earization is straightforward and thus the formulations may be tightened . For detailed development of the above formulations and further tightening , we refer the readers to [ 3 ] . 0377 - 2217 / $ - see front matter (cid:2) 2008 Elsevier B . V . All rights reserved . doi : 10 . 1016 / j . ejor . 2008 . 06 . 005 * Corresponding author . Tel . : + 1 412 624 9833 . E - mail address : prokopyev @ engr . pitt . edu ( O . A . Prokopyev ) . European Journal of Operational Research 197 ( 2009 ) 59 – 67 Contents lists available at ScienceDirect European Journal of Operational Research journal homepage : www . elsevier . com / locate / ejor As discussed in [ 15 , 23 ] , an element i may be characterized by a vector with ‘ possible attributes ð a i 1 ; . . . ; a i ‘ Þ . Then for d ij we can consider , for instance , a Euclidean distance measure , or a general L p norm : d ij ¼ X ‘ s ¼ 1 a is (cid:2) a js (cid:2)(cid:2) (cid:2)(cid:2) p ! 1 = p : ð 8 Þ In the case of ( 8 ) , all d ij ’s are nonnegative . However , d ij can generally take both positive and negative values . The maximum dispersion problem primarily focuses on opera - tional efﬁciency of locating facilities according to distance , accessi - bility , impacts , etc . ( see [ 11 , 12 , 22 , 29 ] ) . It also arises in various other contexts including maximally diverse / similar group selection ( e . g . , biological diversity , admissions policy formulation , commit - tee formation , curriculum design , market planning , etc . ) [ 1 , 15 , 16 , 23 , 34 ] and densest subgraph identiﬁcation [ 21 ] . For a de - tailed literature survey on Maxsum DP and Maxmin DP , we refer the readers to [ 3 , 11 , 23 ] . For these two problems , exact methods [ 3 , 15 , 28 ] and heuristics [ 15 , 18 , 20 , 30 , 31 ] have been developed . An equally important concern in facility location theory is equi - ty . It is here referred to as the concept or idea of fairness among candidate facility sites . Furthermore , one particular interest is in balancing equity with efﬁciency in a model - building paradigm [ 33 ] . However , the majority of models in the operations research literature are efﬁciency - based and little work has been done for the equity concern [ 26 ] . This is especially critical when dealing with urban public facility location [ 33 ] . This paper explores the use of several equity measures in the framework of the dispersion problem . These equity measures may also arise in the contexts of diverse / similar group selection , and dense and regular subgraph identiﬁcation . For example , one may address fair diversiﬁcation or assimilation among members of a network . Somewhat related work on equity based measures in network ﬂow problems can be found in [ 6 , 7 ] . The remainder of this paper is organized as follows . Section 2 introduces a number of new measures in the context of the disper - sion problem . Section 3 develops a nonlinear binary optimization framework with the introduced equity measures being objectives . Section 4 presents the corresponding linear mixed 0 – 1 reformula - tions . Section 5 shows the computational complexity of the resultant optimization problems . Section 6 provides several graph - theoretic results related to the measures . Section 7 discusses our preliminary computational experiments . Section 8 concludes the paper and points out future research directions . 2 . Equity measures As discussed in Section 1 , the dispersion problem in the litera - ture has mainly focused on efﬁciency - based objectives . In this sec - tion , we introduce several equity - based measures , each of which alternatively represents some function of dispersion with respect to individual elements . Therefore , unlike efﬁciency - based mea - sures that consider some dispersion quantity for the entire selec - tion M ( e . g . , total amount of dispersion and the minimum level of dispersion ) , these measures are used to balance the dispersion among individual elements in M . To ensure equity among ele - ments , one may input some of these measures into an optimization framework . Solving the resultant optimization problem would , in some sense , achieve equitable dispersion among the selected elements . (cid:3) Mean Dispersion Measure . For each M # N , let us deﬁne f 1 ð M Þ ¼ X i < j ; i ; j 2 M d ij ! , j M j ¼ z ð M Þ = j M j : Generically speaking , f 1 ð M Þ is an average efﬁciency measure . In this context , we call it Mean Dispersion Measure . One way to en - sure equity is to maximize f 1 ð M Þ . (cid:3) Generalized Mean Dispersion Measure . For each M # N , let us deﬁne f 2 ð M Þ ¼ X i < j ; i ; j 2 M d ij ! , X i 2 M w i ! : The value w i can be considered as the weight assigned to ele - ment i , i 2 N . Hence , this measure is the average weighted efﬁ - ciency measure . One may also ensure equity by maximizing f 2 ð M Þ . (cid:3) Minsum Dispersion Measure . For each M # N , let us deﬁne f 3 ð M Þ ¼ min i 2 M X j 2 M ; j – i d ij : This measure can be interpreted as follows . For each element i 2 M , we can measure the total dispersion associated with i , de - noted by c ð M ; i Þ . That is , c ð M ; i Þ ¼ P j 2 M ; j – i d ij for all i 2 M . Then f 3 ð M Þ is the smallest value among all selected elements , i . e . , f 3 ð M Þ ¼ min i 2 M c ð M ; i Þ . An alternative way to ensure equity is to maximize f 3 ð M Þ , which forms a maxmin framework . Therefore , we term this measure Minsum Dispersion Measure . Note that this measure considers the minimum aggregate dispersion among elements , which is different from the one presented in ( 6 ) and ( 7 ) ( the p - dispersion problem in [ 12 ] ) . (cid:3) Differential Dispersion Measure . For each M # N , let us deﬁne f 4 ð M Þ ¼ max i 2 M X j 2 M ; j – i d ij (cid:2) min i 2 M X j 2 M ; j – i d ij : This measure can be understood as the difference between the largest and smallest c ð M ; i Þ values , i . e . , f 4 ð M Þ ¼ max i 2 M c ð M ; i Þ (cid:2) min i 2 M c ð M ; i Þ . Therefore , we term this measure Differential Dispersion Measure . A third way to ensure equity is to minimize f 4 ð M Þ . To summarize , the ﬁrst equity measure introduced in this sec - tion addresses the average efﬁciency level whereas the last two consider the element ( s ) with extreme efﬁciency level ( s ) . It is clear that these measures are based on different interpretations of equity . 3 . Mathematical programming models After deﬁning the equity measures in the previous section , we can next formulate respective mathematical programs . Except for the ﬁrst mathematical program , we impose the cardinality restric - tion on the number of elements to be selected . Note that in the ﬁrst model , the group size is part of the decision to make . 3 . 1 . Maximum mean dispersion problem ( Max - Mean DP ) This problem can be formulated as the following fractional 0 – 1 programming problem : max x 2f 0 ; 1 g n P n (cid:2) 1 i ¼ 1 P nj ¼ i þ 1 d ij x i x j P ni ¼ 1 x i s : t : X n i ¼ 1 x i P 1 : ð 9 Þ As stated earlier , we do not impose the cardinality restriction P ni ¼ 1 x i ¼ m in the above formulation . It is clear that the Max - Mean DP is reduced to Maxsum DP once the number of elements to be se - lected is ﬁxed . The generalized version of the Max - Mean DP , termed the Gener - alized Max - Mean DP , can be stated as : 60 O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 max x 2f 0 ; 1 g n P n (cid:2) 1 i ¼ 1 P nj ¼ i þ 1 d ij x i x j P ni ¼ 1 w i x i s : t : X n i ¼ 1 x i P 1 : ð 10 Þ where w i is the weight assigned to element i 2 N . 3 . 2 . Maximum minsum dispersion problem ( Max - Minsum DP ) The mathematical programming problem corresponding to the minsum dispersion measure is formulated as : max x 2f 0 ; 1 g n min i : x i ¼ 1 X j : j – i d ij x j ( ) s : t : X n i ¼ 1 x i ¼ m : ð 11 Þ Problem ( 11 ) can be equivalently rewritten as max x 2f 0 ; 1 g n min i X j : j – i d ij x j x i þ M þ ð 1 (cid:2) x i Þ ( ) ( ) s : t : X n i ¼ 1 x i ¼ m ð 12 Þ where M þ is a large enough constant , e . g . , M þ ¼ 1 þ max i X j : j – i max f d ij ; 0 g : ð 13 Þ 3 . 3 . Minimum differential dispersion problem ( Min - Diff DP ) The problem of ﬁnding the best subset M # N with respect to this measure can be formulated as the following 0 – 1 programming problem : min x 2f 0 ; 1 g n max i : x i ¼ 1 X j : j – i d ij x j (cid:2) min i : x i ¼ 1 X j : j – i d ij x j ( ) s : t : X n i ¼ 1 x i ¼ m : ð 14 Þ An equivalent big - M formulation is given by min x ( max i X j : j – i d ij x j x i þ M (cid:2) ð 1 (cid:2) x i Þ ( ) (cid:2) min i X j : j – i d ij x j x i þ M þ ð 1 (cid:2) x i Þ ( ) ) s : t : X n i ¼ 1 x i ¼ m ; x 2 f 0 ; 1 g n ; ð 15 Þ where M þ can be selected according to ( 13 ) and M (cid:2) ¼ (cid:2) 1 þ min i X j : j – i min f d ij ; 0 g : ð 16 Þ The mathematical programs developed in this section are non - linear binary programs . We linearize these models in the next sec - tion by introducing auxiliary variables . 4 . Basic linear mixed 0 – 1 reformulations The development of exact linear reformulations facilitates the use of state - of - the - art mixed - integer linear programming solvers . In order to linearize the problems introduced in Section 3 , we can apply techniques similar to those used in [ 3 , 23 , 32 , 35 ] . Apply - ing more specialized techniques may derive tighter mixed - integer programming formulations . Since the focus of this paper is to establish the equity measures in the context of the dispersion problem , we leave formulation tightening to future research . Once a respective linear mixed - integer 0 – 1 reformulation is developed , we also provide the equivalence proof between the reformulation and its nonlinear counterpart . 4 . 1 . Max - Mean DP Proposition 1 ( [ 32 , 35 ] ) . A polynomial mixed 0 – 1 term z ¼ xy , where x is a 0 – 1 variable , and y is a nonnegative continuous variable , can be equivalently represented by the following four linear inequal - ities : ( 1 ) z P y (cid:2) U ð 1 (cid:2) x Þ ; ( 2 ) z 6 y ; ( 3 ) z 6 Ux ; ( 4 ) z P 0 , where U is an upper bound on y , i . e . , 0 6 y 6 U . The next proposition immediately follows from Proposition 1 . Proposition 2 . A polynomial mixed 0 – 1 term z ¼ x 1 x 2 y , where x 1 and x 2 are 0 – 1 variables , and y is a nonnegative continuous variable , can be equivalently represented by the following ﬁve linear inequal - ities : ( 1 ) z P y (cid:2) U ð 2 (cid:2) x 1 (cid:2) x 2 Þ ; ( 2 ) z 6 y ; ( 3 ) z 6 Ux 1 ; ( 4 ) z 6 Ux 2 ; ( 5 ) z P 0 , where U is an upper bound on y , i . e . , 0 6 y 6 U . In order to reformulate ( 9 ) as a linear mixed 0 – 1 programming problem , let us deﬁne a new variable y such that y ¼ 1 P ni ¼ 1 x i : ð 17 Þ This deﬁnition is equivalent to X n i ¼ 1 x i y ¼ 1 : ð 18 Þ With the newly introduced variable y , problem ( 9 ) can be rewritten as max x ; y X n (cid:2) 1 i ¼ 1 X n j ¼ i þ 1 d ij x i x j y ð 19 Þ s : t : X n i ¼ 1 x i P 1 ; X n i ¼ 1 x i y ¼ 1 ; x 2 f 0 ; 1 g n : ð 20 Þ Next , nonlinear terms x i y in ( 20 ) and x i x j y in ( 19 ) can be linearized by introducing additional variables z i and z ij , and applying the re - sults of Propositions 1 and 2 . The total number of new variables z i , z ij , and y , is n ð n þ 1 Þ = 2 þ 1 . The parameter U can be set to 1 . Therefore , the linear mixed 0 – 1 programming reformulation is presented as : max x ; z ; y X n (cid:2) 1 i ¼ 1 X n j ¼ i þ 1 d ij z ij ð 21 Þ s : t : y (cid:2) z i 6 1 (cid:2) x i ; z i 6 y ; z i 6 x i ; z i P 0 ; i ¼ 1 ; . . . ; n ; ð 22 Þ y (cid:2) z ij 6 2 (cid:2) x i (cid:2) x j ; z ij 6 y ; z ij 6 x i ; z ij 6 x j ; z ij P 0 ; 1 6 i < j 6 n ; ð 23 Þ X n i ¼ 1 x i P 1 ; X n i ¼ 1 z i ¼ 1 ; x 2 f 0 ; 1 g n : ð 24 Þ Proposition 3 . Formulations ( 9 ) and ( 21 ) – ( 24 ) are equivalent , i . e . , ( 9 ) , ( 21 ) – ( 24 ) . Proof . The proposition is valid by the construction of ( 21 ) – ( 24 ) . h Obviously , if d ij P 0 for all i ; j ¼ 1 ; . . . ; n , ( 23 ) can be simpliﬁed and replaced by z ij 6 y ; z ij 6 x i ; z ij 6 x j ; 1 6 i < j 6 n : ð 25 Þ O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 61 The linear mixed 0 – 1 formulation for ( 10 ) can be easily obtained in a similar manner . 4 . 2 . Max - Minsum DP Let L i and U i be lower and upper bounds on the value of P j : j – i d ij x j , which can be set , for example , as L i ¼ X j : j – i min f d ij ; 0 g ; U i ¼ X j : j – i max f d ij ; 0 g : ð 26 Þ After some simpliﬁcation problem ( 12 ) can be further written as : max r ; x r ð 27 Þ s : t : r 6 X j : j – i d ij x j (cid:2) L i ð 1 (cid:2) x i Þ þ M þ ð 1 (cid:2) x i Þ ; i ¼ 1 ; . . . ; n ; ð 28 Þ X n i ¼ 1 x i ¼ m ; x 2 f 0 ; 1 g n ; ð 29 Þ where M þ is a sufﬁciently large constant deﬁned earlier in ( 13 ) . Proposition 4 . Formulations ( 11 ) , ( 12 ) and ( 27 ) – ( 29 ) are equivalent , i . e . , ( 11 ) , ( 12 ) , ( 27 ) – ( 29 ) . Proof . (cid:3) ( 11 ) , ( 12 ) : By the selection of M þ in ( 13 ) , it follows that if i (cid:4) ¼ argmin i X j : j – i d ij x j x i þ M þ ð 1 (cid:2) x i Þ ( ) ; then x i (cid:4) ¼ 1 ; which immediately implies ( 11 ) (cid:3) ( 12 ) . The proof of the opposite direction ( 11 ) ) ( 12 ) clearly follows from the selec - tion of M þ . (cid:3) ( 11 ) , ( 27 ) – ( 29 ) : First , let us prove ( 11 ) (cid:3) ( 27 ) – ( 29 ) . Let r (cid:4) and x (cid:4) be the solution of 27 . Consider all i ’s such that x (cid:4) i ¼ 1 . Con - straints ( 28 ) become r (cid:4) 6 X j : j – i d ij x (cid:4) j 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 1 g : ð 30 Þ Then from inequalities ( 30 ) , it follows that r (cid:4) 6 min i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j : ð 31 Þ Next consider all i ’s such that x (cid:4) i ¼ 0 . Constraints ( 28 ) become r (cid:4) 6 X j : j – i d ij x (cid:4) j (cid:2) L i þ M þ 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 0 g : ð 32 Þ By the deﬁnition of L i , we have P j : j – i d ij x (cid:4) j P L i . Therefore , by the def - inition of M þ constraints ( 32 ) can be dropped since they are weaker than ( 31 ) . Since we maximize r in the objective function ( 27 ) then from ( 31 ) we conclude r (cid:4) ¼ min i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j : ð 33 Þ The necessary result follows from ( 27 ) , ( 33 ) , and the deﬁnitions of r (cid:4) and x (cid:4) . The proof of ( 11 ) ) ( 27 ) – ( 29 ) follows from the construction of ( 27 ) – ( 29 ) . h 4 . 3 . Min - Diff DP A linear mixed 0 – 1 reformulation of ( 14 ) is given by min t ; r ; s ; x t ð 34 Þ s : t : t P r (cid:2) s ; i ¼ 1 ; . . . ; n ; ð 35 Þ r P X j : j – i d ij x j (cid:2) U i ð 1 (cid:2) x i Þ þ M (cid:2) ð 1 (cid:2) x i Þ ; i ¼ 1 ; . . . ; n ; ð 36 Þ s 6 X j : j – i d ij x j (cid:2) L i ð 1 (cid:2) x i Þ þ M þ ð 1 (cid:2) x i Þ ; i ¼ 1 ; . . . ; n ; ð 37 Þ X n i ¼ 1 x i ¼ m ; x 2 f 0 ; 1 g n : ð 38 Þ Proposition 5 . Formulations ( 14 ) , ( 15 ) , and ( 34 ) – ( 38 ) are equiva - lent , i . e . , ( 14 ) , ( 15 ) , ( 34 ) – ( 38 ) . Proof . (cid:3) ( 14 ) , ( 15 ) : By the selection of M þ and M (cid:2) ( see ( 13 ) and ( 16 ) ) , it follows that – if i (cid:4) ¼ argmin i f P j : j – i d ij x j x i þ M þ ð 1 (cid:2) x i Þg , then x i (cid:4) ¼ 1 ; and – if i (cid:4) ¼ argmax i f P j : j – i d ij x j x i þ M (cid:2) ð 1 (cid:2) x i Þg , then x i (cid:4) ¼ 1 ; which immediately implies ( 14 ) (cid:3) ( 15 ) . The proof of the opposite direction ( 14 ) ) ( 15 ) clearly follows from the selection of M þ and M (cid:2) . (cid:3) ( 14 ) , ( 34 ) – ( 38 ) : We ﬁrst prove ( 14 ) (cid:3) ( 34 ) – ( 38 ) . Let t (cid:4) , r (cid:4) , s (cid:4) , and x (cid:4) be the solution of 34 . For all i ’s such that x (cid:4) i ¼ 1 , con - straints ( 36 ) and ( 37 ) become r (cid:4) P X j : j – i d ij x (cid:4) j 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 1 g ; ð 39 Þ s (cid:4) 6 X j : j – i d ij x (cid:4) j 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 1 g : ð 40 Þ By the deﬁnitions of L i and U i , inequalities ( 39 ) and ( 40 ) imply r (cid:4) P max i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j and s (cid:4) 6 min i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j : ð 41 Þ Similarly , for all i ’s such that x (cid:4) i ¼ 0 , constraints ( 36 ) and ( 37 ) become r (cid:4) P X j : j – i d ij x (cid:4) j (cid:2) U i þ M (cid:2) 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 0 g ; ð 42 Þ s (cid:4) 6 X j : j – i d ij x (cid:4) j (cid:2) L i þ M þ 8 i 2 f i ¼ 1 ; . . . ; n : x (cid:4) i ¼ 0 g : ð 43 Þ By the deﬁnitions of L i and U i , we have P j : j – i d ij x (cid:4) j P L i , and P j : j – i d ij x (cid:4) j 6 U i , respectively . Therefore , constraints ( 42 ) and ( 43 ) can be dropped since they are weaker than ( 41 ) . Constraint ( 35 ) en - forces that the minimization of t in the objective function ( 34 ) will correspond to the minimum value of r and maximum value of s . Therefore , from ( 41 ) we conclude that t (cid:4) ¼ r (cid:4) (cid:2) s (cid:4) ; r (cid:4) ¼ max i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j and s (cid:4) ¼ min i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j : ð 44 Þ The necessary result follows from ( 34 ) , ( 44 ) , and the deﬁnitions of t (cid:4) , r (cid:4) , s (cid:4) , and x (cid:4) . The proof of ( 14 ) ) ( 34 ) – ( 38 ) follows from the con - struction of ( 34 ) – ( 38 ) . h 5 . Computational complexity It is known that both Maxsum DP and Maxmin DP are strongly NP - hard [ 11 , 15 , 23 ] . In this section we study the computational complexity of Max - Mean DP ( problem ( 9 ) ) , Max - Minsum DP ( prob - lem ( 11 ) ) , and Min - Diff DP ( problem ( 14 ) ) . If d ij P 0 , Max - Mean DP is polynomially solvable ( see [ 27 ] ) . We next show that the problem becomes difﬁcult when no constraints are imposed on the sign of d ij . Proposition 6 . Max - Mean DP is strongly NP - hard if coefﬁcients d ij can take both positive and negative values . Proof . The proof of the result is based on the MAXIMUM CLIQUE problem known to be NP - complete [ 14 ] . Let G ¼ ð V ; E Þ be an undi - rected graph with n nodes ðj V j ¼ n Þ . A subset of nodes C # V is called a clique ofthegraphifforanytwonodes v 1 and v 2 thatbelongto C , i . e . , v 1 ; v 2 2 C # V , thereisanedge ð v 1 ; v 2 Þ 2 E connectingthem . Thedeci - sionversionof MAXIMUMCLIQUE consistsofcheckingwhetherthere exists a clique C of size at least K in G . For an extensive survey on the maximum clique problem , we refer the readers to [ 5 ] . 62 O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 Consider the following instance of Max - Mean DP : max x 2f 0 ; 1 g n ; x – 0 g ð x Þ ¼ (cid:2) n 2 P ð i ; j Þ R E ; i < j x i x j þ P ð i ; j Þ2 E ; i < j x i x j P ni ¼ 1 x i ; ð 45 Þ where d ij ¼ 1 for ð i ; j Þ 2 E and d ij ¼ (cid:2) n 2 for ð i ; j Þ R E . Let x (cid:4) be a non - zero 0 – 1 vector . Deﬁne a subgraph C ð V c ; E c Þ # G induced by nodes V c ¼ f i 2 f 1 ; . . . ; n g : x (cid:4) i ¼ 1 g . Notice that if x (cid:4) i ¼ 1 , x (cid:4) j ¼ 1 and ð i ; j Þ R E ( i . e . , C is not a clique ) then g ð x (cid:4) Þ < 0 . If C is a clique , i . e . , for any x (cid:4) i ¼ 1 and x (cid:4) j ¼ 1 we have ð i ; j Þ 2 E , then g ð x (cid:4) Þ ¼ j C j (cid:5) ðj C j (cid:2) 1 Þ 2 j C j ¼ j C j (cid:2) 1 2 P 0 : Therefore , graph G contains a clique of size at least K if and only if max x 2f 0 ; 1 g n ; x – 0 g ð x Þ P K (cid:2) 1 2 : (cid:2) Next we show that Max - Minsum DP and Min - Diff DP are strongly NP - hard as well . Proposition 7 . Max - Minsum DP is strongly NP - hard . Proof . As in the previous proof , we use a reduction from the MAX - IMUM CLIQUE problem . Given an undirected graph G ð V ; E Þ , let d ij ¼ 1 if ð i ; j Þ 2 E and 0 otherwise . For a given nonzero vector x (cid:4) such that P i x (cid:4) i ¼ K , deﬁne a subgraph C ð V c ; E c Þ # G induced by nodes V c ¼ f i 2 f 1 ; . . . ; n g : x (cid:4) i ¼ 1 g , and thus j V c j ¼ K . Observe that C is a clique if and only if for all i 2 V c , we have P j : j – i d ij x (cid:4) j ¼ K (cid:2) 1 . Therefore , G ð V ; E Þ contains a clique of size at least K if and only if the solution of the Max - Minsum DP instance , with m ¼ K and ear - lier speciﬁed d ij ’s , satisﬁes max x 2f 0 ; 1 g n min i : x i ¼ 1 X j : j – i d ij x j P K (cid:2) 1 : (cid:2) Proposition 8 . Min - Diff DP is strongly NP - hard . Proof . We use the reduction from the MAXIMUM INDEPENDENT SET problem , which is NP - complete [ 14 ] . For an undirected graph G ¼ ð V ; E Þ , a subset of nodes I # V is called an independent set of the graph G if for any two nodes v 1 and v 2 from I , i . e . , v 1 ; v 2 2 I # V , ð v 1 ; v 2 Þ R E . The decision version of the MAXIMUM INDEPENDENT SET problem consists of checking whether there exists an independent set I of size at least K in G . Let i ; j ¼ 1 ; . . . ; 2 n . Deﬁne d ij as (cid:3) d ij ¼ 1 if 1 6 i ; j 6 n and ð i ; j Þ 2 E ; (cid:3) d ij ¼ 0 , otherwise . For a given graph G ð V ; E Þ with n nodes ðj V j ¼ n Þ , we construct an instance of Min - Diff DP with m ¼ n þ K as : min x 2f 0 ; 1 g 2 n max i : x i ¼ 1 X j : j – i d ij x j (cid:2) min i : x i ¼ 1 X j : j – i d ij x j ( ) s : t : X 2 n i ¼ 1 x i ¼ n þ K : ð 46 Þ Let x (cid:4) be an optimal solution of ( 46 ) . Note that since P 2 n i ¼ 1 x (cid:4) i ¼ n þ K , there exists an i > n such that x (cid:4) i ¼ 1 . Therefore min i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j ¼ 0 : ð 47 Þ For a given x (cid:4) , deﬁne a subgraph G ð V I ; E I Þ # G induced by nodes V I ¼ f i 2 f 1 ; . . . ; n g : x (cid:4) i ¼ 1 g . Obviously , j V I j P K . Then V I is an inde - pendent set if and only if max i : x (cid:4) i ¼ 1 X j : j – i d ij x (cid:4) j ¼ 0 : ð 48 Þ From ( 47 ) and ( 48 ) it follows that G contains an independent set of size at least K if and only if the optimal solution of ( 46 ) is 0 . h It is interesting that Max - Minsum DP and Min - Diff DP remain NP - hard even if we impose sign restrictions on d ij . Proposition 9 . Max - Minsum DP and Min - Diff DP remain NP - hard if we impose sign restrictions on d ij , e . g . , 8 i ; j , d ij P 0 , or 8 i ; j , d ij 6 0 . Proof . It is enough to observe that due to a knapsack constraint we can always reduce a general problem of type ( 1 ) – ( 3 ) to an equiva - lent problem with sign restrictions on d ij ( see , e . g . , [ 19 ] ) . Let ~ d ij ¼ d ij þ M , where M ¼ max i ; j j d ij j if we need 8 i ; j , ~ d ij P 0 and M ¼ (cid:2) max i ; j j d ij j if we need 8 i ; j , ~ d ij 6 0 . Then X n i ¼ 1 X j – i d ij x i x j ¼ X n i ¼ 1 X j – i ð ~ d ij (cid:2) M Þ x i x j ¼ X n i ¼ 1 X j – i ~ d ij x i x j (cid:2) m ð m (cid:2) 1 Þ M : ð 49 Þ The term m ð m (cid:2) 1 Þ M is a constant . Therefore , we can optimize PP ~ d ij x i x j instead of PP d ij x i x j , thus reducing our initial general problem to a more speciﬁc case with sign restrictions on the values of d ij . The result follows directly from formulations ( 12 ) and ( 15 ) , which are equivalent to ( 11 ) and ( 14 ) , respectively . h 6 . Graph - theoretic interpretation In this section we will provide interesting interpretations of Maxsum DP , Maxmin DP , Max - Mean DP , Max - Minsum DP , and Min - Diff DP ( see ( 1 ) – ( 3 ) , ( 6 ) , ( 7 ) , ( 9 ) , ( 11 ) and ( 14 ) ) in the graph - theo - retic context . For graph - theoretic terms that appear in this section , we refer the readers to detailed discussions in [ 2 , 4 , 10 ] . Consider an undirected graph G ¼ ð V ; E Þ , where V denotes the set of nodes and E denotes the set of edges . For each of the prob - lems , we consider two cases as follows : ( a ) graph G is unweighted and the matrix f d ij g is the adjacency matrix associated with G , i . e . , d ij ¼ 1 if ð i ; j Þ 2 E and d ij ¼ 0 , otherwise ; and ( b ) graph G is weighted and nonzero d ij deﬁnes the edge weight of ð i ; j Þ 2 E , while d ij ¼ 0 implies that ð i ; j Þ R E . In all of problems ( 1 ) – ( 3 ) , ( 6 ) , ( 7 ) , ( 9 ) , ( 11 ) and ( 14 ) , we are looking for a subgraph e G (cid:4) # G induced by a subset of nodes V ð e G (cid:4) Þ ¼ e V # V , where node i 2 e V if and only if x i ¼ 1 in the solution of the respective problem . Note that the number of nodes in e G (cid:4) is m , i . e . , j e V j ¼ m . (cid:3) Maxsum DP – Unweighted case : the solution of problem ( 1 ) – ( 3 ) provides a densest ( i . e . , with the largest number of edges ) subgraph with exactly m nodes . – Weighted case : the solution of problem ( 1 ) – ( 3 ) provides a heaviest ( i . e . , with the largest sum of weights ) subgraph with exactly m nodes . (cid:3) Maxmin DP – Unweighted case : each objective function coefﬁcient of prob - lem ( 6 ) and ( 7 ) can take only two values : either 0 or 1 . The optimal value of ( 6 ) is 1 if and only if graph G contains a cli - que ( complete subgraph ) of size at least m . – Weighted case : we search for a subgraph of size m that max - imizes the weight of the least heavy edge of the subgraph . (cid:3) Max - Mean DP – Unweighted case : the density d ð G Þ of graph G can be deﬁned as the maximum ratio of the number of edges e e G to the num - ber of nodes n e G over all subgraphs e G # G ( see [ 27 ] ) , i . e . , O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 63 d ð G Þ ¼ max e G # G e e G n e G : ð 50 Þ The ratio e e G = n e G is called the average degree of e G ( see , e . g . , [ 10 ] ) . Then an optimal solution of ( 50 ) deﬁnes a subgraph e G (cid:4) # G with the largest average degree . Problem ( 50 ) is equivalent to ( 9 ) and thus the solution of ( 9 ) identiﬁes a densest sub - graph e G (cid:4) . A detailed description of ( 50 ) as well as a polyno - mial time algorithm for its solution ( the algorithm requires at most O ð n 4 Þ operations ) are discussed in [ 27 ] . – Weighted case : if we assign an arbitrary nonnegative value to d ij , as the weight of edge ð i ; j Þ , then the solution of problem ( 9 ) yields the weighted density of graph G . (cid:3) Max - Minsum DP – Unweighted case : it is easy to notice that if x i ¼ 1 then P j – i d ij x j deﬁnes the degree of a node i in the selected sub - graph . Usually the minimum degree of a node in graph G is denoted by d ð G Þ ( see , e . g . , [ 4 ] ) . Therefore , in ( 11 ) we search for a subgraph e G (cid:4) # G with exactly m nodes that maximizes d ð(cid:5)Þ , i . e . , max e G # G d ð e G Þ s : t : j V ð e G Þj ¼ m : ð 51 Þ We can also observe that if the solution of ( 51 ) is m (cid:2) 1 then e G (cid:4) is a clique . – Weighted case : if x i ¼ 1 then P j – i d ij x j deﬁnes the total weight of edges incident to node i in the selected subgraph . This set of edges is usually referred to as the incidence set of i in the subgraph . Therefore , the solution of ( 11 ) identiﬁes a subgraph e G (cid:4) # G with m nodes that maximizes the mini - mum total weight among incidence sets in e G (cid:4) : max e G # G min i 2 V ð e G Þ X j 2 e N ð i Þ d ij s : t : j V ð e G Þj ¼ m ; ð 52 Þ where e N ð i Þ deﬁnes the neighbors of i in e G , i . e . , for all j 2 e N ð i Þ we have j 2 V ð e G Þ and ð i ; j Þ 2 E . (cid:3) Min - Diff DP – Unweighted case : let the maximum degree of a node in graph G be denoted by D ð G Þ . Then problem ( 14 ) identiﬁes a sub - graph e G (cid:4) # G with exactly m nodes that minimizes D ð(cid:5)Þ (cid:2) d ð(cid:5)Þ , i . e . , min e G # G D ð e G Þ (cid:2) d ð e G Þ n o s : t : j V ð e G Þj ¼ m : ð 53 Þ We can also observe that if the solution of ( 53 ) is 0 then e G (cid:4) is a regular graph ( i . e . , all vertices of e G (cid:4) have the same de - gree , see , e . g . , [ 10 ] for the deﬁnition of regular graphs ) . Therefore , the solution of ( 14 ) identiﬁes the least irregular subgraph of G with exactly m nodes . – Weighted case : among all subgraphs of G with m nodes , we minimize the difference between the largest and smallest total weights of incidence sets in any such subgraph , i . e . , we search for a subgraph e G (cid:4) # G with m nodes where the total weights of edges incident to nodes in e G (cid:4) are as close to each other as possible . Furthermore , we note that the computational complexity re - sults discussed in Section 5 can be also stated in the graph - theo - retic context . For example , Proposition 6 directly implies the following corollary . Corollary 1 . Given a weighted graph G , where edge weights can be both positive and negative , it is NP - hard to ﬁnd a subgraph with the largest weighted density . Another , and probably the most interesting , observation can be made from Proposition 8 . It is well - known that checking whether a given graph G contains a k - regular subgraph ( i . e . , subgraph with all vertices of degree k ) is NP - complete for k P 3 [ 9 ] . Proposition 8 suggests an alternative view on the problem , which complements the already known complexity result . Corollary 2 . The problem of checking whether a given graph G contains a regular subgraph with at least m nodes is NP - complete . Note that Corollary 2 does not contain any restrictions on regu - larity ( e . g . , the subgraph can be 1 - regular , 2 - regular , etc . ) , instead it requires the subgraph of certain size ( at least m ) . Similarly , we can present a more general statement . Corollary 3 . Given a graph G and two nonnegative integers m and r , the problem of checking whether G contains a subgraph e G with at least m nodes such that D ð e G Þ (cid:2) d ð e G Þ 6 r is NP - complete . 7 . Preliminary numerical studies 7 . 1 . Test instances We randomly generated 4 sets of inter - element distance matri - ces , ½ d ij (cid:6) n (cid:7) n , given the number of elements n ¼ 30 ; 40 ; 50 ; 100 . We generated 10 fully - dense matrices in each matrix set and used uni - form distribution U ð 0 ; 200 Þ to generate each d ij . For each value n , we varied the cardinality value m and thus dealt with 10 instances given each pair of n and m . All computational experiments were performed on a PC with Intel Core 2 CPU of 2 . 66 GHz and RAM of 3 GB . 7 . 2 . Exact MIP solutions The ﬁrst experiment is to compare the exact solution times for the linear mixed integer programming reformulations of the fol - lowing four problems : Maxsum DP , Maxmin DP , Max - Minsum DP , and Min - Diff DP . All instances were solved using the CPLEX 9 . 0 MIP solver with default parameters . We also imposed a 1 hour time limit . The computational results are reported in Table 1 . 7 . 3 . Heuristic solution The theoretical computational complexity results discussed in Section 5 indicate that the considered equitable dispersion prob - lems are difﬁcult combinatorial optimization problems . Therefore , heuristic based algorithms can be applied in order to obtain good - quality solutions in a fast manner . Greedy Randomized Adaptive Search Procedure ( GRASP ) is a rather popular tool for solving Max - sum DP and Maxmin DP ( see , e . g . , [ 15 , 31 ] ) . Motivated by the success of GRASP in solving Maxsum DP and Maxmin DP , we implemented a simple GRASP - based heuristic for solving Max - Minsum DP , which is a somewhat similar problem . GRASP is a metaheuristic procedure , proposed by Feo and Re - sende [ 13 ] . The main components of GRASP are the construction and the improvement phases . In the construction phase , GRASP creates a complete solution by iteratively adding components of a solution with the help of a carefully designed greedy function , which is used to perform the selection . The improvement phase then takes the incumbent solution and performs local perturba - tions in order to get a local optimal solution , with respect to some 64 O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 predeﬁned neighborhood . Different local search algorithms can be deﬁned according to the chosen neighborhood . Next , we brieﬂy de - scribe the implementation details of the heuristic . Construction Phase . Let M k be a partial solution given by a set of k ð 1 6 k < m ) elements selected , that is exactly k variables are ﬁxed to be 1 . The initial set M 1 is constructed randomly by selecting an index i 2 f 1 ; . . . ; n g . For any i 2 f 1 ; . . . ; n g n M k , we introduce D f k ð i Þ as the marginal contribution made by element i toward M k þ 1 from the current partial solution M k . Let s k ð i Þ ¼ X j 2 M k d ij : Then , for Max - Minsum DP we deﬁne D f k ð i Þ ¼ min min j 2 M k f s k ð j Þ þ d ji g ; s k ð i Þ (cid:3) (cid:4) (cid:2) f ð M k Þ ; ð 54 Þ where f ð M k Þ is the value of the objective function with variables from M k ﬁxed to 1 . Algorithm 1 . Construction phase input : coefﬁcients d ji for j ¼ 1 ; . . . ; n and i ¼ 1 ; . . . ; n and a con - stant n output : a vector x 2 f 0 ; 1 g n / * initialize solution x * / x ð 0 ; . . . ; 0 Þ ; M 1 random index from { 1 , . . . , n } for k 1 to m (cid:2) 1 do / * create a restricted candidate list ( RCL ) * / L f 1 ; . . . ; n g n M k Order L according to function D f k as described in equation ( 54 ) RCL ﬁrst a elements of L Select random index i 2 RCL ; x i 1 ; M k þ 1 M k [ f i g end return x The GRASP algorithm uses a list of candidate components , also known as the restricted candidate list ( RCL ) . We sort the candidate variables according to their marginal contribution D f k ð i Þ to the objective function . Then we select the ﬁrst a indices to form the RCL . At each iteration of the construction phase , parameter a is a random variable , uniformly distributed between 1 and j L j , the size of the set of variables to be ﬁxed . One variable in the RCL is randomly selected at each iteration k P 1 with equal probability . It is then included into M k þ 1 and its value is set to 1 . The implementation details of the construction phase are presented in Algorithm 1 . Improvement phase . The improvement phase of GRASP has the objective of ﬁnding a local optimal solution according to some neighborhood structure . The neighbors in our problem are ob - tained by perturbing the incumbent solution in the following way . Two different variables x i and x j are selected and their values are exchanged so that P ni ¼ 1 x i remains unchanged . After the pertur - bation , the new solution is accepted if the objective is improved . Otherwise , another perturbation of the incumbent solution is performed . This phase terminates after N iterations without any Table 1 Exact solution time comparison ( 10 instances of each size ) Problem size Time n Measure Maxsum Maxmin Max - Minsum Min - Diff n ¼ 30 m ¼ 10 Maximum 360 . 8 second 1 . 594 second 0 . 547 second 41 . 50 second Median 237 . 3 second 0 . 953 second 0 . 352 second 34 . 14 second Minimum 105 . 6 second 0 . 672 second 0 . 094 second 22 . 06 second n ¼ 30 m ¼ 15 Maximum 327 . 3 second 14 . 72 second 1 . 016 second 56 . 63 second Median 232 . 1 second 5 . 969 second 0 . 602 second 42 . 53 second Minimum 80 . 26 second 3 . 141 second 0 . 218 second 25 . 89 second n ¼ 40 m ¼ 10 Maximum P 1 hour 5 . 078 second 2 . 453 second 822 . 5 second Median P 1 hour 3 . 704 second 1 . 430 second 682 . 0 second Minimum P 1 hour 2 . 781 second 0 . 578 second 535 . 8 second n ¼ 40 m ¼ 15 Maximum P 1 hour 86 . 91 second 7 . 594 second 3226 second Median P 1 hour 34 . 37 second 3 . 867 second 2678 second Minimum P 1 hour 10 . 09 second 0 . 500 second 1447 second n ¼ 50 m ¼ 10 Maximum P 1 hour 23 . 53 second 4 . 125 second P 1 hour Median P 1 hour 12 . 92 second 3 . 516 second P 1 hour Minimum P 1 hour 6 . 468 second 1 . 688 second P 1 hour n ¼ 50 m ¼ 15 Maximum P 1 hour 236 . 9 second 45 . 55 second P 1 hour Median P 1 hour 142 . 9 second 28 . 05 second P 1 hour Minimum P 1 hour 59 . 34 second 11 . 22 second P 1 hour n ¼ 50 n ¼ 20 Maximum P 1 hour 1638 second 180 . 4 second P 1hour Median P 1 hour 592 . 9 second 145 . 6 second P 1 hour Minimum P 1 hour 241 . 4 second 25 . 06 second P 1 hour n ¼ 50 m ¼ 25 Maximum P 1 hour P 1 hour 481 . 0 second P 1 hour Median P 1 hour 3274 second 81 . 95 second P 1 hour Minimum P 1 hour 1376 second 10 . 73 second P 1 hour n ¼ 50 m ¼ 30 Maximum P 1 hour P 1 hour 112 . 3 second P 1 hour Median P 1 hour P 1 hour 32 . 22s P 1 hour Minimum P 1 hour P 1 hour 17 . 63 second P 1 hour n ¼ 100 m ¼ 10 Maximum P 1 hour 395 . 9 second 201 . 0 second P 1 hour Median P 1 hour 303 . 9 second 152 . 7 second P 1 hour Minimum P 1 hour 196 . 3 second 106 . 5 second P 1 hour n ¼ 100 m ¼ 12 Maximum P 1 hour 1967 second 1019 second P 1 hour Median P 1 hour 1288 second 799 . 0 second P 1 hour Minimum P 1 hour 778 . 5 second 350 . 0 second P 1hour O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 65 improvement , where N is a given parameter in the algorithm . In the computational experiments reported below , we set N ¼ 100 . Termination criterion . The two - phase GRASP algorithm is set up to run until a ﬁxed number of iterations total it is reached . Results . The computational results of GRASP on Max - Minsum DP are given in Table 2 . Since GRASP is a randomized algorithm , we ran each instance 10 times and used the average heuristic subop - timal solution and CPU time to assess the performance . 7 . 4 . Discussion The ﬁrst set of numerical experiments ( see Table 1 ) was per - formed in order to compare relative difﬁculty of solving the MIP reformulations of two well - known measures ( Sum and Minimum Dispersion ) and two new measures proposed in the paper ( Minsum and Differential Dispersion ) . The reported computational results in Table 1 indicate that Maxsum DP and Min - Diff DP are the most chal - lenging problems ; Max - Minsum DP seems to be the easiest one to solve among the presented measures ; and Maxmin DP is some - where in between . These results imply that in some situations we may prefer the selection of a particular measure due to require - ments on the practical computational complexity of its respective linear mixed 0 – 1 programming formulation . The results may change if we vary the density of the inter - element distance matri - ces and / or the distribution used to generate the matrices . However , we can conclude that our MIP reformulations can handle problems only of relatively modest size ( around 100 variables ) in a reason - able amount of time on a standard PC . Results in the second set of numerical experiments ( see Table 2 ) show good performance of GRASP - based heuristics for solving Max - Minsum DP , which conﬁrms similar results obtained for Maxsum DP and Maxmin DP reported in the literature [ 15 , 31 ] . The implemented heuristicis rathersimple , howeveritwas able to providereasonably goodsolutions ( about3 % optimalitygapforlargestproblems ) witha far better CPU time than the exact solution via CPLEX . We also compared the solutions obtained via each measure . From our computational experiments , we conclude that the con - sidered measures do not agree in general although some may match with each other more and some others less . This implies that the efﬁciency - based measures sum and minimum do not usu - ally provide equitable dispersion among elements . Hence , to en - sure an equitable system , we need to incorporate some equity - based measure . Our results also imply that to improve efﬁciency and , more importantly , equity , the measure selection must be based on the problem context as well as improvement require - ments . Often times , more effort should be made in interpreting the equity results [ 36 ] . 8 . Conclusion In this paper , we introduce three equity - based measures for the dispersion problem to address the imbalance of studying efﬁciency and equity in the optimization literature . We believe the main con - tribution of the paper is to enhance our understanding of equity in the optimization framework for the dispersion problems . We de - velop mathematical programs with proposed equity measures being objectives and present several mixed - integer linear reformu - lations . Computational complexity and graph - theoretic interpreta - tion of these problems are studied . The principles of the proposed equity measures can be applied in many other optimization problems where the issue of equity among various entities in the system must be addressed . As for solution , we may improve the mixed - integer reformulations and develop more efﬁcient exact and heuristic algorithms . After establishing these equity measures , it would be interest - ing to study multi - objective optimization that attempts to balance efﬁciency and equity . Efﬁciency and equity - based measures must be carefully selected [ 29 ] . In addition , the model should provide a ﬂexible and interactive way for decision makers to make the tradeoff between efﬁciency and equity . It would also be interesting to apply stochastic and robust discrete optimization to address the equity issue under the uncertainty of problem parameters . Acknowledgments The authors would like to thank the anonymous referees for their helpful comments . The research of the ﬁrst two authors is partially supported by the grant from AFOSR . The research of the ﬁrst author is also supported by NSF grant CMMI - 0825993 . Table 2 Computational results for solving Max - Minsum DP via GRASP Problem size Time Exact solution total it ¼ 500 total it ¼ 1000 CPU ( s ) CPU ( s ) Gap ( % ) CPU ( s ) Gap ( % ) n ¼ 50 m ¼ 10 Maximum 4 . 125 2 . 281 0 . 757 3 . 875 0 . 757 Median 3 . 516 1 . 869 0 . 218 3 . 502 0 . 012 Minimum 1 . 688 1 . 653 0 . 076 2 . 841 0 n ¼ 50 m ¼ 15 Maximum 45 . 546 4 . 564 1 . 507 8 . 712 0 . 905 Median 28 . 047 3 . 594 1 . 002 6 . 670 0 . 611 Minimum 11 . 219 3 . 008 0 . 598 6 . 111 0 . 296 n ¼ 50 m ¼ 20 Maximum 180 . 36 5 . 453 1 . 616 12 . 034 1 . 029 Median 145 . 64 5 . 064 0 . 981 10 . 33 0 . 613 Minimum 25 . 062 4 . 492 0 . 460 8 . 100 0 . 279 n ¼ 50 m ¼ 25 Maximum 481 . 03 8 . 620 1 . 669 15 . 469 1 . 441 Median 81 . 952 7 . 243 1 . 393 13 . 115 0 . 796 Minimum 10 . 734 6 . 237 0 . 828 11 . 767 0 . 237 n ¼ 50 m ¼ 30 Maximum 112 . 30 10 . 318 1 . 1554 14 . 045 0 . 902 Median 32 . 219 8 . 874 0 . 623 13 . 118 0 . 408 Minimum 17 . 625 6 . 278 0 . 301 4 . 748 0 . 085 n ¼ 100 m ¼ 10 Maximum 201 . 02 6 . 466 3 . 718 6 . 355 4 . 034 Median 152 . 72 5 . 561 3 . 185 5 . 814 2 . 957 Minimum 106 . 52 5 . 045 2 . 335 5 . 228 2 . 493 n ¼ 100 m ¼ 12 Maximum 1019 . 5 8 . 280 5 . 003 16 . 767 3 . 871 Median 798 . 98 7 . 150 3 . 700 14 . 457 3 . 165 Minimum 349 . 99 6 . 977 2 . 653 12 . 406 2 . 478 66 O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 References [ 1 ] G . K . Adil , J . B . Ghosh , Maximum diversity / similarity models with extension to part grouping , International Transactions in Operations Research 12 ( 2005 ) 311 – 323 . [ 2 ] R . K . Ahuja , T . L . Magnanti , J . B . Orlin , Network Flows : Theory , Algorithms , and Applications , Prentice - Hall , Upper Saddle River , NJ , 1993 . [ 3 ] S (cid:2) . Ag˘ca , B . Eksioglu , J . B . Ghosh , Lagrangian solution of maximum dispersion problems , Naval Research Logistics 47 ( 2000 ) 97 – 114 . [ 4 ] B . Bollobás , Modern Graph Theory , Springer , New York , NY , 1998 . [ 5 ] I . M . Bomze , M . Budinich , P . M . Pardalos , M . Pelillo , The maximum clique problem , in : D . - Z . Du , P . M . Pardalos ( Eds . ) , Handbook of Combinatorial Optimization , vol . A , Kluwer Academic Publishers , Boston , MA , 1999 , pp . 1 – 74 . [ 6 ] J . R . Brown , The knaspack sharing problem , Operations Research 27 ( 2 ) ( 1979 ) 341 – 355 . [ 7 ] J . R . Brown , The sharing problem , Operations Research 27 ( 2 ) ( 1979 ) 324 – 340 . [ 8 ] A . Caprara , D . Pisinger , P . Toth , Exact solution of the quadratic knapsack problem , INFORMS Journal on Computing 11 ( 1999 ) 125 – 137 . [ 9 ] F . Cheah , D . G . Corneil , The complexity of regular subgraph recognition , Discrete Applied Mathematics 27 ( 1990 ) 59 – 68 . [ 10 ] R . Diestel , Graph Theory , second ed . , Springer , New York , NY , 2000 . [ 11 ] E . Erkut , S . Neuman , Analytical models for locating undesirable facilities , European Journal of Operational Research 40 ( 1989 ) 275 – 291 . [ 12 ] E . Erkut , The discrete p - dispersion problem , European Journal of Operational Research 46 ( 1990 ) 48 – 60 . [ 13 ] T . A . Feo , M . G . C . Resende , Greedy randomized adaptive search procedures , Journal of Global Optimization 6 ( 1995 ) 109 – 133 . [ 14 ] M . R . Garey , D . S . Johnson , Computers and Intractability : A Guide to the Theory of NP - Completeness , W . H . Freeman , New York , NY , 1979 . [ 15 ] J . B . Ghosh , Computational aspects of the maximum diversity problem , Operations Research Letters 19 ( 1996 ) 175 – 181 . [ 16 ] F . Glover , C . - C . Kuo , K . S . Dhir , Heuristic algorithms for the maximum diversity problem , Journal of Information and Optimization Sciences 19 ( 1998 ) 109 – 132 . [ 17 ] P . Hansen , I . D . Moon , Dispersing facilities on a network , Cah CERO 36 ( 1994 ) 221 – 234 . [ 18 ] R . Hassin , S . Rubinstein , A . Tamir , Approximation algorithms for maximum dispersion , Operations Research Letters 21 ( 1997 ) 133 – 137 . [ 19 ] H . Huang , P . Pardalos , O . A . Prokopyev , Lower bound improvement and forcing rule for quadratic binary programming , Computational Optimization and Applications 33 ( 2006 ) 187 – 208 . [ 20 ] R . K . Kincard , Good solutions to discrete noxious location problems via metaheuristics , Annals of Operations Research 40 ( 1992 ) 265281 . [ 21 ] G . Kortsarz , D . Peleg , On choosing a dense subgraph , in : Proceedings of the 34th IEEE Symposium on Foundations of Computer Science , Palo Alto , CA , 1993 , pp . 692 – 701 . [ 22 ] M . J . Kuby , Programming models for facility dispersion : The p - dispersion and maximum dispersion problems , Geographical Analysis 19 ( 1987 ) 315 – 329 . [ 23 ] C . - C . Kuo , F . Glover , K . S . Dhir , Analyzing and modeling the maximum diversity problem by zero - one programming , Decision Sciences 24 ( 1993 ) 1171 – 1185 . [ 24 ] I . D . Moon , S . S . Chaudhry , An analysis of network location problems with distance constraints , Management Science 30 ( 1984 ) 290 – 307 . [ 25 ] P . M . Pardalos , G . P . Rodgers , Computational aspects of a branch and bound algorithm for quadratic zero - one programming , Computing 45 ( 1990 ) 141 – 144 . [ 26 ] P . B . Mirchandani , R . L . Francis ( Eds . ) , Discrete Location Theory , Wiley , Hoboken , NJ , 1990 . [ 27 ] J . - C . Picard , M . Queyranne , A network ﬂow solution to some nonlinear 0 – 1 programming problems with applications to graph theory , Networks 12 ( 1982 ) 141 – 159 . [ 28 ] D . Pisinger , Upper bounds and exact algorithms for p - dispersion problems , Computers and Operations Research 33 ( 2006 ) 1380 – 1398 . [ 29 ] M . Rahman , M . J . Kuby , A multiobjective model for locating solid waste transfer facilities using an empirical opposition function , Information Systems and Operations Research 33 ( 1995 ) 3449 . [ 30 ] S . S . Ravi , D . J . Rosenkrantz , G . K . Tayi , Heuristic and special case algorithms for dispersion problems , Operations Research 42 ( 1994 ) 299310 . [ 31 ] M . G . C . Resende , R . Marti , M . Gallego , A . Duarte , GRASP and path relinking for the max – min diversity problem , Computers and Operations Research ( 2008 ) , doi : 10 . 1016 / j . cor . 2008 . 05 . 011 . [ 32 ] M . Tawarmalani , S . Ahmed , N . V . Sahinidis , Global optimization of 0 – 1 hyperbolic programs , Journal of Global Optimization 24 ( 2002 ) 385 – 416 . [ 33 ] M . B . Teitz , Toward a theory of public facility location , Papers in Regional Science 21 ( 1968 ) 35 – 51 . [ 34 ] R . R . Weitz , S . Lakshminarayanan , An empirical comparison of heuristic methods for creating maximally diverse groups , The Journal of the Operational Research Society 49 ( 1998 ) 635 – 646 . [ 35 ] T . - H . Wu , A note on a global approach for general 0 – 1 fractional programming , European Journal of Operational Research 101 ( 1997 ) 220 – 223 . [ 36 ] H . P . Young , Equity : In Theory and Practice , Princeton University Press , Princeton , NJ , 1993 . O . A . Prokopyev et al . / European Journal of Operational Research 197 ( 2009 ) 59 – 67 67