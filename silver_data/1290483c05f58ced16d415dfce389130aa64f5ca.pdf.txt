225 A Space of Presentation Emphasis Techniques for Visualizing Graphs Emanuel G . Noik Computer Systems Research Institute University of Toronto 6 King ' s College Road Toronto , Ontario , Canada m4s 1a1 e - mail : noik @ db . toronto . edu Telephone : ( 416 ) 978 8609 Abstract The graph topo - visual formalism has been shown to be well - suited to the task of visualizing complex rela tions on a set of elements . Unfortunately , most visual formalisms do not scale very well . This observation is particularly true of graphs , which even when hand - drawn by an artist , are seldom meaningful when the number of nodes or links exceeds a very modest threshold - typi cally only a few hundred elements . This severe limitation has prompted many researchers to seek altemative visu alization techniques that may eliminate , or , at the very least , rajse this threshold . In this paper we analyze these recent efforts , describe an abstract space of presentation emphasis techniques , and locate the current approaches within this space . The contributions of this paper are several : ( 1 ) a significant portion of recent work is collected and reviewed ; ( 2 ) a common set of criteria and a taxonomy of graph views are proposed ; these , ( 3 ) permit a more direct comparison of previous work ; which helps to , ( 4 ) identify common shortcomings and limitations ; which in tum , ( 5 ) suggest future directions . Keywords : presentation emphasis techniques , fisheye views , relational data visualization , graphs , nested graphs . 1 Introduction A perusal of recent literature in relational data visual ization and allied fields reveals a smattering of references to a variety of presentation emphasis techniques intended to improve the visualization of large information spaces . To a large extent , these techniques have been aimed at the visualization of a variety of graph structures : hierarchies , directed graphs and networks , general undirected graphs , and nested ( hierarchically clustered ) graphs . The graph has long been recognized as an effective topo - visual for malism ; whereas a graph depicts binary relations on a set of elements , a nested graph can , in addition , express one - to - many relations [ 8 ] . Although the number of papers that deal directly with emphasis in graphical presentation is relatively small , the vocabulary used to describe fundamental concepts has grown somewhat large and inconsistent . More dis tressing , however , is the fact that although a variety of sophisticated emphasis techniques have been described in the literature , there is still no common framework for comparing these techniques , measuring their " expres sive power " , and validating their overall effectiveness . While we do not suggest that we have solved these diffi cult problems , we hope that we have nevertheless taken a first step to remedy the situation . This paper is organized as follows : Section 2 defines basic concepts , terminology , and a taxonomy of graph views ; Section 3 summarizes and compares recent pre sentation emphasis techniques in relational data visual ization ; Section 4 describes an abstract space of emphasis techniques and locates the individual techniques within this space ; and Section 5 identifies common limitations and suggests future research goals . 2 Terminology 2 . 1 Graphs and Graph Diagrams A graph G = ( V , A ) consists of a set of vertices V , and a set of arcs A ~ V x V . A nested graph N = ( V , A , C ) , also contains a set of containment arcs C ~ V x 2 v ; in most cases , the containment relation is restricted to be hierarchical ( i . e . , C is a forest of trees ) . Vertices , arcs , and blobs may be labelled . A graph diagram or layout is a visualization of the graph in which vertices are typically represented by nodes , arcs are depicted as links , and containment arcs are usually displayed as boxes ( closed rectangular or polyg onal regions ) that fully enclose the nodes associated with the nested vertices . Graph layouts may be hand - drawn Graphics Interface ' 94 226 or may be generated automatically by a graph layout al gorithm [ 4 ] . In addition to textual labels , nodes may also have additional content ( e . g . , graphical icons ) . 2 . 2 Emphasis - related Concepts The following terminology comes in large part from the generalized fisheye view ( FEy ) formalism [ 7 ] . The generalized FEV metaphor is based on the work ings of the fisheye or very wide angle lens used in pho tography , which magnifies the image at multiple levels - greatest near the lens ' focus and least in its periphery . By balancing local detail and global context , FEVs can simultaneously display information at multiple levels of abstraction . When displaying large structures , the basic strategy uses a degree of interest ( DOl ) function to assign to each point in the structure a number , or priority , that quan tifies the user ' s interest in that point given the current task . Priorities may be assigned by the user , or may be automatically computed by a priority algorithm ( PA ) . In a generalized FEV , the DOl is decomposed into two components : a priori importance ( APl ) which computes the global importance of any point in the structure , and distance ( Dist ) which computes the conceptual distance between any two points . If one point is selected as the current focus of interest , or focal point ( FP ) , then in its simplest additive form , DOI ( p ) = APl ( p ) - Dist ( p , f ) is the user ' s degree of interest in point p given FP f ; thus DOl increases with APl and decreases with Dist . The proximity ( Prox ) is typically defined as the differ ence of the maximum distance and a given distance ( i . e . , Prox ( u , v ) = Distmaz - Dist ( u , v ) . An emphasis algorithm ( EA ) is defined in terms of a PA , the graph view ( see the next Section ) , and the mapping between the priority values and the associated presentation variables ( e . g . , size , colour , line style and thickness ) . In EAs for graphs , a FP is typically a vertex or a node , but can also be a coordinate in the 2 - D or 3 - D layout ; unlike the generalized FEV , some EAs are defined in terms of multiple FPs , and may use different DOl functions to compute priorities . 2 . 3 A Taxonomy of Graph Views A normal view is a layout in which all elements have identicill priorities , or , equivalently , a view with no FPs . An implicit FEV arises from the effect of point perspec tive in 3 - D , by which nearby points loom large and dis tant points appear small ; implicit FEVs are usually static ( e . g . , [ 5 , 14 , 22 ] ) , but may be dynamic if the 3 - D layout is permitted to be altered ( e . g . , by moving higher priority nodes to the foreground [ 21 ] ) . There are at least three types of emphasized views ( EVs ) . Aftltered view displays a subset of elements and suppresses the rest - this can be accomplished by zooming or by filtering according to el ements ' priorities ( display elements with priorities above some threshold , suppress others ) . A distorted view em phasizes elements by distorting their sizes , shapes , and positions - either by a polor or orthogonal distorting FEV transformation ( Dist is geometric ) , by a non - geometric FEV distortion ( Dist is non - geometric ) , or by scaling at single ( local ) or multiple ( global ) levels . An adorned view emphasizes elements by varying other visual pre sentation variables such as colour , shading , line style and thickness , as well as audio [ 13 ] , and motion ( e . g . , " in - betweening " animation [ 21 ] , vertical oscillations and small random movements [ 5 ] , vibration or pulsing [ 27 ] ) . Figure 1 shows a normal view of this taxonomy , while Figure 2 shows examples of other views of the same tax onomy . Note that many of the EAs described in the next Section generate hybrid views that exhibit the properties of two or more of these basic views . 3 A Review of Recent Work We ' ve divided our review into two sections : ap proaches that are not specifically geared towards the vi sualization of graphs and those that are . 3 . 1 Non - graph - oriented Techniques Generalized Fisheye Views . This formalism for reduc ing the complexity of highly detailed visualizations by displaying subsets of the most relevant details [ 7 ] , gen erates filtering FEVs . As shown earlier , in a generalized FEV , DOI ( p ) = API ( p ) - Dist ( p , f ) , given FP f . Aircraft Maintenance Diagrams . This EA , an exten sion of the generalized FEV strategy for presenting air craft maintenance data [ 18 ] , generates filtering FEVs . The overall goal of this work was to enhance the useful ness and effectiveness of computer - based maintenance and diagnostic tools for aircraft repair technicians . Al though the visualizations in this domain were circuit schematics and mechanical parts diagrams , the underly ing data model was a directed network in which vertices represented components and arcs represented physical and functional relationships between the components . The generalized FEV formalism was extended to cap ture multiple PPs in a directed network by rewriting Dist as the sum of shortest path distances from a vertex to the FPs . The resulting prioritization of vertices enabled the construction of nth order FEVs , similar to the generalized FEVs of trees [ 7 ] . The Perspective Wall . This EA for visualizing linear information [ 15 ] such as time , generates globally scaled views . It uses graphics hardware support to fold wide 2 - D charts into 3 - D visualizations consisting of a center Graphics Interface ' 94 panel for showing detail and two perspective panels for displaying context . The perspective view provides ef ficient space utilization for 2 - D charts with wide aspect ratios , and generates a FEV effect : it emphasizes the neighbourhood of the detailed view by making it larger than the more distant parts of the contextual view . The trade - off between detail and context is controlled by ma nipulating the degree of folding , the width of the detail panel , and the angle of the field of view . The single FP is changed by scrolling the wall as one would a sheet in a player piano . Tree - Maps . This EA for presenting hierarchical infor mation [ 12 , 13 , 28 , 32 ] , generates hybrid locally scaled and adorned views . A hierarchy is drawn as a set of nested boxes in which each node is depicted as a rectan gular region composed of the rectangular regions that rep resent its children . The main advantage of the method is its ability to visualize large hierarchies , which it achieves through its linear top - down space - filling layout algo rithm . Tree - Maps can emphasize nodes in the hierarchy by a two step process . First , each node is assigned a weight ( by the user of application ) subject to the con straint that this weight is greater than or equal to the sum of the weights of the node ' s children . Next , the layout algorithm ensures that the total area in the drawing allo cated for each node is proportional to its weight . In this manner , more important nodes are emphasized by being drawn larger than nodes of lesser importance . Notice that while Tree - Maps provides the mechanism to generate visualizations that incorporate emphasis , it does not solve the problem of assigning meaningful weights to nodes given a set of FPs . Stretch Tools . This EA [ 25 ] used to manipulate 2 - D screen space , generates locally scaled views . The user interface is based on the metaphor of stretching a rub ber sheet by using handles and clamps . A handle , when placed on the screen and pulled causes the screen ( and the graphical objects displayed on the screen ) to expand on one side of the handle and contract on the other . Clamps impose constraints on the movement of handles by join ing handles with one another . Although the EA demonstrates the potential effective ness of the rubber sheet metaphor , the approach has sev eral undesirable properties . First , the technique does not provide a way to enlarge a single region without affecting an entire row or column of regions . Second , because lo cal scaling is used , the regions near a FP are not enlarged automatically , but remain as small as remote regions ; to generate a FEV effect , more handles must be explicitly added to scale diagrams at multiple levels . Third , orthog onal stretching caused large discontinuities at the region " " ~ : 227 boundaries failing to smoothly integrate individual re gions into a coherent layout . On the positive side , since the EA can be used to stretch a screen that contains arbitrary graphical objects , it follows that the approach can be used to manipulate drawings of graphs - both flat and nested . 1 Morphing . This EA [ 26 ] is based on image transfor mation technology and generates globally scaled views . It was proposed to overcome the difficulties associated with StretchTools [ 25 ] , and allows users to specify polyg onal FP regions ; it global scaling is used to enlarge the interior of the selected regions while simultaneously ad justing the remainder of the layout so that the magnified areas are smoothly integrated with the demagnified ones . 3 . 2 Graph - oriented Techniques Generalized FEVs of Trees . This EA for simplifying the display of trees by suppressing less relevant nodes [ 7 ] , generates filtering FEVs . A generalized FEV of a tree is obtained by providing specific instantiations of the API and Distfunctions . Specifically , Dist is the path distance between two vertices , API is the distance from the root of tree , and DOI ( v ) = - ( Dist ( v , f ) + Dist ( v , root ) . This treats the internal nodes as intrinsically more important than the leaves of the tree . An nth order FEV is obtained by only displaying points with DOI ( v ) ; : : : - ( 3 + 2 * n ) . SemNet . Three EAs for the 3 - D networks of SemNet were proposed : clustering ( filtering FEV ) , 3 - D point per spective ( static implicit FEV ) , and sampling density ( fil tering FEV ) [ 5 ] . In clustering , recursive subdivision of the 3 - D graph volume yielded an 8 - ary tree with SemNet nodes partitioned among its leaves ; tree distance ( an ap proximation of Euclidean distance ) was used in the DOl function . Although not implemented , the third EA was motivated by the workings of the human retina which samples an image den " sely at its center of focus and in successively less detail for points further away . All three EAs were defined in terms of a single FP . Topographic Networks . This EA for displaying to pographic networks [ 10 , 11 ] , generates hybrid filtering fisheye and non - geometric distorted fisheye views . The FEV was formulated in terms of a single FP ; the DOl metric was used to both , determine the amount of detail to be displayed ( e . g . , omit node labels ) , and to distort the positions and sizes of nodes . 1 In fact , the authors show an example of stretching screens generated by the prototype graph browser which was used to display graphical FEVs [ 23 , 24 ] . ~ ~ ~ : Graphics Interface ' 94 228 Cone Trees . Cone trees display hierarchical information by using 3 - D graphics and interactive animation [ 22 ] . By limiting the domain of inputs to hierarchies , Cone Tree visualizations were not exposed to many of the problems that complicated the design of SemNet [ 5 ] and increased the cognitive load placed on its users . Cone tree visu alizations support two types of FEVs : distortion from 3 - D point perspective ( static implicit FEY ) , and filtering through interactive gardening operations ( filtered view ) . Additionally , the Cone Tree search facility automatically rotates cones to bring the target node to the front of the display , thereby relieving the user from an otherwise difficult manual searching task . Gardening consists of three types of operations : in pruning , the descendants of a selected node are hidden ; growing restores hidden nodes ; the prune others operation prunes the siblings of the selected node leaving only the selected substructure visible . The last operation , in particular , allows a user to interactively select FPs , and can be used in conjunction with the search facility to simplify a large , complex hi erarchy . Ironically , the highly interactive nature of the technique makes it less appropriate for exploring very large hierarchies - a more automatic solution would be preferred ( i . e . , it is unrealistic to expect users to work hard to simplify visualizations of large hierarchies ) . Compound Digraph Display Methods . Three multi viewpoint perspective ( MVP ) EAs [ 17 , 29 ] have been applied to drawings of compound digraphs [ 30 ] : the fisheye EA uses a polar transformation to map each point in the original drawing to the perimeter of a circle ( polar distorting FEY ) ; the orthogonal fisheye EA uses inde pendent Cartesian transformations to map each point to the perimeter of a square ( orthogonal distorting FEy ) meaning that lines that were parallel to the x or y axis in the normal view remain parallel to these axes in the distorted view ; . in the biform EA , FP areas are magnified uniformly and others are de - magnified uniforml y ( locall y scaled view ) . A related publication [ 3 ] describes three properties that should be preserved when a drawing is transformed : 1 . Orthogonal ordering : preserve the vertical and hor izontal ordering of points ( e . g . , if p is north - east of q in the normal view then p ' must be north - east of q ' in the distorted view ) . 2 . Topology : the inside of a closed continuous curve must be mapped to the inside of a closed continuous curve ( i . e . , if there is no overlap in the normal view , there must be no overlap in the distorted view ) . 3 . Clusters : objects that are proximate in the normal view must also be proximate in the distorted view . ~ : Document Associative Networks . This EA for simpli fying the task of information retrieval [ 6 ] , generates hy brid filtering fisheye , globally scaled , and adorned views . The approach is centered around a common visually dis played network structure : an associative network . The user interface visualizes networks using the generalized FEVformalism in which a node ' s API is its degree ( num ber of incident arcs ) and Dist is the sum of arc weights along a shortest path . A node is displayed only if its DOl exceeds a threshold . Inexplicably , however , only the API rather than the DOl is used to determine the size of each displayed node . In addition , shading is also used to further emphasize interesting ( larger ) nodes . The FP ( node ) is drawn as large as the largest node in the EV . The shape of links is also used to convey information about the structure of the network : links are widest at the FP and narrow as they connect nodes that are more distant from the FP . Interactive Graph Layout . This approach comprises interactive or algorithmic sub graph selection , layout al gorithm assignment , and sublayout composition [ 9 ] , and generates hybrid locally scaled and adorned views . The nodes in a selected subgraph can be enlarged to empha size the subgraph . For example , to emphasize a path , the nodes on the path can be positioned by a row or column layout algorithm , their bounding boxes can be magni fied , and an alternative font ( type and size ) can be used to render their textual labels . Since interactive layout al gorithm assignment is required to specify multiple local scaling distortions , it is unclear whether the technique is appropriate for generating EVs of large graphs . Graphical FEVs of Graphs . This technique [ 23 , 24 ] generates hybrid filtering fisheye and distorting fisheye ( polar and orthogonal ) views . " Graphs " implies that the technique can be applied to non - hierarchical graphs , while " graphical " implies that the technique furnishes a graphical interpretation of FE Vs which integrates layout considerations into the fisheye formalism : the position , size , and level of detail of displayed nodes are computed based on client PAs . A graphical FEV is obtained by magnifying the nodes of greater interest and correspondingly demagnifying nodes of lesser importance , and recomputing the posi tions of all nodes and link bend points . Although the client PAs can be modified to ignore the geometry of the normal view , the technique has been designed to function primarily as a distortion of existing layouts . For exam ple , the position of a node in the FEV is a function of its position and the position of the FP in the normal view ( i . e . , Dist is the Euclidean distance between nodes in the normal view ) . ~ : Graphics lnterface ' 94 Although graphical FEVs can be implemented effi ciently using dedicated graphics hardware , the technique is limited to non - nested graphs with a single FP . Abridgment . This EA , used in the D - ABDUCTOR sys tem [ 16 ] for viewing and manipulating compound di graphs [ 30 ] , generates hybrid filtering fisheye and non geometric distorting fisheye views . Priorities are com puted as a linear combination of three quantities : struc tural importance ( vertex nesting depth ) ; semantic im portance ( API ) ; and focal importance ( proximity to the set of PPs ) . Priorities can be used in two ways : in a hybrid drawing , nodes with priorities less than a lower threshold are suppressed , those between the lower and upper thresholds are reduced , while those with priori ties greater than the upper threshold retain their original sizes ; in a proportional drawing , nodes ' sizes are directly proportional to their priorities . Animation can be used to reduce abrupt changes caused by a change in the set of FPs . Variable Zoom . This EA [ 27 ] generates hybrid filtering fisheye and globally scaled views of hierarchically nested graphs . The EA is similar to the Biform Display Method [ 17 ] , and is limited to drawings in which the projections of nodes on the x and y axes do not overlap . The con tents of each node are recursively rescaled in a top - down fashion . Within each node , selected nodes are magni fied while the rest are demagnified ; the EA computes scale factors that preserve a node ' s size while resizing and repositioning its contained nodes . A balance factor is used to control the ratio of detail to context at each level in the hierarchy , meaning that all zoomed nodes at a given level are magnified equally . Variable Zoom , like StretchTools [ 25 ] , was designed for interactive rather than automatic operation - the user interacts to selectively magnify and demagnify portions of the display . Unlike Stretch Tools , however , which permits arbitrary distor tions of the screen , the distortions obtained by this EA are more restrictive due to its use of the balance factor as described above . Furthermore , without explicit notions of DOl and decomposition into API and Dist , these and other techniques [ 9 , 15 , 17 , 22 ] are less appropriate for automatic generation of EVs . Fractal Views of Trees . This EA exploits fractal self similarity to aid the visualization of large trees in 3 - D [ 14 ] , and generates hybrid filtered , static implicit fisheye , and globally scaled views . A node ' s priority is itsfractal value which has the following general form : F V ( focus ) F V ( child ( x» = 1 ( CN z - tr ) x FV ( x ) , , ' , , . . . : : : - 229 where Nz is the branching factor of node x , D is a fractal dimension , and 0 < C : 5 1 . The fractal filtering mechanism has one nice property that the generalized FEV of trees [ 7 ] doesn ' t : it guaran tees that as the FP changes , the number of nodes whose fractal value exceeds a specified threshold will remain nearly constant regardless of branching factor . Thus if only nodes whose fractal values exceed the threshold are displayed , both the visual complexity ofthe resulting lay outs and the corresponding system response times will remain relatively constant as the FP is changed . In addi tion to this / raCIal pruning , each visible node is resized so that its size is proportional to its fractal value . PL UM . This system supports the visualization of abstract data in 3 - D [ 21 ] , and generates hybrid implicit fisheye ( static and dynamic ) and adorned views . Although it can generate a variety of static and dynamic visualizations , PLUM has been aimed primarily at displaying informa tion about software structures and is best at visualizing graphs , as it provides a variety of 3 - D graph layout algo rithms . PLUM supports visual emphasis in two ways . First , a client application can control a common set of graphical object properties including stylistic proper ties , sizing information , and a priority setting . Stylistic properties such as colour , font , fill and line styles can be controlled explicitly , as can the sizes of objects . The priority setting provides a general means for specifying that an object is important and should be emphasized in the display - different graphical objects may respond to the priority setting in different ways . Second , PLUM ' s built - in animation support can be used to reflect changes in the display structure . For ex ample , if an object ' s priority setting is linked to its z position , then increasing its priority could cause the ob ject to be moved from the back of the 3 - D display to the foreground . Animation can be used to make this transi tion smoother enabling the user to percei ve the desired change with less cognitive effort . Layout - independent FEVs . This EA generates hybrid filtering fisheye , non - geometric distorting fisheye , and adorned views [ 19 , 20 ] . While most distorting FEV EAs distort normal views , this EA uses built - in and client PAs to guide the drawing of the EV . The EA supports nested graphs with multiple variable magnification strength FPs , and generates EVs by a two step process . First ver tex priorities are computed . Next , the graph is drawn by a bottom - up layout algorithm that computes the size and shape of each node by first positioning its contained 4 · ···· : · " ~ . . . " : . - Graphics Interface ' 94 nodes . 2 An EV is generated by unifonnly scaling the bounding box of each node in proportion to its priority - thus each node is resized before it is positioned by the layout algorithm . The priority of each arc is the average of the priorities of its endpoints , and is used to vary the thickness of link line segments in the drawing . Although most EAs compute DOl values by using additive DOl functions , this EA uses the following mul tiplicative form : DOI ( v ) = API ( v ) · ( p . Wt ( v ) + ( 1 - p ) . Prox ( v ) ) The functions API , Wt and Prox return non - negative real values : AP l ( v ) is v ' s APl , Wt ( v ) is a generic measure of v ' s proximity to the FPs , Prox ( v ) is an application - specific measure of v ' s proximity to the FPs , and 0 : 5 p : 5 1 reflects the trade - off between generic and domain - specific notions of proximity . The generic mea sure of proximity is an approximation to a weighted nest ing distance to the FPs . Both Wt and Prox take into ac count the magnification strengths of the individual FPs . Continuous Zoom . This technique generates hybrid fil tering fisheye and globally scaled views [ 2 ] , which pennit users to view and navigate hierarchically nested graphs by smoothly expanding and shrinking nodes . The tech nique evolved from the Variable Zoom EA [ 27 ] and is part of the Intelligent Zoom interface to time - critical sys tems ; unlike the Variable Zoom , however , this technique calculates priorities using four quantities : the node ' s APl , alann state , connectivity to other important nodes , and perceived user interest ( detennined by node " open " and " close " actions ) . 4 A Space of Emphasis Techniques We propose a six - dimensional space of emphasis tech niques ; these " ~ xes " appear as the six right - most columns in Table 1 . We describe the contents of each column next ; we compare the techniques , point out common lim itations , and discuss future goals in Section 5 . 1 . Approach - common name of the approach and rel evant bibliographic citations . 2 . Date - date of the earliest citation . 3 . Transformation - types of transformations em ployed by the EA ; the types are : • Visualization - to - Visualization ( VlI ) : obtain the EV from the nonnal view . 2 This layout strategy pennits the generation of composite layouts [ 9 ] by assigning a possibly unique layout algorithm to each vertex . • Graph - to - Visualization ( gv ) ) : obtain the EV from the graph topology . 4 . Emphasis Technique - the types of views used to add emphasis to a visualization ( see Section 2 . 3 ) : • Implicit ( i ) . • Filtered ( I ) . • Distorted ( d ) : the nonnal view geometry can be used ( a vv transformation ) or may be ig nored ( a gv transfonnation ) . • Adorned ( a ) . 5 . Priorities - methods to obtain priorities : • Supplied ( 8 ) : ( static ) priorities are supplied by user or client PA . • Built - in APl ( A ) : APl is computed by a built in PA . • Built - in Dist ( D ) : distances ( proximities ) are computed by a built - in PA . • Client APl ( a ) : pennit specification of alter nate APl PAs ( i . e . , API is not static ) . • Client Dist ( d ) : permit specification of alter nate distance ( proximity ) PAs . 6 . Number of Focal Points - number of FPs explicitly supported by the EA : • None ( 0 ) : no notion of FP . • Single ( 1 ) : a single FP . • Multiple ( * ) : one or more FPs . 7 . Animation - is animation used for emhasis ? 8 . Inputs - class of inputs supported by the EA ; classes are listed from the least to the most expressi ve - each class is fully contained in the next more expressive class : • Sequences ( 8 ) : one - dimensional data ( e . g . , time line ) . • Hierarchies ( h ) : : : > 8 : hierarchical graphs ( e . g . , a tree or a forest of trees ) . • Flat graphs ( g ) : : : > h : general graphs . • Nested graphs ( n ) : : : > g : graphs in which ver tices may be ( hierarchically ) nested . • Beyond nested graphs ( * ) : : : > n : any graphical visualization . ~ " " " " " ' ; > " ' ~ " ' " " ' . ' . : . . : . ' Graphics Interface ' 94 Note that the product of the legal pattems of each column of Table 1 suggests that the space has 4 . 15 . 32·3·2· 5 = 57 , 600 points . However , some patterns in one column are not independent of the patterns in another ( i . e . , the axes are not completely orthogonal ) ; determining the exact shape of the reachable space is one topic of future work . 5 Discussion and Future Work In this section we summarize some of the observations that can be drawn from the contents of Table 1 , and cast these into goals for future graph visualization systems . Goal 1 ( Mixed - mode visualization generation ) Emphasis algorithms should be capable of combining existing and transformed layout information with newly generated layout information . The entries in the Transformation column are almost mutually exclusive . This means that all techniques , with the exception of three that allow simple forms of client PAs , either generate a visualization from domain data , or else transform an existing drawing into a new drawing . Another possibility is to use both approaches simultane ously . For example , a new drawing could contain some parts of the original drawing and others that were gener ated from scratch . Goal 2 ( Presentation emphasis techniques ) Determine effective presentation strategies to convey em phasis information . The distribution of patterns in the Emphasis Tech nique column indicates that to date , most EAs can be grouped into roughly three categories : filtering , distort ing , and filtering - distorting hybrids . 3 The Adorned col umn is very sparse , indicating that altemative presenta tion emphasis strategies based on varying other presen tation variables ( e . g . , colour , texture , lighting , motion , audio , etc . ) have not been investigated . Filtering and distortion are two very basic techniques - a quick glance at a presentation graphics book ( e . g . , [ 31 ] ) is sufficient to conclude that far greater possibilities remain unexplored . Goal 3 ( Client priority algorithms ) Find a fleXible high - level language to specify client priority algorithms . 3 It is interesting to note that generalized FEVs were originally pro posed as a filtering mechanism ; perhaps the more sophisticated presen tation emphasis techniques such as distortion required more advanced display technology , for they were not studied for another five years . Fi ltering and distortion serve different purposes , however , thus the presence of filtering - distorting hybrids is not surprising . 231 The a and d subcolumns of the Priorities column are virtually empty - just 6 entries out of 44 , showing that most techniques do not permit the specification of client PAs . Of the ones that do , the PAs must typically be im plemented in a low - level language - a flexible high - level specification method is required to build visualization tools with flexible generic presentation emphasis facil ities . Of the remaining techniques , 5 circumvent this problem somewhat by using client supplied priority val ues ; unfortunately , the " client " is typically the user - expecting the user to manually specify priorities for a large number of elements is unacceptable ; furthermore , in this arrangement , changing the set of PPs means that the priorities must be recomputed and resubmitted to the visualization tool , possibly incurring additional commu nication overhead . The remaining 12 techniques , use fixed PAs which are domain - specific and non - portable . Goal 4 ( DOl mapping ) Find ways to specify the map ping between priority values and presentation variables . Although this property is not reflected in Table 1 , it is important to be able to easily describe how differences in priorities should be reflected in the presentation aspects of automatically generated visualizations . Goal S ( Animation ) Incorporate " animation " to elim inate or reduce abrup ' t transitions in presentation vari ables caused by changes in priority values . Only 7 out of 22 techniques provide some type of animation . Animation , when effectively used , can trans form a cognitive task into a perceptual one [ 22 ] . In fact , studies of interaction with 3 - D graph layouts have shown that motion can provide more valuable perceptual clues than stereopsis [ 1 , 33 ] . Animation is also useful in 2 - D ; graphical fisheye views [ 23 , 24 ] , for example , use smooth animation to create a dynamic FEV : the distortion is con tinually recomputed and updated as the user changes the location of the FP by dragging a mouse . Goal 6 ( Validating effectiveness ) Determine a set of relevant tasks , experimental methods , and validation cri teria that could be used to measure the effectiveness of emphasis techniques . Another property that is not reflected in Table 1 , is an indication of how effective the proposed technique is at visualizing large information spaces . In fact , of all of the techniques reviewed , only two [ 11 , 27 ] have been formally tested by measuring user performance in solving tasks with the aid of EVs . Note that one way to improve the effectiveness of an emphasis technique is to reduce user disorientation by increasing layout stability when the set of FPs is changed [ 3 ] . ~ : / ~ ~ " " ' " ' , i ~ ; : . ' . ' Graphics Interface ' 94 232 Approach Date Non - graph - oriented : Generalized FEVs [ 7 ] 04 / 86 Aircraft maintenance [ 18 ] 08 / 90 Perspective Wall [ 15 ] 04 / 91 Tree - Maps [ 12 , 13 , 28 , 32 ] lO / 91 Stretch Tools [ 25 ] 09 / 92 Morphing [ 26 ] 11 / 93 Graph - oriented : Generalized FEVs of trees [ 7 ] 04 / 86 SemNet ( implicit ) [ 5 ] 1988 SemNet ( clustering ) [ 5 ] 1988 Topographic networks [ 10 , 11 ] 1989 Cone trees ( implicit / search ) [ 22 ] 04 / 91 Cone trees ( gardening ) [ 22 ] 04 / 91 MVP display methods [ 17 , 29 ] 09 / 91 Associative networks [ 6 ] 10 / 91 Interactive graph layout [ 9 ] 1991 Graphical FEVs [ 23 , 24 ] 05 / 92 Abridgment [ 16 ] 05 / 93 Variable Zoom [ 27 ] 05 / 93 Fractal views of trees [ 14 ] 08 / 93 PLUM [ 21 ] 08 / 93 Layout - indep . FEVs [ 19 , 20 ] 08 / 93 Continuous Zoom [ 2 ] 05 / 94 All ideal technique ? : ? Transfor mation gv / vv . ~ , ~ , ~ . " " " , . , { . , : ; : : , : : . : ? ~ , • . " , : , : : . : : : : : : : : : : : : : . , : : , : . ? : : r ~ ~ : r ~ . ' ? : , : , : " , . . , , ~ . , , , ~ , , ~ : : : . . " : ; : : , : ~ ' ? • . : " ' : : : . : : : : •• : ~ : } . •• Emphasis Technique ill / d / a : : : : : : : . : : ' } : : : : ~ : , : ~ , ? : : : ' : . { : ' { : ~ , i : ~ : • : ~ , , ~ , : } ' : : : : : . : : : ~ : } , : : . " , , : ~ } : : : . : ' : : : : ; ; : : : : ; : : : : ; : : : . : : : : : ; : : : : : : : : : : . . ' ; : : : . : : : : ' : : : : : : : ; : : : : : : : : : } . : , : : : : : } " ' : " } ' : . " " : ' : : : : : . . . : : : , : ' : ' : : ' : . : , ~ : , : : : : : . . ' ~ : ~ : : : ' •• ig } : ' . . : : : : . . . : : : ; : . " , : : : : : " , . : : : < : •• { : ' . . : : : ; : : Priorities stAID / aid ' : : : : : : : : : ' . ; : : : : : ; : : : : : . ; : : : : : : : : : : : : : : : ; : : ' ; : : : : # of FPs 0 / 1 / * o®o oo® O®O ®OO OO® } , : ' •• : : : : ' : : { O®O : : : : ; : : : ' : : ; : : : ' ; : : : : } " " " , : O®O : : : : : •• ' : : " : : ? O®O : : : •• : : : : : : : : O®O : : : : : : : " : : : ' : : : ' : : ' ; : O®O . . , : : " " " ' : ' ; : : : : : OO® : : } ' : " : ' • ' t ' ' : : " OO® , : : •• : ? : : : : : O®O • : , } ~ } : " " : ' : ' : : ' : ' : ' : ®OO } : : •••• O®O ••• ; ; ; } OO® : : } : : : : ( • : : : } : : : : : OO® ; : : : : : : : : : : : . ; : : : : : : : : : O®O • : : : } " : : : : : : , : : : : : : : : : : : : ®OO : : : : : : ••• OO® ••• : : : : : OO® Ani ma tion ? • • • • • • • ••••••••• OO® • Inputs s / h / g / n / * - Id . . - ~ I _ I IIIIIIIIIIIIIiI • IIIIIIIIIIIIIii I IIIIIIIIIIIIIii I Table 1 : A comparison of recent presentation emphasis techniques . 6 Summary Although presentation emphasis techniques have been studied under a number of guises , the research in this field has been largely fragmented . In this paper we have collected and reviewed a significant portion of recent literature and proposed a common set of criteria which permitted a direct comparison of a number of otherwise disparate approaches . The comparison helped us to iden tify common shortcomings , which , in turn , suggested several directions for future work . References [ 1 ] K . W Arthur , K . S . Booth , and C . Ware . Evaluating 3d task perfonnance for fish tank virtual worlds . ACM Transac tions on Office Information Systems , 11 ( 3 ) : 239 - 265 , Ju ! . 1993 . [ 2 ] L . Bartram , R . Ovans , and WS . Havens . The intelligent zoom : Context - sensitive support in operator interfaces to time - critical systems . In GI ' 94 : Graphics Interface 1994 , Banff , Alberta , Canada , May . 1994 . [ 3 ] P . Eades , W Lai , K . Misue , and K . Sugiyama . Preserving the mental map of a diagram . Technical Report IIAS - RR - 91·16E , Fujitsu Laboratories , Aug . 1991 . [ 4 ] P . Eades and R . Tamassia . Algorithms for drawing graphs : an annotated bibliography . Technical Report CS - 89 - 09 , Dept . of Comp . Sci . , Brown U . , 1989 . [ 5 ] K . M . Fairchild , S . E . Poltrock , and G . W Fumas . Semnet : Three - dimensional graphic representations of large knowl edge bases . In R . Guindon , editor , Cognitive Science and its Applications for Human·Computer Interaction , pages 201 - 233 . Lawrence Erlbaum Associates , 1988 . [ 6 ] R . H . Fowler , WA . L . Fowler , and BA Wilson . Integrating query , thesaurus , and documents through a common visual representation . In ACM SIGIR ' 91 , pages 142 - 151 . ACM , Oct . 1991 . [ 7 ] G . w . Furnas . Generalized fisheye views . In ACM CHI ' 86 , pages 16 - 23 , Boston , MA , ApT . 1986 . ACM . [ 8 ] D . Hare ! . On visual fOlmalisms . Communications of the ACM , 31 ( 5 ) : 514 - 530 , May . 1988 . ~ . . . - . . . . . . . . ~ . . . . : . . : . : . . : . - Graphics Interface ' 94 [ 9 ] T . R . Henry and S . E . Hudson . Interactive graph layout . In ACM UIST ' 91 , pages 55 - 64 . ACM , 1991 . [ 10 ] J . O . Hollands . Presenting a network graphically : A com parison of perfonnance using fisheye view and scrolling . Master ' s thesis , Dept . of Psychology , U . of Ouelph , Ouelph , Ontario , Canada , 1988 . [ 11 ] J . O . Hollands , T . T . Carey , M . L . Matthews , and C . A . McCann . Presenting a graphical network : A compari son of perfonnance using fisheye and scrolling views . In O . Salvendy and Smith MJ . , editors , Designing and Using Human - Computer Interfaces and Knowledge - Based Sys tems , pages 313 - 320 . Elsevier , 1989 . [ 12 ] B . 10hnson . Treeviz : Treemap visualization of hierar chically structured infonnation . In ACM CHI ' 92 , pages 369 - 370 , Monterey , CA , May . 1992 . ACM . [ 13 ] B . 10hnson and B . Shneidennan . Tree - maps : A space filling approach to the visualization of hierarchical infor mation structures . In IEEE Visualization ' 91 , pages 284 - 291 , San Diego , CA , Oct . 1991 . [ 14 ] H . Koike and H . Yoshihara . Fractal approaches for vi sualizing huge hierarchies . In VL ' 93 : IEEE Symposium on Visual Languages , pages 55 - 60 , Bergen , Norway , Aug . 1993 . [ 15 ] 1 . D . Mackinlay , 0 . 0 . Roberson , and S . K . Card . The per spective wall : Detail and context smoothly integrated . In ACM CHI ' 91 , pages 173 - 179 . ACM , Apr . 1991 . [ 16 ] K . Misue . D - abductor 2 . 0 user manual . Technical Report IIAS - RR - 93 - 9E , Fujitsu LaboratOIies , May . 1993 . [ 17 ] K . Misue and K . Sugiyama . Multi - viewpoint perspective display methods : Fonnulation and application to com pound graphs . In 4th Intl . Con ! on Human - Computer In teraction , volume 1 , pages 834 - 838 , Stuttgart , Gennany , Sep . 1991 . Elsevier . [ 18 ] D . A . Mitta . A fisheye presentation strategy : Aircraft maintenance data . In INTERACT ' 90 , pages 875 - 880 . IFIP , Elsevier , Aug . 1990 . [ 19 ] E . G . Noik . Exploring large hyperdocuments : Fisheye views of nested networks . In ACM Hypertext ' 93 , pages 192 - 205 , Seattie , WA , Nov . 1993 . [ 20 ] E . O . Noik . Layout - independent fisheye views of nested graphs . In VL ' 93 : IEEE Symposium on Visual Languages , pages 336 - 341 , Bergen , Norway , Aug . 1993 . [ 21 ] S . P . Reiss . A framework for abstract 3d visualization . In VL ' 93 : IEEE Symposium on Visual Languages , pages 108 - 115 , Bergen , Norway , Aug . 1993 . [ 22 ] 0 . 0 . Robertson , 1 . D . Mackinlay , and S . K . Card . Cone trees : Animated 3d visualizations of hierarchical infonna lion . In ACM CHI ' 91 , pages 189 - 194 . ACM , Apr . 1991 . 233 [ 23 ] M . Sarkar and M . H . Brown . Graphical fisheye views of graphs . In ACM CHI ' 92 , pages 83 - 91 , Monterey , CA , May . 1992 . ACM . [ 24 ] M . Sarkar and M . H . Brown . Oraphical fisheye views of graphs . Technical Report 84 , DEC System Research Center , Palo Alto , CA , Mar . 1992 . [ 25 ] M . Sarkar and S . P . Reiss . Manipulating screen space with stretch tools : visualizing large structure on small screen . Technical Report CS - 92 - 42 , Dept . of Comp . Sci . , Brown U . , Providence , RI , Sep . 1992 . [ 26 ] M . Sarkar , S . S . Snibbe , and S . P . Reiss . Stretching the rubber sheet : A metaphor for visualizing large structures on small screens . InACM UIST ' 93 . ACM , Nov . 1993 . [ 27 ] D . Schaffer , Z . Zuo , L . Bartram , 1 . Dill , S . Dubs , S . Oreen berg , and M . Roseman . Comparing fisheye and full - zoom techniques for navigation of hierarchically clustered net works . In Graphics Interface ' 93 , pages 87 - 96 , May . 1993 . [ 28 ] B . Shneidennan . Tree visualization with tree - maps : A 2 - d space filling approach . ACM Transactions on Graphics , 11 ( 1 ) : 1 - 39 , lan . 1992 . [ 29 ] K . Sugiyama and K . Misue . ' good ' graphic interfaces for ' good ' idea organizers . In Human - Computer Interaction - INTERACT ' 90 , pages 521 - 526 . IFIP , Elsevier , Aug . 1990 . [ 30 ] K . Sugiyama and K . Misue . Visualization of structw - al infonnation : Automatic drawing of compound digraphs . IEEE Transactions on Systems , Man . and Cybernetics , 21 ( 4 ) : 876 - 892 , 1991 . [ 31 ] E . R . Tufte . Envisioning Information . Graphics Press , P . O . Box 430 , Cheshire , Connecticut , 06410 , 1990 . [ 32 ] D . Turo and B . Johnson . Improving the visualization of hierarchies with treemaps : Design issues and experimen tation . In IEEE Visualization ' 92 , pages 124 - 131 , Boston , MA , 1992 . [ 33 ] C . Ware , K . Arthur , and K . S . Booth . Fish tank virtual reality . In InterCHI ' 93 , pages 37 - 42 , Amsterdam , Nether lands , May . 1993 . Graphics Interface ' 94 234 r - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - , ormal View m hasized View Implicit Fisheye View ' ~ ~ cl _ _ _ - - - - . - - - = i0omed View l iltered ~ iltering Fisheye VieW ] istortin Fishe e View istorted View Scaled View dorned V ~ Figure 1 : A simple taxonomy of graph views ; note that existing categories could be further refined and more categories could be added . ( a ) A first order filtering FEY with FP : Distorting Fislzeye View . ~ m ha ' l ~ e , . . 11tered View IZoomed V1ew I ~ l [ llterlng Flshere v ~ istort ed View / Distorti ng Fisheye View I " , : , , : : " , , ~ lPolarl i ~ ~ onal l ~ [ ! on geometric I I J [ Scaled View ] ILocall § l oball I I , ~ do rned V l ~ W I ( c ) A non - geometric ( layout - independent ) distorting FEV with FP : Distorting Fislzeye View . I I I ~ ~ ~ - ~ - J - I I - lUUTlnQ fahey . t u . . : : : : : - : J ' " . , . . = ) r - ~ = = = = = : : ! . ( b ) An orthogonaJ distorting FEY with FP : Distorting Fislzeye View . r ItmphU : " " ie ( f " 1 } le . . 1 I . Bred ~ oorned vIewl I I F ~ ~ ~ ~ · ~ ' ~ ·· ~ - - - - - - - , Implicit Fisheve View IStaticl p ynami c l E Itenng FlSheye View I rh " " , " ' , , . , . . . ~ I2rthogonal l ~ - qeOmetric I Scaled View ~ Vie ~ , I ~ lobal l IL ' : : : = = = = = = = = = = = t _ _ IA " : = JO ' " : = ed : = Vle : = WI = = : : J ( d ) A non - geometric ( layout - independent ) distorting FEVwith FPs : Dynamic and Global . Figure 2 : Several emphasized views of the graph view taxonomy . ~ . • . . " . . ' : " ~ " " ~ ' \ . : . ' . ' Graphics Interface ' 94