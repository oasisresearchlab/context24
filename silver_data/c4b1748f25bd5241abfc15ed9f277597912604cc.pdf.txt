Finding subsets maximizing minimum structures (cid:3) Magnús M . Halldórsson y Kazuo Iwano z Naoki Katoh x Takeshi Tokuyama y Abstract We consider the problem of (cid:28)nding a set of k vertices in a graph that are in some sense remote , stated more formally : (cid:16)Given a graph G and an integer k , (cid:28)nd a set P of k vertices for which the total weight of a minimum structure on P is maximized . (cid:17) In particular , we are interested in three problems of this type , where the structure to be minimized is a Spanning Tree ( Remote - MST ) , Steiner Tree ( Remote - ST ) , or Traveling Salesperson tour ( Remote - TSP ) . We give a natural greedy approximation algorithm that simultaneously approximates all three problems on metric graphs . For instance , its performance ratio for Remote - MST is exactly 4 , while it is NP - hard to approximate within a factor of less than 2 . We also show a better approximation for graphs induced by Euclidean points in the plane , give an exact algorithm for graphs whose distances correspond to shortest - path distances in a tree , and give hardness and approximability results for general non - metric graphs . Abbreviated title : Subsets maximizing minimum structures Key words : Maximum Spanning Tree , Traveling Salesperson , Steiner tree , Dispersion . Subject classi(cid:28)cation : 58Q25 , 05C85 , 05C05 . 1 Introduction Let G [ P ] denote the subgraph of a graph G induced by a vertex subset P . We are interested in the following problem : Remote - MST : Given a complete edge - weighted graph G = ( V ; E ) and integer k , (cid:28)nd a subset P of V of cardinality k such that the cost of the minimum weight spanning tree on G [ P ] is maximized . We also study Remote - TSP and Remote - ST , where the objective is to maximize the minimum traveling salesman tour and the minimum Steiner tree of the induced subgraph , respectively . These problems are illustrated in Figure 1 . (cid:3) Earlier version of this paper appeared in Proc . 6th Symp . on Discrete Algorithms , 1995 . y Science Institute , University of Iceland , IS - 107 Reykjavik , Iceland . mmh @ rhi . hi . is z IBM Tokyo Research Laboratory , Yamato , Kanagawa 242 , JAPAN . iwano @ trl . ibm . co . jp , ttoku @ trl . ibm . co . jp x Kobe University of Commerce , Gakuen - Nishimachi , Nishi - ku , Kobe 651 - 21 , JAPAN . naoki @ kucgw . kobeuc . ac . jp 1 MST - Remote 4 - set and its MST Steiner - remote 4 - set and its Steiner tree TSP - remote 4 - set and its TSP tour Figure 1 : Remote planar point sets . The problems of (cid:28)nding a minimum weight spanning tree ( MST , in short ) , minimum weight Steiner tree , and minimum weight tour ( TSP , or traveling salesperson tour ) are fundamental combinatorial structures , which are not only useful in applications but also a rich source of research on exact and approximate algorithms . All of these problems consist of (cid:28)nding a subset maximizing the total weight of edges of minimum combinatorial structures constructed from the subsets . Except for Remote - ST , these structures are contained in the subgraph induced by the subset . From a practical point of view , the Remote - MST ( or Remote - ST ) k - set of a network can be viewed as the set of k nodes among which communicating information is most expensive . Thus , the remote subsets can be applied to the evaluation of the communication performance of networks . They can also be applied to clustering problems . Indeed , we originally faced these problems when trying to (cid:28)nd a good (cid:16)starting tour(cid:17) of a large TSP instance ( a circuit board drilling problem [ 18 ] that occurred at a manufacturing plant ) with more than 10 , 000 non - uniformly distributed cities . To obtain a short approximate TSP tour by construction heuristics , it is e(cid:27)ective to start with a subtour ( starting tour ) consisting of a relatively small number of sample cities capturing the global structure of the point distribution [ 19 ] . For this purpose , random sampling is not suitable , since it may miss some critical cities , and approximate TSP tours constructed from the associated starting tour often respond poorly to improvements by local search heuristics . The exact or approximate Remote - MST and / or Remote - TSP solutions seem to give better starting tours . General framework The problems under study can be generalized to the following frame - work . Let (cid:5) be a minimization problem whose solution is a subset of the edge set satisfying a particular property with respect to a given subset P of vertices . Let the cost of a solution be the sum of the weight of the edges in the solution . Let (cid:25) ( P ) denote the minimum cost value for a nodeset P . We are interesting in the following problem : Remote - (cid:5) : Given a graph G = ( V ; E ) and integer k , (cid:28)nd a subset P of V of cardinality k such that (cid:25) ( P ) is maximized . 2 Our results . We present approximation algorithms in Section 2 : in metric graphs , general graph , Euclidean graphs and tree graphs . Metric graphs are graphs with weights that satisfy the triangular inequality : for any three nodes u ; v ; w , d ( u ; v ) + d ( v ; w ) (cid:21) d ( u ; w ) . The distance of the edge e ( u ; v ) , denoted d ( u ; v ) , is the weight of the edge . One example of a metric graph is the shortest - path distance graph D ( G ) of an non - complete graph G , where the edge weight of e ( u ; v ) is de(cid:28)ned to be the weight of the minimum weight path between u and v of G . We apply in Section 2 . 1 the ' greedy furthest - point ' algorithm , to obtain simultaneous ap - proximations of all three problems in metric graphs . We obtain performance ratios of 4 for Remote - MST , and 3 for Remote - TSP , both of which are tight for this algorithm . For the Remote - ST problem , the greedy algorithm attains a ratio of 3 . For Remote - MST in general graphs , we give in Section 2 . 2 an algorithm that (cid:28)nds a solution within a factor of k (cid:0) 1 from optimal . Euclidean graphs are a special class of metric graphs , where the vertices correspond to points in the plane and the weight of an edge is the Euclidean distance between the points . The results obtained for the metric case , in combination with results on the Steiner ratio in the plane , yield asymptotic ratios of 2 . 31 ( 2 . 16 ) for the Remote - MST ( Remote - ST ) problems , respectively . Finally , in Section 2 . 4 , we give a linear time algorithm for computing Remote - ST when the set of edges with non - in(cid:28)nity weights forms a tree in G . In Section 3 , we prove approximation hardness results for the three problems . Remote - MST and Remote - TSP of general graphs cannot be approximated within a factor of (cid:10) ( n 1(cid:0)(cid:15) ) , unless NP (cid:18) ZPP . Here , n is the number of vertices in the input graph . We generalize the proofs to the remoteness versions of degree - constrained subgraph problems , with or without connectivity requirement . These problems include MST , TSP , minimum weight matching , cycle cover , degree - constrained spanning tree , and a number of other well - studied problems . On metric graphs , these problems are also NP - hard to approximate within a factor less than 2 . The Remote - ST problem e(cid:27)ectively always works on a metric graphs , by using the shortest - distance graph of the input graph ; we show it to be hard to approximate within a ratio less than 4 = 3 . We summarize the main approximability results of the paper in the following table . It lists the results obtained for each of the MST , TSP , and ST remote problems , with lower and upper bounds for approximability in general graphs , metric graphs , and Euclidean graphs . (cid:5) General Metric R 2 l . b . u . b . l . b . u . b . u . b . MST n 1(cid:0)(cid:15) k (cid:0) 1 2 4 2 . 25 TSP n 1(cid:0)(cid:15) k (cid:0) 1 2 3 ST 4 / 3 3 4 / 3 3 2 . 16 3 Related work . Problems of maximizing minimum structures have applications to the location of undesirable facilities . For instance , hazardous facilities like nuclear plants or ammunition dumps should be located as far from each other as possible to minimize vulnerability . A not insubstantial body of literature has developed on the subject (cid:21) see [ 10 ] for a survey , primarily from the management science viewpoint . The focus has been on two structures not speci(cid:28)cally dealt with in this paper : the minimum weight of any edge in the k - set , and the average , or equivalently the sum , of the weights of edges between pairs in the k - set . For the former problem , known as the k - Dispersion problem , Ravi , Rosenkrantz and Tayi [ 24 ] showed that the ' greedy furthest - point ' algorithm obtains a performance ratio of 2 on metric graphs , improving on a weaker bound of [ 28 ] . They also showed that approximating within a factor of less than 2 is NP - hard . Independently , Tamir [ 26 ] proved the same upper bound for the same algorithm ( see also [ 27 ] ) . A dispersion problem with the criteria of maximizing the average distance between vertices in the k - set was also considered in [ 24 ] , and they gave a di(cid:27)erent greedy algorithm with a ratio of 4 . Hassin [ 14 ] gave an algorithm with a performance ratio of 2 . Kortsarz and Peleg [ 16 ] considered this latter problem on general weighted graphs , under the name Heavy Subgraph Problem , and gave a sequence of algorithms that converges with a performance ratio of O ( n 3 : 885 ) . While di(cid:27)erent minimum structures have been proposed in the location theory literature , we are not aware of work analyzing algorithms for such problems . If the input is a complete graph with nodes corresponding to a set of points in Euclidean space and edge weights corresponding to the Euclidean distance between the pairs of points , the problems can be regarded as belonging to computational geometry . The problem of (cid:28)nding a subset with cardinality k of a planar point set maximizing the perimeter or area of convex hull ( minimum perimeter enclosing polygon ) of the subset has been studied in the literature [ 2 , 3 , 6 ] . However , the authors know no previous results on computing subsets maximizing other minimum structures . Problems of (cid:28)nding subsets minimizing the minimum weight of a combinatorial structure are more common [ 1 , 9 , 23 , 13 ] . In particular , the problem of (cid:28)nding the k - set minimizing the weight of the minimum MST was recently studied by Ravi et al . [ 23 ] , who proved NP - hardness and gave the (cid:28)rst approximations . The performance ratios have recently been improved to the best possible 3 for general graphs [ 13 ] and 1 + (cid:15) for Euclidean graphs [ 20 ] . Chandra and Halldórsson [ 7 ] have continued the work started in this paper , and analyzed a number of other remote problems . In particular , they gave a O ( log k ) - approximate algorithm for two problems suggested in a previous version of the current paper : computing a k - set maxi - mizing the minimum weight matching , and the k - defense problem , where the objective (cid:25) ( P ) is P v2P min u2P d ( u ; v ) . Notation A spanning tree of a node set P is a subtree of G whose node set is P . A Steiner tree of P is a spanning tree of a superset of P . A tour of P is a cycle that contains all the vertices of P . The 4 weight of a tree or a tour is the sum of the edges in it . We denote the minimum spanning tree , minimum Steiner tree , and TSP tour of P by MST ( P ) , ST ( P ) , and TSP ( P ) , respectively . The weights of these minimum solutions are denoted by mst ( P ) , st ( P ) , and tsp ( P ) . For a graph H , the maximum cost of MST ( P ) over all k - node sets P is denoted by r - mst ( H ) . In general , for a problem (cid:5) and nodeset P , the min - imum structure and the minimum value are denoted by (cid:5) ( P ) and (cid:25) ( P ) , respectively , and the optimal value of Remote - (cid:5) ( i . e . the maximum weight of the minimum (cid:5) - structure ) is denoted by r - (cid:25) ( H ) . The approximation ratio of an algorithm for Remote - MST on a given input graph G is the ratio of the largest MST weight of a set of k points to the MST weight of the k - set output by the algorithm . The same holds for other problems . The performance ratio (cid:26) of the algorithm is the maximum approximation ratio over all instances . A problem is approximable within a factor of t if there exists a polynomial time algorithm for the problem with a performance ratio at most t . A problem (cid:5) 1 is as hard to approximate as problem (cid:5) 2 if , an approximation of (cid:5) 2 within a factor of f ( n ) implies an approximation of (cid:5) 1 within a factor of O ( f ( n ) ) . Given a graph G and value (cid:13) , the bi - valued network H G ; (cid:13) is a complete graph on the same vertex set as G , where the weight of an edge is 1 if the edge is in G , and (cid:13) otherwise . Let G [ P ] denote the subgraph of G induced by a vertex subset P . Namely , P (cid:26) V ( G ) and E ( G [ P ] ) = f ( v ; u ) j ( v ; u ) 2 E ( G ) and v ; u 2 P (cid:18) V ( G ) g . The distance graph D ( G ) of a graph G has the weight of an edge ( u ; v ) equal to the length of the shortest path from u to v in G . 2 Algorithms 2 . 1 Metric graphs In this section , we assume that G = ( V ; E ) is metric unless otherwise stated . Let the distance between a node u and a set of nodes be the minimum distance between u and any node in the set , d ( v ; P ) = min p2P d ( v ; p ) . Central to our approach is the concept of an anticover . De(cid:28)nition 2 . 1 A set P of vertices p 1 ; p 2 ; : : : is an r - anticover of a graph if , 1 . d ( p i ; p j ) (cid:21) r for i 6 = j , and 2 . min i fd ( v ; p i ) g (cid:20) r for any node v 2 V . The radius of P is the largest value r for which P is an r - anticover . The size of an anticover is its number of vertices . An anticover is illustrated in Figure 2 . An anticover can be constructed e(cid:30)ciently by the following (cid:16)greedy furthest - point(cid:17) algo - rithm . 5 r Figure 2 : Anticover ( black points ) of size 7 of a Euclidean graph . Greedy ( G ) pick an arbitrary node v P fvg for i 2 to k v node in V (cid:0) P furthest from P P P [ fvg end It is easy to see that the nodeset found by Greedy is an anticover of size k , and that its radius is the distance between the node v chosen last and P (cid:0) fvg . We apply Greedy to obtain simultaneous constant - factor approximations of the remote MST , TSP and Steiner problems . The same algorithm was also applied to approximate the k - Dispersion problem [ 24 ] , as well as the Euclidean k - clustering problem [ 11 ] , indicating a level of universality of this approach and an applicability to multi - objective computing . Theorem 2 . 1 An anticover is a 4 - approximation of Remote - MST , and a 3 - approximation of Remote - ST and Remote - TSP . Proof . Let P be an anticover of G , and let r denote its radius . Let Q be any set of k points . Any pair of points in P is of distance at least r , so mst ( P ) (cid:21) ( k (cid:0) 1 ) r : ( 1 ) Each point q in Q is of distance at most r from P , thus the tree obtained by connecting Q to MST ( P ) via the shortest edge is of weight at most mst ( P ) + kr . That is , st ( Q ) (cid:20) st ( P [ Q ) (cid:20) mst ( P ) + kr : The ratio ( Steiner ratio ) of the weight of an MST of a set of k points to that of its Steiner tree is at most 2 ( k (cid:0) 1 ) = k . It follows that , mst ( Q ) mst ( P ) (cid:20) 2 k (cid:0) 1 k ( 1 + kr ( k (cid:0) 1 ) r ) (cid:20) 4 (cid:0) 2 k : 6 Similarly , st ( P ) (cid:21) k 2 r because of the Steiner ratio , and st ( Q ) (cid:20) st ( P [ Q ) (cid:20) st ( P ) + kr : Hence , a performance ratio of 3 follows . Furthermore , tsp ( P ) (cid:21) kr : Connecting each point of Q to its nearest point in P by a pair of directed edges ( with di(cid:27)erent directions ) , we can form a tour of P [ Q of length at most tsp ( P ) + 2kr . Thus , tsp ( Q ) (cid:20) tsp ( P [ Q ) (cid:20) tsp ( P ) + 2kr (cid:20) 3 (cid:1) tsp ( P ) : The Steiner ratio 2 ( k (cid:0)1 ) = k holds even if the tree is restricted to be a path , thus the results hold equally for degree - constrained versions of the problems . While the analysis of the approximation ratio in Theorem 2 . 1 obtained by Greedy appears loose , it is actually asymptotically optimal for both Remote - MST and Remote - TSP . We give lower bounds on the performance of Greedy that holds for any choice of the initial starting vertex . Theorem 2 . 2 The performance ratio of Greedy for Remote - MST on metric graphs is asymp - totically 4 . Proof . We construct a family of instances , for which Greedy is destined to perform poorly independent of its choice of a starting vertex . Let G t be an unweighted ( i . e . unit - weighted ) graph , with vertex set fc ; p 1 ; p 2 ; : : : ; p t ; q 1 ; q 2 ; : : : ; q t g . Let p 1 ; : : : ; p t ; c be connected into a path , and let each q i be connected to both p 1 and p 2 . G t contains no further edges . Let G 0 t ; z be the graph formed by taking z copies of G t , with a single c vertex common to all copies ( Figure 3 ) . Thus , we have a connected graph on 2tz + 1 nodes . For convenience , we use notations such as p 1 - vertex , p - vertex , q - vertex , and c - vertex . In order to force the algorithm to prefer the p - vertices , we perturb the distances between vertices as follows : the lengths d ( c ; p t ) are stretched to 1 + 2(cid:15) , and the lengths d ( p i ; p i + 1 ) to 1 + (cid:15) for i (cid:21) 1 . The hard instance is the distance graph D ( G 0 t ; z ) , with z su(cid:30)ciently large . Observe that the distance between q - vertices in di(cid:27)erent copies is 2t , while the distances between p 1 vertices is 2t ( 1 + (cid:15) ) . Thus , a p 1 vertex is the furthest vertex from any set of at most z (cid:0) 1 vertices . Let k = tz . The set of the (cid:28)rst z vertices selected by Greedy contains at least ( z (cid:0) 1 ) p 1 - vertices . Thus , Greedy cannot select a q - vertex adjacent to a selected p 1 - vertex . Consequently , the number of q - vertices which Greedy can select is at most t . Also , Greedy must select the vertex c , whose neighbors are all of distance at least 1 + 2(cid:15) . Thus , ignoring the (cid:15) terms , mst ( P ) (cid:20) zt + 2 ( t (cid:0) 1 ) for any set P of k points selected by Greedy . 7 p p p p c 6 3 2 1 p - vertex q - vertex p 4 p 5 Figure 3 : Lower bound example for Greedy . Let Q consist of the tz di(cid:27)erent q - vertices . Let q i and q 0 i be vertices in di(cid:27)erent copies of G t . Then , mst ( Q ) = z ( t (cid:0) 1 ) d ( q i ; q i + 1 ) + ( z (cid:0) 1 ) d ( q t ; q 0 1 ) = 2z ( t (cid:0) 1 ) + ( z (cid:0) 1 ) ( 2t ) = 4zt (cid:0) 2z (cid:0) 2t : If z = t , we have that (cid:26) (cid:21) mst ( Q ) mst ( P ) = 4 (cid:0) O ( 1 p k ) : Although the above lower bound is applicable only to the solution generated by Greedy , we conjecture that 4 , rather than lower bound of 2 obtained in Theorem 3 . 1 , is the best possible performance ratio for the problem . One plausible approach for improving on the approximation produced by Greedy is to post - process the greedy solution with local improvement changes . Having obtained an r - anticover P , it may be possible to move individual points further away from the other points . That is , for a point v 2 P with d = d ( v ; P (cid:0) fvg ) , there may exist a point u 2 V (cid:0) P such that d ( u ; P (cid:0) fvg ) > d . This would improve the bounds , using a strengthening of ( 1 ) to mst ( P ) (cid:21) P v2P d ( v ; P (cid:0) fvg ) ( k (cid:0) 1 ) = k . The hard instances constructed above demolish that hope , since no single point can be moved further away . These instances can also be easily modi(cid:28)ed to ensure that no b points can be moved 8 further away , for any (cid:28)xed b . Theorem 2 . 3 The performance ratio of Greedy for Remote - TSP is asymptotically 3 . Proof . Our construction is based on the graphs G 0 t ; z of the preceding theorem . Assume z is even , and consider an arbitrary matching of z copies of G t into z = 2 pairs . Assign each edge between each pair G t and G t 0 the weight (cid:11) = p t . Among these , we add an additional (cid:15) weight to the edges incident on p 1 - vertices , to ensure they will always be favored . Our graph G 00 t ; z is the graph obtained by adding the above edges to the original G 0 t ; z . Then , Greedy selects the same set P as in Theorem 3 . 2 , and there is a tour of P using edges from MST ( P ) as well as z = 2 matching edges between p 1 vertices . Thus , tsp ( P ) = zt + o ( zt ) . On the other hand , tsp ( Q ) (cid:21) 3zt for the set Q consisting of the q - vertices . Theorem 2 . 4 The performance ratio of Greedy for the Remote - ST problem is at least 2 : 4 . Proof . Let H be an edge - weighted graph with V ( H ) = fc ; p 1 ; p 2 ; q 1 ; q 2 ; rg . Let d ( p 1 ; q 1 ) = d ( p 1 ; q 2 ) = 2 , d ( p 1 ; r ) = 1 : 5 , and d ( c ; r ) = d ( r ; p 2 ) = 0 : 5 , and let the distance between other pairs of vertices be the shortest distance within this tree . The hard instances H z we construct , consist of z copies of H sharing the same c vertex , with distance between vertices of di(cid:27)erent copies determined by shortest distance . Let k = 2z . Let P ( Q ) be the set of p i ( q i ) vertices , respectively . We may assume Greedy selects all the p 1 vertices , followed by the p 2 vertices , for a cost of st ( P ) = ( 2 + 1 = 2 ) k = 2 = 5 = 4k . On the other hand , st ( Q ) = 6 = 2k = 3k . Hence , (cid:26) (cid:21) st ( Q ) = st ( P ) = 2 : 4 . The best construction we have for Remote - ST ( omitted ) has approximation ratio of Greedy is 38 = 15 (cid:25) 2 : 533 . Thus , the precise determination of the performance ratio of Greedy for Remote - ST remains an open problem . 2 . 2 General graphs We give an approximation algorithm for Remote - MST on general graphs , with a performance ratio of k (cid:0) 1 . For a graph G and a positive weight (cid:11) , de(cid:28)ne G (cid:11) to be the subgraph of G on V ( G ) with edges whose weight is at most (cid:11) . HeavyEdge ( G ) Determine the largest (cid:11) such that G (cid:11) is not ( n (cid:0) k ) - vertex - connected . Let C be a cutset of G (cid:11) of size n (cid:0) k . Output P = V (cid:0) C . end The desired (cid:11) can be found by binary search on the at most (cid:0) n 2 (cid:1) di(cid:27)erent edge - weights . Since the subgraph induced P is not connected in G (cid:11) , an MST of P must contain an edge of weight at 9 least (cid:11) . On the other hand , if edges of weight (cid:11) are added to G (cid:11) , any k - set must be connected . Thus , r - mst ( G ) (cid:20) ( k (cid:0) 1 ) (cid:11) (cid:20) ( k (cid:0) 1 ) mst ( P ) : Corollary 2 . 5 HeavyEdge has performance ratio of k (cid:0) 1 for Remote - MST . For the Steiner tree problem , it su(cid:30)ces to consider the distance graph of the input graph , which satis(cid:28)es the triangular inequality . Thus , we obtain the following corollary of Theorem 2 . 1 . Corollary 2 . 6 Remote - ST of a general graph can be approximated within a factor of 3 . 2 . 3 Euclidean graphs Let P be a set of n points fp 1 ; : : : ; p n g in the plane . The Euclidean graph of P is the complete graph on the nodeset P where the weight of an edge ( p i ; p j ) is the Euclidean distance d ( p i ; p j ) . We consider algorithms for approximating Remote - MST and Remote - ST of this graph . The anticover de(cid:28)ned in the previous section gives a geometric covering of P by k circles of radius r , each of which is centered by a point in P . Since st ( P ) (cid:21) p 3mst ( P ) = 2 [ 8 ] in the Euclidean case , we immediately obtain the following . Corollary 2 . 7 An anticover is a 4k(cid:0)2 p 3 ( k(cid:0)1 ) - approximation of Remote - MST and a 2k + p 3 ( k(cid:0)1 ) p 3 ( k(cid:0)1 ) - approximation of Remote - ST in Euclidean graphs . Thus , the approximation ratios are asymptotically at most 4 = p 3 (cid:25) 2 : 309 for Remote - MST , and ( 2 + p 3 ) = p 3 (cid:25) 2 : 155 for the Remote - ST . The worst anticover leads us to a 2 . 448 approximation Greedy gives a better solution Figure 4 : Approximation by circle covers . Unlike in the metric case , it seems that the approximation ratio depends on the choice of the anticover . For the example in Figure 4 , the worst anticover has a ( 2 p 3 + 4 ) = 3 ) (cid:25) 2 : 448 approximation ratio , which is near to the upper bound 14 = 3 p 3 (cid:25) 2 : 694 for the Remote - MST 4 - set . Note : If we consider the anticover created by Greedy , we can obtain a slightly better analysis than Corollary 2 . 7 . A key di(cid:27)erence from the metric case is that the length of a minimumSteiner tree of m points in a unit circle must be less than m(cid:0)0 : 1 ( m(cid:0)3 ) if m > 3 for the Euclidean case 10 ( we omit the proof ) . We can further squeeze the approximation ratio to ( 1 : 95 ) ( 2 = p 3 ) (cid:25) 2 : 2517 for the Remote - MST problem by modifying the algorithm itself ; indeed , this can be attained by modifying the output of Greedy . Unfortunately , the current proof requires a lengthy and ugly case - study , and we do not include it in this paper . 2 . 4 Tree networks In this section , we consider graphs in which the set of edges with (cid:28)nite weights forms a tree . Let T be a weighted tree on n nodes . We assign 1 to each edge of the complement graph T c of T in the complete graph of order n , and de(cid:28)ne G ( T ) = T [ T c . We (cid:28)rst give an O ( n ) time algorithm for the Remote - ST k - set of G ( T ) . Theorem 2 . 8 The Remote - ST k - set of G ( T ) can be computed in O ( n ) time . Proof . Clearly , we should select k leaves . If k exceeds the number of leaves of T , every set of k nodes containing all leaves forms the ( unique ) optimal Remote - ST k - set . If k = 2 , the problem is the diameter path problem on a tree , and can be solved in linear time . We can apply the incremental strategy developed by Peng et al . [ 22 ] for computing a k - tree core . A key fact is that any optimal Remote - ST ( k (cid:0) 1 ) - set must be contained in an optimal Remote - ST k - set . A direct modi(cid:28)cation of the algorithm of Peng et al . [ 22 ] runs in O ( minfkn ; nlog ng ) time , and the one of the improved algorithm of Shioura and Uno [ 25 ] runs in O ( n ) time . Remote - MST of G ( T ) is not a well - de(cid:28)ned problem , since we can almost always (cid:28)nd a subset P whose MST has in(cid:28)nity weight . If we modify the de(cid:28)nition of the remote k - set P so that mst ( P ) is maximized on the condition that mst ( P ) 6 = 1 ( we call it connectivity condition ) , MST ( P ) must be an induced subtree of P in T ; thus , the problem becomes a special case ( where all edge weights are non - positive ) of the weighted ( k (cid:0) 1 ) - cardinality tree problem de(cid:28)ned by Fischetti et al . [ 12 ] if we reverse the sign of all weights of T . We can thus apply Fischetti et al ' s O ( k 2 n ) time dynamic programming algorithm . Moreover , we can improve it to O ( kn ) . Theorem 2 . 9 The weighted ( k(cid:0)1 ) - cardinality tree of a weighted tree can be computed in O ( kn ) time . Hence , the Remote - MST k - set of G ( T ) under the connectivity condition can be computed in O ( kn ) time . Proof . We only give a proof for the computation of optimal Remote - MST k - set . For simplicity , we assume that T is a rooted binary tree ( we can easily modify the algorithm for non - binary trees ) . We cut a rooted tree T at the nearest branch v to the root r , and obtain two subtrees T 1 and T 2 . T 1 [ T 1 = T and T 1 \ T 2 = frg . Suppose we have the optimal Remote - MST k - set and the optimal Remote - MST j - sets containing v , for j = 1 ; 2 ; : : : ; k of each of T 1 and T 2 . Then , the optimal Remote - MST k - set of T , together with the optimal Remote - MST j - set containing r for j = 1 ; 2 ; : : : ; k , can be computed in O ( k 2 ) time , by combining those of T 1 and T 2 . We improve this time complexity as follows : We say that a node u of T is heavy if both of its descendent trees have at least k = 2 nodes , and light otherwise . The number of heavy 11 nodes is at most n = k . We separately charge the cost of the operations at the heavy nodes , which is O ( kn ) in total . Let f ( n ) be the cost for operations at all light nodes of T . At a light node , suppose that the size of T i is n i . Then , the computing time at the node is O ( min ( n 1 ; k ) min ( n 2 ; k ) ) . Thus , the cost function f ( n ) ( up to a constant factor ) follows the formula f ( n ) (cid:20) f ( n 1 ) + f ( n 2 ) + min ( n 1 ; k ) min ( n 2 ; k ) . We can see that g ( n ) = minf2kn ; n 2 g satis(cid:28)es g ( n ) (cid:21) g ( n 1 ) + g ( n 2 ) + min ( n 1 ; k ) min ( n 2 ; k ) . Case 1 : If 2k (cid:21) n , the formula follows from n 2 (cid:21) n 2 1 + n 2 2 + n 1 n 2 . Case 2 : If n (cid:21) 2k (cid:21) n 1 (cid:21) k > n 2 , 2kn (cid:21) n 2 1 + n 2 2 + kn 2 easily follows . Case 3 : If n 1 (cid:21) 2k and k > n 2 , 2kn (cid:21) 2kn 1 + n 2 2 + kn 2 = 2k ( n 1 + n 2 ) (cid:0) n 2 ( k (cid:0) n 2 ) . Hence , f ( n ) < cg ( n ) for some constant c , thus is O ( kn ) . The same algorithm can compute Remote - MST k - sets ( with connectivity condition ) of decomposable graphs , such as series - parallel graphs , in O ( kn ) time . 3 Hardness The decision version of Remote - MST ( to decide whether there exists a set of k vertices whose MST weight is more than a given threshold ) is obviously in NP . Instead of showing NP - hardness , we show approximation - hardness for both general and metric graphs . We shall be primarily interested in approximating the remote problems within a function independent of k . Thus , we ask about the worst - case performance ratio as k ranges from 1 through n . Theorem 3 . 1 Approximating Remote - MST is as hard as approximating Independent Set . Proof . Let g be the gap in the approximability of Independent Set . Thus , for some value R , determining if (cid:11) ( G ) = R or (cid:11) ( G ) (cid:20) R = g is hard . Let k be R , and let (cid:13) be a value greater than k . We construct a bi - valued graph H = H G ; (cid:13) on the same vertex set as G , with the weight of an edge being 1 if contained in G and (cid:13) otherwise . Refer to Figure 5 . If there is an independent set of size k in G , then that set has a value r - mst = ( k (cid:0) 1 ) (cid:13) . On the other hand , suppose r - mst ( H ) (cid:21) ( k(cid:0)1 ) (cid:13) = g . Notice that this is at least ( k = g(cid:0)1 ) (cid:13) + ( k(cid:0)k = g ) , since (cid:13) (cid:21) k . Then , there is a subset P of k vertices such that MST ( P ) contains at least k = g (cid:0)1 edges of weight (cid:13) . Let G [ P ] be the the subgraph in G induced by P . It follows that G [ P ] must contain at least k = g connected components . Hence , (cid:11) ( G ) (cid:21) (cid:11) ( G [ P ] ) (cid:21) k = g . It follows that (cid:11) ( G ) = k ) r - mst ( H ) = ( k (cid:0) 1 ) (cid:13) (cid:11) ( G ) (cid:20) k = g ) r - mst ( H ) (cid:20) ( k (cid:0) 1 ) (cid:13) = g : Thus , a gap in the approximation of Independent Set carries over to Remote - MST . 12 Associated independent set of G Max independent set of G HG Approximate RMST of ( k = 5 ) Optimal RMST of H ( k = 5 ) G Figure 5 : Graphs in Theorem 3 . 1 . Håstad has recently strengthened the approximation hardness of Independent Set to n 1(cid:0)(cid:15) , for any (cid:15) > 0 . This assumes that NP 6(cid:18) ZPP , or that polynomial - time zero - error randomized algorithms do not exist for NP . We now generalize the hardness proof for Remote - MST to other problems . Given a graph and integers ` , u , the degree - constrained subgraph problem ( DCS ) is to (cid:28)nd a subgraph of mini - mum weight such that the degree of each vertex is between ` and u . Note that u could possibly be trivially bounded by n . This minimization problem can be solved via a reduction to non - bipartite matching [ 17 ] , and it subsumes the assignment problem , and the problems of covering the vertices with cycles or with paths . If the subgraph must additionally be connected , we have a Connected - DCS ( CDCS ) problem , which includes TSP , MST , and the Degree - Constrained MST problems as special cases . Assume from now that (cid:5) is any such DCS problem , with degree lower bound ` . For a given (cid:13) > 1 , let H = H G ; (cid:13) be the bi - valued network on G , that has the weight of an edge being 1 if the edge is in G , and (cid:13) otherwise . Fix some optimal (cid:5) - solution to H , and let (cid:5) ( H ) denote its set of edges . We sometimes abuse notations by denoting (cid:5) for (cid:5) ( H ) . Lemma 3 . 2 Let G be a graph , and (cid:13) (cid:21) 1 . Let Heavy denote the set of (cid:13) - weight edges in (cid:5) ( H ) . Then , (cid:11) ( G ) (cid:21) jHeavyj ` 2 + 1 : Proof . We can assume jHeavyj > ` 2 + 1 without loss of generality . Also , the number k of vertices in (cid:5) ( H ) is greater than any constant power of ` . 13 We start with some de(cid:28)nitions . If (cid:5) is a problem requiring connectivity , let Conn denote some minimal set of edges from Heavy such that Conn [ ( (cid:5) ( H ) (cid:0) Heavy ) is connected and spans H ; otherwise , let Conn be the emptyset . Let Slack denote the set of vertices incident on edges in Heavy (cid:0) Conn . Recall that G [ Slack ] is the subgraph of G induced by the vertices Slack . We (cid:28)rst observe that (cid:11) ( G ) (cid:21) jConnj + 1 ( 2 ) since G must contain that many connected components . Thus , we may assume that Heavy (cid:0) Conn contains at least ` 2 edges . Claim 1 Each vertex is incident on at most ` edges in Heavy (cid:0) Conn . Suppose on the contrary that a vertex x was incident on ` + 1 or more edges in Heavy(cid:0)Conn . All of its neighbors must be of degree ` , as otherwise an edge would be redundant . Thus , there exist two non - adjacent neighbors y and z ( along heavy edges ) . Notice that x is additionally incident on at least one edge in (cid:5) ( H ) (cid:0) ( Heavy (cid:0) Conn ) , thus its degree is at least ` + 2 . Let (cid:5) 0 = ( (cid:5) ( H ) (cid:0)f ( x ; y ) ; ( x ; z ) g ) [ f ( y ; z ) g and observe that (cid:5) 0 is a valid solution to the (cid:5) - problem on H : the degree condition of the vertices holds , and connectivity is not a(cid:27)ected , since the removed edges are from Heavy (cid:0)Conn . Since (cid:5) 0 is of less cost , this contradicts the assumption that (cid:5) is a minimum cost (cid:5) - structure on H . Claim 2 E ( G [ Slack ] ) (cid:18) (cid:5) ( H ) Suppose on the contrary that there were vertices x ; y in Slack such that ( x ; y ) 2 G but ( x ; y ) 62 (cid:5) ( H ) . Let ( x ; x 0 ) , ( y ; y 0 ) be edges from Heavy (cid:0) Conn ( where x 0 and y 0 are not necessarily distinct ) . We consider three cases depending on the degrees of x 0 and y 0 . If x 0 and y 0 are distinct and both of degree greater than ` , then let (cid:5) 0 = ( (cid:5)(cid:0)f ( x ; x 0 ) ; ( y ; y 0 ) ; g ) [ f ( x ; y ) g . If one of x 0 and y 0 , say x 0 , is of degree greater than ` , then let (cid:5) 0 = ( (cid:5) (cid:0) f ( x ; x 0 ) ; ( y ; y 0 ) ; g ) [ f ( x ; y ) ; ( y 0 ; z ) g , where z is some vertex of degree ` non - adjacent to y 0 ( and such a vertex must exist since there must be at least ` + 1 vertex of degree ` ) . Otherwise , the number of heavy edges to which both x 0 and y 0 are incident or adjacent is at most ` 2 . Thus , there must exist a third edge ( x 00 ; y 00 ) from Heavy (cid:0) Conn such that x 0 and x 00 are non - adjacent , as well as y 0 and y 00 . Let (cid:5) 0 = ( (cid:5) (cid:0) f ( x ; x 0 ) ; ( y ; y 0 ) ; ( x 00 ; y 00 ) g ) [ f ( x ; y ) ; ( x 0 ; x 00 ) ; ( y 0 ; y 00 ) g . In all cases , the edges removed from (cid:5) are from Heavy (cid:0) Conn , and thus (cid:5) 0 is connected . Also , the degree constraints are preserved . Hence , (cid:5) 0 is a valid solution of lesser cost , contra - dicting the minimality of (cid:5) . The claim then follows . From these claims , we have that the neighborhood of each vertex in Slack is incident on at most ` 2 edges from Heavy (cid:0) Conn . Thus , a greedy creation of a maximal independent set eliminates at most ` 2 edges in each step . (cid:11) ( G ) (cid:21) (cid:11) ( G [ Slack ] ) (cid:21) jHeavy (cid:0) Connj ` 2 ( 3 ) 14 Combining ( 2 ) and ( 3 ) , we have that (cid:11) ( G ) (cid:21) max (cid:18) jHeavy (cid:0) Connj ` 2 ; jConnj (cid:19) (cid:21) jHeavyj ` + 1 : Theorem 3 . 3 Approximating Remote - DCS and Remote - Connected - DCS problems is as hard as approximating Independent Set , for any (cid:28)xed value of ` . Proof . Let (cid:13) be a number greater than uk , and H = H G ; (cid:13) . If there is an independent set of size k in G , then r - (cid:25) ( H ) (cid:21) ` 2 k(cid:13) . On the other hand , suppose r - (cid:25) ( H ) (cid:21) ` 2 k(cid:13) = g . Then , there is a subset P of k vertices such that (cid:5) ( P ) contains at least z (cid:21) ` 2 k = g edges of weight (cid:13) . By Lemma 3 . 2 , (cid:11) ( G [ P ] ) (cid:21) z = ( ` ( ` + 1 ) ) (cid:21) k = ( 2 ( ` + 1 ) g ) = ` 2 k(cid:13) = g 0 , where g 0 = g = ( ` ( ` + 1 ) ) . It follows that (cid:11) ( G ) = k ) r - (cid:25) ( H ) = ` 2 k(cid:13) (cid:11) ( G ) (cid:20) k = g ) r - (cid:25) ( H ) (cid:20) ` 2 k(cid:13) = g 0 : Similarly , these problems are also hard to approximate in metric graphs within a factor of 2 (cid:0) (cid:14) , for any (cid:14) > 0 . We prove this here only for properties for which all feasible solutions have the same number of edges ; the general case is quite tedious , especially for other connected properties . Theorem 3 . 4 Let (cid:5) be a DCS problem with ` = u , or a connected property with ` = 1 ( i . e . Degree - Constrained MST ) . Then , is hard to approximate within a factor of 2 (cid:0) o ( 1 ) in the metric space with distances 1 and 2 . Proof . Let (cid:13) = 2 , H = H G ; (cid:13) . Observe that any feasible solution to (cid:5) has the same number e of edges : ` k = 2 in the former case , and k (cid:0) 1 in the latter case If there is an independent set of size k in G , then r - (cid:25) ( H ) = 2e . On the other hand , suppose r - (cid:25) ( H ) (cid:21) e ( 1 + (cid:14) ) . Then , there is a subset P of k vertices such that (cid:25) ( P ) (cid:21) e ( 1 + (cid:14) ) . Thus , (cid:5) ( P ) contains at least e(cid:14) edges of weight 2 . By Lemma 3 . 2 , (cid:11) ( G ) (cid:21) e(cid:14) ` ( ` + 1 ) : Let (cid:14) 0 = (cid:14)k = [ ( k (cid:0) 1 ) ` ( ` + 1 ) ] . Then , (cid:11) ( G ) = k ) r - (cid:25) ( H ) = 2e ; (cid:11) ( G ) < (cid:14) 0 k ) r - (cid:25) ( H ) < e ( 1 + (cid:14) ) Hence , the problem is hard to approximate within 2(cid:0)1 = f ( n ) , where f ( n ) is a function growing with n . 15 Theorem 3 . 3 can also be extended to problems involving t - connectivity ( for t = k o ( 1 ) ) . It can also be extended to other remote - (cid:5) problems that satisfy the following property : If F is a feasible solution to (cid:5) and ( v ; u ) and ( x ; y ) are edges in that solution , then F (cid:0) f ( v ; u ) ; ( x ; y ) g [ f ( v ; x ) ; ( u ; y ) g is also a feasible solution to (cid:5) . One example is when (cid:25) ( P ) = P v2P min u2P d ( u ; v ) . The corresponding remote problem , that of (cid:28)nding a k - vertex set P maximizing this quantity , was considered by Moon and Chaudhry [ 21 ] under the name k - Defense problem . The above reduction shows that approximating it within n 1(cid:0)(cid:15) in general graphs is hard . For Remote - ST , one can always assume that graph G is metric , since the minimum Steiner tree of a node set P in G can be realized in the shortest - path distance graph D ( G ) . Theorem 3 . 5 Approximating Remote - ST within a factor of 4 = 3(cid:0)(cid:14) is NP - hard for any (cid:14) > 0 . Proof . Given graph G = ( V ; E ) , we construct a graph H as follows . Replace each edge of G by a path with two - edges , and connect the middle vertices of the paths into a clique . More formally , H contains a vertex for each vertex v i in V as well as each edge e j in E . A vertex v i is adjacent only to those vertices e j for which v i intersects e j in G . Vertices e j are completely connected into a clique . The input to Remote - ST is the distance graph D ( H ) of H . If we consider two vertices in G , they will be of distance 2 in H if they are adjacent in G , and of distance 3 in H if they are non - adjacent in G . An independent set in G corresponds to a set of vertices in H that have no neighbors in common . Hence , the cost of the minimum Steiner tree of that set in D ( H ) is 2 ( k (cid:0) 1 ) . A loner in a Steiner tree is a leaf whose neighbor is not adjacent to another leaf . Suppose there are two loners in a Steiner tree of D ( G ) that were adjacent in G . Then , the four edges connecting them to the remaining tree could be replaced by three edges all incident on the corresponding edge - vertex in D ( G ) . Hence , given a k - set P , we can easily (cid:28)nd a Steiner tree of P where loners form an independent set in G . If p is the number of loners , then the cost of the Steiner tree constructed will be at most 3 2 ( k (cid:0) p (cid:0) 1 ) + 2p = 3 2 ( k (cid:0) 1 ) + 1 2 p . If , now , we could guarantee (cid:28)nding a k - set where the minimum Steiner tree is of size at least 3 2 k + 1 2 p , it follows that the independence number of G is at least p . By the hardness of the independent set problem , it is hard to decide whether r - st ( G ) is 2 or 3 2 + o ( 1 ) . 4 Concluding remarks If we remove the cardinality condition from the Remote - MST problem , we have the following problem : Remote - MST subset problem : Find a subset Q of V such that mst ( Q ) is maxi - mized . 16 The Remote - MST subset problem can be considered to be an inverse problem to the Steiner problem . Whereas the Steiner problem asks for a superset Q 0 of P minimizing MST ( Q 0 ) , the Remote - MST subset problem calls for a subset Q of V maximizing MST ( Q ) . In the metric case , returning V as the solution trivially gives an approximation equal to the Steiner ratio , or 2 for general metric graphs and 2 = p 3 for Euclidean graphs . We pose the question of improved ratios as an open problem . Another open problem concerns the complexity classi(cid:28)cation of Remote - ST and Remote - TSP . They are in (cid:6) 2 p , at the second level of the polynomial time hierarchy , and are NP - hard , from our results . We conjecture that they are also hard for (cid:6) 2 p . Other open problems include : proving NP - hardness of Remote - MST ( and perhaps MAX - SNP - hardness ) in the Euclidean plane , and giving better bounds for the approximation ratios for each problem . In particular , a good approximation algorithm for Remote - ST will be very useful in applications . Also , a fast algorithm would be needed ; when we apply approximate Remote - TSP k - sets to large - scale TSP heuristics , sub - quadratic time algorithm is essential . References [ 1 ] A . Aggarwal , H . Imai , N . Katoh , and S . Suri . Finding k Points with Minimum Diameter and Related Problems . J . Algorithms 12 ( 1991 ) , 38(cid:21)56 . [ 2 ] A . Aggarwal , M . Klawe , S . Moran , P . Shor , and R . Wilber . Geometric Applications of a Matrix - Searching Algorithm . Algorithmica 2 ( 1987 ) , 195(cid:21)208 . [ 3 ] A . Aggarwal , B . Schieber , and T . Tokuyama . Finding a Minimum Weight K - link Path in Graphs with Monge Property and Applications . Discrete and Computational Geometry 12 ( 1994 ) , 263(cid:21)280 . [ 4 ] S . Arora , C . Lund , R . Motwani , M . Sudan , and M . Szegedy . Proof Veri(cid:28)cation and Hardness of Approximation Problems . In Proc . 33rd IEEE FOCS ( 1992 ) , 14(cid:21)23 . [ 5 ] Y . Asahiro , K . Iwama , H . Tamaki , and T . Tokuyama Greedily Finding a Dense Subgraph In Proc . 5th SWAT ( 1996 ) , Springer LNCS 1097 , pp . 136 - 145 . [ 6 ] J . Boyce , D . Dobkin , R . Drysdale , and L . Guibas . Finding Extremal Polygons . SIAM J . on Computing 14 ( 1985 ) , 134(cid:21)147 . [ 7 ] B . Chandra and M . Halldórsson . Facility Dispersion and Remote Subgraphs . In Proc . Fifth SWAT ( 1996 ) , Springer LNCS # 1097 , 53(cid:21)65 . [ 8 ] D . - Z . Du and F . K . Hwang . An Approach for Proving Lower Bounds : Solution of Gilbert - Pollak ' s Conjecture of Steiner Ratio . In Proc . 31st IEEE FOCS ( 1990 ) , 76(cid:21)85 . [ 9 ] D . Eppstein . New Algorithms for Minimum Area k - gons . In Proc . 3rd ACM - SIAM SODA ( 1992 ) , 83(cid:21)87 . 17 [ 10 ] E . Erkut and S . Neuman . Analytical models for locating undesirable facilities . Europ . J . Oper . Res 40 ( 1989 ) , 275(cid:21)291 . [ 11 ] T . Feder and D . H . Greene . Optimal Algorithms for Approximate Clustering . In Proc . 20th ACM STOC ( 1988 ) , 434(cid:21)444 . [ 12 ] M . Fischetti , H . W . Hamacher , K . Jørnsten , and F . Ma(cid:30)oli . Weighted K - Cardinality Trees : Complexity and Polyhedral Structure . Networks 24 ( 1994 ) , 11(cid:21)21 . [ 13 ] N . Garg . A 3 - Approximation of the Minimum Tree Spanning k Vertices . To appear in Proc . 37th IEEE FOCS ( 1996 ) . [ 14 ] R . Hassin , S . Rubinstein , and A . Tamir . Approximation Algorithms for Maximum Facility Dispersion . Manuscript , August 1996 . [ 15 ] J . Håstad . Clique is hard to approximate within n 1(cid:0)(cid:15) . To appear in Proc . 37th IEEE FOCS ( 1996 ) . [ 16 ] G . Kortsarz and D . Peleg . On choosing a dense subgraph . In Proc . 34th IEEE FOCS ( 1993 ) , 692(cid:21)701 . [ 17 ] E . Lawler . Combinatorial Optimization : Networks and Matroids . Holt , Rinehart and Win - ston , 1976 . [ 18 ] S . Misono and K . Iwano . Circuit Board Drilling Problem . Technical Report , Inf . Proc . Soc . Japan , 93 - AL - 33 ( 1993 ) , 95(cid:21)102 . [ 19 ] S . Misono and K . Iwano , Experiments on TSP Real Instances . IBM Tokyo Research Labo - ratory , Research Report , RT0153 ( 1996 ) . [ 20 ] J . Mitchell . Manuscript , 1996 . [ 21 ] I . D . Moon and S . S . Chaudhry . An analysis of network location problems with distance constraints . Management Science 30 ( 1984 ) , 290(cid:21)307 . [ 22 ] S . Peng , A . B . Stephens , and Y . Yesha . Algorithms for a Core and k - Tree Core of a Tree . J . Algorithms 15 ( 1993 ) , 143(cid:21)159 . [ 23 ] R . Ravi , R . Sundaram , M . V . Marathe , D . J . Rosenkrants , and S . S . Ravi . Spanning Tree Short or Small . SIAM J . Disc . Math 9 : 2 ( 1996 ) , 178(cid:21)200 . [ 24 ] S . S . Ravi , D . J . Rosenkrantz , and G . K . Tayi . Facility dispersion problems : Heuristics and special cases . Operations Research 42 ( 1994 ) , 299(cid:21)310 . [ 25 ] A . Shioura and T . Uno . A Linear Time Algorithm for the k - Tree Core of a Tree . Preprint ( 1994 ) . [ 26 ] A . Tamir . Obnoxious facility location on graphs . SIAM J . Disc . Math . 4 ( 1991 ) , 550(cid:21)567 . 18 [ 27 ] A . Tamir . Comments on the paper ` Facility dispersion problems : Heuristics and special cases , by S . S . Ravi , D . J . Rosenkrantz , and G . K . Tayi ' . To appear in Operations Research , 1996 . [ 28 ] D . J . White . The maximal dispersion problem and the (cid:16)(cid:28)rst point outside the neighbor - hood(cid:17) heuristic . Computers Ops . Res . 18 ( 1991 ) , 43(cid:21)50 . 19