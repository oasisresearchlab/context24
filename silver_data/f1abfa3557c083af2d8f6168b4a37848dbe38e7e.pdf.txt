Socially Intelligent Computing - A Survey of an Emerging Field for Empowering Crowd Tarek Ali , Mervat Gheith Department of Computer and Information Sciences , Institute of Statistical Studies and Research , Cairo University , Egypt tarekmmmmt , mervat _ gheith @ yahoo . com Eman S . Nasr Independent Researcher Cairo , Egypt nasr . eman . s @ gmail . com Abstract — Socially Intelligent Computing ( SIC ) is a new emerging field that refers to the recent efforts of crowd computing to understand the ways in which systems of human intelligence across the globe and social networks can work together as efficiently as a giant machine . These systems result in new behaviors , and will prove useful as intermediaries between human intelligence and technological forms used by humans . In this paper we discuss the motivations behind crowd computing , introduce some of its concepts , and review the common methodologies employed to harness human intelligence in computing areas . We also shed some light on our research which focuses mainly on end - user crowd - based applications ’ development . We present the research challenges and project on how SIC can be extended to support the end - user during the whole of the life - cycle of crowd - based applications , from requirements elicitation to evolution . Lastly , future research challenges are discussed , as well as our vision to contribute to SIC . Keywords — socially intelligent computing ; crowd computing ; social computing ; end - user computing ; end - user software engineering ; crowd - sourcing . I . I NTRODUCTION Computing is any goal - oriented activity requiring , and benefiting from , computers . There are currently a lot of computing trends . For example , there is grid computing which aims to reach common goals by using collections of computer resources from multiple locations [ 1 ] . There is also cloud computing which aims to reach coherence and economies by using large groups of remote servers [ 2 ] . There is another computing area which aims to combine and harness intelligence , knowledge , and life experiences of people to do tasks or produce information that are hard for individual users or computers to achieve alone . This area is a computing overlap area between social , crowd and end - user computing fields , which we shall give special attention in this paper . More specifically , crowd here are people who perform certain types of computing activities with or without help , by setting up a new type of computing element ( e . g . , idea or solution ) namely crowd - based computing element . Generally , in social , crowd , or end - users computing people , who are non - IT specialists ( e . g . , decision - makers , managers , or domain - experts ) have a lot of knowledge , and life experiences about specific domains . At the same time , they clearly understand what kinds , parts , or types of problems they face , but don ' t clearly understand how they can solve them better using technological forms . Although , there are currently some artificial solutions , they still don ' t know exactly how to manage and maintain the solution processes . It is also almost impossible for professional IT - people to support every need of every end - user in the artificial platforms they create . In most cases , end - users would eventually need to manage and maintain a level of computational expertise to socially share knowledge . Business companies are increasingly relying on social , crowd , or end - users computing to improve processes , make decisions , identify solutions to complex problems , and monitor changes in consumer knowledge ( e . g . , Amazon for solving inventory - sorting problem , Google for solving book - digitizing problem , and Facebook for solving language - translation problem ) . Since recently social network platforms for crowd use is becoming a widespread and prevalent practice [ 3 ] , [ 4 ] , [ 5 ] , it is expected that crowd computing ( CC ) will be needed to create business - oriented crowd - based applications , for quick Business Process Reengineering ( BPR ) [ 6 ] . In this paper we discuss how crowd with expertise in different domains , and characteristics could be empowered in the BPR , which aims to help organizations mainly rethink how they redesign their workflows and business processes in order to quickly decrease operational costs , increase customer service , and become world - class contestants . Recent developments in computational science have also begun to focus on End - User Computing ( EUC ) , which are systems , platforms , technologies , approaches or tools to computing that aim to harness and empower non - IT specialists into the computing areas [ 7 ] . EUC covers peoples ’ needs to develop , create , customize manage and maintain their applications , to solve their problems in a trustworthy style . For example , the use of fourth - generation programming languages such as MAPPER or SQL , making the language more programmer - friendly , powerful and versatile . The result was a turning of the organizational chart on its head , and empowering people more than previous eras . Nowadays there are many EUC platforms available [ 8 ] ( e . g . creating visual domain platform - for specific modeling languages such as computerized whiteboard platform with pen - based input device ) . These platforms assist people who don ' t have programing language The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 102 development expertise , to design , manage and control software program using their own experiences . Finally , there is Socially Intelligent Computing ( SIC ) which is a new emerging field that refers to the recent efforts of CC and EUC to understand the ways in which systems of human intelligence across the globe and social networks can work together as efficiently as a giant machine . This machine aims to share ideas or to solve a problem that cannot be easily done only by human intelligence tasks without technological platforms or vice versa [ 9 ] , [ 10 ] , [ 11 ] , [ 12 ] , [ 13 ] . These systems result in new behaviors that occur as a result of the complex interaction between humans and computers and will prove useful as intermediaries between crowd and technological forms used by crowd [ 14 ] , [ 15 ] , [ 16 ] , [ 17 ] . Our survey is mainly toward systematic , end - user crowd - based applications development , identify relevant research challenges ; derive requirements on EUC and CC development processes and show how the computing overlap area between social , crowd and end - user computing fields , can be extended to support end - users during the whole life - cycle of crowd - based applications , from requirements elicitation to evolution , resulting SIC systems . The rest of this paper is organized as follows . Section II provides a briefing about the current state of the art , highlighting the common methodologies employed to harness human intelligence in computing areas , and the motivations for this new research area . Section III discusses SIC for crowd applications , and provides specific examples of how they have been managed . Section IV presents our vision from technical and crowd behavior perspectives . Section V presents the most relevant work found in the literature that takes advantage of non - IT specialists in that area . Finally , Section VI gives the conclusion and our vision for possible future research directions and further development . II . T HE C URRENT S TATE O F T HE A RT The success of the Wikipedia is a clear indication of how crowd would like to be more active and creative in the computing society . However , Wikipedia is mainly limited to crowd - updated or created content , while in business area ; crowd often would like to understand the behavior , functionality and accessibility of businesses . Concurrently , software specialists lack the businesses knowledge that crowd cannot easily convey when communicating requirements for a new business requirement . Moreover , regular Artificial Intelligence ( AI ) development cycles are too slow to meet the businesses’ fast changing environments . For example , image recognition problem which depend on AI methods and tools ( e . g . , search and optimization ; neural networks , natural language processing , logic , classifiers and statistical learning ; and knowledge representation ) requires extensive knowledge about the image to recognize . We mean that AI needs to represent objects , properties , categories and relations between objects ; and etc . That means , AI processes need effort and time . However , if crowd usually lack the thinking of professional software specialists , it is simply possible to use the human - base ( natural intelligence ) development lifecycle for SIC . Recently available applications only realize a fraction of SIC’s potential and still suffer from several flaws , limiting SIC’s important contribu tion to empowering crowd as active an element of the computing society . Topics related to SIC have already been investigated to some extent in recent years . For example , Bubendorfer et al . , [ 18 ] provide two different approaches such as LinkedIn ' s approach to build its infrastructure of the social network , for supporting a group of people in scientific domains , and achieving a given goal . These approaches aim to provide computing platform with collaboration and resource sharing tools . Shared platforms and knowledge are prevalent in the real world and hence the way of managing such platforms will impact not only quality of life , but also businesses competitiveness . There is an intelligence methodology for making decisions to any human - centric network such as group preference model , social agreeability and social influence structure discussed in [ 19 ] . For example , one way to reach social agreeability function between different groups is to ask each group to recommend one or more solution for specific problem , based on its own preferences with reflecting others’ preferences . User Behavior Database ( UBDB ) stores all information about the user ' s behavior from the beginning of access to the end of that access . As a result , some powerful social networks and recommendation applications are built by using this UBDB . Organization software architecture that based on SIC , there is a new idea in [ 20 ] on how to understand SIC and set its stage , it proposed a taxonomy of SIC systems concerning intelligent behavior that may be useful to set the stage . For example , intelligent behavior in Enterprise Resource Planning ( ERP ) systems , the user can connect to the ERP using an internet access to exchange information with the internet ERP ' s user ; that is unconscious computing . Figuring out how the user ' s behavior works will offer rewards beyond building smarter computers ; that is subconscious . Understanding its methods will enable engineers to simulate its activities , leading to deeper insights about how and why the user ' s behavior will be . There was a study [ 21 ] abstracted four major characteristics of SIC , and then demonstrated the effectiveness of these characteristics in the processes of both organization requirements and development . For example and as social software , enterprise software application architecture ( COMMU4E ) provides friendly platform for knowledge sharing between group of people , including personal space , wiki pages , enterprise blogs , and online meeting . All these modules of that architecture aim to cover major characteristics of SIC which are summarized in terms of trust and promote innovation , real communication , experts and content resources on - call , and knowledge chain . To understand more about the nature of SIC , there is a study [ 22 ] answered three types of questions of why people share information ? What type of information do they share ? And what are the venues used for the different types of sharing ? These answers is depend on Utilize an integration of scanning data from Wikipedia , Flickr and a number of open source software projects For example , the answers of what and where questions are on the different types of information such as include code ( e . g . , open source software ) , factual content ( e . g . , Wikipedia ) , meta - information ( e . g . , tags ) , and photos ( e . g . , Flickr ) . Also , answers why users participate in social The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 103 computing ( such as Wikipedia ) , open source software projects , or projects that will provide learning , social value and enhance their reputation . SIC is a dynamic platform that result a wide range of themes [ 23 ] whatever either human - based or machine - based . For instant , software engineers must take part with social scientists and psychologists to design social computing platforms . For example , the specialists must think about how people can access better products and services by reviewing recommendations and content tagged from another person ( human - based ) or using filtering system ( machine - based ) . To integrate the disciplines of tuitions with reference to social computing , another research [ 24 ] provided a general classification of existing social computing paradigms such as groupware , social software and mobile social software . For example , from technical viewpoint classification , they discussed interaction contexts that depend on the device supports such as static interaction ( e . g . , desktop computers ) or dynamic mobile context ( e . g . , smartphones or tablets ) . Augmenting five facets of human intelligence , other researcher such as in [ 25 ] reviewed pervasive social SIC as an integrated computing platform , which adherence to augment five characteristic of human intelligence in physical environment which are awareness , behavior awareness , community awareness , interaction awareness , and content awareness . For example , they stated that behavior awareness can be classified into verbal behavior awareness ( e . g . , voice recognition systems ) and nonverbal behavior awareness ( e . g . , messages and words between people in interactive contexts ) . Using social computing platform in large - scale organizations aims to attract potential customers [ 26 ] , in this study , it present how SIC is effective in maintaining customer loyalty at those organizations , by setting a long - term relationship with customers , so for this , it is important to have reliable relationship with them . At the same time , it increases customer loyalty in internet shopping which is an effective tool to increase profit for those organizations . There were findings in health information technology [ 27 ] show that time is a significant variable on social computing , data envelopment analysis and adoption effectiveness by utilizing social platform to attract potential customers in hospitals domain . Another study [ 28 ] discussed the SIC model ( an important policy issue in migration ) for Huji system reform in the field of social assistance . For example , this model facilitates the study of society and to support decision - making policies , helping to analyze how changing policies affect social , political , and cultural behavior . Building SIC tools [ 29 ] for inspiring the research of social scientists , this tool depend on generic platform for collecting data , tracking blogs of particular interests , and facilitating comparative data analysis . For example , this tool can track identified topics and keywords relevant to one’s interest , maintain a watch - list for each person in the system and look for these keywords in the blog posts crawled each day . At the same time , the other people are notified through e - mail as well as through the system interface . III . SIC F OR C ROWD A PPLICATIONS Simply “ collective wisdom ” means that groups produce more rational decisions than individual’s decisions . In a similar word , when we asked the groups or crowd to share us in decision , then we successfully employed a democratic principle to arrive at a precise estimation to that decision . For example , the crowd work together to solve specific problems such as translating websites , improving algorithms , and evaluating products . There are many organizations have been come in crowdsourcing as a new platform of businesses to outsource jobs , which are traditionally performed by Information Technology ( IT ) . In general , crowd should be able to work through well - known and promptly understandable representations that allow them to easily express and influence relevant connotation and that way develop or modify interactive business work . Furthermore , since a business work needs to be properly specified in order to be executed , there is a need for platforms supporting transferences from intuitive but sometimes ambiguous representations into more proper to understand business specification . Hetmank et al . [ 30 ] gave better understanding of what crowdsourcing systems are , and what typical design aspects are considered in the development of such systems which as a result , 17 definitions of crowdsourcing systems , were found and categorized into four perspectives : the organizational , the technical , the functional , and the human centric . For example , there is a type of problem needs a large numbers of people using technological platform such as a set of human interaction tools for idea exchange and non - hierarchical decision making . From the literature four common characteristics can be identified to define the boundaries of the term ( i . e . participation by a crowd of humans , interaction with computing technology , activity that is predetermined by the initiator or application itself and the execution of tasks by the crowd utilizing innate human capabilities ) . The evaluation processes of the crowd’s work is the most important factors for business and market values evaluations . At the same time , the growing scale of P2P systems ( e . g . , multimedia streaming services , VoIP etc . ) , uses distributed , robust and scalable algorithms to achieve load - balancing , aggregate computation and adaptive system properties . For these reasons , researchers [ 5 ] introduced some new distributed algorithms which aim to allow peers to detect crowd’s work . For example , " TrackerNetSize " algorithm , compute an aggregate value which reflects and estimate the size of crowd’s work , in dynamic scenarios characterized by varying topologies . Vigueras et al . [ 31 ] take a similar approach in which distributed systems requires the use of partitioning methods that can properly distribute the workload generated , by agents among the existing distributed resources , in order to handle large crowd’s participations . Resulting both fitness function values and execution times , and show that the shape of the regions in the partition can improve the performance of the partitioning method , rather than the heuristic method used accuracy and evaluation attributes which coming from crowd . IV . C ROWD - C ENTERED D ESIGN ( CCD ) As we stated above , Our survey mainly toward systematic , end - user crowd - based applications development , identify relevant researches challenges ; derive requirements on EUC and CC development processes and show how the computing overlap area between social , crowd and end - user computing fields , can be extended to support end - users during the whole The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 104 life - cycle of crowd - based applications , from requirements elicitation to evolution , resulting SIC systems . In particular , we studied across disciplines , such as organizational behavior and distributed computing , knowledge models and end - user software engineering , human computer interaction and user - centered design , technological form and end - user interface experience perspectives , collaborative and real - time work , regarding end - user crowd - based applications . Our vision mainly , is emerging selective - computing fields , for empowering people in those fields . From technical perspective , these fields are SIC , CC and EUC . Explicitly , they discuss how to present distributed systems and problem definition in a terms of quality of task decomposition , job design , task assignment , real - time collaboration and testing . From people behavior perspective , the common attributes for the type people in SIC , CC , EUC , are both knowledge worker and non - language development expert . Implicitly , they discuss how and how to intensive them to share in computing systems . The prospective result is crowd - centered design as presented in Fig . 1 . The main difference between CC and Crowd - Centered Design ( CCD ) is that CC combines human knowledge with technological forms , it offers amount of efficiency and profitability . Also , CC aims to support the most beneficial part of human intelligence in terms of experience and subjectivity , against AI disciplines which aim to support machine speed and objectivity . But , CCD tries to optimize the technological forms around how crowd can , want , or need to use the technological forms to share in either solving a problem or giving information , rather than forcing the crowd to change their subjectivity , or their skills to accommodate the technological forms . We proposed this term to solve recently problem that is , the non - IT specialists ( e . g . , end - user , decision - makers , managers , or domain - experts ) don’t clearly understand what kinds , part , or type of problems a crowd really can solve better ; if they know that , still don’t know to present the problem to the crowd ; Finally , if they know that , still don ' t know exactly how to manage and maintain the solution process which is came from crowd . Fig . 1 . Crowd - Centered Design ( CCD ) model . We proposed CCD and define it as : An iterative process of developing a system step - by - step , and with the participants of potential crowd . The typical steps in this process are task decomposition , job design , task assignment , real - time collaboration and test of the quality issues . Several challenges need to be addressed to realize our vision . We list such challenges in the following four areas of interest : · Reengineer Internet design , considering that the crowd is part of the network in terms of end - to - end transmission , routing , mobility , and security . · Reengineer models design . Reengineering capable of counterchanging crowd beliefs and expectations ( e . g . , level of transparency that the crowd expects on a specific time and for specific applications ) to modeling will be addressed . · Emerging human - computer brains more than it was ever possible before , such as enhancing the methods which reduce the feedback cycles between AI model and humans . · Developing unified and interoperable technological platforms , for designing and delivering crowd work . V . R ELATED W ORK EUC has been a discipline of study for more than 30 years already , the results are visible , end - users , who have no or only little computing skills , have become active creators of business applications , developing new knowledge models to meet their business needs , sharing them with community and combining them into more complex solutions . Recently , a research based on the US Bureau of Labor and Statistics [ 32 ] indicated that by 2012 , there will be 3 million professional developers and 55 million nonprofessional developers ( end - users ) . It also highlighted that by 2014 nonprofessional developers will build at least 25 % of new business applications . Management using participatory user - centered design and open - source development approaches [ 33 ] , answer the question of how end - users can be empowered with new building blocks and tools in the Internet of Things ( IoT ) domain . IoT is the linkage of uniquely identifiable embedded computing appliances within the existing Internet infrastructure ( e . g . , in a real - time computing and environmental monitoring applications , end - users can monitor air or water quality by utilizing sensors which have unique identifier ) . Also , using user - id relationships among code chunk is a recent approach in code structuring to override both overkill and difficulty in learning [ 34 ] . In an inadequate application life - cycle management , and when the data which is collected from different areas of the system can’t be merged into one holistic view problems , Chudnovskyy et al . [ 35 ] show the clear need for new systematic methods has emerged such as WebComposition approach which can be adapted towards the needs of EUC , this would take both the new technological opportunities . Also , the risks resulting from non - professional application development must be considered into account . In addition , the functionality should be available in other contexts with the missing knowledge on how to start building an People ( Crowd ) Technological Forms ( SIC , CC , EUC ) Attributes , Intensives and Quality of Domain Understanding Quality of Task Decomposition , Job Design , Task Assignment , Real - time Collaboration and Testing CCD ives and Quality of Iterative Process of Developing Systems The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 105 application . Creating visual domain - specific modeling languages from end - user demonstration [ 8 ] , answers the main question of how to define abstract / concrete syntax and specify semantic of knowledge . Due to the openness of contextual information , dealing with imperfectness , context modeling , and management , reasoning at an individual application level and at a collective level is almost impossible to enumerate every possible scenario and to define or mine adaptation rules , other researchers such as [ 36 ] , state former deals with development and end - user interaction issues on the basis of distributed applications . Such as combining data from multiple sources into a single interface , using web Mashups which provide us with a unique opportunity to study how both IT - people and non IT - people approach an inherently programmatic technology . The lack of standards interoperability and end - user interface problems , a component base design , and the use execution of ontology models are specific types of software services that enable users to developing a task - driven model , share information , monitor the physical , logical surroundings and control them in a way that is meaningful for the user’s situation [ 37 ] , [ 38 ] . Usability improvements are limited by a reliance on handcrafted rules and heuristics to generate reasonable and useful suggestions , there are some attempts , to identify some classes of suggestion that could most directly benefit from existing recommendation techniques such as create systems that mesh with users’ existing workflows and environments . Is it possible to bring the benefits of rigorous software engineering methodologies to end - users , envision systems that create software in collaboration with those users , in a software development paradigm that combines traditionally separate functions , blending specification , design , implementation , component integration , debugging , testing , and maintenance into tightly integrated , highly interactive environments [ 39 ] . There are some researches not only aim to reshape software engineering to meet the needs of EUC but also to refashion its components as solution building blocks instead of programs and software developments , re - develop a new age of EUC tools such as composition model for end - user [ 40 ] , [ 41 ] Related to EUC problems ( e . g . , excessive technical detail , inappropriate computational models , inability to analyze compositions , software qualities , and lack of support for reuse ) , there are some new approaches [ 42 ] , [ 43 ] that help end - user to detect and fix bugs . Creating new programming languages and environments , seeks to answer question of how to make programming more “natural” , or closer to the way people think . Stating a dynamic development environment with non - technical skills and using communications with distributed development team members [ 44 ] , changing the way organizations develop software based on components management ( e . g . , quality , control , integration , and internal or external globalization in terms of crowd outsourcing development ) . Fountain Computing ( FC ) is metaphor concept for implementing human computation life cycle , which allows end - users to declaratively specify the high - level control flow of knowledge using logic programming . [ 45 ] , FC is model - driven Knowledge - model architecture ; it is a result of meta - modeling of integrated selective information technology ( knowledge - base , ontology , visualization and interaction , modeling and sensitivity analysis ) to give us flexibility , efficiency , and productivity . Solving a problem that cannot be solved easily by individuals , or perfectly by computer , a survey of CC [ 3 ] shows that CC can empower computer systems by utilizing humans’ perception can perform certain tasks that computers cannot , such as and their ability to solving non - algorithmic problems , transcription and video moderation , at unparalleled speeds . So , the wisdom of the crowd increases social and ontological complexity , such systems requires effective analytical tools and methods to understand and interpret pragmatic aspects of crowd - based knowledge production . There are a tool [ 46 ] , supports interactive exploration of pragmatic aspects of ontology engineering such as how a given ontology evolved and the nature of changes . Many organizations are now starting to shift to crowd work as a new knowledge - model of business , which are traditionally performed by a small group of domain experts . Crowd work is used for a variety of applications , such as evaluating ideas , creating knowledge repositories , or developing new products collaboratively . Figuring Organizational behavior and distributed computing , as well as direct feedback from worker in dynamic environment , there are framework and tool [ 47 ] [ 48 ] , enable CC that is complex , collaborative , and sustainable in a terms of workflow , task assignment , hierarchy , real - time response , synchronous collaboration , quality control , and crowds guiding AIs , AIs guiding crowds , platforms , job design , reputation , and motivation . Incomplete fact - sets are a frequent phenomenon , especially when fact - sets are generated automatically using various knowledge extraction or knowledge integration approaches [ 49 ] , [ 50 ] , [ 51 ] , stated hybrid approach combining dynamic CC with heuristic and mining techniques in order to overcome current limitation ( such as , generating the best questions to ask the crowd and mining significant patterns from the answers ) . For example , such combination approaches are used in smartphone apps to help blind people see using a crowd’s eyes . They show how crowd can be used in systems that require interactive response times [ 52 ] . Sharing software platforms and even Mashups , components can be retrieved through a keywords - based search or browsing across categories , most popular or new updates . On the other hand , the need for scalable techniques able to return also approximate results with respect to a given query as a ranked set of promising alternatives , a new hybrid methodology [ 53 ] , [ 54 ] , seeks to rank and classify resources in fact - set such as classical search engine results , social tagging systems and Wikipedia - related information . Introduce computational techniques that decompose complex tasks into simpler , verifiable , is a typical steps to improve quality in CC as a platform [ 55 ] , because crowd work is error - prone , making it difficult to incorporate crowd as first - order blocks in software systems . VI . C ONCLUSION The objective of this paper was to discuss previous approaches to be able to precisely describe SIC environments , platforms or technological forms that support end - users to organize effective crowd from across the globe to work as efficiently as a giant machine . Platforms offer a set of intelligent programming interfaces which enable end - users to integrate with crowd to manage business rules in a clear and The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 106 informative way . SIC and CC platforms put up effective means to integrate tasks that require human intelligence instead of just machine computation power . In this paper , we have discussed some representative platforms for CC covering the state - of - the - art . In particular , we have presented various efforts for SIC , such as approaches to support cooperation and resource sharing , intelligence methodology to human - centric network such as group preference model , and social agreeability . We have also presented the characteristics and tools of SIC , and then demonstrated the effectiveness of them in the processes of organization development . Moreover , we have discussed some SIC platforms for crowd applications . In particular , we have presented various crowd efforts in practice from the business - oriented crowd - based perspective to reveal its emerging potential for the creation of third - party services to enable the successful adoption of CC , such as crowd systems development in a term of four perspectives : the organizational , the technical , the functional , and the human centric , to utilizing crowd capabilities . Distributed algorithms to demonstrate and evaluate crowd work . We also presented and defined our vision from the technical and crowd behavior perspectives . This resulted in reaching a new term CCD . Several challenges need to be addressed to realize our vision . We listed such challenges in the four areas of interest . These areas are reengineer Internet design , reengineer models design , emerging human - computer brains more than it was ever possible before , and developing unified and interoperable technological platforms , for designing and delivering crowd work . Lastly , we presented related work , beginning from EUC , end - user software engineering , SIC to CC . References [ 1 ] Zhongzhi Shi , He Huang , Jiewen Luo , Fen Lin , and Haijun Zhang , " Agent - based grid computing , " Applied Mathematical Modelling , vol . 30 , no . 7 , pp . 629 – 640 , July 2006 . [ 2 ] Ian Foster , Yong Zhao , Ioan Raicu , and Shiyong Lu , " Cloud Computing and Grid Computing 360 - Degree Compared , " in Grid Computing Environments Workshop , 2008 . GCE ' 08 , 2008 , pp . 1 - 10 . [ 3 ] Jafar Muhammadi , Hamid Reza Rabiee , and Hosseini Hosseini , " Crowd Computing : A Survey , " Knowledge and Information Systems , vol . 1 , no . 1 , pp . 1 - 25 , 2013 . [ 4 ] Steffen Herm , Hans Markus , Callsen Bracker , and Henning Kreis , " When the Crowde Valuates Soccer Players’Market Values : Accuracy and Evaluation Attributes of an Online Community , " Sport Management Review , vol . 17 , no . 4 , pp . 484 – 492 , November 2014 . [ 5 ] Andrei Pruteanu , Lucia D’Acunto , and Stefan Dulman , " Distributed Online Flash - Crowd Detection in P2P Swarming Systems , " Computer Communications , vol . 36 , no . 5 , pp . 533 – 541 , March 2013 . [ 6 ] Pavel Kucherbaev , Stefano Tranquillini , Florian Daniel , and Fabio Casati , " Business Processes for the Crowd Computer , " Lecture Notes in Business Information Processing , vol . 132 , pp . 256 - 267 , 2013 . [ 7 ] Chittibabu Govindarajulu , " A Federated Model for End - User Computing Support , " Journal of Management Policy and Practice , vol . 15 , no . 1 , pp . 71 - 77 , 2014 . [ 8 ] Hyun Cho , Jeff Gray , and Eugene Syriani , " Creating Visual Domain - Specific Modeling Languages from End - User Demonstration , " in Proceedings of the Workshop on Modeling in Software Engineering , Zurich , 2012 , pp . 22 - 28 . [ 9 ] Fei - Yue Wang , Daniel Zeng , Kathleen M . Carley , and Wenji Mao , " Social Computing : From Social Informatics to Social Intelligence , " IEEE Intelligent Systems , vol . 22 , no . 2 , pp . 79 - 83 , March - April 2007 . [ 10 ] Irwin King , Li Jiexing , and Chan Tong Kam , " A Brief Survey of Computational Approaches in Social Computing , " in Proceedings of the International Joint Conference on Neural Networks , Atlanta , GA , 2009 , pp . 1625 - 1632 . [ 11 ] Alan Shaw , " Using Chatbots to Teach Socially Intelligent Computing Principles in Introductory Computer Science Courses , " in Proceedings of the 9th International Conference on Information Technology , Las Vegas , NV , 2012 , pp . 850 - 851 . [ 12 ] Fei - Yue Wang , Dongsong Zhang , and Katia Sycara , " Guest Editorial : Special Section on Social and Economic Computing , " IEEE Transactions on Services Computing , vol . 6 , no . 2 , pp . 150 - 151 , June 2013 . [ 13 ] Laszlo Horvath , Imre J . Rudas , Jhnos F . Bit , and Gerhard Hancke , " Intelligent Computing for the Management of Changes in Industrial Engineering Modeling Processes , " in Proceedings of the IEEE 3rd International Conference on Computational Cybernetics , 2005 , pp . 249 - 254 . [ 14 ] Murat Demirbas , Murat Ali Bayir , Cuneyt Gurcan Akcora , and Yavuz Selim Yilmaz , " Crowd - Sourced Sensing and Collaboration Using Twitter , " in Proceedings of the IEEE International Symposium on a World of Wireless Mobile and Multimedia Networks , Montrreal , QC , 2010 , pp . 1 - 9 . [ 15 ] Maja Vukovic , " Crowdsourcing for Enterprises , " in Proceedings of the World Conference on Services - I , Los Angeles , CA , 2009 , pp . 686 - 692 . [ 16 ] Carlos Gomes , Daniel Schneider , Katia Moraes , and Jano de Souza , " Crowdsourcing for Music : Survey and Taxonomy , " in Proceedings of the IEEE International Conference on Systems , Man , and Cybernetics ( SMC ) , Seoul , Korea , 2012 , pp . 832 - 839 . [ 17 ] Kenji Gonnokami , Atsuyuki Morishima , and Hiroyuki Kitagawa , " Condition - Task - Store : A Declarative Abstraction for Microtask - based Complex Crowdsourcing , " in Proceedings of the 1st VLDB Workshop on Databases and Crowdsourcing , 2013 , pp . 20 - 25 . [ 18 ] Kris Bubendorfer , Kyle Chard , Koshy John , and Ashfag M . Thaufeeg , " eScience in the Social Cloud , " Future Generation Computer Systems , vol . 29 , no . 8 , pp . 2143 – 2156 , October 2013 . [ 19 ] Changsoo Ok , Seokcheon Lee , and Soundar Kumara , " Group Preference Modeling for Intelligent Shared Environments : Social Welfare Beyond the Sum , " Information Sciences , vol . 278 , pp . 588 – 598 , September 2014 . [ 20 ] Manuel Grana and Israel Rebollo , " Instances of Subconscious Social Intelligent Computing , " in Proceedings of the 5th International Conference on Computational Aspects of Social Networks , 2013 , pp . 74 - 78 . [ 21 ] Qingxin Li , Shufen Liu , and Lu Han , " Research on Enterprise Software Architecture Based on Social Computing , " in Proceedings of the IEEE 2nd Symposium on Web Society , Beijing , 2010 , pp . 342 - 345 . [ 22 ] Oded Nov , " Information Sharing and Social Computing : Why , What , and Where ? , " Advances in Computers , Social Networking and The Web , vol . 76 , pp . 1 - 18 , 2009 . [ 23 ] Maria R . Lee and Tsung Teng Chen , " Understanding Social Computing Research , " IEEE Computer Society , pp . 56 - 62 , Nov . 2013 . [ 24 ] Giuseppe Lugano , " Social Computing : a Classification of Existing Paradigms , " in Proceedings of the ASE / IEEE International Conference on Social Computing , Privacy , Security , and Trust , Amsterdam , 2012 , pp . 377 - 382 . [ 25 ] Jiehan Zhou , Junzhao Sun , Kumaripaba Athukorala , and Dinesh Wijekoon , " Pervasive Social Computing : Augmenting Five Facets of Human Intelligence , " in Proceedings of the 7th International Conference on Ubiquitous Intelligence and Computing , Xian , Shaanxi , 2010 , pp . 1 - 6 . [ 26 ] Hangil Sun , " Effect of Social Computing , Trust and Cognition on Customer Loyalty in Internet Shopping , " in Proceedings of the 2nd International Conference on Computer and Automation Engineering , vol . 5 , Singapore , 2010 , pp . 771 - 775 . [ 27 ] Ricky C . Leung and Kalyan S . Pasupathy , " The Economics of Social Computing : Some Preliminary Findings on Healthcare Organizations , " Computational Science , vol . 2 , no . 3 , pp . 253 – 261 , August 2011 . [ 28 ] Weidong Wu , " China s Huji System Reform and Social Computing , " in The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 107 Proceedings of the 1st International Conference on Information Technology and Quantitative Management , 2013 , pp . 21 – 25 . [ 29 ] Shamanth Kumar , Nitin Agarwal , and Huan Liu , " Towards Building a Social Computing Tool for Social Scientists , " in Proceedings of the 3rd International Conference on Human - Centric Computing , Cebu , 2010 , pp . 1 - 4 . [ 30 ] Lars Hetmank , " Components and Functions of Crowdsourcing Systems – A Systematic Literature Review , " in Proceedings of the 11th International Conference on Wirtschaftsinformatik , Leipzig , Germany , 2013 , pp . 55 - 69 . [ 31 ] M . Lozano G . Vigueras , J . M . Orduna , and F . Grimaldo , " A Comparative Study of Partitioning Methods for Crowd Simulations , " Applied Soft Computing , vol . 10 , no . 1 , pp . 225 – 235 , Oct . 2010 . [ 32 ] Fabio Paternò , " End User Development : Survey of an Emerging Field for Empowering People , " International Scholarly Research Notices , Software Engineering , no . 1 , pp . 1 - 11 , 2013 . [ 33 ] Irena Pletikosa Cvijikj and Florian Michahelles , " 4 The Toolkit Approach for End - User Participation in the Internet of Things , " in Architecting the Internet of Things , Dieter Uckelmann , Mark Harrison , and Florian Michahell , Eds . : Springer Berlin Heidelberg , Mar 2011 , ch . 4 , pp . 65 - 96 . [ 34 ] Dave Mason , " Flexible Structures for EndUser , " in Proceedings of the 3rd international workshop on free composition , New York , USA , 2012 , pp . 9 - 11 . [ 35 ] Olexiy Chudnovskyy and Martin Gaedke , " End - User - oriented Development and Evolution of Web Applications : The WebComposition Approach , " in Current Trends in Web Engineering , Michael Grossniklaus and Manuel Wimmer , Eds . : Springer Berlin Heidelberg , 2011 , pp . 221 - 226 . [ 36 ] Nan Za , " Mashups on the Web : End User Programming Opportunities and Challenges , " in Proceedings of the PLATEAU 9th Workshop at Onward , Orlando , Florida , USA , 2009 , pp . 1 - 6 . [ 37 ] Heiko Paulheim and Probst Florian , " Ontology - Enhanced User Interfaces : A Survey , " International Journal on Semantic Web and Information Systems , vol . 6 , no . 2 , pp . 1 - 26 , June 2010 . [ 38 ] Onukwugha C . G and Osuagwu O . E , " Critical Analysis of Mobile Devices Based End - User Programming of Smart - Spaces , " Emerging Trends in Computing and Information Sciences , vol . 3 , no . 7 , pp . 1060 - 1067 , July 2012 . [ 39 ] Margaret Burnett , Brad Myers , Mary Beth Rosson , and Susan Wiedenbeck , " The Next Step : From End - User Programming to End - User Software Engineering , " in Proceedings of the Workshop on End - User Software Engineering , Montréal , Quebec , Canada , 2006 , pp . 1 - 49 . [ 40 ] Kathryn T . Stolee , Sebastian Elbaum , and Anita Sarma , " End - User Programmers and their Communities : An Artifact - based Analysis , " in Proceedings of the 5th International Symposium onEmpirical Software Engineering and Measurement , 2012 , pp . 1 - 10 . [ 41 ] David Lizcano , Fernando Alonso , Javier Soriano , and Genoveva López , " Supporting End - User Development through a New Composition Model : An Empirical Study , " Universal Computer Science , vol . 18 , no . 2 , pp . 143 - 176 , 2012 . [ 42 ] David Garlan , Vishal Dwivedi , Ivan Ruchkin , and Bradley Schmerl , " Foundations and Tools for End - User Architecting , " in Large - Scale Complex IT Systems : Development , Operation and Management , Radu Calinescu and David Garlan , Eds . : Springer Berlin Heidelberg , 2013 , pp . 157 - 182 . [ 43 ] Christopher Scaffidi and Margaret Burnett , " End - user Software Engineering , " ACM Computing Surveys , vol . 43 , no . 3 , 2011 , Article 21 . [ 44 ] Brad A . Myers , Andrew Ko , Sun Young Park , and Jeffrey Stylos , " More natural end - user software engineering , " in Proceedings of the 4th international workshop on End - user software engineering , Leipzig , Germany , 2008 . [ 45 ] Tarek Aly , " Visualization for Interactive Sensitivity Analysis of Rule Based System , " Computer Science , Institute of Statistical Studies and Research , Cairo University , Egypt , Master of Science in Computer Science 2011 . [ 46 ] Jan Poschko and Markus Strohmaier , " Pragmatic Analysis of Crowd - Based Knowledge Production Systems with iCAT Analytics : Visualizing Changes to the ICD - 11 Ontology , " Knowledge Management Institute , Graz University of Technology , Graz , Austria , AAAI Technical Report SS - 12 - 06 , 2012 . [ 47 ] Aniket Kittur ; Jeffrey V . Nickerson ; Michael S . Bernstein ; Elizabeth M . Gerber ; Aaron Shaw ; John Zimmerman ; Matthew Lease ; John J . Horton , " The Future of Crowd Work , " in Proceedings of the Conference on Computer Supported Cooperative Work , New York , NY , USA , 2013 , pp . 1301 - 1318 . [ 48 ] Aniket Kittur , Susheel Khamkar , Paul André , and Robert E . Kraut , " CrowdWeaver : - Visually Managing Complex Crowd Work , " in Proceedings of the 12th conference on Computer Supported Cooperative Work , ACM New York , NY , USA , 2012 , pp . 1033 - 1036 . [ 49 ] Christoph Lofi , Kinda El Maarry , and Wolf - Tilo Balke , " Skyline Queries in Crowd - Enabled Databases , " in Proceedings of the 16th International Conference on Extending Database Technology , New York , NY , USA , 2013 , pp . 465 - 476 . [ 50 ] Yael Amsterdamer , Yael Grossman , Tova Milo , and Pierre Senellart , " Crowd Mining , " in Proceedings of the ACM SIGMOD International Conference on Management of Data , New York , USA , 2013 , pp . 241 - 252 . [ 51 ] Stephen Guo , Aditya Parameswaran , and Hector Garcia - Molina , " So Who Won ? Dynamic Max Discovery with the Crowd , " in Proceedings of the ACM SIGMOD International Conference on Management of Data , New York , NY , USA , 2012 , pp . 385 - 396 . [ 52 ] Robert C . Miller , " Crowd Computing and Human Computation Algorithms , " in Proceedings of the International Joint Conference on Human Computer Interaction , 2012 , pp . 1 - 2 . [ 53 ] Roberto Mirizzi , Azzurra Ragone , Tommaso Di Noia , and Eugenio Di Sciascio , " Semantic Tagging for Crowd Computing , " in Proceedings of the International Semantic Web Conference , 2011 , pp . 70 - 77 . [ 54 ] Yen - Ling Kuo and Jane Yung - jen Hsu , " Resource - bounded Crowd - sourcing of Commonsense Knowledge , " in Proceedings of the 22nd International Joint Conference on Artificial Intelligence , Barcelona , Catalonia , Spain , 2011 , pp . 2470 - 2475 . [ 55 ] Michael Scott Bernstein , " Crowd - Powered Systems , " Massachusetts Institute of Technology , Doctor of Philosophy 2012 . The 9th International Conference on INFOrmatics and Systems ( INFOS2014 ) – 15 - 17 December Copyright© 2014 by Faculty of Computers and Information – Cairo University Parallel and Distributed Computing Track PDC - 108