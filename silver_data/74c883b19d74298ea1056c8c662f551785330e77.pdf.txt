CAMP : A Magnetic Poetry Interface for End - User Programming of Capture Applications for the Home Khai N . Truong , Elaine M . Huang and Gregory D . Abowd College of Computing & GVU Center Georgia Institute of Technology Atlanta , GA 30332 - 0280 USA { khai , elaine , abowd } @ cc . gatech . edu Abstract . As the trend towards technology - enriched home environments progresses , the need to enable users to create applications to suit their own lives increases . While several recent projects focus on lowering barriers for application creation by using simplified input mechanisms and languages , these projects often approach application creation from a developer’s perspective , focusing on devices and their interactions , rather than users’ goals or tasks . In this paper , we present a study that examines how users conceptualize applications involving automated capture and playback of home activities and reveals a breadth of home applications that people desire . We introduce CAMP , a system that enables end - user programming for smart home environments based on a magnetic poetry metaphor . We describe how CAMP’s simple interface for creating applications supports users’ natural conceptual models of capture applications . Finally , we present a preliminary evaluation of CAMP and assess its ability to support a breadth of desired home applications as well as the user’s conceptual model . 1 Introduction Ubiquitous computing technology for domestic environments is becoming an increasingly prominent theme of research to support the needs of families and individuals in their homes . With the growing popularity of technologies like home networking , mobile devices , and information appliances , research on ubiquitous computing for the home illustrates the natural trajectory of the integration between the home and technology . While much of this research has been geared towards developing systems to support specific types of home tasks [ 13 , 19 ] , there has been much recent focus on allowing end - users of the technology to create and configure ubicomp applications to suit their own unique needs [ 1 , 5 , 10 , 11 , 15 ] . The aim of these projects is not to prescribe technology for home needs and tasks , but rather to empower users living in technology - enriched home environments to appropriate and use the technologies flexibly to suit their lives and practices . Many of the existing systems focus on the use of simple input languages or metaphor - based GUI interfaces to ease the process of development for end - users who have little or no programming experience . These projects recognize that users need a simple way of specifying applications that does not require specialized technical knowledge in order to extend the power of building customized applications to potential everyday users of such technologies . Despite their use of simplified input languages and mechanisms , these systems tend to be device - centric rather than user - centric , task - centric , or goal - centric . They require that users approach the configuration of ubicomp applications from the perspective of a developer , by treating application development as the configuration and integration of devices and sensors rather than a domestic goal or task that a user is trying to achieve . For example , work by Humble et al . [ 11 ] uses a “jigsaw puzzle” GUI metaphor in which individual devices and sensors are represented by puzzle piece - shaped icons that the user “snaps” together to build an application . While the metaphor is comprehensible and the interactions are simple , the interface treats application creation as the configuration of devices . Our intuition in approaching this research was that we needed to understand users’ natural conceptualizations of ubicomp technologies in order to design interfaces that allow end - users to build ubicomp applications that truly suit their needs . Although we are interested in the larger arena of allowing end - users to build general ubicomp applications , we decided to focus our research specifically on the domain of context - aware capture applications for the home . We chose to scope the research as such for the purposes of tractability and because of our experience and expertise in the domain . We recognize that there exist potential privacy pitfalls regarding capture services for the home and our studies bear out the fact that some people are not comfortable with the idea of capture devices . While we do not intend that our study results and design be interpreted as a prescription for capture technologies in the home ; we believe that they illustrate the potential value for such technologies for the portion of the population who desire them , as well as emphasizing the great need for user customizability of such technologies so that they are useful in ways that suit users’ individual privacy needs and comfort level . We conducted a formative study of how users think about context - aware capture applications to inform our eventual interface design . The purpose of this study was twofold ; through it we aimed to understand the ways that users expressed ideas for ubiquitous computing applications as well as the breadth and types of applications that the users desired for a technology - enriched home . As we had hypothesized , the results of our study showed that people who had no experience developing ubiquitous computing applications tended to frame the descriptions of their desired applications in terms of their domestic goals and needs rather than in terms of device behaviors . Based on the results of the study , we developed CAMP ( Capture and Access Magnetic Poetry ) , an end - user programming environment that allows users to create context - aware capture applications for the home . CAMP has a GUI that is based on a magnetic poetry metaphor ; it allows users to create applications in a way that takes advantage of the flexibility of natural language . CAMP enables users to create programs that reflect the way they conceive of the desired application , rather than requiring that users specify applications in terms of devices . From users’ magnetic poetry - based application descriptions , CAMP generates a specification of a valid capture application that can be executed in a capture - enabled home environment . In this paper , we present the design and results of the formative study , the CAMP system that we designed and built based on those results , and the results of a preliminary evaluation of the interface . 2 Related Research Many toolkits and infrastructures have been constructed for the purposes of supporting ubicomp development . Infrastructures have been built to support the development of physical [ 2 , 9 ] , tangible [ 12 ] and smart devices / applications [ 8 ] , context - aware [ 6 ] and capture - based applications [ 17 ] , and collaboration between heterogeneous devices [ 16 ] . While such infrastructure toolkits and middleware lower barriers for developers , they are not intended for use by end - users who have little knowledge of programming and devices . Several current projects and systems are geared towards simplifying the development of ubicomp applications for the purposes of allowing end - users to build and customize technologies . These systems have greatly lowered the barriers to development by offering input mechanisms and languages that require little or no programming knowledge . In addition to the aforementioned work by Humble et al . using the jigsaw puzzle metaphor to configure applications , several other systems have been developed using metaphors or simple languages . X10 clients provide form interfaces that allow users to specify the behavior of various devices or objects in the home based on events or conditions [ 14 , 20 ] . The Speakeasy system [ 7 ] supports the ad hoc , end - user configuration of devices and applications . Data exchange , user control , discovery of new services and devices , and context - awareness are supported through a set of common interaction patterns defined in mobile code . The HYP system [ 1 ] allows users to create applications for context - aware homes on a mobile phone , specifying actions and conditions by navigating through screens of choices such as “tailored alert on cell phone” and “motion detection in room . ” Media Cubes [ 10 ] offers a tangible interface for programming an environment ; individual faces of an augmented cube represent different programmatic structures , and the user can assign these structures to different devices or objects in the environment by turning the appropriate face of the cube towards the device . The iCAP system [ 15 ] allows users to prototype context - aware applications rapidly using a pen - based interface to specify input and output devices , as well as behavioral rules through drag and drop interactions and pie menus . In SiteView [ 3 ] , Beckmann and Dey incorporated tangible techniques for programming active environments with predictive visualizations . Dey et al . later extended this work to support the ability to program context - aware applications by allowing users to demonstrate the desired context - aware behavior using the “a CAPpella” system [ 5 ] . Their system supports the creation of context - aware applications without requiring end - users to write any code . While the above systems offer users alternatives to extensive programming for building ubicomp applications , they often do so by taking a developer’s task and simplifying the input interaction . CAMP attempts to further bridge the needs - technology gap by offering users not only simple input mechanisms but also the ability to specify applications based on their own conceptualization of an application , rather than the more device - oriented perspective of a developer . CAMP builds upon the work above and the INCA toolkit for capture applications [ 17 ] by exploring how to allow end - users to realize capture and access applications in their homes . 3 Study Description We conducted a study in which we introduced participants to the notion of capture and access and presented them with scenarios depicted as comics illustrating uses of this technology . The survey asked participants to explain the applications in the scenarios in their own words and design a capture and access service of their own . The goal of this study was to understand how users naturally conceptualize ubiquitous capture and access applications in a home environment . This required that we be careful to avoid biasing participants’ perceptions of how such applications function when introducing the concepts behind capture and access . It was also necessary to recruit a diverse population of participants to address a broad spectrum of needs and skills . To obtain data from a large , diverse subject group , we used a Web - based survey , propagated through email . We aimed to gather at least forty responses to ensure a breadth of viewpoints . Because participation was voluntary and we could not assume that all recipients would complete it , we needed a method of disseminating the survey to a population larger than our target number of responses . We created an email that included instructions requesting that the readers take the Web survey and then forward the email to ten acquaintances . To prevent over - propagation , the email contained a value that indicated the number of times it had been forwarded . Readers were asked to increment this number before forwarding the email . Recipients who received an email that had been propagated five times were asked not to forward it any further . We initiated the circulation of this email by sending it to friends and family ; the email propagation helped to ensure a diverse subject population outside of the researchers’ circles of acquaintance . 3 . 1 Presenting Concepts and Scenarios through Comics After reading a brief and simple introduction to ubiquitous capture and access environments , users were shown a pair of “comic strip scenarios”—situations presented in the graphical style of comics ( Figure 1 ) . These scenarios depicted a family of three—father Jim , mother Jane , and son Billy—using and creating capture and access applications in a technology - enriched home environment . We opted to present the sample scenarios through pictures and dialogue between characters rather than as text narratives or description in order to avoid biasing how participants described the applications in text later . The scenarios depict the applications in action pictorially to avoid using specific language that would bias the participants’ conceptualizations and descriptions of how the applications function . The characters were based on those from Calvin & Hobbes cartoon strip ( http : / / calvinandhobbes . com ) , but the scenarios are depicted were novel and all frames were individually hand drawn . We opted to use characters based on those from Calvin & Hobbes because that particular strip is family and home - oriented as well as familiar to many . Using this method , we aimed to avoid biasing participants with language while leading them to focus on home - oriented applications . The following two scenarios are paraphrasings of the comic strip scenarios given to the participants . We present text versions rather than comics here for the purposes of clarity and space ; the text versions did not appear in the Web survey . Scenario 1 : Buffering Dinner Time Conversations . Jim and Jane have much to talk about during dinner . Too often , however , little Billy interrupts their conversation with a dinner disaster causing them to forget what they were talking about . To address this problem , Jim creates an application that records conversation and allows the family to review it on demand . The next night it comes into action during dinner when again Billy interrupts them . This time , Jim is able to play back the audio from right before the interruption occurred , allowing Jane and Jim to resume conversation . The application deletes recorded audio when dinner is over . Figure 1 . A comic strip scenario presented in the survey , with highlighted key frames . Scenario 2 : Capturing Precious Spontaneous Moments . Jim and Jane often struggle just to take a nice picture of their mischievous Billy . One night , Jane brings Billy to kiss Jim goodnight . It is moments like these that are the hardest to anticipate and photograph . That night , Jim decides to take advantage of the existing cameras in the house and create an application to capture such moments . Very late one night , Billy awakens everyone by getting out of bed and dancing to loud music . After putting him back into bed , Jim tells Jane what transpired . Eager to see for herself , Jane uses the application to review captured photos of Billy dancing . From this collection , Jane saves a few particularly adorable shots . The application automatically deletes the other photos after 15 minutes . For each comic strip scenario in the survey , we highlighted four key frames in each comic strip and asked participants to describe what is happening in those frames in their own words to assess their understanding of the situation . The scenes in which characters create applications are intentionally ambiguous , with no detail as to how the character actually specifies the application . We then ask our participants to describe what they believe the character did to create the application to understand their intuitive notions of how the system should work . After presenting the two scenarios , the survey asked participants to describe in their own words a capture and access application that they would like for their home . We asked subjects to provide as much detail as possible to help us understand what the applications would do and how they would work . Participants were given an empty text box in which to describe their application . We chose this free - form format to allow them to express ideas naturally and to avoid imposing any structure that might bias their responses . 3 . 2 The Study Results We collected survey data over the course of a three - week period from a total of 45 participants who completed the survey in its entirety . Our study drew responses from diverse participants with a wide variety of professions including attorneys , librarians , bankers , managers , entrepreneurs , homemakers , graphic designers , educators , anthropologists , students , engineers , and analysts . While over ninety - five percent of the subjects use computers daily , only one third actually had hobby or professional programming experience . Sixty percent of the respondents were female and forty percent were male . Participants ranged from 22 to 64 years of age . We found that the age , marital status , and living situations of the participants influenced their responses regarding the technology . In general , married respondents had family focused responses while single people living alone had individual task - oriented applications , such as a “ubiquitous note - taker” . Younger adults who are primary care providers often wanted applications for monitoring their children while middle - aged adults desired the ability to check on the well - being of their elderly parents remotely . Although seven subjects expressed no use or general desire for the ability to define custom capture services , the majority of the participants described potential applications for capture and access ; some even offered multiple different applications . There was significant overlap among the applications suggested , with multiple participants offering variants of the same general idea . Overall we obtained more than a dozen general application ideas that we grouped into three categories : • providing peace of mind , • collecting records of everyday tasks or objects , or • preserving sentimental memories from experiences . Providing Peace of Mind . The first category consists of applications intended to provide peace of mind for the user . These applications help users feel secure by allowing them to monitor their home or children . The most popular application idea provided by participants in our study was a home security system that automatically begins recording when the user leaves the home and allows her to easily review the captured content remotely or when she returns home . Some application ideas suggest monitoring people instead of spaces . For example , many parents of very young children or expectant parents described an application that would allow them to monitor the well being of their children . One participant expressed this idea as follows : “These technologies could potentially take the place of more traditional baby monitors , allowing caregivers to monitor the activities of young children remotely from other rooms . It would allow greater flexibility , as the technology would not have to be moved into different spaces as the child or the caregiver did . ” A related idea was to allow adults to check on the well - being of their elderly parents remotely . Collecting Records of Everyday Tasks or Objects . The ideas in the second category consisted of applications to help the user collect and keep records of everyday tasks or objects . In these applications , the desired information is not captured for sentimental value or any overarching peace of mind . Instead they provide a record of activity for convenience . Participants suggested the use of capture in the home to allow users to help them keep track of objects ( such as car keys ) and track when and where they were moved . Many people also suggested a simple on - demand audio recording application to allow them to easily record quick notes as needed , possibly for keeping track of to - do items or creative ideas : “I come up with the best ideas when I ' m in the strangest places and at the strangest times ( bed , bathtub , etc ) . A ubiquitous memo pad would be really cool . This tracking of information could extend to a to - do list . Then I could vocalize the to - do list and it would be stored electronically for easy retrieval . The power would be the consolidation of all this important information . Right now I have post - its and papers everywhere . Yuk . ” Preserving Memories of Experiences . Many participants suggested applications in which the house captures memories of people during special events , similar to that presented in the scenario . Variations among the applications mainly involved the length of time the captured information should persist . The application would help users record moments they might miss while otherwise engaged during the event . Participants emphasized the importance of being able to partake in and enjoy events in their homes , rather than having to worry about manually capturing them . One user shared with us this possible use of the technology for preserving memories : “We have an annual pumpkin carving party with about 30 to 50 people at our house every October . It is very difficult to get pictures of everybody at the event , and because we host the event , we don ' t always know everything that ' happened ' . I like the feature of getting pictures of special moments when there is no [ handheld ] camera around . ” Participants expressed a broad range of other application ideas for preserving memories as well , including video to capture baby’s first steps or recording fun conversations to share with others later . 3 . 3 How People Think About Applications In analyzing the data from our survey , we found several interesting patterns that influenced our formalization of the three conceptual models . We observed two phenomena in particular that influence our understanding of how people comfortably describe capture applications . The first pattern we noticed was the general lack of reference to devices of any kind . Participants rarely mentioned cameras , microphones , digital displays , sensors , or any other type of device in their responses . Though technologists often think first of the devices involved in an application , devices are not at the forefront of users’ minds . The following description illustrates how respondents tended to downplay the devices involved in capture : “I am not very experienced in cooking , so I would want to record friends or relatives cooking [ in my kitchen ] . I would not have to take notes and I would be able to see and hear , step by step , how to make a particular dish . I would want the house to start recording when I told it to , and to stop when I told it to . Then I could review it and literally SEE [ what to do while cooking ] . ” Our findings suggest that a more natural way for users to describe a service is not to focus on the devices but rather on the function . People are comfortable describing situations when these services are of interest in terms of time , people , locations , and the activity being performed . Another pattern we found was that most participants described the sensed situation in such a way that the data types for capture are implied . Participants were more likely to use statements like , “record a dinner conversation” than to specify the capture of “audio . ” Words like “record , ” “remember , ” or “hear” are synonymous with “capture” but are more natural for users . The remainder of an application description ( e . g . , “dinner conversation , ” “party , ” “reunion” ) often implies what type of data should be captured—audio , video or both—without specifying it explicitly . 3 . 4 Deriving Conceptual Models We observed that in general , users’ application descriptions follow three patterns or models . A commonality between all three models is the importance of the “sensed situation” as the object of capture ; a sensed situation is a situation that the participant defines using one or more of the “W dimensions” for capture and access applications ( who , what , where , when ) [ 18 ] . In all of the models , participants specified a sensed situation ( e . g . , “the nanny , ” “dinner conversation” or “after 7PM” ) for capture . Model 1 : System as Effector . People who perceive the technology as an effector view it as a system that carries out the commands of the user . Taking the first survey scenario as an example , people who subscribe to this model perceive Jim as a user who tells his house to carry out the task of recording the dinner conversation . After being thus programmed , the system acts independently to record dinner conversations as they occur . The respondents who perceived the scenario in this way described application behavior in command - style : “Record all dinner conversations” In this model , the user commands the system to carry out a task . The task then belongs to the system ; the system is the operator whose job is to act upon a sensed situation . Model 2 : System as Assistant . Another perception of the scenarios indicated that some people regard the technology as an assistant or agent that helps the user with a task . In the case of the first scenario , Jim has a task or responsibility and instructs the system to support him in that responsibility . Users who treat the system as an agent used statements phrased as requests for help : “Never let him forget another dinner conversation” “Help him to remember what they talked about” In this model , the task belongs to the user and the system is called upon to provide functionality to help the user in that task . The user is acting upon the situation and the system is supplementing the user’s actions . Model 3 : System as Effector - Assistant Hybrid . The third way people perceive the technology is as a hybrid of the first two . In this model , the role of the system is perceived as shifting between effector and assistant , acting independently on user instruction but doing so for the purpose of assisting with the user’s task . This model is the least common in our data . Participants who subscribed to this model generally framed their responses in terms of a user’s task , but qualified them with system - centric instructions : “Help me to remember dinner conversations by recording audio when there are people in the room . ” Although the users specify a sensed situation , they also express a human - centered task or responsibility . The lessons we learned from this study and the models we derived from the results led to the design of the CAMP interface for configuring context - aware capture applications . We aimed to design an interface that would support the various models of expression and offer users a simple and flexible way to specify the types of applications they desired . 4 CAMP ( Capture and Access Magnetic Poetry ) The CAMP ( Capture and Access Magnetic Poetry ) system offers users a flexible way to specify desired context - aware capture applications through the use of a “magnetic poetry” metaphor . Users are neither subjected to the rigid rules of conventional programming , nor bound to specify their application in terms of the devices involved . Users are free to construct sentences that can focus on a task or goal as they choose using a subset of natural language . The system still needs to make sense of the user’s application description in terms of the devices involved , because these applications must be manifested as the behavior and interaction of devices . Because CAMP makes use of a restricted and domain - specific vocabulary , it avoids many of the difficulties involved in parsing natural language . CAMP serves as an interface to INCA [ 17 ] , an infrastructure that provides abstractions for the development of capture and access applications . The interface is designed to allow people to use an input language with which they are comfortable and that lets them express their ideas flexibly ; CAMP automatically generates the technology - oriented application specifications necessary for realizing the applications . 4 . 1 The Magnetic Poetry Metaphor In designing an interface that would be both easy to use and powerful for creating ubiquitous computing applications for the home , we chose to use a “magnetic poetry” metaphor . Conventional magnetic poetry sets consist of small , flexible individual magnets , each of which has a word printed on it . Users can combine the words into “poems” or statements to a variety of effects ranging from profound to humorous , see Figure 2 . Magnetic poetry sets often have a theme or topic , such as “love” or “computers” and contain words related to that theme ; the resulting poems are geared towards that topic . The whimsical , playful nature of magnetic poetry makes it an appealing metaphor to employ in our interface ; it offers potential for a fun , non - intimidating way to build applications . As a metaphor , it is easy - to - learn and understand for new users , and already familiar to many . Magnetic poetry requires little or no instruction or specialized prior knowledge to use because it takes advantage of natural language . Figure 2 . Examples of different magnetic poetry arrangements . Magnetic poetry allows people who might not be naturally “poetic” to create something poetic by virtue of the options available to them . They are not creating anything they could not have created using their own vocabulary , but the choices of words that are available to them make it such that nearly any combination of words they create has “poetic feel” to it . In designing the interface , we leverage the two important properties of magnetic poetry to allow users to specify ubicomp applications : 1 ) the flexibility of expression allowed by its use of natural language and 2 ) the constrained vocabulary that restricts users to words that are most meaningful for their context . By doing so , CAMP allows non - developers to create programs that are valid ubicomp applications without having specialized programming knowledge . The constrained vocabulary makes clear to users what their choices are , and what aspects of the system they can play with or configure . The words in the magnetic poetry “set” restrict users to words that have valid meanings in the realm of the technology - enriched home environment , thus alleviating many of the difficulties that arise from migrating from natural language application descriptions to valid ubicomp application specifications . In addition to being an input mechanism by which end - users can potentially create ubicomp applications for their homes , the CAMP interface also serves as a research tool for exploring the design space and vocabulary through which users express their desired applications . 4 . 2 User Interaction with CAMP CAMP offers users the ability to create ubicomp applications using a GUI interface that mimics magnetic poetry . Each word of the input vocabulary is on a separate home or capture - themed magnetic poetry “piece” ; the pieces are located in the upper frame of the interface and all words in the vocabulary are available and visible to the user . We selected the words in the initial vocabulary primarily because they appeared in the descriptions that participants generated in the initial study . Because visually searching for a desired word in a jumble of pieces can be a time - consuming task for the user , the pieces are color - coded by category . Additionally , the interface clusters words in a single category spatially by default . The results of our initial study showed the prominence of the four w’s of capture and access ( who , what , where , when ) in describing applications . We used these w’s to form word categories to ease the search process and added a general category for additional useful words . Some examples of each are : • who : I , me , everyone , no one , family , stranger , baby , wife , Billy , etc . • what : picture , audio , video , conversation , etc . • where : kitchen , living room , home , everywhere , etc . • when : always , later , never , a . m . , morning , day , week , month , before , hour , minute , Sunday , January , once , now , every time , etc . • general : 1 , 2 , a , the , record , remember , view , save , keep , microphone , speaker , etc . The system employs a third feature to assist users in searching for a word among the pieces ; typing the first letter of the word causes the interface to highlight all words that begin with that letter by inverting the text and background color of the piece . Users select words by clicking on them and dragging them down to the poem authoring area on the interface . They can move and re - order words as desired ; the system does not place any restrictions on structure or word order . CAMP provides an easy way for users to extend the vocabulary of the input language . Using the New Magnet creation feature , users can create new words and define them by using the existing magnetic poetry pieces . For example , a user who wishes to use the word “dinner” could create it by specifying “dinner happens between 7 and 9 PM in the dining room” using existing magnets . The poetry interface allows users to express concepts flexibly , but requiring users to define words in terms of existing pieces offers a restricted vocabulary that allows for easier translation by the system . 4 . 3 CAMP as a Translator between User and Technology After creating a poem for the desired application , the user clicks the “run” button , which prompts the interface to read the poem and generate a text - based parsing that is displayed in the bottom frame of interface as feedback to the user . CAMP , by design , investigates a specific application domain . This restriction allows us to avoid the need to use complex natural language processing techniques to parse application descriptions . To translate the user’s description of an application into instructions and parameters for devices , CAMP uses a custom dictionary to reword the user’s description into a format that can be parsed . This dictionary resolves the many different synonymous words ( such as “capture” and “record” ) into a single word ; similarly , all the foreseeable ways a phrase can be expressed are also restructured , such as , “ starting at 3 until 5 P . M . ” , “ from 3 P . M . to 5” , or “ beginning at 3 P . M . for 2 hours ” , into a more succinct phrase : “ between 3 : 00 P . M . and 5 : 00 P . M . ” CAMP recursively decomposes users’ descriptions into a collection of sub - clauses . For example , “ Jim in the kitchen or after 6 P . M . ” is treated as “ [ Jim in the kitchen ] or [ after 6 P . M . ] . ” In some instances the original logic is preserved by replicating information across the sub - clauses . For example , “ Jim or Jane in the kitchen ” becomes “ [ Jim in the kitchen ] or [ Jane in the kitchen ] . ” Figure 3 . The Capture & Access Magnetic Poetry interface . Descriptions can contain redundant information , conflicts , as well as ambiguity . For example , Dinner can be defined to happen “ in the dining room between 7 P . M . and 9 P . M . ” When the user describes her desire for the house “ capture dinner time conversations in the dining room , ” after CAMP restructures the description , the phrase , “in the dining room ” occurs twice . The parser automatically removes this redundant information . If the user’s description was “ capture dinner time conversations in the home ” , “ in the home ” conflicts with the “ in the dining room ” portion of the word dinner’s definition . The information specified in the user’s description overrides the predefined / default parameters obtained from the custom dictionary’s definition . Finally , ambiguity and missing parameters in the rephrased description are flagged or set to predefined / default values . For example , when the user’s description is simply “ capture dinner ” , CAMP assumes that the user wants pictures stored . If the user’s description included words such as audio , conversations , “ what we said ” , “ what I talked about ” , etc . ( i . e . , all words or phrases that are defined to imply audio ) , CAMP would discard this assumption and recognize that the user actually wants audio recorded . Dimensions such as the time , the duration and frequency , the location , and the people to capture must all be present in the description or are flagged as missing . Dimensions marked as missing in the specification can be indicated to the user , providing her with the opportunity to refine the description . Missing information in the final description is replaced by default predefined values . For example , “ record baby ” implies always taking pictures of anywhere the baby is present . As a result , each sub - clause describes the situation for capture and access that can be parsed . We treat a behavior as an action on some artifact in a specific situation . In the current prototype , we are only supporting a limited number of artifacts or data types ( i . e . , still - pictures , audio , and video ) and actions ( i . e . , capture , access , and delete ) . The user’s description of an application can thus be translated into a behavior carried out by the devices in the environment . The user’s description can be a single capture , access or delete request or combinations of the above . An example of an application description consisting of both capture and access behaviors is “always show me where baby Billy is” which would be interpreted as “always record pictures of baby Bill and display at my location a picture of baby Billy . ” In situations where the user’s description is solely of a capture behavior , we assume access will be defined later when needed . If the behavior defined is solely access , the user can only review information that has been previously recorded . When no delete behavior is defined , we assume the captured information should be stored indefinitely . 4 . 4 The Architecture of CAMP CAMP provides users with an interface to specify an application design that is automatically translated into executable form . This interface is built on top of the INCA infrastructure [ 17 ] . INCA abstracts lower level details involved in the development of capture and access applications and provides customizable building blocks that support different architectural concerns . These concerns include : interfaces for capturing and accessing information , components for storing information , a way to integrate relevant streams of information and the removal of unwanted data . INCA provides two additional services that facilitate the development of the CAMP system . An ObserveModule provides a detailed description of the run - time state of the system , listing all available capture and access components . A ControlModule allows for the modification of this run - time state ( i . e . , initiating and ending capture and access of information , as well as the specification of what to capture or what to access ) . Together , these features allow for the dynamic adaptation of application features . All input / output devices available in the physical environment are automatically integrated through INCA . CAMP controls the cameras , microphones , speakers and interactive displays in the environment by assigning the capture and access behaviors of these devices using the ObserveModule and ControlModule described above . CAMP supports the start and stop of capture and access when two specific context conditions occur : time and presence or absence of a person at a location . Time conditions are supported through a clock object that notifies subscribers when a certain time point is reached or some amount of time has expired on a countdown timer . A condition for a person present in a location is supported through a Context Toolkit [ 4 ] widget that maintains the indoor positioning of people in a space . The decision to support these two conditions minimizes the potential design possibilities ; however , we wanted to support what is realistically achievable through today ' s context aware computing sensing . Dey discusses the ability to produce more complex context “situations” in his thesis [ 4 ] . 5 Preliminary Evaluation We conducted a preliminary evaluation of the CAMP interface to assess whether it fulfilled our expectations for simplifying the specification of ubicomp applications for the home . The main purpose of this evaluation was to get early feedback on the interface and determine whether the system suited and supported the conceptual models held by potential everyday users of home ubicomp technology . The secondary purpose of this exercise was to evaluate the sufficiency of the initial vocabulary set that we had derived based on the participant responses from our previous study . We selected six participants between the ages of 26 and 60 from diverse backgrounds with little or no programming experience , and conducted a scaled - down version of our initial comic strip scenario study , incorporating the CAMP interface . We chose to format our study as a close parallel to our initial study for the purpose of achieving consistency . Reusing materials from the initial study helped to ensure that evaluation participants received a similar introduction to ubiquitous computing and capture and access as the formative study participants . For the purposes of this early evaluation , we focused on assessing three major questions for the interface : • Does the CAMP interface allow users to specify or describe desired applications in a natural , task - centric / goal - centric fashion ? • Does CAMP support the creation of the breadth and types of applications that users desire for their technology - enriched homes ? • Does the application that CAMP generates accurately match the user’s desired application ? Unlike the formative study , the evaluation was done in person rather than over the Web . Participants were presented with the introductory description of ubiquitous computing and capture and access , as well as the same two comic - strip scenarios as were presented in the initial study . We then asked them to think of a capture and access application that they would like to have in their own home . The participants were then given a laptop running the CAMP interface and asked to describe both scenarios and their desired application . In the evaluation , we asked them to describe the scenes using CAMP’s magnetic poetry , rather than in freeform text as we had in the initial study . We intentionally asked them to think of their application prior to showing them the interface for the first time so as not to bias their application ideas with the vocabulary available in CAMP . We encouraged participants to “think aloud” while creating their magnetic poem application description to allow us to assess our question about whether CAMP allowed them to build the application that they desired . Participants generally fared quite well with the available words . They found that the vocabulary enabled them to build the applications that they desired , such as in this specification of an application to capture memories from a party : “record video everywhere Saturday night” The applications that people desired correlated closely with the findings of our initial study ; people generally desired applications that would allow them to monitor children , help them find recently misplaced objects , and record parties and special events . We did not observe any instances in which the user was unable to specify the desired application with the words available in the default vocabulary . This suggests that selection of words in the vocabulary that we derived from our initial study is sufficient for creating the most commonly desired home capture and access applications . We also examined the wording of the descriptions of the comic strip scenarios and of their desired applications to assess our question regarding whether users could specify their applications in the manner we predicted they would based on the results of our initial study . Participants did indeed tend to favor task - oriented descriptions of the scenarios and their desired applications : “when Jim Jane and Billy talk record and remember for 20 minute” “record picture in Billy s bedroom at night” “record 1 picture every 4 minute Billy bed room every night until morning stop” One especially interesting finding of the evaluation that supports the hypotheses we drew from our initial study was that even though we made words like “camera” and “microphone” available in the CAMP interface , evaluation participants did not use them , eschewing them in favor of person and task - oriented descriptions . Participants were especially partial to the “System as Effector” model for describing scenarios and applications . While words such as “Help” were available in the interface , we found that people using the interface generally built applications that sounded more like commands , unlike some participants of the initial study who phrased applications more like requests for assistance . Because of the small number of participants in the evaluation , we did not explore this phenomenon in depth , but we hypothesize that people perceived the interface and computer as a tool that takes commands . Although participants were able to specify application descriptions quite easily , they did on occasion find themselves looking for a word that did not exist in the magnets . One user looked for the word “keep , ” for which there was no magnet ; he instead used “remember” as a synonym . While it was our goal to allow users to specify applications using the language most intuitive to them , we also recognize that the CAMP interface cannot scale to display and parse an exhaustive vocabulary . Fortunately , many participants mentioned that not having some words available was not really a problem for them because they were always able to find synonyms or alternate wordings easily . After participants specified their desired application , we presented them with the description parsing generated by CAMP . Since CAMP’s role in creating ubicomp applications is not only to provide the input interface , but also to generate the application description that will be used by the INCA toolkit , this exercise served as a preliminary way of evaluating whether the application generated matched the user’s desired application . We asked participants to tell us whether the description generated by CAMP matched their idea of the application . Although participants generally found that the system’s parsing matched their own occasionally , there were a few instances in which the system’s default translation was incorrect . In these cases , participants were able to recognize the error easily and fix it by changing or adding a word . For example , when the system defaulted to capturing pictures when a user specified “record dinner , ” the participant simply edited the application to read “record dinner conversations” to indicate that he wanted audio recorded . Often , the language in the system parsing was more awkward than their own description because of the way that the system resolved synonyms . For example , one user specified , “capture picture every 5 seconds” using CAMP , and the system translated this to , “capture picture each 5 seconds . ” CAMP generated a valid parsing that matched the user’s intended application but presented it in a way that the user found difficult to understand . In future iterations of the interface , we plan to improve the manifestation of the parsing that CAMP presents to the user to make it more easily comprehensible . Overall , participants described the system as fun to use and easy to learn , especially because of the familiar magnetic poetry interface , which led one user to say , “you know what to do with it right away . ” They especially liked the ability to highlight words by typing the first letter ; some of them began to use this feature by default when they looked for a word ; rather than searching for the word first and then using the keyboard when they could not find it , they immediately typed the first letter of a word when they started looking for it . Although this study presents only a preliminary evaluation of the first design iteration of CAMP , we believe it illustrates how CAMP brings the state - of - the - art of ubicomp application development closer to end - users . One participant , noticing the flexibility of expression that CAMP afforded , reflected aloud about an incident of wanting to take a photograph : “It ' s like when I wanted to get a picture , in my mind , it was ‘I want a picture of [ my friend ] and [ my baby ] ’ , you know ? It ' s only when I couldn ' t find the camera to take the picture that I thought I really needed the camera . ” This statement reaffirmed our belief that in order for end - user programming environments to truly allow users to build the applications that they want for their homes , systems must offer users the ability to express their needs in the way that the users themselves think about them . 6 Conclusions and Future Work Enabling end - users to create and customize applications for their homes remains a difficult problem ; the CAMP interface presented in this paper addresses the challenge of developing a programming environment for users that is both simple to use and powerful . CAMP helps to bridge the needs - technology gap by offering interactions that are not only technically simple , but that fit the user’s natural concept of ubiquitous computing applications . Our early evaluation indicates that the magnetic poetry interface is simple to learn and use , and allows users to build the types of applications they want in the way that makes the most sense to them . We plan to continue testing and evaluating as we iterate upon the design . In terms of understanding the design space and social factors affecting capture applications for the home , we hope to conduct further formative studies using alternate forms of pictorial representation , such as Simpsons cartoons , stick figures , or Batman comics , to understand how the representations affect the scope , breadth , and perception of potential applications . Additional future work includes the exploration of tangible and wall ( or refrigerator ) mountable versions of the CAMP interface . The current version of this system only allows for the description of a single application ; issues involved in extending this work to support the realization of multiple applications in the run - time environment at the same time . An interesting socio - technical direction of interest is the possibility of using the “poems” as visible representations of the applications that are running in the environment ; we aim to assess whether the magnetic poetry can act not only as an input mechanism for building applications but also as comprehensible information in the environment that reminds or informs people of the capture applications that are running but are not overtly visible . Finally , although we scoped our studies and design for the purposes of capture applications for domestic environments , we believe that the CAMP interface and end - user programming interactions have potential value for creating other types of ubicomp applications in a variety of domain . By taking advantage of the metaphor of “themed” and extensible magnetic poetry sets , we hope to apply this design to the exploration of many of these other areas . References 1 . Barkhuus , L . , Vallgårda , A : Smart Home in Your Pocket . In : Adjunct Proceedings of UbiComp 2003 ( 2003 ) 165 - 166 2 . Ballagas , R . , Ringel , M . , Stone , M . , and Borchers , J . : iStuff : A Physical User Interface Toolkit for Ubiquitous Computing Environments . In : Proceedings of ACM Conference on Human Factors in Computing Systems ( CHI 2003 ) . ACM Press , New York ( 2003 ) 537 - 544 3 . Beckmann , C . , Dey , A . : SiteView : Tangibly Programming Active Environments with Predictive Visualization . In : Adjunct Proceedings of UbiComp 2003 ( 2003 ) 167 - 168 4 . Dey , A . K . : Providing Architectural Support for Building Context - Aware Applications . In : Ph . D . Thesis . College of Computing , Georgia Institute of Technology ( 2000 ) 5 . Dey , A . K . , Hamid , R . , Beckmann , C . , Li , I . , Hsu , D . : a CAPpella : Programming by Demonstration of Context - Aware Applications . In : Proceedings of ACM Conference on Human Factors in Computing Systems ( CHI 2004 ) . ACM Press , New York ( 2004 ) 33 - 40 6 . Dey , A . K . , Salber , D . , Abowd , G . D . : A Conceptual Framework and a Toolkit for Supporting the Rapid Prototyping of Context - Aware Applications . In : Human - Computer Interaction ( HCI ) Journal . 16 ( 2 - 4 ) ( 2001 ) 97 - 166 7 . Edwards , W . K . , Newman , M . W . , Sedivy , J . , Smith , T . , Izadi , S . : Challenge : Recombinant Computing and the Speakeasy Approach . In : Proceedings of the Eighth Annual International Conference on Mobile Computing and Networking ( MobiCom 2002 ) . ACM Press , New York ( 2002 ) 279 - 286 8 . Gellersen , H . W . , Schmidt , A . , Beigl , M . : Multi - Sensor Context - Awareness in Mobile Devices and Smart Artefacts . In : Mobile Networks and Applications ( MONET ) . 7 ( 5 ) ( 2002 ) 341 - 351 9 . Greenberg , S . and Fitchett , C . : Phidgets : Easy Development of Physical Interfaces through Physical Widgets . In : Proceedings of the 14 th Annual ACM Symposium on User Interface Software and Technology ( UIST 2001 ) . ACM Press , New York ( 2001 ) 209 - 218 10 . Hague , R . , Robinson , P . , Blackwell , A . : Towards Ubiquitous End - User Programming . In : Adjunct Proceedings of UbiComp 2003 ( 2003 ) 169 - 170 11 . Humble , J . , Crabtree , A . , Hemmings , T . , Åkesson , K . , Koleva , B . , Rodden , T . , Hansson , P . : " Playing with the Bits " User - Configuration of Ubiquitous Domestic Environments . In : Proceedings of UBICOMP 2003 . Springer - Verlag , Berlin Heidelberg New York ( 2003 ) 256 - 263 12 . Klemmer , S . R . , Li , J . , Lin , J . , Landay , J . A . : Papier - Mâché : Toolkit Support for Tangible Input . In : Proceedings of ACM Conference on Human Factors in Computing Systems ( CHI 2004 ) . ACM Press , New York ( 2004 ) 399 - 406 13 . Nagel , K . , Kidd , C . D . , O’Connell , T . , Dey , A . K . , Abowd , G . D . : The Family Intercom : Developing a Context - Aware Audio Communication System . In : Proceedings of Ubicomp 2001 : Ubiquitous Computing . Springer - Verlag , Berlin Heidelberg New York ( 2001 ) 176 - 183 14 . Smarthome X10 Kit . http : / / www . smarthome . com 15 . Sohn , T . , Dey , A . K . : iCAP : An Informal Tool for Interactive Prototyping of Context - Aware Applications . In : Extended Abstracts of ACM Conference on Human Factors in Computing Systems ( CHI 2003 ) . ACM Press , New York ( 2003 ) 974 - 975 16 . Tandler , P . : Software Infrastructure for Ubiquitous Computing Environments : Supporting Synchronous Collaboration with Heterogeneous Devices . In : Proceedings of Ubicomp 2001 : Ubiquitous Computing . Springer - Verlag , Berlin Heidelberg New York ( 2001 ) 96 - 115 17 . Truong , K . N . , Abowd , G . D . : INCA : A Software Infrastructure to Facilitate the Construction and Evolution of Ubiquitous Capture & Access Applications . In : Proceedings of Second International Conference on Pervasive Computing ( Pervasive 2004 ) . Springer - Verlag , Berlin Heidelberg New York ( 2004 ) 140 - 157 18 . Truong , K . N . , Abowd , G . D . , Brotherton , J . A . : Who , What , When , Where , How : Design issues of capture and access applications . In : Proceedings of Ubicomp 2001 : Ubiquitous Computing . Springer - Verlag , Berlin Heidelberg New York ( 2001 ) 209 - 224 19 . Wan , D . : Magic Medicine Cabinet : A Situated Portal for Consumer Healthcare . In : Proceedings of the First International Symposium on Handheld and Ubiquitous Computing ( HUC 1999 ) . Springer - Verlag , Berlin Heidelberg New York ( 1999 ) 352 - 355 20 . X10 Client . http : / / x10controller . sourceforge . net / X10Controller / X10Client /