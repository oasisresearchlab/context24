Ontologies (cid:0) Principles(cid:2) Methods and Applications Mike Uschold (cid:2) Michael Gruninger AIAI(cid:3)TR(cid:3)(cid:4)(cid:5)(cid:4) February (cid:4)(cid:5)(cid:5)(cid:6) To appear in Knowledge Engineering Review Volume (cid:4)(cid:4) Number (cid:7)(cid:8) June (cid:4)(cid:5)(cid:5)(cid:6) Mike Uschold Michael Gruninger Arti(cid:2)cial Intelligence Applications Institute Department of Industrial Engineering (cid:3)AIAI(cid:4)(cid:5) The University of Edinburgh University of Toronto (cid:6)(cid:7) South Bridge Toronto(cid:8) Ontario Edinburgh EH(cid:9) (cid:9)HN M(cid:10)S (cid:9)A(cid:11) Scotland Canada Tel(cid:12) (cid:13)(cid:11)(cid:11) (cid:3)(cid:7)(cid:4)(cid:9)(cid:14)(cid:9) (cid:15)(cid:10)(cid:7)(cid:16)(cid:17)(cid:18)(cid:14)(cid:17) (cid:13)(cid:9) (cid:11)(cid:9)(cid:15)(cid:16)(cid:19)(cid:18)(cid:6)(cid:16)(cid:15)(cid:14)(cid:11)(cid:18) Fax(cid:12) (cid:13)(cid:11)(cid:11) (cid:3)(cid:7)(cid:4)(cid:9)(cid:14)(cid:9) (cid:15)(cid:10)(cid:7)(cid:16)(cid:15)(cid:10)(cid:9)(cid:14) (cid:13)(cid:9) (cid:11)(cid:9)(cid:15)(cid:16)(cid:19)(cid:18)(cid:9)(cid:16)(cid:17)(cid:11)(cid:18)(cid:19) Email(cid:12) m(cid:2)uschold(cid:3)ed(cid:2)ac(cid:2)uk mudcat(cid:3)ie(cid:2)utoronto(cid:2)ca c (cid:0) The University of Edinburgh(cid:8) (cid:4)(cid:5)(cid:5)(cid:6)(cid:9) Abstract This paper is intended to serve as a comprehensive introduction to the emerg(cid:2) ing (cid:3)eld concerned with the design and use of ontologies(cid:4) We observe that disparate backgrounds(cid:5) languages(cid:5) tools(cid:5) and techniques are a major barrier to e(cid:6)ective com(cid:2) munication among people(cid:5) organisations(cid:5) and(cid:7)or software systems(cid:4) We show how the development and implementation of an explicit account of a shared understanding (cid:8)i(cid:4)e(cid:4) an (cid:9)ontology(cid:10)(cid:11) in a given subject area(cid:5) can improve such communication(cid:5) which in turn(cid:5) can give rise to greater reuse and sharing(cid:5) inter(cid:2)operability(cid:5) and more reliable software(cid:4) After motivating their need(cid:5) we clarify just what ontologies are and what purposes they serve(cid:4) We outline a methodology for developing and evaluating ontologies(cid:5) (cid:3)rst discussing informal techniques(cid:5) concerning such issues as scoping(cid:5) handling ambiguity(cid:5) reaching agreement and producing de(cid:3)nitions(cid:4) We then consider the bene(cid:3)ts of and describe(cid:5) a more formal approach(cid:4) We re(cid:2)visit the scoping phase(cid:5) and discuss the role of formal languages and techniques in the speci(cid:3)cation(cid:5) implementation and evaluation of ontologies(cid:4) Finally(cid:5) we review the state of the art and practice in this emerging (cid:3)eld(cid:5) considering various case studies(cid:5) software tools for ontology development(cid:5) key research issues and future prospects(cid:4) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page i Contents (cid:3) Introduction (cid:3) (cid:4) Why Ontologies(cid:2) and What are They(cid:5) (cid:4) (cid:7)(cid:9)(cid:4) What are the Problems(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7) (cid:7)(cid:9)(cid:7) How can we Solve them(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7) (cid:7)(cid:9)(cid:11) Examples (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11) (cid:7)(cid:9)(cid:11)(cid:9)(cid:4) Unifying Research Fields (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11) (cid:7)(cid:9)(cid:11)(cid:9)(cid:7) Semi(cid:3)Conductor Fabrication (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12) (cid:7)(cid:9)(cid:11)(cid:9)(cid:11) Spacecraft Mission Operations (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13) (cid:7)(cid:9)(cid:12) What is an ontology(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13) (cid:6) Uses of Ontologies (cid:7) (cid:11)(cid:9)(cid:4) Communication (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:14) (cid:11)(cid:9)(cid:7) Inter(cid:3)Operability (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:5) (cid:11)(cid:9)(cid:7)(cid:9)(cid:4) Ontologies as Inter(cid:3)Lingua (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:5) (cid:11)(cid:9)(cid:7)(cid:9)(cid:7) Dimensions of Inter(cid:3)Operability (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:15) (cid:11)(cid:9)(cid:11) Systems Engineering (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:7) (cid:11)(cid:9)(cid:11)(cid:9)(cid:4) Speci(cid:16)cation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:7) (cid:11)(cid:9)(cid:11)(cid:9)(cid:7) Reliability (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:11) (cid:11)(cid:9)(cid:11)(cid:9)(cid:11) Reusability (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:11) (cid:8) A Skeletal Methodology for Building Ontologies (cid:3)(cid:8) (cid:12)(cid:9)(cid:4) Purpose and Scope (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:13) (cid:12)(cid:9)(cid:7) Building the Ontology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:13) (cid:12)(cid:9)(cid:7)(cid:9)(cid:4) Capture (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:13) (cid:12)(cid:9)(cid:7)(cid:9)(cid:7) Coding (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:13) (cid:12)(cid:9)(cid:7)(cid:9)(cid:11) Integrating Existing Ontologies (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:6) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page ii (cid:12)(cid:9)(cid:11) Evaluation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:6) (cid:12)(cid:9)(cid:12) Documentation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:17) (cid:12)(cid:9)(cid:13) Initial Guidelines for Designing Ontologies (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:17) (cid:9) Ontology Capture (cid:3)(cid:10) (cid:13)(cid:9)(cid:4) Scoping (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:5) (cid:13)(cid:9)(cid:7) Produce De(cid:16)nitions (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:4)(cid:5) (cid:13)(cid:9)(cid:7)(cid:9)(cid:4) Deciding What To Do Next (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:15) (cid:13)(cid:9)(cid:7)(cid:9)(cid:7) Reaching Agreement (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:7) (cid:13)(cid:9)(cid:11) Review (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:12) (cid:13)(cid:9)(cid:12) Meta(cid:3)Ontology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:12) (cid:11) A Formal Approach to Ontology Design and Evaluation (cid:4)(cid:8) (cid:6)(cid:9)(cid:4) The Role of Formal Languages (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:12) (cid:6)(cid:9)(cid:4)(cid:9)(cid:4) Declarative Speci(cid:16)cation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:13) (cid:6)(cid:9)(cid:4)(cid:9)(cid:7) Implementing Ontologies (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:6) (cid:6)(cid:9)(cid:4)(cid:9)(cid:11) The Role of Automation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:17) (cid:6)(cid:9)(cid:7) Overview of a Formal Methodology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:14) (cid:6)(cid:9)(cid:11) Motivating Scenarios (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:5) (cid:6)(cid:9)(cid:12) Informal Competency Questions (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:7)(cid:5) (cid:6)(cid:9)(cid:13) Terminology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:4) (cid:6)(cid:9)(cid:13)(cid:9)(cid:4) Informal Terminology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:4) (cid:6)(cid:9)(cid:13)(cid:9)(cid:7) Speci(cid:16)cation of Formal Terminology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:4) (cid:6)(cid:9)(cid:6) Formal Competency Questions (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:7) (cid:6)(cid:9)(cid:17) Speci(cid:16)cation of Formal Axioms (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:11) (cid:6)(cid:9)(cid:14) Completeness Theorems (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:11) (cid:7) Ontologies in Practice (cid:6)(cid:8) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page iii (cid:17)(cid:9)(cid:4) Ontologies for Inter(cid:3)Operability (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:12) (cid:17)(cid:9)(cid:4)(cid:9)(cid:4) Process Interchange Format (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:12) (cid:17)(cid:9)(cid:4)(cid:9)(cid:7) KRSL Plan Ontology (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:13) (cid:17)(cid:9)(cid:7) The Role of Standards (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:6) (cid:17)(cid:9)(cid:7)(cid:9)(cid:4) Work(cid:18)ow Management Coalition (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:6) (cid:17)(cid:9)(cid:7)(cid:9)(cid:7) STEP (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:6) (cid:17)(cid:9)(cid:7)(cid:9)(cid:11) CORBA (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:17) (cid:17)(cid:9)(cid:7)(cid:9)(cid:12) KIF and Conceptual Graphs (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:17) (cid:17)(cid:9)(cid:11) Implemented Integrated Ontologies (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:14) (cid:17)(cid:9)(cid:11)(cid:9)(cid:4) CYC (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:14) (cid:17)(cid:9)(cid:11)(cid:9)(cid:7) TOVE (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:14) (cid:17)(cid:9)(cid:11)(cid:9)(cid:11) Enterprise (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:11)(cid:5) (cid:17)(cid:9)(cid:11)(cid:9)(cid:12) KACTUS (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:15) (cid:17)(cid:9)(cid:11)(cid:9)(cid:13) Plinius (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:15) (cid:17)(cid:9)(cid:12) Computer Support Tools(cid:19) KSL Ontology Server (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:4) (cid:17)(cid:9)(cid:12)(cid:9)(cid:4) Background (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:7) (cid:17)(cid:9)(cid:12)(cid:9)(cid:7) Overview (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:7) (cid:17)(cid:9)(cid:12)(cid:9)(cid:11) Specifying Ontologies (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:11) (cid:17)(cid:9)(cid:12)(cid:9)(cid:12) Translation (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:12)(cid:12) (cid:10) Conclusions and Future Directions (cid:8)(cid:9) A The Plinius Project and its Ontology (cid:9)(cid:6) A(cid:9)(cid:4) Setting and scope (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:11) A(cid:9)(cid:7) Ontology development in Plinius (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:12) A(cid:9)(cid:11) Further information (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:12) B Using Ontologies to Enable Enterprise Model Integration (cid:9)(cid:11) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page iv B(cid:9)(cid:4) Introduction (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:6) B(cid:9)(cid:7) What Is Enterprise Model Integration(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:6) B(cid:9)(cid:11) Why Is Enterprise Model Integration Hard(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:17) B(cid:9)(cid:12) Why Ontologies(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:13)(cid:14) B(cid:9)(cid:13) How Can Ontologies Enable The Integration Of Enterprise Modeling Tools(cid:10) (cid:0) (cid:13)(cid:5) B(cid:9)(cid:6) How Can Ontologies Enable The Integration Of Enterprise Models(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:0) (cid:6)(cid:4) B(cid:9)(cid:17) What Are The Advantages Of Using Ontologies For IDSE Technology(cid:10) (cid:0) (cid:0) (cid:0) (cid:0) (cid:6)(cid:7) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4) (cid:2) Introduction The overall goal of this paper is to give readers a practical understanding of the emerging (cid:16)eld concerned with the nature and use of ontologies(cid:9) This is an introduction to the (cid:16)eld(cid:8) rather than a comprehensive review of it(cid:9) In particular(cid:8) our aim is that readers will(cid:19) (cid:2) Understand what is meant by the term (cid:20)ontology(cid:21)(cid:22) (cid:2) Know the range of purposes that an ontology may serve and thus to be able to identify when to use an ontology for their own problems(cid:22) (cid:2) Be familiar with a number of current applications of ontologies(cid:22) (cid:2) Be familiar with the current state of the technology(cid:8) in particular(cid:19) (cid:12) the main steps in building an ontology(cid:8) (cid:12) analytical techniques and software tools to support the process of building and using ontologies(cid:8) (cid:12) current limitations of such techniques(cid:22) (cid:2) Have a better understanding of the potential for commercial exploitation of ontologies in the short(cid:8) medium(cid:8) and long term(cid:9) Outline We begin by motivating the need for ontologies(cid:8) in particular by describing a number of important problems that obstruct communication between or among people(cid:8) organisations(cid:8) and(cid:23)or software systems(cid:9) We illustrate that the development and implementation of an explicit account of a shared understanding (cid:24)i(cid:2)e(cid:2)(cid:9) an (cid:20)ontology(cid:21)(cid:25) in a given subject area(cid:8) can help solve these problems(cid:9) We brie(cid:18)y consider the nature of an ontology(cid:8) and the range of uses that they have(cid:9) We outline a skeletal methodology for the process of developing and using ontologies(cid:9) In sub(cid:3) sequent sections(cid:8) we generalise and summarise our experiences in developing two signi(cid:16)cant ontologies in the domain of enterprise modelling(cid:9) In doing so(cid:8) we elaborate on some of the speci(cid:16)c steps outlined in the skeletal methodology(cid:9) We consider (cid:16)rst(cid:8) someimportantinformal techniques for ontologydevelopment(cid:9) We proceed by considering how to identify what the important concepts and ideas are in a domain of interest(cid:8) thus limiting the scope of the ontology(cid:9) Next(cid:8) we give a procedure and suggest guidelines for producing the actual de(cid:16)nitions(cid:8) and how to reach agreement(cid:9) Next(cid:8) we consider advantages of and describe a more formal approach to the development of ontologies(cid:9) We re(cid:3)visit the scoping phase(cid:8) and discuss the role of formal languages and techniques in the speci(cid:16)cation(cid:8) implementation and evaluation of ontologies(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7) In x (cid:17) we describe a variety of practical applications of ontologies(cid:9) We look at various case studies(cid:8) reviewing what is available by way of software tools and techniques for ontology development and implementation(cid:9) We conclude by reviewing some important research issues(cid:8) summarising the state of the art and discussing future directions(cid:9) (cid:3) Why Ontologies(cid:4) and What are They(cid:5) (cid:0)(cid:2)(cid:3) What are the Problems(cid:4) People(cid:8) organisations(cid:8) and software systems must communicate between and among them(cid:3) selves(cid:9) However(cid:8) due to di(cid:26)erent needs and background contexts(cid:8) there can be widely varying viewpoints and assumptions regarding what is essentially the same subject matter(cid:9) Each uses di(cid:26)erent jargon(cid:22) each may have di(cid:26)ering(cid:8) overlapping and(cid:23)or mis(cid:3)matched concepts(cid:8) structures and methods(cid:9) The consequent lack of a shared understanding leads to (cid:2) poor communication within and between these people and their organisations(cid:9) In the context of building an IT system(cid:8) this lack of a shared understanding leads to (cid:2) di(cid:27)culties in identifying requirements and thus in the de(cid:16)ning of a speci(cid:3)cation of the system(cid:9) Disparate modelling methods(cid:8) paradigms(cid:8) languages and software tools severely limit(cid:19) (cid:2) inter(cid:4)operability(cid:22) (cid:2) the potential for re(cid:4)use and sharing(cid:9) In turn this leads to (cid:2) much wasted e(cid:5)ort re(cid:4)inventing the wheel(cid:9) (cid:0)(cid:2)(cid:0) How can we Solve them(cid:4) The way to address these problems(cid:8) is to reduce or eliminate conceptual and terminological confusion and come to a shared understanding(cid:9) Such an understanding can function as a unifying framework for the di(cid:26)erent viewpoints and serve as the basis for(cid:19) Communication between people with di(cid:26)erent needs and viewpoints arising from their di(cid:26)ering contexts(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11) Inter(cid:13)Operability among systems achieved by translating between di(cid:26)erent modelling methods(cid:8) paradigms(cid:8) languages and software tools(cid:22) System Engineering Bene(cid:14)ts(cid:0) In particular(cid:8) Re(cid:4)Usability(cid:6) the shared understanding is the basis for a formal encoding of the important entities(cid:8) attributes(cid:8) processes and their inter(cid:3)relationships in the do(cid:3) main of interest(cid:9) This formal representation may be (cid:24)or become so by automatic translation(cid:25) a re(cid:3)usable and(cid:23)or shared component in a software system(cid:9) Reliability(cid:6) A formalrepresentation also makes possible the automationof consistency checking resulting in more reliable software(cid:9) Speci(cid:3)cation(cid:6) the shared understanding can assist the process of identifying require(cid:3) ments and de(cid:16)ning a speci(cid:16)cation for an IT system(cid:9) This is especially true when the requirements involve di(cid:26)erent groups using di(cid:26)erent terminology in the same domain(cid:8) or multiple domains(cid:9) (cid:0)(cid:2)(cid:5) Examples (cid:4)(cid:15)(cid:6)(cid:15)(cid:3) Unifying Research Fields Here we describe an interesting example whereby a shared understanding can be used to enhance communication between people(cid:9) Situation(cid:2)Problem(cid:3) Researchers in the di(cid:26)erent but related (cid:16)elds of AI Planning(cid:8) De(cid:3) cision Theory(cid:8) and Distributed Systems Theory (cid:24)from work in theoretical computer science(cid:25) cannot readily make use of each other(cid:21)s results(cid:9) This is because they have a di(cid:26)erent perspective on(cid:8) and use di(cid:26)erent terms to describe(cid:8) the same underlying ideas(cid:9) Solution(cid:3) Develop a unifying conceptual framework which enables research results in one (cid:16)eld to be applied to the other (cid:16)elds(cid:9) How(cid:4) Identify the common ideas in each of these (cid:16)elds and the terms used that correspond to them(cid:9) Perform a careful technical analysis of what exactly these concepts are(cid:22) identify any exact matches(cid:8) and note other importantrelationships between them(cid:9) This unifying conceptual framework is intended to function as an lingua(cid:3)franca enabling translation between the di(cid:26)erent perspectives in the three sub(cid:16)elds(cid:9) When a new research result is published(cid:8) it may be possible to interpret the results in one (cid:16)eld using terms from another(cid:9) For example(cid:8) a new algorithm to solve a problem in Distributed Systems Theory might be used as a new search algorithm in an AI planning system(cid:9) So What(cid:4) By allowing the conceptual frameworks and underlying assumptions in each of the three (cid:16)elds to be compared and built upon(cid:8) there is great potential for increasing the rate of progress in all three (cid:16)elds by avoiding re(cid:3)discovering equivalent results(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12) This example was obtained from an invited talk by Michael George(cid:26) titled (cid:28)Agents and Their Plans(cid:29) given at IJCAI(cid:3)(cid:5)(cid:13) in Montreal(cid:9) Although much more remains to be done before the uni(cid:16)cation is fully accomplished(cid:8) preliminary results are encouraging (cid:0) (cid:9) (cid:4)(cid:15)(cid:6)(cid:15)(cid:4) Semi(cid:13)Conductor Fabrication Situation(cid:2)Problem(cid:3) Software bought infromthe outside includes a WIP tracking system (cid:2) and production line simulation package(cid:9) The simulation package requires as input(cid:8) a very large description of a model of the product (cid:18)ow in the factory(cid:8) which incorporates various details of the WIP tracking mechanism(cid:9) When new versions of the simulation package are released(cid:8) or if a new supplier is chosen(cid:8) the model must be converted to a new format(cid:9) This conversion is both time(cid:4)consuming and error(cid:4)prone(cid:9) Solution(cid:3) Automate the process of converting the model when new external software is introduced(cid:9) This both saves time and ensures model (cid:16)delity(cid:9) How(cid:4) There are (cid:11) intersecting domains of interest(cid:19) WIP tracking(cid:8) product (cid:18)ow simula(cid:3) tion(cid:8) and the semi(cid:3)conductor fabrication process(cid:9) Whichever particular WIP tracking system or simulation package is used(cid:8) the underlying concepts are the same(cid:9) The ap(cid:3) proach was to develop a unifying framework which identi(cid:16)ed(cid:8) de(cid:16)ned(cid:8) and named all the important concepts in this intersection(cid:9) The models are expressed in terms of this framework and stored in an Oracle relational database(cid:9) An automatic translator converts the models from the Oracle DB into the format required by the simulation software(cid:9) If the simulation software changes(cid:8) then the translator must be changed(cid:8) manually(cid:9) However(cid:8) the changes are usually relatively minor(cid:8) especially compared to the original task of manually converting the model(cid:9) The Oracle DB is itself populated by a translator that extracts information from the WIP tracking system(cid:9) Just as the DB entries are automatically translated into model components required as input to the simulator(cid:8) WIP system tracking entries are also automatically translated into DB entries(cid:9) So What(cid:4) This insulates the semiconductor fabrication company from changes in software provided externally(cid:8) thus saving time and ensuring model (cid:16)delity(cid:9) Development of the unifying framework assisted in the speci(cid:3)cation of the software for representing the appropriate concepts in the model and translating it into the appropriate format(cid:9) The framework was the basis for implementing the sound software engineering practice of modularity(cid:8) which in turn facilitated inter(cid:4)operability of independently produced software(cid:9) (cid:0) There is no paper that directly corresponds to the talk(cid:8) however(cid:8) this material is covered by a number of papers that may be found at (cid:20)http(cid:12)(cid:21)(cid:21)www(cid:22)aaii(cid:22)oz(cid:22)au(cid:21)(cid:23)(cid:22) (cid:2) WIP is for Work In Progress(cid:5) such trackers monitor location and status of products as they are being assembled(cid:22) They are updated every time value is added during production(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13) (cid:4)(cid:15)(cid:6)(cid:15)(cid:6) Spacecraft Mission Operations Situation(cid:2)Problem(cid:19) Various knowledge(cid:3)based systems were developed independently to assist in di(cid:26)erent aspects of spacecraft operations (cid:24)e(cid:2)g(cid:2) in planning(cid:8) anomalydetection(cid:8) diagnosis(cid:25)(cid:9) Each uses its own approach to structuring and representing the relevant concepts in a large knowledge base(cid:9) It is desirable to integrate these system(cid:8) so that each can make use of the knowledge of the others(cid:9) For example(cid:8) mission planning results are inputs to the mission execution system(cid:22) anomalies are input to the diagnosis system(cid:9) However(cid:8) the di(cid:26)ering approaches are a barrier(cid:9) Furthermore(cid:8) it is undesirable (cid:24)and perhaps impractical(cid:25) to impose a uniform approach on any of the individual systems(cid:9) Solution(cid:0) Use a federated agent(cid:3)based approach to knowledge sharing(cid:9) The overall system is called ATOS(cid:19) Advanced Technology Operations System(cid:9) (cid:30)(cid:7)(cid:15)(cid:8) (cid:7)(cid:4)(cid:31) How(cid:4) Identify the important underlying concepts(cid:8) de(cid:16)ne them(cid:8) assign terms to them and note their important inter(cid:3)relationships(cid:9) This is a unifying framework(cid:8) which is the basis for achieving inter(cid:3)system integration(cid:9) It is the heart of the ATOS infra(cid:3)structure(cid:9) Each separate module remains unchanged(cid:22) agents act as brokers between the individual systems(cid:9) The unifying framework acts as a standard to which each agent must comply e(cid:2)g(cid:2) such terms as (cid:20)resource(cid:21)(cid:8) or (cid:20)schedule(cid:21) have a carefully de(cid:16)ned agreed meaning(cid:9) Such compliance serves to guarantee for other agents that terms are being used in a particular manner(cid:8) which in turn enables knowledge in one sub(cid:3)system to be accessible to other sub(cid:3)systems(cid:9) The framework acts as a lingua(cid:3)franca(cid:9) Each agent translates the encoding used by the independent module into the representation used in the unifying framework(cid:8) and vice versa(cid:9) In ATOS(cid:8) the framework is represented in a formal language(cid:8) this facilitates (cid:24)semi(cid:3) (cid:25)automatic development of the agent translators and ensuring compliance with the standard(cid:9) So What(cid:4) This approach facilitates knowledge sharing and inter(cid:4)operability between inde(cid:3) pendently developed sub(cid:3)systems(cid:9) (cid:0)(cid:2)(cid:6) What is an ontology(cid:4) (cid:20)Ontology(cid:21) is the term used to refer to the shared understanding of some domain of interest which may be used as a unifying framework to solve the above problems in the above(cid:3) described manner(cid:9) An ontology necessarily entails or embodies some sort of world view with respect to a given domain(cid:9) The world view is often conceived as a set of concepts (cid:24)e(cid:2)g(cid:2) entities(cid:8) attributes(cid:8) processes(cid:25)(cid:8) their de(cid:16)nitions and their inter(cid:3)relationships(cid:22) this is is referred to as a conceptu(cid:4) alisation(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:6) Such a conceptualisation may be implicit(cid:8) e(cid:2)g(cid:2) existing only in someone(cid:21)s head(cid:8) or embodied in a piece of software(cid:9) For example(cid:8) an accounting package presumes some world view encompassing such concepts as invoice(cid:8) and a department in an organisation(cid:9) The word (cid:20)ontology(cid:21) is sometimes used to refer to this implicit conceptualisation(cid:9) However(cid:8) the more standard usage and that which we will adopt is that the ontology is an explicit account or representation of (cid:30)some part of(cid:31) a conceptualisation(cid:9) What does an ontology look like(cid:5) An (cid:30)explicit(cid:31) ontology may take a variety of forms(cid:8) but necessarily it will include a vocabulary of terms and some speci(cid:16)cation of their meaning (cid:24)i(cid:2)e(cid:2) de(cid:16)nitions(cid:25)(cid:9) The degree of formalityby which a vocabulary is created and meaning is speci(cid:16)ed varies con(cid:3) siderably(cid:9) Four somewhat arbitrary points along what might be thought of as a continuum are(cid:19) (cid:2) highly informal(cid:19) expressed loosely in natural language (cid:2) semi(cid:3)informal(cid:19) expressed in a restricted and structured form of natural language(cid:8) greatly increasing clarity by reducing ambiguity(cid:8) e(cid:2)g(cid:2) the text version of the (cid:20)Enterprise Ontology(cid:21) ct(cid:30)(cid:4)(cid:5)(cid:31) (cid:24)see x (cid:17)(cid:9)(cid:11)(cid:9)(cid:11)(cid:25)(cid:9) (cid:2) semi(cid:3)formal(cid:19) expressed in an arti(cid:16)cial formally de(cid:16)ned language(cid:8) e(cid:2)g(cid:2) the Ontolingua version of the Enterprise Ontology(cid:22) (cid:2) rigorously formal(cid:19) meticulously de(cid:16)ned terms with formal semantics(cid:8) theorems and proofs of such properties as soundness and completeness(cid:9) e(cid:2)g(cid:2) TOVE(cid:9) The following quote from the SRKB (cid:24)Shared Re(cid:3)usable Knowledge Bases(cid:25) electronic mailing list nicely summarises what an ontology is and the various forms and contexts it arises in(cid:9) (cid:28)Ontologies are agreements about shared conceptualizations(cid:9) Shared conceptual(cid:3) izations include conceptual frameworks for modeling domainknowledge(cid:22) content(cid:3) speci(cid:16)c protocols for communication among inter(cid:3)operating agents(cid:22) and agree(cid:3) ments about the representation of particular domain theories(cid:9) In the knowledge sharing context(cid:8) ontologies are speci(cid:16)ed in the form of de(cid:16)nitions of represen(cid:3) tational vocabulary(cid:9) A very simple case would be a type hierarchy(cid:8) specifying classes and their subsumption relationships(cid:9) Relational database schemata also serve as ontologies by specifying the relations that can exist in some shared database and the integrity constraints that must hold for them(cid:9)(cid:29) Closing Remarks Our focus has been on identifying real problems and identifying real approaches to solving them(cid:9) We aim to be non(cid:3)controversial(cid:8) merely re(cid:18)ecting how the term (cid:20)ontology(cid:21) is being used in this community(cid:9) A separate concern is the unfortunate fact that there is no agreed meaning of the term (cid:24)see (cid:30)(cid:4)(cid:13)(cid:31) for a competent analysis of this situation(cid:25)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:17) (cid:0) (cid:2) (cid:3) (cid:4) (cid:0) (cid:2) (cid:3) (cid:4) (cid:0) (cid:2) (cid:3) (cid:4) people and organisatins between systems SYSTEMS ENGINEERING Reliability Reusable Components Speci(cid:2)cation between COMMUNICATION INTER(cid:3)OPERABILITY We identify three main categories of uses for ontologies(cid:2) Within each(cid:7) other distinctions may be important(cid:7) such as the nature of the software(cid:7) who the intended users are(cid:7) and how general the domain is(cid:2) Figure (cid:4)(cid:19) Uses for Ontologies Part of the confusion is due to the fact that the central ideas and issues have been addressed in a number of contexts and (cid:16)elds(cid:8) often using di(cid:26)erent terminology(cid:9) For example(cid:8) there is a strong similaritybetween a conceptual schema for a data base(cid:8) and an ontology(cid:9) Other areas concerned with these issues include knowledge representation and acquisition(cid:8) ontologies for natural language understanding(cid:8) domain modelling in software engineering(cid:8) and enterprise integration(cid:9) (cid:6) Uses of Ontologies In this section(cid:8) we review and elaborate the motivations for ontologies that we discussed above(cid:9) In doing so(cid:8) we characterise the space of uses for ontologies(cid:9) The literature is currently rich with descriptions of ontologies and their intended purposes(cid:9) At a high level(cid:8) most seem to be intended for some manner of re(cid:3)use(cid:9) Some of these purposes are implicit in the various interpretations of the word (cid:20)ontology(cid:21) that are commonly found in the literature(cid:8) as noted in (cid:30)(cid:4)(cid:13)(cid:31)(cid:22) (cid:24)e(cid:2)g(cid:2) a vocabulary for (cid:30)(cid:5)(cid:31) vs a meta(cid:3)level speci(cid:16)cation of(cid:8) a logical theory (cid:30)(cid:11)(cid:7)(cid:8) (cid:12)(cid:15)(cid:31)(cid:25)(cid:9) Other dimensions of variation include the nature of the software with which the ontology will be used(cid:8) whether it is intended to be shared within a small group and reused within that context for a variety of applications(cid:8) or whether it is intended to be re(cid:3)used by a larger community(cid:9) Some view their ontologies mainly as a means to structure a knowledge base(cid:22) others conceive an ontology to be used as part of a knowledge AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:14) base(cid:8) e(cid:2)g(cid:2) by loading it in as a set of sentences which will be added to as appropriate(cid:22) still others view their ontology as an application(cid:3)speci(cid:16)c inter(cid:3)lingua (cid:24)e(cid:9)g(cid:9) ATOS(cid:25)(cid:9) (cid:30)(cid:7)(cid:15)(cid:8) (cid:7)(cid:4)(cid:31) Another important motivation for ontologies is to integrate models of di(cid:26)erent domains into a coherent framework(cid:9) This arises in business process reengineering (cid:24)where we need an integrated model of the enterprise and its processes(cid:8) its organisations(cid:8) its goals(cid:8) and its cus(cid:3) tomers(cid:25)(cid:8) in distributed multiagentarchitectures (cid:24)where di(cid:26)erent agents need to communicate and solve problems(cid:25)(cid:8) and in concurrent engineering and design(cid:9) With these intuitions(cid:8) we sub(cid:3)divide the space of uses for ontologies into the following three categories(cid:19) (cid:2) Communication (cid:2) Inter(cid:3)Operability (cid:2) Systems engineering(cid:19) speci(cid:16)cation(cid:8) reliability and reusability (cid:5)(cid:2)(cid:3) Communication Recall that ontologies reduce conceptual and terminological confusion by providing a unify(cid:3) ing framework within an organisation(cid:9) In this way(cid:8) ontologies enable shared understanding and communication between people with di(cid:26)erent needs and viewpoints arising from their particular contexts(cid:9) We will now consider in detail several aspects of the use of ontologies to facilitate communication among people within an organisation(cid:9) Normative Models Within any large(cid:3)scale integrated software system(cid:8) di(cid:26)erent people must have a shared understanding of the system and its objectives(cid:9) By using an ontology(cid:8) we can construct a normative model of the system(cid:9) This creates a semantics for the system and an extendible model that can later be re(cid:16)ned(cid:8) and which allows semantic transformations between di(cid:26)erent contexts(cid:9) Networks of Relationships We can also use ontologies to create a network of relation(cid:3) ships(cid:8) keep track of what is linked(cid:8) and explore and navigate through this network(cid:9) Such a network is implicit within the system(cid:8) but people often have di(cid:26)erent perspectives and perhaps use di(cid:26)erent assumptions(cid:9) Thus there is a lack of shared understanding concerning the nature of the key relationships within the system(cid:9) This is particularly important in applications which require the use of multiple ontologies from di(cid:26)erent domains(cid:9) Ontologies serve to make all of these assumptions explicit by identifying the logical connections between elements across models of the system(cid:9) In general(cid:8) we will also want the ontology to support the ability to reason about the impact of possible changes to the system(cid:9) For example(cid:8) using an ontology to support enterprise modelling allows us to capture a picture of the enterprise that can be reworked(cid:9) We can then AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:5) answer questions about the enterprise model(cid:8) such as what(cid:3)if scenarios related to changing di(cid:26)erent parts of the enterprise during reengineering(cid:9) Consistency and Lack of Ambiguity One of the most importantroles an ontology plays in communication is that it provides unambiguous de(cid:16)nitions for terms used in a software system(cid:9) Any set of software tools should be able to maintain consistency among themselves and the ontologies(cid:8) though they need not be uniform(cid:9) There may be the problem that a user(cid:21)s ontology is di(cid:26)erent from the ontology supporting the tool(cid:9) In this case(cid:8) we must provide an environment that can represent the di(cid:26)erent meanings for terms used by di(cid:26)erent people (cid:24)(cid:28)meaning mapper(cid:29)(cid:25)(cid:9) This also involves identifying the relevant assumptions used by di(cid:26)erent people(cid:8) tools(cid:8) or ontologies and the ability to capture multiple synonyms and utilise them in translation to various audiences(cid:9) Integrating Di(cid:16)erent User Perspectives If we have a system with multiple commu(cid:3) nicating agents(cid:8) this integration through shared understanding becomes vital(cid:9) We face the challenge of integrating di(cid:26)erent perspectives while capturing key distinctions in a given perspective(cid:9) For example(cid:8) people in di(cid:26)erent positions in an organisation will have di(cid:26)erent perspectives on what the organisation does(cid:8) what goals it achieves(cid:8) and how these goals are achieved(cid:9) There is also the problem of integrating global and local views of the system(cid:9) By using an ontology to provide a normative model of the system(cid:8) this integration can be achieved by assisting participants in communicating and coming to an agreement(cid:9) This also lays the groundwork for the development of standards within a community(cid:9) By adopting a shared ontology(cid:8) all participants use a standardised terminology for all objects and relations in their domains(cid:9) (cid:5)(cid:2)(cid:0) Inter(cid:7)Operability Many applications of ontologies address the issue of inter(cid:3)operability(cid:8) in which we have dif(cid:3) ferent users that need to exchange data or who are using di(cid:26)erent software tools(cid:9) A major theme for the use of ontologies in domains such as enterprise modelling and multiagent ar(cid:3) chitectures is the creation of an integrating environment for di(cid:26)erent software tools(cid:9) Toolkits for spot solutions exist(cid:8) but there is often no consistency among these tools(cid:9) (cid:6)(cid:15)(cid:4)(cid:15)(cid:3) Ontologies as Inter(cid:13)Lingua Any information technology environment for business process reengineering or multiagent systems should use integrated enterprise models spanning activities(cid:8) resources(cid:8) organisa(cid:3) tion(cid:8) goals(cid:8) products(cid:8) and services(cid:9) These integrated enterprise models serve as a common repository accessible by multiple tool sets(cid:9) This can also serve to integrate existing data repositories(cid:8) either by standardising terminol(cid:3) ogy among the di(cid:26)erent users of the repositories(cid:8) or by providing the semantic foundations AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:15) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:5)(cid:6) (cid:7)(cid:8) (cid:0) (cid:2) (cid:0) (cid:2) I(cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3)R (cid:4)(cid:5) (cid:5) (cid:5) (cid:5) (cid:5) (cid:5) (cid:5) (cid:5) (cid:5) (cid:5)(cid:6) (cid:7) (cid:8) (cid:7) (cid:8) oS S Sw (cid:6)(cid:5) (cid:5) (cid:5)(cid:4) (cid:6)(cid:5) (cid:5) (cid:5)(cid:4) oS S Sw (cid:0)a(cid:2) L(cid:3) T(cid:4) T(cid:5) T(cid:6) T(cid:3) (cid:0)b(cid:2) Interlingua L(cid:4) L(cid:3) L(cid:5) L(cid:6) L(cid:4) L(cid:5) L(cid:6) To translate from language Li to Lj and vice versa(cid:7) a translator is required between Li and the inter(cid:4)lingua and another between the inter(cid:4)lingua and Lj(cid:2) Thus(cid:7) given n languages(cid:7) only O(cid:24)n(cid:25) translators are required(cid:7) not O(cid:24)n (cid:2) (cid:25)(cid:2) Figure (cid:7)(cid:19) Ontology as Inter(cid:3)Lingua for translators among the di(cid:26)erent users(cid:9) To assist inter(cid:3)operability(cid:8) ontologies can be used to support translation between di(cid:26)erent languages and representations(cid:9) One approach is to design unique translators for every two party exchange(cid:22) however(cid:8) this would require O(cid:24)n (cid:2) (cid:25) translators for n di(cid:26)erent ontologies (cid:24)see (cid:16)gure (cid:7)a(cid:25)(cid:9) Using ontologies as inter(cid:3)lingua to support translation(cid:8) we can reduce the number of translators to O(cid:24)n(cid:25) for n di(cid:26)erent ontologies(cid:8) since it would only require translators from a native ontology into the interchange ontology (cid:24)see (cid:16)gure (cid:7)b(cid:25)(cid:9) This is the approach taken by the Process Interchange Format (cid:24)PIF(cid:25) Project(cid:9) (cid:6)(cid:15)(cid:4)(cid:15)(cid:4) Dimensions of Inter(cid:13)Operability In addition to tools and repositories(cid:8) there are several distinctions that can be made(cid:9) First(cid:8) we need to consider the nature of the relationships among the users who are sharing tools and data(cid:9) It is vital that the ontologies and tools used by di(cid:26)erent agents or organisations within the same enterprise be sharable and reusable across these multiple organisations(cid:9) Internal Inter(cid:13)Operability With internal inter(cid:3)operability(cid:8) all systems requiring inter(cid:3) operation are under the direct control of some organisational unit(cid:9) Di(cid:26)erences exist for historical reasons and legacy systems which will no longer change(cid:8) need to be integrated(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:4) procedure viewer ontology method library translator translator 1a give me the procedure for . . . 1b procedure = ? ? procedure = process give me the process for . . . 2b ? ? = process METHOD = process give me the METHOD for . . . here is the METHOD for . . . here is the process for . . . here is the procedure for . . . 1d 2a 2d 1c 3a 3b 4 2c 5 This illustrates the use of an ontology as an inter(cid:4)lingua to integrate di(cid:5)erent software tools(cid:2) The term procedure(cid:7) used by one tool is translated into the term(cid:7) method used by the other via the ontology(cid:7) whose term for the same underlying concept is process(cid:9) Figure (cid:11)(cid:19) Ontology as Inter(cid:3)Lingua(cid:19) Example AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:7) External Inter(cid:13)Operability With external inter(cid:3)operability(cid:8) we have an organisational unit that wishes to insulate itself from changes imposed on it from the outside (cid:24)as in the semi(cid:3)conductor example in x (cid:7)(cid:9)(cid:11)(cid:9)(cid:7)(cid:25)(cid:9) Note that (cid:20)external(cid:21) could mean another department in the same organisation(cid:9) Integrated Ontologies Among Domains The other distinction for inter(cid:3)operability arises from the issue of the integration of ontologies from di(cid:5)erent domains in order to support some task(cid:9) For example(cid:8) an ontology to support work(cid:18)ow management systems will need to integrate ontologies for processes(cid:8) resources(cid:8) products(cid:8) services(cid:8) and organisation(cid:9) The set of work(cid:18)ow tools would then use this set of integrated ontologies(cid:9) IntegratingOntologiesAmong Tools On the other hand(cid:8) we mayalso need to integrate di(cid:26)erent ontologies in the same domain because of legacy systems(cid:9) For example(cid:8) di(cid:26)erent tools may use di(cid:26)erent process ontologies(cid:22) to achieve inter(cid:3)operability(cid:8) we need to have a common ontology that both sets of tools can use(cid:9) This is the most di(cid:27)cult challenge facing the use of ontologies(cid:8) since it is usually not possible to impose the requirement of integration on the tools themselves(cid:22) rather we need to construct ontologies for tools that are already being used(cid:9) (cid:5)(cid:2)(cid:5) Systems Engineering The applications of ontologies that we have considered to this point have focussed on the role that ontologies play in the operation of software systems(cid:9) In this section we consider applications of ontologies that support the design and development of the software systems themselves(cid:9) (cid:6)(cid:15)(cid:6)(cid:15)(cid:3) Speci(cid:14)cation A shared understanding of the problem and the task at hand can assist in the speci(cid:16)cation of software systems(cid:9) For example(cid:8)the IBM Business System DevelopmentMethod (cid:24)BSDM(cid:25) (cid:30)(cid:4)(cid:17)(cid:31) develops and uses a ontology of the organisation as the basis for IT design and development in that organisation(cid:9) The CommonKADS Conceptual Modelling Language (cid:24)CML(cid:25) is used to build domain and task ontologies to assist speci(cid:16)cation of knowledge based systems (cid:30)(cid:11)(cid:4)(cid:31)(cid:9) This idea is being further explored in the Kactus project (cid:24)see x (cid:17)(cid:9)(cid:11)(cid:9)(cid:12)(cid:25)(cid:9) The role that ontologies play in speci(cid:16)cation varies with the degree of formality and au(cid:3) tomation within the system design methodology(cid:9) In an informal approach(cid:8) ontologies facilitate the process of identifying the requirements of the system and understanding the relationships among the components of the system(cid:9) This is particularly important for systems involving distributed teams of designers working in di(cid:26)erent domains(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:11) In a formal approach(cid:8) an ontology provides a declarative speci(cid:16)cation of a software system(cid:8) which allows us to reason about what the system is designed for(cid:8) rather than how the system supports this functionality(cid:9) (cid:6)(cid:15)(cid:6)(cid:15)(cid:4) Reliability Informal ontologies can improve the reliability of software systems by serving as a basis for manual checking of the design against the speci(cid:16)cation(cid:9) Using formal ontologies enables the use of (cid:30)semi(cid:3)(cid:31)automated consistency checking of the software system with respect to the declarative speci(cid:16)cation(cid:9) In addition(cid:8) formal ontologies can be used to make explicit the various assumptions made by di(cid:26)erent components of a software system(cid:8) facilitating their integration(cid:9) For example(cid:8) in the the Integrated Development Support Environment (cid:24)IDSE(cid:25)(cid:8) semantic constraints and rela(cid:3) tionships between di(cid:26)erent tools must be maintained for successful tool integration(cid:9) Axioms stating these constraints are interpreted and enforced semi(cid:3)automatically(cid:8) thus facilitating integration (cid:24)see appendix B for further details(cid:25)(cid:9) This is closely related to the use of declar(cid:3) ative constraints to maintain semantic integrity in data bases (cid:30)(cid:7)(cid:31)(cid:9) Declaratively speci(cid:16)ed assumptions may explicitly restrict the applicability of a particular ontology to a problem domain (cid:30)(cid:4)(cid:7)(cid:31)(cid:9) By proving that the ontology is capable of supporting various reasoning problems(cid:8) we can demonstrate the reliability of the software system within the domain(cid:9) (cid:6)(cid:15)(cid:6)(cid:15)(cid:6) Reusability To be e(cid:26)ective(cid:8) ontologies must also support reusability(cid:8) so that we can import and export modules among di(cid:26)erent software systems(cid:9) The problem is that when software tools are ap(cid:3) plied to new domains(cid:8) they may not perform as expected(cid:8) since they relied on assumptions that were satis(cid:16)ed in the original applications but not in the new ones(cid:9) By characteriz(cid:3) ing classes of domains and tasks within these domains(cid:8) ontologies provide a framework for determining which aspects of an ontology are reusable between di(cid:26)erent domains and tasks(cid:9) Ontologies provide an (cid:28)easy to re(cid:3)use(cid:29) library of class objects for modelling problems and domains(cid:9) The ultimate goal of this approach is the construction of a library of ontologies which can be reused and adapted to di(cid:26)erent general classes of problems and environments(cid:9) One such library is being constructed at the Knowledge Systems Laboratory using their online Ontology Server (cid:24)see x (cid:17)(cid:9)(cid:12)(cid:25)(cid:9) To be useful(cid:8) these ontologies must be customisable(cid:8) both to the class of problems and the class of users(cid:8) whether they be managers(cid:8) consultants(cid:8) or engineers(cid:9) Further(cid:8) the ontologies in such a library must be extendible(cid:8) allowing the incorporation of new classes of constraints and the specialisation of concepts and constraints for a particular problem(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:12) One approach to extendibility is the notion of partially shared views (cid:30)(cid:7)(cid:12)(cid:31) in the Process Inter(cid:3) change Format Project (cid:30)(cid:7)(cid:13)(cid:31) (cid:24)see x (cid:17)(cid:9)(cid:4)(cid:9)(cid:4)(cid:25)(cid:9) There is a core PIF ontology which all translators operate with(cid:9) In addition(cid:8) there are di(cid:26)erent extensions of this core ontology which not all ontologies may share(cid:9) In PIF(cid:8) these extensions are captured by partially shared views(cid:8) so that ontologies that have a partially shared view in common can translate without loss of expressiveness(cid:9) Similarly(cid:8) in the KRSL Plan Ontology (cid:24)see x (cid:17)(cid:9)(cid:4)(cid:9)(cid:7)(cid:25)(cid:8) there is a set of modular specialised ontologies augment the general categories with sets of concepts and alternative theories of more detailed notions commonly used by planning systems(cid:8) such as speci(cid:16)c ontologies and theories of time points(cid:8) temporal relations(cid:8) and complex actions(cid:9) Closing remarks (cid:12) Thus far(cid:8) we have motivated the need for ontologies(cid:8) clari(cid:16)ed what they are and described a variety of circumstances in which they may be used(cid:9) In the next few sections(cid:8) we turn our attention to the process of building and evaluating ontologies(cid:9) First we describe some of the important steps in building an ontology(cid:22) these are then elaborated on in sections (cid:13) and (cid:6)(cid:9) (cid:7) A Skeletal Methodology for Building Ontologies Although there is much collective experience in developing and using ontologies(cid:8) there is no (cid:16)eld of ontological engineering comparable to knowledge engineering(cid:9) In particular(cid:8) there are no standard methodologies for building ontologies(cid:22) nor is there much published in this area(cid:8) even in the research literature(cid:9) In an attempt to begin (cid:16)lling this gap(cid:8) we envisage a comprehensive methodology for devel(cid:3) oping ontologies to include the following(cid:19) (cid:2) Identify Purpose and Scope(cid:22) (cid:2) Building the Ontology(cid:22) (cid:12) ontology capture(cid:8) (cid:12) ontology coding(cid:8) (cid:12) integrating existing ontologies(cid:22) (cid:2) Evaluation(cid:22) (cid:2) Documentation(cid:22) (cid:2) Guidelines for each phase(cid:9) Below(cid:8) we brie(cid:18)y de(cid:16)ne each stage and indicate what if any work has been reported that could be used to develop a comprehensive methodology(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:13) (cid:6)(cid:2)(cid:3) Purpose and Scope It is important to be clear about why the ontology is being built and what its intended uses are(cid:9) The previous section explores the space of possible uses(cid:22) this can be a starting point in identifying the purpose of an ontology yet to be constructed(cid:9) It will also be useful to identify and characterise the range of intended users of the ontology(cid:9) (cid:6)(cid:2)(cid:0) Building the Ontology The identi(cid:16)cation of the purpose and scope of the ontology(cid:8) at least in general terms(cid:8) serves to provide a reasonably well(cid:3)de(cid:16)ned target for building the ontology(cid:9) Three aspects to this are capture(cid:8) coding(cid:8) and integration of existing ontologies(cid:9) (cid:8)(cid:15)(cid:4)(cid:15)(cid:3) Capture By ontology capture(cid:8) we mean (cid:4)(cid:25) identi(cid:16)cation of the key concepts and relationships in the domain of interest(cid:22) (cid:7)(cid:25) production of precise unambiguous text de(cid:16)nitions for such concepts and relationships(cid:22) (cid:11)(cid:25) identi(cid:16)cation of terms to refer to such concepts and relationships(cid:22) and (cid:16)nally(cid:8) agreeing on all of the above(cid:9) Perhaps(cid:8) the most directly relevant work reported is in (cid:30)(cid:11)(cid:11)(cid:31)(cid:8) where Skuce argues for an inter(cid:3) mediate representation of a conceptualisation which is more formal than loosely structured natural language(cid:8) but less formal than a formal language(cid:9) He proposes a speci(cid:16)c format for such an intermediate representation(cid:8) which is to include assumptions(cid:8) justi(cid:16)cations as well as precisely worded de(cid:16)nitions(cid:9) In x (cid:13) we describe the method successfully used for ontology capture in the development of the Enterprise Ontology in the Enterprise Project (cid:30)(cid:4)(cid:5)(cid:31)(cid:9) (cid:8)(cid:15)(cid:4)(cid:15)(cid:4) Coding By coding(cid:8) we mean explicit representation of the conceptualisation captured in the previous stage in some formal language(cid:9) This will involve (cid:2) committing to the basic terms that will be used to specify the ontology (cid:24)e(cid:2)g(cid:2) class(cid:8) entity(cid:8) relation(cid:25)(cid:22) this is often called a (cid:20)meta(cid:3)ontology(cid:21) because it is in essence(cid:8) the (cid:30)underlying(cid:31) ontology of representational terms that will be used to express the main ontology(cid:22) (cid:2) choosing a representation language (cid:24)which is capable of supporting the meta(cid:3)ontology(cid:25)(cid:22) (cid:2) writing the code(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:6) With regards to choosing a language(cid:8) possibly the most extensive work done in this area is the Plinius Project (cid:30)(cid:11)(cid:6)(cid:8) (cid:11)(cid:5)(cid:31) (cid:24)see appendix A(cid:25)(cid:9) They have experimented with a large variety of languages for representing their ontology in the materials science domain(cid:9) These experiences could serve as a starting point for developing guidelines in choosing representation languages for ontologies(cid:9) Coding and capture are sometimes merged into a single step(cid:9) Indeed(cid:8) some of the design decisions of the KSL Ontology Editor(cid:30)(cid:11)(cid:31) presume that ontology builders may be developing the conceptualisation on the (cid:18)y (cid:3) (cid:9) This may be appropriate in some cases(cid:8) however our experience suggests that many bene(cid:16)ts derive from separating the two(cid:9) Insofar as an ontologyis a kind of a knowledge base(cid:8) there is a wealth of useful methodological guidance that is potentiallyapplicable(cid:9) A comprehensive methodologywould makevery clear what applies for building ontologies as opposed to knowledge bases in general(cid:9) It will also clarify under what circumstances(cid:8) if any(cid:8) capture and coding stages may be merged(cid:9) These are important research issues at this time(cid:9) (cid:8)(cid:15)(cid:4)(cid:15)(cid:6) Integrating Existing Ontologies During either or both of the capture and coding processes(cid:8) there is the question of how and whether to use (cid:30)all or part of(cid:31) ontologies that already exist(cid:9) In general this is a very di(cid:27)cult problem(cid:9) Some important progress in this area is described in (cid:30)(cid:11)(cid:31) and (cid:30)(cid:11)(cid:11)(cid:31)(cid:9) The former is implemented in the KSL Ontology Server(cid:9) Skuce(cid:21)s main point is that in order to agree on ontologies that can be shared among multiple user communities(cid:8) much work must be done to achieve agreement(cid:9) One way forward is to make explicit all assumptions underlying the ontology(cid:9) Overall(cid:8) provision of guidance and tools in this area may be one of the biggest challenges in developing a comprehensive methodology for building ontologies(cid:9) It is easy enough to identify synonyms(cid:8) and to extend an ontology where no concepts readily exist(cid:9) However(cid:8) when there are obviously similar concepts de(cid:16)ned in existing ontologies(cid:8) it is rarely clear how and whether such concepts can be adapted and reused(cid:9) (cid:6)(cid:2)(cid:5) Evaluation G omez(cid:3)P erez (cid:30)(cid:14)(cid:31) provides a good de(cid:16)nition of evaluation in the context of knowledge sharing technology(cid:19) (cid:28)to make a technical judgement of the ontologies(cid:8) their associated software envi(cid:3) ronment(cid:8) and documentation with respect to a frame of reference (cid:0)(cid:0)(cid:0)The frame of reference may be requirements speci(cid:16)cations(cid:8) competency questions(cid:8) and(cid:23)or the real world(cid:9)(cid:29) (cid:3) Email communicationwith James Rice(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:17) Some detailed work has been done on the evaluation of ontologies which could contribute to a comprehensive methodology for building ontologies (cid:30)(cid:6)(cid:8) (cid:17)(cid:8) (cid:4)(cid:7)(cid:31)(cid:9) The approach taken in some of this work(cid:8) is to look (cid:16)rst at what has been done in the (cid:16)eld of KBS(cid:8) and to adapt it for ontologies(cid:9) (cid:6)(cid:2)(cid:6) Documentation It may be desirable to have established guidelines for documenting ontologies(cid:8) possibly dif(cid:3) fering according to type and purpose of the ontology(cid:9) As pointed out by Skuce (cid:30)(cid:11)(cid:11)(cid:31)(cid:8) one of the main barriers to e(cid:26)ective knowledge sharing(cid:8) is the inadequate documentation of existing knowledge bases and ontologies(cid:9) To address these problems all important assumptions should be documented(cid:8) both about the main concepts de(cid:16)ned in the ontology(cid:8) as well as the primitives used to express the de(cid:16)nitions in the ontology (cid:24)i(cid:2)e(cid:2) the meta(cid:3)ontology(cid:25)(cid:9) The facilities provided by Ontolingua(cid:8) and supported by the KSL Ontology Editor facilitate both formal and informal documentation of such assumptions(cid:9) Though such facilities may be conceptually straightforward(cid:8) they can have signi(cid:16)cant bene(cid:16)t(cid:9) (cid:6)(cid:2)(cid:8) Initial Guidelines for Designing Ontologies A comprehensive methodology for building ontologies should also include a set of techniques(cid:8) methods(cid:8) principles for each of the above four stages(cid:8) as well as indicating what relationships exist between the stages (cid:24)e(cid:9)g(cid:9) recommended order(cid:8) interleaving(cid:8) inputs(cid:23)output(cid:25)(cid:9) The (cid:16)rst attempt to consolidate experience gained in developing ontologies is describe in (cid:30)(cid:4)(cid:15)(cid:31)(cid:9) This is summarised below as a set of design criteria ! the emphasis is on sharing and reuse(cid:9) In subsequent sections(cid:8) we further elaborate on these points(cid:8) reporting on the authors(cid:21) experiences in developing ontologies for enterprise modelling(cid:9) Clarity An ontology should e(cid:26)ectively communicate the intended distinctions to humans who design agents(cid:9) This means that ambiguity should be minimised(cid:8) distinctions should be motivated(cid:8) and examples should be given to help the reader understand de(cid:16)nitions that lack necessary and su(cid:27)cient conditions(cid:9) When a de(cid:16)nition can be speci(cid:16)ed in formal axioms(cid:8) it should be(cid:9) In all cases(cid:8) de(cid:16)nitions should be documented with natural language and examples to help clarify the intent(cid:9) Coherence An ontology should be internally consistent(cid:9) At the least(cid:8) the de(cid:16)ning axioms should be logically consistent(cid:9) Coherence should also apply to the parts of the de(cid:16)nitions that are not axiomatic(cid:8) such as the natural language documentation and examples(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:14) Extensibility An ontology should be designed to anticipate the uses of the shared vo(cid:3) cabulary(cid:9) It should o(cid:26)er a conceptual foundation for a range of anticipated tasks(cid:8) and the representation should be crafted so that one can extend and specialise the ontology mono(cid:3) tonically(cid:9) One should be able to de(cid:16)ne new terms for special uses based on the existing vocabulary(cid:8) in a way that does not require the revision of existing de(cid:16)nitions(cid:9) The next two criteria help achieve extensibility(cid:9) Minimal ontological commitment An ontology should require the minimal ontological commitment su(cid:27)cient to support the intended knowledge sharing activities(cid:9) An ontology serves a di(cid:26)erent purpose to a knowledge base(cid:8) and therefore a di(cid:26)erent notion of representa(cid:3) tional adequacy or completeness applies(cid:9) A shared ontology need only describe a vocabulary for talking about a domain(cid:8) whereas a knowledge base may include the knowledge needed to solve a problem or answer arbitrary queries about a domain(cid:9) An ontology should make as few claims as possible about the world being modelled(cid:8) allowing the parties committed to the ontology freedom to specialise and instantiate the ontology as needed(cid:9) While making too may ontological commitments can limit extensibility(cid:8) making too few can result in the ontology being consistent with incorrect or unintended worlds (cid:24)i(cid:2)e(cid:2) models(cid:25) (cid:30)(cid:4)(cid:11)(cid:8) (cid:4)(cid:12)(cid:31)(cid:9) For this reason(cid:8) it is bene(cid:16)cial to make ontological commitments with respect to aspects intrinsic to a domain(cid:22) the guideline above applies to contingent aspects of a domain(cid:9) Minimal encoding bias The conceptualisation should be speci(cid:16)ed at the knowledge level without depending on a particular symbol(cid:3)level encoding(cid:9) The encoding bias of an axiomatisation(cid:8) that is(cid:8) representation choices that are made purely for the convenience of notation or implementation(cid:8) should be minimised(cid:9) The goal is to enable knowledge sharing across agents that may be implemented in di(cid:26)erent representation systems and styles of representation(cid:9) This concludes the overview of an ontologydevelopmentmethodologyand brief consideration of some initial guidelines(cid:9) In the next section(cid:8) we elaborate on the Ontology Capture phase(cid:9) (cid:8) Ontology Capture Recall that ontology capture consists of identifying and de(cid:16)ning the important concepts and terms(cid:9) In this section(cid:8) we outline a procedure for ontology capture(cid:8) and describe in some detail(cid:8) the actual process we went through in creating the Enterprise Ontology (cid:30)(cid:4)(cid:5)(cid:31)(cid:9) We do not present this as a set of normative guidelines(cid:8) supposing that it is better than all other approaches(cid:9) Rather(cid:8) it is one approach which worked well in our particular cir(cid:3) cumstances(cid:9) The emphasis here will be on informal techniques(cid:8) where the output is a (cid:20)semi(cid:3)informal(cid:21) ontology consisting of very carefully de(cid:16)ned terms expressed in a restricted AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:4)(cid:5) natural language (cid:24)e(cid:2)g(cid:2) in the form of a glossary(cid:25)(cid:9) In x (cid:6) we describe a more formal approach which is better suited to a di(cid:26)erent set of circumstances(cid:9) We consider the following four phases in turn(cid:19) scoping(cid:8) producing de(cid:16)nitions(cid:8) review(cid:8) and development of a meta(cid:3)ontology(cid:9) (cid:8)(cid:2)(cid:3) Scoping Brainstorming(cid:17) Have a brain(cid:3)stormingsession to produce all potentiallyrelevant terms and phrases(cid:22) at this stage the terms alone represent the concepts(cid:8) thus concealing signi(cid:16)cant ambiguities and di(cid:26)erences of opinion(cid:9) Brainstorming worked well for us(cid:22) however if collectively(cid:8) those involved possess insu(cid:27)cient domain expertise(cid:8) another corpus of knowledge may need to be consulted to ensure adequate coverage(cid:9) Grouping (cid:17) Structure the terms loosely into work areas corresponding to naturally arising sub(cid:3)groups(cid:9) In our case(cid:8) groups arose such that terms were more related to other terms within the same group than they were to terms in other groups(cid:9) Speci(cid:16)cally(cid:8) for each term(cid:19) (cid:2) provisionallycategorise it for inclusion or exclusion(cid:8) or note it as a borderline case(cid:9) This was determined mainly by reference to a previously agreed requirements document(cid:22) (cid:2) keep notes to record such decisions for future reference(cid:22) (cid:2) group similar terms and potential synonyms together for further consideration(cid:9) Finally(cid:8) identify semantic cross(cid:3)references between the areas(cid:22) i(cid:2)e(cid:2) concepts that are likely to refer to or be referred to by concepts in other areas(cid:9) This information can be used to help identify which work area to tackle (cid:16)rst to minimise likelihood of re(cid:3)work (cid:24)see below(cid:25)(cid:9) This concludes our consideration of informal methods for scoping(cid:22) in x (cid:6) we consider scoping in a more formal context(cid:9) (cid:8)(cid:2)(cid:0) Produce De(cid:9)nitions During scoping(cid:8) most of the important concepts and many terms will have been identi(cid:16)ed(cid:9) The main work of building an ontology is producing de(cid:16)nitions(cid:9) Next(cid:8) we consider when it may be important to do certain things before others(cid:22) after this(cid:8) we present some detailed guidelines and suggestions for reaching agreement(cid:8) handling ambiguity and producing the (cid:16)nal wording of de(cid:16)nitions(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:15) (cid:9)(cid:15)(cid:4)(cid:15)(cid:3) Deciding What To Do Next DeterminingMeta(cid:13)Ontology(cid:17) Initially(cid:8)do not committo any particular meta(cid:3)ontology(cid:9) Doing so mayconstrain thinking and potentially lead to inadequate or incompletede(cid:16)nitions(cid:9) Also(cid:8) if it ends up being wrong(cid:8) many de(cid:16)nitions may have to be re(cid:3)done(cid:9) Instead(cid:8) let the careful consideration of the concepts and their inter(cid:3)relationships determine the requirements for the meta(cid:3)ontology(cid:9) Keep in mind various possibilities(cid:8) and use words and phrases in a consistent manner where appropriate (cid:24)e(cid:9)g(cid:9) role(cid:8) entity(cid:8) relationship(cid:8) type(cid:8) instance(cid:25)(cid:9) Note that this guideline applies only to the informal capture phase(cid:9) The meta(cid:3)ontology must be determined before coding begins(cid:22) also(cid:8) it can be constrained by the representation language chosen(cid:9) Work Areas (cid:17) Address each work area in turn(cid:9) Start with work areas that have the most semantic overlap with other work areas(cid:9) These are the most important to get right in the (cid:16)rst place(cid:8) because mistakes lead to more re(cid:3)work(cid:9) If there is little overlap between work areas(cid:8) work on them in any order(cid:9) Terms (cid:17) Proceed in a middle(cid:4)out fashion rather than top(cid:3)down or bottom up(cid:9) That is(cid:8) de(cid:16)ne the most fundamental terms in each work area before moving on to more abstract and more speci(cid:16)c terms within a work area(cid:9) In our experience(cid:8) this makes it easier to relate terms in di(cid:26)erent areas more precisely(cid:9) It also is likely to reduce potential for re(cid:3)work(cid:9) This is quite an important point(cid:8) which is discussed in greater detail in (cid:30)(cid:11)(cid:17)(cid:31)(cid:9) The idea of what is fundamental(cid:8)or basic(cid:8) is a psychological phenomenon discussed at length in (cid:30)(cid:7)(cid:11)(cid:31)(cid:9) For example(cid:8) (cid:20)dog(cid:21) is basic(cid:8) (cid:20)mammal(cid:21) is a generalisation(cid:8) and (cid:20)cocker spaniel(cid:21) is a specialisation(cid:9) While di(cid:26)erences arise for individuals of widely varying expertise in an area(cid:8) (cid:24)e(cid:2)g(cid:2) a dog breeder may regard a particular species as basic(cid:25)(cid:8) broadly(cid:8) what is basic is the same for most people(cid:9) In the Enterprise Ontology (cid:30)(cid:4)(cid:5)(cid:31)(cid:8) the basic concepts included (cid:20)sale(cid:21)(cid:8)(cid:20)activity(cid:21)and (cid:20)organisational(cid:3) unit(cid:21)(cid:8) among others(cid:9) The idea of a market is a more abstract concept de(cid:16)ned in terms of actual and potential sales(cid:9) A speci(cid:16)c kind of sale might be for a speci(cid:16)c good or service in a particular area(cid:9) Bene(cid:14)ts of a Middle(cid:13)Out Approach The choice of whether to go top(cid:3)down(cid:8) middle(cid:3)out or bottom(cid:3)up has a number of e(cid:26)ects (cid:24)see (cid:16)gure (cid:12)(cid:25)(cid:9) A bottom(cid:3)up approach results in a very high level of detail(cid:9) This(cid:8) in turn (cid:4)(cid:25) increases overall e(cid:5)ort(cid:8) (cid:7)(cid:25) makes it di(cid:27)cult to spot commonality between related concepts and (cid:11)(cid:25) increases risk of inconsistencies which leads in turn to (cid:12)(cid:25) re(cid:4)work and yet more e(cid:26)ort(cid:9) A top(cid:3)down approach results in better control of the level of detail(cid:8) however starting at the AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:4) Approach (cid:9) (cid:10) (cid:11) (cid:12) Level of detail(cid:9) (cid:10) (cid:11) (cid:12) (cid:9) (cid:10) (cid:11) (cid:12) commonality Capture (cid:9) (cid:10) (cid:11) (cid:12) Stability (cid:9) (cid:10) (cid:11) (cid:12) Rework E(cid:6)ort (cid:12) (cid:9) (cid:10) (cid:11) (cid:12) Consistency (cid:12) Accuracy (cid:8) Z Z Z Z Z Z(cid:9) (cid:10) (cid:10) (cid:10) (cid:10) (cid:10)(cid:11) (cid:12) (cid:12) (cid:12) (cid:12) (cid:12)(cid:12)(cid:13) J J J J J(cid:14) (cid:0) (cid:2) (cid:0) (cid:15) (cid:15) (cid:15) (cid:15) (cid:15) (cid:15)(cid:16) Various issues are a(cid:5)ected by the choice of whether to go bottom(cid:4)up(cid:7) top(cid:4)down(cid:7) or middle out(cid:2) The latter makes it easier to spot commonality(cid:7) results in stable models(cid:7) and keeps the level of detail in control(cid:2) This reduces inaccuracies which in turn leads to less re(cid:4)work and overall e(cid:5)ort(cid:2) Figure (cid:12)(cid:19) Why Middle Out(cid:10) top can result in choosing and imposing arbitrary high(cid:3)level categories(cid:9) Because these are not naturally arising(cid:8) there is a risk of less stability in the model which in turn leads to re(cid:3)work and greater e(cid:26)ort(cid:9) The emphasis on dividing up rather than putting together also results(cid:8) for a di(cid:26)erent reason(cid:8) in missing the commonality inherent in the complex web of inter(cid:3)connected concepts(cid:9) A middle(cid:3)out approach(cid:8) by contrast(cid:8) strikes a balance in terms of the level detail(cid:9) Detail arises only as necessary(cid:8) by specialising the basic concepts(cid:8) so some e(cid:26)ort is avoided(cid:9) By starting with the most important concepts (cid:16)rst(cid:8) and de(cid:16)ning higher level concepts in terms of these(cid:8) the higher level categories naturally arise and thus are more likely to be stable(cid:9) This(cid:8) in turn(cid:8) leads to less re(cid:3)work and less overall e(cid:26)ort(cid:9) Stability and spotting commonality and are extremely important(cid:8) as is illustrated in the following real examples(cid:9) Using a bottom(cid:3)up approach(cid:8) a major UK aerospace company took over two years to produce a soon to be out of date model(cid:9) Many organisations use top(cid:3)down analysis(cid:8) which typically leads to a failure to recognise that the same entity can be both a buyer and a seller(cid:8) with respect to to a given organisation(cid:9) This results in a common occurrence whereby company A complains to company B that B owes A money(cid:8) to which A responds that company B owes it even more money(cid:9) The root of the problem is the failure to recognise that the primary concepts are the legal entities and the relationships between them (cid:24)i(cid:2)e(cid:2) sale agreement(cid:25)(cid:9) Buyer and seller are secondary concepts(cid:22) they are roles de(cid:16)ned in terms of the sale agreement(cid:9) The IT systems based on viewing roles as primary typically can not recognise that multiple roles may cor(cid:3) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:7) respond to the same underlying legal entity(cid:9) Consequently(cid:8) banks lend money to companies already in debt to them (cid:24)a di(cid:26)erent department " (cid:25)(cid:8) and most people get multiple statements from the same (cid:16)nancial institution(cid:8) one for each account(cid:8) rather than a single statement summarising all accounts(cid:9) The idea of a role as a secondary notion is also discussed in (cid:30)(cid:11)(cid:13)(cid:31)(cid:9) The middle(cid:3)out approach has been used successfully for many years as part of the BSDM(cid:8) developed by IBM(cid:30)(cid:4)(cid:17)(cid:31)(cid:22) the problems noted above are largely avoided(cid:9) A major part of this method entails the development of a shared understanding of the most important things in an organisation(cid:22) this is used as a unifying framework for specifying and developing IT in the organisation(cid:9) The (cid:20)shared understanding(cid:21) is referred to as a business map(cid:8) or a business model(cid:8) but it is the same as what we are calling an ontology(cid:9) See (cid:30)(cid:7)(cid:7)(cid:31) for a detailed comparison between the ontology and the business modelling communities(cid:9) A major bene(cid:16)t of BSDM is stability(cid:22) currently IBM are developing a signi(cid:16)cant business based on production of generic BSDM models which can serve as the basis for a number of companies in the same industry (cid:24)e(cid:2)g(cid:2) insurance(cid:25)(cid:9) Models which were not stable would be of limited use(cid:9) (cid:9)(cid:15)(cid:4)(cid:15)(cid:4) Reaching Agreement There was considerable variation in the degree of e(cid:26)ort required to agree on de(cid:16)nitions and terms for underlying concepts(cid:9) For some terms(cid:8) consensus on the de(cid:16)nition of a single con(cid:3) cept was fairly easy(cid:9) In other cases several terms seemed to correspond with one concept de(cid:16)nition(cid:9) In particular(cid:8) there were several cases where commonly used terms had signi(cid:16)(cid:3) cantly di(cid:26)erent informal usage(cid:8) but no useful di(cid:26)erent de(cid:16)nitions could be agreed(cid:9) This was recorded in notes against the de(cid:16)nition(cid:9) Finally(cid:8) some highly ambiguous terms are identi(cid:16)ed as corresponding with several closely related(cid:8) but di(cid:26)erent concepts(cid:9) In this situation(cid:8) the term itself gets in the way of a shared understanding(cid:9) Handling Ambiguous Terms (cid:17) In the above special case where a term has many possibly meanings(cid:8) we proceeded as follows(cid:19) (cid:4)(cid:9) Suspend use of the term(cid:22) it is too ambiguous(cid:9) (cid:7)(cid:9) Clarify the ideas by carefully de(cid:16)ning each concept using as few technical terms as possible(cid:8) or only those whose meaning is agreed ! consult the dictionary(cid:8) thesauri(cid:8) and(cid:23)or other technical glossaries(cid:9) (cid:11)(cid:9) It can be helpful to give these de(cid:16)nitions meaningless labels such as x(cid:4)(cid:8) x(cid:7)(cid:8) x(cid:11) etc(cid:9) so they can be conveniently referred to in a neutral way(cid:9) (cid:12)(cid:9) Determine which(cid:8) if any of the concepts are important enough to be in the ontology (cid:30)usually one(cid:31)(cid:9) (cid:13)(cid:9) Choose a term for the concept(cid:8) ideally avoiding the original ambiguous term (cid:24)e(cid:2)g(cid:2) (cid:20)thing(cid:21) rather than entity or object(cid:25)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:11) For example(cid:8) consider the concept of doing something(cid:8) for which there are a plethora of terms(cid:19) activity(cid:8) process(cid:8) procedure to name a few(cid:9) The following are all distinct(cid:8) but closely related(cid:19) (cid:4)(cid:9) A category of something to do (cid:24)e(cid:2)g(cid:2) physical activity(cid:25) (cid:7)(cid:9) A speci(cid:16)c kind of thing to do (cid:24)e(cid:2)g(cid:2) go from A to B(cid:25) (cid:11)(cid:9) A more speci(cid:16)c kind of thing to do (cid:24)e(cid:2)g(cid:2) go from York to London(cid:25) (cid:12)(cid:9) A general speci(cid:16)cation or plan of how to do something(cid:8) a recipe(cid:8) a set of instructions(cid:22) for example(cid:19) (cid:2) go to train station in York (cid:2) ride train to London (cid:2) go to local destination in London (cid:13)(cid:9) Something actually done (cid:24)Ellen went form York to London on (cid:4)jan(cid:5)(cid:13)(cid:25) In the Enterprise Ontology(cid:8) two of the above concepts (cid:24)(cid:12) and (cid:13)(cid:25) were named and de(cid:16)ned(cid:22) they are called Activity Speci(cid:3)cation and Activity respectively(cid:9) Guidelines (cid:17) In all cases the following guidelines were followed(cid:19) (cid:2) Produce a natural language text de(cid:16)nition(cid:8) being as precise a possible(cid:22) (cid:2) Ensure consistency with terms already in use(cid:22) in particular(cid:19) (cid:12) make ample use of dictionaries(cid:8) thesauri and other technical glossaries(cid:8) (cid:12) avoid introducing new terms where possible(cid:22) (cid:2) Indicate the relationship with other commonly used terms that are similar to the one being de(cid:16)ned (cid:24)e(cid:2)g(cid:2) synonyms or variants referring to the same underlying notion(cid:8) but perhaps from di(cid:26)erent perspectives(cid:25)(cid:22) (cid:2) Avoid circularity in de(cid:16)ning terms(cid:22) this makes for increased clarity in general(cid:8) but is essential if they will be later formalised(cid:22) (cid:2) The de(cid:16)nition of each term is intended to be necessary and su(cid:27)cient as far as this is possible in natural language(cid:9) Provide clari(cid:16)cation or additional information essential to understanding the de(cid:16)nition as separate notes following the de(cid:16)nition(cid:22) (cid:2) Give examples where appropriate(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:12) Wording (cid:17) Although the text version of the ontology served as the speci(cid:16)cation for producing code(cid:8) there was a requirement that it be accessible to non(cid:3)technical readers(cid:9) To achieve an appropriate balance between technical precision and clarity(cid:8) we (cid:19) (cid:4)(cid:9) kept the text de(cid:16)nitions relatively informal(cid:22) (cid:7)(cid:9) equivalent(cid:8) but more technically precise de(cid:16)nitions cast using the primitives in the meta(cid:3)ontology are used in documentation directly accompanying the code(cid:9) (cid:8)(cid:2)(cid:5) Review Critically review de(cid:16)nitions(cid:8) revising as appropriate(cid:22) where important decisions were made overturning previous decisions(cid:8) keep track of the changes as a set of historical notes(cid:9) (cid:8)(cid:2)(cid:6) Meta(cid:7)Ontology Devise a meta(cid:3)ontology(cid:8)using the natural language de(cid:16)nitions as an an implicitrequirements speci(cid:16)cation(cid:9) The main terms de(cid:16)ned in the the Enterprise Meta(cid:3)Ontology were Entity(cid:8) Relationship(cid:8) Role(cid:8) State of A(cid:26)airs and Actor(cid:9) These served as the basis for the formal coding stage(cid:9) (cid:9) A Formal Approach to Ontology Design and Evalu(cid:10) ation Recall that the degree of formality by which the vocabulary of an ontology is speci(cid:16)ed varies from informal de(cid:16)nitions expressed in natural language to de(cid:16)nitions stated in a formal language such as (cid:16)rst(cid:3)order logic with a rigorously de(cid:16)ned syntax and semantics(cid:9) Similarly(cid:8) recall that the uses of ontologies ranged from informal requirements such as a glossary for shared understanding among users to more formal requirements such as inter(cid:3)operability among software tools(cid:9) Until now(cid:8) we have mainly considered fairly informal methods for developing ontologies(cid:9) At this point(cid:8) we motivate the need for more formal methods(cid:8) and then describe one approach to the design and evaluation of ontologies using a more formal framework(cid:9) (cid:10)(cid:2)(cid:3) The Role of Formal Languages There are two important roles that formal languages play in the axiomatisation of an ontol(cid:3) ogy ! speci(cid:16)cation and implementation(cid:9) In this section we will investigate the use of formal languages to specify and implement ontologies(cid:9) We will conclude with some thoughts on the degree of formality that is required for a given ontology and domain of application(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:13) (cid:11)(cid:15)(cid:3)(cid:15)(cid:3) Declarative Speci(cid:14)cation A declarative speci(cid:16)cation of an ontology provides a characterisation that is independent of how the ontology is implemented(cid:9) It allows us to reason about what the ontology is designed for(cid:8) rather than how the ontology supports this reasoning(cid:9) A declarative speci(cid:16)cation has the following bene(cid:16)ts(cid:19) No Extra(cid:13)Ontological Distinctions Key distinctions are made within the language(cid:8) so that all conclusions can be drawn from the ontology alone(cid:9) Without this property(cid:8) we would need to represent various assumptions procedurally outside of the language of the ontology(cid:9) However(cid:8) since one of the purposes of the ontology is to provide a framework for shared understanding(cid:8) if these assumptions are not represented within our ontology(cid:8) we risk a disagreement in how di(cid:26)erent agents interpret these extra(cid:3)ontological assumptions(cid:9) No Hidden Assumptions All assumptions are made explicit(cid:9) This is also addressing the challenge of shared understanding ! what is an obvious assumption for one person is not obvious to another(cid:9) As long as these assumptions remain implicit(cid:8) the potential for disagreement is present(cid:9) This also plays a role in applying existing ontologies to new domains(cid:9) Many software tools have been constructed in the context of a certain range of applications(cid:22) when these tools are applied to new domains(cid:8) they may not perform as expected(cid:8) since they relied on assumptions that were satis(cid:16)ed in the original applications but not in the new ones(cid:9) Moreover(cid:8) this provides an explicit characterisation of the relationships among di(cid:26)erent constraints(cid:9) Design Options There may be several ways of representing any given problem(cid:8) and we often need to search through these di(cid:26)erent possibilities(cid:9) For example(cid:8) in business process reengineering(cid:8) we want to (cid:16)nd a new enterprise model which improves some aspect of the enterprise(cid:21)s performance(cid:9) The problem is that we need to precisely de(cid:16)ne the set of possible alternatives(cid:9) A declarative speci(cid:16)cation of an ontology provides a precise and rigorous characterisation of this design search space(cid:9) If the speci(cid:16)cation is consistent with the axioms of the ontology(cid:8) then it is a possible alternative model(cid:9) Ontological Commitments An ontology is a speci(cid:16)cation used for making ontological commitments(cid:9) Practically(cid:8) an ontological commitment is an agreement to use a vocabulary (cid:24)i(cid:2)e(cid:2) ask queries and make assertions(cid:25) in a way that is consistent with respect to the theory that speci(cid:16)es the ontology(cid:9) We build agents that commit to ontologies and we design ontologies so we can share knowledge with and among these agents(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:6) With a declarative speci(cid:16)cation(cid:8) we can explicitly reason about di(cid:26)erent ontological commit(cid:3) ments(cid:9) For example(cid:8) we can compare two di(cid:26)erent proposals for an ontology with respect to the classes of objects that they require and the properties and relations among these objects that they postulate(cid:9) Modi(cid:14)ability If we change part of the ontology(cid:8) we need to determine what else must be changed(cid:9) With a declarative speci(cid:16)cation(cid:8) we have a precise characterisation of the relationships among di(cid:26)erent sets of constraints used to represent a problem(cid:9) Without such a speci(cid:16)cation(cid:8) these relationships may not be explicitly represented but instead be implicit in some partially shared understanding (cid:24)which not everyone may actually share(cid:25)(cid:9) Re(cid:13)Usability By characterizing classes of domains and tasks within these domains(cid:8) on(cid:3) tologies provide a framework for determining which aspects of an ontology are reusable between di(cid:26)erent domains and tasks(cid:9) Adequacy Criteria A declarative speci(cid:16)cation allows us to de(cid:16)ne rigorous criteria for adequacy(cid:9) We will see this later in this section in the methodology for the design and evaluation of ontologies(cid:9) (cid:11)(cid:15)(cid:3)(cid:15)(cid:4) Implementing Ontologies In this section we introduce the notion of a formal language for implementing an ontology(cid:22) in particular(cid:8) we will look at the Knowledge Interchange Format(cid:9) We also introduce terms that we will need to discuss the formal methodology for designing and evaluating ontologies(cid:9) KIF (cid:24)Knowledge Interchange Format(cid:25) is a language that has been developed by the Inter(cid:3) Lingua Working Group(cid:8) under the DARPA Knowledge Sharing Initiative to facilitate knowl(cid:3) edge sharing(cid:9) Its features include(cid:19) (cid:2) a formally de(cid:16)ned declarative semantics(cid:8) (cid:2) provision for the expression of arbitrary sentences in (cid:16)rst(cid:3)order logic(cid:9) This gives it the expressive power to represent knowledge required for a typical application knowledge base(cid:9) In this section(cid:8) we will present some of the terminology for KIF (cid:30)(cid:13)(cid:31) which will be used in these notes(cid:9) In x (cid:17)(cid:9)(cid:12)(cid:9)(cid:4)(cid:8) we will revisit KIF and its role in implementing ontologies(cid:9) A universe of discourse is the set of all objects presumed to exist in the world(cid:9) There are four special types of expressions in KIF ! terms(cid:8) sentences(cid:8) rules(cid:8) and de(cid:16)nitions(cid:9) Terms are used to denote objects in the world being described(cid:22) this includes variables(cid:8) which are used in quantifying over individual objects(cid:8) and constants(cid:8) that are used to denote AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:17) individual objects(cid:9) Sentences are used to express facts about the world(cid:9) Rules are used to express legal steps of inference(cid:9) De(cid:3)nitions are used to de(cid:16)ne constants(cid:9) We will informally use the word axiom to refer to sentences or de(cid:16)nitions(cid:9) For every set of n objects(cid:8) an n(cid:3)ary function associates a unique object(cid:9) For every set of n objects(cid:8) an n(cid:3)ary relation associates a truth value(cid:22) the set of objects that evaluate to true speci(cid:16)es the objects that satisfy the relation(cid:9) Function symbols in the language are used to denote functions and predicate symbols in the language are used to denote relations(cid:9) We will use the terms axiomatisation or theory to refer to the set of axioms that we use to represent the meaning of the terms in an ontology(cid:9) (cid:11)(cid:15)(cid:3)(cid:15)(cid:6) The Role of Automation The formality required of the language for the ontology is to a large extent dependent on the degree of automation in the various tasks which the ontology is supporting(cid:9) If an ontology is a framework for communication among people(cid:8) then the representation of the ontology can be informal(cid:8) as long as it is precise and captures everyone(cid:21)s intuitions(cid:9) However(cid:8) if the ontology is to be used by software tools or intelligent agents(cid:8) then the semantics of the ontology must be made much more precise(cid:9) For example(cid:8) consider the role that ontologies play in supporting software tools for business process reengineering(cid:9) At one end of the continuum(cid:8) there are tools which are simplyvisuali(cid:3) sations of the enterprise that facilitate communicationand provide insight into the enterprise and its problems(cid:9) By providing a mental model of the enterprise(cid:8) the ontology supports op(cid:3) portunity identi(cid:16)cation as participants gain an understanding of how the enterprise succeeds or fails(cid:9) As we move along the continuum(cid:8) we encounter BPR tools that provide analysis of a given enterprise model through evaluation(cid:8) identi(cid:16)cation(cid:8) and monitoring of di(cid:26)erent properties of the enterprise(cid:9) In these di(cid:26)erent forms of analysis(cid:8) we are considering alternative enterprise models(cid:8) which includes alternative plans or schedules for activities(cid:8) alternative organisations(cid:8) or alternative sets of policies for people in the enterprise(cid:9) We are also considering alternative explanations for di(cid:26)erent properties of the enterprise(cid:8) and alternative predictions for possibly hypothetical behaviour of the enterprise(cid:9) Given this characterisation(cid:8) the analysis tasks performed by the tools may simply compare the alternatives in a given set produced by the user of the tool(cid:9) This type of analysis is performed by current simulation tools(cid:9) To provide guidance for the user(cid:8) the tools may themselves generate the set of alternatives which the user then evaluates(cid:9) In the most automated form of analysis(cid:8) the tools perform automated design by generating models(cid:8) explanations(cid:8) or predictions with particular properties(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:14) (cid:2) (cid:8) (cid:0) (cid:0) (cid:2) (cid:2) Completeness Motivating Informal Competency Questions Formal Competency Questions Theorems Terminology Formal Axioms Formal Scenarios Figure (cid:13)(cid:19) Procedure for a formal approach to ontology design and evaluation(cid:9) (cid:10)(cid:2)(cid:0) Overview of a Formal Methodology For any given ontology(cid:8) the goal is to agree upon a shared terminology and set of constraints on this terminology(cid:9) We must agree on the purpose and ultimate use of our ontologies(cid:9) We must therefore provide a mechanism guiding the design of ontologies(cid:8) as well as providing a framework for evaluating the adequacy of these ontologies(cid:9) Such a framework allows a more precise evaluation of di(cid:26)erent proposals for an ontology(cid:8) by demonstrating the competency of each proposal with respect to the set of questions that arise from the applications(cid:9) These justify the existence and properties of the objects within the ontology(cid:9) This section gives an overview of the methodology used in the Enterprise Integration Labo(cid:3) ratory for the design and evaluation of integrated ontologies(cid:9) Figure (cid:13) outlines this method(cid:3) ology(cid:9) It consists of the following steps(cid:19) (cid:4)(cid:9) Capture of motivating scenarios(cid:9) (cid:7)(cid:9) Formulation of informal competency questions(cid:9) (cid:11)(cid:9) Speci(cid:16)cation of the terminology of the ontology within a formal language such as (cid:16)rst(cid:3)order logic(cid:9) (cid:12)(cid:9) Formulation of formal competency questions using the terminology of the ontology(cid:9) (cid:13)(cid:9) Speci(cid:16)cation of axioms and de(cid:16)nitions for the terms in the ontology within the formal language(cid:9) (cid:6)(cid:9) Justi(cid:16)cation of the axioms and de(cid:16)nitions by proving characterisation theorems(cid:9) We will now consider each of these steps in more detail(cid:8) using (cid:16)rst(cid:3)order logic as the formal language(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:7)(cid:5) (cid:10)(cid:2)(cid:5) Motivating Scenarios The development of ontologies is motivated by scenarios that arise in the applications(cid:9) In particular(cid:8) such scenarios may be presented by industrial partners as problems which they encounter in their enterprises(cid:9) The motivating scenarios are story problems or examples which are not adequately addressed by existing ontologies(cid:9) A motivating scenario also pro(cid:3) vides a set of intuitively possible solutions to the scenario problems(cid:9) These solutions provide an informal intended semantics for the objects and relations that will later be included in the ontology(cid:9) Any proposal for a new ontology or extension to an ontology should describe one or more motivating scenarios(cid:8) and the set of intended solutions to the problems presented in the scenarios(cid:9) This provides a rationale for the objects in an ontology(cid:8) particularly in cases when there are di(cid:26)erent objects in di(cid:26)erent proposals for the same ontology(cid:9) By providing a scenario(cid:8) we can understand the motivationfor the prior ontology in terms of its applications(cid:9) (cid:10)(cid:2)(cid:6) Informal Competency Questions Given the motivating scenario(cid:8) a set of queries will arise which place demands on an un(cid:3) derlying ontology(cid:9) We can consider these queries to be expressiveness requirements that are in the form of questions(cid:9) An ontology must be able to represent these questions using its terminology(cid:8) and be able to characterise the answers to these questions using the axioms and de(cid:16)nitions(cid:9) These are the informal competency questions(cid:8) since they are not yet expressed in the formal language of the ontology(cid:9) By specifying the relationship between the informal competency questions and the motivat(cid:3) ing scenario(cid:8) we give an informal justi(cid:16)cation for the new or extended ontology in terms of these questions(cid:9) This also provides an initial evaluation of the new or extended ontology(cid:22) the evaluation must determine whether the proposed extension is required or whether the competency questions can already be answered by existing ontologies(cid:9) It may happen that people have prior informal ontologies for some application(cid:9) In this case(cid:8) for every object(cid:8) attribute(cid:8) relation(cid:8) and axiom in the prior ontology or proposed extension to the ontology(cid:8) there should (cid:16)rst be an informal competency question which requires the objects or constraints de(cid:16)ned with the object(cid:9) Ideally(cid:8) the competency questions should be de(cid:16)ned in a strati(cid:16)ed manner(cid:8) with higher level questions requiring the solution of lower level questions(cid:9) It is not a well(cid:3)designed ontology if all competency questions have the form of simple lookup queries(cid:22) there should be questions that use the solutions to such simple queries(cid:9) Consider Figure (cid:6)(cid:8) which illustrates the structure of a competency question(cid:9) Given a set of assumptions(cid:8) constraints(cid:8) and the set of sentences that are given in the statement of the question(cid:8) there is some sentence that forms the query(cid:9) For any competency question we want to specify the rationale for the question (cid:24)which states how the answer to the question is used to answer more complex questions(cid:25) and(cid:23)or specify the decomposition of the question (cid:24)in which we pose additional simpler questions which we must answer in order to answer the given question(cid:25)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:15) (cid:0) (cid:2) (cid:3) (cid:4) A A A AK (cid:7) (cid:12) (cid:12) (cid:12) (cid:12)(cid:17) (cid:8) S S S Sw (cid:18) (cid:18) (cid:18) (cid:18)(cid:18)(cid:19) (cid:2) Given input data (cid:2) Assumptions (cid:2) Constraints (cid:2) Query What do we need to know in order to answer the question(cid:2) (cid:3)Decomposition(cid:4) (cid:3)Rationale(cid:4) How do we use the solution to the question(cid:2) Figure (cid:6)(cid:19) Strati(cid:16)cation of competency questions(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:4) The competency questions specify the requirements for an ontology and as such are the mechanism for characterising the ontology design search space(cid:9) The questions serve as constraints on what the ontology can be(cid:8) rather than determining a particular design with its corresponding ontological commitments(cid:9) There is no single ontology associated with a set of competency questions(cid:9) Instead(cid:8) the competency questions are used to evaluate the ontological commitments that have been made to see whether the ontology meets the requirements(cid:9) (cid:10)(cid:2)(cid:8) Terminology (cid:11)(cid:15)(cid:9)(cid:15)(cid:3) Informal Terminology Given the informal competency questions(cid:8) we can extract the set of terms used in expressing the question(cid:22) these will form the basis for the speci(cid:16)cation of the terminology in a formal language(cid:9) The informal methodology for ontology capture described in the preceding section is partic(cid:3) ularly useful at this stage(cid:9) In addition to identifying the set of terms(cid:8) we must also produce informalde(cid:16)nitions of the terms and address the problem of handling ambiguous terms(cid:9) The informal dictionaries and glossaries de(cid:16)ned using this methodology provide the intended se(cid:3) mantics of the terminology and lay the foundations for the speci(cid:16)cation of axioms in the formal language(cid:9) (cid:11)(cid:15)(cid:9)(cid:15)(cid:4) Speci(cid:14)cation of Formal Terminology Once informal competency questions have been posed for the proposed new or extended ontology(cid:8) the terminology of the ontology is speci(cid:16)ed using a logical formalism such as KIF(cid:9) A formal ontology is a formal description of objects(cid:8) properties of objects(cid:8) and relations among objects(cid:9) This provides the language that will be used to express the de(cid:16)nitions and constraints in the axioms(cid:9) This language must provide the necessary terminology to restate the informal competency questions(cid:9) If we are designing a new ontology(cid:8) then for every informal competency question(cid:8) there must be objects(cid:8) attributes(cid:8) or relations in the proposed ontology or proposed extension to an ontology(cid:8) which are intuitively required to answer the question(cid:9) The (cid:16)rst step in specifying the terminology of the ontology is to identify the objects in the domain of discourse(cid:9) These will be represented by constants and variables in the language(cid:9) Attributes of objects and relations among objects are de(cid:16)ned using predicates(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:7) (cid:10)(cid:2)(cid:10) Formal Competency Questions Once the competency questions have been posed informally and the terminology of the ontology has been de(cid:16)ned(cid:8) the competency questions are de(cid:16)ned formally as an entailment or consistency problem with respect to the axioms in the ontology(cid:9) Thus(cid:8) they will have one of the following forms(cid:19) (cid:2) Given the set of axioms in the ontology(cid:8) and a set of instances of objects and relations in the ontology(cid:8) can we infer some (cid:16)rst(cid:3)order sentence Q that uses only predicates in the language of the ontology(cid:10) (cid:2) Can we determine whether some (cid:16)rst(cid:3)order sentence Q that uses only predicates in the language of the ontology is consistent with the set of axioms in the ontology and a set of instances of objects and relations in the ontology(cid:10) More formally(cid:8)these can be stated as the followingforms(cid:8) where Tontology is the set of axioms in the proposed ontology(cid:8) Tground is a set of ground literals (cid:24)instances(cid:25)(cid:8) and Q is a (cid:16)rst(cid:3)order sentence using only predicates in the language of Tontology(cid:9) (cid:2) Determine Tontology (cid:3) Tground j # Q (cid:2) Determine whether Tontology (cid:3) Tground (cid:4)j # (cid:5)Q The axioms in the ontology provide the core axioms applicable to all objects and relations within the ontology as well as the de(cid:16)nition of classes of objects(cid:22) the set of instances of objects and relations in the formal competency question provides the constraints speci(cid:16)c to a particular problem(cid:9) For example(cid:8) in a process ontology(cid:8) the axioms of the ontology contain the de(cid:16)nitions of complex actions and constraints on the occurrence of actions(cid:22) the set of instances would contain the particular plan(cid:8) schedule(cid:8) or scenario of external events(cid:9) Every proposal for a new or extended ontology should be accompanied by a set of formal competency questions(cid:9) It is also important to understand that all terms in the statement of the formal competency questions must be included in the terminology of the ontology(cid:9) To have a formal declarative speci(cid:16)cation of an ontology(cid:8) any sentences entailed using an ontology must be entailed by the axioms alone(cid:9) It is only in this way that we can evaluate the ontology and claim that it is adequate(cid:8) since this forces all intuitions to be made explicit(cid:9) Another important issue in the use of ontologies is the notion of a library of ontologies which can be adapted to di(cid:26)erent classes of problems(cid:9) The challenge in this case is to determine which ontologiesare the mostappropriate for a given problem(cid:9) Using the above methodology(cid:8) ontologies may be distinguished by their corresponding competency questions(cid:22) that is(cid:8) one ontology may be able to represent a di(cid:26)erent set of competency questions than another ontology(cid:9) In this case(cid:8) the relationship between the ontologies can be formally represented by the questions(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:11) (cid:10)(cid:2)(cid:11) Speci(cid:9)cation of Formal Axioms The axioms in the ontology specify the de(cid:16)nitions of terms in the ontology and constraints on their interpretation(cid:22) they are de(cid:16)ned as (cid:16)rst(cid:3)order sentences using the predicates of the ontology(cid:9) It is important to understand the signi(cid:16)cance of using axioms to de(cid:16)ne the terms and constraints for objects in the ontology(cid:9) Simply proposing a set of objects alone(cid:8) or proposing a set of ground terms in (cid:16)rst(cid:3)order logic(cid:8) does not constitute an ontology(cid:9) Axioms must be provided to de(cid:16)ne the semantics(cid:8) or meaning(cid:8) of these terms(cid:9) It is also important to realise that this is not the implementation of the ontology(cid:22) it is the speci(cid:16)cation of the ontology(cid:9) The process of de(cid:16)ning axioms is perhaps the most di(cid:27)cult aspect of de(cid:16)ning ontologies(cid:9) However(cid:8) this process is guided by the formal competency questions(cid:9) As with the informal competency questions(cid:8) the axioms in the ontology must be minimally su(cid:27)cient to express the competency questions and to characterise their solutions(cid:22) without the axioms we cannot express the question or its solution(cid:8) and with the axioms we can express the question and its solutions(cid:9) Further(cid:8) any solution to a competency question must be entailed by or be consistent with the axioms in the ontology alone(cid:9) If the proposed axioms are insu(cid:27)cient to represent the formal competency questions and characterise the solutions to the questions(cid:8) then additional objects or axioms must be added to the ontology until it is su(cid:27)cient(cid:9) This development of axiomsfor the ontology with respect to the competency questions is therefore an iterative process(cid:9) The formal competency questions rigorously specify the requirements for the axioms in the ontology(cid:8) and are the formal mechanism for characterising the ontology design search space(cid:9) There may be many di(cid:26)erent ways to axiomatise an ontology(cid:9) The formal competency questions do not determine these axioms(cid:8) rather(cid:8) the questions are used to evaluate the completeness of the sets of axioms in any particular axiomatisation(cid:9) This allows us to compare the expressiveness of di(cid:26)erent sets of axiomsusing the competency questions(cid:9) If there is a competency question that one set of axioms can represent and another cannot(cid:8) then the (cid:16)rst set is more expressive with respect to that question(cid:9) If two di(cid:26)erent axiomatisations can represent a competency question and characterise its solutions(cid:8) then they are equivalent with respect to the question(cid:8) and any comparison must use other criteria(cid:9) In some applications(cid:8) there may be a common core ontology that is shared(cid:8) while di(cid:26)erent groups use extensions speci(cid:16)c to their applications(cid:9) If this is the case(cid:8) it is necessary to explicitly characterise the relationships between the core and the di(cid:26)erent extensions(cid:9) In fact(cid:8) the advantage of specifying ontologies in formal languages is that we are able to represent and reason about the ontological commitments for di(cid:26)erent applications(cid:9) (cid:10)(cid:2)(cid:12) Completeness Theorems Once the competency questions have been formally stated(cid:8) we must de(cid:16)ne the conditions under which the solutions to the questions are complete(cid:9) This forms the basis for com(cid:3) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:12) pleteness theorems for the ontology(cid:9) These theorems have one of the following forms(cid:8) where T ontology is the set of axioms in the ontology(cid:8) T ground is a set of ground literals (cid:24)instances(cid:25)(cid:8) Q is a (cid:16)rst(cid:3)order sentence specifying the query in the competency question(cid:8) and $ is a set of (cid:16)rst(cid:3)order sentences de(cid:16)ning the set of conditions under which the solutions to the problem are complete(cid:19) (cid:2) T ontology (cid:3) T ground j # $ if and only if T ontology (cid:3) T ground j # Q(cid:9) (cid:2) T ontology (cid:3) T ground j # $ if and only if T ontology (cid:3) T ground (cid:3) Q is consistent(cid:9) (cid:2) T ontology (cid:3) T ground (cid:3) $ j # Q or T ontology (cid:3) T ground (cid:3) $ j # (cid:5)Q (cid:2) All models of T ontology (cid:3) T ground agree on the extension of some predicate P(cid:9) Completeness theorems can also provide a means of determining the extendibility of an ontology(cid:8) by making explicit the role that each axiom plays in proving the theorem(cid:9) Any extension to the ontology must be able to preserve the completeness theorems(cid:9) (cid:11) Ontologies in Practice In this section(cid:8) we will see how the ideas which we have presented are being used in prac(cid:3) tice(cid:9) We will begin by giving an overview of several projects which are concerned with the construction of ontologies to support inter(cid:3)operability(cid:9) We will then broaden our scope and consider several endeavours within the industrial and academic communities concerned with the role of ontologies as standards(cid:9) Next we consider several projects which have im(cid:3) plemented ontologies dealing with various domains(cid:9) We will conclude with a look at the KSL Ontology Server(cid:8) a tool that is currently available for the design and development of ontologies(cid:9) This section does not provide an exhaustive review of existing ontologies(cid:22) rather(cid:8) it serves as an introduction to work in the (cid:16)eld(cid:9) (cid:11)(cid:2)(cid:3) Ontologies for Inter(cid:7)Operability As we saw earlier(cid:8) one of the purposes of ontologies is to serve as a unifying framework(cid:8) both for shared understanding among users and for inter(cid:3)operability of software tools(cid:9) In this section(cid:8) we will focus on two projects that address this problem of inter(cid:3)operability(cid:9) (cid:7)(cid:15)(cid:3)(cid:15)(cid:3) Process Interchange Format To assist inter(cid:3)operability(cid:8) ontologies can be used as inter(cid:3)lingua in conjunction with trans(cid:3) lators (cid:24)(cid:16)gure (cid:7)(cid:25)(cid:9) The goal of the Process Interchange Format project (cid:30)(cid:7)(cid:13)(cid:31) is to support AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:13) the exchange of business process models among di(cid:26)erent process representations(cid:9) Tools inter(cid:3)operate by translating between their native format and PIF(cid:9) The project pursues the above goals by developing PIF (cid:24)an inter(cid:3)lingua to unify heteroge(cid:3) neous process representations(cid:25) along with local translators between PIF and local process representations(cid:9) It also provides a mechanism for extending PIF to accommodate di(cid:26)erent expressive needs in a modular way (cid:30)(cid:7)(cid:12)(cid:31)(cid:9) In this sense(cid:8) there is a core PIF ontology with which all translators operate(cid:9) In addition(cid:8) there are di(cid:26)erent extensions of this core ontol(cid:3) ogy which not all ontologies may share(cid:22) for example(cid:8) di(cid:26)erent sets of ontologies may have di(cid:26)erent ontologies for time(cid:8) complex actions(cid:8) or constraints(cid:9) In PIF(cid:8) these extensions are captured by partially shared views(cid:8) so that ontologies that have a partially shared view in common can translate without loss of expressiveness(cid:9) The PIF project aims to support translations such that process descriptions can be auto(cid:3) matically translated back and forth between PIF and other process representations with as little loss of meaning as possible(cid:9) If translation cannot be done fully automatically(cid:8) the human e(cid:26)orts needed to assist the translation should be minimised(cid:9) If a translator cannot translate part of a PIF process description to its target format(cid:8) it should translate as much of the description as possible (cid:24)and not(cid:8) for example(cid:8) simply issue an error message and give up(cid:25)(cid:9) In addition(cid:8) it should represent any untranslatable parts so that the translator can add them back to the process description when it is translated back into PIF(cid:9) (cid:7)(cid:15)(cid:3)(cid:15)(cid:4) KRSL Plan Ontology The (cid:16)rst phase of the ARPA(cid:23)Rome Laboratory Planning Initiative (cid:24)ARPI(cid:25) included devel(cid:3) opment of the Knowledge Representation Speci(cid:16)cation Language (cid:24)KRSL(cid:25) for representing plans and planning information (cid:30)(cid:7)(cid:6)(cid:31)(cid:9) It was intended to provide a sharable ontology of plan(cid:3) ning information as an interchange medium for ARPI systems and as a means for specifying shared domain information(cid:9) The main aim of the ontology is to provide a shared vocabulary of concepts(cid:8) relations(cid:8) and conditions common to planning activities for use by disparate and communicating systems(cid:8) as opposed to a particular language and syntax as exhibited by KRSL(cid:9) To achieve this(cid:8) the shared ontology has two major aspects ! an abstract ontology setting out major categories (cid:24)such as space(cid:8) time(cid:8) agents(cid:8) actions(cid:8) reasoning(cid:8) and plans(cid:25)(cid:8) and a set of modular specialised ontologies which augmentthe general categories with sets ofconcepts and alternative theories of more detailed notions commonlyused by planning systems(cid:8) such as speci(cid:16)c ontologies and theories of time points(cid:8) temporal relations(cid:8) and complex actions(cid:9) The specialised ontologies are also used to provide de(cid:16)nitions of concepts in the case where several alternative sets of concepts are widely used to describe the same subject in the abstract ontology(cid:9) The relationship between these two sets of ontologies is similar to the relationship between core ontologies and partially shared views in PIF(cid:9) In particular(cid:8) the abstract ontology seeks to capture those general categories about which there is little disagreement(cid:8) while the spe(cid:3) cialised ontologies provide means for expressing alternative views of the same subject matter as well as concepts not expressible in the abstract ontology(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:6) (cid:11)(cid:2)(cid:0) The Role of Standards Ontologies can also play a role in standardising representations among tools(cid:9) A number of projects are currently being undertaken to provide some kind of standard in di(cid:26)erent domains of application(cid:19) (cid:2) Work(cid:18)ow Management Coalition (cid:24)WfMC(cid:25) (cid:2) STEP and EXPRESS (cid:2) CORBA (cid:2) KIF and Conceptual Graphs The standards play the same roles for inter(cid:3)operability and shared understanding that we have already discussed(cid:9) (cid:7)(cid:15)(cid:4)(cid:15)(cid:3) Work(cid:18)ow Management Coalition With the Work(cid:18)ow Management Coalition(cid:8) a standard terminology is evolving which can serve as a common framework for di(cid:26)erent work(cid:18)ow management system vendors(cid:9) This is manifest in one of the early outputs of the project(cid:8) a glossary(cid:30)(cid:7)(cid:5)(cid:31)(cid:9) This document contains technical de(cid:16)nitions for terms to be used in the WfMC speci(cid:16)cations and discussions(cid:9) The de(cid:16)nitions themselves help in establishing a consistency in the usage of such terms(cid:9) For each term the following is provided(cid:19) a de(cid:16)nition(cid:8) a discussion of usage(cid:8) and a set of possible synonyms(cid:9) This glossary serves as a (cid:20)semi(cid:3)informal(cid:21) ontology for shared understanding analogous to the natural language version of the Enterprise Ontology(cid:9) The ultimate objective of the Work(cid:18)ow Management Coalition is to enable inter(cid:3)operability between di(cid:26)erent work(cid:18)ow systems(cid:9) This would require an interchange format similar to PIF(cid:9) (cid:7)(cid:15)(cid:4)(cid:15)(cid:4) STEP STEP (cid:24)Standard for the Exchange of Product Model Data(cid:25) is an inter(cid:3)lingua for de(cid:16)ning and specifying products (cid:30)(cid:4)(cid:14)(cid:31)(cid:9) The primary motivation for STEP is to achieve inter(cid:3)operability and to enable product data to be exchanged among di(cid:26)erent computer systems and environ(cid:3) ments associated with the complete product lifecycle(cid:9) This includes design(cid:8) manufacture(cid:8) utilisation(cid:8) maintenance(cid:8) and disposal(cid:9) This use may involve many computer systems(cid:8) in(cid:3) cluding some that may be located in di(cid:26)erent organisations(cid:9) In order to support such uses(cid:8) organisations must be able to represent their product information in a common computer(cid:3) interpretable format that is required to remain complete and consistent when exchanged among di(cid:26)erent computer systems(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:17) The overall objective ofSTEP is to provide a mechanismthat is capable of describing product data throughout the life cycle of a product(cid:8) independent from any particular system(cid:9) The nature of this description makes it suitable not only for neutral (cid:16)le exchange(cid:8) but also as a basis for implementing and sharing product data bases and archiving(cid:9) The ultimate goal is an integrated product information database that is accessible and useful to all the resources necessary to support a product over its lifecycle(cid:9) STEP uses the formal speci(cid:16)cation language(cid:8) EXPRESS(cid:8) to specify the product information to be represented(cid:9) (cid:7)(cid:15)(cid:4)(cid:15)(cid:6) CORBA CORBA (cid:24)the Common Object Request Broker Architecture(cid:25) is an emerging standard for retrieving objects and invoking operations on objects across a network (cid:30)(cid:11)(cid:15)(cid:31)(cid:9) It is a collabo(cid:3) rative project developed by and endorsed by (cid:24)to varying degrees(cid:25) the members of the Object Management Group (cid:24)OMG(cid:25)(cid:9) CORBA provides mechanisms by which objects transparently make requests and receive responses(cid:9) The ORB provides inter(cid:3)operability between applications on di(cid:26)erent machines in heterogeneous distributed environments and seamlessly interconnects multiple object sys(cid:3) tems(cid:9) It has a languageInterface De(cid:16)nition Language (cid:24)IDL(cid:25) which speci(cid:16)es objects and oper(cid:3) ations to an ORB and allowsoperations to be invoked on those objects by remote(cid:23)distributed applications(cid:9) IDL is also supported by the KSL Ontology Server (cid:24)see x (cid:17)(cid:9)(cid:12)(cid:25)(cid:8) which provides a translator between IDL and Ontolingua(cid:9) There is also a de(cid:16)nition of an Object Model(cid:8) which de(cid:16)nes what an object is in the CORBA space(cid:9) The object implementation provides the semantics of the objects(cid:22) in this sense(cid:8) we can consider the object model to be a step towards an ontology(cid:9) The CORBA project also incorporates informalnotions of ontologies(cid:9) As part of the project(cid:8) the Business Object Management group has developed a glossary of terms to be used in the object model(cid:9) Although this glossary is not in itself an ontology(cid:8) it does provide an informal framework for shared understanding(cid:9) (cid:7)(cid:15)(cid:4)(cid:15)(cid:8) KIF and Conceptual Graphs KIF(cid:8) a knowledge interchange format (cid:30)(cid:13)(cid:31) (cid:24)see x (cid:17)(cid:9)(cid:12)(cid:25) and conceptual graphs (cid:30)(cid:11)(cid:12)(cid:31) are both languages which can be used to represent ontologies(cid:9) They were developed independently but both are based on (cid:16)rst(cid:3)order predicate logic(cid:8) and thus are in essence(cid:8) syntactic variants(cid:9) However(cid:8) there are di(cid:26)erences in the details(cid:9) Currently there is an e(cid:26)ort underway to standardise these two languages(cid:22) this will allow formal translation from one to the other and facilitate inter(cid:3)operation of tools based on these languages (cid:30)(cid:4)(cid:31)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:14) (cid:11)(cid:2)(cid:5) Implemented Integrated Ontologies In this section(cid:8) we willdiscuss several endeavours within the industrial and academic commu(cid:3) nities that address the problem of implementing and integrating a set of di(cid:26)erent ontologies(cid:9) (cid:7)(cid:15)(cid:6)(cid:15)(cid:3) CYC CYC (cid:30)(cid:7)(cid:17)(cid:31) is a project of the Microelectronics and Computer Technology Corporation (cid:24)MCC(cid:25) in Austin(cid:8) Texas that provides a foundation for common sense reasoning by developing ontologies for a wide variety of domain(cid:3)speci(cid:16)c applications(cid:9) All of the knowledge in CYC is represented declaratively in the formof assertions in a variant of (cid:16)rst(cid:3)order logic called CYCL(cid:9) The CYC knowledge base itself contains simple assertions(cid:8) inference rules(cid:8) and control rules for inference(cid:22) an inference engine can be used to derive new assertions using this knowledge base(cid:9) The ontologies underlying CYC are organised into sets of modules known as microtheories(cid:9) Each microtheory captures the knowledge and reasoning required for some particular do(cid:3) main(cid:8) such as space(cid:8) time(cid:8) causality(cid:8) or agents(cid:9) Multiple microtheories may exist for a given domain(cid:8) re(cid:18)ecting the di(cid:26)erent perspectives and assumptions made by people modellingthat domain(cid:9) In this sense(cid:8) CYC is not a monolithicintegrated ontology(cid:22) rather(cid:8) it is a network of microtheories for a set of domains whose union covers the di(cid:26)erent ontological commitments that can be made within those domains(cid:9) (cid:7)(cid:15)(cid:6)(cid:15)(cid:4) TOVE The goal of the TOVE (cid:24)TOronto Virtual Enterprise(cid:25) (cid:30)(cid:4)(cid:4)(cid:31) project is to create an enterprise ontology that has the following characteristics(cid:19) (cid:4)(cid:25) provides a shared terminology for the enterprise that every application can jointly understand and use(cid:8) (cid:7)(cid:25) de(cid:16)nes the meaning (cid:24)semantics(cid:25) of each term in a precise and as unambiguous manner as possible using First Order Logic(cid:8) (cid:11)(cid:25) implements the semantics in a set of Prolog axioms that enable TOVE to automatically deduce the answer to many (cid:20)common sense(cid:21) questions about the enterprise(cid:8) and (cid:12)(cid:25) de(cid:16)nes a symbology for depicting a term or the concept constructed thereof in a graphical context(cid:9) The TOVE ontologies constitute an integrated enterprise model(cid:8) providing support for more powerful reasoning in problems that require the interaction of the following ontologies(cid:19) (cid:2) Activities(cid:8) states(cid:8) and time (cid:2) Organisation (cid:2) Resources (cid:2) Products AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:11)(cid:5) (cid:2) Services (cid:2) Manufacturing (cid:2) Cost (cid:2) Quality This framework provides a characterisation of classes of enterprises by sets of assumptions over their processes(cid:8) goals(cid:8) and organisation constraints(cid:9) (cid:7)(cid:15)(cid:6)(cid:15)(cid:6) Enterprise The overall objective of the Enterprise Project (cid:4) (cid:30)(cid:4)(cid:5)(cid:31) is to improve and where necessary re(cid:3) place existing modelling methods with a framework for integrating methods and tools which are appropriate to enterprise modelling and the management of change(cid:9) This framework is based on an ontology for enterprise modelling(cid:9) A goal of the Enterprise Project is to provide a computer(cid:3)based toolset which will help cap(cid:3) ture aspects of a business and analyse these to identify and compare options for the meeting the business requirements(cid:9) The toolset will provide task management support to users by helping them perform enterprise modelling activities and guiding them through the toolset facilities(cid:9) These facilities will enable (cid:4)(cid:25) capture and description of an enterprise(cid:8) (cid:7)(cid:25) speci(cid:16)ca(cid:3) tions of business problems(cid:23)requirements (cid:24)consistent with the ontology(cid:25)(cid:8) (cid:11)(cid:25) identi(cid:16)cation and evaluation of solution options and alternative design and implementation paths at strategic(cid:8) tactical and operational levels(cid:8) and (cid:12)(cid:25) representations for the de(cid:16)nition of relevant metrics and advanced simulation support(cid:9) The Enterprise Ontology (cid:17) The Enterprise Ontology is conceptually divided into several major sections(cid:9) These are listed below(cid:8) along with a few of the most important concepts for each(cid:9) Meta(cid:4)Ontology(cid:19) Entity(cid:8) Relationship(cid:8) Role(cid:8) Actor(cid:8) State of A(cid:26)airs(cid:22) Activities and Processes(cid:19) Activity(cid:8) Resource(cid:8) Plan(cid:8) Capability(cid:22) Organisation(cid:19) Organisational Unit(cid:8) Legal Entity(cid:8) Manage(cid:8) Ownership(cid:22) Strategy(cid:19) Purpose(cid:8) Strategy(cid:8) Help Achieve(cid:8) Assumption(cid:22) Marketing(cid:19) Sale(cid:8) Product(cid:8) Vendor(cid:8) Customer(cid:8) Market(cid:9) Figure (cid:11) illustrates how the ontology is intended to facilitate inter(cid:3)operation among tools(cid:9) (cid:4) The Enterprise Project is led by AIAI at The University of Edinburgh and the partners are IBM UK(cid:8) Lloyd(cid:23)s Register(cid:8) Logica and Unilever(cid:22) The project is supportedby the Department of Trade and Industry(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:15) (cid:7)(cid:15)(cid:6)(cid:15)(cid:8) KACTUS KACTUS (cid:30)(cid:11)(cid:7)(cid:8) (cid:12)(cid:15)(cid:31) is a European ESPRIT project aiming at the development of a method(cid:3) ology for the reuse of knowledge about technical systems during their life(cid:3)cycle (cid:8) so that we can use the same knowledge base for design(cid:8) diagnosis(cid:8) operation(cid:8) maintenance(cid:8) redesign(cid:8) and instruction(cid:9) KACTUS supports an integrated approach embracing computer integrated manufacturing and engineering methods(cid:8) and knowledge engineering methods by creating an ontological and computational basis for reuse of product knowledge across di(cid:26)erent applications within technical domains(cid:9) It achieves this by creating domain ontologies and reusing them for di(cid:26)erent applications(cid:9) In addition(cid:8) KACTUS attempts to integrate its ontologies with existing standards(cid:8) such as STEP(cid:8) by using the ontologies where available to capture domain data(cid:9) The main formalismin KACTUS is CML (cid:24)Conceptual Modelling Language(cid:25)(cid:9) This language was originally developed as part of the KADS and CommonKADS projects(cid:9) CML can be used to model knowledge(cid:9) CML is di(cid:26)erent from most other ontology formalisms in that it makes an explicit distinction between domain knowledge(cid:8) inference knowledge(cid:8) task knowledge and problem(cid:3)solving knowledge(cid:9) CML uses a notation that is mostly informal(cid:8) that is knowledge modelled in CML cannot be executed by a program(cid:9) KACTUS also provides a toolkit that is an interactive environment for browsing(cid:8) editing and managing (cid:24)libraries of(cid:25) ontologies(cid:9) The KACTUS toolkit supports the theoretical and application oriented work packages by providing an environment in which one can experi(cid:3) ment with theoretical issues (cid:24)e(cid:9)g(cid:9) organisation of libraries of ontologies(cid:8) mappings between ontologies(cid:8) translating between di(cid:26)erent ontology formalisms(cid:25) and also perform practical work (cid:24)e(cid:9)g(cid:9) browse(cid:8) edit and query ontologies in various formalisms(cid:25)(cid:9) In addition to CML(cid:8) the KACTUS toolkit also provides support for EXPRESS and Ontolin(cid:3) gua(cid:9) (cid:7)(cid:15)(cid:6)(cid:15)(cid:9) Plinius The goal of the Plinius project (cid:30)(cid:11)(cid:14)(cid:31) is semi(cid:3)automatic knowledge extraction from natural language texts(cid:8) in particular(cid:8) literature on mechanical properties of ceramic materials(cid:9) Since the texts cover a wide range of subjects(cid:8) a set of integrated ontologies is required to cover concepts such as materials and their properties(cid:8) processes to make these materials(cid:8) and (cid:18)aws of materials such as cracks and pores(cid:9) The ontologies in the Plinius project are a combination of formal and informal approaches(cid:9) A lexicon is used to map natural language tokens onto formal expressions in the knowledge representation language(cid:9) The ontology speci(cid:16)es a language in which the semantic part of the lexicon is expressed(cid:9) See appendix A for further details of this project(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:4) Readers Authors Remote collaborators NGFP GUI App . Data - base Remote Applications [ e . g . T - Helper ] Translators : Loom , IDL , CLIPS , . . . Library Server Editor HTTP NGFP Ontology Editor / Server KB App . K QML Intf Stand - alone Applications [ e . g . C . Net . Facilities ] Batch file transfer The Ontology Server supports three main types of usage(cid:2) Authors and readers edit and browse ontologies using HTTP(cid:2) An API allows remote applications to query and update ontologies(cid:2) Stand(cid:4)alone applications use ontologies after they are translated into the appropriate target languages Figure (cid:17)(cid:19) Ontology Server Architecture (cid:11)(cid:2)(cid:6) Computer Support Tools(cid:13) KSL Ontology Server So far(cid:8) we have mainly described conceptual approaches(cid:8) proposals for standards(cid:8) and re(cid:3) search projects albeit in applied domains(cid:9) Not discussed yet(cid:8) is the need for computer support for the design(cid:8) implementation and use of ontologies(cid:9) In this section(cid:8) we describe a suite of tools for this called the Ontology Server (cid:24)or Ontology Editor(cid:25) (cid:30)(cid:11)(cid:31) provided by the Knowledge Systems Laboratory at Stanford University(cid:9) The main functions it provides include creating(cid:8) editing(cid:8) evaluating(cid:8) publishing(cid:8) maintaining and browsing ontologies(cid:9) Of particular importance is the ability to support collaborative work(cid:8) which is greatly facili(cid:3) tated by its being accessible over the world(cid:3)wide web(cid:9) See (cid:16)gure (cid:17) for an overview of the system architecture (cid:5) (cid:9) (cid:5) This (cid:2)gure is reproducedfrom (cid:24)(cid:14)(cid:25) with permission(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:7) (cid:7)(cid:15)(cid:8)(cid:15)(cid:3) Background The background and basis for the Ontology Server is Ontolingua (cid:30)(cid:5)(cid:31)(cid:8) which (cid:30)ambiguously(cid:31) referred both to the language for representing ontologies(cid:8) and to the implementation(cid:9) The goals of the Ontolingua project were to overcome di(cid:27)culties in knowledge sharing due to lack of consistency between knowledge bases with respect to vocabulary(cid:8) semantics(cid:8) and un(cid:3) derlying assumptions(cid:9) Ontolingua was conceived and built as a system for de(cid:16)ning portable ontologies(cid:9) Services it provided included parsing(cid:8) cross(cid:3)referencing and analysing ontologies(cid:9) Portability was achieved by translating ontologies into various target languages which could be directly inserted into external software(cid:9) This was the (cid:16)rst comprehensive attempt to demonstrate the ontology as inter(cid:3)lingua idea which facilitates reuse(cid:8) sharing(cid:8) and improves potential for inter(cid:3)operation(cid:9) In a wider context(cid:8) this work is part of a knowledge sharing initiative (cid:30)(cid:12)(cid:31) which has been active for a number of years(cid:9) An important early result from this e(cid:26)ort was the development of KIF(cid:8) of which Ontolingua(cid:8) the representation language(cid:8) is a mild syntactic variant(cid:9) Knowledge Interchange Format KIF (cid:30)(cid:13)(cid:31) is designed to be an inter(cid:3)lingua which(cid:8) ideally(cid:8) any knowledge base can be translated to(cid:23)from(cid:9) Crucially(cid:8) KIF speci(cid:16)cations are meant to be sharable(cid:9) KIF is designed to be state of the art(cid:8) i(cid:2)e(cid:2) able to represent most(cid:23)all of the important concepts and distinctions available in today(cid:21)s advanced knowledge representation languages(cid:9) It is based on predicate calculus(cid:8) but is extended to cater for advanced capabilities such as de(cid:16)ning terms(cid:22) representing meta(cid:3)knowledge(cid:22) specifying sets and encoding commonly used facilities for non(cid:3)monotonic reasoning(cid:9) KIF includes (cid:28)model(cid:3)theoretic semantics for the language and an axiomatisation of the primitive object types such as sets(cid:8) lists(cid:8) relations(cid:8) and functions(cid:29) (cid:30)(cid:5)(cid:31)(cid:9) The idea is that new target languages will be catered for by development of new translators(cid:9) Importantly(cid:8)development of such translators is meantto be possible with no prior knowledge of other languages that the knowledge base may be translated into or from(cid:9) Ontolingua used KIF to explore this idea(cid:9) A note on terminology (cid:5) From this point on(cid:8) we will adopt the current usage for the term (cid:20)Ontolingua(cid:21)(cid:8) which refers to the representation language used by the current Ontology Server(cid:8) and not the system(cid:9) The term (cid:20)Ontology Editor(cid:21) is also sometimes used loosely to refer to the whole system(cid:8) though strictly(cid:8) the editor is just part of the system(cid:9) (cid:7)(cid:15)(cid:8)(cid:15)(cid:4) Overview Ontologies are speci(cid:16)ed using KIF syntax and semantics(cid:8) augmented by natural language descriptions(cid:9) The Server translates these ontologies into the representation language of choice(cid:9) Currently(cid:8) translators exist for nearly a dozen languages(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:11) Ontolingua itself(cid:8) is not an implemented knowledge representation language(cid:9) Initially there was no support of automated reasoning(cid:8) although as the Ontology Editor develops(cid:8) some simple and useful inferences are being incorporated(cid:9) The intention is that Ontolingua spec(cid:3) i(cid:16)cations represent knowledge at the epistimological level in a clear unambiguous manner(cid:9) Where practical(cid:8) key assumptions (cid:24)e(cid:9)g(cid:9) constraints(cid:22) relationships(cid:25) are formalised as KIF expressions(cid:8) otherwise(cid:8) they are expressed in natural language text(cid:9) The Ontology Server di(cid:26)ers fromand(cid:23)or extends the original Ontolingua system in a number of important ways (cid:24)see (cid:30)(cid:11)(cid:31) for details(cid:25)(cid:19) (cid:2) It is a remotecompute server availableon the world(cid:3)wideweb (cid:24)http(cid:19)(cid:23)(cid:23)www(cid:3)ksl(cid:9)stanford(cid:9)edu(cid:23)(cid:25) (cid:2) It provides an extensible library of sharable reusable ontologies with suitable protec(cid:3) tions for proprietary(cid:8) group(cid:8) and private work(cid:9) (cid:2) There is an extensive browsing capabilitywhich allows convenient viewing of ontologies(cid:9) Currently(cid:8) the format is most suitable for ontologies constructed using an object(cid:3) oriented style(cid:9) (cid:2) It has extended the original representation language to support decomposition of on(cid:3) tologies into modules and assembling new ontologies from existing modules from the library(cid:9) This includes a mechanism for handling name con(cid:18)icts(cid:9) (cid:2) It provides explicit support for collaborative work(cid:9) This includes the concept of a session to which multiple parties can be attached(cid:22) parties are automatically informed of each others(cid:21) activities(cid:9) (cid:2) It has an application programmer(cid:21)s interface (cid:24)API(cid:25) which allows remote applications to query and modify ontologies stored on the Server over the Internet(cid:9) (cid:2) As well as translating into multiple output languages(cid:8) it also allows multiple input lan(cid:3) guages (cid:24)e(cid:2)g(cid:2) CORBA(cid:21)s IDL(cid:25)(cid:9) The (cid:16)xed internal representation is semantically equiv(cid:3) alent to a set of axioms represented in KIF(cid:9) Ontolingua is one of the input languages(cid:9) (cid:7)(cid:15)(cid:8)(cid:15)(cid:6) Specifying Ontologies An Ontolingua ontology consists of a set of de(cid:16)nitions(cid:9) There are four basic kinds of things to be de(cid:16)ned(cid:19) classes(cid:22) relations(cid:22) functions and instances(cid:9) In addition(cid:8) there are axioms relating the above terms(cid:9) An Ontolingua de(cid:16)nition consists of(cid:19) (cid:2) argument list (cid:2) documentation text (cid:2) set of labeled KIF statements An example de(cid:16)nition from the Documents ontology (cid:24)available from the Server(cid:25) is given below(cid:19) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:12) (cid:0)Define(cid:2)Class Author (cid:0)(cid:3)X(cid:4) (cid:5)An author is an agent who writes things(cid:6) An author must have a name(cid:7) which is its real name as an agent(cid:6) The name as author may or may not be the agent(cid:8)s name(cid:7) but usually is(cid:6)(cid:5) (cid:9)Def (cid:0)And (cid:0)Agent (cid:3)X(cid:4) (cid:0)Has(cid:2)One (cid:3)X Name(cid:4)(cid:4) (cid:9)Issues (cid:0)(cid:0)(cid:9)See(cid:2)Also (cid:5)Has(cid:2)Name augmented in this ontology(cid:6)(cid:5)(cid:4)(cid:4)(cid:4) (cid:20)Name(cid:21) can be thought of as a slot for the class Author(cid:9) (cid:20)Has(cid:3)One(cid:21) is a second(cid:3)order relation used to specify the cardinality of the slot(cid:9) The (cid:20)(cid:19)Def(cid:21) portion of the de(cid:16)nition gives necessary conditions on class membership(cid:9) The English translation of the two conjuncts in the above de(cid:16)nition are(cid:19) (cid:24)(cid:4)(cid:25) all authors are agents(cid:22) (cid:24)(cid:7)(cid:25) every author has exactly one name(cid:9) In addition to (cid:20)(cid:19)Def(cid:21)(cid:8) there are other keywords for labelling statements in Ontolingua de(cid:16)(cid:3) nitions(cid:9) Below is a summary of some of the main keywords and their meaning(cid:19) (cid:9)Def necessary conditions (cid:24)may have variables(cid:25) (cid:9)Iff(cid:2)Def necessary and su(cid:27)cient conditions (cid:9)Lambda(cid:2)Body KIF term to compute value of function (cid:9)Axiom(cid:2)Def necessary conditions (cid:24)no variables(cid:25) Full documentation is available on line(cid:9) (cid:7)(cid:15)(cid:8)(cid:15)(cid:8) Translation We will not discuss the details of translation(cid:8) but some of the di(cid:27)culties and tradeo(cid:26)s are worth mentioning(cid:9) It was designed to meet the following competing requirements(cid:19) (cid:4)(cid:9) the de(cid:16)nition language is to be expressive(cid:8) declarative and system independent(cid:22) (cid:7)(cid:9) it should support translation into less expressive languages(cid:22) (cid:11)(cid:9) It should be easy to add translations into additional target languages(cid:9) Achieving all three is impossible(cid:9) Translation into less expressive languages means that translation will necessarily be incomplete(cid:9) The Ontology Server is biased towards an object(cid:3)oriented representation style(cid:9) The editor(cid:21)s input language steers ontology builders towards the object(cid:3)oriented subset of KIF that uses the Frame Ontology(cid:8) a set of idioms in First(cid:3)Order Logic which are easily translated into object(cid:3)oriented languages(cid:9) For example(cid:8)(cid:8)dog (cid:9)x(cid:10) (cid:6) (cid:8)mammal (cid:9)x(cid:10) is an idiomfor the subclass AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:13) relationship (cid:24)i(cid:2)e(cid:2) every dog is a mammal(cid:25)(cid:9) The translator is equipped with special purpose code to recognise such idioms which is much less work than processing arbitrary expressions in (cid:16)rst(cid:3)order logic(cid:9) It is possible for users to write arbitrary axioms in KIF(cid:8) but it is awkward for them to do so(cid:9) As a result(cid:8) most users most of the time write de(cid:16)nitions that are readily translated into the object(cid:3)oriented languages(cid:9) The principle is(cid:19) never prevent users from saying what they want to say(cid:8) but encourage them to say things in a way that it is easy to work with(cid:9) Closing Remarks The Ontolingua language(cid:8) and the overall approach to the ontology development and use supported by the Ontology Server appear to be emerging as de facto standards(cid:9) They were found to be a major bene(cid:16)t during the formal encoding of the Enter(cid:3) prise Ontology(cid:8) and seem to be the basis for much research in the (cid:16)eld(cid:9) One author of this paper found the developers to be extremely helpful and responsive(cid:8) showing unusual commit(cid:3) ment to his being a satis(cid:16)ed user(cid:9) The Ontology Server is undergoing active development(cid:8) and thus will continue to improve(cid:9) (cid:12) Conclusions and Future Directions In this paper we motivated the need for a shared understanding to overcome barriers in communication between people(cid:8) organisations and software systems(cid:9) Such a shared under(cid:3) standing (cid:24)i(cid:2)e(cid:2) ontology(cid:25) can function as a unifying framework giving rise to a variety of bene(cid:16)ts(cid:9) We classi(cid:16)ed the various roles of ontologies as follows(cid:19) Communication between and among people and organisations(cid:8) e(cid:2)g(cid:2) to unify di(cid:26)erent research (cid:16)elds (cid:24)see page (cid:11)(cid:25)(cid:22) Inter(cid:13)Operability(cid:0) among systems(cid:8) e(cid:2)g(cid:2) using the ontology as an inter(cid:3)lingua to unify di(cid:26)erent languages and software tools (cid:24)see (cid:16)gures (cid:7) and (cid:11)(cid:25)(cid:22) System Engineering Bene(cid:14)ts(cid:0) Ontologies also assist in the process of buildingand main(cid:3) taining software systems(cid:8) both knowledge(cid:3)based and otherwise(cid:9) In particular(cid:8) Re(cid:4)Usability(cid:6) the ontology(cid:8) when represented in a formal language can be (cid:24)or become so by automatic translation(cid:25) a re(cid:3)usable and(cid:23)or shared component in a software system(cid:22) e(cid:2)g(cid:2) the Ontology Server in batch mode (cid:24)(cid:16)gure (cid:17)(cid:25)(cid:22) Reliability(cid:6) A formal representation facilitates automatic consistency checking(cid:22) Speci(cid:3)cation(cid:6) the ontology can assist the process of identifying requirements and de(cid:16)ning a speci(cid:16)cation for an IT system(cid:8) e(cid:2)g(cid:2) a BSDM (cid:20)map(cid:21) (cid:30)(cid:4)(cid:17)(cid:31)(cid:9) We have also presented several methodologiesand tools that can support the design and eval(cid:3) uation of new ontologies(cid:9) We (cid:16)rst considered an informal approach to developing ontologies that included the following steps(cid:19) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:6) (cid:2) Identify purpose and scope(cid:22) (cid:2) Ontology capture(cid:8) including the production of precise unambiguous de(cid:16)nitions for the terms of the ontology and agreement on these de(cid:16)nitions(cid:22) (cid:2) Ontology coding(cid:8) including the speci(cid:16)cation of the meta(cid:3)ontology and identi(cid:16)cation of the representation language for the ontology(cid:22) (cid:2) Integrating existing ontologies(cid:22) (cid:2) Evaluation(cid:22) (cid:2) Documentation(cid:9) We then considered a more rigorous approach to the development of ontologies and discussed the role of formallanguages in the speci(cid:16)cation(cid:8) implementationand evaluationof ontologies(cid:9) In this approach(cid:8) the scope of an ontology is de(cid:16)ned by a set of competency questions(cid:8) which are di(cid:26)erent reasoning problems that the ontology is expected to support(cid:9) The de(cid:16)nitions and constraints of the ontology are formally evaluated with respect to these competency questions(cid:9) Throughout(cid:8) we suggested guidelines based on our experience for various stages of develop(cid:3) ment(cid:9) These methodologies will become increasingly important as ontologies are developed for new domains and new classes of problems(cid:8) and much further work remains to elabo(cid:3) rate and improve them(cid:9) For example(cid:8) it is unclear under which circumstances di(cid:26)erent approaches are most appropriate Frontiers of Ontology Research There are many ways to exploit ontologies(cid:8) but much research must be done to take full advantage(cid:9) To date(cid:8) there is no comprehensive review of the emerging (cid:16)eld of ontologies from a research perspective(cid:9) See (cid:30)(cid:4)(cid:6)(cid:31) for a step in that direction(cid:9) We conclude this paper with a brief discussion of several important issues and opportunities for ontology research(cid:9) These are(cid:19) (cid:2) Development of ontologies as inter(cid:3)lingua to support(cid:22) interoperability among tools in some domain(cid:22) (cid:2) Development of tools to support ontology design and evaluation(cid:22) (cid:2) Development of libraries of ontologies(cid:22) (cid:2) Development and integration of new ontologies(cid:22) (cid:2) Methodologies for the design and evaluation of ontologies(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:17) Ontologies for Inter(cid:13)Operability As we saw with the various projects such as PIF(cid:8) the Work(cid:18)ow Management Coalition(cid:8) STEP(cid:8) and the KRSL Plan Ontology(cid:8) the development of ontologies that can serve as inter(cid:3)lingua among a set of tools is becoming more prominent(cid:9) Such ontologies(cid:8) in conjunction with translators(cid:8) facilitate integration among and between di(cid:26)erent sets of domain tools (cid:24)e(cid:2)g(cid:2) see (cid:16)gure (cid:11)(cid:25)(cid:9) Given the large number of legacy systems(cid:8) it will be di(cid:27)cult to design integrated ontologies that all of the systems can use(cid:9) Rather(cid:8) well(cid:3)de(cid:16)ned translators among these systems will be crucial(cid:8) and this will require ontologies to support the translation(cid:9) In this way(cid:8) individual systems can maintain their private ontologies(cid:9) The development of new ontologies that can serve as inter(cid:3)lingua among di(cid:26)erent software systems also has a major impact on reusability(cid:9) Solutions found in one domain can be reused by other applications by translating the problems and solutions using the inter(cid:3)lingua ontologies(cid:9) The challenges in this endeavour of developing new ontologies are in the identi(cid:16)cation of the di(cid:26)erent domains for the tools and ontologies(cid:8) since the bene(cid:16)t of ontologies is greatest when they are generic and can be applied to a wide range of domains(cid:9) For example(cid:8) what are the di(cid:26)erences between the PIF ontology(cid:8) the KRSL plan ontology(cid:8) and the ontologies in the Work(cid:18)ow Management Coalition(cid:10) Perhaps there is some ontology that is generic enough that it can serve as an inter(cid:3)lingua among these ontologies(cid:9) The enterprise domain is one where ontologies may provide great bene(cid:16)ts(cid:8) e(cid:2)g(cid:2) as as inter(cid:3) lingua among business process reengineering tools(cid:9) However(cid:8) there are a number of indepen(cid:3) dently developed enterprise ontologies whose di(cid:26)erences are unclear(cid:8) similar to the above situation(cid:9) In addition(cid:8) there will be the challenge of integrating ontologies from di(cid:26)erent domains(cid:9) For example(cid:8) if we use a common process ontology such as PIF(cid:8) how do we integrate this with a possible common organisation ontology or a common product ontology such as STEP(cid:23)EXPRESS(cid:10) Both of these ontologies would be used as inter(cid:3)lingua for their par(cid:3) ticular domains(cid:8) but there will some interaction among them(cid:9) A product ontology is related to the process ontology through the notions of process plans(cid:22) an organisation ontology is related to the process ontology through notions such as commitment and responsibility for performing di(cid:26)erent processes(cid:9) Tools for Ontology Design Given the challenge of integrating ontologies(cid:8) we need to de(cid:3) velop ontology design tools that can assist in the integration of ontologies(cid:9) The development of tools to support ontology design and evaluation is particularly important for the case of distributed teams(cid:9) The challenge is even greater when these teams are developing ontologies in di(cid:26)erent domains(cid:9) In this case we need software tools that can manage consistency among the ontologies as they are being designed(cid:9) Steps in this direction are already being taken(cid:9) We already discussed the Ontology Server (cid:30)(cid:11)(cid:31)(cid:9) In x (cid:6) we described how competency questions can assist ontology evaluation(cid:9) G omez(cid:3)P erez is building tools to assist in evaluation of ontologies expressed in Ontolingua (cid:30)(cid:6)(cid:8) (cid:17)(cid:31)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:14) Ontology Libraries As we saw earlier in this paper(cid:8) one of the primary applications of ontologies is to facilitate reusability(cid:9) The ultimate goal of this approach is the construction of libraries of ontologies which can be reused(cid:8) customised(cid:8) and adapted to di(cid:26)erent general classes of problems and environments(cid:9) Users would construct the ontology appropriate for their problems by importing various modules of ontologies from the library(cid:9) An example of this can be seen in the partially shared views of ontologies in the PIF project (cid:30)(cid:7)(cid:12)(cid:31) and Process Handbook (cid:30)(cid:7)(cid:14)(cid:31) projects(cid:9) An application of this approach will be to construct archives or repositories of ontologies that have been used in various domains(cid:9) These domain(cid:3)speci(cid:16)c ontologies could then be struc(cid:3) tured into more generic classes so that they could be applied to a wider range of general problems(cid:9) Such repositories of ontologies could be used to facilitate benchmarking among di(cid:26)erent companies(cid:9) For example(cid:8) a ship(cid:3)building enterprise could reuse the ontologies de(cid:3) signed for house construction enterprises(cid:9) The challenges facing this application of ontologies are concerned with ownership of the ontology libraries(cid:22) in particular(cid:8) will companies want to share ontologies that could potentially be used by their competitors(cid:9) New Ontologies We need to develop more expressive ontologies for activities(cid:23)processes(cid:8) resources(cid:8) products(cid:8) services(cid:8) and organisation(cid:9) This includes support for reasoning about the constraints that agents must satisfy(cid:8) such as goals(cid:8) commitments(cid:8) and policies(cid:9) The development of ontologies for new domains and new classes of problems is an impor(cid:3) tant step in widening the application of ontologies(cid:9) This includes ontologies for enterprise modelling(cid:8) materials science and engineering(cid:8) petrochemical and plastics industries(cid:8) natural language lexicons(cid:8) and medicine(cid:9) Integrating Ontologies An important conceptual challenge is how to choose between and(cid:23)or merge ontologies when several exist in a given domain(cid:9) Each may have subtly di(cid:26)erent assumptions(cid:8) though signi(cid:16)cant overlap may exist(cid:9) They may have been created from di(cid:26)erent perspectives(cid:8) and therefore not easily re(cid:3)used(cid:9) We need to develop ontology design tools that can assist in the integration of ontologies as they are being designed(cid:9) In particular(cid:8) there is the problem of developing new ontologies while maximising reuse of existing ontologies(cid:9) Although one of the primary uses of ontologies is the support of knowledge sharing(cid:8) surprisingly little work has been done on the actual integration of existing ontologies(cid:22) a major exception being the KSL Ontology Server(cid:9) Even for ontologies within the same domain(cid:8) such as enterprise modelling and natural language glossaries(cid:8) competing ontologies have been designed independently with little or no reuse of existing ontologies(cid:9) At the very least(cid:8) more work needs to be done in explicating the relationships among the various ontologies that have been developed within similar domains(cid:9) This situation is beginning to improve(cid:8) if only slightly(cid:9) For example(cid:8) although the PIF(cid:8) WfMC(cid:8) and KRSL e(cid:26)orts had independent origins(cid:8) there are now some formal links(cid:9) The extent to which these ontologies can or should be merged is is unclear(cid:8) however e(cid:26)orts are underway to ensure compatibility and uniformity where possible(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:12)(cid:5) Methodologies Current methodologiesforconstructing ontologieshave focussed on generic ontologies such as activities and time(cid:9) We need new methodologies for designing domain(cid:3) speci(cid:16)c ontologies(cid:22) such methodologies need to balance the need for expressing detailed domain knowledge with the objective of designing generic ontologies that maximize the bene(cid:16)t of reuse(cid:9) Acknowledgements We are grateful to Martin King(cid:8) IBM UK(cid:8) for the analysis and examples of the bene(cid:16)ts of the middle(cid:3)out approach to building ontologies(cid:9) Adam Farquhar provided information about and checked our descriptions of the KSL Ontology Server(cid:9) Michael George(cid:26) did the same for our description of his invited talk at IJCAI(cid:5)(cid:13)(cid:9) John Fraser assisted in describing the Enterprise Project(cid:9) Asunci on G omez(cid:3)P erez provided information about her work on evaluating ontologies(cid:9) Nicola Guarino provided helpful comments on an early draft(cid:9) Austin Tate drew our attention to the existence of the Work(cid:18)ow Management Coalition and links between this(cid:8) PIF and the KRSL planning ontology(cid:9) The use of BSDM industry models was brought to our attention by Martin Gladwell(cid:8) IBM UK(cid:9) Joshua Duhl drew our attention to various practical applications of ontologies(cid:9) Florence Fillion and Chris Menzel provided details of the IDSE project(cid:9) Paul van der Vet provided the summary of the Plinius project(cid:9) References (cid:30)(cid:4)(cid:31) ANSI(cid:9) Conceptual graphs(cid:8) a presentation language for knowledge in conceptual models(cid:22) working draft of proposed american national standard(cid:9) Technical Report X(cid:11)T(cid:7)(cid:23)(cid:5)(cid:13)(cid:3) (cid:15)(cid:4)(cid:5)r(cid:4)(cid:8) ANSI(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) Contact person(cid:19) J(cid:9)F(cid:9) Sowa(cid:9) (cid:30)(cid:7)(cid:31) S(cid:9) Embury and P(cid:9) Gray(cid:9) Compiling a declarative high(cid:3)level language for semantic integrity constraints(cid:9) Technical Report AUCS(cid:23)TR(cid:5)(cid:13)(cid:15)(cid:6)(cid:8) University of Aberdeen(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:11)(cid:31) A(cid:9) Farquhar(cid:8) R(cid:9) Fikes(cid:8) W(cid:9) Pratt(cid:8) and J(cid:9) Rice(cid:9) Collaborative ontology construction for information integration(cid:9) Technical Report KSL(cid:3)(cid:5)(cid:13)(cid:3)(cid:6)(cid:11)(cid:8) Stanford University Knowledge Systems Laboratory(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:12)(cid:31) R(cid:9) Fikes(cid:8) M(cid:9) Cutkosky(cid:8) T(cid:9) Gruber(cid:8) and J(cid:9) van Baalen(cid:9) Knowledge sharing technology project overview(cid:9) Technical Report KSL(cid:3)(cid:5)(cid:4)(cid:3)(cid:17)(cid:4)(cid:8) Stanford University(cid:8) Knowledge Systems Laboratory(cid:8) (cid:4)(cid:5)(cid:5)(cid:4)(cid:9) (cid:30)(cid:13)(cid:31) M(cid:9)R(cid:9) Genesereth and R(cid:9)E(cid:9) Fikes(cid:9) Knowledge interchange format(cid:8) version (cid:11)(cid:9)(cid:15) refer(cid:3) ence manual(cid:9) Technical Report Logic(cid:3)(cid:5)(cid:7)(cid:3)(cid:4)(cid:8) Computer Science Department(cid:8) Stanford University(cid:8) (cid:4)(cid:5)(cid:5)(cid:7)(cid:9) (cid:30)(cid:6)(cid:31) A(cid:9) G omez(cid:3)P erez(cid:9) Some ideas and examples to evaluate ontologies(cid:9) In Proceedings of the Eleventh Conference on Arti(cid:3)cial Intelligence Applications(cid:9) IEEE Computer Society Press(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:15) (cid:30)(cid:17)(cid:31) A(cid:9) G omez(cid:3)P erez(cid:9) Guidelines to verify completeness and consistency in ontologies(cid:9) (cid:4)(cid:5)(cid:5)(cid:6)(cid:9) to appear at the Third World Congress on Expert Systems(cid:9) (cid:30)(cid:14)(cid:31) A(cid:9) G omez(cid:3)P erez(cid:8) N(cid:9) Juristo(cid:8) and J(cid:9) Pazos(cid:9) Evaluation and assessment of knowledge sharing technology(cid:9) In N(cid:9)J(cid:9) Mars(cid:8) editor(cid:8) Towards Very Large Knowledge Bases (cid:4) Knowledge Building and Knowledge Sharing (cid:11)(cid:12)(cid:12)(cid:13)(cid:8) pages (cid:7)(cid:14)(cid:5) ! (cid:7)(cid:5)(cid:6)(cid:9) IOS Press(cid:8) Ams(cid:3) terdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:5)(cid:31) T(cid:9) Gruber(cid:9) A translation approach to portable ontology speci(cid:16)cations(cid:9) Knowledge Acquisition(cid:8) (cid:13)(cid:24)(cid:7)(cid:25)(cid:19)(cid:4)(cid:5)(cid:5) ! (cid:7)(cid:7)(cid:15)(cid:8) (cid:4)(cid:5)(cid:5)(cid:11)(cid:9) (cid:30)(cid:4)(cid:15)(cid:31) T(cid:9) Gruber(cid:9) Towards principles for the design of ontologies used for knowledge sharing(cid:9) International Journal of Human(cid:4)Computer Studies(cid:8) (cid:12)(cid:11)(cid:24)(cid:13)(cid:23)(cid:6)(cid:25)(cid:19)(cid:5)(cid:15)(cid:17) ! (cid:5)(cid:7)(cid:14)(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:4)(cid:4)(cid:31) M(cid:9) Gruninger and M(cid:9)S(cid:9) Fox(cid:9) The logic of enterprise modelling(cid:9) In J(cid:9) Brown and D(cid:9) O(cid:21)Sullivan(cid:8) editors(cid:8) Reengineering the Enterprise(cid:8) pages (cid:14)(cid:11) ! (cid:5)(cid:14)(cid:9) Chapman and Hall(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:4)(cid:7)(cid:31) M(cid:9) Gruninger and M(cid:9)S(cid:9) Fox(cid:9) Methodology for the design and evaluation of ontologies(cid:9) In Workshop on Basic Ontological Issues in Knowledge Sharing(cid:9) International Joint Conference on Arti(cid:16)cial Intelligence(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:4)(cid:11)(cid:31) N(cid:9) Guarino(cid:8) M Carrara(cid:8) and P(cid:9) Giaretta(cid:9) Formalizing ontological committment(cid:9) In J(cid:9) Doyle(cid:8) E(cid:9) Sandewall(cid:8) and P(cid:9) Torasso(cid:8) editors(cid:8) National Conference on Arti(cid:3)cial In(cid:4) telligence Conference (cid:8)AAAI(cid:4)(cid:12)(cid:14)(cid:10)(cid:9) Morgan Kaufman(cid:8) Seattle(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) (cid:30)(cid:4)(cid:12)(cid:31) N(cid:9) Guarino(cid:8) M Carrata(cid:8) and P(cid:9) Giaretta(cid:9) An ontology of meta(cid:3)level categories(cid:9) In J(cid:9) Doyle(cid:8) E(cid:9) Sandewall(cid:8) and P(cid:9) Torasso(cid:8) editors(cid:8) Principles of Knowledge Representation and Reasoning(cid:6) Proceedings of the Fourth International Conference (cid:8)KR(cid:12)(cid:14)(cid:10)(cid:8) pages (cid:7)(cid:17)(cid:15) ! (cid:7)(cid:14)(cid:15)(cid:9) Morgan Kaufman(cid:8) San Mateo(cid:8) CA(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) (cid:30)(cid:4)(cid:13)(cid:31) N(cid:9) Guarino and P Giaretta(cid:9) Ontologies and knowledge bases(cid:3) towards a terminalogical clari(cid:16)cation(cid:9) In N(cid:9)J(cid:9) Mars(cid:8) editor(cid:8) Towards Very Large Knowledge Bases (cid:4) Knowledge Building and Knowledge Sharing (cid:11)(cid:12)(cid:12)(cid:13)(cid:8) pages (cid:7)(cid:13) ! (cid:11)(cid:7)(cid:9) IOS Press(cid:8) Amsterdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:4)(cid:6)(cid:31) N(cid:9) Guarino and R(cid:9) Poli(cid:9) The role of formal ontology in the information technology(cid:9) International Journal of Human(cid:4)Computer Studies(cid:8) (cid:12)(cid:11)(cid:24)(cid:13)(cid:23)(cid:6)(cid:25)(cid:19)(cid:6)(cid:7)(cid:11) ! (cid:6)(cid:7)(cid:12)(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) This is an editorial introduction to a special issue on this topic(cid:9) (cid:30)(cid:4)(cid:17)(cid:31) IBM(cid:9) Introduction to business system development method(cid:9) Technical Report GE(cid:4)(cid:5)(cid:3) (cid:13)(cid:11)(cid:14)(cid:17)(cid:3)(cid:15)(cid:4)(cid:8) International Business Machines Corporation(cid:8) (cid:4)(cid:5)(cid:5)(cid:15)(cid:9) (cid:30)(cid:4)(cid:14)(cid:31) Initial release of international standard (cid:24)is(cid:25) (cid:4)(cid:15)(cid:11)(cid:15)(cid:11)(cid:9) Technical Report IS (cid:4)(cid:15)(cid:11)(cid:15)(cid:11)(cid:8) Interna(cid:3) tional Standards Organization(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) (cid:30)(cid:4)(cid:5)(cid:31) Fraser(cid:9) J(cid:9)(cid:8) A(cid:9) Tate(cid:8) and M(cid:9) Uschold(cid:9) The enterprise toolset (cid:3) an open enterprise ar(cid:3) chitecture(cid:9) In The Impact of Ontologies on Reuse(cid:7) Interoperability and Distributed Processing(cid:8) pages (cid:12)(cid:7) ! (cid:13)(cid:15)(cid:9) Unicom Seminars(cid:8) London(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) Further information about the Enterprise Project and Ontology is available on the World Wide Web from(cid:19) http(cid:6)(cid:15)(cid:15)www(cid:2)aiai(cid:2)ed(cid:2)ac(cid:2)uk(cid:15) (cid:7) entprise(cid:15)enterprise(cid:15)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:4) (cid:30)(cid:7)(cid:15)(cid:31) Fuchs(cid:9) J(cid:9) and J(cid:9) Wheadon(cid:9) Prospective applications of ontologies for future space mis(cid:3) sions(cid:9) In The Impact of Ontologies on Reuse(cid:7) Interoperability and Distributed Processing(cid:8) pages (cid:14)(cid:11) ! (cid:5)(cid:6)(cid:9) Unicom Seminars(cid:8) London(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:7)(cid:4)(cid:31) M(cid:9) Jones(cid:8) J(cid:9) Wheadon(cid:8) D(cid:9) Whitgift(cid:8) M(cid:9) Niezatte(cid:8) R(cid:9) Timmermans(cid:8) I(cid:9) Rodriguez(cid:8) and R(cid:9) Romero(cid:9) An agent based approach to spacecraft mission operations(cid:9) In N(cid:9)J(cid:9) Mars(cid:8) editor(cid:8) Towards Very Large Knowledges Bases (cid:4) Knowledge Building and Knowledge Sharing (cid:11)(cid:12)(cid:12)(cid:13)(cid:8) pages (cid:7)(cid:13)(cid:5) ! (cid:7)(cid:6)(cid:5)(cid:9) IOS Press(cid:8) Amsterdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:7)(cid:7)(cid:31) M(cid:9) King(cid:9) Knowledge reuse in business domains(cid:19) Experience with ibm bsdm(cid:9) In The Impact of Ontologies on Reuse(cid:7) Interoperability and Distributed Processing(cid:8) pages (cid:5)(cid:17) ! (cid:4)(cid:15)(cid:17)(cid:9) Unicom Seminars(cid:8) London(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:7)(cid:11)(cid:31) G(cid:9) Lako(cid:26)(cid:9) Women(cid:7) Fire and Dangerous Things(cid:9) University of Chicago Press(cid:8) (cid:4)(cid:5)(cid:14)(cid:17)(cid:9) (cid:30)(cid:7)(cid:12)(cid:31) J(cid:9) Lee and T(cid:9) Malone(cid:9) Partially shared views(cid:19) A scheme for communicating among groups that use di(cid:26)erent type hierarchies(cid:9) ACM Transactions on Information Systems(cid:8) (cid:14)(cid:24)(cid:4)(cid:25)(cid:19)(cid:4) ! (cid:7)(cid:6)(cid:8) (cid:4)(cid:5)(cid:5)(cid:15)(cid:9) (cid:30)(cid:7)(cid:13)(cid:31) J(cid:9) Lee(cid:8) G(cid:9) Yost(cid:8) and PIF Working Group(cid:9) The pif process interchange format and framework(cid:9) Technical Report (cid:4)(cid:14)(cid:15)(cid:8) MIT Center for Coordination Science(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:7)(cid:6)(cid:31) N(cid:9) Lehrer(cid:9) Knowledge representation speci(cid:16)cation language(cid:9) Technical report(cid:8) DARPA(cid:23)Rome Laboratory Planning and Scheduling Initiative(cid:8) (cid:4)(cid:5)(cid:5)(cid:11)(cid:9) Reference Man(cid:3) ual(cid:9) (cid:30)(cid:7)(cid:17)(cid:31) D(cid:9) Lenat and R(cid:9)V(cid:9) Guha(cid:9) Building Large Knowledge(cid:4)based Systems(cid:6) Representation and Inference in the CYC Project(cid:9) Addison Wesley(cid:8) (cid:4)(cid:5)(cid:5)(cid:15)(cid:9) (cid:30)(cid:7)(cid:14)(cid:31) T(cid:9) Malone(cid:8) K(cid:9) Crowston(cid:8) J(cid:9) Lee(cid:8) and D(cid:9) Pentland(cid:9) Tools for inventing organizations(cid:19) Toward a handbook of organizational processes(cid:9) Technical Report (cid:4)(cid:12)(cid:4)(cid:8) MIT Center for Coordination Science(cid:8) (cid:4)(cid:5)(cid:5)(cid:11)(cid:9) (cid:30)(cid:7)(cid:5)(cid:31) Work(cid:18)owManagementCoalitionMembers(cid:9) Glossary (cid:3) a work(cid:18)ow managementcoalition speci(cid:16)cation(cid:9) Technical report(cid:8) The Work(cid:18)ow Management Coalition(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) (cid:30)(cid:11)(cid:15)(cid:31) T(cid:9)J(cid:9) Mowbray and R(cid:9) Zahavi(cid:9) The ESSENTIAL COBRA(cid:6) System Integration Using Distributed Objects(cid:9) John Wiley and Object Management Group(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:11)(cid:4)(cid:31) A(cid:9) T(cid:9) Schreiber(cid:8) B(cid:9) J(cid:9) Wielinga(cid:8) J(cid:9) M(cid:9) Akkermans(cid:8) W(cid:9) Van de Velde(cid:8) and A(cid:9) Anjew(cid:3) ierden(cid:9) Cml(cid:19) The commonkads conceptual modelling language(cid:9) In L(cid:9) Steels(cid:8) A(cid:9) T(cid:9) Schreiber(cid:8) and W(cid:9) Van de Velde(cid:8) editors(cid:8) A Future for Knowledge Acquisition(cid:6) Pro(cid:4) ceedings of the (cid:16)th European Knowledge Acquisition Workshop EKAW (cid:12)(cid:14)(cid:8) pages (cid:4) ! (cid:7)(cid:13)(cid:9) Springer(cid:3)Verlag(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) Volume (cid:14)(cid:6)(cid:17) of Lecture Notes in Arti(cid:3)cial Intelligence(cid:9) (cid:30)(cid:11)(cid:7)(cid:31) G(cid:9) Schreiber(cid:8) B(cid:9) Wielinga(cid:8) and W(cid:9) Jansweijer(cid:9) The kactus view on the (cid:20)o(cid:21) word(cid:9) In Workshop on Basic Ontological Issues in Knowledge Sharing(cid:9) International Joint Con(cid:3) ference on Arti(cid:16)cial Intelligence(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:11)(cid:11)(cid:31) D(cid:9) Skuce(cid:9) Conventions for reaching agreement on shared ontologies(cid:9) In Proceedings of the (cid:12)th Knowledge Acquisition for Knowledge Based Systems Workshop(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:7) (cid:30)(cid:11)(cid:12)(cid:31) J(cid:9) Sowa(cid:9) Conceptual Structures(cid:6) Information Processing in Mind and Machine(cid:2) Addison Wesley(cid:8) Reading(cid:8) MA(cid:8) (cid:4)(cid:5)(cid:14)(cid:12)(cid:9) (cid:30)(cid:11)(cid:13)(cid:31) J(cid:9) Sowa(cid:9) Top(cid:3)level ontological categories(cid:9) International Journal of Human(cid:4)Computer Studies(cid:8) (cid:12)(cid:11)(cid:24)(cid:13)(cid:23)(cid:6)(cid:25)(cid:19)(cid:6)(cid:6)(cid:5) ! (cid:6)(cid:14)(cid:6)(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:11)(cid:6)(cid:31) P(cid:9)H(cid:9) Speel(cid:8) P(cid:9)E(cid:9) van Raalte(cid:8) P(cid:9)E(cid:9) van der Vet(cid:8) and N(cid:9)J(cid:9) Mars(cid:9) Scalability of the perfor(cid:3) mance of knowledge representation systems(cid:9) In Towards Very Large Knowledge Bases (cid:4) Knowledge Building and Knowledge Sharing (cid:11)(cid:12)(cid:12)(cid:13)(cid:8) pages (cid:4)(cid:17)(cid:11) ! (cid:4)(cid:14)(cid:11)(cid:9) IOS Press(cid:8) Ams(cid:3) terdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:11)(cid:17)(cid:31) M(cid:9) Uschold and M(cid:9) King(cid:9) Towards a methodology for building ontologies(cid:9) In Workshop on Basic Ontological Issues in Knowledge Sharing(cid:9) International Joint Conference on Arti(cid:16)cial Intelligence(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) Also available as AIAI(cid:3)TR(cid:3)(cid:4)(cid:14)(cid:11) from AIAI(cid:8) The University of Edinburgh(cid:9) (cid:30)(cid:11)(cid:14)(cid:31) P(cid:9) van der Vet and N(cid:9) Mars(cid:9) Structured system of concepts for storing(cid:8) retrieving(cid:8) and manipulating chemical information(cid:9) Journal of Chemical Information and Computer Sciences(cid:8) (cid:11)(cid:11)(cid:19)(cid:13)(cid:6)(cid:12) ! (cid:13)(cid:6)(cid:14)(cid:8) (cid:4)(cid:5)(cid:5)(cid:11)(cid:9) (cid:30)(cid:11)(cid:5)(cid:31) P(cid:9)E(cid:9) van der Vet and N(cid:9)J(cid:9) Speel(cid:8) P(cid:9)H(cid:9)and Mars(cid:9) Ontologies for very large knowledge bases in materials science(cid:19) a case study(cid:9) In N(cid:9)J(cid:9) Mars(cid:8) editor(cid:8) Towards Very Large Knowledge Bases (cid:4) Knowledge Building and Knowledge Sharing (cid:11)(cid:12)(cid:12)(cid:13)(cid:8) pages (cid:17)(cid:11) ! (cid:14)(cid:11)(cid:9) IOS Press(cid:8) Amsterdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:9) (cid:30)(cid:12)(cid:15)(cid:31) R(cid:9) Wielinga(cid:8) G(cid:9) Schreiber(cid:8) W(cid:9) Jansweijer(cid:8) A(cid:9) Anjewierden(cid:8) and F(cid:9) van Hame(cid:3) len(cid:9) Framework and formalism for expressing ontologies(cid:9) Technical report(cid:8) Univer(cid:3) sity of Amsterdam(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) Esprit Project (cid:14)(cid:4)(cid:12)(cid:13) Deliverable DO(cid:4)b(cid:4)(cid:8) available from http(cid:19)(cid:23)(cid:23)www(cid:9)swi(cid:9)psy(cid:9)uva(cid:9)nl(cid:23)projects(cid:23)Kactus(cid:23)Reports(cid:9)html(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:11) A The Plinius Project and its Ontology by Paul E(cid:9) van der Vet and Nicolaas J(cid:9)I(cid:9) Mars c(cid:0) (cid:4)(cid:5)(cid:5)(cid:13) Knowledge(cid:3)Based Systems Group(cid:8) Dept(cid:9) of Computer Science University of Twente(cid:8) P(cid:9)O(cid:9) Box (cid:7)(cid:4)(cid:17)(cid:8) (cid:17)(cid:13)(cid:15)(cid:15) AE Enschede(cid:8) the Netherlands(cid:22) phone % (cid:11)(cid:4) (cid:13)(cid:11) (cid:12)(cid:14)(cid:5) (cid:11)(cid:6) (cid:5)(cid:15)(cid:8) fax % (cid:11)(cid:4) (cid:13)(cid:11) (cid:12)(cid:14)(cid:5) (cid:7)(cid:5) (cid:7)(cid:17)(cid:22) email(cid:19) vet(cid:7)mars(cid:10)cs(cid:6)utwente(cid:6)nl(cid:9) This brochure may be freely distributed provided it is kept completely unaltered and no parts are left out(cid:2) A(cid:2)(cid:3) Setting and scope The Plinius project aimsat semi(cid:3)automaticknowledge extraction fromshort natural(cid:3)language texts(cid:9) The source texts for Plinius are the title and abstract (cid:16)elds of bibliographic docu(cid:3) ment descriptions(cid:9) They are taken fromthe on(cid:3)line version of Engineered Materials Abstracts (cid:24)EMA(cid:25) produced by Materials Information(cid:9) (cid:6) A subset of descriptions of primary literature on mechanical properties of ceramic materials has been selected from an entire EMA volume(cid:9) The focus is on cheaper methods for knowledge acquisition(cid:9) Texts are a major source of knowledge(cid:9) Today(cid:8) almost every text is produced in machine(cid:3)readable form before printing(cid:9) Fully manual acquisition of knowledge from texts is too expensive while fully automatic acquisition is an illusion(cid:9) So we want to arrive at a point in between these extremes(cid:9) The result can be characterised as human(cid:3)aided knowledge acquisition by machines or machine(cid:3) aided knowledge acquisition by humans(cid:8) depending on the division of work(cid:3)load(cid:9) We are primarily interested in obtaining a precise assessment of the investments needed to acquire knowledge this way(cid:8) including extra investments needed when the process is scaled up and(cid:23)or ported to other domains(cid:9) This assessment will help decide which division of work(cid:3)load is economically optimal(cid:9) The source texts for Plinius are processed unedited(cid:8) i(cid:2)e(cid:7)(cid:8) in the form in which they are found on the EMA tapes(cid:9) They have not been selected for easy processing(cid:9) The process utilises linguistic and domain knowledge resources to obtain representations of text contents in a knowledge representation language(cid:9) The representation are stored incrementally (cid:24)per source text(cid:25) in the interim knowledge base(cid:9) A further process serves to integrate these knowledge representations into an integrated whole(cid:9) It is a virtual process(cid:19) it is a procedure one would carry out for particular subjects and with a particular view on integration(cid:9) (cid:6) Materials Information is a registered trademarkof The Institute of Materials(cid:8) London(cid:8) and ASM Inter(cid:16) national(cid:8) Metals Park OH(cid:22) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:12) A(cid:2)(cid:0) Ontology development in Plinius Among the more important design decisions underlying the approach chosen in Plinius is that of using an ontology as one of the core elements of the system(cid:9) The texts cover a large range of subjects(cid:9) In order to capture most of the contents(cid:8) we need concepts for(cid:19) materials and their properties(cid:8) processes to make them(cid:8) processes operating on samples (cid:24)such as wear and creep(cid:25)(cid:8) and (cid:18)aws such as cracks and pores(cid:9) Obviously(cid:8) ontology construction is a major e(cid:26)ort in Plinius(cid:9) In our ontologies(cid:8) the de(cid:16)nitions of concepts are formal wherever possible and useful(cid:8) and informal otherwise(cid:9) Often(cid:8) some of the more interesting relations between concepts (cid:24)part(cid:3)whole and subconcept(cid:3)superconcept(cid:25) are built into the concept de(cid:16)nitions(cid:9) We have developed some parts of the ontology in the traditional(cid:8) top(cid:3)down fashion of re(cid:3) cursive di(cid:26)erentiation(cid:9) This kind of approach produces taxonomic hierarchies(cid:9) Other parts have been built in a bottom(cid:3)up fashion(cid:8) which represents a break with tradition(cid:9) We have also investigated the representation of ontologiesin formalknowledge representation languages(cid:9) In the course of a Ph(cid:9)D(cid:9) project of Piet(cid:3)Hein Speel(cid:8) ontologies at various stages of development have been formalised and often also implemented in description logics (cid:24)such as classic(cid:8) back(cid:8) loom(cid:25)(cid:8) furthermore in Ontolingua(cid:23)KIF(cid:8) Prolog(cid:8) Conceptual Graphs (cid:30)(cid:11)(cid:12)(cid:31) and LLILOG language developed for the lilog project(cid:9) The ontology ful(cid:16)lls three purposes directly relevant to the Plinius process(cid:19) (cid:4)(cid:9) By demanding that all domain knowledge in the system is expressed in ontology con(cid:3) cepts(cid:8) the various resources of the system co(cid:3)operate smoothly(cid:9) (cid:7)(cid:9) The ontology speci(cid:16)es a language in which the semantic part of the lexicon is to be expressed(cid:9) The transition from natural language to knowledge representation language is partly supported by a lexicon(cid:8) which maps natural(cid:3)language tokens onto formal expressions in the knowledge representation language(cid:9) The ontology speci(cid:16)es the non(cid:3) logical constants that may be used(cid:9) (cid:11)(cid:9) The ontology implicitlyspeci(cid:16)es the desired output of the language(cid:3)dependent process(cid:9) Any message in the source text that cannot be expressed in ontology concepts cannot occur in the output(cid:9) As a consequence of these purposes(cid:8) the ontology is also helpful in deciding about further use of the interim knowledge base and of integrated knowledge derived from the interim knowledge base by means of one of the integration programs(cid:9) A(cid:2)(cid:5) Further information Some of our publications are listed below(cid:9) Contact the authors for more information(cid:9) Paul E(cid:9) van der Vet(cid:8) Hidde de Jong(cid:8) Nicolaas J(cid:9)I(cid:9) Mars(cid:8) Piet(cid:3)Hein Speel and Wilco G(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:13) ter Stal(cid:8) Plinius intermediate report(cid:8) Memoranda Informatica (cid:5)(cid:12)(cid:3)(cid:11)(cid:13)(cid:8) University of Twente(cid:8) Enschede(cid:8) the Netherlands(cid:8) (cid:4)(cid:5)(cid:5)(cid:12)(cid:9) Paul E(cid:9) van der Vet and Nicolaas J(cid:9)I(cid:9) Mars(cid:8) (cid:28)Ontologies for very large knowledge bases in materials science(cid:19) a case study(cid:29)(cid:8) in(cid:19) Towards very large knowledge bases(cid:8) Nicolaas J(cid:9)I(cid:9) Mars (cid:24)ed(cid:9)(cid:25)(cid:8) Amsterdam(cid:19) IOS Press(cid:8) (cid:4)(cid:5)(cid:5)(cid:13)(cid:8) pp(cid:9) (cid:17)(cid:11) ! (cid:14)(cid:11)(cid:9) Piet(cid:3)Hein Speel(cid:8) Selecting knowledge representation systems(cid:8) Ph(cid:9)D(cid:9) thesis(cid:8) University of Twente(cid:8) Enschede(cid:8) the Netherlands(cid:9) Available through WWW at URL http(cid:9)(cid:11)(cid:11)wwwis(cid:6)cs(cid:6)utwente(cid:6)nl(cid:9)(cid:12)(cid:13)(cid:12)(cid:13)(cid:11)kbs(cid:11)pubpage(cid:6)html(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:6) B Using Ontologies to Enable Enterprise Model Inte(cid:10) gration Florence Fillion (cid:8)(cid:13)llion(cid:14)kbsi(cid:4)com(cid:11) and Christopher Menzel (cid:8)cmenzel(cid:14)kbsi(cid:4)com(cid:11) Knowledge Based Systems(cid:5) Inc(cid:5) (cid:15)(cid:16)(cid:17)(cid:17) University Drive East(cid:5) College Station(cid:5) TX (cid:18)(cid:18)(cid:19)(cid:20)(cid:17)(cid:5) USA(cid:4) Tel (cid:8)(cid:20)(cid:17)(cid:21)(cid:11) (cid:22)(cid:23)(cid:17)(cid:2)(cid:16)(cid:22)(cid:18)(cid:20) B(cid:2)(cid:3) Introduction This brief paper describes the role of ontologies in a commercial computational environment that supports the integration of enterprise models(cid:9) The environment is called the Integrated Development Support Environment (cid:24)IDSE(cid:25) and was developed by Knowledge Based Sys(cid:3) tems(cid:8) Inc(cid:9) (cid:24)KBSI(cid:25) as part of the Information Integration for Concurrent Engineering (cid:24)IICE(cid:25) project funded by Armstrong Laboratory at Wright Patterson Air Force Base(cid:8) USA(cid:9) The paper is organized as a set of questions and answers intended to guide the reader in understanding the role and appropriateness of ontologies in providing solutions to the problem of enterprise model integration(cid:9) B(cid:2)(cid:0) What Is Enterprise Model Integration(cid:4) Enterprise modeling is concerned with the development of models of various aspects of an enterprise(cid:9) Di(cid:26)erent types of modes have evolved to support di(cid:26)erent modeling activities(cid:19) data models to describe the data managed by the enterprise(cid:8) process models to describe the processes that take place within the enterprise(cid:8) activity models to describe the business activities performed within and by the enterprise(cid:8) and so on(cid:9) These various enterprise models(cid:8) if integrated(cid:8) can provide better understanding and managing of an enterprise(cid:21)s complexity(cid:8) enable simulation of alternative solutions to problems faced by the enterprise(cid:8) and support the control and monitoring of an enterprise(cid:21)s operations(cid:9) Informally speaking(cid:8) models are integrated to the extent that they provide a coherent picture of the enterprise and support e(cid:27)cient management of inter(cid:3)operations across various portions of the enterprise(cid:9) Brie(cid:18)y stated(cid:8) integrated models should have the following characteristics(cid:19) (cid:4)(cid:9) Consistency(cid:6) Information carried by the models should be consistent(cid:9) This ensures that the enterprise is modeled accurately(cid:9) If consistency is not maintained(cid:8) then the models cannot provide a coherent picture of the enterprise to support e(cid:27)cient enter(cid:3) prise management(cid:9) (cid:7)(cid:9) Lack of ambiguity(cid:6) Terms used in the modelsmust be disambiguated(cid:9) This requirement is essential to ensure an understanding of the models and enable e(cid:26)ective consistency checking across models(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:17) (cid:11)(cid:9) Logical connectedness(cid:6) Logical connections between elements across models must be identi(cid:16)ed and maintained(cid:9) These logical connections will enable the implications of changes in one model to be propagated to other relevant models(cid:9) This feature is critical in providing support for change assessment and the simulation of alternatives(cid:9) B(cid:2)(cid:5) Why Is Enterprise Model Integration Hard(cid:4) There are three central impediments to enterprise model integration(cid:9) (cid:11)(cid:2) Number of modeling methods(cid:19) Enterprise modelers use a wide variety of modeling methods tailored to di(cid:26)erent tasks and di(cid:26)erent types of information arising from di(cid:26)erent aspects of the enterprise (cid:24)eg(cid:8) static information that might be stored in an employee database(cid:8) dynamic information involved in a planning model or a description of a manufacturingprocess(cid:8) a complex array of informationfound in a detailed product design(cid:8) etc(cid:9)(cid:25)(cid:9) This fact(cid:8) in turn(cid:8) entails two related challenges(cid:9) First(cid:8) because di(cid:26)erent modeling methods target di(cid:26)erent types of information(cid:8)models developed under di(cid:26)erent methods cannot be integrated unless the underlying infor(cid:3) mation types have been integrated in some fashion(cid:9) For instance(cid:8) the type of infor(cid:3) mation captured in a process model di(cid:26)ers considerably from the type of information expressed in a data model(cid:9) Process models focus upon dynamic entities(cid:3)processes(cid:8) ac(cid:3) tivities(cid:8) events(cid:8) and the like(cid:3)that bear certain temporal relations to one another(cid:8) while data models tend to focus on more static entities(cid:3)classes(cid:8) relations(cid:8) and attributes(cid:9) However(cid:8) static and dynamic entities are of course(cid:8) not unrelated(cid:9) Most notably(cid:8) the processes in a typical process model are usually represented as containing objects of the sort that might be represented in a typical data model(cid:9) Thus(cid:8) to be clear on the connections between a process(cid:3)oriented information type and a data(cid:3)oriented informa(cid:3) tion type(cid:8) the logical relations between processes and object classes need to be made precise(cid:9) Second(cid:8) even when the connections between di(cid:26)erent information types are clari(cid:16)ed(cid:8) there remains the problem that the di(cid:26)erent enterprise models are expressed in dif(cid:3) ferent modeling languages(cid:9) A complex representation like a data model or a business process model carries the information it does in virtue of some established(cid:8) system(cid:3) atic connection between the components of the representation and the world(cid:9) It is this connection that determines the semantic content of the representation(cid:9) Hence(cid:8) the information carried by a model cannot be shared and accurately interpreted by(cid:8) a (cid:24)computer or human(cid:25) agent in the enterprise unless this agent is attuned to the semantic rules of the representation of the corresponding modeling method(cid:9) (cid:17)(cid:2) Number of modeling tools(cid:6) In today(cid:21)s computerized age(cid:8) modelers use software tools to develop their models(cid:9) These are typically stand alone tools developed independently of one another(cid:9) Integrating enterprise models means (cid:16)rst being able to integrate the tools that were used to developed these models(cid:9) Tools can be considered integrated in an environment if there exist mechanisms that enable logical connections between models to be computationally maintained in the environment(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:14) The main impediment to enterprise modeling tool integration is that it is not possible(cid:8) for all practical purposes(cid:8) to impose strict requirements on the tools themselves(cid:9) A useful model integration environment should allow any enterprise modeling tool to be easily integrated in the environment(cid:9) Hence(cid:8) it is not possible(cid:8) for example(cid:8) to require from the tools that they use a given dynamic data linkage capability such as the Dynamic Data Exchange Protocol(cid:9) If such a requirement was made on the tools(cid:8) then only those tools that can be modi(cid:16)ed or built to satisfy those requirements could be integrated(cid:9) (cid:18)(cid:2) Number of di(cid:5)ering contexts(cid:6) To integrate two or more models is(cid:8) among other things(cid:8) to identify relevant logical connections between elements of those models(cid:9) Each en(cid:3) terprise model is created and maintained by some set of agents in a given context(cid:9) However(cid:8) the agent across di(cid:26)erent context often live in very di(cid:26)erent worlds(cid:22) each brings to his or her own context (cid:24)and hence to the corresponding enterprise model(cid:25) a unique body of background knowledge(cid:8) with its own distinctive logic(cid:8) cast in its own distinctive vocabulary(cid:9) Such knowledge constitutes a semantic backdrop without which it is impossible in general to interpret the data generated in that context(cid:8) and hence the bearing of the models created and maintained in that context on models in other contexts(cid:9) Thus the informationcarried by the data in a model(cid:3)whether explicitly in virtue of the basic semantics of the data or implicitly in virtue of cross(cid:3)contextual constraints(cid:3)cannot be shared with other contexts that lack that knowledge(cid:9) B(cid:2)(cid:6) Why Ontologies(cid:4) The descriptions of the main impediments to enterprise model integration lead to the fol(cid:3) lowing observations(cid:9) (cid:2) An initial step toward solving the (cid:16)rst impediment to model integration is to capture a description of the types of information managed by the various existing modeling methods and their inter(cid:3)relationships(cid:8) and to describe and disambiguate the languages that are used to capture those types of information(cid:9) The speci(cid:16)cation of the ontology of a method provides both formaland informalde(cid:16)nitions of the method(cid:21)s basic semantic categories and the logical connections between those categories(cid:9) Such ontologies can then be used to provide manual and(cid:23)or automated support to the understanding of models captured using those methods(cid:9) (cid:2) An important approach to the second impediment to enterprise model integration(cid:3) the problem of having numerous(cid:8) independent enterprise modeling tools(cid:3)is to provide a neutral computational medium in which the information contained in the various models and their inter(cid:3)relationships can be represented and maintained(cid:9) For this solution to work(cid:8) however(cid:8) there must be a way to describe the way the information stored in the modeling tools can be represented in the neutral medium(cid:9) Here(cid:8) again(cid:8) what is needed is a somewhat formal description of the terms and elements used by a tool(cid:21)s internal representation system(cid:9) Such speci(cid:16)cation (cid:24)in essence(cid:8) a speci(cid:16)cation of the ontology of the modeling tool(cid:25) can be used to create the necessary computational structures in the neutral medium to store model information captured by the tool(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:13)(cid:5) (cid:2) Finally(cid:8) the third impediment(cid:3)the problem of di(cid:26)ering contexts(cid:3)can be addressed by de(cid:16)ning precisely the terms used in the various contexts(cid:8) that is(cid:8) by capturing the ontology of the domains relevant to the contexts in which the models are created(cid:9) These ontologies can then be used manually or automatically to provide support for understanding the models and for drawing logical connections between elements in the models(cid:9) B(cid:2)(cid:8) How Can Ontologies Enable The Integration Of Enterprise Modeling Tools(cid:4) The speci(cid:16)cation of a tool(cid:21)s ontology provides a formal(cid:8) structured description of (cid:24)i(cid:25) the information types managed by the tool(cid:8) (cid:24)ii(cid:25) how those types are structured and how data are stored within the tool(cid:8) and (cid:24)iii(cid:25) the constraints that must be maintained on the types and their structure(cid:9) In an integrated environment in which tools communicate and share information through a neutral medium (cid:24)eg(cid:8) some global repository of information(cid:25)(cid:8) a tool(cid:21)s ontology speci(cid:16)cation can therefore be used to automatically integrate the tool into the environment(cid:9) How does tool integration work in the IDSE(cid:5) To understand how automatic integration of modeling tools is possible(cid:8) it is necessary to describe in more detail how tools interact in the IDSE(cid:9) (cid:4)(cid:9) The IDSE contains a neutral medium(cid:24)or global repository(cid:25) called the Evolving System Description (cid:24)ESD(cid:25)(cid:9) The ESD is mainly composed of a knowledge base and a truth maintenance system that is used to enforce constraints on the information stored in the knowledge base(cid:9) (cid:7)(cid:9) Models are integrated through the ESD(cid:9) This is done as follows(cid:19) modeling tools send information contained in a model to the ESD using a dedicated communication lan(cid:3) guage(cid:22) model information is then stored in the ESD(cid:21)s knowledge base where it can be integrated with other information sent by other tools and where constraints on the elements of the model can be enforced(cid:9) The communication language used in to exchange information between the ESD(cid:25) and the modeling tools is an extension of the Knowledge Interchange Format (cid:24)KIF(cid:25) (cid:30)URL http(cid:19)(cid:23)(cid:23)www(cid:3)ksl(cid:3)stanford(cid:9)edu(cid:23)knowledge(cid:3) sharing(cid:23)papers(cid:23)index(cid:9)html & kif(cid:31) (cid:11)(cid:9) Model information sent by a tool to the ESD can be stored in the knowledge base only if the object and data structures necessary to store those types of information exist in the knowledge base(cid:9) In the IDSE(cid:8) these structures are created automatically by the ESD from the ontology speci(cid:16)cations of the tools(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:6)(cid:15) How do ontologies enable the automatic integration of tools(cid:5) In the IDSE(cid:8) tool integration is achieved as follows(cid:19) (cid:4)(cid:9) The ontology of the tool is captured (cid:24)by the tool(cid:21)s developer or a tool expert(cid:25) using an ontology capture tool(cid:9) In the IDSE(cid:8) a prototype tool called the Ontology Capture and Browsing Tool (cid:24)OCBT(cid:25) was used(cid:9) The OCBT implements the IDEF(cid:13) Ontology Cap(cid:3) ture Method (cid:30)URL http(cid:19)(cid:23)(cid:23)www(cid:9)brooks(cid:9)nf(cid:9)mil(cid:23)HSC(cid:23)AL(cid:23)HR(cid:23)HRG(cid:23)DOCS(cid:23)docs(cid:9)htm(cid:31) and is serving as the basis for the development of a commercial tool(cid:9) (cid:7)(cid:9) The resulting ontology speci(cid:16)cation is sent (cid:24)electronically(cid:25) to the ESD using the IDSE communication language(cid:9) (cid:11)(cid:9) The ontology speci(cid:16)cation is interpreted by a component of the ESD and the data and object structures necessary to store the informationtypes described in the ontology are computationallycreated in the knowledge base (cid:24)there is no need for humanintervention during this process(cid:25)(cid:9) The constraints and axioms contained in the ontology are also computationally interpreted and stored in the ESD(cid:21)s truth maintenance system(cid:9) (cid:12)(cid:9) The knowledge base is now ready to store any model informationsent by the tool using those newly created object structures(cid:8) and is ready to enforce the rules and constraints de(cid:16)ned on these object structures(cid:9) What are the advantages of using ontology speci(cid:14)cations to integrate enterprise tools within an environment(cid:5) There are four primary advantages to using ontology speci(cid:16)cations to integrate enterprise modeling tools(cid:19) (cid:2) Ontologies enable the tool integration process to be automated(cid:9) This is because on(cid:3) tology speci(cid:16)cations provide a description of a system (cid:24)in this case a tool(cid:25) that is both formal and precise enough to be computer processable and interpretable(cid:9) (cid:2) The automation of that process(cid:8) in turn(cid:8) greatly facilitates the integration of tools in the environment and eliminates the need to recon(cid:16)gure the ESD every time a tool is added to the environment(cid:9) (cid:2) Ontology speci(cid:16)cations eliminate the need to hard(cid:3)code the object structures and their associated constraints in the ESD(cid:9) Hence(cid:8) the process of upgrading a tool that is part of the environment is greatly facilitated and enhanced(cid:9) All that is needed is for the ontology of the tool to be modi(cid:16)ed accordingly and for the changes to be sent to the ESD interpreter(cid:9) There is no need to modify the code and recompile any of the components of the environment(cid:9) (cid:2) Finally(cid:8) ontology speci(cid:16)cations provide a documented design rationale(cid:8) or justi(cid:16)cation(cid:8) of how the information sent by a tool to the ESD is stored in the knowledge base(cid:9) If the process was done manually(cid:8)it is likely that the rationale for choosing a given object and data structures would go undocumented(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:6)(cid:4) B(cid:2)(cid:10) How Can Ontologies Enable The Integration Of Enterprise Models(cid:4) Ontologies also provide support for model integration by enabling the correct interpretation of models(cid:9) Model integration(cid:8) of course(cid:8) presupposes model interpretation(cid:9) In order to draw logical connections between(cid:8) test the consistency of and draw inferences from a set of enter(cid:3) prise models(cid:8) those models must be reasonably well understood(cid:9) There are two ways in which models can be misinterpreted and those two ways mirror the (cid:16)rst and third impediments to model integration(cid:9) A model captured using a given method can be misinterpreted if (cid:24)i(cid:25) the information types managed by the method(cid:8) their inter(cid:3)relationships(cid:8) and their relationships to the world are not well understood by the agent interpreting the model(cid:8) or (cid:24)ii(cid:25) the agent interpreting the model is unfamiliar with the terminology used in the domain in which the model was developed(cid:9) Both problems can be addressed by the use of ontologies(cid:3)method ontologies to solve the (cid:16)rst problem and domain ontologies to solve the second(cid:9) How are method ontologies used to interpret models(cid:5) A method ontology is essentially a characterization of the information type of a method(cid:8) its primitive semantic categories(cid:8) their properties(cid:8) and their logical connections(cid:9) By browsing a method ontology(cid:8) then(cid:8) an agent can better understand a model(cid:9) To illustrate(cid:8) consider the data modeling method IDEF(cid:4)X(cid:9) The basic semantic categories of IDEF(cid:4)X are (cid:20)entity(cid:21)(cid:8) (cid:20)attribute(cid:21)(cid:8) and (cid:20)link(cid:21)(cid:9) These(cid:8) and a number of auxiliary notions needed to capture the logical connections between these categories(cid:8) are formally characterized in the IDEF(cid:4)X ontology(cid:9) Now suppose that a model contains the entities (cid:20)Employee(cid:21) and (cid:20)Department(cid:21) and the one(cid:3) to(cid:3)many link (cid:20)employs(cid:21) between the entity (cid:20)Department(cid:21) and the entity (cid:20)Employee(cid:21)(cid:9) To correctly interpret this model and integrate it with other models(cid:8) an agent needs to know the implication of a link being of the type one(cid:3)to(cid:3)many (cid:24)in this case that an employee can only be employed by one department but that a department can employ one or more employees(cid:25)(cid:9) This information is contained both formally (cid:24)through axioms(cid:25) and informally (cid:24)in description strings in the ontology of the method(cid:9) Hence(cid:8) by browsing the IDEF(cid:4)X ontology(cid:8) an agent can better understand the implications of the information contained in the model on both the enterprise being described and other models of the enterprise(cid:9) Because a method ontology contains both informal and formal descriptions of the semantic categories of the method(cid:8) it is also used by the ESD(cid:21)s truth maintenance system to enforce rules and constraints de(cid:16)ned in the method(cid:9) Following the example above(cid:8) if an agent was to relate an instance of the entity (cid:20)Employee(cid:21) with two or more instances of the entity (cid:20)Department(cid:21) through the relation (cid:20)employs(cid:21)(cid:8) the truth maintenance system would signal the violation of an axiom and ask the agent to resolve the con(cid:18)ict(cid:9) How are domain ontologies used to interpret models(cid:5) In the IDSE(cid:8) a domain ontology is essentially a sophisticated data dictionary that provides formal and informal de(cid:16)nitions of the terms used in the domain and the concept they AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:6)(cid:7) denote(cid:8) and that describes precisely the relationships between those concepts(cid:9) Like a method ontology(cid:8) then(cid:8) a domain ontology can be browsed by an agent to determine the meaning of terms used in a model(cid:9) This browsing activity supports three activities that are central to model integration(cid:9) By using domain ontologies to interpret models(cid:8) an agent can (cid:24)i(cid:25) disambiguate the terms used in the models(cid:8) ie(cid:8) the agent can identify situations in which the same term is used with di(cid:26)erent meanings in di(cid:26)erent contexts(cid:22) (cid:24)ii(cid:25) recognize when di(cid:26)erent terms used in di(cid:26)erent contexts denote the same concept(cid:22) and (cid:24)iii(cid:25) identify dependencies and logical connections between elements in the same model and across models(cid:9) These three activities are critical for ensuring the consistency of models and their integration(cid:9) Domain ontologies are also used by the ESD(cid:21)s truth maintenance system to enforce con(cid:3) straints on domain elements and to propagate changes(cid:9) To illustrate(cid:8) consider this simplis(cid:3) tic example of a furniture ontology that contains (cid:24)i(cid:25) the concepts of table(cid:8) where some of the characteristics of a table as described in the ontology are its height(cid:8) the length of its legs(cid:8) and the thickness of its top(cid:22) and (cid:24)ii(cid:25) an axiom that states that the height of a table is equal to the thickness of its top plus the length of it(cid:21)s legs(cid:9) Given any value for two of the three attributes for a given table (cid:24)say its height and the length of its legs(cid:25)(cid:8) the ESD(cid:21)s truth maintenance system would use the axiom in the ontology to deduce the value of the third attribute (cid:24)the thickness of its top(cid:25)(cid:9) If values were given for the three attributes and the axiom was violated(cid:8) the ESD(cid:21)s truth maintenance system would detect an inconsistency and ask the user to resolve it(cid:9) B(cid:2)(cid:11) What Are The Advantages Of Using Ontologies For IDSE Technology(cid:4) Ontologies provide signi(cid:16)cant advantages in the development and use of IDSE technology(cid:9) The most prominent advantage of using ontologies is automation(cid:9) Because of their formal nature(cid:8) ontology speci(cid:16)cations are well suited to be interpreted and used directly by com(cid:3) puter programs(cid:9) This advantage was crucial in the IDSE in that it enables the automation of the tool integration process and(cid:8) hence(cid:8) makes the IDSE an expendable(cid:8) easy to up(cid:3) date environment(cid:9) Another important advantage of using ontologies is that they provide an application(cid:3)independent speci(cid:16)cation of a domain(cid:8) method(cid:8) or modeling tool(cid:9) These speci(cid:16)cations represent(cid:8) in essence(cid:8) a reusable and documented recording of an enterprise(cid:21)s corporate knowledge(cid:9) Because they are application independent(cid:8) these speci(cid:16)cations are not biased in their description of concepts in the domain they describe and the relationships between these concepts(cid:9) Thus(cid:8) they can be reused in a number of projects and situations(cid:9) Finally(cid:8) because of their formal and informal aspects(cid:8) ontologies can be used both as mech(cid:3) anisms to automate various processes (cid:24)such as tool integration(cid:8) change management(cid:8) or constraint propagation(cid:25) and as documentation support for model interpretation(cid:9) This dual use of ontologies makes a system such as the IDSE very attractive in that the logical con(cid:3) nections and dependencies between model elements are implemented as they are described in the ontology(cid:9) AIAI(cid:16)TR(cid:16)(cid:9)(cid:19)(cid:9) Ontologies Page (cid:6)(cid:11) What Are The Potential Commercial Applications Of This Technology(cid:5) The IDSE prototype has demonstrated the feasibility and the advantages of using ontology technology to enable modelintegration(cid:9) There are several importantcommercialapplications that will use this technology(cid:9) First(cid:8) KBSI is planning to release(cid:8) in (cid:4)(cid:5)(cid:5)(cid:6)(cid:8) a commercial tool that enables the capture(cid:8) browsing(cid:8) and sharing of ontologicalinformation(cid:9) This tool is based on the OCBT prototype developed during the IDSE and and will be part of an integrated modeling workbench (cid:24)also developed at KBSI(cid:25) expected to be released in (cid:4)(cid:5)(cid:5)(cid:6)(cid:9) The ontology capture tool will provide support for design rationale capture(cid:8) corporate knowledge capture(cid:8) and enterprise model integration(cid:9) Many concepts and techniques developed during the building of the ESD are being incor(cid:3) porated in the integrated modeling workbench(cid:8) in particular(cid:8) the techniques necessary to computationally maintain logical connections across models(cid:9) The modeling method ontologies developed during the IDSE have been a key in the de(cid:3) velopment of the integrated modeling workbench(cid:9) They have provided a crucial support in studying the logical connections between the semantic categories of the methods(cid:8) thus enabling the design of translation rules between the methods(cid:9) These rules are being incor(cid:3) porated in the integrated modeling workbench(cid:9) Finally(cid:8) the use of ontologies as mechanisms to enable task automation is a very promising technology(cid:9) Although KBSI has no short term plan to use this technology in commercial tools(cid:8) it has been using and plans to continue using this technology in research projects and in the development of prototypes(cid:9) c(cid:0)(cid:4)(cid:5)(cid:5)(cid:13) Knowledge Based Systems(cid:8) Inc(cid:9)