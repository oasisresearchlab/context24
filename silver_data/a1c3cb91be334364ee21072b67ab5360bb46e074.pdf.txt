195 Discovering the Sweet Spot of Human—Computer Configurations : A Case Study in Information Extraction MAXIMILIAN MACKEPRANG ∗ , Human - Centered Computing , Freie Universität Berlin CLAUDIA MÜLLER - BIRN ∗ , Human - Centered Computing , Freie Universität Berlin MAXIMILIAN STAUSS , Human - Centered Computing , Freie Universität Berlin Interactive intelligent systems , i . e . , interactive systems that employ AI technologies , are currently present in many parts of our social , public and political life . An issue reoccurring often in the development of these systems is the question regarding the level of appropriate human and computer contributions . Engineers and designers lack a way of systematically defining and delimiting possible options for designing such systems in terms of levels of automation . In this paper , we propose , apply and reflect on a method for human—computer configuration design . It supports the systematic investigation of the design space for developing an interactive intelligent system . We illustrate our method with a use case in the context of collaborative ideation . Here , we developed a tool for information extraction from idea content . A challenge was to find the right level of algorithmic support , whereby the quality of the information extraction should be as high as possible , but , at the same time , the human effort should be low . Such contradicting goals are often an issue in system development ; thus , our method proposed helped us to conceptualize and explore the design space . Based on a critical reflection on our method application , we want to offer a complementary perspective to the value - centered design of interactive intelligent systems . Our overarching goal is to contribute to the design of so - called hybrid systems where humans and computers are partners . CCS Concepts : • Human - centered computing → HCI design and evaluation methods ; Interactive systems and tools . Additional Key Words and Phrases : Human—Computer Collaboration ; Semantic Annotation ; Large Scale Ideation ACM Reference Format : Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss . 2019 . Discovering the Sweet Spot of Human—Computer Configurations : A Case Study in Information Extraction . Proc . ACM Hum . - Comput . Interact . 3 , CSCW , Article 195 ( November 2019 ) , 30 pages . https : / / doi . org / 10 . 1145 / 3359297 1 INTRODUCTION From the beginning , the fields of human—computer interaction and computer - supported coop - erative work have embraced the idea that human and machines , i . e . , a computer , can engage in a productive relationship . Licklider’s vision of a ‘man - machine symbiosis’ [ 41 ] and Engelbart’s ‘augmenting human intellect’ proposal [ 14 ] have influenced how scholars have conceptualized this partnership profoundly . These ideas have been re - evaluated more recently because of the technolog - ical advancements . Regarding the concept of ‘human - computer integration’ [ 15 ] , for example , the authors describe an interaction and integration continuum on which software can travel . Interactive ∗ Both authors contributed equally to the paper . Authors’ addresses : Maximilian Mackeprang , maximilian . mackeprang @ fu - berlin . de , Human - Centered Computing , Freie Universität Berlin , 14195 Berlin , Germany ; Claudia Müller - Birn , clmb @ inf . fu - berlin . de , Human - Centered Computing , Freie Universität Berlin ; Maximilian Stauss , max . stauss @ fu - berlin . de , Human - Centered Computing , Freie Universität Berlin . © 2019 Copyright held by the owner / author ( s ) . Publication rights licensed to ACM . This is the author’s version of the work . It is posted here for your personal use . Not for redistribution . The definitive Version of Record was published in Proceedings of the ACM on Human - Computer Interaction , https : / / doi . org / 10 . 1145 / 3359297 . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . a r X i v : 1909 . 07065v1 [ c s . H C ] 16 S e p 2019 195 : 2 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss intelligent systems are AI 1 - supported systems , with which people interact when selecting songs , reading news or searching for products . Such systems should be examined by considering both the human and the system . Jameson and Riedl call this a ‘binocular view’ of interactive intelligent systems because the system’s design includes algorithm design with interaction design , on the one hand , and a combined evaluation of a system’s performance and human behavior , on the other hand [ 33 ] . However , existing research provides little guidance on how we should design interactive intelligent systems . Should a task be carried out by a human or a computer ? What is an appropriate level of interaction vs . integration ? Is human labor more preferable than automated action ? How can we make an informed decision about allocating the task to either one or the other ? How can we evaluate our decision ? A proposal of a method for elaborating this spectrum is still missing . The authors have experienced this issue in the context of information extraction from ideas in the research area of collaborative ideation . In addition to complete manual approaches for making sense of an idea’s content [ 4 ] , algorithmic approaches were proposed which describe the content of the ideas statistically ( e . g . , [ 6 ] ) . However , both perspectives ( manual vs . automatic ) have their limitations ; thus , the question is whether a ‘sweet spot’ that emphasizes the advantages of both perspectives exists and how such a ‘sweet spot’ can be identified . A ‘sweet spot’ defines a compromise between the often contradictory evaluative criteria of an interactive vs . an intelligent system . It is a carefully balanced configuration of both parts , the intelligent and the interactive , by considering the objectives of the system’s stakeholders and the context of use . The design of an interactive intelligent system might focus only on the learning part of the system , for example in the area of reinforcement learning [ 1 ] . However , without considering the human perspective , that design might diminish the human’s trust in that system and , therefore , the applicability of the system . In the context of our use case of collaborative ideation , the ‘sweet spot’ defines the compromise between minimizing human effort in the annotation task ( human perspective ) and maximizing the necessary quality of the idea annotation ( system perspective ) . A ‘sweet spot’ represents one configuration of the interactive intelligent system , i . e . a specific task allocation between both partners . Based on research from the area of human factors , we propose a method that allows for the configuration of an interactive intelligent system by defining and evaluating different levels of automation ( LoA ) . Each configuration represents a certain LoA which involves a carefully designed technical realization ( in terms of involved computation ) and a specific amount of human involvement necessary . Our article makes the following contributions : ( 1 ) We propose a method for defining and eval - uating different configurations of an interactive intelligent system ; ( 2 ) we apply this method in the context of information extraction to the area of collaborative ideation ; ( 3 ) we evaluate differ - ent configurations of information extraction empirically ; ( 4 ) we provide a tool for information extraction that can be configured according to the specific goals of the use case ; and ( 5 ) we offer a complementary perspective to the value - centered design of interactive intelligent systems . We have organized our article into six parts . After this introduction , we introduce the related work which defines the context of our research . Building on that , we propose our model for the configuration of automation levels in interactive intelligent systems in the third part . We then introduce our use case on information extraction in the area of collaborative ideation and define suitable configurations . In the fifth part of the paper , we evaluate the different configurations empirically , examine the system and human perspective more closely , and discuss the lessons learned . In the last part of the paper , we reflect critically on our proposed method and provide some path for future research . 1 The terms AI ( artificial intelligence ) or ML ( machine learning ) are subsequently deliberately omitted in this article , since the design approach proposed is not limited to a specific group of technologies . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 3 1 Level of Automation Low The computer offers no assistance ; the human must take all decisions and actions . The computer offers a complete set of decision / action alternatives . The computer narrows the selection down to a few . The computer suggests one alternative . The computer executes that suggestion if the human approves . The computer allows the human a restricted time to veto before automatic execution . The computer executesautomatic - ally , then necessarily informs the human . The computer informs the human only if asked . The computer informs the human only if it , the computer , decides to . The computer decides everything and acts auto - nomously , ignoring the human . High 2 3 4 5 6 7 8 9 10 Fig . 1 . The ten Levels of Automation ( LoA ) showing possible interactions between human and computer organized by the amount of automation ( adapted from Parasuraman and colleagues [ 48 ] ) . 2 RELATED WORK From the beginning , the development of software has been driven by the question : ‘What can be automated ? ’ [ 2 ] . The goal was often to automate as many functions as technically possible [ 11 ] . However , instead of looking at these systems from a machine - centered perspective , we should consider a human - centered perspective that changes the underlying question from ‘What can be automated ? ’ to ‘What should be automated ? ’ [ 57 ] . We do not want to argue the ethical or philosophical part of this question , but rather ask for a methodical perspective on designing an interactive intelligent system that helps to answer this question explicitly . Even though Jameson and Riedl propose a ‘binocular view’ of interactive intelligent systems that integrates algorithm design with interaction design and evaluates the system and the human integratively [ 33 ] , existing research provides little guidance on how such design and evaluation can be carried out in this context . We found this reoccurring question of automation , i . e . , allocating tasks either to humans or to machines , in the area of robotics , ergonomics and human factors in our literature review . Following Parasuraman et al . [ 49 ] , ‘automation refers to the full or partial replacement of a function previously carried out by the human operator’ . One of the first attempts to describe task allocation originates in Fitts’s MABA - MABA ( ‘Men are better at ; Machines are better at’ ) lists [ 16 ] . With the latter , Fitt aimed to support design decisions regarding whether a system’s function should be carried out by either a machine or a human . The lists define a fixed set of skills and abilities that can be clearly attributed to either a human or a machine . However , these lists motivated one to compare human and machine capabilities instead of creating hybrid task allocations where human and machine activities intertwine ; system engineers were thinking of replacing one with the other ( mostly humans by computers ) . These led to a number of taxonomies — so - called LoA — with the first proposed by Sheridan and Verplank [ 52 ] . They differentiate ten possible LoA in human—computer decision - making processes . The lowest levels describe a human who carries out the whole process up to the point when the computer takes over for realizing the decision . On the highest level , a computer carries out the task completely autonomously . In between , they define a continuum which details the different options of possible task allocation precisely . The research community on automation has reflected on this seminal work intensively ( e . g . , [ 13 ] , [ 37 ] ) and this finally led to a taxonomy proposed by Parasuraman and colleagues [ 48 ] . This taxonomy ( cf . Figure 1 ) was accompanied by a framework for examining automation design issues for specific systems . It provides principled guidelines for automation design by defining a series of steps that are performed iteratively . The framework suggests four classes of functions : Information acquisition , information analysis , decision and action selection , and action implementation . Designers should evaluate possible LoA within each of these functional domains by studying the consequences of its associated human performance . Parasuraman and Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 4 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss colleagues suggest a non - exhaustive set of evaluative criteria , such as reliability , operating cost and safety . Based on the evaluation , a system designer can recommend an appropriate upper and lower boundary on the level of automation that defines the maximal and minimal level required . Dekker and Woods [ 11 ] , however , argue that these lists of automation levels convey the im - pression that such systems can be designed just ‘abracadabra . ’ A major issue is the underlying assumption that technology can replace humans . The goal of automation is conceptualized as a ‘substitution problem’ : A fixed workflow in which selected tasks are replaced ( by automation ) , which leads to , amongst others , less labor , fewer errors and higher accuracy . Johnson and col - leagues [ 34 ] suggest that the design of the ‘automated algorithm’ process should be different for all joint human—computer activities which are not clearly separable functions . Thus , designers should support the interdependence of joint human—computer activities . In addition to the traditional LoA approach , a number of similar approaches have been suggested to design human—machine task allocation . One alternative discussed widely is the mixed - initiative interaction approach [ 31 ] , in which a human—machine activity is a joint activity where human and machine interact and negotiate their actions . Fong proposes a similar approach [ 17 ] and defines the concept of collaborative control , describing the simultaneous involvement of human and machines in the same activity . The work on coactive design proposed by Johnson and colleagues [ 35 ] goes in a similar direction . They argue that instead of allocating functions , the focus should be on supporting interdependency . All these approaches have in common that humans and machines complement rather than replace each other [ 36 ] . Another line of research focuses on the question how human computation can be flexibly combined with algorithms to create new hybrid human—machine - based algorithms [ 12 , 38 ] . Isbell and Pierce [ 32 ] translated the LoA into the context of human—computer interaction . If the computer offers no assistance , researchers are concerned mainly with questions in the area of direct manipulation . On the other end of the spectrum , research originates that focuses on intelligent user interfaces . Both poles represent the seminal discussion between Ben Shneiderman and Patti Maes [ 53 ] , which conveyed this idea that software agents 2 should not be seen as an alternative to direct manipulation , instead , they are complementary metaphors . In all cases , a well - designed user interface is necessary for a software agent to interact with a human . This complementary perspective is reflected by the proposal of a concept by Farooq and Grudin [ 15 ] , who define their continuum from interaction to integration and call for more integrative design and evaluation approaches . Jameson and Riedl propose a ‘binocular view’ of interactive intelligent systems that integrates the algorithm design with the interaction design in terms of building and evaluating the system [ 33 ] . However , except for the framework of Parasuraman and colleagues [ 48 ] , all approaches mentioned provide no clear guidance for designing interactive intelligent systems . Thus , the LoA framework finally informed our proposal of a method for designing and evaluating the human—machine configurations which we introduce in the next section . 3 METHOD FOR HUMAN—COMPUTER CONFIGURATION DESIGN We transferred the framework proposed by Parasuraman and colleagues [ 48 ] from the design of an automated system with a fixed level of automation to the design of interactive intelligent systems with different configurations . Our perspective differs from the work discussed insofar as we want to allow for the configuration of an interactive intelligent system according to the specific requirements of an application domain and the system’s stakeholders . What do we mean by configuration ? Instead of implementing a system with a fixed set of functions , i . e . , a fixed level 2 One might think of ‘Clippy’ when reading the word ‘software agent , ’ but we relate more to adaptive functions . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 5 Identify Point of Friction Embed Point of Friction in a Task Flow Define Metrics Specify Boundary Configurations Evaluate Configurations Derive in between Configurations Select Sweet Spot Fig . 2 . Stages of the proposed method for designing configuration levels of interactive intelligent systems . The different stages are carried out iteratively . During each iteration , a new increment , i . e . , configuration , is defined , adapted or evaluated . of automation , the design and the deployment of an interactive intelligent system should follow a more flexible approach . Each application domain requires a calibration of the system , since the context and , therefore , the requirements change . Such calibration is carried out by specifying or selecting possible configurations which are derived from the LoA . All configurations represent the design space of possible task allocations in interactive intelligent systems which need to be evaluated for each context of use . We defined the proposed method in an incremental and iterative manner . We started with a draft description that followed existing work quite closely [ 48 ] . Based on our experiences during the application of the method in our use case , we refined each stage more precisely if necessary . The original model is based on the area of automation ; thus , the scope is much broader . We focus on the usage of intelligent systems , which can be defined as systems that employ AI technologies , for example , in recommender systems , expert systems , knowledge - based systems or as intelligent agents . We narrowed the focus of the proposed method , based primarily on our own experiences , down to decision - support systems . This led finally to a proposal of a configuration design method that consists of seven stages ( cf . Figure 2 ) . Even if we present these individual stages in a sequence , Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 6 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss stages 2 to 5 especially should be carried out iteratively instead . We briefly describe each stage in the next sections . We then apply the proposed method on the use case from the area of collaborative ideation . 3 . 1 Identify the Point of Friction In the first stage , we identify the part of the interactive intelligent system in which the system’s objectives collide with the human’s objectives — the point of friction , i . e . , where the specific goals of the human and the computer diverge . Parasuraman and colleagues suggested four components for separating more complex human—computer workflows into main processes : Information acquisition , information analysis , decision and action selection , and action implementation [ 48 ] . This distinction can provide an initial indication for identifying such points of friction . However , a specific concern often exists implicitly when designing an interactive intelligent system , since it might not be apparent how much and which form of automation might be required . Possible contradicting objectives can be disclosed by identifying the different objectives of the stakeholders of a system . This stage , as we discuss later in this article , makes this research particularly compatible to the value - sensitive design approach [ 18 , 19 ] , in which the stakeholder analysis and the identification of possible tensions between existing values are firmly anchored in the methodology . 3 . 2 Delimit the Point of Friction in a Task Flow In the second stage , we translate the point of friction into a model ( e . g . , task flow ) which describes the sub - tasks within the process of human—computer integration . During that stage , a neutral perspective in terms of the allocation of the sub - task to either a human or a computer is required ; therefore , we recommend defining a task flow either consistently from one perspective ( human or computer ) only or without incorporating the execution . A challenge in this task is the ‘right’ level of modeling the process . A task flow model which is too abstract might hide possible task allocations ( too simple design space ) , whereas a model which is too detailed might reveal too many possible task allocations which could lead to too many possible configurations ( too complex design space ) . Thus , modeling the task flow is closely linked to the step of deriving the in - between configurations . 3 . 3 Define Metrics for Evaluating Configurations After modeling the task flow , we need to elaborate on the point of friction between the interactive and the intelligent system . The underlying question is : How can we evaluate the effectiveness of the different configurations ? By looking at existing research , we can find a variety of measures that allow assessing the effectiveness of an interactive ( e . g . , [ 47 ] ) or intelligent system ( e . g . , [ 58 ] ) . On the one hand an interactive system is primarily evaluated with a human in mind with a focus on interaction . On the other hand , the intelligent system is , instead , evaluated with a focus on the technical realization , for example , looking at the efficiency and correctness of the algorithm implemented . Thus , we propose to define metrics that consider either only the human or the algorithmic perceptive . This understanding allows us to conceptualize the point of friction as a trade - off between the social and the technical side . However , by looking at interactive intelligent systems , we realize that such separation simplifies the whole system . One might ask whether we can capture all characteristics of a configuration by this conceptual separation . Various references in the literature suggest the opposite . Winner describes , based on diverse examples , the influence of technology on specific societal groups and highlights the political character of technical decisions [ 62 ] . By incorporating this argument , Latour argues that the delegation of tasks previously carried out by people to technologies ( or vice versa ) can lead to significant shifts in social practices and responsibilities [ 39 ] . Not only sociologists but also computer scientists advocate similar viewpoints . Dekker and Woods state that replacing or Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 7 extending a human responsibility by an algorithmic component cannot be captured by only one or the other perspective since such hybrid workflows cause a qualitative change regarding how people perceive a technical system [ 11 ] . Jameson and Riedl define this as a ‘binocular view’ of interactive intelligent systems which call for studies that investigate the performance of algorithms and human behaviors side by side [ 33 ] . Previous work seems to emphasize the need for ethnographic studies which allow capturing all the little nuances of technology usage — the qualitative shifts . However , such ethnographic research is rather appropriate in the deployment phase of a system , while we focus on the design phase . We suggest , therefore , identifying a heuristic that allows the capture of the attitude of humans toward the intelligent system . In summary , we propose metrics that will enable the evaluation of the different configurations from a human ( interactive ) and a computer ( algorithmic ) perspective but also both an integrative human—algorithm view . 3 . 4 Specify Boundary Configurations The next two stages deal with the actual implementation of the configurations . At first , we define the two ‘extreme configurations’ which are the norm in other settings ( interactive / intelligent system design ) . These so - called boundary configurations result in the outer edges of the instantiated LoA spectrum . One side describes a completely manual realization of the task flow ( all - human ) , whereas the opposite side exhibits the fully automatic configuration ( all - computer ) . We assume that a point of friction exists in our context that hinders the realization of one or the other configuration alone . Thus , we consider the ‘sweet spot’ always originates in between these two edges . However , there might be use cases in which the previous elaborations have already revealed that one or the other boundary configuration might not be desirable . In such cases , a lower or upper level of the LoA depicts the edges of the spectrum . We next explain how we identify the different configurations in this spectrum . 3 . 5 Derive In - between Configurations The edges of the spectrum defined by the LoA are the starting point for adapting the task flow in terms of different configurations . We recommend analyzing each sub - task from both a human and computer perspective . The remaining eight LoA ( cf . Figure 1 , [ 48 ] ) guide the identification of possible interactions between human and computer . The fourth level , for example , states : ’The computer suggests one alternative . ’ which can be interpreted as an explicit instruction for the technical realization of the configuration . Within a recommender system , for example , the system provides one recommendation only , which can either be accepted by a person or not . To specify a configuration , we suggest that each level is examined carefully and then this level is superimposed with the sub - task , whether a human , a computer , or both can fulfill it . For those sub - tasks where both — a human and a computer — might be involved , we suggest splitting up the task even further until a precise distinction is possible . Finally , each of the configurations defined is implemented prototypically . 3 . 6 Evaluate the Configurations Based on Metrics In the second to last stage , the various configurations are assessed based on the metrics defined . These metrics already inform the study design , since the complete range of methods is theoretically possible . In one use case , for example , a decision - support system in an employment office needs to be realized . The system’s designers have access to various stakeholders ( e . g . , employees , manager , potential applications , workers union ) ; thus , these stakeholder groups can evaluate the different configurations in close feedback circles . In other cases , online experiments in the form of crowd - sourcing studies might be more applicable . A purely technical evaluation of the interactive intelligent system is less appropriate , since it undermines the socio - technical perspective of this work . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 8 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss 3 . 7 Decide on the Sweet Spot Configuration Finally , based on the evaluation results , the actual exploration of possible ‘sweet spots’ takes place , and an informed decision is possible for choosing the most suitable configuration for the interactive intelligent system . The ‘sweet spot’ defines the configuration where the point of friction between the human and the computer is minimal . In the end , the designer and the different stakeholder groups must decide on which configuration is best - suited ; thus , this decision is highly dependent on both the context and the specified metrics . The values obtained for the metrics in each configuration provide an explicit operationalization of the trade - offs defined in the point of friction . Thus , they allow for the comparison of the benefits and drawbacks in each configuration and a subsequent informed decision on a ‘sweet spot’ configuration . In the following , we apply this method to a use case from the research area of collaborative ideation . After introducing the context of this project and our motivation for designing an interactive intelligent system , we apply each of the stages described to the project . 4 USE CASE : COLLABORATIVE IDEATION Collaborative ideation platforms , which rely on large numbers of ideators who generate many ideas in a distributed setting , have emerged as a promising solution to obtain different ideas from the crowd . However , the practice of such crowd - based ideation has revealed a significant limitation : Many ideas have a mundane , rudimentary and repetitive character [ 54 , 55 ] . Therefore , creativity - enhancing interventions were proposed as approaches to improve the quality of the ideas provided [ 6 , 24 , 54 – 56 ] . A prerequisite for providing and evaluating creativity - enhancing interventions is an understanding of the meaning of ideas created by people . However , a manual evaluation of ideas does not scale well . The assessment of 46 , 000 ideas submitted to the IBM 2006 innovation jam , for example , took reviewers six months [ 4 ] . Thus , scholars use techniques from AI to reveal the meaning of ideas automatically . Some work employs statistical models that define the similarity between words in ideas by determining the closeness of these words in a multi - dimensional space . The closer the words , the more similar they are [ 6 ] . Other work uses idea annotation as an approach to extract information about ideas . This means that idea texts are enhanced by annotations that link terms used in an idea ( a term can be a single word , e . g . , door , or a compound word , e . g . , pet food ) with concepts from an external data source . Popular approaches utilize the lexical database WordNet [ 44 ] . In the latter , lexical relationships between concepts are modelled , for instance , ‘flower’ is a ‘plant’ and a ‘plant’ is an ‘organism . ’ Other research uses knowledge graphs for enriching ideas semantically [ 23 ] . A knowledge graph organizes various topically different real - world entities , called concepts , with their relationships in a graph . It also provides a schema that aggregates these concepts into classes ( abstract concepts ) which also have relationships with each other [ 50 ] . Knowledge graphs describe the similarity between concepts by a richer set of relations ( e . g . , ‘is - a - kind - of , ’ ‘is - a - specific - example - of , ’ ‘is - a - part - of , ’ ‘is - the - opposite - of’ ) . An example for a knowledge graph is DBpedia 3 , which is built by extracting structured data from Wikipedia . The existing relationships between concepts in a knowledge graph allow us to identify similar ideas , even though they have no terms in common , by revealing a relationship on a more abstract level , for example , between abstract concepts . An idea describing modification of a door and another describing wall painting , for example , could be connected by the concept of architecture . Thus , as opposed to statistical methods that are based on explicit relationships , knowledge graphs allow for identifying implicit , more subtle relationships . 3 Further information can be obtained via https : / / wiki . dbpedia . org / . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 9 Concept Ranking Concept Search foreveryterm user - enteredidea semanticlyenriched idea search for suitable concepts tokenize idea text via NLP extractrelevantterms analyze context of term give every concept a confidence score select best matchingconcepts Term Extraction Concept Selection Fig . 3 . Task Flow Diagram of sub - tasks identified in the interactive concept validation ( ICV ) process . Enabling the annotation of concepts in idea texts would have multiple advantages . The concepts could be used , for example , as an input for a faceted search tool ( e . g . , finding all ideas that talk about kinds of plants ) , they enable aggregation and cluster visualization of the solution space [ 63 ] , and they could potentially enable effective inspiration mechanisms such as analogical transfer [ 23 ] ( via a ‘has - usage’ relationship between concepts ) . This potential of annotating ideas motivated the development of our ‘Interactive Concept Val - idation’ ( ICV ) technique , which can be integrated into traditional ideation processes [ 42 ] . After submitting an idea , a person is asked to annotate the idea manually based on concepts obtained from a knowledge graph . This tool consists of an interactive component , since we ask a person for its annotations and an intelligent component , because the provision of the annotations uses AI technologies . 4 . 1 Identify Point of Friction We identified two opposite approaches while designing the software that enriches ideas semantically . On the one hand , manual approaches build tools for domain experts who can select text manually and connect it to a knowledge graph [ 5 , 25 , 61 ] . On the other hand , automatic concept extraction and linking uses algorithmic approaches to label text automatically [ 8 ] . Manual approaches do not scale well , whereas automatic approaches have to deal with the issue of word - sense disambiguation . The latter means that the term ‘keyboard , ’ for example , could refer to a typewriter keyboard ( computer technology ) or the musical instrument . For humans , the meaning can be easily derived from the context , for algorithms , this is still challenging if not impossible . Therefore , automatic semantic enrichment of ideas should benefit greatly from human contribution . However , ideation is a task that should only be interrupted as little as possible , as we assume that distraction could impede creativity . This point of friction emerged during software development . It defines a trade - off between a human perspective that requires maximal automation of the idea annotation to distract the ideation process as little as possible , and a data perspective that requires a high quality of annotated ideas . We decided on the level of automation without reflecting on this point of friction in an initial implementation of the software . However , when discussing the results of this initial implementation , we realized the random character of our design decisions . Thus , the concept extraction from ideas is an ideal candidate for applying our method of discovering the ‘sweet spot’ between human and algorithmic contributions . Our goal is to make a more informed decision regarding the question of the automation needed and required in this context . Starting from these considerations , we enter the second stage of our method by looking more closely into the conceptual realization of this information extraction task . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 10 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss 4 . 2 Delimit the Point of Friction in a Task Flow The ICV technique consists of one primary task which represents the existing point of friction : We ask a person to disambiguate all terms in their generated ideas by providing possible meanings for each term ( if there are more than one ) . A person can select a concept that represents the meaning of the term best . We use concepts from knowledge graphs for providing the possible meaning of terms . We detail this primary task more precisely in the following . We visualized the task in a task flow diagram in Figure 3 . The ICV process starts after a person creates an idea . Each idea consists of a short text in which all terms ( words and compound words ) need to be identified . This step is called Term Extraction . In a next step , all extracted terms in an idea are searched for suitable concepts within a knowledge graph . We use the knowledge graph DBpedia . All possible concepts then have to be ordered by their suitability to describe the term under focus . This step is called Concept Ranking . These ranked concepts need to be reviewed to select the most suitable concept in the Concept Selection step . The result of the ICV is the semantically enriched idea , i . e . , the idea text with a set of annotated terms . Each annotated term links to a concept in the knowledge graph , which allows the meaning of ideas to be captured in more detail . 4 . 3 Define Metrics for Evaluating Configurations After modelling the task flow , we conceptualize the trade - off described by defining metrics that take the point of view of either the human ( by favoring an interactive software ) or the algorithm ( by focusing on automating the task as much as possible ) . The overarching goal of the ICV is to provide precisely annotated ideas that can be used to support the collaborative ideation process in later stages , for example , by providing suitable creativity - enhancing interventions . Based on the discussion in Section 3 . 3 , we discuss possible metrics from three perspectives : The human , the algorithmic and both . 4 . 3 . 1 Human Perspective . From a human perspective , our goal is to minimize the effort of the person involved . By doing so , we want to ensure that the ICV is as noninvasive as possible regarding the ideation process . We can capture the effort by collecting data on human activities or asking a person to rate their perceived effort . Regarding data collection , we can measure the interaction effort of a person by instrumenting the software with a tracking system which records the number of clicks and the time needed to perform the ICV . A widely used approach to capture mental effort is the Nasa Task Load Index ( TLX ) questionnaire [ 28 ] . We employed the ‘Raw TLX’ by asking an ideator for their perceived mental and temporal demand , combined with their self - assessment of performance , effort and frustration during the ICV task 4 . Furthermore , the influence of the ICV on the human ideation processes ( their creativity ) also needs to be captured . The operationalization of creativity in collaborative ideation is most often based on two metrics : Fluency [ 56 ] and dissimilarity of ideas [ 24 ] . Fluency describes the number of ideas produced by a participant . The dissimilarity of ideas can be computationally evaluated by the deployment of a text - similarity algorithm ( e . g . , Latent Semantic Analysis ) and subsequent determination of the two most distant ideas for a specific user . 4 . 3 . 2 Algorithmic Perspective . From an algorithmic perspective , we need to measure the quality of the information extraction task , i . e . , the suitability of the concepts annotated in describing the terms . An established way of measuring the quality in the area of information extraction is to measure precision , recall and the F - measure . Whereas precision defines the number of concepts annotated correctly , recall defines the number of concepts correctly disambiguated relative to the number of all concepts found . The F - measure is the harmonic mean of precision and recall . A prerequisite 4 As the TLX physical demand scale refers to physical activities ( e . g . , pushing , pulling ) , we excluded it from our evaluation . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 11 for using these measures is a so - called gold standard ; in our context , it means that we need to create a manually annotated idea corpus . We explain the creation of such corpus in more detail in Section 4 . 4 and its usage in Section 5 . 1 . 4 . 3 . 3 Human—Algorithmic Perspective . As stated in Section 3 . 3 , we assume that an interactive intelligent system , such as our ICV software , might influence how people experience the ideation process itself . Thus , we need an approach that helps us to understand how humans experience the software . Such a gain in understanding can be reached by asking people how they perceive the different configurations from various angles . We decided to use the recommender systems’ quality of user experience ( ResQue ) questionnaire , which captures acceptance , usability and satisfaction based on the user’s perception and not the quality of the algorithm [ 51 ] . We found this questionnaire especially suitable for three reasons . Firstly , the ICV can be defined as a typical recommendation process . A person gets recommenda - tions , i . e . , concepts , and selects the best fitting concept from the list of recommendations . Secondly , in contrast to questionnaires such as TAM 5 , the ResQue questionnaire offers validated questions for our context of use — recommender systems . Finally , as opposed to SUMI 6 , the ResQue questions are designed to be adapted for the purpose at hand and offer insights with fewer items ( 11 vs . 50 ) . The ResQue questionnaire is based on four dimensions : Perceived system qualities , user beliefs , user attitudes and behavioral intentions . As behavioral intention captures attributes of recommender systems geared towards product recommendations , we excluded this dimension from our metric set . This left us with the 11 questions used in the study ( cf . Appendix A . 2 for the dimensions and questions ) . 4 . 4 Specify Boundary Configurations In this stage , we define the boundary configurations that depict the human vs . algorithmic realization of the annotation task . On an abstract level , the boundary configurations of our use case represent the ‘extreme configurations’ for an information extraction task as described in Section 4 . 1 . The manual configuration represents the complete manual annotation of ideas based on human labor . We have already argued that such an approach is not scalable ; however , we assume that manual annotation leads to the highest data quality because of the challenge of word - sense disambiguation . We use the results of the completely manual annotation of the ideas as a gold standard for evaluating the quality of the annotation in the other configurations . Algorithmic approaches of text enrichment are situated at the other end of the spectrum that allow one to carry out all the sub - tasks defined ( cf . Figure 3 ) automatically . As automatic concept extraction and linking is a flourishing field of research , several systems are suitable for such automation . The defined boundary configuration serves as the outer limit of our design space . 4 . 5 Derive In - Between Configurations In the next step , we used the definitions of the remaining LoA to specify possible system configura - tions for our task flow . As the ICV process starts after a person has created an idea , we employed the ‘human enters idea’ sub - task as the starting point for all task configurations . Based on the detailed description of the LoA proposed by Sheridan and Verplank [ 52 ] and the taxonomy proposed by Parasuraman and colleagues [ 48 ] , we detailed each of the configurations by allocating the task to one or the other partner . 5 TAM stands for Technology Acceptance Model . For further information we refer to Venkatesh & Bala [ 59 ] . 6 SUMI stands for Software Usability Measurement Inventory . Further information is available at http : / / sumi . uxp . ie . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 12 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss Fig . 4 . Different Levels of Automation in the ICV Process . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 13 Configuration LoA Term Extraction ConceptSearch ConceptRanking ConceptSelection All - Human 1 Baseline 2 Ranking 3 Validated Threshold 4 Automated Threshold 5 Ranking / A . Threshold 5 All - Computer 10 Table 1 . Task allocation table for different LoA : Each sub - task for each configuration is allocated to either the human ( ) , the computer ( ) or both ( ) . The boundary configurations ( as shown in Figure 4a and 4f ) define the ends of the spectrum by an allocation of all sub - tasks to either a human or a computer . Based on that , we systematically went through the range from the lowest non - boundary level ( LoA 2 ) to the highest ( LoA 9 ) . We allocated the sub - tasks ‘extract terms’ and ‘search for concepts’ to the computer for LoA 2 ( cf . Figure 4b ) . These sub - tasks are linked : We need to ‘extract the terms’ from the ideas to ‘search for concepts’ in the knowledge base . For LoA 3 , we interpreted the narrowing down of the selection as an automatic ranking of concepts done by the computer . When moving towards further automation , we defined a task allocation that enables the computer to either preselect concepts ( LoA 4 , cf . Figure 4d ) or select them automatically ( LoA 5 , cf . Figure 4e ) . When discussing the levels 6 to 9 of the model defined by Parasuraman , we detected a point of uncertainty for our use case . While the levels define the interaction between human and computer in terms of decision - making , there is no definition given about the possibility of changing the results afterward . After discussing possible configurations , we decided to exclude the levels 6 to 9 from further evaluation , as changing the results of the concepts provided did not seem suitable for our use case . In summary , Table 1 describes the task allocation for human , computer or both for each con - figuration . We used each configuration to develop a software prototype ( see Section 5 . 2 ) which encodes the configuration , and we evaluated that subsequently . 5 EVALUATE CONFIGURATIONS BASED ON METRICS After modeling the task flow , specifying metrics and applying automation levels , the next step was to evaluate the different automation configurations in experimental settings . In the following , we describe how we evaluated boundary configurations of our human—computer spectrum and then the configurations in between . 5 . 1 Evaluating Boundary Configurations After the specification of boundary configurations in Section 4 . 4 , we implemented both : We defined an annotation scheme to create a gold standard of annotations for the manual side ; we employed a software for concept extraction and linking for the fully automated configuration . 5 . 1 . 1 Realization of the Manual Boundary Configuration . In our context , we defined the manually annotated gold standard by sampling 60 idea texts obtained in previous studies 7 , and then annotated them using the method described subsequently . We ( two of the authors ) annotated all ideas based 7 For the published idea data sets , see https : / / osf . io / k2ey7 / . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 14 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss Confidence PrecisionRecallf1 Measure ( a ) Results for precision , recall and F - measure for dif - ferent spotlight threshold parameters based on the sample idea data set . Confidence Precision Recall F - Measure γ = 0 . 1 0 . 41 0 . 46 0 . 42 γ = 0 . 3 0 . 41 0 . 46 0 . 42 γ = 0 . 4 0 . 62 0 . 22 0 . 31 ( b ) Results showing the precision , recall and F - measure of the automatic concept extraction system for the data set with different confidence thresholds . Fig . 5 . Data quality results for fully automatic information extraction by using DBpedia Spotlight on the 20 ideas . on a three - round process , whereby we carried out each step in the task flow described in Figure 3 manually . In the first round , we selected five ideas randomly and annotated them ( from the task term extraction to concept selection ) collaboratively . At first , we read each idea and chose appropriate terms as concept candidates . We then searched for potentially fitting concepts on the knowledge graph DBpedia by using its web user interface 8 . We finally selected the most appropriate concepts by discussing all the concepts obtained . We proceeded with this process until we had annotated all possible terms in all five ideas . The first round in the manual process allowed us to develop a shared understanding of the information extraction process . We , therefore , carried out the second round ( the remaining 55 ideas ) independently and compared our results ( Cohen’s kappa 0 . 68 % [ 7 ] ) . In the third round , we checked all concepts identified per idea and discussed all ambiguous cases . If necessary , we adapted the concepts and cross - validated all concepts over the entire idea set . The resulting data set contained 281 concepts for all 60 ideas . We needed an average of about 20 minutes to annotate and discuss each idea , which resulted in about 20 hours of human labor for the task . 5 . 1 . 2 Realization of the Automatic Boundary Configuration . We carried out a literature study and carefully read existing software comparisons in the field of algorithmic information extraction [ 44 ] . We decided to use the software DBpedia Spotlight as the fully automatic annotation system [ 45 ] . This software allows for automating the whole process of annotation , as shown in Figure 3 . Spotlight uses a three - step process of spotting , candidate selection and disambiguation . At first , Spotlight identifies all terms in an idea that possibly relate to existing concepts in the knowledge graph DBpedia . It then selects concept candidates that could describe that term by using the DBpedia Lexicalization dataset 9 . Spotlight then analyzes the context of the current term and selects ( or disambiguates ) the best fitting concept . A core component of the Spotlight software is the possibility of tuning the disambiguation step to improve the results for a specific use case . The most promising tuning option for us was the disambiguation confidence , for which a sample of 100 , 000 Wikipedia articles was used to determine it [ 45 ] . The threshold ranges from 0 to 1 and offers a percentage of certainty the spotlight algorithm has in disambiguating every given term . This 8 The interface is available at http : / / dbpedia . org / fct / . 9 The DBpedia Lexicalizations Dataset stores the relationships between DBpedia resources and a set of terms that are potentially linked to those resources . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 15 uncertainty is defined as follows : “a confidence [ threshold ] of 0 . 7 will eliminate 70 % of incorrectly disambiguated test cases . ” We aimed at evaluating the result of the fully automatic information extraction task by the resulting quality of the annotations ( cf . discussion in Section 4 . 3 . 2 ) . We computed the precision , the recall and the F - measure against the manually annotated idea set by using different confidence thresholds 10 . For this , we used the manually annotated idea corpus ( cf . Section 5 . 1 . 1 ) as a gold standard . The results are visualized in Figure 5a . The values for all three metrics for our data set remained relatively stable for confidence thresholds under 0 . 3 . When the confidence threshold was higher than 0 . 3 , we observed a decline of recall and F - measure . We decided to use three confidence thresholds , namely , γ = 0 . 1 , 0 . 3 and 0 . 4 , for the fully automatic information extraction task to capture the different quality levels with the automated task realization . A request to the Spotlight API took us about one second , which resulted in a time effort of 60 seconds per confidence threshold . 5 . 2 Evaluating in between Configurations The definition and implementation of boundary configurations set our frame of reference in terms of effort and especially data quality . During the evaluation phase , we developed an idea annotation tool which is open source and published at https : / / github . com / FUB - HCC / Innovonto - ICV . Moreover , all data from the studies are also openly available at https : / / osf . io / k2ey7 / . We next continue with describing the development of the in between configurations in more detail . 5 . 2 . 1 User Interface . We built software to annotate concepts via a web interface as a baseline employed for all configurations . Furthermore , the software enables the use of the configurations previously defined for the tasks Concept Ranking and Concept Selection , due to the potential benefits of human judgement in word - sense disambiguation . Subsequently , we describe both the prototype and algorithmic realization of the first two steps in the task flow . 5 . 2 . 2 Realization of the Term Extraction and Concept Search Tasks . Figure 6 shows the prototype during an active concept annotation task . The interface consists of four panels ( each denoted by a capital letter ) : Panel A shows the task description and background information about the ideas . Panel B shows the user’s process within the overall task . Panel C shows highlighted terms in the source text . Terms in the input text are highlighted depending on their current state : Terms linked to a concept are shown with a green background , terms that are rejected ( the user could not find a fitting concept ) are shown with an orange background and the currently active term is shown by a yellow background . Panel D shows the list of possible concepts for the current term . We employ an automatic search approach in the DBpedia knowledge graph to realize automatic term extraction and concept search 11 . In the case of overlapping concept term combinations 12 , we employ a greedy algorithm to expand the term in the idea to the longest continuous text . This enables multiple annotations of a single term . The search for concepts results in a link between a term ( or set of terms for overlapping results ) that is potentially linked to a list of concepts ( this is called an annotation candidate ) . If the search for a term does not result in any concepts , the annotation candidate is discarded . 10 We used the Spotlight Web API available under http : / / api . dbpedia - spotlight . org / en / annotate and confidence threshold steps of 0 . 01 . 11 We used the candidate search API of DBPedia Spotlight ( http : / / api . dbpedia - spotlight . org / en / candidates ) with a confidence threshold of 0 . 01 to obtain a ranked list of terms and concepts . 12 Exemplarily , the term ‘pet food distribution center’ could be described by the concepts ‘pet food , ’ ‘food distribution’ or ‘distribution center’ ( among others ) . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 16 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss Fig . 6 . Example Interface for the ICV prototype : Consisting of a task description ( Panel A ) , progress indicator ( Panel B ) and concept validation interface . This example shows an idea text having three possible annotations ( ‘gym , ’ ‘change’ and ‘weight’ ) . The user has already selected a concept for ‘gym’ ( as shown by the green background in Panel C ) and rejected all concepts for the term ‘change’ ( as shown by the orange background . Currently , the user has to annotate the term ‘weight’ and , therefore , is shown a list of possible concepts for this term in Panel D . 5 . 2 . 3 Realization of the Concept Selection Task . We highlight each annotation candidate in the idea text ( cf . colored boxes in Panel C ) and then ask the user to validate them one by one . We show the list of concepts found for the currently focused term in Panel D . For each term , the person has to go through the list of concepts and select the best fitting concepts by clicking on them . After this step , the person has to submit the concepts selected by clicking [ Accept / Continue ] or , if there is no concept that fits , reject all concepts for the term by clicking [ Nothing _ Fits ] . After a term is handled , the system automatically selects the next unhandled term . Once the person has validated all terms , they use the [ Accept / Continue ] button again to save the annotation results . After evaluating different ways to display concepts to the user 13 , we chose to represent each concept by its image ( if present ) and description , obtained from the knowledge graph . For the 13 When comparing three different concept representations , we found that image and description led to the best data quality results ; for more information , see the technical report at https : / / refubium . fu - berlin . de / handle / fub188 / 25266 . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 17 concept ‘Computer Keyboard’ , for example , we can obtain the following description from DBpedia 14 : ‘In computing , a computer keyboard is a typewriter - style device which uses an arrangement of buttons or keys to act as a mechanical lever or electronic switch . [ . . . ] . ’ Based on the in between configurations defined in Section 4 . 5 , we defined five study conditions that correspond to the different LoA defined : ( 1 ) A baseline condition that corresponds to the LoA 2 state ; ( 2 ) a ranked by confidence condition ; ( 3 ) a threshold preselection condition integrating the user ; ( 4 ) a fully automatic threshold selection condition ; and ( 5 ) a combined condition that integrates the ranking and automatic threshold conditions ( cf . Table 1 ) . All conditions are explained in detail next . LoA 2 – Baseline Condition . The first configuration was used as a baseline condition and a representative of LoA 2 : ‘The computer offers a complete set of decision / action alternatives’ ( cf . Figure 1 ) . Only the tasks Term Extraction and Concept Search are automated in the baseline system . The concept candidates obtained from the knowledge graph are shown in alphabetical order ( by concept label ) . LoA 3 – Ranking Condition . We extended the annotation system from the previous condition by ranking the concept candidates by confidence , i . e . , we show concept candidates with a higher confidence score higher up in the list . We interpreted this ranking as a narrowing of the selection ( as described in LoA 3 ) , as lower confidence results can only be detected by scrolling down the list . LoA 4 – Validated Threshold Annotation . We further increased the level of automation by reducing the manual effort in the Concept Selection sub - task . This condition corresponds to the configuration shown in Figure 4d : The tasks Concept Search and Concept Ranking are allocated to the computer , and furthermore , the computer preselects a concept for the user . The computer preselected concepts in the implementation with a confidence score higher than a 0 . 95 threshold . The user was shown the concepts selected by the computer ( indicated by a light green background ) and asked to verify them manually , i . e . , approve or reject the automated recommendations . In this condition , we presented the list of concept candidates in alphabetical order as in the Baseline condition . LoA 5 – Automatic Threshold - based Annotation . The next automation step was to further automate the threshold - based selection of concepts . In this condition , the computer automatically selected concepts with a confidence value higher than 0 . 95 . Furthermore , the automatically annotated term / concept combinations were not shown to the user . Instead , the software skipped over the term and went on to the next unhandled one . This meant that users had to select concept candidates only for terms , when the system had not already selected a concept . Users still had the possibility of changing term / concept combinations already annotated by clicking on the term skipped . The concept candidates for the terms not automatically annotated were ordered alphabetically . LoA 5 – Ranking and Automatic Threshold Combined . The last condition combines the automation features described in the previous two paragraphs to increase the computer contribution further . In this combined condition , we automatically select concept candidates with a confidence threshold higher than 0 . 95 and ordered all concept candidates by their confidence scores , respectively . While this combination of automation features represented a new condition in the systematic evaluation , in terms of abstract LoA , this configuration still corresponds to a LoA of 5 . 5 . 2 . 4 Study Setup . We conducted a preliminary study where participants received a random selection of 20 ideas from our gold standard corpus containing 60 ideas . As each participant received different ideas , results for the different conditions showed a very high variance across 14 Please check out the concept URL for further information http : / / dbpedia . org / page / Computer _ keyboard . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 18 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss all metrics . We assume that the results of the data annotation task were highly dependent on the randomly chosen idea ( e . g . , some ideas are concise and , therefore , harder to understand ) . We , therefore , provided all participants with the same 20 ideas in the same order across all conditions 15 . This decision of focusing on the annotation task prevented us from obtaining ideation metrics as described in Section 4 . 3 . 1 . While these metrics are important in the domain context of collaborative ideation , we chose the new task design to ensure comparability between conditions for the study discussed subsequently . We used Amazon Mechanical Turk ( MTurk ) to recruit participants . One of the goals of the system tested was the usage in an microtask / crowdworker environment , so it had to be usable without extensive training . We chose to employ a between - group experimental design to prevent learning effects . This study design , furthermore enabled us to create HITs 16 comparable to other annotation tasks on MTurk in complexity and time , limiting worker frustration . We recruited 40 participants for each condition via MTurk ( 200 persons in total ) . We limited participants to US residents who had completed at least 1 , 000 HITs with a greater than 95 % approval rate to ensure high task quality . Participants were paid $ 4 . 5 ( ~ $ 12 / h ) for a session in one condition . The task consisted of a short tutorial on concept validation followed by the annotation of 20 ideas . We employed the interface shown in Figure 6 for all conditions . After submitting the annotations of an idea , the system moved to the next idea text automatically . After the annotation of the last idea , the system displayed the survey page . In the survey , the participants were asked to provide selected demographic data ( e . g . , age group , gender ) , fill out the questionnaire about their experience and , optionally , provide qualitative feedback . We used the metrics and questionnaires described in Section 4 . 3 for all conditions . Hypotheses . The hypotheses for this study trace back to our original model of a point of friction between data quality and human effort . We generally expected this point of friction to show up in metrics as well . Regarding click effort , we expected the conditions featuring a threshold mechanism to have a lower rate of recorded clicks when compared to the Baseline condition ( H 1 ) . Regarding the Ranking condition , we expected a similar outcome to the Baseline condition in terms of click effort , as no concepts are automatically annotated by the system . Regarding time effort we expected a lower time when comparing the Baseline and Ranking condition , as participants find the most fitting concepts at the top of the list ( H 2 ) . Furthermore , we expected a reduced time for the conditions featuring a threshold mechanism as well ( H 3 ) . The lowered effort in time and clicks should reflect on the perceived effort as well , so we expected a lower effort in the Ranking , Validated Threshold , Automatic Threshold and Ranking / Threshold conditions when compared to the Baseline ( H 4 ) . Regarding data quality , we expected a lower F - measure for the conditions featuring an automatic threshold mechanism when compared to the Baseline and Ranking conditions ( H 5 ) , as the system could have selected concepts incorrectly . An interesting case is provided by the Validated Threshold condition , as participants are able to correct concepts incorrectly selected by the system . We , therefore , expected the Validated Threshold condition to show lower human effort metrics than the Baseline and Ranking condition , while simultaneously producing higher data quality than the Automatic Threshold and Ranking / Threshold conditions ( H 6 ) . 5 . 2 . 5 Results . The input data set consists of 20 ideas and 152 terms with possible concept annota - tions . As we used a between - group study design , these annotations were produced redundantly by 40 participants per condition . We excluded the following participants from the analysis to ensure the quality of the results and filter our results that are most likely spam : Participants who 15 See Appendix A . 1 for the idea texts . 16 HIT : Human Intelligence Task - One MTurk task . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 19 Configs . Baseline Ranking ValidatedThreshold AutomaticThreshold Ranking / A . Threshold LoA 2 3 4 5 5 Participants 40 40 36 39 39 Human Perspective ( Effort ) Clicks 314 . 25 ( 67 . 21 ) 304 . 68 ( 51 . 51 ) 284 . 61 ( 53 . 33 ) 230 . 38 ( 45 . 92 ) 229 . 05 ( 77 . 29 ) Time ( s ) 1 , 528 . 42 ( 528 . 51 ) 1 , 449 . 78 ( 577 . 02 ) 1 , 379 . 78 ( 600 . 28 ) 1 , 139 . 87 ( 560 . 70 ) 1 , 271 . 08 ( 620 . 44 ) TLX 20 . 88 ( 5 . 64 ) 20 . 32 ( 4 . 17 ) 20 . 44 ( 3 . 83 ) 20 . 26 ( 4 . 44 ) 20 . 82 ( 4 . 57 ) Algorithmic Perspective ( Data Quality ) Precision 0 . 51 ( 0 . 29 ) 0 . 51 ( 0 . 29 ) 0 . 50 ( 0 . 28 ) 0 . 46 ( 0 . 27 ) 0 . 45 ( 0 . 27 ) Recall 0 . 52 ( 0 . 26 ) 0 . 52 ( 0 . 26 ) 0 . 53 ( 0 . 26 ) 0 . 51 ( 0 . 27 ) 0 . 54 ( 0 . 26 ) F - measure 0 . 48 ( 0 . 25 ) 0 . 49 ( 0 . 26 ) 0 . 50 ( 0 . 26 ) 0 . 46 ( 0 . 25 ) 0 . 47 ( 0 . 25 ) Table 2 . Evaluation results for Effort and Data Quality metrics for different automation configurations . While Effort metrics are lower for higher LoA , mean data quality ( F - measure ) is highest for the Validated Threshold configuration . All results are reported in mean ( ± standard deviation ) . rejected all annotations ( total of 4 ) , and those who did not reject a single annotation ( total of 2 ) were excluded . The second filter was possible because the gold standard contained at least one concept that was not in the list of candidates during the deployment of the system . Table 2 shows the number of participants included per configuration . Table 2 also shows the metrics obtained for all conditions described previously in terms of the number of clicks , time needed , TLX score , precision , recall and F - measure . We report clicks , time and TLX score as absolute values as we predefined the number of annotations . Regarding effort metrics , we see that mean click effort is lower for the higher automation conditions Validated Threshold , Automatic Threshold and Ranking / Threshold . The lowest mean number of clicks is reported for the Automatic Threshold condition . The lowest average time spend in concept validation is measured in the Automatic Threshold condition . We conducted an analysis of variance ( ANOVA ) for click effort between all conditions ( F = 16 . 98 , p < 0 . 001 ) and then conducted a Tukey HSD to validate H 1 . The results of the Tukey HSD show a significant difference in the click effort between the Baseline and Automatic Threshold , Validated Threshold ( p < 0 . 001 ) and the Ranking / Threshold ( p < 0 . 001 ) conditions . We conducted an ANOVA for time effort between all conditions ( F = 2 . 36 , p = 0 . 05 ) to validate H 2 and H 3 . We then conducted a Tukey HSD on the results . When comparing the Baseline condition and Ranking condition , we found no significant difference in time effort ( p = 0 . 99 ) . When comparing the Baseline condition to the automatic threshold conditions regarding time effort , we found significant differences to the Validated Threshold condition , the Automatic Threshold condition ( p < 0 . 01 ) and the Ranking / Threshold ( p < 0 . 01 ) condition . We conducted an ANOVA for TLX scores between all conditions . Results show no significant differences between conditions ( F = 0 . 384 , p = 0 . 82 ) to validate H 4 . We conducted an ANOVA for the F - measure between all conditions to evaluate the impact of the automation features on data quality ( H 5 ) . The results show no significant differences between the conditions ( F = 1 . 054 , p = 0 . 38 ) . In addition to the analysis of human effort and data quality , we wanted to get a better understand - ing of the attitudes the users have towards the system . Table 3 shows the results for the ratings received for the questionnaire employed . All questions use a 5 - point Likert scale ranging from - 2 ( Strongly Disagree ) to 2 ( Strongly Agree ) . The Ranking / Threshold condition was rated higher on Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 20 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss Condition Baseline Ranking ValidatedThreshold AutomaticThreshold Ranking / A . Threshold LoA 2 3 4 5 5 Q 01 ( Expectations ) 0 . 88 ( 0 . 82 ) 0 . 41 ( 1 . 02 ) 0 . 33 ( 1 . 01 ) 0 . 49 ( 1 . 10 ) 0 . 64 ( 1 . 04 ) Q 02 ( Diversity ) - 0 . 75 ( 1 . 10 ) - 0 . 90 ( 1 . 02 ) - 0 . 50 ( 1 . 13 ) - 0 . 67 ( 1 . 15 ) - 0 . 97 ( 0 . 99 ) Q 03 ( Layout ) 0 . 92 ( 1 . 07 ) 0 . 85 ( 1 . 22 ) 0 . 44 ( 1 . 30 ) 0 . 69 ( 1 . 32 ) 0 . 74 ( 1 . 14 ) Q 04 ( Explanation ) 0 . 47 ( 1 . 26 ) 0 . 12 ( 1 . 12 ) 0 . 00 ( 1 . 31 ) 0 . 07 ( 1 . 29 ) 0 . 66 ( 1 . 26 ) Q 05 ( Information ) 0 . 73 ( 1 . 15 ) 0 . 95 ( 1 . 18 ) 0 . 61 ( 1 . 20 ) 0 . 74 ( 1 . 14 ) 0 . 79 ( 1 . 22 ) Q 06 ( Interaction ) 1 . 05 ( 0 . 88 ) 1 . 02 ( 1 . 21 ) 0 . 67 ( 1 . 20 ) 0 . 74 ( 1 . 14 ) 1 . 10 ( 0 . 97 ) Q 07 ( Familiarization ) 1 . 28 ( 0 . 96 ) 1 . 05 ( 1 . 34 ) 0 . 89 ( 1 . 37 ) 0 . 95 ( 1 . 45 ) 1 . 36 ( 0 . 90 ) Q 08 ( Understanding ) 0 . 85 ( 1 . 14 ) 0 . 90 ( 1 . 18 ) 0 . 75 ( 1 . 16 ) 0 . 54 ( 1 . 29 ) 1 . 05 ( 1 . 02 ) Q 09 ( Ideal Item ) 0 . 65 ( 0 . 98 ) 0 . 61 ( 1 . 24 ) 0 . 36 ( 1 . 13 ) 0 . 44 ( 1 . 21 ) 0 . 72 ( 1 . 12 ) Q 10 ( Satisfaction ) 0 . 85 ( 1 . 00 ) 0 . 83 ( 1 . 12 ) 0 . 69 ( 1 . 21 ) 0 . 72 ( 1 . 23 ) 0 . 92 ( 0 . 98 ) Q 11 ( Trust ) 0 . 97 ( 0 . 86 ) 0 . 85 ( 1 . 06 ) - 0 . 05 ( 1 . 19 ) 0 . 43 ( 1 . 19 ) 0 . 84 ( 1 . 09 ) Overall Rating 0 . 70 ( 0 . 63 ) 0 . 61 ( 0 . 85 ) 0 . 38 ( 0 . 68 ) 0 . 47 ( 0 . 84 ) 0 . 75 ( 0 . 73 ) Table 3 . Evaluation results for the ResQue questions . All results are reported in mean ( ± standard deviation ) . All scales had a range from - 2 ( Strongly Disagree ) to 2 ( Strongly Agree ) . average than the other conditions for 6 out of the 11 questions . In terms of adequacy of interface layout and expectations , the Baseline condition was rated highest on average . Regarding information sufficiency , the Ranking condition was rated highest . Regarding the diversity of displayed items , the Validated Threshold condition was rated highest . While the Baseline condition was rated highest in trust , the Validated Threshold condition received the lowest score . 5 . 2 . 6 Discussion . While the results show that increased automation impacts the interaction effort , the results for perceived effort and data quality were inconclusive . Subsequently , we discuss our main findings from this study . The Impact of Threshold - Based Annotation on Human Effort . The reduction in the number of clicks and time spent on the conditions containing the confidence threshold mechanism implicate an added value of the increased automation in concept annotation . Participants in the Automatic Threshold condition took an average of 622 seconds fewer to validate the concepts when compared to the Baseline condition . Participants in the Automatic Threshold condition had an average annotation time of 47 seconds per idea . Surprisingly , the perceived task load results do not differ across the conditions . There are two possible explanations for this effect . Firstly , the individual variance in the reported score was high : Individual differences in perceived task load per study participant could outweigh the impact of the different conditions . This could be reinforced by the fact that participants had no frame of reference for their subjective task load due to the between - group design . Finally , inconclusive results could be due to the sample size . Understanding Data Quality Variations . When comparing the data quality results obtained via fully automatic extraction ( cf . Section 5 . 1 . 2 ) to the data quality of annotations made by study participants , the average F - measure is higher for all semiautomatic approaches . This shows that the initial motivation for the interactive concept validation approach ( algorithmic systems struggle with word - sense disambiguation ) still holds . However , when analyzing individual data quality results , we found that while average data quality was higher , some participant results were considerably worse than automatic annotation quality . There are two possible explanations for this high variance : Some of the participants might not have understood the task and goal of the concept validation . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 21 Furthermore , participants might not have understood the idea texts and , therefore , could have had trouble to find the correct meaning of terms in the ideas . The Relationship Between Task Understanding and Data Quality . We linked the average F - measures to answers given in the ResQue questionnaire to further discuss data quality results . An interesting finding for our research was that while participants in the Ranking / Threshold condition rated the explanation and trust in the system higher than participants in the Validated Threshold condition , the average F - measure in the Ranking / Threshold condition was lower . This could hint at a side effect introduced by higher LoA : As the computer takes over without an explanation of the effect , the participant accepts the choices made by the system without challenging it . Users Attitudes towards the System . The ResQue results point to a different trend overall than the effort / data quality metrics . While both the Baseline and the Ranking / Threshold conditions generally received good ratings , the Validated Threshold condition performed worse . This could be because in this condition , users were directly exposed to errors of the algorithm by means of incorrectly pre - annotated concepts they had to fix . At the same time , in the Automatic Threshold configurations , the users were not exposed to mistakes in ranking and , therefore , had more trust in the system . 5 . 2 . 7 Limitations . While the study revealed insights into the impact of different automation configurations on human effort and data quality , it was subject to some limitations . We set the evaluation task to a fixed set of 20 idea texts , always shown in the same order . While this study setup was necessary to enable comparative results and make an informed decision about the ‘sweet spot , ’ this fixed data set could introduce biases that limit the generalizability to other data sets . Another possible limitation regarding data quality results could be the understanding of idea texts by the study participants : Siangliulue et al . [ 55 ] remark that workers had trouble classifying the relatedness of ideas generated by others . Future work could tackle both limitations by integrating the concept annotation in a brain - storming session so that participants validate concepts in the ideas they provided themselves . However , metrics have to be adjusted to account for the different idea length and number of concepts annotated by each user to make results of different configurations comparable . Although we included an animated example showing the annotation of one idea in the task tutorial , for all conditions , the task and its goals were not explained in detail . One key improvement in this regard could be an interactive tutorial , that ensures participants understand the goals and features of the system before letting them continue to the next step . Another way to ensure task understanding would be the inclusion of quality checks : Automatic comparisons between the gold standard and annotated ideas , inserted at specific intervals in the task , that report the data quality result back to the user immediately . Furthermore , participants could be influenced by a number of factors that affect their concept selection . We , thus , need an explicit step to define the dependencies in the relationship of the human—computer system . We discuss this finding further in Section 6 . One limitation in our use case was the need for a gold standard in order to provide data quality measurements . This need for a gold standard proved to be a major drawback in the overall method application : In addition to being effort intensive , the correctness of the gold standard lies in the hands of the creators and , as experienced in the use case , is often subject to many discussions . Furthermore , we experienced the limitation of a ‘Boolean’ approach to concept extraction during our creation of the gold standard : We decided to allow multiple correct concepts for one term , as multiple definitions were appropriate ( especially for colloquial technical terms , such as ‘screen’ ) . Having a distance - based quality metric ( how far is the ‘correct’ concept away from the annotated one ) could be helpful in such instances . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 22 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss 5 . 3 Decide on the Sweet Spot - Configuration In the context of collaborative ideation , we introduced the interactive concept validation with two goals : While improving the annotation quality when compared to fully automatic approaches , we did not want to burden the users with too many tasks , because concept validation should not distract from the main task of ideation . While the results of the data quality suggest that the average data quality was slightly higher in the " Validated Threshold " configuration than in the other configurations , the ResQue results show that people were more confused and rated the system lower than in the more automated configurations ( LoA 5 ) . We assume this confusion impacts the overall ideation process and could result in lowering the ideation metrics . Thus , after careful consideration of the application context of collaborative ideation we chose the ‘Ranking / Threshold’ configuration as the most suitable . 6 DISCUSSION OF THE METHOD FOR HUMAN—COMPUTER CONFIGURATION DESIGN In the following , we want to reflect critically on the application of the method proposed . We report our overall experiences and discuss potential areas of improvement for future applications of the method . Iterative and Incremental Application . We modeled the task flow incrementally during the iterative applications of the method . The model acted as a boundary object for the authors to structure the discussions of the various configurations of applying the LoA . The model allowed us to look at the automation issue from different perspectives ( human and computer ) , which helped us narrow down existing design choices . Even though all authors are familiar with the task of modeling in the context of software development , the task flow in combination with the LoA improved our understanding of the potential application areas for automation . In our previous work , we somewhat randomly followed one automation approach in a specific application context . The method proposed allowed us to decide about each configuration systematically . In summary , applying our proposed method case turned out to be a valuable approach from both a system designer and developer’s perspective . Documenting Practice . We defined a specific set of metrics in our use case . This choice was inherently important for the evaluation process since we decided which characteristics of the human—computer configuration we should capture . The careful specification of the metrics is , thus , a critical step in the method application . More guidance is probably needed here , especially in cases , where system designers are less familiar with the application domain . We can imagine a metrics catalogue which contains known metrics from previous research , their perspective ( human or computer ) and an example of the area of application . Such a catalogue could extend existing documentation approaches for data [ 3 , 20 , 29 ] or learning models [ 46 ] . Bender and Friedman , for example , propose the concept of data statements , which describes a natural language based documentation practice that represents a data set by considering , among others , the origin of the data set , experimental results , and possible bias [ 3 ] . Our configuration catalogue could extend such a data statement by the properties of the specific application context . Furthermore , while using the metrics , we found it challenging to argue about possible influences on the configurations . In the case of data quality , the results were quite similar . It was ambiguous , for example , to factor in the task understanding , task motivation and personal differences in performance on the human side , and the quality of the source data , algorithmic performance in concept search and algorithm parameters on the computer side . We suggest extending the method by a dependency graph for metric definition to make these dependencies more explicit . This extension could help the team to build a shared understanding of dependencies , and their influences on the metrics . Such a dependency graph could Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 23 even be included in the configuration catalogue . While selecting one metric , possible dependencies could be shown to the system designer . Determining the Sweet Spot . All in all , applying the method proposed helped us to further under - stand the design space of human—computer integration in the context of information extraction . By implementing and evaluating different automation configurations , we gained an understanding about the design choices needed and the possible impact on the overall outcome . The data obtained during the test phase gave us a comparable understanding of system performance in our use case . Nevertheless , deciding on a ‘sweet spot’ was not an easy task . We held multiple group sessions to determine the ‘sweet spot’ where we used the metrics obtained to discuss the trade - offs involved . The input in these group sessions were , on the one hand , visualizations of the metrics within a configuration ( cf . Appendix A . 3 ) and , on the other hand , the result overview tables , containing average metrics over all configurations ( as reported in Figure 2 ) . These inputs provided the starting point for the subsequent discussion of all metrics and their dependencies which led to the final decision . Choosing the ‘sweet spot’ is highly domain - dependent and should be a qualitative decision based on the insights gained during the process . Capturing Qualitative Shifts . The goal of applying the method proposed was to design possible configurations of LoA . Each configuration represents a hypothesis about the interdependence between human and computer [ 11 ] . As already stated , Latour argues that the delegation of formerly human tasks to a computer can change social practices and responsibilities [ 39 ] . Instead of using a human perspective on the system alone , a field study in which the different configurations are employed might be more suitable for capturing such changes and understanding existing interdependencies . Our empirical evaluation is only one possible piece of evidence , but it cannot be conclusive , since it represents only one point in time . We , therefore , envisage that we can accompany such interactive intelligent systems over their lifetime . This monitoring could be done in an ethnographic study and by indicators that monitor a system state based on the predefined metrics . Such indicators might help to define thresholds at which the different configurations should presumably be used . A deviation from the expected metrics range , for example , could be an indicator for a change in social practice . However , we doubt that a purely data - driven perspective of a system’s usage captures such a shift . All metrics applied in the use case are based on quantitative measurements , even though they describe more subtle issues , as in the case of the ResQue questionnaire [ 51 ] . Replacing or extending a human responsibility by an algorithmic component cannot be captured by quantitative metrics alone since such a replacement / extension causes a qualitative change in the human—computer configuration [ 11 ] . Such a qualitative perspective is especially important if we include trust in our evaluative criteria [ 10 ] . Moreover , we imagine that our approach might be included in existing methods such as value - sensitive design ( e . g . , [ 18 , 19 ] ) . The design of human—computer configurations should follow an action—reflection model where stakeholder and system designer co - design the system that evolves during the reflection process [ 64 ] . The Computer Supported Cooperative Work ( CSCW ) community has recently started to embrace this work ( e . g . , [ 65 ] ) and more research is needed to understand how different human—machine configuration influences human well - being qualitatively . Reflecting on Model - Applicability . The proposed model is largely motivated by a recent proposal of a concept by Farooq and Grudin [ 15 ] on human - computer integration . While they argue that more integrative design and evaluation approaches are needed , the article misses providing clear guidance on this . We transport this general idea of human—computer integration to the area of the interactive intelligence systems and here on AI - based software systems . The broad applicability of the model is , thus , limited to systems that are similar to the one investigated in our study . We assume Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 24 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss that our method is especially applicable to systems that are similar to interactive recommender systems , interactive and human - centered machine learning , interactive natural language processing , interactive visualizations , etc . In all these systems , the traditional interactive perspective on software design is augmented by algorithmic ‘intelligence’ and vice versa . While we applied the proposed method to our use case , several issues emerged during the application . Both the model and the LoA are described on a high level of abstraction . The latter enables the applicability to different problem domains and various forms of interactive intelligent systems ( cf . examples above ) . However , while this abstract formulation of the automation level ensures the general applicability of LoA in our context , the concretization of our use case was a source for discussions . These discussions were finally productive , since they helped to delineate the design space further . This illustrates that while the model shows some ambiguity at this stage , this ambiguity is necessary to have a broader applicability and can be resolved for the specific application domain . Taking Human—Computer Collaboration beyond Individuals . The proposed method for the design of human—computer configurations might evoke some broader discussion on its role in CSCW research . The CSCW community focuses on collaboration that can involve a few individuals , groups , organizations and globally distributed online communities . In this context , technology is frequently seen as a supporting instrument that enables collaboration . In human—computer collaboration , the human and the computer are partners [ 15 , 33 ] . From this perspective , individuals , groups , organizations or online communities are not entirely human . In the area of online communities , for example , Geiger and Halfaker examined such partnerships of bots and editors in Wikipedia but also the challenges when mixing human and algorithmic governance ( e . g . , [ 21 , 22 , 27 ] ) . These considerations might lead to several interesting questions for the CSCW community , such as the degree of artificial partnership needed and wanted ( e . g . , [ 60 ] ) , the design of the dialogue between a human and a computer ( e . g . , [ 40 ] ) , the adaptivity of artificial partners depending on the current needs of the group or community ( e . g . , [ 26 , 38 ] ) , and the algorithmic governance needed in such human—computer collaborations ( e . g . , [ 9 ] ) . The proposed method for the design of human—computer configurations might help to investigate these collaborative contexts more precisely , where humans and computers , i . e . , machines , collaborate to achieve a shared goal [ 30 ] . 7 CONCLUSION Defining a way to combine humans and computers effectively has received a lot of attention in research communities of robotics , ergonomics and human factors . However , related work provides little guidance on how we should design interactive intelligent systems , especially regarding the level of interaction vs . integration . Based on related work , we proposed a method for defining and evaluating different LoA in interactive intelligent systems . We applied the method to the task of information extraction in collaborative ideation . We were able to reach a conclusion about the use of automation in our problem domain by conducting experiments for the defined configurations . We provide the tool developed and configurations as open source software to enable replication and further adaption . Furthermore , we discussed the application of the method and insights gained from the use case . In addition to highlighting the benefits of the method , we propose three potential enhancements : The inclusion of a metrics catalogue and indicators to monitor thresholds for system behavior , the introduction of a dependency graph for metric definition , and potential development of the method towards an action—reflection model . We believe that the method gives system designers an approach to elaborate the continuum of interactive intelligent systems systematically and to choose the appropriate configuration based on the structured evaluation of configurations . Admittedly , this method tackles one specific issue in the design of interactive intelligent systems Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 25 only . However , it enabled us to make more informed decisions concerning the automation features of our information extraction tool . We release the ICV tool with a configuration panel , on which the ‘sweet spot’ can be selected based on the application context . Based on our experience , there is a need for the method proposed in other research areas , such as data visualization and machine learning . We hope our contribution has provided a first step towards a design framework for the systematic evaluation of implementing human—computer integration . ACKNOWLEDGMENTS This work is supported by the German Federal Ministry of Education and Research , grant 03IO1617 ( ‘Ideas to Market’ ) . We would like to thank Dr . Abderrahmane Khiat for his input on the Interactive Concept Validation and Aaron Winter for all the work he did to refine and polish the graphical representation of our research . REFERENCES [ 1 ] Saleema Amershi , Maya Cakmak , William Bradley Knox , and Todd Kulesza . 2014 . Power to the people : The role of humans in interactive machine learning . AI Magazine 35 , 4 ( 2014 ) , 105 – 120 . [ 2 ] Bruce W Arden . 1983 . What Can Be Automated ? : Computer Science and Engineering Research Study . MiT Press . [ 3 ] Emily M Bender and Batya Friedman . 2018 . Data Statements for NLP : Toward Mitigating System Bias and Enabling Better Science . ( March 2018 ) . [ 4 ] Osvald M Bjelland and Robert Chapman Wood . 2008 . An inside view of IBM’s’ Innovation Jam’ . MIT Sloan management review 50 , 1 ( 2008 ) , 32 – 40 . [ 5 ] Andre Breitenfeld , Maximilian Mackeprang , and Ming - Tung Hong . 2017 . Enabling Structured Data Generation by Nontechnical Experts . Mensch und Computer 2017 - Tagungsband : Spielend einfach interagieren 17 ( Sept . 2017 ) , 181 – 192 . [ 6 ] Joel Chan , Pao Siangliulue , Denisa Qori McDonald , Ruixue Liu , Reza Moradinezhad , Safa Aman , Erin T Solovey , Krzysztof Z Gajos , and Steven P Dow . 2017 . Semantically Far Inspirations Considered Harmful ? : Accounting for CognitiveStatesinCollaborativeIdeation . In Proceedingsofthe2017ACMSIGCHIConferenceonCreativityandCognition . ACM , 93 – 105 . [ 7 ] Jacob Cohen . 1960 . A coefficient of agreement for nominal scales . Educational and psychological measurement 20 , 1 ( 1960 ) , 37 – 46 . [ 8 ] Joachim Daiber , Max Jakob , Chris Hokamp , and Pablo N . Mendes . 2013 . Improving Efficiency and Accuracy in Multilingual Entity Extraction . In Proceedings of the 9th International Conference on Semantic Systems ( I - Semantics ) . [ 9 ] John Danaher . 2016 . The Threat of Algocracy : Reality , Resistance and Accommodation . Philosophy & Technology 29 , 3 ( Jan . 2016 ) , 245 – 268 . [ 10 ] Ewart J de Visser , Richard Pak , and Tyler H Shaw . 2018 . From ‘automation’ to ‘autonomy’ : the importance of trust repair in human – machine interaction . Ergonomics 61 , 10 ( April 2018 ) , 1409 – 1427 . [ 11 ] Sidney W . A . Dekker and David D . Woods . 2002 . MABA - MABA or Abracadabra ? Progress on Human – Automation Coordination . 4 , 4 ( Nov . 2002 ) , 240 – 244 . [ 12 ] Gianluca Demartini , Djellel Eddine Difallah , Ujwal Gadiraju , and Michele Catasta . 2017 . An introduction to hybrid human - machine information systems . Foundations and Trends® in Web Science 7 , 1 ( 2017 ) , 1 – 87 . [ 13 ] Mica R Endsley and Esin O Kiris . 1995 . The Out - of - the - Loop Performance Problem and Level of Control in Automation . Human Factors 37 , 2 ( 1995 ) , 381 – 394 . [ 14 ] Douglas C Engelbart . 1962 . Augmenting Human Intellect : A Conceptual Framework . Technical Report SRI Project No . 3578 . Stanford Research Institute , Menlo Park , Carlifornia . [ 15 ] Umer Farooq and Jonathan Grudin . 2016 . Human - computer integration . interactions 23 , 6 ( Oct . 2016 ) , 26 – 32 . [ 16 ] Paul M Fitts . 1951 . Human engineering for an effective air - navigation and traffic - control system . ( 1951 ) . [ 17 ] Terrence Fong , Charles Thorpe , and Charles Baur . 2001 . Collaborative control : A robot - centric model for vehicle teleoperation . [ 18 ] Batya Friedman . 1996 . Value - sensitive design . interactions 3 , 6 ( Dec . 1996 ) , 16 – 23 . [ 19 ] Batya Friedman , David G Hendry , and Alan Borning . 2017 . A Survey of Value Sensitive Design Methods . Foundations and Trends in Human - Computer Interaction 11 , 2 ( 2017 ) , 63 – 125 . [ 20 ] Timnit Gebru , Jamie Morgenstern , Briana Vecchione , Jennifer Wortman Vaughan , Hanna Wallach , Hal Daumeé III , and Kate Crawford . 2018 . Datasheets for Datasets . ( 2018 ) . [ 21 ] R . Stuart Geiger and Aaron Halfaker . 2017 . Operationalizing Conflict and Cooperation Between Automated Software Agents in Wikipedia : A Replication and Expansion of ’Even Good Bots Fight’ . Proc . ACM Hum . - Comput . Interact . 1 , Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 26 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss CSCW , Article 49 ( Dec . 2017 ) , 33 pages . [ 22 ] R . Stuart Geiger and David Ribes . 2010 . The Work of Sustaining Order in Wikipedia : The Banning of a Vandal . In Proceedings of the 2010 ACM Conference on Computer Supported Cooperative Work ( CSCW ’10 ) . ACM , New York , NY , USA , 117 – 126 . [ 23 ] Karni Gilon , Joel Chan , Felicia Y Ng , Hila Liifshitz - Assaf , Aniket Kittur , and Dafna Shahaf . 2018 . Analogy mining for specific design needs . In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems ( CHI 2018 ) . ACM , 121 . [ 24 ] Victor Girotto , Erin Walker , and Winslow Burleson . 2017 . The effect of peripheral micro - tasks on crowd ideation . In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems . ACM , 1843 – 1854 . [ 25 ] Marco Grassi , Christian Morbidoni , Michele Nucci , Simone Fonda , and Francesco Piazza . 2013 . Pundit : augmenting web contents with semantics . Literary and linguistic computing 28 , 4 ( 2013 ) , 640 – 659 . [ 26 ] Jonathan Grudin and Richard Jacques . 2019 . Chatbots , Humbots , and the Quest for Artificial General Intelligence . In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems ( CHI ’19 ) . ACM , New York , NY , USA , Article 209 , 11 pages . [ 27 ] Aaron Halfaker and John Riedl . 2012 . Bots and Cyborgs : Wikipedia’s Immune System . IEEE Computer 45 , 3 ( 2012 ) , 79 – 82 . [ 28 ] Sandra G Hart and Lowell E Staveland . 1988 . Development of NASA - TLX ( Task Load Index ) : Results of empirical and theoretical research . In Advances in psychology . Vol . 52 . Elsevier , 139 – 183 . [ 29 ] Sarah Holland , Ahmed Hosny , Sarah Newman , Joshua Joseph , and Kasia Chmielinski . 2018 . The Dataset Nutrition Label - A Framework To Drive Higher Data Quality Standards . ( 2018 ) . [ 30 ] Eric Horvitz . 1999 . Principles of Mixed - initiative User Interfaces . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( CHI ’99 ) . ACM , New York , NY , USA , 159 – 166 . [ 31 ] Eric Horvitz . 1999 . Uncertainty , Action , and Interaction : In Pursuit of Mixed - Initiative Computing . Intelligent Systems 6 ( Sept . 1999 ) , 17 – 20 . [ 32 ] Charles L Isbell and Jeffrey S Pierce . 2005 . An IP continuum for adaptive interface design . In HCI International . [ 33 ] Anthony Jameson and John Riedl . 2011 . Introduction to the Transactions on Interactive Intelligent Systems . TiiS 1 , 1 ( 2011 ) , 1 – 6 . [ 34 ] Matthew Johnson , Jeffrey M Bradshaw , and Paul J Feltovich . 2017 . Tomorrow’s Human – Machine Design Tools : From Levels of Automation to Interdependencies : . Journal of Cognitive Engineering and Decision Making 12 , 1 ( Oct . 2017 ) , 77 – 82 . [ 35 ] Matthew Johnson , Jeffrey M Bradshaw , Paul J Feltovich , Robert R Hoffman , Catholijn M Jonker , Birna van Riemsdijk , and Maarten Sierhuis . 2011 . Beyond Cooperative Robotics - The Central Role of Interdependence in Coactive Design . IEEE Intelligent Systems 26 , 3 ( 2011 ) , 81 – 88 . [ 36 ] Nehemiah Jordan . 1963 . Allocation of functions between man and machines in automated systems . Journal of applied psychology 47 , 3 ( 1963 ) , 161 . [ 37 ] David B Kaber and Mica R Endsley . 1997 . The Combined Effect of Level of Automation and Adaptive Automation on Human Performance with Complex , Dynamic Control Systems . Proceedings of the Human Factors and Ergonomics Society Annual Meeting 41 , 1 ( 1997 ) , 205 – 209 . [ 38 ] Ece Kamar , Severin Hacker , and Eric Horvitz . 2012 . Combining Human and Machine Intelligence in Large - scale Crowdsourcing . In Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems - Volume 1 ( AAMAS ’12 ) . International Foundation for Autonomous Agents and Multiagent Systems , Richland , SC , 467 – 474 . [ 39 ] Bruno Latour . 1988 . Mixing Humans and Nonhumans Together : The Sociology of a Door - Closer . Social Problems 35 , 3 ( June 1988 ) , 298 – 310 . [ 40 ] Claire Liang , Julia Proft , Erik Andersen , and Ross A . Knepper . 2019 . Implicit Communication of Actionable Information in Human - AI Teams . In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems ( CHI ’19 ) . ACM , New York , NY , USA , Article 95 , 13 pages . [ 41 ] Joseph Carl Robnett Licklider . 1960 . Man - Computer Symbiosis . IRE transactions on human factors in electronics HFE - 1 , 1 ( March 1960 ) , 4 – 11 . [ 42 ] MaximilianMackeprang , AbderrahmaneKhiat , andClaudiaMüller - Birn . 2018 . ConceptValidationDuringCollaborative Ideation and Its Effect on Ideation Outcome . In Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems ( CHI EA ’18 ) . ACM , New York , NY , USA , Article LBW033 , 6 pages . [ 43 ] Maximilian Mackeprang , Abderrahmane Khiat , and Claudia Müller - Birn . 2018 . Innovonto : An Enhanced Crowd Ideation Platform with Semantic Annotation ( Hallway Test ) ( FU Technical Reports Serie B ) , Vol . TR - B - 18 - 02 . Berlin . [ 44 ] Jose L Martinez - Rodriguez , Aidan Hogan , and Ivan Lopez - Arevalo . 2018 . Information extraction meets the semantic web : a survey . Semantic Web Preprint ( 2018 ) , 1 – 81 . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 27 [ 45 ] Pablo N Mendes , Max Jakob , Andrés García - Silva , and Christian Bizer . 2011 . DBpedia spotlight : shedding light on the web of documents . In Proceedings of the 7th international conference on semantic systems . ACM , 1 – 8 . [ 46 ] Margaret Mitchell , Simone Wu , Andrew Zaldivar , Parker Barnes , Lucy Vasserman , Ben Hutchinson , Elena Spitzer , Inioluwa Deborah Raji , and Timnit Gebru . 2019 . Model cards for model reporting . In Proceedings of the Conference on Fairness , Accountability , and Transparency . ACM , 220 – 229 . [ 47 ] Judith S Olson and Wendy A Kellogg . 2014 . Ways of Knowing in HCI . Vol . 2 . Springer . [ 48 ] Raja Parasuraman , Thomas B . Sheridan , and Christopher D . Wickens . 2000 . A model for types and levels of human interaction with automation . IEEE Trans . Systems , Man , and Cybernetics , Part A 30 , 3 ( 2000 ) , 286 – 297 . [ 49 ] Raja Parasuraman and Christopher D Wickens . 2008 . Humans : still vital after all these years of automation . Human Factors 50 , 3 ( June 2008 ) , 511 – 520 . [ 50 ] Heiko Paulheim . 2017 . Knowledge graph refinement : A survey of approaches and evaluation methods . Semantic web 8 , 3 ( 2017 ) , 489 – 508 . [ 51 ] Pearl Pu , Li Chen , and Rong Hu . 2011 . A user - centric evaluation framework for recommender systems . In Proceedings of the fifth ACM conference on Recommender systems . ACM , 157 – 164 . [ 52 ] Thomas B Sheridan and William L Verplank . 1978 . Human and Computer Control of Undersea Teleoperators . Technical Report . [ 53 ] Ben Shneiderman and Pattie Maes . 1997 . Direct Manipulation vs . Interface Agents . interactions 4 , 6 ( Nov . 1997 ) , 42 – 61 . [ 54 ] Pao Siangliulue , Kenneth C Arnold , Krzysztof Z Gajos , and Steven P Dow . 2015 . Toward collaborative ideation at scale : Leveraging ideas from others to generate more creative and diverse ideas . In Proceedings of the 18th ACM Conference on Computer Supported Cooperative Work & Social Computing . ACM , 937 – 945 . [ 55 ] Pao Siangliulue , Joel Chan , Steven P Dow , and Krzysztof Z Gajos . 2016 . IdeaHound : improving large - scale collaborative ideation with crowd - powered real - time semantic modeling . In Proceedings of the 29th Annual Symposium on User Interface Software and Technology . ACM , 609 – 624 . [ 56 ] Pao Siangliulue , Joel Chan , Krzysztof Z Gajos , and Steven P Dow . 2015 . Providing timely examples improves the quantity and quality of generated ideas . In Proceedings of the 2015 ACM SIGCHI Conference on Creativity and Cognition . ACM , 83 – 92 . [ 57 ] Matti Tedre . 2008 . FEATURE : What Should Be Automated ? Interactions 15 , 5 ( Sept . 2008 ) , 47 – 49 . [ 58 ] C . J . van Rijsbergen . 1979 . Information Retrieval . Butterworth . [ 59 ] Viswanath Venkatesh and Hillol Bala . 2008 . Technology acceptance model 3 and a research agenda on interventions . Decision sciences 39 , 2 ( 2008 ) , 273 – 315 . [ 60 ] Toby Walsh . 2016 . Turing’s red flag . Commun . ACM 59 , 7 ( 2016 ) , 34 – 37 . [ 61 ] Antoine Widlöcher and Yann Mathet . 2012 . The glozz platform : A corpus annotation and mining tool . In Proceedings of the 2012 ACM symposium on Document engineering . ACM , 171 – 180 . [ 62 ] Langdon Winner . 1980 . Do artifacts have politics ? Daedalus ( 1980 ) , 121 – 136 . [ 63 ] Donghee Yoo , Keunho Choi , Hanjun Lee , and Yongmoo Suh . 2015 . An Ontology - based Co - creation Enhancing System for Idea Recommendation in an Online Community . ACM SIGMIS Database : the DATABASE for Advances in Information Systems 46 , 3 ( 2015 ) , 9 – 22 . [ 64 ] Daisy Yoo , Alina Huldtgren , Jill Palzkill Woelfer , David G Hendry , and Batya Friedman . 2013 . A value sensitive action - reflection model - evolving a co - design space with stakeholder and designer prompts . Proceedings of the SIGCHI conference on human factors in computing systems ( 2013 ) , 419 – 428 . [ 65 ] Haiyi Zhu , Bowen Yu , Aaron Halfaker , and Loren Terveen . 2018 . Value - Sensitive Algorithm Design : Method , Case Study , and Lessons . Proceedings of the ACM on Human - Computer Interaction 2 , CSCW ( Nov . 2018 ) , 194 – 23 . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 28 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss A APPENDIX A . 1 Ideas Selected for the Annotation Task ( Section 5 . 2 . 4 ) In the following , we list all ideas selected for the annotation task which we obtained from previous studies [ 43 ] . The idea text was not edited , except for apparent typing errors that could have impacted the concept candidate search . ( 1 ) This could be used on gym equipment to instantly change the weight being used . ( 2 ) I would have a touchsreen on my wardrobe door that helps me co - ordinate outfits and different outfits for daily wear and different occasions . ( 3 ) You could put it on your car windows to make them darker or lighter for privacy , that would also help with sun glare , you could touch the spot where the sun is shining in your eyes . ( 4 ) I would place the coating on a boxing heavy bag . It would measure the speed of the punch and power of it as well . It would count the number of punches as well . It would give feedback in order to perfect your technique . ( 5 ) Use the coating on medicine bottles to have all the information about the medication and dosing . ( 6 ) It can be sprayed on roads where people speed . That way when they rollover that part of the road it will give them a feedback of how fast they are going and to drive slower ( 7 ) You could put it on a car for businesses or self employed people to advertise . A realtor could add a house address or a hairdresser or restaurant could put a daily special or coupon code . ( 8 ) Coat some on a computer and it will tell you the specs of the machine like its graphics , cpu and ram ( 9 ) Coat glasses with it - can darken to become sunglasses , add messages to be displayed to personalize . ( 10 ) a touch screen on the dryer to see if the clothes are done before the buzzer goes off ( 11 ) A touchscreen plate that could turn a heating element on and off so your food doesn’t get cold ( 12 ) A bathroom mirror that allows you to scroll through the news , see the weather , and make or see appointments for that day . ( 13 ) Secondary computer or video monitors can easily be created to cast digital media onto secondary work or viewing surfaces . ( 14 ) Being able to have entertainment while showering or bathing to do anything like watching shows or playing games . ( 15 ) place the material on cups and it will tell exactly what ingredients are in it and calories . it will also tell the person the temperature of the fluid and if the liquid contains any sort of drugs or poison . ( 16 ) replacement windows that utilize touch display , allows kids to write notes or decorate for the holidays ( 17 ) I would use a touch screen on my bed so that it could set an appropriate temperature for my mattress based on the real weather . ( 18 ) Could be used as a key when locked out of your car by putting it on the hood and entering a password or scanning a fingerprint . ( 19 ) I would use it on my hand to track things like my heart rate or other information that would be useful for exercise , like how far I’ve walked . ( 20 ) A shirt that can change colors upon using its touchscreen options on the side . It can used to change colors , and fabric type . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . Discovering The Sweet Spot of Human—Computer Configurations 195 : 29 A . 2 Questions of the Adapted ResQue Questionnaire We list here all questions we used for our adapted ResQue questionnaire . Besides the questions , we provide their topic . Topic Question Text Q 1 Expectations The items recommended to me match my expectations . Q 2 Diversity The items recommended to me are diverse . Q 3 Layout The layout and labels of the recommender interface are adequate . Q 4 Explanation The recommender explains why the items are recommended to me . Q 5 Information The information provided for the recommended items is sufficient for me to make a selection . Q 6 Interaction I found it easy to tell the system which items are most suitable . Q 7 Familiarization I became familiar with the recommender system very quickly . Q 8 Understanding I understood why the items were recommended to me . Q 9 Idea Item The recommender helped me find the ideal item . Q 10 Satisfaction Overall I am satisfied with the recommender . Q 11 Trust The recommender can be trusted . Table 4 . Question Texts together with their identifier and topic . Furthermore , the ResQue questionnaire allows for grouping the different topics under specific dimensions : ‘User Perceived Qualities , ’ ‘User Beliefes , ’ ‘User Attitudes’ and ‘Behavioral Intentions . ’ We did not use the ‘Behavioral Intentions’ but listed them for completeness . Dimension Question Topic User Perceived Qualities DiversityLayoutExplanationInformationFamiliarization User Beliefs ExpectationsInteractionUnderstandingIdealItem User Attitudes SatisfactionTrust Behavioral Intentions Purchase Intention Use Intentions Table 5 . The four dimensions of the different question topics with the unused dimension and questions ( striked out ) . Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 . 195 : 30 Maximilian Mackeprang , Claudia Müller - Birn , and Maximilian Stauss A . 3 Boxplots for the Adapted ResQue Questionnaire Figure 7 shows the boxplots generated for every question topic . B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( a ) Expectation B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( b ) Diversity B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( c ) Layout & Interface B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( d ) Explanation B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( e ) Information Sufficient B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( f ) Easy Interaction B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( g ) Familiarization B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( h ) Understanding B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( i ) Ideal Item B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( j ) Satisfaction B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( k ) Trust Fig . 7 . Boxplots for the Adapted ResQue Questionnaire The boxplotes shown in Figure 8 are generated for the grouped question topics ( cf . Table 5 ) . B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( a ) User Perceived Qualities B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( b ) User Beliefs B a s e li n e R e o r d e r i n g V a li d a t e d T h r e s h o l d A u t o m a t i c T h r e s h o l d R e o r d e r i n g T h r e s h o l d 1 . 0 1 . 5 2 . 0 2 . 5 3 . 0 3 . 5 4 . 0 4 . 5 5 . 0 ( c ) User Attitudes Fig . 8 . Grouped Boxplots for the Adapted ResQue Questionnaire Received April 2019 ; revised June 2019 ; accepted August 2019 Proc . ACM Hum . - Comput . Interact . , Vol . 3 , No . CSCW , Article 195 . Publication date : November 2019 .