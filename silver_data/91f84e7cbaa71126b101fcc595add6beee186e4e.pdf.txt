Students’ and Professionals’ Perceived Creativity In Software Engineering : A Comparative Study Wouter Groeneveld a , Laurens Luyten b , Joost Vennekens a , and Kris Aerts a a Department of Computer Science , KU Leuven , Leuven , Belgium ; b Department of Architecture , KU Leuven , Sint - Lucas Brussels and Ghent Campus , Belgium ARTICLE HISTORY Compiled December 20 , 2023 ABSTRACT Creativity is a critical skill that professional software engineers leverage to tackle difficult problems . In higher education , multiple efforts have been made to spark creative skills of engineering students . However , creativity is a vague concept that is open to interpretation . Furthermore , studies have shown that there is a gap in per - ception and implementation of creativity between industry and academia . To better understand the role of creativity in software engineering ( SE ) , we interviewed 33 professionals via four focus groups and 10 SE students . Our results reveal 45 under - lying topics related to creativity . When comparing the perception of students ver - sus professionals , we discovered fundamental differences , grouped into five themes : the creative environment , application of techniques , creative collaboration , nature vs nurture , and the perceived value of creativity . As our aim is to use these findings to install and further encourage creative problem solving in higher education , we have included a list of implications for educational practice . KEYWORDS creativity ; professional skills ; software engineering education ; creative problem solving 1 . Introduction This is the pre - print of the accepted publication for the Taylor & Francis European Journal of Engineering Education . Software development is a field riddled with technical complexity and constant change . Therefore , much research is devoted to these technical aspects , while non - technical skills are given less attention : a recent Delphi study has shown that expert software engineers in industry deem creativity as a crucially important problem solv - ing skill ( Groeneveld , Jacobs , Vennekens , & Aerts , 2020 ) . Yet , creativity is still very much underrepresented in software engineering ( SE ) education . For example , in the ACM / IEEE Computer Science Curricula of 2020 , the term “communication” is men - tioned 84 times , while “creativity” and “creative” are collectively only mentioned 14 times ( Joint Task Force on Computing Curricula & Society , 2020 ) . Furthermore , a curricula analysis by Groeneveld , Becker , and Vennekens ( 2020 ) reported that less than 5 % of the learning outcomes in computing - related courses across European uni - versities explicitly mention creativity . This shows a skill gap between what industry experts think is important and what is currently being taught in higher education . CONTACT Wouter Groeneveld . Email : wouter . groeneveld @ kuleuven . be a r X i v : 2312 . 12014v1 [ c s . S E ] 19 D ec 2023 Creativity research has a long history in the field of cognitive psychology ( Amabile , 1988 ; Torrance , 1972 ) . The same holds true for problem solving in the field of SE ( Jalote , 2012 ; Robillard , 2005 ) . However , there is still much to be done in order for the two fields to successfully fuse . Creativity is typically a very vague concept to which everyone gives their own interpretation and definition ( Davis , 1999 ) . Furthermore , a recent systematic literature review concluded that : “The research work on creativity in SE is scattered and scarce” ( Amin , Basri , Hassan , & Rehman , 2017 ) . The literature review of Groeneveld , Becker , and Vennekens ( 2022 ) summarizes how creatively we are currently teaching and assessing creativity in SE education . The authors conclude that most papers mention creativity only in passing , often in one sentence . Sometimes , a section is devoted to discussing its context , but often it is not used to support the methodology of the paper or to interpret the results . And yet , the core of SE is labeled as an outcome of human knowledge and creativity ( Bjørnson & Dingsøyr , 2008 ) . Clearly , creativity is the cornerstone of problem solving , especially in engineering , yet it is in dire need of more attention . Kaufman and Sternberg ( 2007 ) identified three important aspects of creativity . First , for an idea or implementation to be creative , it has to be new or innovative . Second , it needs to be of high quality . Third , the creative solution has to be relevant and appro - priate to the task at hand . However , it becomes increasingly difficult to come up with completely novel ideas that nobody has thought of before . This is especially difficult in mature fields , but also in the rapidly changing field of SE . Someone who invents a new database model might be seen as a visionary , while others who use the model in their daily programming assignments are “merely” applying existing principles , even though some developers might be applying the new model for the first time , for them in a perhaps creative way . The difference between inventing it and using it creatively is expressed as Big - C and Little - C ( Kaufman & Beghetto , 2009 ) . The three aforementioned aspects of creativity and the Little - C / Big - C system are unfortunately never a perfect fit . More recently , psychology researchers—including Kaufman—have been leaning towards a new creativity theory : that of socio - culturality ( Glaveanu et al . , 2020 ) , where creativity is approached as a contextual social verdict . Something is creative when someone else with expertise and recognition says it is . This view of creativity highlights the importance of context and perception of the construct . Therefore , we wondered : • RQ1 : How do professionals perceive creativity in the field of SE ? • RQ2 : How do students preceive creativity in the field of SE ? • RQ3 : What are the similarities and differences in perception of creativity between both worlds ? SE is a very broad discipline and requires systematic appliance of many different techniques , ranging from programming , architectural and interface design , maintenance of continuous deployment pipelines , to juggling vague wishes of different stakeholders . To limit the scope of this research , we will zoom in on the problem solving part of SE in context of programming . To answer question 1 and as a first step towards exploring the role of creativity in SE and its relation to problem solving , we conducted four focus group sessions , inviting 33 experts from four nationally and internationally renowned companies , to creatively 2 brainstorm about creativity . This resulted in 399 minutes of transcripts , coded into 39 themes and grouped into seven domains : technical knowledge , communication , con - straints , critical thinking , curiosity , creative state of mind , and creative techniques . However , one critical aspect remained unknown : how do students perceive creativity ? Therefore , we conducted additional interviews , inviting 10 SE students : 5 undergrad - uates and 5 graduates . In this paper , we present the analysis of both the professionals’ and students’ view of creativity in context of problem solving during programming . In addition , and to answer RQ2 and RQ3 , we thoroughly re - analyzed the transcripts of the focus groups and conducted a comparative study . Our ultimate goal with this research is threefold . First , to shed more light on the socio - cultural context of creativity in SE . Second , to reveal important differences in perception of creativity between students and professionals . Third , to offer suggestions for the teaching community to help close that gap . The remainder of this paper is divided into the following sections . Section 2 outlines the background and related work , while Section 3 describes the used methodology to approach the interviews and comparative study . Next , in Section 4 and 5 , we present and discuss the results . Section 6 summarizes implications for educational practice , followed by possible limitations in Section 7 , after which Section 8 concludes this work . Part of this work , namely that related to RQ1 , was previously published at the 2021 ICSE - SEIS conference as Groeneveld , Luyten , Vennekens , and Aerts ( 2021 ) . 2 . Related Work This section provides an overview of related work , both to better identify creativity within engineering ( education ) , and to explore possible gaps between students’ un - derstanding of creativity and that of professionals . We will highlight and summarize important published works based on the aforementioned systematic literature reviews of Amin et al . ( 2017 ) and Groeneveld et al . ( 2022 ) . 2 . 1 . Defining Creativity Existing literature proves that pinpointing the boundaries of the concept of creativity is very challenging : hundreds of definitions and models of creativity exist across a plethora of domains , from engineering to economics , design , linguistics , and social sciences . We will highlight a few interpretations that stood out and can be easily linked back to SE . Gero ( 2000 ) approaches the creative design process by comparing it to innovative and routine design . Routine design is defined in computational terms as an activity which occurs when all necessary knowledge is a priori available : a pre - established procedure can be followed to come to a design solution . In contrast , he defines non - routine design by two subgroups : innovative and creative design . In innovative design , the values of the variables directing the procedure to establish an outcome are placed outside their intended range . This leads to design outcomes that are new but still belong to the same class as their routine progenitors . In creative design one or more new variables are introduced in the process leading to an all together new class of design outcomes . Note that Gero’s work stays conceptual : identifying these variables or the perception of them is not mentioned . According to the literature reviews of Section 1 , popular recurring creative models that stem from cognitive psychology are , among others , Amabile’s Expertise , Creative Thinking Skills , Motivation ( Amabile , 1988 ) and Mooney’s 4P model ( Process , Product , 3 People , Place ) ( Mooney , 1963 ) . These models have been studied before in context of SE , for instance by Amin et al . ( 2017 ) . Others combine multiple components the 4P model , such as Place and Process , by the introduction of project courses and project - based learning outside of conventional university classrooms , to foster both technical and soft skills—including creativity ( Sedelmaier & Landes , 2014 ) . However , by limiting the exploration of creativity to borrowing and translating an existing model , many of these studies try to push a square peg in a round hole . Our intention is to first explore the perception of creativity bottom - up and only then hark back to existing models that might or might not show similarities . Furthermore , many of these models are incompatible with the accepted idea of advancing creativity theory and research to a socio - cultural concept , as reported by Glaveanu et al . ( 2020 ) . 2 . 2 . Perceiving ( Differences In ) Creativity Catarino , Nascimento , Morais , Campos , and Vasco ( 2019 ) explored students’ under - standing of mathematical creativity by sending out a survey to 128 engineering under - graduate students and asking them “What do you understand by mathematical creativ - ity ? ” . The result categories were involving mathematics ( the application of mathematics in other areas ; connections between mathematical concepts ) , problem solving ( multiple or original ways to solve a problem ) , and out of the box thinking . Perhaps this hints at certain domain - general aspects of creativity , versus domain - specific aspects related to only mathematics or SE . The authors conclude with a remark that , compared to other related works , the perception of their surveyed first - year students might differ substantially from that of graduate students . Bjørner and Kofoed ( 2013 ) approached the perception of creativity differently , by interviewing academic teachers instead of students . The researchers were interested in how cross - disciplinary teachers perceive and facilitate creativity . Again , the results point towards problem - based learning and problem solving as an important element for the creative process . The interviewed teachers had very different definitions of creativity , but they all emphasized the social context ( in this case , the cultural learning environment ) as an important factor , both at macro and micro level . Teachers also frequently link motivation to creativity . Bjørner and Kofoed end with a call for action : teachers seem to lack proper support and tools to facilitate creativity in education . Mohanani , Ram , Lasisi , Ralph , and Turhan ( 2017 ) investigated perceptions of cre - ativity in SE research and practitioners by comparing a systematic mapping of re - search literature with 17 interviews of professionals . They discovered some agreement— Kaufman’s novelty and usefulness—but more importantly identified differences in the way creativity is conceptualized , measured , and improved . Their research sheds some light on the research / practice gap but does not directly include the perception of stu - dents . To our best knowledge , no study asks both programming professionals and students what they think creativity is like in context of problem solving . Our contribution complements the above works , as will be further discussed in Section 5 . 3 . Methodology This section describes the approach used to answer RQ1 to RQ3 . The study was executed in three phases : gathering data from professionals using focus groups , gathering data from students using semi - structured interviews , and comparing these findings . 4 3 . 1 . Interviewing professionals In 2021 , we conducted four focus groups , inviting 33 SE experts from four nation - ally and internationally renowned software development companies . This study was published separately in ( Groeneveld et al . , 2021 ) . The transcripts were re - analyzed in context of this paper . Figure 1 puts the previous and this current work into context . We will briefly summarize the method used for the focus group study below . Figure 1 . : The context of previous and current works . A focus group method was adapted for SE based on the work of Kontio , Lehtola , and Bragge ( 2004 ) . Focus groups , in which a small group of experts brainstorm about a specific subject based on open questions of a moderator , are well - suited to obtain feedback on new concepts and generate ideas . To minimize participation friction , each session was held at a separate company and consisted of employees of that particular company . Studies have proven that this has the added advantage that attendees feel comfortable since they know each other ( Fern & Fern , 2001 ) . Participant selection was limited to these having a technical role ( e . g . developers , programmers , software architects , . . . ) with a minimum of six years of experience in the field . The conversation was facilitated by the first author , who has more than 11 years of experience as a SE himself . Familiarity with the topic at hand could introduce bias , but Kontio et al . ( 2004 ) state that “in the field of SE , it is very important for the interviewer to have extensive knowledge of the theme of the interview” . Sessions were audio - recorded and transcribed , generating 399 minutes of transcripts , on average 1 . 7h each . To minimize bias , they were cross - validated by the second author , whose field of expertise lies outside of SE or computing . To welcome opinions , perceptions , and ideas , open questions were posed . In or - der not to influence the perception of the participants , we refrained from providing a definition of creativity . We followed advice of Hove and Anda ( 2005 ) for conducting semi - structured interviews in empirical SE research , which states that one should “ask experience questions , avoid ‘why’ questions and questions with ‘yes’ / ‘no’ answers” . The 5 following questions were asked : 1 . What is the most creative thing you ever did related to programming ? 2 . How can you see when a colleague is being creative , or not ? 3 . What is the most creative project you ever worked on ? 4 . How would you measure or assess creativity ? 5 . Which creative techniques did you recently employ ? 6 . What is the reason to be creative ? 7 . Which environment do you need to be creative ? Additionally , to get the conversation on creativity jump - started , participants were first asked to complete the sentences “ as a developer , I am creative when I . . . ” and “ as a developer , I am not creative when I . . . ” . For each question , participants were grouped in pairs to brainstorm for five minutes , after which ten minutes of group discussion followed . 3 . 2 . Interviewing students The focus group study was a first step towards exploring the role of creativity in SE . During academic year 2021 – 2022 , we started a campaign to enlist students with the intention to replicate the 2021 study using exactly the same methodology but with different subjects : university students . However , limited engagement of the students and planning issues to get everyone together forced us to slightly revise the working method . Instead of organizing focus groups , we interviewed students one - on - one . The ques - tions were the same as the ones answered by the professionals but slightly altered to better fit the context . For example , “How can you see when a colleague is being creative” became “How can you see when a fellow student is being creative” . To keep the conversation going , we asked follow - up and clarification questions about responses we found intriguing ( e . g . , novel , vague , avoiding or in contradiction to prior answers ) , again in accordance with Hove and Anda . Although interviewees this time did not have the chance to brainstorm in group before answering , we still gave them ample time to respond . In total , 10 students were interviewed across 4 different universities in the same North - European country , of which 5 undergraduate ( first - year students ) and 5 grad - uate students ( with four or five years in university ) . To increase participation rates , students could secure a video game voucher of 60 EUR with a 1 / 7 chance of winning . Neighboring universities that provide a computer science course or an engineering course with specialization in SE were asked to spread the announcement in the form of a landing webpage via their channels . All interviews were conducted in the students’ native language to keep the conversation fluid . Two out of 10 interviewed students were female . All first - year students were 18 year and all graduates either 22 or 23 . Because Miller ( 2014 ) found no significant difference in self - assessment creativity scores based on participant gender , ethnicity or year in school , we decided not to consider student demographics as a separate discriminant . 3 . 3 . Analyzing recorded data Our intention was to treat , and thus analyze , the data in the same way , for both groups of subjects ( professionals and students ) . The data was processed using the qualitative 6 ( a ) Focus groups with professionals . ( b ) Interviews with students . Figure 2 . : Indications of thematic data saturation : interviews ( x - axis ) projected on the percentage of identified codes ( y - axis ) . coding techniques described by Onwuegbuzie , Dickinson , Leech , and Zoran ( 2009 ) and Richards and Hemphill ( 2018 ) . After audio recordings were transcribed , the transcript and written notes were read multiple times to apply an open coding step . This was done by the first two authors independently in order to let patterns “bubble up” in an emergent - systematic fashion as suggested by Onwuegbuzie et al . Next , notes were compared and cross - validated , followed by an axial coding categorization step . After making multiple revisions of mind maps and merging the results of all focus groups and interviews , we finally arrived at 45 codes divided into 5 categories , as visible in Table 3 in the appendix . Thematic data saturation was calculated by counting the number of discovered codes for each interview or focus group . As figure 2 indicates , after the fourth focus group and the tenth interview , less than 5 % new codes were introduced , which is a good pre - set threshold according to Guest , Namey , and Chen ( 2020 ) . 3 . 4 . Comparing findings Grounded theory dictates a bottom - up approach to identifying common themes in qualitative data . While the application of this approach for both datasets , as seen in Table 3 , proved to be a good exercise , it ultimately failed to zoom in on the differences between both groups . We felt that the axial coding step used to reduce the number of subthemes is partially responsible for the loss of relevant subtleties and context . For example , both professionals and students mentioned working with ( heterogeneous ) groups , which can be seen as a way to operationalize creativity—the “how”—but also as a physical setting—the “where” . Furthermore , while it was mentioned by students , the way in which they mentioned it made clear that they were mostly theorizing ( “I guess ? ” ) , compared to professionals who really lean on collaborative efforts . Another identified subtheme , actively seeking out input , appeared as a central theme in focus groups , but merely as an aside in the student interviews . To better highlight these subtle but very relevant systemic differences , we reverted from a bottom - up approach to a more top - down approach , zooming in on the differences that appeared in the first pass while identifying codes bottom - up . While re - reading the manuscripts and re - executing the coding steps a third time , we paid special attention to the following concepts : • The difference in environment in which the creativity is executed ( professional 7 vs a learning environment ) ; • The awareness and application of creative techniques : by chance or on purpose ; • Collaborative aspects of creativity and its perception ; • The perceived role of nature vs . nurture in the ability to be creative ; • The perceived value of creativity in the profession or the project at hand . In Section 4 , we will provide a brief overview of the bottom - up findings , before zooming into the comparative similarities or differences , described in Section 5 . 4 . Bottom - up Results Tables 1 and 2 contain summaries of gathered focus group and interview data . In total , 43 participants generated 89 . 462 words in 652 minutes worth of transcripts . On average , a focus group session with professionals—of on average 8 participants—lasted 100 minutes , while an interview session with students took 25 minutes . The full data set of anonymized transcripts and source code used to process these are available at https : / / doi . org / 10 . 48804 / 3FHVRC . Table 1 . : Focus group metadata of 33 professionals , totaling 52 . 329 words and 399 minutes of data . Theme distribution rates are also visible in Figure 2 . Description P1 P2 P3 P4 Duration 105m 99m 100m 95m Participants 7 14 7 5 Words 13 454 12 296 13 492 13 087 Theme distr . 67 % 87 % 95 % 100 % Table 2 . : One - on - one interview metadata of 10 students , totaling 37 . 133 words and 253 minutes of data . Theme distribution rates are also visible in Figure 2 . Description S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 Duration 23m 25m 22m 22m 24m 31m 24m 24m 23m 35m Words 3 321 4 211 2 722 3 028 3 533 4 802 3 812 2 713 4 247 4 690 Theme distr . 26 % 44 % 56 % 67 % 78 % 85 % 96 % 96 % 96 % 100 % The following subsections provide a summary of the emerged subthemes and cate - gories while bottom - up analyzing the transcripts of professionals and students , as also presented in Table 3 . Themes are marked in bold . We will zoom in on the top - down approach in Section 5 . 4 . 1 . When are you ( not ) creative ? Perhaps unsurprisingly , most professionals and students agree that creativity is needed to come up with a unique solution to a new problem . This problem should be chal - lenging , yet at the same time not too difficult . If it is too easy , it is considered as mundane and boring , and creativity rapidly wanes . If the problem is perceived as too difficult—for instance if the API or programming language is completely new— participants first try to learn and follow existing rules before attempting to tackle it 8 creatively . According to Csikszentmihalyi ( 1997 ) , just the right amount of difficulty is important to achieving a creative flow - like state . Students put heavy emphasis on freedom of choice : they report being the most creative if they have full control over the assignment such as choice of framework and implementation method . On the other hand , when a course project imposes a certain technology and is less open , they consider it to provoke less creativity . This goes against the grain of professionals’ coding environments that are usually filled to the brim with imposed constraints . We will explore this more in detail in a later section . For some participants , working on something visual like the UI design or making drawings on a whiteboard is perceived as being more creative . For others , their cre - ativity sparks when performance is a factor , again hinting at the importance of both imposed and self - imposed constraints in creative problem solving . One student jokingly mentioned that sleeping well and being in the right mood also determines when they are more or less creative . This lines up with the literature that suggests that sleep does indeed facilitate creativity ( Ritter , Strick , Bos , Van Baaren , & Dijksterhuis , 2012 ) . During the warm - up questions , some professionals attempted to define creativity : When someone can come up with an elegant solution to a previously unsolved non - trivial problem . This turned out to be quite challenging , as the definition was almost immediately heavily disputed . All students and professionals did agree on the fact that creativity is inherently personal . Some students suggested it was subjective and depending on the person evaluating the creativity , which lines up neatly with the attention that is currently paid in cognitive psychology to the socio - cultural context of creativity . 4 . 2 . Why should you be creative ? When asked why creativity matters , interviewees unanimously answered because qual - ity matters and can only be achieved by staying longer with the problem , coming up with alternatives , poking at the system from different viewpoints , again overcoming constraints that obstruct the path towards creation . Besides conventional answers , such as “because innovation requires creativity ” , both students and professionals hint at the personal satisfaction of approaching coding problems creatively . Without creativity , things become boring fast , according to respondents : In a sense , creativity can work therapeutically . I wouldn’t be here if this work wasn’t creative . Recent work by Graziotin , Wang , and Abrahamsson ( 2014 ) revealed that happy programmers perform better , and thus might be more creative . Some participants went as far as saying that creativity is part of their personality , of who they are : a Homo Faber , Umberto Eco’s concept of the urge to use tools and manipulate technology to create and shape the world around us ( Eco et al . , 1989 ) . Assembly line work—or in programmers terms , generating getters and setters and doing the plumbing setup work of a project—was frequently mentioned as being horri - bly dull . Still , some professionals like to pick up mundane tasks to trigger later creative 9 “aha” moments , while students rejected this kind of work all - together . The “why” theme again hints at dissimilarities between students’ and professionals’ opinions : professionals are tuned to more iterative software development processes that facilitate fast feedback and client - oriented thinking . Within the safe walls of the university , this is completely absent and can only be partially emulated . Professionals also more openly admire others’ creative work which in turn sparks their creative skills . One student did mention that seeing other students at work on a similar exercise can help sparking creativity . However , for professionals , finding a creative muse goes beyond similar work : some even marveled at the engineering work of suspension bridges or highway interchanges . 4 . 3 . What is creativity like ? Besides the subjective nature of creativity that was brought up multiple times , when we asked interviewees how creativity could be recognized and measured , many thought it could be observed by following the reasoning of others after asking them an open - ended question . If they deliberately think of alternatives , critically evaluate options , sometimes backtrack , sometimes zoom in or zoom out , then their ( software develop - ment ) thought process is deemed as creative . Both parties also identified the conventional answer : assessing divergent thinking by counting the number of solutions that get brought up . The more solutions , the more creative . In essence , this is Torrance’s Test of Creative Thinking ( Torrance , 1972 ) , that contemporary creativity research is moving away from ( Glaveanu et al . , 2020 ) , as divergent thinking is only one aspect of creative problem solving . Instead of trying to judge the creativity level of the development process , intervie - wees suggested to evaluate the end result : the product itself . The evaluation of a product as judged by an expert group is called Amabile’s Consensual Assessment Technique ( Amabile , 1982 ) , and according to the literature reviews of Section 1 , it is an often used technique in SE education . Both professionals and students mentioned elegance in code , but both interpret this differently : students focus much more on complexity , perhaps to show off their skills as part of the assignment , while professionals put emphasis on creative clean code ( and the many unit and integration tests that come with it ) to make long - term maintenance much more bearable . Only professionals mentioned sharing responsibility as an integral part of creative problem solving in SE . Of course , the culture and work environment differs radically compared to SE students in higher education . A detailed comparison of different social and cultural creative contexts is described in Section 5 . 4 . 4 . How can creativity be induced ? The most striking difference between both study groups is the number of creative techniques that are brought up during interviews and focus groups . Experienced pro - grammers clearly are at an advantage here , mentioning techniques such as shifting angles ( going back and forth between zoomed - out software architecture and zoomed - in code at method level ) and rubber ducking ( literally arguing with a rubber duck— yourself—when stuck to force a shift in perspective ) . Some techniques such as quickly drafting a potential solution in pseudocode and dividing a problem into small sub - problems were mentioned by students but not by professionals . We argue that they are 10 so commonplace in industry that they are hardly worth mentioning at all , while for students , they are still a fairly novel practice . Both parties mentioned getting out of your comfort zone and daring to ask questions : if you are not open to learning new things , your creativity will be barely fueled to keep on going . Feedback and collecting information is important , both from people ( mentioned more often by professionals ) and in the form of read - only informa - tion found in books , websites , or other sources ( mentioned more often by students ) . One professional summarized it neatly as follows : Creativity is the brew of different inputs . The concept of continuous learning is well - known within the world of SE ( Fonseca , Silva , Silva , & Pereira , 2019 ) , yet still fairly new to students . They are still steeped in a very supportive learning environment , while in industry , it takes deliberate practice to keep on being involved in learning , making it a more important factor for creative success . 4 . 5 . Where are you the most creative ? All interviewees emphasize the need for a supportive environment in which mistakes are not immediately punished . For students , this means dealing with open assignments that do not have a one size fits all answer , while for professionals , this means manage - ment that allows room for creative experiments . Some programmers seemed to prefer working with music to have easy access to Csikszentmihalyi’s flow state of mind while others prefer a quiet environment . SE students interpret that quiet environment as literally being alone in front of a PC and although both study groups mentioned working in group , this was much more ingrained in the professionals’ answers . Generating creative ideas does not need to happen exclusively clutched in front of a screen . Taking a walk or engaging in other activities like sports to let the mind wander and subconsciously think about a complex problem was mentioned by many respondents of both groups . Existing research such as that of Colzato , Szapora Ozturk , Pannekoek , and Hommel ( 2013 ) supports the notion that physical movement enhances divergent thinking . The “aha moment” usually does not occur when writing code but while doing something else . In fact , most of the thinking work can be done somewhere else , as one professional stated : Most of my creative work happens in the car . When I’m at work , all I have to do is type out the solution in my head . Interestingly , professionals seemed to deliberately trigger these moments while stu - dents recognize them when they occur but fail to understand and apply it as a creative technique . In the next session , we will discuss these differences in detail with the help of the results of our top - down approach . 11 5 . Top - down Results The previous section presented the results of a thorough bottom - up analysis of the transcripts that revealed the when , why , what , how , and where of creativity as an im - portant factor in problem solving for software engineers . As indicated by the interview occurrence columns in the appendix , professionals and students did not always agree . This section zooms in on those details and highlights both subtle differences in inter - pretation and bigger gaps in the perception of creativity . We end the discussion with a set of implications for educational practice . The mind map in Figure 3 summarizes the five central themes used in this top - down approach . It is important to note that these themes are highly interconnected , as emphasized by the arrows in the mind map . For instance , the way you interpret creativity alters your view on collaboration , or the environment that determines the company / university culture influences the application of certain creative techniques . We agree with Nerubasska and Maksymchuk : creativity is systemic ( Nerubasska & Maksymchuk , 2020 ) . Figure 3 . : A mind map of the different perceptions of creativity in SE between both study groups . 5 . 1 . Environmental differences Professionals and students have to exert their creativity in very different environments , of which especially the scale and scope of both the projects and everything that sur - rounds these is vastly different . For instance , the much larger development environment in industry includes : 12 • More context - switching between debugging , restructuring , and writing new code ; • DevOps activities such as continuous integration and distributed deployment ; • More emphasis on ( automated ) unit and end - to - end testing ; • Long - term legacy software support and possibly data migration steps to under - take ; • Much more frameworks and APIs to juggle ; • More data , logs , and requests to process ; • The involvement of many stakeholders that requires more interaction ; • . . . To a professional software engineer , creativity isn’t just limited to writing code or fixing problems in code : it happens both at micro - level in code and at macro - level in the software architecture . As typical university assignments are very limited , even if they are open ended to help spark creativity ( VanDeGrift , 2015 ) , this part of creative problem solving is virtually unknown to SE students . Furthermore , the speed at which some frameworks come and go also requires a certain critical and creative judgement during mid to long term software development planning . Some professionals even mentioned dealing with patents . THe experts testified that the more experienced you are working in these environments , the easier it becomes to express yourself creatively . Another environmental difference is working with the ( un ) known . Professionals state that , many times , clients do not really know what they want , requiring a criti - cal mindset , asking many questions , and short feedback cycles . We found that many students did not dare to question the question , which is a component to creativity ( Groeneveld et al . , 2021 ) . In a sense , problem solving in SE is related to “wicked” problems in design thinking , which Buchanan defines as “ as a class of social system problems which are ill - formulated , where the information is confusing , where there are many clients and decision - makers with conflicting values , and where the ramifications in the whole system are thoroughly confusing ” ( Buchanan , 1992 ) . Wicked problems require creativity to successfully tackle . Typical student projects exhibit some form of pressure , but this is usually limited to time pressure . Enterprise software development projects come with many levels of pressure : budgeting , time , expectations from peers and management , having to support existing legacy systems , . . . Some of these can be classified as constraints which we will explore in one of the following subsections . Creativity can only happen if the environment supports it : are peers and managers supportive ? Does the company culture allow for a bit of play that might spark new ideas ? Students interpreted support as coming from their friends and family , while professionals mention the bigger picture . For students , most projects have only one purpose : passing the course . Some admit to trying to optimize their grades . The frag - mentation of typical SE curricula and the lack of feedback during and after the project does not work in favor of creativity . 5 . 2 . The awareness and application of creative techniques Creative techniques have to be used consciously . In the professional focus groups , one of the central themes was often consciously choosing when not to be creative : when writing a script that only gets executed once or when the solution can be found by repeating a previous practice and not time and time again questioning the architecture or trying to reinvent the wheel . None of the interviewed students mentioned this . A 13 professional summarized this cleverly : You [ only ] have to be creative when it is time to do so . Related to the conscious use of creativity is the recognition of and reflection on these creative actions . The context of the student interviews revealed that they might be capable of recognizing the moments , but not yet of actively capitalizing on them . One student said : I’ll admit , I’ve never really looked for creativity . As is often the case , either [ the solution ] works , or it doesn’t . Most of the time , I just sit here at my desk . Also , because of the much larger environmental scope , the creative techniques that professionals employ clearly showcase more breadth and depth . Students seem to be very much focused on the technical complexity of algorithms and the code on a micro level , while professionals mention a much more diverse set of creative techniques they utilize daily : switching between refactoring and redesigning , zooming in and out , visualizing problems , adding in a so - called “deliberate hack” , taking edge cases into account when writing tests , . . . One of those examples that stood out was tooling . For SE students , tooling meant again getting to work with technical complexity : being creative by designing their own tooling systems . Interestingly , professionals use tools ( e . g . editors and IDEs ) to get rid of the unnecessary clutter and be able to focus on the essence : the coding problem at hand . The lack of breadth and depth causes students to stop pushing forward by switching to other creative techniques when one fails to work . One student did mention writing many unit test cases to split a problem in small sub - problems , but did not mention the other potential creative advantage of testing that was mentioned by almost every professional : poking at the problem from multiple angles to arrive at an airtight im - plementation . This again signifies a lack of practical experience , which is of course to be expected . 5 . 3 . Perceived collaborative aspects of creativity As underscored by professionals : For creativity , communication is key . To them , various social skills to help deal with the communicative and collaborative aspects of creativity are of importance as well , especially in a professional environment where different stakeholders have different expectations of both developers and the project in development . Knowing how to approach others is key to getting the most creative ideas out of that interaction . “ The ability to incorporate feedback of others in your solution - oriented thinking is of course an important part of the creative process ” , testified a professional . The importance of feedback is echoed by students , however , their feedback is much more limited . For some assignments , depending on the course or the teaching staff , they do not receive any feedback at all , severely hampering reflection on the creative process . Students also seemed to prefer getting inspired by other work through books or online 14 resources instead of directly via discussions with their peers , hinting at a more indi - vidual development process . Students do mention that working in a diverse group will likely trigger more creativity , but the way they bring it up seems to indicate this as being purely theoretical knowledge : People with a different background that might have followed different courses that I didn’t take might possibly think about things I didn’t think of . So I guess that’s where the creativity probably surfaces then . I think . An existing body of literature indicates that interdisciplinary SE projects are nothing new , although they almost never focus on improving the creativity by taking advantage of the heterogeneous student groups . In one study , interdisciplinary computing classes are said to improve “soft skills” of the students , but creativity was not mentioned ( Carter , 2014 ) . Professionals also think it is important to be given shared responsibility to ex - ecute the planned work . This creates a unique atmosphere that , according to our participants , amplifies creativity . This sense of responsibility is absent with students : their only responsibility is submitting the work on time to hopefully pass and eventu - ally graduate . Especially when closely working together , atmosphere and collegiality does have an impact on mood , which has been proven before to greatly affect the willingness to be creative ( Graziotin et al . , 2014 ) . Creativity can be contagious . Professionals often strategically place newcomers next to creative enthusiasts to help them quickly get up to speed . Students acknowledge this , but again , it sounds like theory that was never put into practice : [ . . . ] I didn’t think of that yet , usually that should also lead to new insights for yourself , I guess , when you see someone else doing something creative . 5 . 4 . Nature vs nurture : the creative mindset While re - reading the transcripts , one thing that stood out was the Fixed vs . Growth mindset of students vs professionals . Cognitive psychologist Carol Dweck describes a Fixed mindset as one that is rigid : either people are capable of something , or they are not ; while a Growth mindset acknowledges the possibility to nurture skills ( Dweck , 2008 ) . When it comes to creativity in programming , we observed primarily a Fixed mindset when interviewing students and primarily a Growth mindset when interviewing profes - sionals . For professional software developers , continuous learning is part of their job , as every single component in their environment rapidly changes . They regard creative problem solving as a skill that can be learned , just like debugging or database mainte - nance . On the other hand , students tend to categorize people into ones that are very creative and ones that are not : There are people who are spontaneously creative . and who don’t think about it , while I do , I do introspect when I want to make something , and think about my work , so I’m consciously working on that . That person continued to describe behavior of friends who he thought were more creative , and fellow students who in his mind weren’t . While “consciously working 15 on that” sounds like a Growth mindset , in his mind , some people are capable of it , while others are not . It did not occur to him that this can be trained . A few students mentioned creativity was related to intelligence and seemed to suggest that intelligence is also very much a fixed affair . Students’ rigid mindset attitude towards creativity also surfaced in other focus group studies ( Katz - Buonincontro , Hass , & Friedman , 2017 ) . A “sudden” creative idea is the result of a lot of thinking work . “ Being creative involves a lot of hard work ” , testify several professionals . They continue by saying that hard work is best alternated with deliberate breaks or periods of mundane work to let the unconscious do its work , ultimately triggering that “aha” moment . Ideas never occur in a sudden daze of brilliance . As for students , they recognize that moment , for example during a long walk or another sports activity , but do not deliberately employ these techniques to let ideas bubble up more often . Some students even admitted to not “catching” the idea—for instance by writing it down—and promptly forgetting it . All students found repetition to be very much not creative , while professionals sometimes insert periods of repetitive work to explicitly trigger something else . Many professionals described their creative endeavors as the result of their creative urge : the need to do something creative , Eco’s Homo Faber ( Eco et al . , 1989 ) . This was less distinctly present with students , although they also all acknowledge the need to be creative , but interpret that mostly as having creative freedom . 5 . 5 . The perceived value of creativity Both groups agree that creativity is a required skill : it is needed to find and solve non - trivial programming problems , to keep on digging while bug fixing , . . . We summarized this as tackling the project . An important aspect of problem solving is dealing with constraints . Compared to students , professionals face a plethora of constraints : time , budget , code , legacy , and so forth . For many professionals , self - imposed constraints are just as important as im - posed constraints , as they usually trigger creative thinking . Self - imposed constraints are an often - used technique in art and interaction design ( Biskjaer & Halskov , 2011 ) . For many professionals , working on a brownfield project—where existing software archi - tectures have to be taken into account—was considered more creative than a greenfield project —where a team can start from scratch and use the latest tech—although this was sometimes debated . Students do mention constraints but in a much more limited sense . For most stu - dents , constraints work against creativity . One student noted that they preferred dy - namic programming languages over static ones “ where everything is set in stone ” , failing to see that exactly those limited environments breed the most creative solutions . Ev - ery student preferred a greenfield project , working from scratch , to be in full creative control . Only one student—who turned out to be working part - time for two years in the SE industry—mentioned self - imposed constraints . Expressing oneself creatively can improve well - being , as expressed by several profes - sionals and described in Section 4 . For many professionals , writing code is seen as a passion or a craftmanship : pride is taken in delivering something of high quality , both on the outside ( for the end users ) as in the inside ( clean code for the software maintain - ers ) . Students also express their fondness of creativity—that is , when an assignment allows some degree of creative freedom . Of course , for them , there is less incentive to write clean code beyond getting a grade : most code written in university is throwaway code . 16 Some students enthusiastically talked about their hobby coding projects where they are in complete control and can contribute to society by solving a problem that others also encounter . That “complete control” again highlights students’ preference for working alone to cling to that precious freedom . Some students even expressed their aversion for working together as compromises have to be made which might muddle their creative vision . 6 . Implications for educational practice We are convinced that some of the identified differences in the perception of creativity can lead to actionable advice such as explicitly introducing creative problem solving techniques in SE courses . To summarize the results and discussion of the previous sections , we present a set of implications for educational practice that can be used to introduce and improve creativity in the classroom . 1 . Even though students perceive constraints to be a helpful part of constraints , as visible in Figure 3 , they do not know how to bend them to your advantage . Help students discover the benefits of ( self - imposed ) constraints , for example by introducing brownfield projects . 2 . Students are used to working with small projects that do not faithfully resemble a typical SE project . Keep the scale and scope of a typical SE project in mind when designing assign - ments , for example by involving more ( imaginative ) stakeholders . 3 . Students sometimes focus too much on getting a grade , thereby explicitly avoiding a creative approach . Encourage creative explorations in problem solving , even if they do not lead to practical solutions , for example by focusing less on grading the end result and more on the creative process . 4 . Feedback happens too little and can come across as too official . Plan for frequent moments of feedback , before , during , and after the submission of the final assignment . 5 . Students often don’t know when to be creative and when not to be . Help students use a diverse set of creative techniques , including when not to be creative , for example by presenting multiple unique SE problem cases . 6 . Many students think that either they’re creative , or they’re not . Show students that creativity is not a static personal characteristic but a skill that can evolve . 7 . Classic course assignments push students towards individualism . Emphasize the power of collaborative idea generation and iterative creativity , for example by introducing and actively coaching more group work . 7 . Limitations This comparative study sought to answer the research questions using qualitative meth - ods . As we have discussed , creativity is a subjective matter , and opinions of experts and students vastly differ , making it challenging to draw general conclusions . Repeating our study with other participants , for example from different companies or universities abroad , might produce different results . However , by carefully cross - validating data 17 and adhering to the best - practices of qualitative research , as explained in the method - ology section , we believe that we have mitigated the biggest risks . The data saturation rate indicates that the 4 focus groups and 10 interviews provided enough unique data to proceed with encoding and analyzing the results . The interviews with students did not follow the exact same procedure as the focus groups . One - on - one interviewees might experience more pressure in trying to quickly answer questions compared to brainstorming in group , resulting in possibly short - sighted answers . To minimize this effect , we compared encountered codes in student interviews with those from the focus groups and grouped them accordingly . Another possible limitation to this study is selection bias . Professionals mentioned this as well : only the people that were intrinsically motivated to talk about creativity joined our focus groups . We intentionally selected on this intrinsic interest to increase the relevance of answers for answering RQ1 and RQ2 . Still , it remains uncertain how much creativity is applied on a day - to - day basis in the field of SE , or how many students deliberately make use of creative techniques when working through their assignments . Lastly , one of our initial aims for this research was to discover potential differences in the perception of creativity between undergraduate and graduate students . While it was clear—and perhaps expected—that students with some work experience started to lean towards the opinion of professionals , there was not enough data to make any claims regarding an evolving view of creativity as students mature during their education . Future research might shed more light on this . 8 . Conclusion This paper sought to explore the perception of creativity in the field of SE . For this , we gathered transcripts from two study groups : 33 experts in the industry grouped into 4 focus group sessions and 10 students in higher education who major in SE . Five themes emerged from a bottom - up qualitative code analysis : when to be creative ( 9 subthemes ) , why should you be creative ( 9 ) , what is creativity like ( 7 ) , how to be creative ( 11 ) , and where does it manifest ( 9 ) . Next to these themes , a follow - up top - down analysis zoomed in on the similarities and differences between both study groups . The comparison , yielding 21 new sub - themes , was summarized using the following five themes : the creative environment ( 5 subthemes ) , application of techniques ( 4 ) , creative collaboration ( 4 ) , nature vs . nurture ( 3 ) , and the perceived value of creativity ( 4 ) . This paper contributes to the engineering education research community by helping identify the gap between SE industry and academia . In future work , we will experiment with various creative interventions and measure the effectiveness of creativity teaching techniques . However , first and foremost , we must focus on helping evolve students’ Fixed mindset of creativity into a Growth mindset . 9 . Acknowledgements We would like to thank the participants of both study groups for their creative dis - cussions , insights , and suggestions on creativity in software engineering . Thank you all very much ! 18 10 . Appendix Table 3 contains the identified codes that were grouped during the first analysis pass as described in Section 3 . 3 , including a presence marker of the code in either the transcripts of the professionals and / or the students . Subtheme P . Occ . S . Occ . Not yet a solution , a unique / new problem ✓ ✓ Slept well , in the mood ✓ A challenge that dictates thinking ✓ ✓ Not too difficult ✓ Linking with other domains ✓ ✓ Creating something visual ✓ ✓ Freedom of choice ✓ Contribute something to society ✓ W h e n ? ( 9 ) Performance matters ✓ ✓ Quality matters ✓ ✓ Overcoming constraints ✓ ✓ Client - oriented thinking ✓ Innovation / renovation is needed ✓ ✓ Because otherwise things get boring ✓ ✓ Personal satisfaction ✓ ✓ That’s just the way I am ✓ ✓ Fast feedback ✓ W h y ? ( 9 ) Admiration for other creative work ✓ Subjective ; taste - dependent ✓ ✓ Studying their reasoning ✓ ✓ Counting the amount of different solutions ✓ ✓ Judge the end result ✓ ✓ Check for elegance in code ✓ ✓ Shared responsibility ✓ W h a t ? ( 7 ) Body language ; surprise ✓ ✓ Pseudocode rendering ✓ Divide and conquer ✓ Drawing diagrams , domain modeling ✓ ✓ Continuous learning ✓ Actively seeking out new input / inspiration ✓ ✓ Discussions / brainstorming ( on whiteboard ) ✓ ✓ Exploring different angles / bird’s eye view ✓ Ask yourself questions : rubber ducking ✓ ( Dare to ) ask others questions ✓ ✓ Dare to discover ✓ H o w ? ( 11 ) Get out of comfort zone ; be open to new things ✓ ✓ Tooling support ✓ ✓ Support from your environment ✓ ✓ Being in a flow state ✓ ✓ Individually behind the PC ✓ In a ( heterogeneous ) group ✓ ✓ In a quiet environment ✓ ✓ Music / solitude ✓ ✓ Sport / walking to take mind off of things ✓ ✓ W h e r e ? ( 9 ) Deliberate breaks to trigger " aha ! " moment ✓ Table 3 . : Emerged subthemes and categories while analyzing transcripts of professionals ( column P . ) and students ( column S . ) , after cross - validation steps . 19 References Amabile , T . M . ( 1982 ) . Social psychology of creativity : A consensual assessment technique . Journal of personality and social psychology , 43 ( 5 ) , 997 . Amabile , T . M . ( 1988 ) . A model of creativity and innovation in organizations . Research in organizational behavior , 10 ( 1 ) , 123 – 167 . Amin , A . , Basri , S . , Hassan , M . F . , & Rehman , M . ( 2017 ) . A snapshot of 26 years of research on creativity in software engineering - a systematic literature review . In International conference on mobile and wireless technology ( pp . 430 – 438 ) . Biskjaer , M . M . , & Halskov , K . ( 2011 ) . Self - imposed constraints as a creative resource in art and interaction design . In Second international symposium on culture , creativity and interaction design , newcastle , england . retrieved from http : / / ccid2 . files . wordpress . com / 2011 / 02 / biskjaer - halskov . pdf . Bjørner , T . , & Kofoed , L . B . ( 2013 ) . How academic teachers perceive and facilitate creativity . European Journal of Engineering Education , 38 ( 5 ) , 556 – 566 . Bjørnson , F . O . , & Dingsøyr , T . ( 2008 ) . Knowledge management in software engineering : A systematic review of studied concepts , findings and research methods used . Information and Software Technology , 50 ( 11 ) , 1055 – 1068 . Buchanan , R . ( 1992 ) . Wicked problems in design thinking . Design issues , 8 ( 2 ) , 5 – 21 . Carter , L . ( 2014 ) . Interdisciplinary computing classes : Worth the effort . In Proceedings of the 45th acm technical symposium on computer science education ( p . 445 – 450 ) . New York , NY , USA : Association for Computing Machinery . doi : Catarino , P . , Nascimento , M . M . , Morais , E . , Campos , H . , & Vasco , P . ( 2019 ) . Breaking the habit : engineering students’ understanding of mathematical creativity . European Journal of Engineering Education , 44 ( 4 ) , 449 – 460 . Colzato , L . S . , Szapora Ozturk , A . , Pannekoek , J . N . , & Hommel , B . ( 2013 ) . The impact of physical exercise on convergent and divergent thinking . Frontiers in human neuro - science , 824 . Csikszentmihalyi , M . ( 1997 ) . Flow and the psychology of discovery and invention . Harper - Perennial , New York , 39 . Davis , G . A . ( 1999 ) . Barriers to creativity and creative attitudes . Encyclopedia of creativity , 1 , 165 – 174 . Dweck , C . S . ( 2008 ) . Mindset : The new psychology of success . Random House Digital , Inc . Eco , U . , et al . ( 1989 ) . The open work . Harvard University Press . Fern , E . F . , & Fern , E . E . ( 2001 ) . Advanced focus group research . Sage . Fonseca , L . , Silva , M . R . , Silva , S . W . , & Pereira , G . M . ( 2019 ) . Continuous - learning work environment : A study with developers in software development organizations . Knowledge Management & E - Learning , 11 ( 3 ) , 281 – 303 . Gero , J . S . ( 2000 ) . Computational models of innovative and creative design processes . Tech - nological forecasting and social change , 64 ( 2 - 3 ) , 183 – 196 . Glaveanu , V . P . , Hanchett Hanson , M . , Baer , J . , Barbot , B . , Clapp , E . P . , Corazza , G . E . , . . . others ( 2020 ) . Advancing creativity theory and research : A socio - cultural manifesto . The Journal of Creative Behavior , 54 ( 3 ) , 741 – 745 . Graziotin , D . , Wang , X . , & Abrahamsson , P . ( 2014 ) . Happy software developers solve problems better : psychological measurements in empirical software engineering . PeerJ , 2 , e289 . Groeneveld , W . , Becker , B . A . , & Vennekens , J . ( 2020 ) . Soft skills : What do computing program syllabi reveal about non - technical expectations of undergraduate students ? In Proceedings of the 2020 acm conference on innovation and technology in computer science education ( pp . 287 – 293 ) . Groeneveld , W . , Becker , B . A . , & Vennekens , J . ( 2022 ) . How creatively are we teaching and assessing creativity in computing education : A systematic literature review . In Proceedings of the 53rd acm technical symposium on computer science education v . 1 ( pp . 934 – 940 ) . Groeneveld , W . , Jacobs , H . , Vennekens , J . , & Aerts , K . ( 2020 ) . Non - cognitive abilities of 20 exceptional software engineers : a delphi study . In Proceedings of the 51st acm technical symposium on computer science education ( pp . 1096 – 1102 ) . Groeneveld , W . , Luyten , L . , Vennekens , J . , & Aerts , K . ( 2021 ) . Exploring the role of creativity in software engineering . In 2021 ieee / acm 43nd international conference on software engineering : Software engineering in society ( icse - seis ) . Guest , G . , Namey , E . , & Chen , M . ( 2020 ) . A simple method to assess and report thematic saturation in qualitative research . PLoS One , 15 ( 5 ) , e0232076 . Hove , S . E . , & Anda , B . ( 2005 ) . Experiences from conducting semi - structured interviews in empirical software engineering research . In 11th ieee international software metrics symposium ( metrics’05 ) ( pp . 10 – pp ) . Jalote , P . ( 2012 ) . An integrated approach to software engineering . Springer Science & Business Media . Joint Task Force on Computing Curricula , A . f . C . M . A . , & Society , I . C . ( 2020 ) . Com - puter science curricula 2020 : Curriculum guidelines for undergraduate degree programs in computer science ( Tech . Rep . ) . New York , NY , USA . Katz - Buonincontro , J . , Hass , R . W . , & Friedman , G . ( 2017 ) . “engineering” student creativity in a probability and statistics course : Investigating perceived versus actual creativity . Psychology of Aesthetics , Creativity , and the Arts , 11 ( 3 ) , 295 . Kaufman , J . C . , & Beghetto , R . A . ( 2009 ) . Beyond big and little : The four c model of creativity . Review of general psychology , 13 ( 1 ) , 1 – 12 . Kaufman , J . C . , & Sternberg , R . J . ( 2007 ) . Creativity . Change : The Magazine of Higher Learning , 39 ( 4 ) , 55 – 60 . Kontio , J . , Lehtola , L . , & Bragge , J . ( 2004 ) . Using the focus group method in software engi - neering : obtaining practitioner and user experiences . In Proceedings . 2004 international symposium on empirical software engineering , 2004 . isese’04 . ( pp . 271 – 280 ) . Miller , A . L . ( 2014 ) . A self - report measure of cognitive processes associated with creativity . Creativity Research Journal , 26 ( 2 ) , 203 – 218 . Mohanani , R . , Ram , P . , Lasisi , A . , Ralph , P . , & Turhan , B . ( 2017 ) . Perceptions of creativity in software engineering research and practice . In 2017 43rd euromicro conference on software engineering and advanced applications ( seaa ) ( pp . 210 – 217 ) . Mooney , R . L . ( 1963 ) . A conceptual model for integrating four approaches to the identification of creative talent . Scientific creativity : Its recognition and development , 331 – 340 . Nerubasska , A . , & Maksymchuk , B . ( 2020 ) . The demarkation of creativity , talent and genius in humans : a systemic aspect . Postmodern Openings / Deschideri Postmoderne , 11 ( 2 ) . Onwuegbuzie , A . J . , Dickinson , W . B . , Leech , N . L . , & Zoran , A . G . ( 2009 ) . A qualitative framework for collecting and analyzing data in focus group research . International journal of qualitative methods , 8 ( 3 ) , 1 – 21 . Richards , K . A . R . , & Hemphill , M . A . ( 2018 ) . A practical guide to collaborative qualitative data analysis . Journal of Teaching in Physical Education , 37 ( 2 ) , 225 – 231 . Ritter , S . M . , Strick , M . , Bos , M . W . , Van Baaren , R . B . , & Dijksterhuis , A . ( 2012 ) . Good morning creativity : task reactivation during sleep enhances beneficial effect of sleep on creative performance . Journal of sleep research , 21 ( 6 ) , 643 – 647 . Robillard , P . N . ( 2005 ) . Opportunistic problem solving in software engineering . IEEE software , 22 ( 6 ) , 60 – 67 . Sedelmaier , Y . , & Landes , D . ( 2014 ) . Practicing soft skills in software engineering : A project - based didactical approach . In Overcoming challenges in software engineering education : Delivering non - technical knowledge and skills ( pp . 161 – 179 ) . IGI Global . Torrance , E . P . ( 1972 ) . Predictive validity of the torrance tests of creative thinking . The Journal of creative behavior . VanDeGrift , T . ( 2015 ) . Supporting creativity and user interaction in cs 1 homework as - signments . In Proceedings of the 46th acm technical symposium on computer science education ( pp . 54 – 59 ) . 21