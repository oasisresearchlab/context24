Parsing and Interpreting Ambiguous Structures in Spatial Hypermedia Luis Francisco - Revilla and Frank Shipman Center for the Study of Digital Libraries and Department of Computer Science Texas A & M University College Station , TX 77843 - 3112 , USA 1 + ( 979 ) 845 - 4924 { l0f0954 , shipman } @ csdl . tamu . edu ABSTRACT When reflecting on information , spatial hypermedia users express their understanding of the information’s structure visually . In order to facilitate this process , spatial hypermedia uses spatial parsers that enable systems to infer the structure of information based on the implicit relationships between components of the representation . This paper describes the two main purposes of spatial parsers in spatial hypermedia systems and how particular parsing approaches and features influence their effectiveness and responsiveness . An alternative approach that provides better support for ambiguity and adaptability is instantiated in FLAPS , an adaptive spatial parser that uses fuzzy - logic in order to infer the implicit structure of spatial hypermedia . The comparison of FLAPS to other parsers reveals benefits of supporting ambiguous structures by computing multiple possible interpretations and identifies limitations that provide goals for future spatial parsers . Categories and Subject Descriptors H . 5 . 4 [ Information Interfaces and Presentation ] : Hypertext / Hypermedia – architectures , theory , user issues . General Terms Algorithms , Design , Experimentation , Performance , Theory . Keywords Spatial Hypertext , spatial parsers . 1 . INTRODUCTION As individuals reflect on and analyze information on computers , they engage in a conversation with the medium , be it a file system , a database , a hypertext , or some other tool . People interact with the information representations ( objects ) and in return the medium informs the people about the consequences of their actions . Visual media , such as file boxes and spatial hypermedia , allows users to see some of the consequences directly ( as opposed to having to predict them cognitively ) [ 16 ] . Evidence of the value of visual artifacts can be observed in the everyday use of sketches , mock - ups , and notes , which people alternately contemplate and modify . Schoen refers to the processes of assessing the results of activity during and in between action as reflection - in - action and reflection - on - action [ 19 ] . Such conversation between people and medium is evident in spatial hypermedia , where users manipulate information directly without having to commit to a formal representation . Often times , visual representations of document collections present the structure of the information only implicitly . While humans are normally able to perceive , understand and use these implicit structures , computer systems often lack these abilities . Spatial hypermedia closes this communication gap by enabling systems to infer and understand some of the structures that humans implicitly create when reading and interacting with spatial hypermedia . Spatial hypermedia systems accomplish this by employing spatial parsers that analyze the information presentations and infer the implicit structure based on the proximity ( how close are objects located ) , similarity ( how alike is the appearance of objects ) and regularity ( how much do objects conform to specific arrangements such as lists ) of the information objects [ 13 , 17 ] . The ability of spatial hypermedia systems to actively participate with their users – as opposed to simply function as a passive medium where the users carry out their reflections and information management activities – depends on the spatial parsers’ interpretation of the implicit information structure . The degree of appropriateness to which spatial parsers can interpret the structure depends on the specific approaches and features considered in their design and implementation . The following section discusses how some specific features of previously implemented parsers affect the systems’ ability to create a shared understanding of the structure with the users . This discussion not only allows the identification of several advantages , disadvantages and trade - offs of previous approaches but also uncovers previously unidentified requirements for specific parser functionality . The next section presents a novel approach to spatial parsing that addresses some these issues . This approach is instantiated in FLAPS , an adaptive spatial parser that uses fuzzy - logic inference mechanisms in order to support ambiguous interpretations of implicit structures . The paper discusses the FLAPS approach and implementation in comparison to other spatial parsers . This discussion reveals new benefits and trade - offs that need to be researched as part of the design and implementation of the next generation of spatial parsers . Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . HT’05 , September 6 – 9 , 2005 , Salzburg , Austria . Copyright 2005 ACM 1 - 59593 - 168 - 6 / 05 / 0009 . . . $ 5 . 00 . 2 . PARSERS IN SPATIAL HYPERMEDIA People engaged in the creation or management of information ( such as in the domains of computer - aided design and information management ) , often require a medium capable of expressing ambiguous relationships such that they are not required to commit prematurely to a particular representation . This holds for authors and readers of spatial hypermedia . When creating a new information presentation , authors rarely produce the final presentation directly . More frequently , they construct intermediate expressions which they use and develop into the final presentation . Conversely , readers often interact with the presentations , modifying them – even if only temporarily – for the purpose of making the structure apparent , as well as for discovering and experimenting with different structural alternatives [ 2 ] . The demands for easy access to the information structure implicitly present do not only originate from the users . Systems are often responsible to conduct back - end processes with the information in order to aid the users to perform a task . Hence , systems can enhance their responsiveness by better understanding the users’ perspective . In spatial hypermedia the structure of the representation is the result of the implicit and explicit relationships between objects . This structure evolves as a result of the interactions of authors and readers . Spatial hypermedia systems include spatial parsers to recognize these structures . Figure 1 . Building a shared understanding of the structure Figure 1 illustrates the role that spatial parsers play in bridging the communication gap between users and systems by allowing them to create a shared understanding of the structure of the information . Additionally , Figure 1 shows the dual purpose of spatial parsers , namely : • Facilitate the perception of the structure of the information by the users . This reduces the cognitive load and enhances the medium’s support for reflection - in / on - action . This enables the following functionality . o Systems can aid users to discover and understand the inherent structure of information layouts created by third party authors [ 5 , 15 , 18 , 21 ] . o Systems can help users to interpret emerging structures ( sometimes hidden or ambiguous ) that result from the continuous users’ interactions with the representations [ 2 , 5 ] . o Representation media can be augmented in order to facilitate the manipulation of multiple objects and implicit structure ( e . g . hierarchical click selection [ 1 , 17 , 20 , 21 ] ) . • Inform systems about the users’ perspective . This enhances the systems’ ability to understand the current user perception of the information space , which in turn allows systems to better support the users as in the following cases . o Systems can express the results of back - end processes in the same visual language that the users are using as part of their reflection - in / on - action processes . This enhances the ability of systems to participate with the users in their work . For instance , spatial hypermedia systems that operate as interfaces to repositories of structured data , such as databases , not only allow users to manage and manipulate the repositories’ contents , but are also able to express the results of processes , such as updates or queries , in accordance to the user’s current idiosyncratic arrangement of the space [ 1 , 7 ] . o Systems can determine the context and extent of the consequences associated with user interactions with specific information objects [ 3 , 4 ] . o Systems can automatically adapt the presentation in response to relevant factors [ 3 , 4 ] . o Systems can generate suggestions that aid users in the incremental formalization of the representations [ 21 ] . o In domains such as Digital Libraries , systems can infer users’ past , present and future interests in order to aid in tasks such as information structuring and query reformulation [ 1 ] . In order to enable systems to respond to the particular needs for which they were designed , system designers have created different spatial parsers that vary considerably , not only in terms of their internal operation but also on the kind of specific structures they recognize ( such as groups and lists ) , adaptability , and the nature of what is a “structure” . The following sections aim to shed some light on these differences and point out the contributions and trade - offs provided by the different approaches . 2 . 1 Spatial Parsers’ Origins The first spatial parsers were created based on observations of users’ behavior with map - based hypertext systems such as Aquanet [ 12 ] . When using systems that presented aerial views of a hypertext [ 11 ] , authors visually implied relationships between objects rather than creating explicit links . Because these aerial views were represented using two - dimensional spaces , the first spatial parsers recognized two - dimensional structures such as piles and lists , especially as other studies validated that people normally use these structures in their work practices in the physical world [ 8 , 10 , 20 ] . VIKI was the first hypermedia system to emphasize the implicit expression of relations [ 14 ] . VIKI’s spatial parser introduced the concept of using independent recognizers ( referred as specialists by Shipman et al . [ 20 ] ) in order to recognize structures based on the proximity , similarity and regularity of objects . Because the parser was implemented as a single - pass algorithm , the sequence in which the recognizers were called affected the overall structure recognition . Consequently , the parser featured the ability to be reconfigured by changing the order and number of appearances of each recognizer in the sequence . Furthermore , the parser was able to configure itself by determining the dominant orientation of the current spatial layout ( i . e . vertical vs . horizontal ) . Medium Spatial Parser User Informs systems about the users’ perspective Facilitates the perception of the structure of the information Back - end processes One assumption of VIKI’s parser was the definition of user - defined types for information objects . These types were used to describe lists and stacks of similarly - typed objects . Composites , regular patterns of objects of different types , were assigned new , system - generated types . An example of a frequently observed composite is the labeled list . Users construct labeled lists by placing an object with distinctive visual characteristics at the top of a list of visually similar objects [ 13 ] . While user - types provide a clear indication of similarity in the eyes of the user , often times , users did not define them . Thus , VKB [ 21 ] – which uses the same parser as VIKI – adds a visual preprocessor that automatically assigns a type to each object that does not have a user - defined type . This not only alleviates the users’ workload , but also improves the parser’s interpretations of ambiguous arrangements . 2 . 2 Adaptive Parsers Given that different people interpret implicit structures differently , it follows that spatial parsers should be able to adapt in order to better match their inferences to the users’ interpretations . In this regard , Igarashi et al . [ 9 ] explored the use of genetic algorithms in order to enable spatial parsers to self - adjust ( learn ) from the users’ corrections of “wrong” structure interpretations . By adapting their parser based on the user feedback , they provided an alternative to the complexity of manual configuration of parsers by the users . Additionally , their algorithms were designed to allow for fuzziness in the structure recognition . In order to recognize clusters and lists , Igarashi et al . create a global link graph , where each node represents an object and each edge represents a candidate relationship . Relationships are inferred based on the evaluation of the proximity and regularity of the objects . This evaluation includes a simple fuzziness aspect in order to interpret ambiguous layouts . By pre - computing the link graph , this approach limits reparsing to the regions affected by the users’ interactions . 2 . 3 Shared Parsers Reinert et al . [ 18 ] explored the use of a shared spatial parser to promote common structural understanding in collaborative settings . Their system , CAOS , provides an open parsing service that promotes structure to a first - class object that can be stored and shared . CAOS’s approach works best in collaborative spatial hypermedia with strict synchronization . Shared parsers resolve inconsistency issues and circumvent the need for every user to reparse the space individually . Additionally , parsing can be incrementally accomplished such that only the regions with changes are reparsed . 2 . 4 Three - Dimensional Parsers Parsing of 3 - D spaces has been explored in TOPOS by Nielsen and Ørbæk [ 17 ] . In their work , they noticed that spatial hypermedia systems that use 2 - D or 2½ - D representations often provide a fixed viewpoint of the information space . As a result of this fixed user perspective , the perceived structure differs little from the physical structure of the information . However , in 3 - D environments , factors such as the perspective and camera position can greatly affect the user’s perception of structure . This is evident in collaborative 3 - D environments , where not only can different users interpret the same structures differently , but different users looking at the same objects can see very different arrangements depending on their location and perspective . This observation prompted the researchers to explore the use of a spatial parser that analyzes the 2 - D projection of the space as it is perceived by the users [ 17 ] . The parsing approach of TOPOS provides insight into trade - offs between the two main goals of spatial parsers . If the goal is to enhance the system’s understanding of the users this approach may be appropriate , as it can better match the users’ perceptions of the structure of the information . However , if the goal is to help users to understand the physical structure of the information – such that the users can manipulate it as part of their reflection - in / on - action or as a means to collaborate with other users – then an absolute parsing approach ( one that disregards the current user perspective ) is appropriate . Nielsen and Ørbæk’s parser implementation uses the graph - based model of Igarashi et al . [ 9 ] and focuses mainly on clusters and lists . They enhance the graph - based approach with Shipman et al . ’s [ 20 ] concept of independent structure experts and allow the parser to be adjusted via user configurations . TOPOS has been extended into a Geo - Spatial Hypermedia , where a “real” space is used as a “background” for the abstract 3 - D space [ 6 ] . This extension has introduced the question of whether the background should be taken into consideration in the parsing process and how could it inform the parser . However , further research is needed before answering this question . 2 . 5 Specialized Spatial Parsers It is tempting to generalize spatial parsing as the process of identifying clusters of objects that meet specific proximity , similarity and regularity constraints . However , as the work by Nakakoji et al . shows [ 16 ] , this is not always the case . Nakakoji et al . use a 2 - D space in order to support the reflection - in / on - action that authors perform as part of their process of creating linear documents such as research articles or video presentations . In this application , parsing does not focus on the identification of structures such as lists or piles . Instead , the space is parsed in order to translate the 2 - D information representations to the linear document being authored . In order to do this , the spatial parser simply sorts the information components by their vertical position while disregarding other visual characteristics such as horizontal positioning and size . An apparently simple approach to spatial parsing , the work by Nakakoji et al . ’s greatly informs spatial hypermedia designers by clearly explaining how the implicit structures perceptually available to the users can be exploited by spatial hypermedia systems in order to better support the processes of reflection - in - action and reflection - on - action . 2 . 6 Spatial Parsers and Data Visualizers Many spatial hypermedia systems operate on the assumption that the information management is a process that begins with an unstructured , informal representation of the information , which is progressively developed by the users into a more formal and organized presentation . In this process , the structure emerges incrementally as the result of the users’ interactions with the medium . This assumption has a significant effect on the functionality of spatial parsers , as it guides their design and implementation to mainly focus on interpreting common forms of user expression . While this assumption results in improved parsing and interpretation of visual structure in some applications , there are cases where it does not , as illustrated by VITE [ 7 ] . VITE is a spatial hypermedia system that acts as an interface for repositories of structured data , such as databases . It provides a two - way mapping between the structured data representation and visual attributes of spatial hypermedia objects . In VITE , the initial visualization of the information is very structured as it is created by the system based on a user - defined mapping of the particular semantics of the data records to their screen representations . For instance , the price of an item can be represented as its screen object’s x - position or size . Figure 2 provides an example where the user has mapped two semantic attributes ( “necessity” and “time frame” ) with discrete values ( “necessity” = { “must - have” , “desired” , “don’t care” } and “time frame” = { “urgent” , “soon” , “whenever” } ) to the x and y positions on the screen respectively . Figure 2 . Effects of mapping on the spatial parsing VITE’s spatial parser needs to consider possible issues that arise when a semantic value is mapped to more than one visual characteristic ( e . g . color and x - position ) . In such a case , changes to one visual attribute can result in an inconsistent state that requires changes to other aspects of the visualization ( e . g . a user changing the object’s color might require the system to relocate the object ) . VITE’s spatial parser also needs to account for possible data constraints . For instance , when an object is resized , the semantic attribute mapped to the size of the object may be restricted to a range of possible valid values . It is possible for users to resize an object close to a valid size , but not quite the precise value . In this case the spatial parser needs to interpret the approximate size of the object as the intended semantic value . 2 . 7 Spatial Parsers Summary Based on the previous discussion , it is clear that a spatial parser’s design and implementation features have a significant effect on its effectiveness in terms of ambiguity support , extensibility , flexibility , adaptability , computational effort required , reusability , and responsiveness to the two main goals of spatial parsers . Since people interacting with spatial hypermedia are comfortable using the implicit relationships created by their imprecise arrangements of objects , provisions for a flexible evaluation of the proximity , similarity and regularity greatly benefit the spatial parsers’ support for ambiguity . For instance , the fuzziness aspect included in the approach by Igarashi et al . [ 9 ] allowed the recognition of structures of coarsely aligned objects placed at irregular distances . Another feature that contributes to the parsers’ support of ambiguity is the automatic recognition of composites ( as in VIKI [ 20 ] and VKB [ 21 ] ) . This feature allows parsers to identify structures created by reoccurring visually similar patterns of objects . However , these approaches only enable systems to make inferences based on visually noisy layouts . They do not support ambiguity in the form of multiple possible visual structures for the same set of objects . Implementation features such as the use of multiple independent structure recognizers improve the extensibility of spatial parsers by facilitating their reuse in different applications and domains . While it is possible to add and remove structure recognizers to some of the previous parsers , this often required them to be recompiled . A better approach would support plug - and - play recognizers capable of being added or removed on - demand . The provision of manual and automatic configuration facilities enhances the parsers’ ability to meet the needs of different users . However , making easy - to - configure parsers remains a challenge due to their complexity and mathematical nature . Most previous parsers provide at least some ability to configure the recognition algorithms . Yet , better support is needed such that spatial hypermedia authors can configure the spatial parsers in accord with the needs of their documents , while simultaneously allowing the users to configure it according to their reading idiosyncrasies . Given that spatial parsing can be a demanding process , some parser designers have created algorithms that can parse the space incrementally [ 9 , 17 , 18 ] . For instance , some parsers maintain an abstraction of the existing relationships in the form of a graph , allowing them to detect which relationships are affected by the users’ interactions such that they only need to reparse those regions [ 9 , 17 ] . Spatial parsers explicitly implemented as independent subsystems are able to serve multiple applications – whether as independent modules providing spatial parsing services to distributed applications [ 18 ] or by being integrated into different system implementations [ 17 , 20 , 21 ] . This approach is very desirable as it provides flexibility and reusability for the spatial parser . The duality of purpose has not always been explicitly considered in the design of spatial parsers . Some parsers focus solely on one goal , enhancing the user’s understanding of the information structure or the system’s understanding of what structures the user perceives , and disregard the other . While this can reduce the responsiveness of systems , it also simplifies the identification of features that help to accomplish each goal . For instance , features that facilitate the users’ perception of the information structure include providing visual feedback of the structures ( as shadows [ 21 ] , wire - frames [ 17 ] , etc . ) and enforcement of visual constraints [ 3 , 4 , 7 ] . Conversely , perspective - based parsing [ 17 ] and accounting for user error in the manipulation of the objects [ 7 ] help inform systems about the users’ perspective and intentions . Spatial parsers that only respond to one goal limit their ability to be reused in other domains and applications . 3 . FLAPS APPROACH Limitations with prior spatial parsers reduce the effectiveness of spatial hypertext functionality , such as the automatic adaptation of documents . However , there are still unresolved questions that need to be addressed in order to improve the general effectiveness of spatial parsers , including the following : • How to enhance the parsers’ support of ambiguity ? • How to address the needs of system designers , document authors and document readers ? • How to address the potential conflict between the two main goals of spatial parsers ? In order to answer these questions , we have created FLAPS , an adaptive spatial parser that uses fuzzy - logic inference mechanisms in order to parse ambiguous structures capable of being interpreted in alternative ways . FLAPS is a Java - based must - have desired don’t care urgent soon whenever parser and has already been integrated into three different applications : WARP [ 5 ] , VKB [ 21 ] , and GRC [ 15 ] . The subsequent sections detail the FLAPS approach at the design and implementation levels and explain how it answers the three questions above . Since FLAPS considers only 2 - D spaces that allow objects to overlap , the discussion centers on 2 - D structures . 3 . 1 Interpretation of Ambiguous Structures As mentioned before , one of the strengths of spatial hypermedia is its support for the expression of ambiguous relationships that can be interpreted in various ways . However , the approach used by previous spatial parsers was to resolve the ambiguity by identifying the best interpretation and discarding all others . This compromises the systems’ ability to understand the users due to the possibility of spatial parsers erring in the selection of the best interpretation . Furthermore , this approach impedes systems from actively participating in the reflection - in / on - action processes , as it conceals from them alternative interpretations that the users might be considering . Given its relevance for spatial hypermedia , a parsing approach that embraces ambiguity rather than combats it seems more appropriate . The output of most spatial parsers is a containment hierarchy of objects in visual structures . A significant difference between FLAPS and other parsers is that it produces containment graphs where each node ( representing an object or composite ) can have multiple parent nodes . Nodes with multiple parents occur frequently , as they are the result of intersecting structures , such as the vertical and horizontal lists shown in Figure 3 . Figure 3 . Recognition of a single parent vs . multiple parents At the center - top of Figure 3 there are six objects that are being presented to the users . The arrows point to the structural inferences and corresponding relationship graphs of two different spatial parsers . In this example , the single parent graph parser selects the vertical list interpretation , while the alternative horizontal list interpretation ( shown faded out and left of the selected interpretation ) is discarded – or not even inferred , depending on the specific parser implementation . In contrast , FLAPS produces a single structural inference made of a vertical list intersecting a horizontal list . This structural inference – like any other with intersecting composites – can be interpreted in various ways . The FLAPS containment graph in Figure 3 shows how the object in the intersection belongs to both lists . This affects bottom - up algorithms such as hierarchical click selection [ 20 ] and conflict detection and propagation [ 3 , 4 ] since they must choose between alternative paths when traversing up the relationship graph , as illustrated in Figure 4 . Figure 4 . Alternative hierarchical click selection Figure 4 provides an example of a user conducting a hierarchical click selection with the FLAPS structural inference of Figure 3 . On the first click , the user selects the object in the middle of the structure . When the user clicks for a second time , the system needs to decide which path to traverse . FLAPS facilitates this decision by providing an estimation of its confidence on the inference for each parent composite . In the example above , the system first chooses the vertical list , as its confidence value is higher . However , this was the “wrong” decision since the user wanted to select the horizontal list . FLAPS can recover from wrong inferences , thanks to its alternative interpretations . In the example above , the user is able to switch to an alternative path by clicking once more while simultaneously pressing down the ALT - key . This deselects the vertical list and selects the horizontal list . Would the user click for a fourth time , the overall structure is selected . Of course , using the ALT - key is only one possibility of how to implement an alternative hierarchical click selection . Systems can implement other techniques for users to signal their desire to change to alternative interpretations . The alternative hierarchical click selection , in addition to allowing users to choose between alternative structural interpretations , can also be exploited as a feedback mechanism in order to adjust FLAPS’ inference mechanisms . Ambiguity poses a two - level challenge for spatial parsers . Not only do parsers need to manage and consider alternative inferences by independent structure recognizers , but , at a lower level , their recognizers also need to be able to infer the structures from user - generated arrangements . These arrangements are normally imprecise . Frequently , the inter - object distance and alignment varies widely and the object similarity is determined by a varying set of visual characteristics ( e . g . some objects have the same border color but different backgrounds ) . FLAPS addresses this low - level ambiguity by using fuzzy - logic - based recognizers and the high - level ambiguity by automatically merging the alternative interpretations provided by independent recognizers . The following sections elaborate on these approaches . 3 . 1 . 1 Independent Fuzzy - Logic Recognizers Currently FLAPS provides recognizers for piles , vertical lists , horizontal lists , one - to - one , one - to - many , and many - to - many relationships . Examples of these structures are shown in Figure 5 . 3 1 Click 4 Click 0 . 80 0 . 75 Alt + Click 0 . 80 0 . 75 2 Click 0 . 80 0 . 75 Single Parent Graph FLAPS Multi - Parent Graph Figure 5 . FLAPS structure recognizers Each structure recognizer makes their inferences by analyzing the proximity , regularity and similarity of the objects . Proximity and regularity are determined by the relative distance and alignment between objects . The evaluation of the similarity depends on the type of the objects ( e . g . Text , Image , etc . ) and the visual characteristics of the objects ( e . g . background color , border color , font size , etc . ) While Igarashi et al . [ 9 ] used a very simplistic fuzziness in their computations , the structure recognizers in FLAPS use a full - fledged fuzzy - logic inference engine . This allows them to directly encode human heuristics for composite recognition . For instance , when determining if two objects belong in a vertical list , the recognizer uses rules like : “If the objects are close to each other AND their vertical alignment is good , THEN their relationship is strong . ” Linguistic variables such as “close” , “good” and “strong” are described by fuzzy sets . Fuzzy sets define the set of crisp values ( e . g . 46 . 08 % ) that belong to the linguistic variables . Crisp values can partially belong to more than one fuzzy set , since these can have soft edges ( membership varies from 0 to 1 ) . The set of all linguistic variables sets that completely define the whole possible range for a variable is called a term set [ 22 ] . Figure 6 shows the term set for object distance used by the vertical list recognizer . Figure 6 . Fuzzy set for proximity evaluation The recognizers’ fuzzy - logic inference engine uses fuzzy - logic functions ( AND , IMPLY ) in order to compute the degree of membership to each fuzzy set consequent in each rule . The inferences of all rules are then combined using an OR operation resulting in a new fuzzy conclusion . This inferred conclusion is then defuzzified into a crisp value . This value is the recognizers’ estimation of the relationship . Figure 7 shows the whole process . The inference process in Figure 7 considers two rules ( shown in the bottom - left corner ) . Given two crisp values for the distance and alignment ( i . e . 46 % and 75 % respectively ) the inference engine evaluates each condition by computing their membership to each fuzzy set ( i . e . a distance of 46 % is 0 . 6 moderate and 0 . 4 close ; an alignment of 75 % is 1 . 0 good ) . The distance and alignment conditions are then combined using the min operation , which obtains the membership value of the intersection of both conditions . This value is used in order to compute the membership of the consequents . In the example above , this is done using the min operation , which “clips” the consequents of each rule to 0 . 4 and 0 . 6 respectively , as seen in the top - right corner of Figure 7 ( i . e . a distance that is 0 . 4 close AND an alignment that is 1 . 0 good IMPLY a 0 . 4 strong relationship ) . The conclusion is then obtained by combining the consequents the max operation ( graphically , this overlaps the consequents ) . Finally the conclusion is defuzzified by computing its centroid ( i . e . 62 ) . This value is the estimation of the relationship . The use of the min , max , and centroid follows the Mamdani model and ensures mathematical consistency [ 22 ] . Other models exist ( e . g . TSK ) that use other operations such as product and sum . Figure 7 . Fuzzy - logic inference Fuzzy - logic provides the mathematical methods necessary for dealing with the imprecision of human - generated arrangements . Its natural expression of rules also facilitates the encoding of human expertise into machine - usable algorithms . In addition , these rules can be clearly expressed to the users in easy to understand terminology , which allows them to comprehend the internal functionality of the recognizers such that they are able to configure and fine - tune the system . Figure 8 . Vertical list recognizer interface Each particular structure recognizer consists of a set of rules . Figure 8 shows the user interface for editing the vertical list recognizer . While it is not necessary that recognizers use fuzzy - logic for FLAPS to use their inferences , we have found this approach very beneficial for dealing with very loose structures . 0 10 40 50 80 90 1 20 13 0 % of size of larger object o v e r l a p c l o s e m ode r a t e r e m o t e f a r 1 0 Distance = { overlap , adjacent , close , moderate , far , remote } ad j a c e n t 1 0 Distance 1 0 good 0 90 60 70 100 good c l o se m od e r a t e 0 10 40 50 80 90 0 90 60 70 100 m o d e r a t e s t r ong 30 40 0 90 70 100 30 40 Relationship Alignment IF Distance is close AND Alignment is good THEN relationship is strong IF Distance is moderate AND Alignment is good THEN relationship is moderate 60 46 % 75 % 62 0 . 4 0 . 6 A ND A ND Pile Horizontal List Vertical List One - to - One Many - to - Many One - to - Many 3 . 1 . 2 Parallel Structure Recognition and Merging FLAPS is a multi - pass algorithm . It uses a bottom - up approach in order to generate the containment graph . FLAPS’ main parse procedure is simple : recognize as many structures as possible and then merge them into a single coherent interpretation ; repeat the process with the addition of the recently recognized structures ; and keep doing this until no more structures are recognized . In order to find every structure , FLAPS passes the whole space to every recognizer . This allows them to infer their structures independently , without interferences or interdependencies . While the complete independence of its recognizers allows FLAPS to obtain alternative interpretations of the structure at every level of the containment graph , it also drives the need to combine all the inferences coherently . FLAPS explores a minimalist approach to merging where structures are combined by comparing which objects are included in both composites , as shown in Figure 9 . Figure 9K . Merging Strategies As shown in Figure 9 , the first two cases do not require any special merging action since independent structures do not interact and , as previously seen , intersecting structures are easily managed by FLAPS . In the third case , one structure is a subset of another . In this case the merging absorbs the subset and corrects the relationship graph . Finally when two recognizers distinguish two types of structures with exactly the same components , the merging joins them into a new structure with a compound type ( 50 % type A and 50 % type B ) . This simple approach allows the merging of any kind of structure with disregard to their particular properties . This feature augments the extensibility of FLAPS by significantly facilitating the use of independent plug - and - play recognizers . In addition , the automatic merging of structures inferred by independent fuzzy - logic - based recognizers enhances the support of ambiguity . 3 . 2 Configuration and Adaptation One design goal for this project was to create a spatial parser that could be easily adjusted in respond to the needs of all stakeholders . As a result , FLAPS was designed to support manual configuration and automatic adaptation . The following sections expand on these aspects . 3 . 2 . 1 User Configuration While FLAPS provides a default configuration such that it is ready for integration into new applications , it also allows programmers to initialize and reconfigure it . This way , programmers can adjust and extend FLAPS default functionality such that it can be reused in other applications and domains . However , the need for the ability to configure spatial parsers is not limited to application programmers . Since the programmers cannot predict the needs of every user , they need to provide spatial parsers that can also be configured by the users . However , user configuration can be complicated in presentation - oriented spatial hypermedia [ 5 , 21 ] , where the author and reader of spatial hypermedia documents are not the same person . Authors have a good understanding of the characteristics of their specific documents and thus know what visual structures are meant to convey meaning to readers . In our work on WARP [ 5 ] authors specify which recognizers are available to the readers and whether the recognizers evaluate object similarity based on object type and / or visual style . While authors may have created their documents for particular purposes and audiences , readers may not meet these assumptions . As a result , readers may want to identify and interact with alternative structures in the document . To do so , the user can open WARP’s parser configuration controls , shown in Figure 10 ( right ) . Readers can activate or deactivate the recognizers and change their similarity evaluation . Readers can also determine the maximum complexity of the parsing ( i . e . the maximum containment graph depth in Figure 3 ) . This is a useful setting in cases where only a quick and superficial parsing is necessary . Figure 10 . Example of Spatial Parsing using FLAPS in WARP Finally , readers can specify how recognized structures are visually presented . For example , in Figure 10 WARP is using its default visual feedback technique in which the inferred structures are rendered as semi - transparent colored regions . However , if they wish to , users can change this visualization technique to dotted lines and select whether or not to label the structures . 3 . 2 . 2 Adaptation While user configuration is fundamental , users do not always expend the time and effort to configure their applications . Systems can help users by adapting the spatial parsers for them . As previously noted , other spatial hypermedia systems have already explored some ways to adapt spatial parsers . These adaptations often provided some automation or facilitation of the configuration tasks otherwise performed by the users . For instance , VIKI and VKB adapt the parser functionality based on Excludes A B A B Independent structures : No action is needed Intersects A B A B FLAPS can deal with this : No action is needed I II III IV Contains A B A B A B Absorb Same set AB A B AB Join the analysis of the document’s overall layout orientation . This is an example of automatically adapting to the particular data or task underway . Another example of how systems can help users in adjusting the parsers configuration is the approach offered by Igarashi et al . Their approach allows readers to configure the parser transparently by simply correcting its “wrong” inferences . However , this approach relies on prolonged use of the system by the same user . Different readers use and perceive spatial structures differently . In response to this , the spatial parser in TOPOS [ 17 ] employs user profiles in order to set the parser parameters in accordance with the individual user requirements . The MASH / WARP project has explored the use of independent adaptation models to guide the overall adaptation of spatial hypermedia systems including their spatial parsers [ 4 ] . Thus , the WARP instantiation of FLAPS allows a varying set of multiple models to jointly configure it . This enables the utilization of user profiles , as in TOPOS , along with additional models suggesting parser configurations based on the document , the task , or collaborating users . While this approach provides a way to adapt the spatial parser , system designers must create the models . In the future we plan to explore the use of machine learning algorithms in order to transparently adjust the models based on user interactions with the content , such as hierarchical clicks and restructuring of the space . 3 . 3 Duality of Purpose The FLAPS design considers the possibility of simultaneously having multiple parser instantiations . This enables systems to construct alternative interpretations of the space based on alternative perspectives . For instance one instantiation might be configured to match to the users’ perspectives while the other instantiation might be configured such that helps users discover the “real” structure of the information . As a result , FLAPS can be easily reused in different domains and applications as they can respond to both goals of spatial parsers , even in environments that create a dichotomy between the two of them . 3 . 4 FLAPS Effectiveness Depending on its configuration , FLAPS can generate very different structural inferences for the same spatial hypertext . While this flexibility enables FLAPS to respond to different scenarios of use , it also forces the question of how to provide a default configuration that meets general user expectations . Consider VKB’s original parser . It provides a consistent functionality modeled on observations of user behaviors , which allows it to recognize commonly used structures . Since VKB has been used continuously for several years with a consistent spatial parsing functionality , VKB users have become accustomed to its inferences and have certain expectations of the parser behavior . Having fully integrated FLAPS into VKB , it was decided to set its baseline functionality such that it would provide structural inferences similar to VKB’s original parser . This way , the use of the new parser would offer the new alternative structures without clashing with the users’ expectations . Figure 11 presents two structural inferences in VKB , one using its original parser and the other using FLAPS . In both cases VKB provides visual feedback using shadows . By observing Figure 11 , it is clear that both parsers identify the same groups . The original parser is more hierarchic with a deeper relationship graph ( as indicated by the darker color of the shadows ) . Both parsers recognize that there is one group made of six subgroups , and each subgroup is composed of three components . However , it is possible to observe differences between the two parsers . Most noticeable is the complexity of the structural inference . The original parser , due to a limitation of recognizing composites made of only two constituents , produces an extra level in the hierarchy creating subgroups out of their three components . Both parsers also recognize that the subgroups are similar , and have grouped them together . The original parser recognizes this structure as a horizontal list of vertical lists of subgroups . In contrast the FLAPS structure is simpler with only three hierarchy levels in its graph . This is partly due to FLAPS use of the many - to - many recognizer . Figure 11 . Comparison of Spatial Parsers in VKB VKB using Original Spatial Parser VKB using FLAPS The intersecting structures provided by FLAPS can be unintuitive at times . For instance , Figure 12 shows VKB being used to write a paper where the user has created six labeled lists . While FLAPS recognizes all of these lists , it also identifies some horizontal lists between objects . Also , FLAPS creates a single level structure for each labeled list where the original parser creates a two - level structure that better represents the intended structure . VKB’s original parser identifies five of the six lists correctly , missing that the two offset objects are also part of the “A new framework” list . The original parser’s ability to recognize implicit object types combined with its composite recognizer is effective in recognizing the inner details of structures while the fuzzy - matching ability of FLAPS recognizes larger structures more consistently . Observations of differences between user - intention and parsed structure have motivated improvements for FLAPS currently underway . These enhancements attempt to augment FLAPS capacity to identify composites in addition to explore the use of the structures’ specific characteristics in order to decide whether to preserve or resolve the ambiguity in the inference . 4 . CONCLUSSIONS For spatial hypermedia systems to take an active role in supporting users there must be a shared understanding between users and systems . Creating this shared understanding is the role of spatial parsers . A number of spatial hypertext systems already use spatial parser inferences in order to enhance their support of advanced functionality . Additionally , systems are using the parsers’ structural interpretation in order to infer user interests and reflections such that they can anticipate future user action . However , the effectiveness of spatial parsers depends on their design approaches and implementation features . This paper identifies some of the approaches and features that have a significant effect on the parsers’ effectiveness in areas such as ambiguity support , extensibility , flexibility , support of shared and distributed information spaces , and responsiveness . The review of the previous spatial parsers revealed the need for further improvements in the areas of ambiguity support , parser flexibility and support for the two , possibly incompatible , goals of spatial parsers . This motivated the development of FLAPS , a fuzzy logic adaptive spatial parser that addresses these issues . FLAPS automatic merging of structures inferred by independent fuzzy - logic - based recognizers enhances the support of ambiguity . This allows FLAPS to not only cope with ambiguous layouts but also to take advantage of the ambiguity in order to find alternative interpretations of the information , which increases the systems’ ability to participate in the reflection - in / on - action processes . Flexibility is enhanced by supporting manual configuration and automatic adaptation of the spatial parser . These make it easy to reuse FLAPS in different domains and applications . FLAPS is designed such that multiple instantiations can coexist . This augments FLAPS’ responsiveness by allowing it to address the two goals of spatial parsers simultaneously . Comparing FLAPS to VKB’s original parser shows that while there are some hierarchical differences in the relationship graphs , FLAPS can provide a default functionality that detects structures similar to VKB’s original spatial parser . The comparison indicates that FLAPS’ fuzzy - logic - based recognition is better at recognizing high - level structures accurately than the brittle rule - based approach of the original parser . It also exposed value of the original parser’s composite recognition for understanding the details of visual structure in the spatial hypertext . We have observed that some complex arrangements such as labeled lists are frequently used by spatial hypermedia users . These arrangements are hierarchical structures comprising objects and other structures ( e . g . lists ) . We plan to extend the set of available recognizers in order to directly recognize complex arrangements which are commonly used . Additionally , we are investigating the inclusion of temporal and textual metrics based on the inclusion of the objects in the space and the objects’ metadata and textual contents . Figure 12 . Comparison of Spatial Parsers in VKB VKB using Original Spatial Parser VKB using FLAPS Future studies are still required in order to validate which kind of structures better serve the users and evaluate the effectiveness of adapting the spatial parsing process . These studies need to evaluate how different approaches to spatial parsing affect the way that people express themselves spatially . Also related to the process of adaptation , we are investigating the use of machine learning algorithms in order to transparently adjust the parser and models based on user interactions such as hierarchical clicks . 5 . ACKNOWLEDGMENTS This work is partially funded by NSF grants IIS - 0438887 and DUE - 0226321 . 6 . REFERENCES [ 1 ] Buchanan G . , Blanford , A . , and Jones , M . Integrating Information Seeking and Structuring : Exploring the Role of Spatial Hypertext in a Digital Library . In Proceedings of the Fifteenth ACM Conference on Hypertext & Hypermedia ( 2004 ) ACM Press , pp . 225 - 234 . [ 2 ] Francisco - Revilla L . , and Shipman , F . M . Instructional Information in Adaptive Spatial Hypertext . In Proceedings of Document Engineering 2004 ( 2004 ) ACM Press , pp . 124 - 133 . [ 3 ] Francisco - Revilla L . , and Shipman , F . M . Managing Conflict in Multi - model Adaptive Hypertext . In Proceedings of the Fifteenth ACM Conference on Hypertext & Hypermedia ( 2004 ) ACM Press , pp . 237 - 238 . [ 4 ] Francisco - Revilla L , Multi - model Adaptive Spatial Hypermedia . Ph . D . Dissertation , , Texas A & M University , College Station , TX , 2005 . [ 5 ] Francisco - Revilla L . , and Shipman , F . M . WARP : a Web - based Dynamic Spatial Hypertext . In Proceedings of the Fifteenth ACM Conference on Hypertext & Hypermedia ( 2004 ) ACM Press , pp . 235 - 236 . [ 6 ] Grønbæck , K , Vestergaard , P . P . , and Ørbæck , P . Towards Geo - Spatial hypermedia : Concepts and Prototype Implementation . In Proceedings of the 13th ACM Conference on Hypertext and Hypermedia ( 2002 ) ACM Press , pp . 117 - 126 . [ 7 ] Hsieh , H . and Shipman , F . , VITE : A Visual Interface Supporting the Direct Manipulation of Structured Data Using Two - Way Mappings . In Proceedings of ACM Conference on Intelligent User Interfaces 2000 ( 2000 ) ACM Press , pp . 141 - 148 . [ 8 ] Kidd , A . The Marks are on the Knowledge Worker . In Proceedings of the ACM CHI Conference ( 1994 ) , ACM Press , pp . 186 - 191 . [ 9 ] Igarashi , T . , Matsuoka , S . , and Masui , T . Adaptive Recognition of Ipmlicit Structures in Human - Organized Layouts . In Proceedings . of the 11 th IEEE Symposium on Visual Languages , VL’95 ( 1995 ) ACM Press , pp . 258 - 266 . [ 10 ] Malone , T . W . How do People Organise their Desks ? Implications for the Design of Office Information Systems . In ACM Transactions on Information Systems 1 : 1 ( January 1983 ) , ACM Press , pp . 99 - 112 . [ 11 ] Mancini , C . , and Shum , S . B . Cognitive Coherence Relations and Hypertext : From Cinematic Patterns to Scholarly Discourse . In Proceedings of the Twelfth ACM Conference on Hypertext and Hypermedia ( 2001 ) ACM Press , pp . 165 - 174 . [ 12 ] Marshall C . C . , Halasz , F . G . , Rogers , R . A . , and Janssen W . C . Jr . Aquanet : A Hypertext Tool to Hold Your Knowledge in Place . In Proceedings of the Third ACM Conference on Hypertext ( 1991 ) ACM Press , pp . 261 - 275 . [ 13 ] Marshall C . C . , and Shipman , F . M . Searching for the Missing Link : Discovering Implicit Structure in Spatial Hypertext . In Proceedings of 5th ACM Conference on Hypertext ( 1993 ) ACM Press , pp . 217 - 230 . [ 14 ] Marshall C . C . , Shipman , F . M . , and Coombs , J . H . VIKI : Spatial Hypertext Supporting Emergent Structure . In Proceedings of the 6th ACM European Conference on Hypermedia Technology ( 1994 ) ACM Press , pp . 13 - 23 . [ 15 ] Moore , J . M . Communicating Requirements Using End - User GUI Constructions with Argumentation . In Proceedings of the 18th IEEE International Conference on Automated Software Engineering ( 2003 ) , IEEE Computer Society , pp . 360 - 363 . [ 16 ] Nakakoji , K . , Yamamoto , Y . , Takada , S . , and Reeves , B . N . Two - Dimensional Spatial Positioning as a Means for Reflection in Design . In Proceedings of the Conference on Designing Interactive Systems ( 2000 ) ACM Press , pp . 145 - 153 . [ 17 ] Nielsen M . B . and Ørbæk , P . Finding Hyper - Structure in Space : Spatial Parsing in 3D . In The New Review of Hypermedia and Multimedia 7 : 1 ( July 2002 ) . Taylor & Francis , Inc , Bristol , PA , USA , pp . 153 - 183 . [ 18 ] Reinert , O . , Bucka - Lassen , D . , Pedersen , C . A . , and Nurnberg , P . CAOS : A Collaborative and Open Spatial Strucutre Service Component with Incremental Spatial Parsing . In Proceedings Hypertext’ 99 ( 1999 ) ACM Press , pp . 49 - 50 . [ 19 ] Schoen , D . A . The Reflective Practitioner : How Professionals Think in Action , Basic Books , NY , 1983 . [ 20 ] Shipman , F . M . , Marshall , C . C . , and Moran , T . P . Finding and Using Implicit Structure in Human Organized Spatial Layouts of Information . In Proceedings of CHI ' 95 ( 1995 ) ACM Press , pp . 346 - 353 . [ 21 ] Shipman , F . , Hsieh , H . , and Airhart , R . , Maloor , P . , and Moore , J . M . The Visual Knowledge Builder : A Second Generation Spatial Hypertext . In Proceedings of Hypertext 2001 ( 2001 ) ACM Press , pp . 113 - 122 . [ 22 ] Yen , J . and Langari , R . Fuzzy Logic : Intelligence , Control , and Information . Prentice Hall , Englewood Cliffs , New Jersey . 1999 .