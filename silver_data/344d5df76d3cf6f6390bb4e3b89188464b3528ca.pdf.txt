82 Int . J . Advanced Intelligence Paradigms , Vol . 7 , No . 1 , 2015 Copyright © 2015 Inderscience Enterprises Ltd . A conscious model for autonomous robotics : statistical evaluation Daniela Lopez De Luise * , Lucas Martín Rancez and Nelson Biedma Computational Intelligence and Information Systems Lab ( CI2S Lab ) , Buenos Aires , Argentina Email : mdldl @ ci2s . com . ar Email : lrancez @ ci2s . com . ar Email : nbiedma @ ci2s . com . ar * Corresponding author Bernardo De Elía Escuela Superior Técnica , Facultad de Ingenieriá del Ejército , Buenos Aires , Argentina Email : bdelia @ ci2s . com . ar Abstract : Autonomous mobile robots require efficient control of their movement . This paper focuses on a prototype based on CO delet FRAM ework ( COFRAM ) consciousness model for autonomous mobile robots . The prototype is named M ovement Of A utonomous R obotics Co delet S ystem ( MARCOS ) . Here is an in - depth analysis of this nonlinear controller that complements a main close - loop controller . It performs complex information processing about the current robot status and environment , and suggests alternative reactions to the main controller . This paper describes MARCOS and COFRAM , as well as statistics on how concepts evolve for real - world indoor environments . From the results , it can be said that it is a suitable adaptive controller for learning situations . Keywords : consciousness ; autonomous mobile robots ; codelets ; COFRAM ; indoor environments ; adaptive learning ; intelligence paradigms . Reference to this paper should be made as follows : De Luise , D . L . , Rancez , L . M . , Biedma , N . and De Elía , B . ( 2015 ) ‘A conscious model for autonomous robotics : statistical evaluation’ , Int . J . Advanced Intelligence Paradigms , Vol . 7 , No . 1 , pp . 82 – 107 . Biographical notes : Daniela López De Luise has a degree in System Analysis ( UBA ) , Engineering degree in Computer Science ( Spain writ : 2004 / H04041 ) , Expert System Engineering ( ITBA ) , and PhD in Computing Science ( UNLP ) . She is a Professor of subjects related to artificial intelligence and computational linguistics . She is the IEEE Argentina President , Founder of the local chapter of IEEE Computational Intelligence Society ( and currently member of directive board ) , Steering Committee of LA - CCI society , Director and Founder of CI2S Lab . She is the creator of the morphosytactic linguistic wavelets for linguistics ( MLW ) , harmonics systems for time mining , and reasoning modelling using MLW . Her special topic of interest includes computational intelligence , reasoning and its applications . A conscious model for autonomous robotics 83 Lucas Martín Rancez has a degree in Computer Science . He has made several courses in the fields of artificial intelligence , machine learning , user tracking , system’s performance , cloud’s environment , database administration and distributed databases . He has specialised in team management , design patterns and in many programming languages . He has been a member of the IEEE ( 90487227 ) and a devoted member of the volunteer group CI2S ( www . ci2s . com . ar ) for several years , working in the evolution of the codelets and conceptual theories and studying its application into autonomous robots . He likes to learn and to help . He is also a philanthropist and a self - learned sociologist . Nelson Biedma is a Systems Engineer . He worked in several fields , such as IT security , connectivity , network and performance management , database engines like SQL Server , Oracle Server , DB2 , and development tools . Also , he devoted to independent development of management systems , using object orientations . Regarding basic science , he taught mathematical analysis , physics , and computing . Currently , he specialises in invention patent revision and technical advice . Also , he is a member of MARCOS research group , from CI2S laboratory , which works with computational intelligence applied to robotics , with autonomous movement robots . Bernardo De Elía is an Electronics Engineering student at EST University . He started collaboration with CI2S Lab since 2014 , focusing his work on odometer precision and robotics configuration . This paper is a revised and expanded version of a paper entitled ‘A conscious model for autonomous robotics : statistical evaluation’ presented at International Conference on Computer , Information Technology and Digital Media ( CitADiM ) 2013 Conference , Tehran , Iran , 13 – 18 October 2013 . 1 Introduction Mobile robots may be studied for outdoor or indoor environments . This paper describes part of an indoor mobile robot prototype named movement of autonomous robotics codelet system ( MARCOS ) . It uses a kernel named co delet fram ework ( COFRAM ) implementing concept learning ( based on conscious technology , Loia and Sessa , 2010 ) to process several movement parameters . The main goal of the MARCOS module is to provide the robot’s close - loop controller with recommendations about which commands should be performed next . Because autonomous mobile robots must navigate in dynamic environments , they require a large collection of environmental information , efficient storage and good processing capabilities . In the following sections , there is a description of the basic features of the concept model ( Section 2 ) , a general overview of the problem solving strategy used by COFRAM ( Section 3 ) , the benefits of working with COFRAM ( Section 4 ) , the obsolescence approach as a mechanism to improve resources usage and strategies ( Section 5 ) , and the status of the implementation and future work ( Section 6 ) . 84 D . L . De Luise et al . 2 The concept model MARCOS is a prototype of an homonym project . It extends COFRAM , a framework that aims to be an implementation of a conscious model ( Baars , 1998 ; Baars and Franklin , 2003 ; Baddeley and Hitch , 1974 ; Varela et al . , 1991 ; Franklin et al . , 2005 ; Sloman , 1999 ) inspired on Hofstadter theory ( Hofstadter et al . , 1994 ) . COFRAM was inspired by LIDA ( Franklin and Patterson , 2006 ; Baars and Franklin , 2009 ) and FLEXO ( Vanschoren , 2004 ) . It contains some of their functionalities ( Franklin and Graesser , 1996 ; Franklin et al . , 2003 ; McCauley and Franklin , 2002 ; Posadas et al . , 2008 ) , but there is an important difference with them : COFRAM is not intended to be a concrete conscious model , rather a framework for defining conscious models according to specific problems . Artefacts are components of a meta - model framework . This meta - model was used to define a specific model ( MARCOS ) that let , for example , a robot move around even with basic abilities . The approach used in the prototype basically implements minimal pieces of code ( codelets ) with a minimum of processing ability and intelligence . Problem solving is a consequence of synergistic behaviours . 3 MARCOS as a COFRAM implementation MARCOS implements the framework COFRAM . The prototype is an autonomous indoor mobile robot adviser with obstacle conceptualisation for dynamic environments ( Zendera et al . , 2008 ; Barsalou , 1999 ; Glenberg , 1997 ; Baddeley et al . , 2001 ) . This project contributes to the field as follows : • it applies conceptual learning theories to robotics • it allows the evaluation of statistical information about the robots performance using consciousness • it enables a simple robot to adapt itself to controlled dynamic environments . 3 . 1 Architecture The architecture has a dual - loop feedback system : one for immediate decisions ( the RTC , or real time controller ) and the other for middle to long - term strategies ( let name it RTA , or robot task adviser ) . MARCOS is an RTA implementation . In the rest of this paper , both names will be used as synonyms . 3 . 1 . 1 Real time controller The RTC is involved in the direct communication with sensors . It aims to : • communicate the relevant sensor data to the RTA • send commands to the robot’s engines • take quick decisions for risky events . A conscious model for autonomous robotics 85 If it is required a prompt response , the RTC may ignore the RTA commands and execute some basic movements , for example to avoid collisions . The RTC is a typical close - loop algorithm ( Williams , 2014 ) as in Figure 1 . Mobile robot localisation is commonly addressed using laser , ultrasonic , magnetic or other sensor based information ( Kolski et al . , 2006 ) . The information from these sensors is used to manage the environment and to determine the robot’s position using a suitable algorithm ( Lecking et al . , 2008 ; Eberst et al . , 2000 ; MacPherson , 1993 ; Matelln and Caas , 2006 ; Hayet et al . , 2002 ; Gutmann and Fox , 2002 ) . It is the duty of the RTC to manage data from sensors . The current robot configuration has few devices , because the focus of the prototype is on the behaviour analysis and global performance of the COFRAM model II . Due to this configuration flexibility , the RTA is complex , in order to compensate all the extra information required to work properly . Figure 1 Close - loop algorithm Retrieve obstacle information from sensor If distance to obstacle is greater than ϑ a . move ahead one step b . go to 1 else a . if not already turned right 3 times turn right 90 degrees i . go to 1 b . else i . end As the MARCOS prototype ( Section 3 ) has been implemented for indoor environments ( to simplify the localisation problem ) , the MARCOS project uses just ultrasonic technology . The ultrasonic sensors used by MARCOS receive transmission streams to obtain the distance between the sensor and an obstacle . With that information , it updates its world map with the obstacles found . 3 . 1 . 2 Robot task adviser The RTA is intended for advanced adaptive behaviours . It is responsible for the following tasks : • Fast recognition of known objects : The environment contains several objects which are physically detected and mapped against previously learned concepts . Additionally , they can be grouped into categories . Examples of categories are targetable , forgettable , etc . This way , targetable objects can have specific concepts associated , and therefore distinct logical treatments . • Creation of a dynamic world map : The robot builds a virtual map as it learns about the objects in the environment . This map is used for location and to build paths to the goals . 86 D . L . De Luise et al . • Construction and submission of recommendations to the RTC : With all the information , MARCOS can create complex strategies to achieve its targets . Then reduces that strategy into commands that are designed to be used by the RTC . Those task give to MARCOS the ability to : 1 Recognise learned obstacles : It finds obstacles physically similar to previously encountered ones . To do this , it is important to define similarity metrics . 2 Recognise new obstacles : Unknown obstacles are objects that cannot be recognised . In these situations , MARCOS can provide specific advices to the robot . 3 Recognise dangerous environments : Environment can be very complex ( e . g . , because of people and other machines moving around ) . The prototype can process as dangerous any unknown object . 4 Processing and learning based on experience : Data from the environment and robot’s concepts optimise the robots behaviour by updating its dynamic knowledge database . 5 Define new actions : the prototype can be trained to detect special situations and to perform low priority commands ( akin to suggestions ) to the RTC . 3 . 2 Technical overview The implementation of COFRAM currently requires Java , a minimum of 50 Mb of hard disk storage and , at least a 1 . 2 GHz processor . The overall architecture of the MARCOS prototype can be seen in Figure 2 ( De Luise et al . , 2013 ) . Software was defined with several object - oriented design patterns to provide the source code with flexibility and readability . The robot is an ARDUINO connected to the RTC which interacts with MARCOS . Figure 2 MARCOS global architecture A conscious model for autonomous robotics 87 3 . 3 MARCOS workflow To deploy the functionalities , the system activates concepts that model certain initial knowledge : that is the genetic knowledge , a group of predefined concepts that include target management , the initial coordinates , etc . Then , the RTC ( Section 3 . 1 . 1 ) starts its life - cycle . When the robot starts working , sensor streams are sent to the RTC , and are pre - processed looking for risk situations and pass the information to MARCOS . When the robot sends a data - stream to RTC , it answers after a short time with a command to the robot , and sends data to the controller . When the robot detects a certain obstacle , it determines the type of concept corresponding to the obstacle . If there is no concept for the obstacle , it inserts a new concept and returns a meta - command denoting the obstacle as an unknown object , and assigning it a previously defined action ( e . g . , to elude it ) . Along with this , MARCOS calculates a number indicating the relevance of the RTA suggestion ( Section 3 . 1 . 2 ) . In the case of a known concept , MARCOS uses available information and related concepts to select the best meta - command to be sent . RTC eventually receives the meta - command . Using the meta - command and the refreshed environment information , the RTC will decide whether or not to change the robot’s behaviour . Figure 3 shows an overview of the main subsystems ( De Luise et al . , 2013 ) . The diagram shows main components of COFRAM with dashed lines . Solid lines indicate which components belong to the derived MARCOS robot implementation . The prototype uses a set of specialised functionalities that are needed for an autonomous - mobile robot and are not part of the COFRAM framework ( Section 2 ) . Percepts are created from the meta - data sent by the RTC . Figure 3 MARCOS workflow 88 D . L . De Luise et al . Data goes through MARCOS input interface and enters the workspace . The workspace represents a collection of concepts . Inside the workspace , the concepts are grouped by workplanes . The workspace is first populated with percepts , which are unique conceptual information units directly associated with the information coming into the system , sensors data for example ( Barsalou , 1999 ) . The workspace evaluator will select the best workplane and push it into a pile . The queue evaluator pops the best workplane and extracts the proper information from it to feed to the MARCOS output interface . The COFRAM evaluator is a general purpose comparator that was defined as the workspace evaluator . To perform these comparisons , a structure like java interface comparable is used and implemented . Although it uses functions instead of items for the comparison . MARCOS also has small agents called codelets . The task of the codelets is to handle concepts in order to achieve the robot’s objectives . The codelets elaborate strategies and new derivation of the current strategies . Codelet activation ( i . e . , execution ) follows the same principles as in LIDA and FLEXO : probability is used to rank codelets in a cluster of possible codelets named coderack . The codelet scheduler will manage the general activation approach for all codelets . However , codelets are not handled directly , rather they are categorised and handled in sets or categories . It is expected that any specific model could define sets of the appropriate size , ranging from one to many codelets . There is another scheduler , the coderack scheduler , which is only present in COFRAM and serves as an interactive tool to allow incremental design in parallel with the working model . If the model detects an unknown concept using a threshold and similarity criteria , the environment adaptation manager ( EAM ) will detect it and deploy tools to extend the current model . Perhaps one of the most relevant characteristic of COFRAM is the concept of distance . Percept properties are those aspects of percepts that need regular updating . In FLEXO , all percepts in a workspace should have the same properties , to provide a means for comparing them . In COFRAM , comparators must be defined in every case to overload the default comparison criteria . In this way , every specific model can have its own metrics to evaluate relevance and distance between percepts and concepts . The workspace evaluator is the kernel of these metrics . Codelet creates a special concept to alert the EAM ( see Figure 4 , De Luise et al . , 2013 ) , when new external knowledge is required ( which will eventually require an operator interaction ) . This is one of the main artefacts of that COFRAM meta - model framework that is not defined in LIDA , IDA , or FLEXO . Note that even when the concept is not totally recognised , the model will keep working , replacing it with the closest current concept . EAM is a general purpose module that also provides tools for issues that are specific to the current model ( i . e . , MARCOS ) , such as sampling parameters , mapping tasks to execution threads , accelerating codelets according to the current devices being used , types of world - map , etc . A conscious model for autonomous robotics 89 Figure 4 The general COFRAM workflow There are also two knowledge databases : one for the short term knowledge and another for the long term knowledge as in Ericsson and Kintsch ( 1995 ) . Information is uploaded from the former during initialisation of the codelets and workplanes . Later it is used for off - line activities and for statistical evaluations . The prototype performs a very basic data processing and submits information to the kernel . Then it activates COFRAM functionalities to let it translate concepts ( i . e . , receiving real world information and gathering knowledge about obstacles ) , perform complementary information managing . After that , it builds an internal map within its local dynamic knowledge database , and performs proper updates and makes decisions about the robot activity . The main storage of MARCOS is its dynamic knowledge database , which holds key information on life cycle management and specific data to improve performance . Unlike implementations such as NaviGates ( Knotts et al . , 2007 ) , the global architecture splits the controller into levels of processing . This way , RTC can perform its tasks independently ( with or without RTA ) . MARCOS is not just an adaptation of previous conscious theories , but a new modelling framework for consciousness . It does not mimic human brain activities . COFRAM defines a set of basic artefacts to provide assistance and repetition to the modelling process . In this new model , patterns are concepts handled by codelets with a specific task inside a coderack ( a set of small agents each having a very specific portion of code ) . With autonomous mobile robots , real time answers require fast processing of external information , and critical signals must be processed with a specific workflow that does not exist in original conscious models . As a consequence of the learning process , 90 D . L . De Luise et al . concepts could be modified for certain situations . In this model , the recognised patterns may be not only for external objects but also for internal ones . 4 COFRAM performance tests This section describes tests performed with the current MARCOS prototype , in order to test the efficiency of COFRAM as a reasoning model and characteristics of the controller behaviour . 4 . 1 Tests description Four tests were performed using the same map ( see Figure 5 ) . The black dots are obstacles . This map’s width is 800 cm and its height is 600 cm . The conditions for tests were : 1 the same starting position in the map 2 the robot has to reach the opposite side of the map 3 the robot should avoid all obstacles . Figure 5 The world - map used for testing There are also some considerations : • The MARCOS knowledge was cleared after every test , but the Java VM memory cached some tasks , speeding - up certain processes . • The world - map is never pre - fetched to MARCOS , only the coordinates of the target , relative to the initial position of the robot . • There is no time limit during the test . • The project has an RTC but its emergency artefacts were disabled to isolate the prototype behaviour . RTC only feeds the sensor information to the system and executes its commands . A conscious model for autonomous robotics 91 Figure 6 Test traces ( see online version for colours ) 4 . 1 . 1 First run The first execution shows interesting behaviours ( see Figure 6 ) . The black line is the robot trace . The red marks represent obstacles . Only one obstacle is detected by MARCOS but , as the obstacle is not in the robots way , COFRAM does not need to modify the path . Remarks : • The trace is not straight to the destination . This is due to the strategies proposed not being yet tuned to depend on the robot’s location / status . • The path is biased by the number of proposed strategies , because the ability of COFRAM to propose strategies was restricted by a parameter . 4 . 1 . 2 Second run The second execution displayed on Figure 6 confirms the observations shown in Section 3 . 1 . Four obstacles were found and avoided without losing performance on the trace . This test allows other considerations : • Sometimes the robot goes against the target direction . This is due to the limitation of the amount of Strategies that can be proposed . • Some of the robot’s turns are very sharp , because the winner strategies are biased to save time . 4 . 1 . 3 Third run As shown in Figure 6 , in the third test , against the previous tests , the robot goes almost straight and most of the rotations are very soft . Three obstacles are found and the robot successfully avoids them without losing performance over the full path . 92 D . L . De Luise et al . 4 . 1 . 4 Fourth run Figure 6 shows the trace of the last test . On this path only one obstacle is found but MARCOS ignores it because it is not on the robots path . This path is pretty straight until near the end , where the best proposed Strategy was to turn slightly against the target . As stated before , the use of more complex statistics and previous knowledge will certainly improve this behaviour . 4 . 2 Log analysis The prototype records actions for later analysis . The logs used for this paper are limited to the most relevant data of this test cases . 1 Time to target : MARCOS is a double - threaded system . The CPU and RAM memory usage affect the performance . These differences can be observed in Figure 7 . There is a big difference between the first run timing and the rest . This can be explained by the fact that Java is able to enhance recently executed tasks . 2 Initial uncertainty : COFRAM builds almost all of the knowledge dynamically from the sensors’ information and from previous knowledge . Whenever MARCOS starts from scratch , the knowledge databases are empty and COFRAM cannot generate best strategies . Table 1 shows consequences of this state of uncertainty . Only 10 % of the strategies requested by COFRAM are discarded , but this is expected to improve with better order of the initial execution and adjusted codelets . 3 Proposed strategies types : The limited set of strategies types available just propose basic translations and rotations ( see Figure 8 and Figure 9 ) . Not all of them are necessarily executed . Figure 10 shows that a similar number of rotations and translations are proposed . Figure 7 Codelets execution ( vertical axis ) amount against the time - line ( horizontal axis ) ( see online version for colours ) A conscious model for autonomous robotics 93 Table 1 Proposal requests discarded by the lack of information Run no . Total strategies requested Total strategies proposed Discarded request First run 64 57 7 Second run 72 64 8 Third run 70 62 8 Figure 8 Codelets execution ( translation strategies ) proposed ( see online version for colours ) Figure 9 Codelets execution ( rotations strategies ) proposed ( see online version for colours ) Figure 10 Comparison between translations and rotations proposed ( see online version for colours ) 94 D . L . De Luise et al . 5 The obsolescence process Marcos has the ability to discard concepts , codelets and worplanes . As shown in Figure 3 , part of the life - cycle in MARCOS has an activation process that relates closely to the usage of these components . If a concepts is not used by any codelets , or a codelet does not succeed producing good concepts , or a workplane has poor strategies inside , they become obsolete . But this approach is limited due the need to keep old and well established components that were successful in the past for other environments . This mechanism is very important for practical reasons : the resources are limited and need to be optimised . The following tests evaluate codelets performance from resources point of view with and without obsolescence . Now , obstacles are not dots but images with two dimensions and maps are almost half the size of the previous tests , to be able to analyse logs . In all cases the prototype do not record knowledge from previous training ( i . e . , there is no initial external knowledge ) , therefore all the movements are built using the current strategies applied by the codelets that are stochastically fired during the test . The statistics tools applied in this section are Weka© and Infostat© . 5 . 1 Test without obstacles These are two tests with obsolescence ( let it name GC , as garbage collection ) , and two without it . Table 2 summarises the results . Images of the traces are also in Figure 11 through Figure 14 . Table 2 Summary of tests results without obstacles Description SGC 0OBJ . First test SGC 0OBJ . Second test nGC 0OBJ . First test nGC 0OBJ . Second test Trace # Codelets created 388 380 360 416 # Codelets executed 215 205 200 235 # Codelets rotation 42 46 38 39 # Codelets translation 40 42 37 43 # Concepts created 1 , 514 2 , 138 4 , 239 5 , 808 # Cell concepts created 42 , 642 27 , 249 60 , 392 72 , 810 # Concepts disposed 1 , 109 912 0 0 # Cell concepts disposed 36 , 989 20 , 533 0 0 # Strategies 288 310 263 285 # WP created 83 89 76 83 # WP disposed 67 67 0 0 Time spent 343 , 704 263 , 951 613 , 303 940 , 001 A conscious model for autonomous robotics 95 Figure 11 First test with garbage collection 0 objects Figure 12 Second test with garbage collection 0 objects Figure 13 First test without garbage collection 0 objects 96 D . L . De Luise et al . Figure 14 Second test without garbage collection 0 objects 5 . 2 Test with obstacles The world map defined has now two obstacles as shown in Figure 15 . Now all tests implement obsolescence ( that is GC , for garbage collection ) . Table 3 summarises the results . Images of the traces are also in Figure 16 through Figure 19 . Figure 15 Worldmap with two obstacles Table 3 Summary of tests results with obstacles and GC ( see online version for colours ) Description SGC 2 OBJ . First test SGC 2 OBJ . Second test SGC 2 OBJ . Third test SGC 2 OBJ . Fourth test Trace # Codelets created 505 217 696 574 # Codelets executed 67 51 110 320 # Codelets rotation 60 47 74 58 # Codelets translation 55 47 85 63 # Concepts created 2 , 717 1 , 032 2 , 999 4 , 269 # Cell concepts created 62 , 149 16 , 955 59 , 181 55 , 726 # Concepts disposed 960 443 1 , 215 1 , 090 # Cell concepts disposed 43 , 474 10 , 245 42 , 574 40 , 728 A conscious model for autonomous robotics 97 Table 3 Summary of tests results with obstacles and GC ( see online version for colours ) ( continued ) Description SGC 2 OBJ . First test SGC 2 OBJ . Second test SGC 2 OBJ . Third test SGC 2 OBJ . Fourth test # Strategies 405 181 551 421 # WP created 116 52 160 122 # WP disposed 67 51 110 75 Time spent 252 , 569 78 , 526 297 , 694 48 , 960 Figure 16 First test with garbage collection two objects ( see online version for colours ) Figure 17 Second test with garbage collection two objects ( see online version for colours ) 98 D . L . De Luise et al . Figure 18 Third test with garbage collection two objects ( see online version for colours ) Figure 19 Fourth test with garbage collection two objects ( see online version for colours ) It is important to note that as the worldmap is created dynamically , its image changes according to the strategy applied . The thick line represents the trace of the robot , and the others are the internal representation of the obstacles . A rapid comparison of the figures shows that first and second strategies trend to go straight , third and fourth try to return to the original direction . Just the first strategy discovers the second obstacle . 5 . 3 Evaluation of the results Figure 20 shows a comparison between the number of codelets , workplanes ( WP ) and strategies created and disposed in tests without obstacles ( labelled as 0Obj ) , two of them without GC ( labelled as nGC ) . The figure in the middle shows the histogram of the four tests with obstacles ( all of them with GC ) . A conscious model for autonomous robotics 99 Figure 20 Number of codelets , WP and strategies without obstacles ( see online version for colours ) The relevant features in figures are : • the number of WP is small , no matter the number of codelets , concepts and strategies being generated • the number of codelets is higher when there are obstacles • certain strategies dispose more WP than others ( third and fourth , because they trend to return to original direction , they do not intend to explore other directions ) • the number of strategies explored are similar when there are no obstacles , but slightly different with obstacles . 100 D . L . De Luise et al . Figure 21 Number of codelets and WP without obstacles ( see online version for colours ) Figure 22 Number of codelets and WP with two obstacles ( see online version for colours ) Figure 21 shows a comparison between the number of codelets and workplanes ( WP ) created and disposed in tests without obstacles ( noted with 0Obj ) , without GC ( labelled as nGC ) , and with GC ( labelled as sGC ) . In Figure 22 , there are the four tests with obstacles ( labelled 2OBJ ) . A conscious model for autonomous robotics 101 Note that : • The number of strategies does not correlate with the number of codelets created . That is because any codelet may generate more than one strategy . • The number of concepts related to cells increases as the time spent by the robot is larger , because the controller has more time to explore more parts of the environment . • Rotations and translation are almost even in all the cases when there are no obstacles , because there is no a special bias ( for example an obstacle detected in one direction ) . • The number of codelets executed are relatively lower with obstacles , since there is an efficient GC evaluation of alternatives . • WP disposed are fewer with obstacles , because certain strategies may be reused . Figure 23 shows a comparison between all concepts ( marked as concepts created and concepts disposed ) and Figure 24 between cell concepts ( noted as cell concepts created and cell concepts disposed ) . Figure 23 Concepts created and disposed ( see online version for colours ) 102 D . L . De Luise et al . Figure 24 Cell concepts created and disposed ( see online version for colours ) It can be observed that : • The number of cell concepts is higher in all cases , due the requirement to explore the environment . Every logical cell of the world - map that deserves to be evaluated is modelled as a concept . • When there are no obstacles , the prototype trends to dispose less number of concepts related to cells . • The number of concepts for modelling strategies are very few in all tests . • In tests with obstacles , the number of cell concepts disposed relates to the number of cell concepts created , but this is not true for other concepts , this behaviour denotes a bias of COFRAM to optimise resources related to modelling the environment . The relative frequency polygon may be used to display the shape of the empirical distribution function , the technique usually requires having large number of data to represent a good approximation of the true distribution . There are many techniques for building graphs of empirical distribution . The graph generated InfoStat© calculates the distribution according to the algorithm in ( 1 ) : Let ( 1 ) , ( 2 ) , ( ) be ordered samples ( size ) x x x n n ( 1 ) The empirical distribution of observation x is as follows : ( ) ( ) ( 0 . 375 ) / ( 0 . 25 ) F x i i n = − + ( 2 ) This represents the observed values of the variable along X axis . The empirical values are in Y axis . A conscious model for autonomous robotics 103 The empirical distribution for activities related to strategies are in Figures 25 through 28 . Data corresponds to the four tests with obstacles and GC . Figure 25 Empirical distribution in test 1 ( see online version for colours ) Figure 26 Empirical distribution in test 2 ( see online version for colours ) 104 D . L . De Luise et al . Figure 27 Empirical distribution in test 3 ( see online version for colours ) Figure 28 Empirical distribution in test 4 ( see online version for colours ) When strategies belong to the same population , it follows a normal distribution ( like an S shape ) . From these figures , it follows that : A conscious model for autonomous robotics 105 • In test 2 , there are several changes in the global strategy . For example in the last case , at timestamp 1389007283100 starts a different strategy that is also changed later . Note that this changing approach gives the best trace ( see pictures in Table 3 ) at a cost of higher number of parallel strategies ( see Figure 26 ) but it does not give higher number of WP ( see Figure 24 ) . • Test 4 follows very well a global strategy ( to go back the original direction ) , and test 3 does the same but with less efficiency ( in fact it shows a small return to origin ) . • Also note that there is always just one winner and executing strategy at a single timestamp , but many strategies are built in parallel . 6 Conclusions The current implementation is slight and constitutes a step towards the study of concept models applied to robotics . It results from the studies in this paper that the model implemented by COFRAM requires tuning to improve statistics and to allow MARCOS to better selection of strategies . RFID technology is reserved for a future implementation that will solve the localisation problem more efficiently , with a higher update rate , better accuracy and scalability at a lower price . Additional video and sound information with radio frequency ( RF ) and ultrasonic technologies , such as RFID , ZigBee , wireless devices and laser technology are under consideration also . Regarding the model , there remains the implementation of better codelets to build other strategies and improve performance and to allow automatic detection of alternative hardware configurations . There remains also the implementation of activities such as lift , run , and jump to complement the existing activities ( advance , rotate and stop ) . Other extensions may be obsolescence and past / future consciousness , improved object / obstacle recognition , additional knowledge about the standard abilities in the robot ( e . g . , its ability avoid obstacles and threats ) and the surroundings ( i . e . , types of obstacles and the properties of such obstacles ) . Currently , the project team is testing with alternative sensors , to allow MARCOS to have extra information about the environment and about the objects in it . Also , it remains to evaluate also an extension of COFRAM abilities to let it perform more complex tasks , for example to move different objects from one place to another or to handle levelled surfaces . Other future considerations will include specific hardware localisation on - board , to release MARCOS from this task , improving memory usage and CPU multi - threats . Traditional localisation in places such as factory buildings and halls , usually involves processing a set of events and facts , such as the location of natural landmarks , walls , and dynamic obstacles . There are several approaches for solving localisation problems . The MARCOS architecture was developed to accomplish this by concept handling . 106 D . L . De Luise et al . References Baars , B . J . ( 1998 ) A Cognitive Theory of Consciousness , p . 446 , Cambridge University Press , Berkeley , CA . Baars , B . J . and Franklin , S . ( 2003 ) ‘How conscious experience and working memory interact’ , Trends in Cognitive Sciences , Vol . 7 , No . 4 , pp . 166 – 172 . Baars , B . J . and Franklin , S . ( 2009 ) ‘Consciousness is computational : the LIDA model of global workspace theory’ , Machine Consciousness , Vol . 1 , No . 1 , pp . 23 – 32 , doi : 10 . 1142 / S1793843009000050 . Baddeley , A . D . and Hitch , G . ( 1974 ) ‘The psychology of learning and motivation : advances in research and theory’ , Working Memory , Vol . 8 , No . 1 , pp . 47 – 89 , doi : http : / / dx . doi . org / 10 . 1016 / S0079 - 7421 ( 08 ) 60452 - 1 . Baddeley , A . D . , Conway , M . and Aggleton , J . ( 2001 ) ‘Sensory perceptual episodic memory and its context : autobiographical memory’ , Episodic Memory , Vol . 356 , No . 1413 , pp . 1375 – 1384 , doi : 10 . 1098 / rstb . 2001 . 0940 . Barsalou , L . W . ( 1999 ) ‘Perceptual symbol systems’ , Behavioral and Brain Sciences , Vol . 22 , No . 4 , pp . 577 – 609 , doi : 10 . 1 . 1 . 5 . 5856 . De Luise , D . L . , Biedma , N . , Rancez , L . and Isoba , L . ( 2013 ) ‘Robotic consciousness’ , Computational Science and Engineering Collection , Vol . 1 , doi : 10 . 978 . 8896471 / 108 , Blue Herons Editions , Italy . Eberst , E . , Andersson , M . and Christensen , H . I . ( 2000 ) ‘Vision - based door - traversal for autonomous mobile robots’ , Intelligent Robots and Systems , Vol . 1 , pp . 620 – 625 , doi : 10 . 1109 / IROS . 2000 . 894673 . Ericsson , K . A . and Kintsch , W . ( 1995 ) ‘Long - term working memory’ , Psychological Review , Vol . 102 , No . 2 , pp . 211 – 245 , doi : 10 . 1037 / 0033 - 295X . Franklin , S . and Graesser , A . ( 1996 ) ‘Is it an agent , or just a program ? : A taxonomy for autonomous agents’ , Proceedings of the Third International Workshop on Agent Theories , Architectures , and Languages , pp . 21 – 35 . Franklin , S . and Patterson , F . G . ( 2006 ) The LIDA Architecture : Adding New Modes of Learning to an Intelligent , Autonomous , Software Agent , pp . 764 – 1004 , Integrated Design and Process Technology , IDPT . USA . Franklin , S . , Baars , B . J . , Ramamurthy , U . and Ventura , M . ( 2005 ) ‘The role of consciousness in memory’ , Brains , Minds and Media , Vol . 1 , No . 3 , pp . 1 – 38 , doi : urn : nbn : de : 0009 - 3 - 1505 . Franklin , S . , Kortenkamp , D . and Freed , M . ( 2003 ) ‘An autonomous software agent for navy personnel work : a case study’ , Human Interaction with Autonomous Systems in Complex Environments , pp . 60 – 65 , D . Kortenkamp and M . Freed , Palo Alto . Glenberg , A . M . ( 1997 ) ‘What memory is for’ , Behavioral and Brain Sciences , Vol . 20 , No . 1 , pp . 1 – 55 , doi : 10 . 1 . 1 . 99 . 8818 . Gutmann , J . S . and Fox , D . ( 2002 ) ‘An experimental comparison of localization methods continued’ , Pattern Recognition , Vol . 45 , No . 9 , pp . 3084 – 3104 , doi : 10 . 1016 / j . patcog . 2012 . 03 . 004 . Hayet , B . , Lerasle , F . and Devy , M . ( 2002 ) ‘A visual landmark framework for indoor mobile robot navigation’ , Robotics and Automation , Vol . 4 , No . 4 , pp . 3942 – 3947 , doi : 10 . 1109 / ROBOT . 2002 . 1014344 . Hofstadter , D . R . , Mitchell , M . , Holyoak , K . J . and Barnden , J . A . ( 1994 ) ‘The copycat project : a model of mental fluidity and analogy - making’ , Advances in connectionist and Neural Computation Theory , Vol . 2 , No . 2 , pp . 31 – 112 , doi : http : / / citeseerx . ist . psu . edu / viewdoc / summary ? doi = 10 . 1 . 1 . 307 . 5740 . Knotts , R . , Nourbakhsh , I . R . and Morris , R . C . ( 2007 ) ‘Navigates : a benchmark for indoor navigation’ , Robotics , Vol . 98 , No . 6 , pp . 36 – 42 , doi : 10 . 1061 / 40337 ( 205 ) 6 . A conscious model for autonomous robotics 107 Kolski , S . , Ferguson , D . , Bellino , M . and Siegwart , R . ( 2006 ) ‘Autonomous driving in structured and unstructured environments’ , IEEE Intelligent Vehicles Symposium , Vol . 6 , pp . 558 – 563 , doi : 10 . 1109 / IVS . 2006 . 1689687 . Lecking , D . , Wulf , O . and Wagner , B . ( 2008 ) ‘Localization in a wide range of industrial environments using relative 3D ceiling features’ , Emerging Technologies and Factory Automation , pp . 333 – 337 , doi : 10 . 1109 / ETFA . 2008 . 4638415 , IEEE , Piscataway . Loia , V . and Sessa , S . ( 2010 ) ‘Soft computing agents : new trends for designing autonomous systems’ , Studies in Fuzziness and Soft Computing , pp . 13 – 35 , Sessa , Salvatore . MacPherson , D . L . ( 1993 ) Automated Cartography by an Autonomous Mobile Robot Using Ultrasonic Range Finders , GPhD Thesis , p . 385 . Matelln , V . and Caas , J . ( 2006 ) ‘Wifi localization methods for autonomous robots’ , Robotica , Vol . 24 , No . 4 , pp . 455 – 461 , doi : http : / / dx . doi . org / 10 . 1017 / S0263574705002468 . McCauley , L . and Franklin , S . ( 2002 ) ‘A large - scale multiagent system for navy personnel distribution’ , Connection Science , Vol . 14 , No . 4 , pp . 371 – 385 , doi : 10 . 1007 / s12559 - 012 - 9125 - 8 . Posadas , J . L . , Poza , J . L . , Sim , J . E . , Benet , G . and Blanes , F . ( 2008 ) ‘Agent - based distributed architecture for mobile robot control’ , Engineering Applications of Artificial Intelligence , Vol . 21 , No . 6 , pp . 805 – 823 , doi : 10 . 1016 / j . engappai . 2007 . 07 . 008 . Sloman , S . A . ( 1999 ) ‘Cognitive architecture’ , The MIT Encyclopedia of Cognitive Science , pp . 124 – 126 , MIT Press , Oxford . Vanschoren , J . ( 2004 ) ‘Fluid concept architecture : a critical evaluation’ , Computer Based Learning Unit , Basic Books , New York . Varela , A . H . , Thompson , E . and Rosch , E . ( 1991 ) The Embodied Mind : Cognitive Science and Human Experience , p . 308 , MIT Press , Oxford . Williams , E . ( 2014 ) ‘Make : Avr programming’ , Learning to Write Software for Hardware , Maker Media , Inc . , California . Zendera , H . , Martnez Mozos , O . , Jensfelt , P . , Kruijffa , G . and Burgardb , W . ( 2008 ) ‘Conceptual spatial representations for indoor mobile robots’ , Robotics and Autonomous Systems , Vol . 56 , No . 6 , pp . 493 – 502 , doi : 10 . 1016 / j . robot . 2008 . 03 . 007 .