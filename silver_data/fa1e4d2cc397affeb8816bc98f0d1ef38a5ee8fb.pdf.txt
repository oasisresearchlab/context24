Threddy : An Interactive System for Personalized Thread - based Exploration and Organization of Scientific Literature Hyeonsu B . Kang hyeonsuk @ cs . cmu . edu Carnegie Mellon University Pittsburgh , Pennsylvania , USA Joseph Chee Chang josephc @ allenai . org Allen Institute for AI Seattle , WA , USA Yongsung Kim yongsung @ cmu . edu Carnegie Mellon University Pittsburgh , Pennsylvania , USA Aniket Kittur nkittur @ cs . cmu . edu Carnegie Mellon University Pittsburgh , Pennsylvania , USA ABSTRACT Reviewing the literature to understand relevant threads of past work is a critical part of research and vehicle for learning . However , as the scientific literature grows the challenges for users to find and make sense of the many different threads of research grow as well . Previous work has helped scholars to find and group papers with citation information or textual similarity using standalone tools or overview visualizations . Instead , in this work we explore a tool integrated into users’ reading process that helps them with leveraging authors’ existing summarization of threads , typically in introduction or related work sections , in order to situate their own work’s contributions . To explore this we developed a prototype that supports efficient extraction and organization of threads along with supporting evidence as scientists read research articles . The system then recommends further relevant articles based on user - created threads . We evaluate the system in a lab study and find that it helps scientists to follow and curate research threads without breaking out of their flow of reading , collect relevant papers and clips , and discover interesting new articles to further grow threads . ACM Reference Format : Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur . 2022 . Threddy : An Interactive System for Personalized Thread - based Ex - ploration and Organization of Scientific Literature . In The 35th Annual ACM Symposium on User Interface Software and Technology ( UIST ’22 ) , October 29 - November 2 , 2022 , Bend , OR , USA . ACM , New York , NY , USA , 15 pages . https : / / doi . org / 10 . 1145 / 3526113 . 3545660 1 INTRODUCTION Reviewing the literature to understand relevant threads of research is a critical part of scientific research and serves as a research facili - tator and a vehicle for learning [ 9 ] . For example , a scholar trying to understand the history of tools that support scientific literature review might learn about research threads including overview vi - sualizations based on citation networks ; augmentative interfaces Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for third - party components of this work must be honored . For all other uses , contact the owner / author ( s ) . UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA © 2022 Copyright held by the owner / author ( s ) . ACM ISBN 978 - 1 - 4503 - 9320 - 1 / 22 / 10 . https : / / doi . org / 10 . 1145 / 3526113 . 3545660 for active reading ; collection tools that help scholars organize their papers ; and so forth . Understanding prior threads of research is critical to building on past work , finding inspirations for new inno - vation , and positioning contributions in the appropriate research context . However , as the scientific literature grows the challenges for users to find and make sense of the many different threads grow as well . Finding and keeping track of papers within a single thread can be challenging , requiring users to traverse references and cita - tions , read through introductions and related work sections , and search across various keywords to avoid missing important work . Exacerbating the problem , scholars are often interested in multiple threads that are relevant to their work , with each often branch - ing into multiple sub - threads as the example described above of literature review support tools demonstrates . An effective strategy for ‘shortcutting’ the cumbersome process of assembling research threads is to harvest and build on the work that other scholars have already done in assembling them . This process , commonly used among scholars [ 9 , 68 ] , involves reading through papers ( typically in the introductions and related work sections ) to find how the authors have compressed and summarized the threads of research relevant to their papers in order to situate their own work’s contributions . These predigested threads provide scaffolding for users in assembling their own , both in terms of the references cited as well as the citing text describing those references . By following the most relevant references , finding more citing texts , and further chaining through papers , scholars can more quickly assemble an overview of the research threads in an area than by searching and collecting individual papers alone . However , even this process of inferring threads is cumbersome . Consider the following scenario in which a scientist is learning from a new research paper . Quickly skimming the introduction , she may identify a useful patch of text in it which describes a research thread she would like to explore further . This patch of text ( e . g . , a sentence , a paragraph , or a section ) often contains a number of citations pointing to related work and describes their relation which provides a helpful context . Deciding to save this context and follow up on one of the references requires her to first jump between the references section and the citation context in the body text to link the reference notation she wants to follow up with to the actual title and URL of the paper . Next she needs to locate the actual content of the paper , perhaps by querying its title on a r X i v : 2208 . 03455v2 [ c s . H C ] 16 A ug 2022 UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur Select Extract , Contextualize & Link Organize & Preserve Automatic Extraction , Linking & Detailing of References in Context Threads follow the reader to the next papers [ 46 ] 1 2 3 Highlighting a patch of synthesis in a PDF [ 1 ] Figure 1 : Thread creation and organization while reading on Threddy : 1 ○ The reader highlights a useful patch of text that interleaves references in a citation context . 2 ○ The system extracts the referenced papers from the highlighted text , link them to the citation context , and show the resulting data to the reader . 3 ○ The reader creates a new thread together with the citation context and extracted references . Alternatively , the user can add the context only as a relevant clip to an existing thread , or add the extracted references to it . The threads and their context follow the reader as she continues on reading other papers . a search engine . Finally , she may make notes of the found paper and save it for future reference . She needs to repeat this multiple times for each patch of text she finds interesting , the cost of which compounds quickly . The reference notation used in papers may also differ , sometimes providing little context about what they are ( e . g . , numbers in a bracket such as ‘ [ 1 ] ’ ) , and this lays an even more burdensome task of correctly mapping and linking papers , which ( using one of our study participant’s words ) can be “ a real , damaging context break . ” In addition , she might after all end up finding that the actual content of the cited paper to be irrelevant or uninteresting , in which case she must resume her flow of reading by re - building the lost context and previous threads of thoughts . As she moves to other papers and collecting more patches of relevant information , it may become clear that they relate to each other along some threads she created , and this needs to be captured . In order to achieve this , she first needs to look through her own notes , threads , and references that she may have loosely organized , and this quickly becomes a sizable sub - task that once again re - quires her to break out of her flow of reading in order to complete it . Furthermore , it is easy to forget which references are already looked at and which are new that need to be processed , which may incur additional friction to the process . She may also have multiple threads she would like to follow up on at any given time , without having an easy way of keeping track of them while she is reading a paper . Using multiple tabs or groups of them might be an intuitive way to organize articles into related threads ( albeit its potential for creating a tab overload [ 11 , 12 , 22 ] ) , but this does not help with maintaining patches of citation context that described the threads . Finally , once relevant patches of text are collected for each thread from source papers , there is no easy way to use this information to find additional relevant papers that she may use to further grow the threads . While significant research has focused on supporting scientific literature search and collection , there is relatively little support for users building threads during reading . For example , Papers101 [ 14 ] aims at supporting early - stage scholars’ discovery of literature by recommending relevant but unused keywords for query . Alterna - tively , Apolo [ 13 ] adopts and applies the Belief Propagation [ 67 ] algorithm on the citation network in a novel way to support pro - gressive retrieval of papers given a set of papers that the user has collected thus far . Once a list of recommendations are curated , sys - tems such as PaperQuest [ 48 ] provide support for triaging what to read next , and VisualBib [ 18 ] aims at providing a more holis - tic support for managing the growing user - curated bibliographies . However , none of these systems provides a mechanism for lever - aging the data scholars have collected and assembled into threads while reading research articles to recommend further relevant pa - pers to continue growing the threads . In this paper we aim to address this gap in the literature by developing Threddy , a system that supports users with collect - ing patches of text in research articles that contain pre - digested syntheses by other authors ( i . e . , a useful citation context along with automatically extracted references ) , and helps them assemble personal research threads using clippings of others’ pre - digested threads . Different from the related prior work , Threddy does not create a new information environment nor an application context that requires users to context switch away from their natural flow of reading , but instead seamlessly integrates the support it provides into the user’s in - situ context of reading . We evaluate Threddy in a controlled lab study with 9 scientists conducting literature Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA review in personalized domains , and demonstrate how it increases users’ effectiveness in leveraging pre - digested syntheses by other authors to enrich their own threads , decreases the cost of frequent context switching they would have experienced in a similar task without the tool , and heightens users’ flow state while conducting a literature review . 2 RELATED WORK Scholars exploring and reviewing the relevant literature are chal - lenged by the immense scale and dynamic changes in the liter - ature [ 7 , 30 , 41 , 46 , 51 , 61 ] , which could overload them with in - formation [ 42 ] , making the effective allocation of attention [ 55 ] an imperative . The challenge may be especially pronounced for scholars tasked with finding relevant papers , organizing them into multiple , evolving research threads , and growing the threads with recent papers from the literature . It is therefore unsurprising that scholars’ discovery experience with the literature is often charac - terized as tedious , scattered , and relied upon chance [ 8 , 39 ] . To mitigate this , several systems were developed to help scholars mak - ing sense of research articles which we organize into the research threads below . 2 . 1 Tools that Support Interaction within and across Documents Passages [ 23 ] proposed an approach to ‘reify’ [ 6 ] ephemeral user text selections into persistent objects that can be shared across mul - tiple applications and in various representations such as a canvas or a spreadsheet view . In an evaluation with scientists using a set of six papers , Passages was favored over the baseline and shown to encourage reuse of the text and structure collected during the document interaction . In comparison , texSketch [ 57 ] developed an interactive canvas for deeply engaging with individual documents by supporting concept diagramming while reading . Other work in code [ 31 ] and document programming [ 20 ] also showed how dual representations dynamically generated from user selected portions of content could improve end - user comprehension , engagement , and learning . Furthermore , Wang et al . examined how visualization of the narrative structure within the related work sections of a paper could improve comprehension and curation [ 63 ] . Relatedly , “Metro Maps of Science” [ 53 ] used the metro map metaphor to de - scribe the narrative structure of scientific progress . For a collection of documents , IntentStreams proposed an approach to group and vi - sualize documents relevant to a search query into streams [ 2 ] , while Apolo [ 13 ] and IdeaHound [ 54 ] used a 2 - D spatial arrangement to quickly overview the clusters of similar documents . 2 . 2 Tools that Augment Reading Experiences Reading an individual paper may already involve a high cognitive cost such as unfamiliar terms and ‘nonce’ words [ 25 ] , complex for - mulae [ 26 ] and barriers to domain - specific knowledge [ 5 , 27 , 45 ] . Therefore , prior work has explored ways to mitigate this cost . One thread of research focused on cross - referencing within a single document to improve readability ( e . g . , [ 3 , 19 , 49 ] ) . A sub - thread of this is helping users more efficiently navigate to and from different parts of a table and the corresponding snippets of text [ 4 , 36 , 37 ] . In comparison , NB [ 69 ] binds contextually relevant discussions to the margins of a document students are reading in a class to enhance their engagement and learning . These systems and their findings show the importance of reducing the cognitive cost that may be as - sociated with reading complex text such as research papers . At the same time , it alludes to the potential benefit of augmenting reading interfaces in a way that readers can re - use and build upon other authors’ pre - digested synthesis from multiple papers in a contex - tually relevant way , without breaking out of their flow of reading , to better retain focus and their mental models of the structure of relevant research threads . 2 . 3 Tools for the Literature Review Workflow Several work also modeled the literature review process as an it - erative process of curation and querying of papers , and developed systems that can support this process in a standalone information environment . In PaperQuest [ 48 ] users could input query papers to receive other relevant papers based on citation relationships . Sturm [ 56 ] surveyed requirements of systematic literature search systems , and designed the LitSonar system which provides sup - port for querying over multiple sources of document streams us - ing nested queries . LitSense [ 58 ] developed multiple visualizations based on citation relations , and enabled filtering and querying op - erations for homing in on specific references that the end - users may further explore . CiteSense [ 68 ] developed an information - rich environment which provides various features for searching , ap - praising , and managing the different tasks involved in a literature review . While prior work in supporting scholarly literature review primarily focused on a standalone information environment de - tached from users’ flow of reading , recent notable exceptions in online sensemaking support tools are ForSense [ 50 ] and Fuse [ 38 ] . Both systems included a sidebar view in the margins of the webpage the user is reading , and allowed users to organize clips and notes into clusters [ 50 ] or fluid and hierarchical structures [ 38 ] . 3 USAGE SCENARIO AND SYSTEM DESIGN Usage Scenario . We first illustrate how an end - user , Sam , would interact with Threddy to conduct a literature review . Sam is reading a paper when she encounters an interesting patch of text ( see also figure 2 ) . The two paragraphs in the related work section describe particularly relevant research threads that she wants to follow up on and save the references included in them for a deeper look . She quickly highlights the paragraph , which triggers Threddy to search for references included in it , automatically extract the metadata corresponding to each , and present them as interactive objects in the sidebar . Sam glances over the linked references and removes a couple of them which seemed less relevant based on their titles and TL ; DR summaries , while keeping the rest . The extracted references and the context seem to form a good grouping for revisiting later , so she adds them as a new thread labeled ‘ Reifying ephemeral user in - teraction ( e . g . , text selections ) ’ . She continues reading the paragraphs and repeatedly extracts and saves additional context , references , and threads such as ‘ Systems for constructing narrative structures in sciences ’ , and ‘ Systems that augment document margins ’ . While these new groupings are helpful , she is not yet confident if the newly added threads and the hierarchy would make sense in light of additional references she would find later . She is also a little UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur B Holding Tank C Thread Selector User Highlight A D Thread Drawer PDF viewer & Highlighter E Threddy Sidebar F Add Drag and Drop Surface citation format References already included in a thread are shaded in grey Overview & Discovery Link to the paper TL ; DR and metadata Figure 2 : The design of Threddy consists of two primary panels , ( E ) PDF viewer & Highlighter and ( F ) Sidebar . When the user ( A ) highlights text in the PDF , its content and references are found and temporarily stored in the ( B ) holding tank . The user can review the content of the holding tank and clean up any errors in the automated extraction and linking of references . When the content looks good , the user can either type in the ( C ) thread selector to create a new thread , or choose an existing thread . Choosing an option selectively activates buttons for 1 ) creating a new thread with the references , 2 ) only adding the extracted references to the chosen thread , and 3 ) only adding the content of the holding tank as a clip to the chosen thread . Once the user chooses the intended operation , the ( D ) thread drawer’s content is updated to reflect the change . The user can interact with the thread drawer to organize and re - organize its content . The changes are stored and persist across other paper PDFs . worried that the saved references may not provide a good coverage on the topic . This leads her to click on one of the newly saved thread for a detailed look . In it , she finds a panel that shows additional references which cite several of the curated papers for the thread which seem relevant and useful . In particular , she finds three recent papers that cited a few of the papers she saved for the thread at the top of the panel . Seeing these papers leads her to create another thread with them . This also leads to a change in her mental model around the higher level research thread ; she realizes there is a parent - level concept that aptly contains two of the threads she curated until now as its children . She creates it and nests the two threads as its children to better capture her updated mental model . She then collapses the parent thread to declutter the view and focus her attention to the other thread – ‘ Systems that augment document margins ’ – that she has not yet looked at in detail . She finds one of the papers included in the thread particularly interesting , and clicks on it to switch to the PDF . Though her attention shifts towards reading the new paper , she nevertheless maintains her awareness of the current research thread she is interested in from the persisting content of the sidebar view on the right of the new PDF . At the top of the sidebar shows the most recent thread she made changes to , which shows the hierarchy of threads she has been organizing thus far . In the new paper’s related work section , she finds interesting new examples of systems from the prior work and the corresponding threads describing how document margins might be augmented in different ways to improve learner discussion , engagement , or comprehension of technical documents . She adds these papers to ‘ Systems that augment . . . ’ with the context and sub - threads corresponding to the specific ideas described in the paper . System Design Rationale . Literature review is a complex task that most likely spans long durations , may be interrupted by other tasks [ 43 ] , and is often initiated and resumed across different de - vice modalities [ 21 ] . Therefore , one of the core design rationale for Threddy was how the context - switching cost may be reduced and Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA the relevant task context such as research threads may be surfaced as the end - user moves from one paper to another . On the one end , active reading interfaces such as LiquidText [ 60 ] and texSketch [ 57 ] integrates an interactive canvas for note - taking and diagramming to an individual document to support in - depth reading . On the other end of the spectrum are systems for visualizing a collection of documents and their relevance between each other , as discussed in the related work section above . In contrast , Threddy’s PDF renderer seamlessly replaces the end - user’s default PDF reader in their browser , such that they can read papers as they would nor - mally without any additional constraint of having to start reading papers using a new system , all the while collecting relevant pa - pers and structuring them in a form that reflects the user’s current mental model of the research space . Highlighting and Selection . Threddy’s main PDF reader is divided into two areas ( fig . 2 ) : a PDF viewer and highlighter on the left E ○ , and a sidebar view hold - ing the thread - related content on the right F ○ . The PDF viewer supports text ( using mouse drag ) and area highlights for images ( drag - and - drop while pressing and holding the options / alt key ) , which trigger Threddy to extract references included in the high - lighted context ( extraction is supported only for text highlights ) . Readers can view the extracted citation context and references in the B ○ holding tank in the side bar , and deselect any reference they do not want to include or to fix any extraction error . Readers can add the citation context together with the references as a new thread , or simply add them as a clip or papers to an existing thread using the C ○ thread selector . The selector uses the citation context and computes the thread similarity ( Appendix A ) to suggest which thread the highlighted and extracted content most likely belongs to . Threads and references are visually ( e . g . , different threads use colored dots with numbered counts of nested items on the left ; papers use a ‘document’ icon in place of the colored dots ) and organizationally differentiated ( e . g . , papers show a distinct title - metadata - TL ; DR content structure within each card UI ) . Readers can edit the context or the label in the thread by clicking on the text . Citation context clips are visible only in the Overview and Discovery by default , to prevent clutter . Organization . Readers can ( re - ) organize the threads by drag - and - dropping a thread or papers into another thread as a nested thread or out of a thread to start a new one . Threads that most recently received an additive change ( e . g . , a new paper was added to it ) are moved to the top . The rationale behind this design choice was that readers may have more organizational needs for the threads that last received content , and / or they are the ones readers most recently attended to and thus are likely to be re - visited . At the top of the thread drawer D ○ , the default ‘Unorganized Papers’ thread is created and each paper PDF opened in the viewer is initially added to it , such that readers can re - visit or organize it at a later time if they wish to ( cf . ‘deferred actions’ interaction design [ 28 ] ) . The paper in the current reader is annotated with a ‘current paper’ message at the bottom of the corresponding paper card for awareness . Overview , Discovery and Persistence . Clicking on either the ‘View Details’ or ‘Zoom’ icon in each thread opens the Overview and Discovery panel for the selected thread ( fig . 3 ) . The clips that were minimized to prevent clutter in the sidebar view are now visible in full details , along with references grouped by the cita - tion context they were collected from . The panel shows all of the nested threads and their content structured in a hierarchical man - ner , along with the content of the selected thread . At the bottom of the Overview and Discovery panel are new paper recommen - dations generated by searching for those that have most cited the papers curated for the selected thread ( fig . 4 ) . Each recommended paper conveys relevance by showing the number of papers that it cited from the curated , along with the citation context and intent ( e . g . , in the ‘Methodology’ section ) . These more recent papers help users discover newer development on the relevant research threads , akin to forward chaining commonly used by scholars conducting literature reviews . 4 SYSTEM ARCHITECTURE The front - end of Threddy handles user interaction with PDFs , rendering of threads , and the Overview and Discovery panel and is implemented as a Chrome browser extension . The back - end is implemented as a Flask server using GROBID [ 1 ] for parsing the PDF content such as the title , section headers , each in - line citation notation to the corresponding reference entry , and body text sentences and their coordinates within the document from its top left - hand side corner . 4 . 1 Automatic Extraction and Linking References to User Highlights Backend PDF parsing , linking , and mapping user highlight locations . When the user opens a new paper PDF on the browser , Threddy sends the file data to the backend GROBID server for pars - ing . Our GROBID server uses a cascade of sequence labeling models including a fast linear chain CRF to parse a PDF ( see [ 1 ] for more details ) . This server provides full text extraction and structuring of the received PDF , including the overall document segmenta - tion ( i . e . , locating elements in pixel positions given the scale of the received PDF file ) and structuring the text body into sentences , section titles , in - line citation notation to corresponding references ( e . g . , Whether and which reference ‘ [ 1 ] ’ in a sentence represents ) , figures , tables , etc . This process is run once when a new paper is opened in Threddy ( previously processed PDFs are cached ) and takes up to a few 10s of seconds to complete . Additionally , we in - clude the pixel coordinates for each ‘sentence’ parsed from GROBID , and run an additional sentence parsing using spaCy 1 to merge sen - tences that may have been erroneously broken . Using this parsed data , we search on the S2ORC [ 40 ] and Semantic Scholar APIs 2 to link the corresponding paper with its metadata including the URL , publication year , TL ; DR [ 10 ] , SPECTER embedding [ 16 ] . Using the parsed PDF , we first align the scale of the rendered PDF with the PDF used for parsing in GROBID . When the end - user high - lights a portion of the text in PDF , the scale - adjusted coordinates of the highlight location is used to search overlapping sentence coordinates of the parsed PDF . We also collect the surrounding context ( i . e . , pre - and post - sentences of the overlapping sentence ) for clipping . References included in this contextualized selection are searched in the parsed PDF . For image highlights , we simply 1 https : / / spacy . io / 2 https : / / www . semanticscholar . org / product / api UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur Information Landscaping Clips References Sub - thread Sub - thread Clips References Clip Overview and Discovery Panel Structure ( Top ) Thread - speciﬁc Clips ( Middle ) References organized by citation context Hierarchical Organization Figure 3 : The Overview and Discovery page consists of three components : At the top of the page is a section for the clips collected for the thread . In the middle of the page are references that belong to the thread grouped by their citation context , and at the bottom of the page ( not shown here ) is a recommendation panel that contain relevant papers . The overview shows all of the entry thread and its sub - threads’ content in a hierarchical manner ( indented tree ) . Readers can choose which thread they want to look at in more details from the sidebar view . Show detailed description of the citing context , grouped by intent ( e . g . , “Methodology” ) Add selected paper to this thread Re - generate recommendations with updated papers in Thread Figure 4 : The discovery view shows recommendations with high citation coverage , recency , and semantic similarity in a grid . Users can examine the details of each recommendation and decide to add the recommended paper to the current thread . Once the new paper is added , the user can click [ Refresh ] to generate new recommendations using the updated thread . take a screenshot of the underlying content and convert it into a data url for storage and display . 4 . 2 User Highlights and Creation of Threads Front - end PDF viewer , Highlighter , and Sidebar . Using the parsed PDF data , we replace the native Chrome PDF viewer with our custom viewer based on an existing highlighter 3 that provides con - venient functionality for text and area selection which is a wrapper around the underlying rendering engine based on Mozilla’s PDF . js 4 . We feed it with our parsed PDF data and align the rendering scale and user mouse coordinates in accordance with the parsed PDF’s coordinate system . The sidebar consists of multiple components ( fig . 2 ) . The holding tank view at the top visualizes the intermediate content based on user selection . This includes the user highlighted text and the references that are directly in or nearby the highlighted content or an image highlight from the PDF . The references are shown as a list 3 https : / / github . com / agentcooper / react - pdf - highlighter 4 https : / / github . com / mozilla / pdf . js of cards underneath the user highlighted content . Each reference card contains title and additional metadata about the paper , as well as the surface citation notation as shown in the PDF text for ease of mapping . The user may choose to select some but not all of the references automatically extracted to include ( clicking on the trash icon discards the selected reference ) . The toolbar underneath the holding tank is selectively activated based on user selection of the thread and the input data . The text input box ( fig . 2 , C ○ ) allows users to either type in new text ( will create a new thread if no matching thread exists ) , or select one of the existing threads to add the data to . Thread suggestions are generated using an algorithm that first compares user highlighted text and to each vertical chain of the threads to find the most related top - level thread . Next it ranks the most closely related sub - thread within the best chain that the new content may be added to ( see Appendix A for details ) . Thread interaction . Threads are presented using an interactive nested structure which users can drag - and - drop to nest a thread under another or move it out of the parent thread , delete an existing thread , modify the label of the thread , or collapse / expand all its Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA PDF Renderer Highlighter PDF Parser ( 0 , 30 ) Thread Handler Paper Lookup Semantic Scholar Graph API Web Storage A B C D Persistence ( 0 , 30 ) ( Threads + References + Clips + Structure ) Citing Paper Recommender Overview and Discovery E Holding Tank Thread Drawer Thread Selector Relevance Calculator Figure 5 : Threddy system architecture : ( A ) PDF Renderer captures and handles user highlight events , ( B ) Thread Handler fetches the references included in the highlighted text and visualizes them in the holding tank . ( C ) The parser provides the PDF parse to the thread handler for finding corresponding references in the highlighted text and fetching them via the ( D ) Paper Lookup module . It also supports ( E ) the citing paper recommender for user expanded threads . The data is stored in a web storage and persisted as the reader moves to other papers . content ( fig . 2 , D ○ ) . At the top of the thread view is a single - level , unremovable thread titled ‘Unorganized Papers’ – this thread is automatically generated and adds any paper PDF that is opened by the user under it , allowing the them to defer the action of organiz - ing the papers . This thread is not subject to the user interactions described above other than moving its member references to a different thread ( or vice versa ) . Clips and references included in each thread are visually differ - entiated . Clips are not shown to the users by default , but simplified as a simple counter message ( e . g . , ‘3 clips found . View details’ ) , upon clicking which opens up an Overview and Discovery panel ( Section . 4 . 3 ) to allow for the end - users to examine further details . In our user study , participants often clipped several textual and image content for each thread ; showing all of them in the thread view will clutter it and make it hard to find the threads the user was building on . References , on the other hand , are directly shown as a list of separate cards underneath the thread that they belong to aid immediate access and further exploration . In addition to the content and metadata of the referenced paper , each paper card UI contains a URL icon , which automatically links the reference to its URL on Semantic Scholar . Clicking on the link directs end - users to the paper details page and reduces the amount of context switch they otherwise need in order to find the PDF . 4 . 3 Overview and Discovery of Additional Papers Related to Threads Overview of threads . Once users have created multiple threads that may include sub - threads and relevant references , it can be challenging to review all of the collected and organized content , and to use all of its data to find additional papers in the related literature to further explore and grow the thread . To aid users with this overview and discovery experience , we designed a direct access to a separate panel ( fig . 3 ) which opens up when the user clicks either the ‘View details’ text or the Zoom icon included in each thread card . The panel is expanded to the whole screen width when opened and shows the unrolled view of the selected thread and all of its sub - threads , along with the clips and references collected at each depth . We visualize this using an indented hierarchy to further differentiate threads at different levels ( fig . 3 , right ) . The panel has three main sections : At the top , user collected clips are shown in a grid with accompanying annotations of the source they were clipped from . Next , a list of references is grouped by their citation context and presented . Finally relevant papers are recommended at the bottom of the page . Discovering new papers . Using the data collected and organized by each thread to find more relevant papers to further grow the thread could be a challenging task and may significantly interrupt with the end - user’s flow of reading . In order to close this discov - ery loop , we automatically recommend new relevant papers when the Overview and Discovery panel is opened . End - users can then select any of the returned recommendations to add to the thread by clicking on the ‘Add to thread’ button ( fig . 4 , middle ) . This adds the paper to the thread in the sidebar as well and keeps it in sync . End - users may click ‘Refresh’ ( fig . 4 , top right ) to re - generate the recommendations based on the updated list of references in the thread , which then invokes the recommender engine . We use the Semantic Scholar API 5 to fetch necessary paper details for retrieval . Our recommendations use citation coverage as its primary source of relevance signal . The rationale behind this decision is that each selected thread contains user - curated relevant papers and the higher the number of thread references cited by a new paper , the higher the chance that it may be relevant to the thread . While we limit our search boundary up to 1 , 000 direct citations for each thread reference , future work may explore relevance via longer citation chains . For each of the citing paper , 5 https : / / www . semanticscholar . org / product / api UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur we simply count how many of the unique thread references were cited by the new paper . In our pilot tests , we found this to be a good proxy for relevance to the thread’s content and return to this in our discussion . We sample a much smaller number ( 50 ) of top - ranked results from the top - ranked high - coverage citing papers and sort them by their publication recency . If the two citing papers have the same publication year , we further differentiate them by their semantic similarity computed as the cosine similarity between the centroid vector of the set of thread references included in the thread vs the new citing paper using SPECTER embeddings . 5 EVALUATION In evaluation our goal was to study how effectively Threddy sup - ports scholars reading research papers to review the relevant liter - ature in a new domain . To this end , we designed a short literature review task with the goal of producing an outline structure ei - ther for themselves in the future or someone else to build upon . We employed a within - subject study comparing Threddy to the commonly used Google Docs editor baseline ( without any exten - sions for searching research papers installed ) with research topics that scholars were personally interested in conducting a literature review of . Alternative choices for the baseline comparison may include combining a qualitative coding software such as NVivo with a reference management tool Mendeley 6 , or the recently an - nounced Zotero 6 7 browser plug - in which allows users to annotate PDF documents opened in it and create notes that can be exported and imported into the desktop Zotero application . There are pros and cons of choosing each of these alternatives as a baseline for our comparison . However , in our study we decided to use Google Docs because : a ) every participant currently uses it or has used it before to conduct literature review ; b ) it was directly accessible to everyone ; and c ) it was sufficiently versatile to support creation of research threads , clipping , and adding references to the thread . We return to the choice of the baseline condition in Discussion . Participants and process . We recruited 9 participants ( 1 female ) for the study . We employed a within - subjects study design , and counterbalanced the order of presentation using 4 Latin Square blocks and randomized rows . Due to the uneven number of re - cruited participants , the Google Docs - first presentation order was assigned one more time than the Threddy - first order . The mean age of participants was 29 . 3 ( SD : 4 . 67 ) and all actively conducted research at the time of the study ( 1 Master’s student , 2 , Post - docs , 6 PhD students ) . Participants’ fields of studies included : HCI ( 5 ) , NLP ( 2 ) , Material Sciences ( 2 ) . Participants followed the follow - ing process in the study , which took place remotely using Google Meets : introduction and consent , installation of Threddy , two train - ing tasks followed by the main tasks in an individualized order , and surveys . Participants were asked to share their screen during the study . We ended the study with a debrief interview with par - ticipants in which the interviewer asked follow - up questions on his observations . The study lasted around 1 hour 20 minutes and participants were compensated at a $ 30 USD per hour rate . Training tasks . We used the following paper [ 32 ] and using one of its subsections in the Related Work ( 4 paragraphs ) as the seed 6 https : / / tinyurl . com / yckre5md 7 https : / / www . zotero . org / blog / zotero - 6 / for practicing creation of an outline . The experimenter described the concepts used in the main task including : ‘Threads’ , ‘Clips’ , and ‘References’ ; Threads are short descriptions of topics or con - cepts in the related domain and can form a hierarchy with other threads ; Clips are supporting pieces of information related to a thread , which can range from a phrase to a paragraph - length text or images directly taken from the paper ; References are papers relevant to the thread . Participants were shown a simple example outline and instructed that the outline needed a sufficient amount of details for comprehension and the accessibility of the source . In addition , participants were instructed to read at least one more paper that is relevant and create an outline that can incorporate multiple references in it , starting from the seed paper . Participants were shown a quick tour and core functionality demonstration ( 5 minutes ) followed by a task to recreate the outline they created in a Google Doc using the same text in Threddy . Timed main tasks . The main tasks used the two topically diverse papers that participants submitted as personally motivating sources for their own literature reviews as part of the sign up process . We randomly assigned each paper to a condition and instructed the participants to start from it as a seed for the task . The tasks were performed for 20 minutes each . Surveys and interview . For demand ( including physical and cog - nitive ) and overall performance we adopt the validated 6 - item NASA - TLX scale [ 24 ] . For technological compatibility with par - ticipants’ existing literature review workflows and the easiness of learning we adapted the Technology Acceptance Model survey from [ 66 ] ( 5 items ) . For measuring the flow aspect [ 17 ] of par - ticipants’ interaction with the system , we adopt Webster et al . ’s research [ 65 ] uncovering multiple interrelated dimensions of flow in human - computer interaction and the corresponding question - naire ( 11 items ) . Finally , we included 8 additional questions asking participants about extraction of clips and references , as well as their organization into a thread structure ( See Appendix B for details of the questionnaire ) . Coding . For the baseline , two of the authors coded the first partic - ipant’s outline together to count the number of threads created , as well as the number of clips and references collected . Then the coders independently coded the rest of the data . The ordinal Krippen - dorff’s alphas were significant for all categories : 0 . 842 , 0 . 962 , 0 . 822 for threads , clips , and references , respectively . The main sources of disagreement included : whether to count unfinished notes and incomplete text as clips , repeated or slightly modified paper title text as threads , and so on . The final sets of counts for the baseline condition were therefore produced by resolving any disagreements by taking the average between the two coders . 6 FINDINGS 6 . 1 Collection and Organization into Threads 6 . 1 . 1 Quantitative Results . Participants in both conditions created a similar number of threads ( 𝜇 = 5 . 2 , SD = 2 . 28 in Threddy vs . 𝜇 = 4 . 9 , SD = 3 . 03 in Google Docs , paired t - test 𝑝 = 0 . 8 ) . How - ever , the number of clips collected for threads was twice as high in the Threddy condition ( 𝜇 = 9 . 9 , SD = 3 . 48 ) than in the Google Docs condition ( 𝜇 = 4 . 9 , SD = 3 . 17 , 𝑡 ( 15 . 86 ) = − 3 . 19 , 𝑝 = 0 . 006 ) , Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA ( a ) The number of threads partic - ipants created in Threddy ( 𝜇 = 5 . 2 , SD = 2 . 28 ) and Google Docs ( 𝜇 = 4 . 9 , SD = 3 . 03 ) did not differ sig - nificantly ( paired t - test , 𝑡 ( 14 . 87 ) = − 0 . 22 , 𝑝 = 0 . 8 ) . ( b ) However , participants added significantly more clips to threads ( 𝜇 = 9 . 9 , SD = 3 . 48 ) in Threddy vs . Google Docs ( 𝜇 = 4 . 9 , SD = 3 . 17 ) ( paired t - test , 𝑡 ( 15 . 86 ) = − 3 . 19 , 𝑝 = 0 . 006 ) ( c ) Participants also collected and placed a sig - nificantly higher number of references into threads ( 𝜇 = 20 . 4 , SD = 13 . 84 ) in Threddy vs . Google Docs ( 𝜇 = 7 . 9 , SD = 4 . 91 ) ( paired t - test , 𝑡 ( 9 . 98 ) = − 2 . 55 , 𝑝 = 0 . 03 ) . Figure 6 : Evaluation Results : ( a ) The number of threads created by participants during the task did not differ significantly between Threddy and Google Docs . However , participants collected and organized a significantly higher number of ( b ) clips and ( c ) references into the threads on Threddy . demonstrating the utility of Threddy for supporting collection of clips for individual threads . In addition , the number of refer - ences collected and organized by the relevant threads was 2 . 6 × higher ( 𝜇 = 20 . 4 , SD = 13 . 84 ) in the Threddy condition than in the Google Docs condition ( 𝜇 = 7 . 9 , SD = 4 . 91 , 𝑝 = 0 . 03 ) , further demonstrating its support for efficient collection and organization of references by their relevant threads . 6 . 1 . 2 Qualitative Results . Saving time . All of the participants mentioned that automatic ex - traction of references from the highlighted citation context and linking them with metadata saved time . P1 mentioned that it “ saves a lot of time because I don’t have to cross check between the context and the references section ” and similarly P3 said “ Collecting references is such a pain , such a context break . . . and when I go to the references section and finally connect the number to the actual paper , and it turns out that the paper itself doesn’t even sound interesting , I need to go back to where I was , with the damage already being done in terms of breaking my reading flow . ” Compared to their experience with Threddy , participants described their typical workflow of conducting literature review as involving lots of “ scrolling back and forth ” and “ pointing and clicking ” ( 7 / 9 participants ) , and having to switch between different applications such as search engines , PDF viewers , and note - taking applications ( 3 / 9 ) . Automatic linking to metadata such as the link to the paper details page on Semantic Scholar allowed participants to do without “ having to spend a lot of time to track down PDFs ” ( P5 , P7 ) . Automatically binding refer - ences to their citation context “ reduced a few clicks that would have otherwise been necessary to organize and keep track of that way ” ( P9 ) . Uniformly formatting references in the card UI removed the subtask for “ formatting the references , for example it’s always a pain to format the text I copied from a PDF . . . the text is either too large , colored differently , or have weird line breaks , and often times the URLs are way too long ” ( P1 ) and made it easy as to not having to “ worry about all different ( surface ) citation forms ” ( P5 ) . This saved time was thought to be used for reading additional papers or switching to a different thread to explore more ( P2 ) . Context awareness and flow . Participants also described the per - sistence of threads and pinning most recently worked on threads to the top as effective awareness mechanisms for continuing their thinking along those threads . P9 said : “ Persisting data is helfpul , I don’t have to go back to the previous paper to be reminded of what I was thinking of . ” Context clipping was also considered helpful ( 3 / 9 ) and even better with its persistence across papers ( P1 ) . P9 thought being able to see the threads while reading any paper was “ a good forcing function to encourage myself to structure and organize as I go . ” Finally , P5 described the benefit of this awareness as follows : “Perpetualness of the information is nice because otherwise I have to do this kind of tasks in discrete chunks , just because I’ll lose the context a lot in the process because I cannot see where things came from . Or just with a long list of citations and other things . . . I cannot remember exactly why something that I opened up later is relevant anymore . In comparison , here in the interface I have the continuous stream of cognition , like ‘Past Me thought this was relevant to [ production of materials ] ( thread created by P5 ) . ” These results were also corroborated by participants’ responses to survey questions . On a 7 - point Likert scale ( 1 : Strongly disagree , 7 : Strongly agree ) , participants’ agreement was significantly higher with the statement “ It was easy to collect relevant clips using the system . ” in the Threddy condition ( 𝜇 = 6 . 2 , SD = 0 . 67 ) than in the Google Docs condition ( 𝜇 = 5 . 2 , SD = 1 . 09 , 𝑡 ( 13 . 23 ) = − 3 . 46 , 𝑝 = 0 . 01 ) . Furthermore , participants felt like it was easier “ to keep track of relevant references ” using Threddy ( 𝜇 = 5 . 9 , SD = 1 . 48 ) than Google Docs ( 𝜇 = 3 . 8 , SD = 1 . 27 , 𝑡 ( 15 . 63 ) = − 2 . 80 , 𝑝 = 0 . 02 ) , and also easier “ to organize references into relevant threads ” using Threddy ( 𝜇 = 5 . 6 , SD = 1 . 13 ) than Google Docs ( 𝜇 = 3 . 4 , SD = 1 . 33 , 𝑡 ( 15 . 58 ) = − 3 . 59 , 𝑝 = 0 . 007 ) . Finally , participants also felt that they were in a heightened flow state while using Threddy based on the results from our survey . Participants’ average composite responses to the flow questionnaire items was significantly higher in Threddy ( 𝜇 = 51 . 0 , SD = 6 . 5 ) than Google Docs ( 𝜇 = 42 . 9 , SD = UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur 6 . 77 , 𝑡 ( 15 . 97 ) = − 2 . 94 , 𝑝 = 0 . 02 ) . Additionally , the overall demand required for accomplishing the tasks , measured as the sum of the scores to five NASA - TLX questionnaire items ( excluding perfor - mance ) , showed no significant difference between the Google Docs ( 𝜇 = 62 . 6 , SD = 25 . 90 ) and Threddy conditions ( 𝜇 = 55 . 3 , SD = 20 . 34 ) ( 𝑡 ( 15 . 15 ) = 0 . 76 , 𝑝 = . 52 , Two - sided paired samples t - test ; Table 1 ) . 6 . 2 Discovering Papers Relevant to Threads Participants mentioned that “ it was nice to see recommendations directly relevant to each thread ” ( 3 / 9 ) and directly accessible in the interface ( 8 / 9 ) . Many recommendations “ seemed relevant ” ( 7 / 9 ) and especially in the first few rows of the recommendation section . Given their relevance , P6 felt that “ citation coverage as proxy for relevance seems to work well . ” Participants also agreed with the statement “ It was easy to find additional papers relevant to each thread using the system ” significantly more in the Threddy con - dition ( 𝜇 = 6 . 1 , SD = 0 . 78 ) than in the Google Docs condition ( 𝜇 = 4 . 2 , SD = 2 . 28 , 𝑡 ( 9 . 86 ) = − 2 . 35 , 𝑝 = 0 . 04 ) . They also felt featur - ing recommendations in terms of more recent papers that cited the references included in threads was helpful for “ getting a sense of how the field is progressing ” ( P3 , P5 ) . Interestingly , one participant felt that she experienced “ no fear of missing out ( FOMO ) ” ( P1 ) given the amount of recommendations available and their overall relevance , but another participant commented that “ I feel a little bit of FOMO because I built a thread which I thought was complete in a sense , but then seeing all these interesting articles made me think , what other things have I missed or simply not shown to me because I decided to organize this thread as such ” ( P5 ) . 6 . 3 Extracting Pre - digested Threads , Integrating Papers into Assembled Threads One challenge with extracting pre - digested threads from other pa - pers was merged context , which happened when the author of the paper combined multiple kinds and levels of research contribution into a single patch of text . P1 mentioned that “ ( fuzzy ) selection is nice , but it sometimes leads to too much . . . I have to still go through the list of extracted results and ‘check off’ something that I don’t want . For example , these papers are general and maybe related in the loose sense at best . . . these on the other hand are more specific . ” Similarly P5 commented : “ My main frustration is that people put so many references into a single sentence , and they are not the same . Some of them are more specific and some of them are more general . ” Partici - pants mentioned a need for specifying when they want an exact or pin - pointing selection mechanism that complements the current fuzzy extraction from the highlighted citation context ( “ Sometimes I want to point at exactly one cite I want to add from the context . ” – P1 ) , with additional support when a number of references were included in the citation context ( “ And for other papers , ( citation ) styles like [ 12 – 15 ] are not great because they ( the references ) are in a batch , so how am I supposed to know which ones go to which and which one’s interesting ? ” ) . While automatically linking the metadata of the extracted references including the title and TL ; DRs was helpful to the participants , sometimes they were unavailable due to missing data or provide insufficient context for comprehension specifically related to the citation context of interest ( P1 , P2 , P5 ) . 7 DISCUSSION 7 . 1 Impact on the Workflow Thread - firstvs . paper - firstexploration . ParticipantsusedThreddy to navigate through authors’ pre - digested threads , collect ones that were interesting to them , and assembling their own threads using the collected threads . Compared to how they conducted literature review Threddy seemed to unlock a new capability for them to synthesize along the personally interesting threads , across multiple papers , without losing context in the process . P1 contrasted her experience on Threddy with how she currently conducts literature review on Google Docs and described that the former inverses the role between threads and papers in a sense : “On Google Docs , I can only focus on one paper at a time . When I find an interesting new paper , I’ll skim it and write a short description of why it’s interesting . If I find it’s worth a more detailed read , I’ll try to read it in full , taking notes . . . like creating my version of an annotated bibliography . In Threddy I can see my threads when I read a new paper , so I almost focus on those ( threads ) as opposed to individual papers . ” – P1 This phenomenon of thread - first exploration ( in contrast to the paper - first exploration commonly used by our participants ) was also observed in how our participants engaged with actions such as adding new papers to threads , moving references and sub - threads out of their parent thread once enough references with sufficiently different context were identified , and re - labeling and re - framing threads with different text to capture their evolving understand - ing of the research field . It seemed that Threddy did not create additional workload for users by encouraging them to take the thread - first perspective either ; there was no significant difference in terms of the number of threads participants created within the duration of the timed study in each condition nor in terms of their perception of the demand required of them . It is possible , however , that the core of the literature review task that requires complex processing of information ( e . g . , identifying interesting research threads , summarizing and labeling threads , organizing them in a useful structure , updating the threads ) is not helped directly by Threddy . Indeed , participants perceived the easiness of creating threads and subthreads to be roughly equal in both Google Docs and Threddy conditions ( see Table 1 ) . Instead , Threddy may help scholars with the task by freeing up their capacity and attention span that would otherwise be tied up by significant auxiliary tasks such as collecting supporting pieces of evidence or relevant context as clips , organizing them into threads , and growing the threads with additional references while keeping track of them . Indeed our participants responded that Threddy provided significant support for such tasks ( Table 1 ) . On - the - go foraging and structuring . At a high level , Threddy users could continuously collect information while following the relevant threads of research . For example , improved context aware - ness and persistent threads across papers led participants to move between them and “ structure information on the go ” ( P9 ) as opposed to reviewing papers individually and “in discrete chunks due to the frequently lost context” ( P5 ) . Moreover , in - thread recommen - dations integrated the stages for searching and reading , further Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA reducing the context - switching cost . These reduced switching costs and support for externalizing working memory position Threddy to be especially useful in supporting the early sensemaking process of literature review as researchers forage for information , helping them create what Pirolli and Card term a “shoebox” of relevant information [ 47 ] easily , in a more organized way , and with affor - dances for helping them pull in even more relevant information . There are many other aspects of the process where other tools would remain useful . For example , active diagramming and concept mapping may help users externalize representations focused on relations of the concepts involved ( e . g . , understanding how the different components of a weather system fit together from a paper , rather than the threads of research on weather systems ) . Synthesis and summarization tools may also help further along the process ; here it is possible that a thread - based approach could scaffold the creation of synthesized mental models by enabling users to work with pre - grouped sets of papers . Checking assumptions via thread - centric recommendations . Participants generally appreciated the recommendations specific to each thread . In addition to the primary benefits of : 1 ) seeing what is out there , 2 ) getting a sense of how people are building off of the work curated for each thread , and 3 ) what may be relevant papers for further exploration along the specific threads , recom - mendations had secondary , unanticipated benefits as a “check for whether my thread makes sense ( by looking at the returned rec - ommendations ) ” ( P3 ) and as a way to “think about how I might re - define or sub - divide my threads” ( P7 ) . Other participants felt additional mechanisms for specifying which context is personally more important for the recommendations , because they felt like “the list of recommendations is quite a spoonful ( of papers ) , some of them are relevant but only at a high level , for example I don’t want to see [ this paper ] just because most of the references in my thread have cited it in the background” ( P1 ) . A fruitful avenue for future work therefore may lie in designing alternative mechanisms for finding relevant papers to recommend for each thread that go beyond the simple citation coverage metric explored in this work . 7 . 2 Scaling over a Long Period of Time An open question with Threddy is how the system would scale over time . With continued use , the number of threads and papers in them would grow significantly . Furthermore , a user’s organization would require refactoring as they become more expert in an area ; research areas grow and split ; or their interests and mental models change . The design of Threddy was directly motivated by issues with scale faced by researchers using other collection tools such as Zotero or Mendeley , with the introduction of hierarchical threads developed in - situ aimed at providing a flexible and scalable way to keep track of diverse topics and subtopics during literature review . Though limited by the duration , our user study uncovered preliminary results speaking to the challenges of scale and time . First , we found that users desired to focus primarily on a rela - tively small number of active threads that were most relevant to the context of their target paper . During the post - study interview participants noted that they are often limited in time by deadlines and focused on compiling the most relevant literature for their papers or grants , for example writing a related work section that might include 2 - 4 topic threads . As participants grew these threads , they noted that their mental models changed with new information , and could use Threddy to refactor the threads appropriately . This included pulling out a particularly dense topic into new subthreads , renaming threads as they learned more about what actually went in them , and using the hierarchy to nest new threads into existing ones and move between them . However , participants also noted challenges such as not being able to see an overview of all their threads and easily reorganize them within a dedicated workspace . These suggest clear areas for future work including bringing in proven triage and workflow ap - proaches such as tracking which papers have been read or are in different states of processing beyond the simple recency based mechanism introduced here . While these techniques were not core to testing the thread - based idea but they will become essential to a real - world system involving many threads , clips , and refer - ences . Another area includes support for working with threads over time , including more intelligent ways to split and merge threads or reorganizing them in the thread hierarchy , which would likely become more important as a user’s library grows over time . At an even higher level , there are interesting questions around whether Threddy’s hierarchical structure might be improved on by more flexible graph structures , and how such representations could be collaboratively aggregated and built on by others . 7 . 3 Beyond Citation Chaining Chaining the references in forward and backward directions in time is a common practice used by scientists searching for high relevance papers in the literature and making sense of how the field has progressed over time [ 64 ] . However , one potential limi - tation of citation chaining - based approaches is that it may limit the discoverability of work outside frequently co - cited bodies of literature , and may lead to filter bubbles [ 44 ] . Certain domains of knowledge are less likely to interact with each other [ 15 , 59 ] despite their potential for catalyzing significant scientific innovations [ 52 ] . Here , we believe that augmentative tools that help end - users dis - cover articles directly in the context of their flow of reading have potential for helping scholars become more open to the literature that may exist outside the domains they are familiar with but are nonetheless relevant . Additionally , the reduced context switching with the aid of the tool may also help scholars more deeply engage with more distant articles . In this vein , recent work on discovering analogical scientific literature [ 35 ] demonstrated an early evidence of the feasibility of computationally sourcing analogical papers that , although may be missed by conventional search engines , would inspire scientists to come up with novel conceptualization of their research problems ( see also [ 29 ] for how similar mechanisms of sourcing computa - tional analogies may spark inspirational ideas in a different task context ) . Complementary approaches may leverage the knowledge domains of papers that the scholar has recently read to automati - cally increase the frequency of cross - domain retrieval in subsequent recommendations ( cf . [ 34 ] ) or to design a user control for interac - tively tuning the retrieval domain diversity . At an even higher level , a broader design space for opportunities exists , for example how the system might source recommendations by taking into account the inferred ‘social’ relevance to frequently read or cited authors , UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur or use such relevance for user engagement and prioritization of recommendations [ 33 ] . 8 CONCLUSION In this paper we developed Threddy , a system that supports users with collecting patches of text that contains pre - digested synthesis by other authors ( i . e . , useful citation context along with automat - ically extracted associated references ) , and helps them assemble threads they are personally interested in using clippings of other authors’ pre - digested threads included in the introduction or re - lated sections of papers . In contrast with prior work that sought to create separate information environments for similar objectives , Threddy seamlessly integrates into the user’s in - situ context of reading , and aims at reducing the cost of context switching while harvesting , assembling , and synthesizing research threads . Further research is required to uncover additional design implications for in - situ reading support for collecting other’s synthesis work and assembling them into their own threads . ACKNOWLEDGMENTS This work was supported by the Carnegie Mellon Center for Knowl - edge Acceleration , National Science Foundation ( FW - HTF - RL , grant no . 1928631 ; IIS , grant no . 1816242 ; SHF , grant no . 1814826 ) , The Allen Institute for Artificial Intelligence ( Semantic Scholar ) , Google , and the Office of Naval Research . We also thank the anonymous reviewers for their constructive feedback . We also extend a heartfelt thanks to our study participants without whom this work would not have been possible . REFERENCES [ 1 ] 2008 – 2021 . GROBID . https : / / github . com / kermitt2 / grobid . arXiv : 1 : dir : dab86b296e3c3216e2241968f0d63b68e8209d3c [ 2 ] SalvatoreAndolina , KhalilKlouche , JaakkoPeltonen , MohammadHoque , Tuukka Ruotsalo , Diogo Cabral , Arto Klami , Dorota Głowacka , Patrik Floréen , and Giulio Jacucci . 2015 . Intentstreams : smart parallel search streams for branching ex - ploratory search . In Proceedings of the 20th international conference on intelligent user interfaces . 300 – 305 . [ 3 ] Tal August , Lucy Lu Wang , Jonathan Bragg , Marti A . Hearst , Andrew Head , and Kyle Lo . 2022 . Paper Plain : Making Medical Research Papers Approachable to Healthcare Consumers with Natural Language Processing . https : / / doi . org / 10 . 48550 / ARXIV . 2203 . 00130 [ 4 ] Sriram Karthik Badam , Zhicheng Liu , and Niklas Elmqvist . 2019 . Elastic Docu - ments : CouplingTextandTablesthroughContextualVisualizationsforEnhanced Document Reading . IEEE Transactions on Visualization and Computer Graphics 25 ( 2019 ) , 661 – 671 . [ 5 ] Charles Bazerman . 1985 . Physicists reading physics : Schema - laden purposes and purpose - laden schema . Written communication 2 , 1 ( 1985 ) , 3 – 23 . [ 6 ] Michel Beaudouin - Lafon , Susanne Bødker , and Wendy E . Mackay . 2021 . Genera - tive Theories of Interaction . ACM Trans . Comput . - Hum . Interact . 28 , 6 , Article 45 ( nov 2021 ) , 54 pages . https : / / doi . org / 10 . 1145 / 3468505 [ 7 ] Lutz Bornmann and Rüdiger Mutz . 2015 . Growth rates of modern science : A bibliometric analysis based on the number of publications and cited references . Journal of the Association for Information Science and Technology 66 , 11 ( 2015 ) , 2215 – 2222 . [ 8 ] Corinna Breitinger , Patrick Wortner , Bela Gipp , and Harald Reiterer . 2019 . ‘Too Late to Collaborate’ : Challenges to the Discovery of in - Progress Research . In 2019 ACM / IEEE Joint Conference on Digital Libraries ( JCDL ) . IEEE , 134 – 137 . [ 9 ] Christine Susan Bruce . 1994 . Research students’ early experiences of the disser - tation literature review . Studies in Higher Education 19 , 2 ( 1994 ) , 217 – 229 . [ 10 ] Isabel Cachola , Kyle Lo , Arman Cohan , and Daniel Weld . 2020 . TLDR : Extreme Summarization of Scientific Documents . In Findings of the Association for Com - putational Linguistics : EMNLP 2020 . Association for Computational Linguistics , Online , 4766 – 4777 . https : / / doi . org / 10 . 18653 / v1 / 2020 . findings - emnlp . 428 [ 11 ] Joseph Chee Chang , Nathan Hahn , Yongsung Kim , Julina Coupland , Bradley Breneisen , Hannah S Kim , John Hwong , and Aniket Kittur . 2021 . When the Tab Comes Due : Challenges in the Cost Structure of Browser Tab Usage . Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems ( 2021 ) . [ 12 ] Joseph Chee Chang , Yongsung Kim , Victor Miller , Michael Xieyang Liu , Brad A Myers , andAniketKittur . 2021 . Tabs . do : Task - CentricBrowserTabManagement . In The 34th Annual ACM Symposium on User Interface Software and Technology . 663 – 676 . [ 13 ] Duen Horng Chau , Aniket Kittur , Jason I . Hong , and Christos Faloutsos . 2011 . Apolo : Interactive Large Graph Sensemaking by Combining Machine Learning andVisualization . In Proceedingsofthe17thACMSIGKDDInternationalConference on Knowledge Discovery and Data Mining ( San Diego , California , USA ) ( KDD ’11 ) . Association for Computing Machinery , New York , NY , USA , 739 – 742 . https : / / doi . org / 10 . 1145 / 2020408 . 2020524 [ 14 ] Kiroong Choe , Seokweon Jung , Seokhyeon Park , Hwajung Hong , and Jinwook Seo . 2021 . Papers101 : Supporting the discovery process in the literature re - view workflow for novice researchers . In 2021 IEEE 14th Pacific Visualization Symposium ( PacificVis ) . IEEE , 176 – 180 . [ 15 ] Johan SG Chu and James A Evans . 2021 . Slowed canonical progress in large fields of science . Proceedings of the National Academy of Sciences 118 , 41 ( 2021 ) , e2021636118 . [ 16 ] Arman Cohan , Sergey Feldman , Iz Beltagy , Doug Downey , and Daniel Weld . 2020 . SPECTER : Document - level Representation Learning using Citation - informed Transformers . In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics . Association for Computational Linguistics , Online , 2270 – 2282 . https : / / doi . org / 10 . 18653 / v1 / 2020 . acl - main . 207 [ 17 ] Mihaly Csikszentmihalyi and Mihaly Csikzentmihaly . 1990 . Flow : The psychology of optimal experience . Vol . 1990 . Harper & Row New York . [ 18 ] Antonina Dattolo and Marco Corbatto . 2021 . Assisting researchers in biblio - graphic tasks : A new usable , real - time tool for analyzing bibliographies . Journal of the Association for Information Science and Technology ( 2021 ) . [ 19 ] Raymond Fok , Andrew Head , Jonathan Bragg , Kyle Lo , Marti A . Hearst , and Daniel S . Weld . 2022 . Scim : Intelligent Faceted Highlights for Interactive , Multi - Pass Skimming of Scientific Papers . https : / / doi . org / 10 . 48550 / ARXIV . 2205 . 04561 [ 20 ] Camille Gobert and Michel Beaudouin - Lafon . 2022 . I - LaTeX : Manipulating Transitional Representations between LaTeX Code and Generated Documents . In Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems ( New Orleans , LA , USA ) ( CHI ’22 ) . Association for Computing Machinery , New York , NY , USA , Article 554 , 16 pages . https : / / doi . org / 10 . 1145 / 3491102 . 3517494 [ 21 ] Sebastian Gomes , Miriam Boon , and Orland Hoeber . 2022 . A Study of Cross - Session Cross - Device Search Within an Academic Digital Library . In Proceedings of the 45th International ACM SIGIR Conference on Research and Development in Information Retrieval ( Madrid , Spain ) ( SIGIR ’22 ) . Association for Computing Ma - chinery , New York , NY , USA , 384 – 394 . https : / / doi . org / 10 . 1145 / 3477495 . 3531929 [ 22 ] MiriamGreis , EmreAvci , AlbrechtSchmidt , andTonjaMachulla . 2017 . Increasing users’ confidence in uncertain data by aggregating data from multiple sources . In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems . 828 – 840 . [ 23 ] HanL . Han , JunhangYu , RaphaelBournet , AlexandreCiorascu , WendyE . Mackay , and Michel Beaudouin - Lafon . 2022 . Passages : Interacting with Text Across Documents . In Proceedings of the 2022 CHI Conference on Human Factors in ComputingSystems ( NewOrleans , LA , USA ) ( CHI’22 ) . AssociationforComputing Machinery , New York , NY , USA , Article 338 , 17 pages . https : / / doi . org / 10 . 1145 / 3491102 . 3502052 [ 24 ] Sandra G Hart and Lowell E Staveland . 1988 . Development of NASA - TLX ( Task Load Index ) : Results of empirical and theoretical research . In Advances in psy - chology . Vol . 52 . Elsevier , 139 – 183 . [ 25 ] AndrewHead , KyleLo , DongyeopKang , RaymondFok , SamSkjonsberg , DanielS Weld , and Marti A Hearst . 2021 . Augmenting scientific papers with just - in - time , position - sensitive definitions of terms and symbols . In Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems . 1 – 18 . [ 26 ] Andrew Head , Amber Xie , and Marti A Hearst . 2022 . Math Augmentation : How AuthorsEnhancetheReadabilityofFormulasusingNovelVisualDesignPractices . In Proceedingsofthe2021CHIConferenceonHumanFactorsinComputingSystems . 1 – 16 . [ 27 ] Terje Hillesund . 2010 . Digital reading spaces : How expert readers handle books , the Web and electronic paper . ( 2010 ) . [ 28 ] Ken Hinckley , Xiaojun Bi , Michel Pahud , and Bill Buxton . 2012 . Informal in - formation gathering techniques for active reading . In Proceedings of the SIGCHI conference on human factors in computing systems . 1893 – 1896 . [ 29 ] Tom Hope , Ronen Tamari , Daniel Hershcovich , Hyeonsu B Kang , Joel Chan , Aniket Kittur , and Dafna Shahaf . 2022 . Scaling Creative Inspiration with Fine - Grained Functional Aspects of Ideas . In CHI Conference on Human Factors in ComputingSystems ( NewOrleans , LA , USA ) ( CHI’22 ) . AssociationforComputing Machinery , New York , NY , USA , Article 12 , 15 pages . https : / / doi . org / 10 . 1145 / 3491102 . 3517434 [ 30 ] Arif E Jinha . 2010 . Article 50 million : an estimate of the number of scholarly articles in existence . Learned Publishing 23 , 3 ( 2010 ) , 258 – 263 . [ 31 ] Hyeonsu Kang and Philip J . Guo . 2017 . Omnicode : A Novice - Oriented Live Programming Environment with Always - On Run - Time Value Visualizations . In Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology ( Qu’ebecCity , QC , Canada ) ( UIST’17 ) . AssociationforComputingMa - chinery , New York , NY , USA , 737 – 745 . https : / / doi . org / 10 . 1145 / 3126594 . 3126632 [ 32 ] Hyeonsu B Kang , Gabriel Amoako , Neil Sengupta , and Steven P Dow . 2018 . Paragon : An online gallery for enhancing design feedback with visual examples . In Proceedingsofthe2018CHIConferenceonHumanFactorsinComputingSystems . 1 – 13 . [ 33 ] Hyeonsu B Kang , Rafal Kocielnik , Andrew Head , Jiangjiang Yang , Matt Latzke , Aniket Kittur , Daniel S Weld , Doug Downey , and Jonathan Bragg . 2022 . From Who You Know to What You Read : Augmenting Scientific Recommendations with Implicit Social Networks . In CHI Conference on Human Factors in Computing Systems ( NewOrleans , LA , USA ) ( CHI’22 ) . AssociationforComputingMachinery , New York , NY , USA , Article 302 , 23 pages . https : / / doi . org / 10 . 1145 / 3491102 . 3517470 [ 34 ] HyeonsuB Kang , ShesheraMysore , KevinJ Huang , Haw - Shiuan Chang , Thorben Prein , Andrew McCallum , Aniket Kittur , and Elsa Olivetti . 2022 . Augmenting Scientific Creativity with Retrieval across Knowledge Domains . In Second Work - shop on Bridging Human - Computer Interaction and Natural Language Processing at NAACL 2022 . arXiv . https : / / doi . org / 10 . 48550 / ARXIV . 2206 . 01328 [ 35 ] Hyeonsu B . Kang , Xin Qian , Tom Hope , Dafna Shahaf , Joel Chan , and Aniket Kittur . 2022 . Augmenting Scientific Creativity with an Analogical Search Engine . ACM Trans . Comput . - Hum . Interact . ( mar 2022 ) . https : / / doi . org / 10 . 1145 / 3530013 Just Accepted . [ 36 ] Dae Hyun Kim , Enamul Hoque , Juho Kim , and Maneesh Agrawala . 2018 . Facil - itating Document Reading by Linking Text and Tables . Proceedings of the 31st Annual ACM Symposium on User Interface Software and Technology ( 2018 ) . [ 37 ] Nicholas Kong , Marti A . Hearst , and Maneesh Agrawala . 2014 . Extracting ref - erences between text and charts via crowdsourcing . Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( 2014 ) . [ 38 ] Andrew Kuznetsov , Joseph Chee Chang , Nathan Hahn , Napol Rachatasumrit , Bradley Breneisen , Julina Coupland , and Aniket Kittur . 2022 . Fuse : In - Situ sense - making Support in the Browser . In The 35th Annual ACM Symposium on User Interface Software and Technology ( UIST ’22 ) . Association for Computing Machin - ery , New York , NY , USA . [ 39 ] Esther Landhuis . 2016 . Scientific literature : Information overload . Nature 535 , 7612 ( 2016 ) , 457 – 458 . [ 40 ] Kyle Lo , Lucy Lu Wang , Mark Neumann , Rodney Kinney , and Daniel S . Weld . 2020 . S2ORC : The Semantic Scholar Open Research Corpus . In Proceedings of ACL . https : / / arxiv . org / abs / 1911 . 02782 [ 41 ] Anamika Megwalu . 2015 . Academic social networking : a case study on users’ information behavior . In Current Issues in Libraries , Information Science and Related Fields . Emerald Group Publishing Limited . [ 42 ] JamesGMiller . 1960 . Informationinputoverloadandpsychopathology . American journal of psychiatry 116 , 8 ( 1960 ) , 695 – 704 . [ 43 ] Dan Morris , Meredith Ringel Morris , and Gina Venolia . 2008 . SearchBar : A Search - Centric Web History for Task Resumption and Information Re - Finding . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( Florence , Italy ) ( CHI ’08 ) . Association for Computing Machinery , New York , NY , USA , 1207 – 1216 . https : / / doi . org / 10 . 1145 / 1357054 . 1357242 [ 44 ] Tien T . Nguyen , Pik - Mai Hui , F . Maxwell Harper , Loren Terveen , and Joseph A . Konstan . 2014 . Exploring the Filter Bubble : The Effect of Using Recommender Systems on Content Diversity . In Proceedings of the 23rd International Conference on World Wide Web ( Seoul , Korea ) ( WWW ’14 ) . Association for Computing Ma - chinery , New York , NY , USA , 677 – 686 . https : / / doi . org / 10 . 1145 / 2566486 . 2568012 [ 45 ] David Nicholas , Peter Williams , Ian Rowlands , and Hamid R Jamali . 2010 . Researchers’e - journal use and information seeking behaviour . Journal of In - formation Science 36 , 4 ( 2010 ) , 494 – 516 . [ 46 ] Richar Van Noorden . 2014 . Global scientific output doubles every nine years . http : / / blogs . nature . com / news / 2014 / 05 / global - scientific - output - doubles - every - nine - years . html [ 47 ] Peter Pirolli and Stuart Card . 2005 . The sensemaking process and leverage points for analyst technology as identified through cognitive task analysis . In Proceedings of international conference on intelligence analysis , Vol . 5 . McLean , VA , USA , 2 – 4 . [ 48 ] Antoine Ponsard , Francisco Escalona , and Tamara Munzner . 2016 . PaperQuest : A visualization tool to support literature review . In Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems . 2264 – 2271 . [ 49 ] Napol Rachatasumrit , Jonathan Bragg , Amy X Zhang , and Daniel S Weld . 2022 . CiteRead : Integrating Localized Citation Contexts into Scientific Paper Reading . In 27th International Conference on Intelligent User Interfaces . 707 – 719 . [ 50 ] Napol Rachatasumrit , Gonzalo Ramos , Jina Suh , Rachel Ng , and Christopher Meek . 2021 . ForSense : Accelerating Online Research Through Sensemaking Integration and Machine Research Support . In 26th International Conference on Intelligent User Interfaces . 608 – 618 . [ 51 ] Stephen Rowland . 2002 . Overcoming fragmentation in professional life : The challenge for academic development . Higher education quarterly 56 , 1 ( 2002 ) , 52 – 64 . [ 52 ] Andrey Rzhetsky , Jacob G Foster , Ian T Foster , and James A Evans . 2015 . Choos - ing experiments to accelerate collective discovery . Proceedings of the National Academy of Sciences 112 , 47 ( 2015 ) , 14569 – 14574 . [ 53 ] Dafna Shahaf , Carlos Guestrin , and Eric Horvitz . 2012 . Metro maps of science . In Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining . 1122 – 1130 . [ 54 ] Pao Siangliulue , Joel Chan , Steven P . Dow , and Krzysztof Z . Gajos . 2016 . Idea - Hound : Improving Large - Scale Collaborative Ideation with Crowd - Powered Real - Time Semantic Modeling . In Proceedings of the 29th Annual Symposium on User Interface Software and Technology ( Tokyo , Japan ) ( UIST ’16 ) . Association for Com - putingMachinery , NewYork , NY , USA , 609 – 624 . https : / / doi . org / 10 . 1145 / 2984511 . 2984578 [ 55 ] Herbert A Simon . 1996 . Designing organizations for an information - rich world . International Library of Critical Writings in Economics 70 ( 1996 ) , 187 – 202 . [ 56 ] Benjamin Sturm and Ali Sunyaev . 2019 . Design principles for systematic search systems : a holistic synthesis of a rigorous multi - cycle design science research journey . Business & Information Systems Engineering 61 , 1 ( 2019 ) , 91 – 111 . [ 57 ] Hariharan Subramonyam , Colleen Seifert , Priti Shah , and Eytan Adar . 2020 . Texsketch : Active diagramming through pen - and - ink annotations . In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems . 1 – 13 . [ 58 ] Nicole Sultanum , Christine Murad , and Daniel Wigdor . 2020 . Understanding and supporting academic literature review workflows with litsense . In Proceedings of the International Conference on Advanced Visual Interfaces . 1 – 5 . [ 59 ] Don R . Swanson . 1986 . Undiscovered Public Knowledge . The Li - brary Quarterly 56 , 2 ( 1986 ) , 103 – 118 . https : / / doi . org / 10 . 1086 / 601720 arXiv : https : / / doi . org / 10 . 1086 / 601720 [ 60 ] CraigS . TashmanandW . KeithEdwards . 2011 . LiquidText : AFlexible , Multitouch Environment to Support Active Reading . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( Vancouver , BC , Canada ) ( CHI ’11 ) . Association for Computing Machinery , New York , NY , USA , 3285 – 3294 . https : / / doi . org / 10 . 1145 / 1978942 . 1979430 [ 61 ] Carol Tenopir , Donald W King , Sheri Edwards , and Lei Wu . 2009 . Electronic journals and changes in scholarly article seeking and reading patterns . In Aslib proceedings . Emerald Group Publishing Limited . [ 62 ] Wenhui Wang , Furu Wei , Li Dong , Hangbo Bao , Nan Yang , and Ming Zhou . 2020 . Minilm : Deep self - attention distillation for task - agnostic compression of pre - trained transformers . Advances in Neural Information Processing Systems 33 ( 2020 ) , 5776 – 5788 . [ 63 ] Yun Wang , Dongyu Liu , Huamin Qu , Qiong Luo , and Xiaojuan Ma . 2016 . A guided tour of literature review : Facilitating academic paper reading with nar - rative visualization . In Proceedings of the 9th International Symposium on Visual Information Communication and Interaction . 17 – 24 . [ 64 ] Anthony Watkinson , David Nicholas , Clare Thornley , Eti Herman , Hamid R Jamali , Rachel Volentine , Suzie Allard , Kenneth Levine , and Carol Tenopir . 2016 . Changes in the digital scholarly environment and issues of trust : An exploratory , qualitative analysis . Information processing & management 52 , 3 ( 2016 ) , 446 – 458 . [ 65 ] Jane Webster , Linda Klebe Trevino , and Lisa Ryan . 1993 . The dimensionality and correlates of flow in human - computer interactions . Computers in human behavior 9 , 4 ( 1993 ) , 411 – 426 . [ 66 ] Jen - Her Wu and Shu - Ching Wang . 2005 . What drives mobile commerce ? : An empirical evaluation of the revised technology acceptance model . Information & management 42 , 5 ( 2005 ) , 719 – 729 . [ 67 ] Jonathan S . Yedidia , William T . Freeman , and Yair Weiss . 2003 . Understanding Belief Propagation and Its Generalizations . Morgan Kaufmann Publishers Inc . , San Francisco , CA , USA , 239 – 269 . [ 68 ] Xiaolong Zhang , Yan Qu , C . Lee Giles , and Piyou Song . 2008 . CiteSense : Sup - porting Sensemaking of Research Literature . In Proceedings of the SIGCHI Confer - ence on Human Factors in Computing Systems ( Florence , Italy ) ( CHI ’08 ) . As - sociation for Computing Machinery , New York , NY , USA , 677 – 680 . https : / / doi . org / 10 . 1145 / 1357054 . 1357161 [ 69 ] SachaZyto , DavidKarger , MarkAckerman , andSanjoyMahajan . 2012 . Successful Classroom Deployment of a Social Document Annotation System . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( Austin , Texas , USA ) ( CHI ’12 ) . Association for Computing Machinery , New York , NY , USA , 1883 – 1892 . https : / / doi . org / 10 . 1145 / 2207676 . 2208326 UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Hyeonsu B . Kang , Joseph Chee Chang , Yongsung Kim , and Aniket Kittur Appendix A . Algorithm for Ranking Relevant Existing Threads for Adding New Threads Sub - thread 1 2 3 Top - level thread A new thread to be inserted 4 ? ? ? A vertical chain e Figure 7 : Closely related threads given a new target thread to be inserted are ranked in two stages . In stage one , the ver - tical chains of threads are grouped together , and a measure of fit that balances the group similarity ( i . e . , similarity to the centroid of the group ) and the maximal member similarity is computed . In stage two , each of the member threads of a vertical chain is compared against to the target thread to further rank them based on similarity which helps the end - user quickly see which thread may be the most relevant for association . When no thread is matching the new thread’s content the user can insert it as a new top - level thread . With the continued use , scholars would likely accumulate a num - ber of threads in the drawer of the interface , leading to a scanning cost that may increase linearly with it at the minimum . In the hope of scaling the usage of Threddy , an algorithm was developed to automatically sort closely related threads that the new thread most likely belongs to in a descending order of their relevance . The first step of this algorithm is finding closely related vertical ‘chains’ of threads to the to - be - added thread . The intuition here is that end - users most likely nested threads for their semantic relatedness , pre - serving of which may provide the system a valuable source of signal for discerning the similarity between the new thread and existing chains of threads . Therefore , we first group the members of each chained threads ( traversed via the depth - first manner ) , and com - pute the similarity between the new target thread and the centroid of the chain . For computing the similarity and the chain centroid , the target thread and each member of the group are embedded into high - dimensional vectors that preserve their multifaceted semantic relatedness . We use the Microsoft’s MiniLM model [ 62 ] fine - tuned by HuggingFace 8 with 1B + training pairs , including 116M citation pairs from S2ORC . In our pilot test , this model provided a good trade - off between efficiency and performance for use in our real - time application setting . The chain centroid is computed using a simple average of the member thread embeddings . However , optimizing only for the similarity to the group centroid runs the risk of finding a chain that although the members’ centroid is close to the target thread’s embedding , all of its members may be scattered far from one another ( i . e . , high dispersion , low cohesion ) . Therefore , we further measure the similarity between the target thread and the closest member thread in the chain and use it to 8 huggingface . co deprioritize matching on such cases : Group Similarity ( grp , T ) : = sim (cid:32) 𝑁 ∑︁ 𝑛 ∈ grp ( −−−−−→ emb ( n ) ) / 𝑁 , −−−−−→ emb ( T ) (cid:33) Cohesion ( grp , T ) : = max 𝑛 ∈ grp sim (cid:16) −−−−−→ emb ( n ) , −−−−−→ emb ( T ) (cid:17) For a given target thread 𝑇 , our final rank objective is multiplicative : argmax grp (cid:16) Group Similarity grp , 𝑇 × Cohesion grp , 𝑇 (cid:17) to prioritize groups with coherent rather than lopsided similarity ( e . g . , a high score on only one of Group Similarity or Cohesion but low score on the other may result in an overall irrelevant thread to the user due to the potential situations as described above . ) . Once we have identified the best chained thread to insert the target thread into , we further rank its member threads in the order of its similarity to the target thread embedding . The resulting ranks of the threads are then presented to the user who may insert the target thread at a particular position of the chain . Appendix B . Additional Survey Results Descriptions of additional questionnaire items and participants’ responses grouped by condition are presented in Table 1 . Two - sided paired samples t - tests were performed to compute the 𝑝 - values between conditions . See Section 7 . 1 for a discussion of the results . Appendix C . Vignettes of Participants’ Threads The vignettes of threads were simplified by excluding the many clips and references added to each ( sub - ) thread , and loose yet - to - be organized papers . Note that the structure of threads is subject to change through participants’ iteration . Participant A ’s vignette of threads , simplified . • Human - AI collaboration in healthcare – Barriers to AI adoption in healthcare – Human AI - onboarding – ML as second set of eyes – Clinical decision support systems • Mental Model for Decision Making and Errors • Explainable AI in healthcare Participant B ’s vignette of threads , simplified . • Interpretable model classes and explainability methods • Usage of GAMs – GAMs are widely used to detect patterns of data • Model interpretability ( broadly ) • Explainable Boosting Machine • GAM empirical studies and results Participant C ’s vignette of threads , simplified . • Table - based decision support tools – Sensemaking of collections of online information • Review Summarization • Aspect Extraction Methods • Research on consumer product reviews Threddy UIST ’22 , October 29 - November 2 , 2022 , Bend , OR , USA Description Google Docs Threddy p - val . Overall Workload Sum of the participants’ responses to the five NASA - TLX’s [ 24 ] 21 - point scale questionnaire items below . 62 . 6 ( SD = 25 . 90 ) 55 . 3 ( SD = 20 . 34 ) 𝑝 = . 47 Mental Demand “How mentally demanding was the task ? ” 10 . 4 ( SD = 6 . 91 ) 11 . 6 ( SD = 5 . 59 ) 𝑝 = . 60 Physical Demand “How physically demanding was the task ? ” 12 . 7 ( SD = 7 . 16 ) 9 . 3 ( SD = 4 . 18 ) 𝑝 = . 14 Temporal Demand “How hurried or rushed was the pace of the task ? ” 13 . 1 ( SD = 6 . 15 ) 12 . 3 ( SD = 4 . 47 ) 𝑝 = . 64 Effort “How hard did you have to work to accomplish your level of performance ? ” 16 . 2 ( SD = 3 . 90 ) 11 . 7 ( SD = 5 . 39 ) 𝑝 = . 15 Frustration “How insecure , discouraged , irritated , stressed , and an - noyed were you ? ” 10 . 1 ( SD = 6 . 72 ) 10 . 4 ( SD = 5 . 94 ) 𝑝 = . 92 Flow Sum of the participants’ responses to the 11 questionnaire items adopted from Webster et al . [ 65 ] measuring the flow aspect of participants’ interaction with the system . 42 . 9 ( SD = 6 . 77 ) 51 . 0 ( SD = 6 . 50 ) 𝑝 = . 02 ∗ TAM Sum of the participants’ responses to the 5 questionnaire items adopted from [ 66 ] measuring the technological com - patibility with participants’ existing literature review work - flows and the easiness of learning . 28 . 1 ( SD = 5 . 93 ) 24 . 7 ( SD = 5 . 12 ) 𝑝 = . 18 Confidence “Using the system increased my confidence in conducting literature review . ( The response Likert scales for this ques - tion and below are 1 : Strongly disagree , 7 : Strongly agree ) ” 4 . 7 ( SD = 1 . 87 ) 4 . 8 ( SD = 1 . 56 ) 𝑝 = . 88 Creating Threads “It was easy to create different threads in the related litera - ture using the system . ” 5 . 6 ( SD = 1 . 24 ) 5 . 9 ( SD = 0 . 93 ) 𝑝 = . 54 Creating Sub - threads “It was easy to add sub - threads using the system . ” 5 . 4 ( SD = 1 . 51 ) 5 . 3 ( SD = 1 . 73 ) 𝑝 = . 83 Collecting Clips “It was easy to collect relevant clips using the system . ” 5 . 2 ( SD = 1 . 09 ) 6 . 2 ( SD = 0 . 67 ) 𝑝 = . 001 ∗∗ Organizing Clips “It was easy to organize clips into relevant threads using the system . ” 5 . 8 ( SD = 0 . 97 ) 5 . 3 ( SD = 1 . 50 ) 𝑝 = . 27 Keeping Track of Ref - erences “It was easy to keep track of relevant references using the system . ” 3 . 8 ( SD = 1 . 48 ) 5 . 9 ( SD = 1 . 27 ) 𝑝 = . 02 ∗ Growing Threads “It was easy to find additional papers relevant to each thread using the system . ” 4 . 2 ( SD = 2 . 28 ) 6 . 1 ( SD = 0 . 78 ) 𝑝 = . 04 ∗ Organizing Refer - ences “It was easy to organize references into relevant threads using the system . ” 3 . 4 ( SD = 1 . 33 ) 5 . 6 ( SD = 1 . 13 ) 𝑝 = . 007 ∗∗ Table 1 : Descriptions of additional questionnaire items and participants’ responses grouped by condition . 𝑝 − values are from two - sided paired samples t - tests . The results suggest that Threddy helps with collecting clips , growing threads by finding more references , and organizing them efficiently . However , Threddy did not seem to decrease the demand of the task or of cre - ating and organizing threads . Furthermore , there was no significant difference in terms of technology compatibility / likelihood of adoption between Google Docs and Threddy , suggesting a familiarity bias favoring Google Docs .