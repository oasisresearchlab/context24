M odules are deﬁned as physical structures that have a one - to - one correspondence with functional structures 1 . Modular products may be deﬁned as machines , assemblies or components that accomplish an overall function through combination of distinct building blocks or modules 2 . While modular products have distinct manufacturing advantages in many instances , modularity in mechanical design is often an afterthought . Once a product is designed and developed , components of the product are observed to have other potential uses . Effective application of these components as modules can lead to faster development and reduced costs in future product designs . However , if modularity is ident - iﬁed and exploited in the initial conceptual or reverse engineering effort , 1 Ulrich , K and Tung , K ‘Fun - damentals of Product Modularity’ Proceedingsofthe1991Winter Annual Meeting DE - Vol . 39 Atlanta , GA ( 1991 ) pp 73 – 79 2 Pahl , G and Beitz , W Engin - eering Design : A Systematic Approach Springer - Verlag ( 1988 ) www . elsevier . com / locate / destud 0142 - 694X / 00 $ - see front matter Design Studies 21 ( 2000 ) 5 – 31 PII : S0142 - 694X ( 99 ) 00003 - 4 5 (cid:211) 2000 Elsevier Science Ltd All rights reserved Printed in Great Britain A heuristic method for identifying modules for product architectures Robert B . Stone , Department of Basic Engineering , University of Missouri - Rolla , Rolla , MO 65409 - 0210 , USA E - mail : rstone @ umr . edu Kristin L . Wood and Richard H . Crawford , Department of Mechanical Engineering , The University of Texas at Austin , Austin , TX 78712 , USA E - mails : wood @ mail . utexas . edu ; rhc @ mail . utexas . edu Developing product architectures is a key phase in design and development processes . It encompasses the transformation of product function to alternative product layouts . In this paper , we describe a new approach for identifying modules for product architectures . We begin by reviewing the terminology and motivation for modular products . The new concepts of a functional basis and time ordered function chains are used to formally derive functional models of products . Then , three heuristic methods for identifying modules from functional models are presented . Using the formal functional decomposition and heuristic methods , modular design can be executed earlier in the product development process , as illustrated by the example of a consumer power - tool product and a larger , complex maintenance device . A database of 70 consumer products is used to verify and conﬁrm the overall modular design approach . (cid:211) 2000 Elsevier Science Ltd . All rights reserved Keywords : design methodology , product development , conceptual design , functional modeling 3 Congress ‘Green Products byDesign : ChoicesforaCleaner Environment’ Ofﬁce of Tech - nologyAssessment , OTA - E - 541 , Washington , D . C . ( 1992 ) 4 Otto , K and Wood , K ‘A Reverse Engineering and Rede - sign Methodology for Product Evolution’ Proceedings of the 1996ASMEDesignTheoryandMethodologyConference96 - DETC / DTM - 1523 Irvine , CA ( 1996 ) 5 Bradley , S and Agogino , A ‘An Intelligent Real Time Design Methodology for Component Selection : An Approach to Man - aging Uncertainty’ Journal of Mechanical Design Vol 116 ( 1994 ) pp 980 – 988 6 Ward , A ATheoryofQuanti - tative Inference Applied to a Mechanical Design Compiler Doctoral Thesis , Massachusetts Institute of Technology ( 1989 ) 7 Ward , A and Seering , W ‘Quantitative Inference in a Mechanical Design Compiler’ Journal of Mechanical Design Vol 115 ( 1993 ) pp 29 – 35 8 Schmidt , L and Cagan , J ‘Optimal Conﬁguration Design : An Integrated Approach Using Grammars’ To appear in Journal of Mechanical Design ( accepted 1997 ) 9 Schmidt , L and Cagan , J ‘GGREADA : A Graph Grammar - Based Machine Design Algor - ithm’ To appear in Researchin Engineering Design ( accepted 1997 ) 10 Vadde , S , Allen , J , and Mistree , F ‘Catalog Design : Design Using Available Assets’ Proceedingsofthe1992ASMEDesignTechnicalConferences , AdvancesinDesignAutomation DE - Vol 44 No 1 Scottsdale , AZ ( 1992 ) 11 Gupta , S and Krishnan , K ‘Product Family - Based Inte - grated Component and Vendor Selection’ Department of Man - agement Working Paper , The University of Texas at Austin ( 1997 ) 12 Boothroyd , G and Dewhurst , P ProductDesignfor AssemblyMcGraw - Hill , Inc , New York ( 1989 ) 13 Marks , M , Eubanks , C , and Ishii , K ‘Life - Cycle Clumping of Product Designs for Ownership and Retirement’ Proceedingsof the ASME Design Theory and Methodology Conference DE - Vol . 53 ( 1993 ) pp 83 – 90 14 Newcomb , P , Bras , B , and Rosen , D ‘Implications of the immediate product design reaps beneﬁts in reduced development time and costs 2 , 3 . ( Reverse engineering initiates the redesign process , wherein a device is predicted , observed , disassembled , analyzed , tested , ‘experi - enced , ’ and documented in terms of its functionality , form , physical prin - ciples , manufacturability and assemblability 4 ) . Combining components or modules into complete products is addressed in recent work on automated design techniques 5 – 10 . Likewise , signiﬁcant advancements have been made in integrating components or reducing part count at the form - level of design 11 – 17 . However , how do we deﬁne what the function of a module is ? How do we deﬁne appropriate module inter - faces and opportunities ? Both Cutherell 18 and Ulrich and Eppinger present a four step process for deﬁning a module - based product architecture . This process begins by decomposing a product into functional schematics , then deﬁning ‘chunks’ as possible modules . Yet , the process lacks a systematic technique for clustering elements and deﬁning interactions . The heuristic methods in this paper provide such a technique . Once modules are deﬁned , alternative layouts and component selection become more straightforward tasks . Economic tradeoffs may then be applied to the alternatives , using , for example , Krishnan et al’s 19 model of product development costs for modular products . In the next sections , we present a novel heuristic method to identify mod - ules as part of an overall product architecture design methodology . 1 An overview of product architecture design Product architecture design is , in its essence , the transformation from pro - duct function to product form . It relies upon successful gathering of cus - tomer needs and their mapping to a functional model of the product . After that , though , a choice must be made about the type of product architecture to implement - integral vs . modular . An integral architecture is deﬁned as a physical structure where the functional elements map to a single or very small number of physical elements . Examples of integral products are shown in Figure 1 . Modular architectures , on the other hand , are physical product sub - structures that have a one - to - one correspondence with a subset of a product’s functional model . Examples of modular architectures are shown in Figure 2 . Next , we present a design methodology which identiﬁes possible modular product architectures . An overview of our product architecture design methodology is shown in Figure 3 . Step 1 : Gather Customer Needs and Steps 4 – 5 : Generate Con - cepts and Embody Design are well documented in literature , 1 , 2 , 33 , 20 – 22 and are not the focus of this article . Instead , identifying modular product 6 Design Studies Vol 21 No 1 January 2000 Modularity on Product Design for the Life Cycle’ Proceedings of the1996ASME DesignTheory and Methodology Conference 96 - DETC / DTM - 1516 Irvine , CA ( 1996 ) 15 Pimmler , T and Eppinger , S ‘Integration Analysis of Pro - duct Decompositions’ Proceed - ingsoftheASMEDesignTheoryandMethodologyConference DE - Vol . 68 ( 1994 ) pp 343 – 351 16 Rosen , D ‘Design of Modu - lar Product Architectures in Dis - crete Design Spaces Subject to Life Cycle Issues’ Proceedings ofthe1996ASMEDesignEngin - eering Technical Conferences 96 - DETC / DAC - 1485 Irvine , CA ( 1996 ) 17 Dixon , J R and Poli , C EngineeringDesignandDesign for Manufacturing , Field Stone Publishers , Conway , MA ( 1995 ) 18 Cutherell , D ‘Chapter 16 : Product Architecture’ in The PDMA Handbook of New Pro - duct Development M . Rosenau architectures ( Step 3 ) is our focus . We take a function based approach to deﬁning modules in this work , believing that good design begins only after a thorough understanding of product function . Therefore , the next section addresses the issues of Step 2 , i . e . how to derive functional models of products and how to do so in a manner that imposes more order on the functional model . 2 Functional modeling Functional modeling , also known as functional decomposition , is the pro - cess of breaking the overall function of a product into smaller , easily solv - able sub - functions . The sub - functions are related by the ﬂow of energy , material or signal passing through the product to form a functional model , known as a function structure . Pahl and Beitz provide an overview for such a functional decomposition process . The module heuristics presented in the following section require an additional level of formalism in func - tional models . Therefore , we present the more structured approach of Step 2 ( in Figure 3 ) to derive a functional model . A heuristic method for identifying modules for product architectures 7 Figure 1 Examples of inte - gral products : wrenches ( top ) and screwdrivers ( bottom ) . All functions are embodied by one physical element Figure 2 Examples of modular products . Black and Decker’s VersaPak line uses the same battery units for a wide range of products Jr . etal . ( eds ) , John Wiley and Sons , New York ( 1996 ) 19 Krishnan , V , Singh , R , and Tirupati , D ‘A Model - Based Approach for Planning and Developing a Family of Tech - nology - Based Products’ Depart - ment of Management Working Paper , The University of Texas at Austin ( 1996 ) 20 Otto , K ‘Forming Product Design Speciﬁcations’ Proceed - ingsof the1996ASMEDesign Engineering Technical Confer - ences 96 - DETC / DTM - 1517 Irv - ine , CA ( 1996 ) 21 Hauser , J and Clausing , D ‘The House of Quality’ Harvard Business Review May – June ( 1988 ) pp 63 – 73 22 Otto , K and Wood , K ‘Con - ceptual and Conﬁguration Design of Products and 2 . 1 Generate black box model The ﬁrst task of the functional model derivation is to create a Black Box model , a representation of a product’s overall function and input / output ﬂows . The overall function of the product is expressed in verb - object form . This task relates the customer needs from Step 1 to the functional model . Each customer need identiﬁes one or more input or output ﬂows for the product . These ﬂows , in turn , directly address the speciﬁc customer need . In general , customer needs only identify input or output ﬂows , not ﬂows internal to the product . An example Black Box model for a consumer power screwdriver is shown in Figure 4 . 2 . 2 Create function chains for each input ﬂow For each input ﬂow , Task 2 develops a chain of sub - functions that operate on the ﬂow . Here , the designer must ‘become the ﬂow . ’ Think of each 8 Design Studies Vol 21 No 1 January 2000 Figure 3 An overview of the Product Architecture Design Methodology Figure 4 A Black Box model for a power screwdriver Assemblies’ ASM Handbook , Materials Selection and Design Vol 20 ASM International ( 1997 ) pp 15 – 32 operation on the ﬂow from entrance until exit of the product ( or transform - ation to another ﬂow ) and express it as a sub - function in verb - object form . If a ﬂow is transformed to another type , then follow the operations on the transformed ﬂow until it exits the product . Examples of two function chains for the power screwdriver are shown in Figure 5 . In Figure 5 ( a ) , a function chain for the ﬂow electricity is developed . By ‘becoming the ﬂow , ’ the designer realizes that ﬁve sub - functions operate on electricity before it is converted to torque . Four additional sub - functions then act on torque before it exits the product boundary . A heuristic method for identifying modules for product architectures 9 Figure 5 Examples of two function chains for a power screwdriver . ( a ) A sequential function chain for the ﬂow of electricity and torque . ( b ) A parallel function chain for the ﬂow of human force 23 Little , A , Wood , K , and McAdams , D ‘Functional Analy - sis : A Fundamental Empirical Study for Reverse Engineering , Benchmarking and Redesign’ Proceedingsofthe1997DesignEngineeringTechnicalConfer - ences97 - DETC / DTM - 3879 Sac - ramento , CA ( 1997 ) 2 . 2 . 1 Express sub - functions in a common functional basis The function chains ( and the subsequent functional model ) are expressed in a standard vocabulary known as a functional basis 23 , 24 . The functional basis is a set of functions and ﬂows with clear deﬁnitions that are combined in verb—object form to describe a sub - function ( shown in Tables 1 and 10 Design Studies Vol 21 No 1 January 2000 Table 1 Function classes , basic functions and synonyms 23 . Repeated synonyms are italicized . One function is selected as the verb in the verb - object description of a sub - function Class Basic Flow restricted Synonyms Branch Separate Switch , Divide , Release , Detach , Disconnect , Disassemble , Subtract , Remove Cut , Polish , Sand , Drill , Lathe Reﬁne Purify , Strain , Filter , Percolate , Clear Distribute Diverge , Scatter , Disperse , Diffuse , Empty Dissipate Absorb , Dampen , Dispel , Diffuse , Resist Channel Import Input , Receive , Allow , Form Entrance , Capture Export Discharge , Eject , Dispose , Remove Transfer Transport Lift , Move , Channel Transmit Conduct , Transfer , Convey Guide Direct , Straighten , Steer TranslateRotate Turn , Spin Allow DOF Constrain , Unlock Connect Couple Join , Assemble , Attach Mix Combine , Blend , Add , Pack , Coalesce Control Magnitude Actuate Start , Initiate Regulate Control , Allow , Prevent , Enable / Disable , Limit , Interrupt , Valve Change Increase , Decrease , Amplify , Reduce , Magnify , Normalize , Multiply , Scale , Rectify , Adjust Form Compact , Crush , Shape , Compress , Pierce Convert Convert Transform , Liquefy , Solidify , Evaporate , Condense , Integrate , Differentiate , Process Provision Store Contain , Collect , Reserve , Capture Supply Fill , Provide , Replenish , Expose Extract Signal Sense Perceive , Recognize , Discern , Check , Locate Indicate Mark DisplayMeasure Calculate Support Stop Insulate , Protect , Prevent , Shield , Inhibit Stabilize Steady Secure Attach , Mount , Lock , Fasten , Hold Position Orient , Align , Locate 24 Stone , R TowardsaTheory ofModularDesignDoctoral The - sis , The University of Texas at Austin ( 1997 ) 25 Karnop , D , Margolis , D , and Rosenberg , R System Dynamics : A Uniﬁed Approach John Wiley , New York ( 1990 ) 2 ) . In general , the basis functions and ﬂows are broken into classes ( eight function classes and three ﬂow classes ) and then further speciﬁed within each class as basic or sub - basic . The energy ﬂows in Table 2 offer increased detail through the use of complements based on power conjugate variables of bond graph models 25 . Functions from Table 1 ﬁll the verb position of the verb—object sub - function description , while ﬂows from Table 2 provide the object . Expressing a functional model in functional basis form provides the general beneﬁt of repeatable function structures among different designers . Furthermore it offers a standard level of detail A heuristic method for identifying modules for product architectures 11 Table 2 Flow classes , basic and sub - basic ﬂows and complements 24 . A ﬂow selected from the list ﬁlls the object spot of the verb - object description Class Basic Sub - basic Complements Material Human Hand , foot , head etc GasLiquidSolid Signal Status Auditory Tone , verbal OlfactoryTactile Temperature , pressure , roughness Taste Visual Position , displacement Control Bond graph based complement Class Basic Sub - basic Effort Analogy Flow analogy Human Force Motion Acoustic Pressure Particle velocity Biological Pressure Volumetric ﬂow Chemical Afﬁnity Reaction rate Electrical Electromotive force Current Electromagnetic Optical Intensity Velocity Solar Intensity Velocity Energy Hydraulic Pressure Volumetric ﬂow Magnetic Magnetomotive force Magnetic ﬂux rate Mechanical Rotational Torque Angular velocity Translational Force Linear velocity Vibrational Amplitude Frequency Pneumatic Pressure Mass ﬂow Radioactive Intensity Decay rate Thermal Temperature Heat ﬂow Use and degree of speciﬁcation Class only—least speciﬁc H Basic or Sub - basic + class—more speciﬁc H Basic or sub - basic + complement—most speciﬁc H Overall increasing degree of speciﬁcation ) 26 Miles , L Techniques of Value Analysis Engineering McGraw - Hill , New York ( 1972 ) 27 Collins , J , Hagan , B and Bratt , H ‘The Failure - Experience Matrix—a Useful Design Tool’ TransactionsoftheASME , Ser - iesB , JournalofEngineeringin Industry Vol 98 ( 1976 ) pp 1074 – 1079 28 Stone , R , Wood , K , Craw - ford , R ‘A Heuristic Method to Identify Modules from a Func - tional Description of a Product’ Proceedings of DETC98 DETC98 / DTM - 5642 Atlanta , GA ( 1998 ) 29 Hundal , M ‘A Systematic Method for Developing Function Structures , Solutions and Con - cept Variants’ Mechanism and Machine Theory Vol 25 No 3 ( 1990 ) pp 243 – 256 30 Murdock , J , Szykman , S , and Sriram , R ‘An Information Modeling Framework to Support Design Databases and Reposi - tories’ ProceedingsofDETC’97 DETC97 / DFM - 4373Sacramento , CA ( 1997 ) . We refer the reader to recent work on functional modeling by Little etal . , McAd - ams etal . 31 McAdams , D , Stone , R , and Wood , K ‘Functional Inter - dependence and Product Simi - larityBased onCustomerNeeds’ To appear in ResearchinEngin - eeringDesign ( 1998 ) for functional models . These two attributes have been the goal of early value engineering work 26 , 27 as well as recent functional modeling research 23 , 24 , 28 – 30 . We refer the reader to recent work on functional mode - ling by Little et al . 23 , McAdams et al . 31 , and Stone 24 for more information . 2 . 2 . 2 Order function chains with respect to time In addition to the use of a functional basis , the functional model is ordered with respect to time . Traditional decomposition techniques , like the Pahl and Beitz method , trace ﬂows through sub - functions without regard for the dependence of sub - functions on a speciﬁc order . Ulrich and Eppinger 1 , though , note that task dependencies for product development processes are either parallel , sequential or coupled with respect to time . Here we extend the concept of parallel and sequential dependencies to sub - functions and ﬂows of a functional model . In each case , the dependencies are deﬁned with respect to a given ﬂow . In sequential function chains , the sub - functions must be performed in a speciﬁc order to generate the desired result . A ﬂow common to all these functions is termed a sequential ﬂow . For the power screwdriver , the ﬂow electricity produces a sequential function chain in Figure 5 ( a ) . Here , ﬁve sub - functions must operate on the ﬂow of electricity in a speciﬁc order to obtain the desired result of usable electrical energy . Parallel function chains consist of sets of sequential function chains shar - ing one or more common ﬂows . Graphically , they are represented by a ﬂow which branches in a functional model . Collectively , the chains are called parallel because they all depend on a common sub - function and ﬂow , but are independent of each other . Independence means that any one of the chains of the parallel function chain set does not require input from any other chain within the set . Physically , the parallel function chains rep - resent different components of a device that may operate all at once or individually . Figure 5 ( b ) shows an example of a parallel function chain for the power screwdriver . In it , the ﬂow human force branches to form parallel chains of sub - functions . The four chains operate independent of each other ( the ﬁrst is concerned with the insertion and removal of the screw bit , the second deals with the manual use of the screwdriver , the third transmits the weight of the product and the fourth actuates the device ) . 2 . 3 Aggregate function chains into a functional model The ﬁnal task of functional model derivation is to aggregate all of the function chains from Task 2 into a single model . It may be necessary to connect the distinct chains together . This action may require the addition of new sub - functions . Also , if different ﬂows are operated on by the same sub - functions , then the chains may be combined to show two ﬂows 12 Design Studies Vol 21 No 1 January 2000 traversing the chain of sub - functions . The aggregated functional model for the previously discussed power screwdriver is shown in Figure 6 . Note that both function chains from Figure 5 are present and that links between ﬂows of bit and screw are added . Also , the actuate electricity leg of the human force parallel chain is combined with the electricity sequential chain . The result of Step 2 of the methodology is a functional model of a product . It has uses beyond the product architecture application reported here . With a functional model expressed in the functional basis , functions may be directly related to customer needs , products and their functional represen - tations may be directly compared , product families may be identiﬁed , pro - duct functions may be prioritized , and direct component analogies may be generated within and outside product classes . 3 The method of module heuristics The method of module heuristics consists of three separate strategies to identify modules . The necessary starting point is a well reﬁned functional A heuristic method for identifying modules for product architectures 13 Figure 6 The functional model for a power screwdriver model as derived in the previous section . Consider our approach to heuris - tic module identiﬁcation . Webster’s dictionary deﬁnes a heuristic as ‘a method of education or of computer programming in which the pupil or machine proceeds along empirical lines , using rules of thumb , to ﬁnd sol - utions or answers . ’ Here is our working deﬁnition of module heuristics : A method of examination in which the designer uses a set of steps , empirical in nature , yet proven scientiﬁcally valid , to identify modules in a design problem . This deﬁnition requires another : the phrase ‘proven scientiﬁcally valid’ refers to a hypothesis , formulated after systematic , objective data collection , that has successfully passed its empirical tests . Thus , the heuris - tics are proven by following the scientiﬁc method . Brieﬂy , the module heuristics grew out of a design of a large scale mainte - nance device . In the conceptual design phase , groups of sub - functions related by ﬂows were observed to form subsystems or modules of the device . This observation led to the formulation of three heuristics to ident - ify modules based on the three possibilities that a ﬂow can experience : 1 ) a ﬂow may pass through a product unchanged , 2 ) a ﬂow may branch , forming independent function chains , or 3 ) a ﬂow may be converted to another type . The heuristics were empirically veriﬁed with a set of hand - held consumer mechanical and electromechanical devices . The veriﬁcation procedure is detailed in section 4 . We introduce three heuristic methods below as developed from these observations and deﬁnitions . These methods offer surprisingly elegant deﬁnitions of modules from function structures . However , each of the methods may identify overlapping modules or modules which are subsets or supersets of other modules . The choice of which module to implement in that case is not always clear . The rule suggested here is to implement the module with the smaller number of sub - functions . This idea is in keep - ing with the philosophy that modules should be easily identiﬁable with a particular function . Ultimately , though , which module to implement requires some engineering judgment . As the three heuristics are introduced , a functional model of a SKIL Twist power screwdriver is used as a physical example . The power screwdriver was chosen for the example series because it deals with several material ﬂows . Some of the modules identiﬁed by the heuristics appear as modules in the current product and others offer areas for future modularity . The functional models were generated by the reverse engineering method of Otto and Wood 4 and the functional model derivation step of the previous section . We show the identiﬁed modules in the power screwdriver for each 14 Design Studies Vol 21 No 1 January 2000 heuristic , discuss which ones exist and which ones present opportunities for a more modular design . 3 . 1 Dominant ﬂow The dominant ﬂow heuristic examines each non - branching ﬂow of a func - tion structure and groups the sub - functions the ﬂow travels through until it exits the system or is transformed into another ﬂow . The identiﬁed set of sub - functions deﬁnes a module that deals with the ﬂow traced through the system . The identiﬁed sub - functions form the boundary , or interface , of the module . Any other ﬂows , in addition to the traced ﬂow , that cross the boundary are interactions between the module and the remaining pro - duct . A dominant ﬂow module is shown schematically in Figure 7 . To implement the module , conduits must be speciﬁed to carry the interactions across the interface . Stated succinctly , the dominant ﬂow heuristic is : Heuristic 1 : The set of sub - functions which a ﬂow passes through , from entry or initiation of the ﬂow in the system to exit from the system or conversion of the ﬂow within the system , deﬁne a module . 3 . 1 . 1 Screwdriver—identiﬁed modules In the SKIL Twist power screwdriver , the ﬂow electricity passes through ﬁve sub - functions as outlined by a dashed rectangle shown in Figure 8 . The sub - functions store electricity , supply electricity , transmit electricity , actuate electricity and regulate electricity all operate on the ﬂow elec - tricity . The dominant ﬂow heuristic identiﬁes that these sub - functions could be combined as one module , which we name the supply electricity module . The next ﬂow to trace is the bit . It ﬁrst enters the system and traces through the two sub - functions couple solid and secure solid . This set of sub - func - tions forms a module that we call the coupling module . The ﬂow hand identiﬁes a superset of the coupling module which also encompasses the A heuristic method for identifying modules for product architectures 15 Figure 7 Dominant ﬂow heuristic applied to a gen - eric function structure separation of the bit from the device . The ﬂow torque emerges from the convert electricity to torque sub - function and travels through the sub - func - tions change torque , transmit torque , rotate solid and dissipate torque . Here the heuristic identiﬁes these four sub - functions as the transmit torque module . For the power screwdriver , the dominant ﬂow heuristic identiﬁes four mod - ules , one for each purely sequential function chain . Not all product function structures will have a module associated with every non - branching ﬂow . In some instances , ﬂows may enter only one sub - function and then be transformed , thus never forming a sequential function chain . Next , we dis - cuss how the identiﬁed modules compare with existing modules and how others offer opportunities for an improved modular design . 16 Design Studies Vol 21 No 1 January 2000 Figure 8 Modules identiﬁed by the dominant ﬂow heuristic from a function structure of the SKIL Twist power screwdriver 3 . 1 . 2 Screwdriver—actual modules The identiﬁed modules are now veriﬁed by checking the actual product . Actual modules will be referenced with respect to the exploded view shown in Figure 9 . The module associated with the ﬂow of electricity is actually found as two modules in the SKIL Twist power screwdriver . The store electricity and supply electricity sub - functions are embodied by a rechargeable battery , while the transmit electricity , actuate electricity and regulate electricity functions form a switch module ( to turn on as well as change the direction of the screwdriver ) . These two sub - modules are ident - iﬁed in Figure 9 ( b ) . In this sense , the heuristic method correctly identiﬁes sub - functions that come together as modules . A possible product inno - vation , shown in Figure 10 , integrates the ﬁve sub - functions into a single component that stores , supplies , transmits , actuates and regulates electricity and interfaces with other drive units besides screwdrivers . The rechargeable battery solves the store and supply electricity sub - functions . The switch transmits , actuates and regulates electricity . With this concept , the supply electricity module would interface with different drive modules to create a mix modularity tool . For example , it could attach to a screwdriver , drill , detail sander or ﬂashlight drive unit . This approach advances the modular battery powered hand tools available today a step further . Predicted modules associated with the ﬂows bit , hand and torque ( coupling , hand interface and torque transmission modules , respectively ) exist in the screwdriver as well . The coupling and hand interface modules are embodied by the same physical component—the shaft of the transmission in Figure 9 ( b ) . Note that the dominant ﬂow method does not identify this module sharing opportunity , i . e . , the possibility of a single , physical mod - ule to embody two or more module concepts . The transmit torque module is embodied by the transmission component . A heuristic method for identifying modules for product architectures 17 Figure 9 Views of the SKIL Twist power screwdriver . Thus , the dominant ﬂow heuristic method predicts modules that exist in the screwdriver . In addition , it provides an innovative way of combining functions into one component that could be shared among products . Another point to note about the dominant ﬂow heuristic is that it deﬁnes functions that can be combined into assembly modules , i . e . , parts that are best connected together before assembling the entire product . 3 . 2 Branching ﬂow The second heuristic is referred to as ‘branching ﬂow’ and requires identi - ﬁcation of ﬂows associated with parallel function chains . Each limb of a parallel function chain deﬁnes a potential module and is shown sche - matically in Figure 11 . The module is formed of the sub - functions that make up the limb ( technically , each limb consists of a sequential function chain ) . All modules ( one per limb ) must interface with the product at the ﬂow’s branch point . All ﬂows that cross this interface are the interactions between the remaining product and the module . Note that branching ﬂows will identify products capable of component swapping or bus modularity . Bus modularity describes a device with two or more interfaces that accepts any combination of components from a set with standard interfaces . Memory expansion slots in computers are an example of bus modularity . The interface boundaries deﬁned are physical connections between module and product . In some cases they will be well - 18 Design Studies Vol 21 No 1 January 2000 Figure 10 Schematic of a possible supply electricity module for the SKIL power screwdriver . The side view is shown in ( a ) and the end view in ( b ) deﬁned geometric connections , like various end mill attachments on a mill - ing machine . Other times , the interface may be fuzzier , like the differing interactions between human force and the SKIL Twist power screwdriver . The branching ﬂow heuristic is stated formally as : Heuristic 2 : The limbs of a parallel function chain constitute modules . Each of the modules interface with the remainder of the product through the ﬂow at the branch point . 3 . 2 . 1 Screwdriver—identiﬁed modules The power screwdriver has three ﬂows that branch , the bit , screw and human force . The ﬂow human force is examined ﬁrst . Following the sub - function import human force , the ﬂow branches into four limbs . Each limb represents a module as shown in Figure 12 . The four identiﬁed modules are the coupling / decoupling , manual use , actuating and weight transmission modules . Note that a subset of the coupling / decoupling module was ident - iﬁed by the dominant ﬂow heuristic . The actuate module is a subset of the supply electricity module identiﬁed by the dominant ﬂow heuristic . The manual use and weight transmission modules are new . The branching ﬂow of bit identiﬁes two possible modules : decoupling and bit - transmission . The decoupling module , together with the coupling mod - ule of the dominant ﬂow heuristic , constitutes the coupling / decoupling module already identiﬁed . The bit - transmission module is a subset of a previously identiﬁed module . A heuristic method for identifying modules for product architectures 19 Figure 11 Flow branching heuristic applied to a gen - eric function structure The ﬂow screw branches after the import solid sub - function and identiﬁes two possible modules consisting of the rotate solid sub - function ( one deals with manual use of the screwdriver and the other with powered use ) . 3 . 2 . 2 Screwdriver—actual modules The branching ﬂow heuristic identiﬁes three new modules ( coupling / decoupling , manual use and weight transmission modules ) , in addition to several modules that overlap with the modules from the domi - nant ﬂow heuristic . The coupling / decoupling and bit - torque transmission modules are embodied by the same component as the coupling and torque - transmission modules of the previous section . The actuating module is a subset of the supply electricity module . The manual use module is embodied by a locking mechanism which secures the screwdriver trans - mission in place . It is identiﬁed as the rotational lock in Figure 9 ( b ) . Also , 20 Design Studies Vol 21 No 1 January 2000 Figure 12 Modules identiﬁed by the ﬂow branching heuristic from a function structure of the SKIL Twist power screwdriver the weight transmission module is essentially the plastic casing of the screwdriver . A few remarks about the heuristics usage thus far are warranted . It is evident that they identify overlapping modules in some cases . At this point , we wonder which module to embody in such a case . Section 6 of this paper discusses extensions to this work , including a customer needs approach , which provide a means of determining which module to implement . For now , we make the observation that the more ways a module is identiﬁed ( in terms of heuristics and ﬂows ) , the more important it is to implement ( since it must be associated with more customer needs ) . 3 . 3 Conversion—transmission modules The third heuristic method deals with conversion sub - functions and conver - sion to transmission chains . Conversion sub - functions accept a ﬂow of material or energy and convert the ﬂow to another form of material or energy . In standard verb—object form , a conversion sub - function appears as convert ﬂow A to ﬂow B . In many cases , these conversion sub - functions are already components or modules themselves . For instance , electrical motors , hydraulic cylinders , and electrical heaters can all be represented by a single conversion sub - function and exist physically as a single compo - nent . If , additionally , a conversion sub - function exists in a chain with a transmit sub - function ( or transport sub - function for material ﬂow ) , then the chain presents an opportunity to form a module . This converts an energy or material to another form and then implements ( transmits or transports ) that new form of energy or material . The method of the conversion—transmission heuristic , shown sche - matically in Figure 13 , is simple . The essential actions are as follows : identify conversion sub - functions and check for transmit or transport sub - functions downstream of the converted ﬂow . If none exist , then the conversion sub - function is a module by itself . If transmit or transport A heuristic method for identifying modules for product architectures 21 Figure 13 Conversion— transmission applied to a generic set of sub - functions sub - functions exist without any other sub - functions between them , then the convert—transmit ( transport ) pair represents a module . If other sub - func - tions exist between the convert and transmit ( transport ) sub - functions and those intermediate sub - functions only operate on the converted ﬂow ( i . e . the object in the sub - function verb—object pair is the converted ﬂow ) , then the conversion—transmission ( transportation ) chain represents a module . Interfaces of a conversion—transmission module are deﬁned in a similar manner as those for a dominant ﬂow module . Two necessary interactions across the interface are the ﬂow to be converted and the exiting converted ﬂow . Additional ﬂows may also cross the interface . The conversion—transmission heuristic , stated succinctly , is : Heuristic 3 : A conversion sub - function or a conversion—transmission pair or proper chain of sub - functions constitutes a module . 3 . 3 . 1 Screwdriver—identiﬁed modules Consider the power screwdriver again , the conversion—transmission heu - ristic identiﬁes one module , as shown in Figure 14 . It consists of three sub - functions , the bounding convert electricity to torque and transmit torque and the intermediate sub - function change torque . The interface of the electricity to torque module is outlined in Figure 14 . The interactions are the two necessary ﬂows of electricity and torque , along with heat and coupled bit . 3 . 3 . 2 Screwdriver—actual modules In the actual product , the three sub - functions are not embodied as a single module . The convert electricity to torque sub - function is a distinct compo - nent , i . e . the motor in Figure 9 ( b ) . The change torque and transmit torque sub - functions , though , are part of the torque transmission module pre - viously identifed and embodied by the transmission in Figure 9 ( b ) . In this case , the method provides an innovative approach to the design of a module that incorporates a motor , transmission , and drive - train . Recall the innov - ative supply electricity module of the screwdriver in Figure 10 . In concert with the supply electricity module , the electricity to torque module becomes the drive unit in a mix and match set of power packs with switches and motor drive units . 4 Veriﬁcation of heuristic methods The three heuristic methods introduced in section 3 are presented with the SKIL power screwdriver example . The heuristics were developed and veri - ﬁed more rigorously using a database of 70 products , of which the power 22 Design Studies Vol 21 No 1 January 2000 screwdriver is a part 24 . The products represent a wide range of consumer applications , customer needs , and overall functions . The mechanical or electromechanical products include small construction tools , small kitchen appliances , automobile accessories , small household appliances , and toys . This set of products represents over 100 person years of work in reverse engineering and redesign and is the same set used by Little et al . 23 and McAdams et al . 31 . The redesigns and case studies are the result of course work , research , and industrial interaction at The University of Texas at Austin and the University of Missouri at Rolla . Of the 70 products , 18 are examined in detail in Table 3 . The 18 products are representative of the wide range of consumer applications in the entire database . Two types of products , an iced tea brewer and a power A heuristic method for identifying modules for product architectures 23 Figure 14 Module identiﬁed by the conversion—transmission heuristic from a function structure of the SKIL Twist power screw - driver screwdriver , are repeated ( same type of product , different manufacturer ) to examine the differences in competing products . All product function structures produce modules when the three heuristic methods are applied . The products are listed in column one followed by three columns that indicate the number of modules identiﬁed by each of the three heuristic methods : dominant ﬂow , branching ﬂow and conversion—transmission . The next three columns indicate the actual modules found in the products , associated with the three heuristic methods . Since it is possible for the different heuristic methods to identify overlapping modules , the ﬁnal two columns give the number of unique modules possible and then the actual number of modules found in the product . It is important to note from the ﬁnal two columns of Table 3 that the number of unique modules possible is always greater than ( or equal to for three of the products ) the actual number of modules implemented in current products . This strongly supports the heuristic methods’ validity as a tool to identify possible modules in a product . For this database of consumer , largely hand - held products , four to nine unique modules are possible . The actual products , though , incorporate between two to seven modules , with 24 Design Studies Vol 21 No 1 January 2000 Table 3 Statistical comparison of identiﬁed modules and actual modules in 18 products . Identiﬁed modules Actual modules Unique Actual Product Dom . Branch . Conv . - Dom . Branch . Conv . - module module ﬂow ﬂow Trans . ﬂow ﬂow Trans . poss . total Mr . Coffee iced tea / coffee brewer 6 4 1 5 3 1 7 6 West Bend iced tea / coffee brewer 6 4 1 4 3 1 7 5 Mr . Coffee coffee maker 5 3 1 3 1 1 6 3 B and D screwdriver 4 5 1 2 3 0 6 4 SKIL screwdriver 4 5 1 3 3 0 6 5 DeWalt sander 4 4 3 4 3 3 9 7 Bissel hand vacuum 5 3 2 4 2 2 6 6 Pencil sharpener 3 2 1 3 2 1 4 4 B and D electric knife 3 4 2 2 2 2 6 4 Presto air popcorn popper 3 2 3 3 2 3 8 6 Krups cafe trio 3 2 1 3 1 1 6 5 B and D sander 5 2 3 3 2 3 7 6 Dazey fruit / veggie peeler 5 3 2 3 2 2 7 4 Dremel engraver 3 4 1 2 2 1 5 3 1974 Chevy tailgate 3 6 1 2 3 1 5 3 B and D VersaPak trimmer 4 2 1 4 2 1 5 5 Cadillac visor 2 0 2 2 0 2 4 2 Super Maxx ball shooter 3 2 2 3 0 2 6 3 Average 4 3 2 3 2 2 6 4 some exhibiting an impressive degree of modularity . For consumer pro - ducts with 15 to 30 sub - functions , we now know that , on average , six unique modules are possible . 4 . 1 A more complex example As a comparison , a large heavy - duty maintenance product—a lignite removal system for the power generation industry—is examined . A power generation plant in Texas ( USA ) produces electricity via a lignite fueled boiler . Lignite is best described as a dirty coal , and the dirtier the coal , the more residue produced during the burning process . Residue collects in the bottom of the boiler , known as the hopper . A cross sectional view of a typical boiler bottom is depicted in Figure 15 . This residue , called a clinker , is a glass - like substance that typically forms in large chunks , depending on the lignite quality . Clinkers must be removed from the hop - per periodically to maintain full power generation capability . Ideally , the grinder system , a set of rotating cylinders with protruding teeth , crushes the clinkers into smaller chunks that can be ﬂushed out of the boiler . In practice , however , the clinkers are too large to enter the grinder and require fragmenting . The power generation plant desired to develop a device , tele - robotic in nature , that can enter the hopper through an access door and fragment clinkers so that they can be removed by the grinder or ﬂushed through the access door . Currently , clinkers are fragmented in a dangerous , manual operation . While the fragmentation process is carried out , the boilers must operate at a lower power generation level . Thus , the manual operation is A heuristic method for identifying modules for product architectures 25 Figure 15 Cross sectional schematic of a power gener - ation plant’s boiler bottom costly on both human and ﬁnancial levels . A device capable of clearing the clinkers is the proposed solution to the problem . The device should be automated where feasible and should keep personnel a safe distance from the hopper during fragmentation . With the problem sketched out , the steps of the design methodology in section 1 are carried out . In particular , we examine the subsystem that fragments the clinker . A func - tional model of the subsystem is shown in Figure 16 . Process choices ( requirements by the customer ) dictate that electric and pneumatic energy be used for the fragmenting operation . Note that the ﬂow probe is con - sidered an input to the subsystem and represents an expendable element of the device that is used to fragment the clinker . Since it is expendable ( due to the dangerous conditions inside the hopper ) , it will have to be imported and exported from the device and it is appropriate to consider it a material ﬂow . The module heuristics identify several possible modules , four of which are denoted as modules A through D . The branching ﬂow probe suggests an unexpected result : the probe could be ﬁtted with end effectors which fragment the clinker ( the overlapping modules B and C ) and which remove clinker fragments ( module D ) . This means that the end effectors would have to be expendable as well . This presents an option that is not intuitively obvious , but is completely feasible . In fact , this option was implemented . The probe is embodied by an inexpensive steel pole ( which also solves module A ) and modiﬁed to allow end effectors ( a small 26 Design Studies Vol 21 No 1 January 2000 Figure 16 A functional model of the fragment clinker subsystem air hammer for the overlapping module B and C ; a rake - like structure for module D ) to screw onto it as shown in Figure 17 . For two of the device’s subsystems ( one to move the device’s fragmen - tation unit , the other to fragment the clinker ) , a unique module possible count of 14 is found . This application to a larger , more complex product supports the heuristics’ utility for larger scale design problems . 4 . 2 A sub - optimal product The power screwdriver example that accompanies the heuristics in section 3 is a well optimized , modular product . Now we brieﬂy examine a sub - optimal ( in terms of modularity ) product , an electric wok shown in Figure 18 , to see if the module heuristics can identify a promising modular pro - duct architecture . A heuristic method for identifying modules for product architectures 27 Figure 17 The modular probe and end effector schematic for the clinker clearer ( a ) and the actual air hammer that serves as the end effector module Figure 18 The electric wok ( a ) assembled and ( b ) disassembled 32 Otto , K ‘Forming Product Design Speciﬁcations’ Proceed - ings of 1996 ASME Design Engineering Technical Confer - ences 96 - DETC / DTM - 1517 Irv - ine , CA ( 1996 ) Table 4 and Figure 19 summarize the results of the product architecture design method for the electric wok . The customer needs 32 are shown in Table 4 and indicate the current model lacks at least two customer require - ments : 1 ) uniform heating in the bowl of the wok and 2 ) the ability to immerse it for cleaning . In Figure 19 , ( a ) shows the Black Box represen - tation of the wok and ( b ) presents the functional model complete with the heuristically identiﬁed modules . Note that ﬁve potential modules are identiﬁed for the wok . Module A deals with electrical energy ; B is associa - ted with the conversion to and transmission of thermal energy ; C follows the ﬂow of food through the device ; D deals with cleaning the device ; and E identiﬁes the structural requirements of the wok . Next we check the electric wok of Figure 18 for the existence of a modular architecture and any correspondence to the modules identiﬁed in Figure 19 ( b ) . It is evident from the disassembled view of Figure 18 ( b ) that the wok is not a modular product . Many pieces exist , but few are collected together as modules . The heating ring ( parts 8 – 10 from Figure 18 ( b ) ) most closely resembles module B , embodying the sub - functions convert elec - tricity to thermal energy and transmit thermal energy . The two customer needs mentioned above can be addressed by adopting a modular architec - ture for the wok . In particular , the need to immerse the device for cleaning 28 Design Studies Vol 21 No 1 January 2000 Table 4 Partial customer needs list for an electric wok . Needs are ranked on a [ 1 = nice , 5 = must ] scale Group Customer need Ranking Clean Non - stick surface 4 Watertight 2 Detachable from heating unit 2 On / off Heats and cools quickly 3 Long extension cord 3 Temperature switch readable 1 Off switch included 1 Add food Large volume capacity 2 Temperature indicator 1 Temperature controls remain cool / don’t get hot 1 Cook food Flat bottom for frying 1 Small , rounded bottom for stir fry 5 No ridges on inner surface 2 Able to stand on its own 3 Detachable heating unit to remove heat when cooking 1 Temperature uniform across inner surface 5 Steady - state temperature uniform 2 Capable of high temperature 1 Handles remain cool / don’t get hot 2 can be met by separating modules C and D from module A . Uniform heating can be achieved through a redesign of module B . Two concepts for a redesigned wok are shown in Figure 20 . The ﬁrst concept features a bowl ( embodying modules C and D ) which is separable from the rest of the device for cleaning purposes and a heating module which provides a more uniform temperature to the bowl . The second con - cept takes a different approach to meeting the customer needs . It assembles modules B , C , D and E together such that they can be immersed for clean - ing . The electrical supply ( module A ) then plugs into the assembly to pro - vide the necessary energy for use . A heuristic method for identifying modules for product architectures 29 Figure 19 ( a ) A Black Box representation of the electric wok . ( b ) A functional model of the electric wok with heuristically identiﬁed modules Thus , the module heuristics , a part of the product architecture design meth - odology , can take a non - modular product and identify a modular architec - ture that meets customer needs . Standard decision making techniques can be applied to determine which concept to develop . As a ﬁnal note on this case study , the choice of a modular architecture allows this product to be easily updated in the future and presents the opportunity to share modules across products . For example , the heating ring or electrical supply module could be adapted from ( or adapted to ) a hot plate or skillet . 5 Conclusion This paper introduces the three heuristic methods of dominant ﬂow , branching ﬂow and conversion—transmission function chains . These three methods provide a systematic approach to identifying modules of a product from a functional model . While their application is elegantly simple , they represent a novel and systematic approach to product architecture design . The methods were veriﬁed using a 70 - product database of consumer pro - ducts . What we can say with certainty is that the three heuristic methods identify all modules found in this consumer product class . Perhaps more importantly , the heuristics identify opportunities for increased product modularity and innovation . The heuristic method presented here is part of a new tack on design meth - odologies . It shifts the focus to modular concept variants where solutions are sought at a modular level rather than a functional level . It also allows product architecture decisions to begin at a much earlier stage ( i . e . , the functional model stage ) . 6 Extensions to this work So far we have used function structures and three heuristic methods to identify sub - functions that can be grouped together as a modules . But how do we measure the value of modular design methodology versus integral or non - modular methodologies ? From a cost point of view , methods exist to evaluate the economic viability of different architectures 12 . However , 30 Design Studies Vol 21 No 1 January 2000 Figure 20 Two concept variants for an electric wok with a modular architecture 33 Ullman , D The Mechanical Design Process 2nd ed . McGraw - Hill , New York ( 1997 ) customer need driven evaluation methods are less well developed . Since meeting customer needs is already a primary component of decomposition based design methodologies 2 , 33 , work is underway on a quantitative method that develops a customer need ranking for a module . Additionally , forming development teams based on heuristically identiﬁed modules 24 is an area of active research . Acknowledgments The research reported in this paper was partially supported by an Engineer - ing Doctoral Fellowship through the College of Engineering and by a Con - tinuing Fellowship , both awarded by The University of Texas at Austin . In addition , this work is supported , in part , by the National Science Foun - dation under both an NSF Young Investigator Award , Ford Motor Com - pany , Desktop Manufacturing Corporation , Texas Instruments , W . M . Keck Foundation , and the June and Gene Gillis Endowed Faculty Fellow in Manufacturing . Any opinions or ﬁndings of this work are the responsibility of the authors , and does not necessarily reﬂect the views of the sponsors or collaborators . A heuristic method for identifying modules for product architectures 31