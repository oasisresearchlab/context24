Copyright © 2006 by the Association for Computing Machinery , Inc . Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , to republish , to post on servers , or to redistribute to lists , requires prior specific permission and / or a fee . Request permissions from Permissions Dept , ACM Inc . , fax + 1 ( 212 ) 869 - 0481 or e - mail permissions @ acm . org . © 2006 ACM 0730 - 0301 / 06 / 0700 - $ 5 . 00 0847 AutoCollage Carsten Rother , Lucas Bordeaux , Youssef Hamadi , Andrew Blake Microsoft Research Cambridge , UK (cid:3) Figure 1 : AutoCollage automatically creates a collage of representative elements from a set of images . Novel and desirable properties in - clude : boundaries between images are appropriately positioned ; there is little duplication of material ; small and meaningless image fragments are avoided ; faces are preserved whole ; blends may either cut along natural boundaries or be transparent , decided automatically . Abstract The paper de(cid:2)nes an automatic procedure for constructing a visu - ally appealing collage from a collection of input images . The aim is that the resulting collage should be representative of the collec - tion , summarising its main themes . It is also assembled largely seamlessly , using graph - cut , Poisson blending of alpha - masks , to hide the joins between input images . This paper makes several new contributions . Firstly , we show how energy terms can be included that : encourage the selection of a representative set of images ; that are sensitive to particular object classes ; that encourage a spatially (cid:3) e - mail : f carrot , lucasb , youssefh , ablake g @ microsoft . com ef(cid:2)cient and seamless layout . Secondly the resulting optimization poses a search problem that , on the face of it , is computationally in - feasible . Rather than attempt an expensive , integrated optimization procedure , we have developed a sequence of optimization steps , from static ranking of images , through region of interest optimiza - tion , optimal packing by constraint satisfaction , and lastly graph - cut alpha - expansion . To illustrate the power of AutoCollage , we have used it to create collages of many home photo sets ; we also conducted a user study in which AutoCollage outperformed com - petitive methods . CR Categories : I . 3 . 3 [ COMPUTER GRAPHICS ] : Pic - ture / Image Generation(cid:151)Display algorithms ; I . 3 . 6 [ COMPUTER GRAPHICS ] : Methodology and Techniques(cid:151)Interaction tech - niques ; I . 4 . 6 [ IMAGE PROCESSING AND COMPUTER VI - SION ] : Segmentation(cid:151)Pixel classi(cid:2)cation ; partitioning Keywords : Image editing , photomontage , graph cut , energy min - imization , constraint satisfaction , Poisson blending 1 Introduction The aim of the paper is to de(cid:2)ne an automatic procedure for con - structing a seamless collage from a collection of input images . There have been various previous studies into related tasks . Pois - 847 son blending [ Perez et al . 2003 ] can be used to assemble a variety of objects shot against compatible backgrounds onto one seamless background . Digital Photomontage [ Agarwala et al . 2004 ] assem - bles patches from a batch of repeat shots of a scene , into one com - posite scene . Graphcut texture [ Kwatra et al . 2003 ] , an extension of [ Efros and Freeman 2001 ] , synthesises textures by seamlessly join - ing exemplar patches . In each of the three cases , the pieces to be assembled are broadly compatible , that is to say already approxi - mately matched along the seams , and only adjustment of the seams is needed to render them invisible . Our problem is the one tack - led by the Tapestry [ Rother et al . 2005 ] system , in which a set of quite different images has to be composited into a single seamless summarising image . However , Tapestry has certain limitations : it consists of a single optimization step that searches over input im - ages and pixels at every output pixel , and hence is computationally intensive ; and it is prone to include small , isolated fragments of the input images . Here we address those limitations by using a multi - stage optimization procedure to tackle complexity , together with explicit region of interest selection . These are the two major im - provements of AutoCollage over Tapestry : scalability for large im - age sets ( > 50 ) and robustness . We also include adaptively transpar - ent blending for better hiding of seams , together with object recog - nition to deal appropriately with sky and faces . It is also worth mentioning related work on authoring tools for interactive collage systems [ Diakopoulos and Essa 2005 ] ( and the references therein ) , where the focus has not been on creating a graphics quality collage , but rather on user interactivity . Problem formulation ( AutoCollage ) . Given a set of input im - ages of arbitrary rectangular shape the aim is to generate a collage of a given rectangular shape , with the following properties . 1 . The selected images are representative of the set . 2 . From each selected image , one substantial , coherent region of interest ( ROI ) is extracted . 3 . The ROIs should be ef(cid:2)ciently packed . Certain objects should be treated with particular respect . In particular , faces should be regarded as preferred material , and should be preserved whole . Sky should be constrained to appear at the top , to avoid sky - like lacunae appearing in the interior of the collage . 4 . The transition between images in the collage is subtle , visu - ally smooth and uses transparency where appropriate . The effect we seek is that subjects from the images should be cap - tured and displayed on a background that appears more or less seamless with transitions of input images undetectable . It may seem that these properties are chosen arbitrarily , however , user feedback ( see section 5 ) suggests that they seem appropriate for this task . In order to generate an AutoCollage we will express the problem formally as an energy minimization problem , in which each of the desiderata above is represented by an energy term . The next section introduces the AutoCollage Framework as an energy minimization problem . Section 3 describes our optimization process and includes the main technical contributions . Section 4 ex - plains a new Poisson blending technique that handles transparency . Finally , section 5 displays results of AutoCollage construction , and presents a user study . 2 The AutoCollage Framework The input to AutoCollage is a set of input images I = f I 1 ; : : : ; I N g . In order to standardise the input , a pre - processing step is assumed to have been applied , so that each image I n is scaled to have unit area , while preserving the aspect ratios of individual images . Then , building on earlier studies [ Rother et al . 2005 ; Agarwala et al . 2004 ] , on which the proposed framework is based , AutoCollage is viewed as a labelling problem , described using the following notation . The collage is itself an image I , de(cid:2)ned over a domain P , and each pixel - location p 2 P of the collage is to be as - signed a label L ( p ) , by the AutoCollage algorithm . The labelling L = f L ( p ) ; p 2 P g completely speci(cid:2)es the collage , as follows . An individual label has the form L ( p ) = ( n ; s ) in which I n 2 I is the input image from which the collage pixel p is taken , and s 2 S is the pixel - wise 2D shift of the input image n with respect to the collage , so that I ( p ) = I n ( p (cid:0) s ) . We will often write this compactly as I ( p ) = S ( p ; L ( p ) ) , in which S ( : : : ) is de(cid:2)ned by S ( p ; ( n ; s ) ) = I n ( p (cid:0) s ) and normalized as S ( : : : ) 2 [ 0 ; 1 ] (cid:2) [ 0 ; 1 ] (cid:2) [ 0 ; 1 ] . The goal of AutoCollage is to (cid:2)nd the best labelling L 2 L , in the space L of possible labellings . This is expressed as (cid:2)nding the labelling L which minimises an energy or cost E ( L ) , to be de - (cid:2)ned in detail later in this section . In the following section , an opti - mization procedure is de(cid:2)ned that searches ef(cid:2)ciently in the space of allowed labellings , to obtain a labelling with low energy but , since the algorithm is approximate , not necessarily the global min - imum . Note that , by comparison , in Digital Photomontage [ Agar - wala et al . 2004 ] , all input images were pre - aligned , and therefore each pixel - label consisted of an image index alone , without any shift variable s . In AutoCollage , the optimization problem is more complex , because it is necessary to search not only over image in - dices n = 1 ; : : : ; N , at each pixel , but also over allowed shifts s . 2 . 1 Collage energy The energy of a labelling L comprises four terms , as follows : E ( L ) = E rep ( L ) + w imp E imp ( L ) + w trans E trans ( L ) + w obj E obj ( L ) ( 1 ) The (cid:2)rst term E rep tends to select the images from the input image set that are most representative , in two senses : (cid:2)rst that chosen im - ages are texturally (cid:147)interesting(cid:148) and second that they are mutually distinct so that near duplicates will not be selected . The E imp term ensures that a substantial and interesting region of interest ( ROI ) is selected from each image in I . Next , E trans is a pairwise term which penalises any transition between images that is not visually appealing . Finally , E obj incorporates information on object recogni - tion , and favours placement of objects in reasonable con(cid:2)gurations ( faces preserved whole , sky at the top , in our implementation ) . In the remainder of the section , each of these energy terms is de(cid:2)ned in detail , together with constraints that must be maintained . Representative Image Set The cost associated with the set I of chosen images is of the form E rep = (cid:229) n E rep ( n ) where E rep ( n ) = (cid:0) a n D r ( n ) (cid:0) min m : I m 2 I a n a m V r ( n ; m ) ( 2 ) and a n is an auxiliary , indicator variable , taking the value 1 if the image I n is present in the collage and 0 otherwise : a n = 1 if 9 p 2 P with L ( p ) = ( n ; s ) : The unary term D r ( n ) is a measure of the information in image n . The information measure is de(cid:2)ned by D r ( n ) = Entropy ( I n ) + w face d ( f Image n contains a face g ) ( 3 ) where d ( p ) = 1 if predicate p is true , and w face weights the in(cid:3)u - ence of an image containing a face , relative to the general textural information in the image . [ The histogram used to compute entropy for a given image is constructed in two - dimensional a ; b space from the L ; a ; b color system , and discretized into 16 (cid:2) 16 bins . ] The second term in ( 2 ) is expressed in terms of pairwise dis - tances V r ( m ; n ) between images , and sums the distances from each 848 image to its nearest neighbour in the set I . As a distance mea - sure V r 2 [ 0 ; 1 ] we are using normalized chi - squared distance be - tween the color histograms of a pair of images . The histograms are constructed in a ; b space , as above . As well as favouring the most representative images , this energy encourages the use of as many images as possible . Importance Cost . The importance cost consists of a unary term of the form : E imp ( L ) = (cid:0) (cid:229) p E imp ( p ; L ( p ) ) : ( 4 ) The function E imp ( p ; L ( p ) ) = G ( p ; L ( p ) ) T ( p ; L ( p ) ) , where T ( p ; L ( p ) ) measures the local entropy , in ab coordinates , of a ( 32 (cid:2) 32 pixel ) region around the pixel p , and normalised so that local entropy sums to 1 over a given input image . The Gaussian weighting function G ( : : : ) favours the centre of the input image from which p is drawn . Alternatively , instead of T a more complex model of saliency can be used , as introduced by [ Itti et al . 1998 ] . Transition Cost . We use a transition cost similar to those used in the Graphcut texture [ Kwatra et al . 2003 ] and Photomontage [ Agarwala et al . 2004 ] systems . The transition cost is of the form E trans = (cid:229) p ; q 2 N V T ( p ; q ; L ( p ) ; L ( q ) ) where N is the set of all pairs of neighboring ( 8 - neighborhood ) pixels . We de(cid:2)ne the term V as : V T ( p ; q ; L ( p ) ; L ( q ) ) = min (cid:16) jj S ( q ; L ( p ) ) (cid:0) S ( q ; L ( q ) ) jj e + jj S ( p ; L ( p ) ) (cid:0) S ( q ; L ( p ) ) jj ; jj S ( p ; L ( p ) ) (cid:0) S ( p ; L ( q ) ) jj e + jj S ( p ; L ( q ) ) (cid:0) S ( q ; L ( q ) ) jj (cid:17) ( 5 ) where intensity function S ( : : : ) is as de(cid:2)ned above , e = 0 : 001 pre - vents under(cid:3)ow , and jj(cid:1)jj de(cid:2)nes the Euclidean norm . In total , E trans measures mismatch across the boundary be - tween two input images . To see this , (cid:2)rst observe that V T ( p ; q ; L ( p ) ; L ( q ) ) = 0 unless L ( p ) 6 = L ( q ) . Then note that V T ( p ; q ; L ( p ) ; L ( q ) ) is small if there is a strong gradient in one of the input images , since the relevant denominator will then be large . This energy is as in Graph Cut Texture [ Kwatra et al . 2003 ] , except that the min operation replaces summation in the original . This is done because , distinctively , adjacent images in this problem are typ - ically taken from rather different scenes , which often do not match . Our choice of energy then acts appropriately in encouraging transi - tion on a high contrast boundary in either scene , in addition to the usual effect of encouraging a good match across the boundary . Object Sensitivity We use state of the art techniques for face de - tection [ Viola and Jones 2001 ] and general object detection [ Shot - ton et al . 2006 ] for labelling sky . We would like to exploit this knowledge in such a way that if a face is included , it is included as a whole , and that sky is likely to appear only at the top border of the collage . For faces , as in [ Rother et al . 2005 ] , we have the energy term E obj = (cid:229) p ; q 2 N f ( p ; q ; L ( p ) ; L ( q ) ) , where f ( p ; q ; L ( p ) ; L ( q ) ) = ¥ whenever L ( p ) 6 = L ( q ) and p ; q are pixels from the same face in either the images of L ( p ) or L ( q ) , 0 otherwise . For sky rather than de(cid:2)ning an explicit energy , we simply label [ Shotton et al . 2006 ] images containing sky and pass this information to the constraint satisfaction engine ( see next section ) which attempts to position such images only at the top of the collage . Parameters The parameters w imp ; w trans ; w obj ; w face have been adjusted by informal testing over 50 sets of home - photographs , where each set contains between 20 (cid:0) 100 pictures , to achieve reasonably intuitive rankings of the image sets . We take w imp = 10 : 0 ; w trans = 1 : 0 ; w obj = 1 : 0 ; w face = 0 : 01 . Constraints The optimization of E ( L ) is done under certain con - straints , as listed below . 1 . Information bound Any image I n that is present in the la - belling , i . e . for which L ( p ) = ( n ; s ) for some s and some p 2 P must satisfy E imp ( L ; n ) > T ; ( 6 ) where E imp ( L ; n ) 2 [ 0 ; 1 ] is the proportion of local image informa - tion (cid:229) p E imp ( p ; L ( p ) ) , as de(cid:2)ned above , that is captured in the ROI . In practice we set T = 0 : 9 (cid:151) i . e . so that at least 90 % of the image information is captured . The purpose of this constraint is to guard against the possibility that only a small and unrecognisable frag - ment of an image may be selected (cid:151) a problem that plagues the Tapestry system [ Rother et al . 2005 ] (cid:151) see (cid:2)gure 2 . Levying a cost Figure 2 : Problems with Tapestry . A collage produced using Tapestry [ Rother et al . 2005 ] includes sky portions in the collage center and other small image fragments . Running AutoCollage on the same image set gives a superior result , see (cid:2)gure 5 . for fragments is quite simply infeasible in the Tapestry framework since it leads to a Markov Random Field with very large cliques , where standard methods such as graph cuts or Belief Propagation are no longer applicable . Here however this is possible thanks to the explicit constraint satisfaction step , which is one of the main innovations of this work (cid:151) see (cid:2)gure 5 . 2 . Uniform shift A given input image I n may appear in the col - lage with only one unique shift s . i . e . given two distinct pixels p ; q 2 P : p 6 = q , with labels L ( p ) = ( n ; s ) ; L ( q ) = ( n ; s 0 ) , it is re - quired that s = s 0 . This constraint [ Rother et al . 2005 ] is useful partly for computational ef(cid:2)ciency , and partly to ensure that the structure of input images is preserved , without introducing warps . 3 . Connectivity Each set S n 2 f p 2 P : L ( p ) = ( n ; s ) ; for some s g of collage pixels drawn from image n , should form a 4 - connected region . This cannot in practice be imposed as a hard constraint , but can be encouraged during optimization . 3 Energy Minimization The search space for optimization of the energy E ( L ) de(cid:2)ned in the previous section , is the entire space of labellings L 2 L . At each pixel , the input image and its shift must be selected , resulting in a large state - space for graph - cut optimization [ Rother et al . 2005 ] . Here a heuristic but effective approach to optimizing energy E ( L ) is adopted in which the various aspects of the labelling are optimized independently and in sequence . First images are ranked statically ; then rectangular ROIs are chosen optimally for each image ; then a packing problem is solved to assemble and position as many im - ages with highest rank , into the area allowed for the collage , with - out allowing ROIs to overlap ; (cid:2)nally graph - cut optimization (cid:2)xes pixel identity in areas of overlap of two or more images . Thus the 849 number of labels for graph - cut is restricted typically to two , three or four , in the overlap areas , exactly as in the Photomontage prob - lem [ Agarwala et al . 2004 ] , and thus complexity is dramatically reduced compared with Tapestry [ Rother et al . 2005 ] . This is sim - ply because graph - cut no longer has to optimize over images offsets s ; those offsets are now determined by optimal packing . Each of the four optimization steps is described next . Image ranking The ranking step , in the sequence of optimiza - tions , addresses the E rep term in the collage energy ( 1 ) . First images I n are relabelled , so that the index n ranks them according to how representative the subset I 1 ; : : : ; I n is . This is straightforward since E rep ( n ) is simply a static rank computed independently in terms of the n th image and its predecessors of higher rank . Thus the n th im - age is selected greedily as the one that minimizes (cid:0) a n D r ( n ) (cid:0) min m < n a n a m V r ( n ; m ) ; adapting the term E rep ( n ) ( 2 ) . The resulting ranking is then passed to the constraint satisfaction step below . ROI optimization The ROI for each input image I n is (cid:2)xed by minimising , independently for each image , the area of the ROI sub - ject to meeting the information - bound constraint ( 6 ) , and the con - straint that all detected faces are included . This is achieved by con - structing a summed area table [ Crow 1984 ] for rapid lookup of the total information (cid:229) p 2 R E imp ( p ; L ( p ) ) in any rectangular ROI R . All rectangles are then enumerated , and checked for satisfaction of the constraint , in order to select the one with minimum area . This oper - ation is quadratic in the number of pixels in I n , and this is mitigated by subsampling . This is done under the constraint that all detected faces are included . Figure 3 illustrates the effectiveness for this procedure in selecting a ROI . Figure 3 : ROI selection . ROIs are determined by selecting the rec - tangle that optimises E imp , and this favours highly textured areas , including all faces , with central positioning . Note that alternative speed up tricks for the same ROI detection problem have been discussed in [ Suh et al . 2005 ] . Furthermore , they have shown that cropped images , based on the ROI , are more effective for image retrieval compared to using the original images . The only difference to our ROI detection approach is the informa - tion measurement where theirs is based on [ Itti et al . 1998 ] . Constraint satisfaction Related packing problems have been ad - dressed elsewhere , for example for automatic tiling [ Kim and Pel - lacini 2002 ] . Here , the packing sub - problem can be stated as fol - lows . We are given a set of selected images and their ROIs , together with the ranking computed above . The goal is to incorporate as many highly ranked images as possible within the width and height of the collage , while respecting the additional constraint that every pixel be covered by some image ( though not necessarily covered by some ROI ) . The packing problem is a purely combinatorial problem which is reminiscent of applications found in other areas like schedul - ing [ Aggoun and Beldiceanu 1993 ] . What makes it quite un - usual , though , is the simultaneous presence of constraints for non - overlapping (cid:151) no two ROIs should intersect (cid:151) and covering (cid:151) every pixel is covered by an images , though not necessarily by a ROI . Being a generalization of well - studied packing problems , it is clear that the problem is NP - hard and that heuristic search is nec - essary . The general approach is to state the problem as a set of constraints ( inequalities , Boolean and linear expressions ) between a set of variables . In this problem , the set of variables is V = f ( x n ; y n ; b n ) ; n = 1 ; : : : ; N g ; ( 7 ) the positions ( x n ; y n ) for each images and a boolean (cid:3)ag b n indi - cating whether the image is to be included or not . Constraints are applied pairwise to images ; a typical constraint would be : if b n and b m then p 1 or p 2 ; : : : ; ( 8 ) where a typical proposition is p 1 = ( x n (cid:0) x m > w m + w n ) , in which w m and w n are respectively the half - widths of the ROIs . Because the relative positions of a ROI pair may be switched , these con - straints appear in disjunctive sets (cid:151) a signi(cid:2)cant difference from [ Kim and Pellacini 2002 ] . This also puts the problem outside the scope of standard techniques such as Linear Programming . How - ever such problems are amenable to approaches based on constraint programming ( CP ) [ Dechter 2003 ] . Another hard issue is that con - straints are mixed boolean and real , as above , so that effectively constraints must switch between activity and inactivity during op - timization . Further object - sensitive constraints can be included (cid:151) for instance we insist that images with sky appear only at the top of the collage . To obtain good solutions ef(cid:2)ciently , a two - step approach has been used . 1 . Branch and bound The framework for the (cid:2)rst optimization step is a depth - (cid:2)rst search which aims at maximising the number of selected images and their quality ( Eq . ( 2 ) ) . Constraint propagation [ Waltz 1975 ] is applied to subtrees , from which the subtree may either be pruned , or have its search space reduced . Real variables ( x n ; y n ) are dealt with by coarse discretization with conservative truncation of constraints . The issue of switching the set of active constraints from propagation is dealt with by rei(cid:2)cation [ Marriott and Stuckey 1998 ] . In the branch and bound step , no account is taken of the covering requirement . At this stage we simply solve the problem of packing as many rectangles as possible , within the disjunctive constraints on overlap of ROIs . Even with coarse dis - cretization , the branching factor at a node is large . This is dealt with by randomly selecting a limited number of branches to explore , and by allowing , for each of them , a bounded number of backtracking steps . 2 . Local search Once branch and bound has terminated , the re - sulting packing satis(cid:2)es the non - overlap constraints between ROIs , but in general will not satisfy the covering constraint . At this point , a deterministic local search is applied in order to repair the solu - tion . Perturbations are applied only to ( x n ; y n ) , not to b n , so the set of selected images is (cid:2)xed during this step . To make sure that a solution which satis(cid:2)es both the non - overlapping and covering constraints is systematically found , we repeat steps 1 ) and 2 ) several times if necessary , and each time re - lax slightly the constraints ( propositions p i in Eq . 8 ) . In principle , the constraint satisfaction step could generate multiple solutions . After re(cid:2)nement in step 2 , these multiple solutions could be evalu - ated using a bound on the energy function ( Eq . 1 ) or given directly to graph cut optimization . ( A bound is needed because strictly the energy function itself is only de(cid:2)ned for single coverings of pixels , not multiple coverings as delivered by constraint satisfaction . ) An illustration of the output of the whole constraint satisfaction procedure is given in (cid:2)gure 4 , for the collage problem of (cid:2)g 1 . 850 Figure 4 : Output from constraint propagation . ROIs are shown ( left ) , packed without overlap . Images ( right ) do overlap , and all pixels are covered . Graph cut with alpha expansion As explained above , graph cut optimization need be applied only to the image variable n in each pixel - label L ( p ) since the shift s for each image is now (cid:2)xed . In practice , up to four values of n need to be considered at each p so alpha - expansion [ Boykov et al . 2001 ] is used , exactly as in Digital Photomontage [ Agarwala et al . 2004 ] . Here the objective function to be minimized is that part of the energy E in ( 1 ) that is still (cid:147)in play(cid:148) , namely w imp E imp ( L ) + w trans E trans ( L ) + w obj E obj ( L ) . The (cid:2)rst of these terms is unary and the second and third are binary . Since this energy can be shown to be non - metric , the truncated schema of alpha - expansion is used [ Rother et al . 2005 ] . At each iteration of alpha - expansion , the 4 - connectedness property is en - couraged by dilating the optimally expanded set by one pixel . 4 a - Poisson Image Blending The blending task in AutoCollage is to create a seamless transition between input images that are adjacent in the collage . The chal - lenge is to (cid:2)nd a general procedure that creates appropriate transi - tions under differing conditions . Often adjacent images are quite different in colour and texture , so it is not appropriate simply to search for the least obtrusive join [ Kwatra et al . 2003 ] , since this will still form a highly visible seam . The choice is either to exploit a natural edge in one of the images , where an edge exists , or else to aim for a soft , transparent blend . One possibility is the extension of Poisson blending [ Perez et al . 2003 ] to include edge - sensitivity [ Agarwala et al . 2004 ] . However this tends to mix colours , rather than achieving the clean transparent effect that we seek here . The solution proposed here is to perform edge - sensitive blending but in the a - channel rather than in image colour channels . This is done by computing an alpha mask for each individual input image . In a (cid:2)rst step , for a particular image I k an overlap area is computed which comprises of all pixels p where the set of labels L ( p ) , which is the same as for the preceding graph - cut optimization , includes label I k and at least one other label . Then the following functional minimizes over the overlap area F ( a ) = Z k u ( r ) (cid:0) a ( r ) k 2 + w ( r ) k (cid:209) a k 2 d r ; ( 9 ) where w ( r ) = l + b exp (cid:0) 12 g 2 max n jj (cid:209) I n k and max n is taken over the images I n present in the overlap . Normalising constant g 2 is a mean - square gradient as in [ Rother et al . 2004 ] , and we set l = 20 , b = 10 . The function u ( r ) takes the value 1 at a pixel p if the im - age label , given by graph - cut , is I k and 0 otherwise . This selection then biases a towards the graph - cut solution . Maximization of the functional F is subject to boundary conditions that a = 0 ; 1 over the overlap area , and is computed , as usual , by solving a Poisson equation [ Perez et al . 2003 ] . In a (cid:2)nal step each image alpha mask is normalized so that at each pixel p in the output domain the sum of all de(cid:2)ned alpha masks is one . The results , clearly visible in (cid:2)g . 1 , is that both sharp abutments and transparent blends are achieved automatically in a collage . 5 Results , User Study and Discussion Results of AutoCollage are shown in (cid:2)gure 1 and 5 1 . Note the features of AutoCollage present in these examples . Bound - aries between images are appropriately positioned , avoiding cutting through interesting material . There is little duplication of mater - ial and small , visually meaningless image fragments are avoided . Seams between input images switch automatically between cutting along natural boundaries or blending transparently , according to the presence or absence of underlying sharp edges . Failure modes include the occasional inclusion of sky fragments in the interior , given that sky detection is not infallible ( around 83 % accuracy in our system ) . Sometimes texture edges trigger inappro - priately sharp transitions in a . Occasionally face detection fails , allowing an inappropriate cut . A further limitation of the current system is the lack of user interaction . To achieve this we can take further advantage of the constraint satisfaction by including user - speci(cid:2)c constraints such as (cid:147)include one image of this subset(cid:148) . Ob - viously , the user should also be able to move , re - size and swap im - ages , and potentially a brush interface , as in [ Agarwala et al . 2004 ] , can be used to include explicit image parts in the collage . In order to answer the questions whether AutoCollage is useful , visually appealing and an improvement over competitive methods , we have conducted a user study 1 . We asked 17 users who were not involved in this work , for a personal dataset ( 20 - 50 photos ) of an event e . g . a holiday trip . We have created four different summaries for each set : Tapestry [ Rother et al . 2005 ] ; AutoCollage with a maximum of 12 images to make it more compatible with Tapestry ; PhotoPile which is the collage result after constraint satisfaction only ; and a simple grid of 12 most representative pictures . Users were shown a random set of 7 collections , including theirs , and asked to answer the following questions with 1 ( de(cid:2)nitely no ) to 5 ( de(cid:2)nitely yes ) . The averaged results are : (cid:15) Would you send this summary to a friend ? AutoCollage ( 4 . 6 ) , Tapestry ( 3 . 2 ) , PhotoPile ( 2 . 2 ) , Grid ( 1 . 7 ) (cid:15) Would you like this summary as a screensaver ? AutoCollage ( 3 . 8 ) , Tapestry ( 2 . 5 ) , PhotoPile ( 1 . 9 ) , Grid ( 1 . 25 ) (cid:15) Would you use this summary as front page of the collection ? AutoCollage ( 4 . 5 ) , Tapestry ( 2 . 9 ) , PhotoPile ( 2 . 6 ) , Grid ( 2 . 1 ) (cid:15) Do you (cid:2)nd the summary visually appealing ? AutoCollage ( 4 . 5 ) , Tapestry ( 3 . 2 ) , PhotoPile ( 2 . 3 ) , Grid ( 1 . 7 ) (cid:15) Is it a good visual summary of the set of photos ? AutoCollage ( 4 . 6 ) , Tapestry ( 3 . 1 ) , Grid ( 2 . 8 ) , PhotoPile ( 2 . 6 ) This shows that AutoCollage is a useful collage tool , superior to the others , for two tasks : Sharing the collage with friends ( 4 . 6 ) , and using the collage as a summary of a collection ( 4 . 5 ) . Auto - Collage was also voted as the visually most appealing . On average users preferred soft blends , similar to the (cid:2)ndings in [ Diakopoulos and Essa 2005 ] : (cid:147)AutoCollage is much more visually appealing , in contrast to PhotoPile which is obviously a stack of photos with hard boundaries(cid:148) ( user quote ) . The user study gave also insights into the desired properties speci(cid:2)ed in sec . 1 . Firstly , selecting a substan - tial ROI from each image is important : (cid:147)I dislike bad details in Tapestry , in particular things like the piece of tree in the middle of a collage(cid:148) . Secondly , selecting representative image parts is essen - tial : (cid:147)AutoCollage is de(cid:2)nitely better than Tapestry by having a mix of people and landscape ; Tapestry shows sometimes only faces . (cid:148) Fi - nally , object ( sky ) recognition is essential : (cid:147)Having a piece of sky 1 Further results , and details of the user study , are available on http : / / research . microsoft . com / vision / cambridge / i3l / AutoCollage / default . htm 851 Figure 5 : Further example of AutoCollage . Note again , the desirable and novel properties : hidden boundaries , little duplication , freedom from fragments , selective transparency . in the center of a collage looks funny , I thought it’s snow(cid:148) . Fur - ther user quotes : (cid:147)Seeing an AutoCollage of your own photos is a surprisingly emotive experience . (cid:148) ; (cid:147)AutoCollage is a clear win on average ; it is better proportioned than the others(cid:148) ; (cid:147)AutoCollage is sometimes much better than Tapestry , however , AutoCollage is never worse than Tapestry . I’d also like to include a speci(cid:2)c image(cid:148) . The improvement of AutoCollage compared to Tapestry is also prominent in terms of runtime . To create collages in (cid:2)g . 5 and 2 , from a set of 14 input images , AutoCollage is 16 times faster in the core packing stage : 0 : 13sec ( AutoCollage ) vs . 2 : 07sec ( Tapestry , with only 0 : 001 % of all possible expansion moves ) . In future work it is planned to elaborate the object sensitivity . We will also address the issue of user interactivity which depends , however , heavily on the user task at hand . Another interesting pos - sibility is to allow multiple solutions from constraint satisfaction , and then evaluate each using a suitable bound on the energy . References A GARWALA , A . , D ONTCHEVA , M . , A GRAWALA , M . , D RUCKER , S . , C OLBURN , A . , C URLESS , B . , S ALESIN , D . , AND C OHEN , M . 2004 . Interactive digital photomontage . ACM Trans . Graph . 23 , 3 , 294(cid:150)302 . A GGOUN , A . , AND B ELDICEANU , N . 1993 . Extending CHIP in order to solve complex scheduling and placement problems . Mathematical Computer Modelling 17 , 7 , 57(cid:150)73 . B OYKOV , Y . , V EKSLER , O . , AND Z ABIH , R . 2001 . Fast approximate energy minimization via graph cuts . IEEE Trans . on Pattern Analysis and Machine Intelligence 23 , 11 . C ROW , F . 1984 . Summed area tables for texture mapping . In Proc . ACM Siggraph , ACM , 207(cid:150)212 . D ECHTER , R . 2003 . Constraint Processing . Morgan Kaufmann . D IAKOPOULOS , N . , AND E SSA , I . 2005 . Mediating photo collage author - ing . In UIST , CD(cid:150)ROM . E FROS , A . A . , AND F REEMAN , W . T . 2001 . Image quilting for texture synthesis and transfer . Proc . ACM Siggraph . I TTI , L . , K OCH , C . , AND N IEBUR , E . 1998 . A model of saliency based visual attention for rapid scene analysis . IEEETrans . on Pattern Analysis and Machine Intelligence 20 , 11 . K IM , J . , AND P ELLACINI , F . 2002 . Jigsaw image mosaics . In Proc . ACM Siggraph , ACM , 657(cid:150)664 . K WATRA , V . , S CHODL , A . , E SSA , I . , T URK , G . , AND B OBICK , A . 2003 . Graphcut textures : image and video synthesis using graph cuts . ACM Trans . Graph . 22 , 3 , 277(cid:150)286 . M ARRIOTT , K . , AND S TUCKEY , P . 1998 . Programming with Constraints . The MIT Press . P EREZ , P . , G ANGNET , M . , AND B LAKE , A . 2003 . Poisson image editing . ACM Trans . Graph . 22 , 3 , 313(cid:150)318 . R OTHER , C . , K OLMOGOROV , V . , AND B LAKE , A . 2004 . Grabcut : In - teractive foreground extraction using iterated graph cuts . ACM Trans . Graph . 23 , 3 , 309(cid:150)314 . R OTHER , C . , K UMAR , S . , K OLMOGOROV , V . , AND B LAKE , A . 2005 . Digital tapestry . In Proc . Conf . Comp . Vision and Pattern Recog . S HOTTON , J . , W INN , J . , R OTHER , C . , AND C RIMINISI , A . 2006 . Tex - tonboost : Joint appearance , shape and context modelling for multi - class object recognition and segmentation . In Europ . Conf . Comp . Vision . S UH , B . , L ING , H . , B EDERSON , B . B . , AND J ACOBS , D . W . 2005 . Auto - matic thumbnail cropping and its effectiveness . In UIST , CD(cid:150)ROM . V IOLA , P . , AND J ONES , M . 2001 . Rapid object detection using a boosted cascade of simple features . In Proc . Conf . Comp . Vision and Pat . Recog . W ALTZ , D . 1975 . Understanding line drawings of scenes with shadows . In The Psychology of Vision , W . P . H . , Ed . McGraw - Hill , New York . 852