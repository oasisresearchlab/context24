1 Color Reminder • The PSet deadline is absolute . Debugging Debugging strategy • Know what behavior to expect • Doubt everything - Even trivial pieces of code can be wrong - Beware of false causation : problem can only be here because that’s the only thing that changed • Debug pieces in isolation - Test intermediate functions as soon as you write them - Binary search / divide and conquer - Remove / disable code to make things simpler ( e . g . using # ifdef ) • Remember the cause may be far from the effect - memory corruption - helper functions - code modiﬁcation ( see false causation ) • Create simple inputs - where you can easily manually compute the result - e . g . constant image , edge image , small images ( e . g . 3x3 ) - including ( especially ) inputs to intermediate stages • Display / print everything - In particular intermediate results • Change one thing at a time - e . g . to verify that a given command has the effect you want , modify it to break it • Think about edge cases Debug your understanding • Understand goals , not just steps • Understand how things ﬁt together Types of buggy behavior • Crash • check error message • isolate location of crash ( debugger , cout , remove pieces of code ) • usual suspects : division by 0 , memory read / write • wrong output : • try simple inputs where you know answer • isolate intermediate stage where things get wrong • manually go step by step Seg faults • On linux and mac the error message will look like : • Segmentation fault • bad _ alloc • malloc error • std : : vector bad allocation • On Visual Studio : • program crashes with a dialog box with very cryptic messages • In Eclipse on Windows : • may crash without any message • Eclipse on windows is not recommended • In general , windows is going to be painful for this course Slides by Gaurav Seg faults • For you , usually an array / vector problem - access vector beyond its size - use un - initialized vector ( size 0 ) - or maybe trying to write an empty image - we’ll ﬁx the image writer • Focus your debugging on vectors : - indexing ( edge effects ? ) , lack of initialization Seg fault : 3 scenarios • Crash happens where the problem is - typically , indexing bug : access a vector beyond its size - just locate crash ( cout , debugger ) , ﬁx code • Crash happens when you touch a variable that is the cause of the problem , but the problem happened much earlier - typically using an un - initialized vector - locate crash , verify that this vector is properly initialized , maybe “cout” its size just before that line of code • Crash happens at 100 % unrelated location - you wrote beyond the bounds of a vector , which corrupted an arbitrary part of memory ( just after your vector ) , and the crash occurs when you need that part of memory - This is the nightmare scenario How to locate seg faults • Locate the function in which the seg fault happens ( using debugger ) • Then use cout statements to locate the exact line • While using debugger , try to print the “callstack” or “backtrace” - this is the list of functions called until segfault in last - function - ﬁrst order . • The bottom most function in the list will be your programs “main” function . The top most function in the list will be some obscure function from the system libraries . • Go up the list and you will see functions from your code . Find the top most function from your code - thats where the seg fault happened . • Next slide : how to invoke debugger . Slides by Gaurav How to invoke debugger • Visual Studio : • Press F5 ( starts the program inside debugger ) • Wait for the program to crash and a dialog box to show up : press “retry” • In the next dialog box , press “Break” • This halts the program at the segfault location which will most likely be inside the system libraries . Look for “Call stack” in one of the window panes at the bottom . This shows the list of functions called until segfault . • Learning to use break points will be very useful for Visual Studio users . • Mac : same as linux except use lldb instead of gdb • Linux : $ gdb a2 # a2 or a3 is name of executable gdb > run # executes the program inside the debugger gdb > bt # prints the trace of all functions called until segfault Slides by Gaurav Color Fredo Durand MIT EECS 6 . 815 / 6 . 865 Motivations Color • What does RGB really measure ? • Can RGB record all colors ? • Isn’t color about wavelength anyway ? • How does this relate to human eyes ? Color science & engineering • Do two color match ? - spectral distribution - threshold • Measure color • Encode color • Reproduce a color • Adjust color ( saturation , contrast , etc . ) 17 Questions ? Physical colors : spectra color Light is a wave Visible : between 450 and 700nm Spectrum Light is characterized by its spectrum : amount of energy at each wavelength This is a full distribution : one value per wavelength ( infinite number of values ) Spectrum • http : / / gizmodo . com / a - 1944 - infographic - on - electromagnetic - radiation - makes - l - 1019197061 Spectrum demo • Diffraction grating : – shifts light as a function of wavelength – Allows you to see spectra – In particular , using a slit light source , we get a nice band showing the spectrum • See the effect of filters • See different light source spectra source : canon red book Source : Canon red book CD spectrograph • http : / / www . cs . cmu . edu / ~ zhuxj / astro / html / spectrometer . html Light - matter interaction Where spectra come from : - light source spectrum - object reflectance ( aka spectral albedo ) get multiplied wavelength by wavelength There are different physical processes that explain this multiplication e . g . absorption , interferences . * = Foundations of Vision , by Brian Wandell , Sinauer Assoc . , 1995 Questions ? • So far , physical side of colors : spectra – an infinite number of values ( one per wavelength ) 27 28 Plan • Spectra • Cones and spectral response • Color blindness and metamers • Color matching • Color spaces 29 What is Color ? Slide from Victor Ostromoukhov 29 What is Color ? Spectral Power Distribution Illuminant D65 Electromagnetic Wave ( nm ) Slide from Victor Ostromoukhov 29 What is Color ? Reﬂectance Spectrum Spectral Power Distribution Illuminant D65 Electromagnetic Wave ( nm ) Slide from Victor Ostromoukhov 29 What is Color ? Reﬂectance Spectrum Spectral Power Distribution Spectral Power Distribution Illuminant D65 Electromagnetic Wave ( nm ) Slide from Victor Ostromoukhov 30 What is Color ? Reﬂectance Spectrum Spectral Power Distribution Illuminant F1 Neon Lamp Slide from Victor Ostromoukhov 30 What is Color ? Reﬂectance Spectrum Spectral Power Distribution Under F1 Spectral Power Distribution Illuminant F1 Neon Lamp Slide from Victor Ostromoukhov 30 What is Color ? Reﬂectance Spectrum Spectral Power Distribution Under F1 Spectral Power Distribution Illuminant F1 Spectral Power Distribution Under D65 Neon Lamp Slide from Victor Ostromoukhov 31 What is Color ? Slide from Victor Ostromoukhov 31 What is Color ? Stimulus Observer Slide from Victor Ostromoukhov 32 What is Color ? Slide from Victor Ostromoukhov 32 What is Color ? Light Light Retina Optic Nerve Amacrine Cells Ganglion Cells Horizontal Cells Bipolar Cells Rod Cone Slide from Victor Ostromoukhov 32 What is Color ? Spectral Sensibility of the L , M and S Cones S M L Rods Cones Distribution of Cones and Rods Light Light Retina Optic Nerve Amacrine Cells Ganglion Cells Horizontal Cells Bipolar Cells Rod Cone Slide from Victor Ostromoukhov Cones • We focus on low - level aspects of color – Cones and early processing in the retina • We won’t talk about rods ( night vision ) Spectral Sensibility of the L , M and S Cones S M L Rods Cones Distribution of Cones and Rods Light Light Retina Optic Nerve Amacrine Cells Ganglion Cells Horizontal Cells Bipolar Cells Rod Cone Summary ( and time for questions ) • Spectrum : infinite number of values – can be multiplied – can be added • Light spectrum multiplied by reflectance spectrum – spectrum depends on illuminant • Human visual system is complicated 35 Plan • What is color • Cones and spectral response • Color blindness and metamers • Fundamental difficulty with colors 36 Cone spectral sensitivity • Short , Medium and Long wavelength • Response for a cone : 37 Cone spectral sensitivity • Short , Medium and Long wavelength • Response for a cone = ∫ λ stimulus ( λ ) * response ( λ ) d λ 38 Cone response 39 Cone response Start from inﬁnite number of values ( one per wavelength ) End up with 3 values ( one per cone type ) Cone responses Stimulus Multiply wavelength by wavelength Integrate 1 number 1 number 1 number For matrix lovers • Spectrum : big long vector size N where N = ∞ • Cone response : 3xN matrix of individual responses For matrix lovers • Spectrum : big long vector size N where N = ∞ • Cone response : 3xN matrix of individual responses S L M cone spectral response kind of RGB observed spectrum 42 Big picture • It’s all linear ! Light reflectance Cone responses Stimulus multiply Multiply wavelength by wavelength Integrate 43 Big picture • It’s all linear ! – multiply – add • But – non - orthogonal basis – infinite dimension – light must be positive • Depends on light source Light reflectance Cone responses Stimulus multiply Multiply wavelength by wavelength Integrate 44 Questions ? Light reflectance Cone responses Stimulus multiply Multiply wavelength by wavelength Integrate 45 A cone does not “see” colors • Different wavelength , different intensity • Same response 46 Response comparison • Different wavelength , different intensity • But different response for different cones 47 von Helmholtz 1859 : Trichromatic theory • Colors as relative responses ( ratios ) Violet Blue Green Yellow Orange Red Short wavelength receptors Medium wavelength receptors Long wavelength receptors R e c ep t o r R e s pon s e s Wavelengths ( nm ) 400 500 600 700 V i o l e t B l ue G r een Y e ll o w O r ange R ed References on di ﬀ erent cones • http : / / hyperphysics . phy - astr . gsu . edu / hbase / vision / rodcone . html • http : / / www . blueconemonochromacy . org / what - is - bcm / eye - retina - and - cones - 2 / • http : / / webvision . med . utah . edu / book / part - iii - retinal - circuits / s - cone - pathways / • http : / / www . opticsinfobase . org / josa / abstract . cfm ? uri = josa - 57 - 11 - 1289 • http : / / www . cvrl . org / database / text / intros / introdens . htm • http : / / www . cvrl . org / database / text / density / lmintro . htm Metamers & color blindness 50 Plan • Spectra • Cones and spectral response • Color blindness and metamers • Color matching • Color spaces Response comparison • Different wavelength , different intensity • But different response for different cones differentiated 52 Color blindness • Classical case : 1 type of cone is missing ( e . g . M ) • Makes it impossible to distinguish some spectra differentiated Same responses Normal observer Color blind 53 Color blindness – more general • Dalton • ~ 14 % % male , 2 % female • Genetic • Dichromate ( 2 % male ) – One type of cone missing – L ( protanope ) , M ( deuteranope ) , S ( tritanope ) • Anomalous trichromat – Shifted sensitivity • More at , e . g . http : / / en . wikipedia . org / wiki / Color _ blindness 54 Color blindness test 55 Color blindness test • Maze in subtle intensity contrast • Visible only to color blinds • Color contrast overrides intensity otherwise 54 Color blindness test 55 Color blindness test • Maze in subtle intensity contrast • Visible only to color blinds • Color contrast overrides intensity otherwise 55 Color blindness test • Maze in subtle intensity contrast • Visible only to color blinds • Color contrast overrides intensity otherwise Questions ? • Links : – Vischeck shows you what an image looks like to someone who is colorblind . – http : / / www . vischeck . com / vischeck / – Daltonize , changes the red / green variation to brightness and – blue / yellow variations . – http : / / www . vischeck . com / daltonize / – http : / / www . vischeck . com / daltonize / runDaltonize . php Metamers 58 Metamers • We are all color blind ! • These two different spectra elicit the same cone responses • Called metamers 59 Metamers • Essentially , we have projected from an infinite - dimensional spectrum to a 3D space : we loose information spectrum cone subspace ( 3D ) infinite set of bases spectrum There is an infinity of metamers 60 Good news : color reproduction • 3 primaries are ( to a first order ) enough to reproduce all colors Recap • Spectrum : infinite number of values • projected according to cone spectral response = > 3 values • metamers : spectra that induce the same response ( physically different but look the same ) • Questions ? 63 Metamerism & light source • Metamers under a given light source • May not be metamers under a different lamp Illuminant metamerism example • Two grey patches in Billmeyer & Saltzman’s book look the same under daylight but different under neon or halogen ( & my camera agrees ; - ) Daylight Scan ( neon ) Hallogen Bad consequence : cloth matching • Clothes appear to match in store ( e . g . under neon ) • Don’t match outdoor Recap • Spectrum is an infinity of numbers • Projected to 3D cone - response space – for each cone , multiply per wavelength and integrate – a . k . a . dot product • Metamerism : infinite - D points projected to the same 3D point ( different spectrum , same perceived color ) – affected by illuminant – enables color reproduction with only 3 primaries