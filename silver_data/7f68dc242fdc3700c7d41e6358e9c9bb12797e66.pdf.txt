Semantic Web 0 ( 0 ) 1 1 IOS Press Ontology of Units of Measure and Related Concepts Editor ( s ) : Carsten Keßler , University of Münster , Germany ; Mathieu d’Aquin , Open University , United Kingdom ; Stefan Dietze , L3S Research Center , Germany Solicited review ( s ) : Werner Kuhn , University of Münster , Germany ; Michael Compton , CSIRO , Australia ; Simon Scheider , University of Münster , Germany ; one anonymous reviewer Hajo Rijgersberg a , ∗ , Mark van Assem b and Jan Top a , b a Food & Biobased Research , Wageningen University and Research centre , Bornse Weilanden 9 , Wageningen , The Netherlands . E - mail : { ﬁrst . last } @ wur . nl b Dept . of Computer Science , VU University , De Boelelaan 1081A , 1081 HV , The Netherlands . E - mail : mark @ cs . vu . nl Abstract . This paper describes the Ontology of units of Measure and related concepts ( OM ) , an OWL ontology of the domain of quantities and units of measure . OM supports making quantitative research data more explicit , so that the data can be integrated , veriﬁed and reproduced . The various options for modeling the domain are discussed . For example , physical quantities can be modeled either as classes , instances or properties . The design choices made are based on use cases from our own projects and general experience in the ﬁeld . The use cases have been implemented as tools and web services . OM is compared with QUDT , another active effort for an OWL model in this domain . We note possibilities for integration of these efforts . We also discuss the role OWL plays in our approach . Keywords : Ontology , Quantities , Units , OWL , Comparison 1 . Introduction Quantities and units , such as the length of a ship measured in meters , are vital to the exact sciences and engineering . Large amounts of quantitative data are used and produced in scientiﬁc experiments and in de - signs of artifacts . These data are stored in formal rep - resentations so that they can be manipulated by anal - ysis and design tools . The need to integrate data from several sources has increased , e . g . to make new infer - ences on previously disconnected existing research ef - forts . In practice researchers often store their results in proprietary formats , such as spreadsheets or math - ematical software packages , and only informally an - notate the data ( e . g . text entered in the head of a ta - * Corresponding author . E - mail : hajo . rijgersberg @ wur . nl ble such as “l ( m ) ” ) . This lack of standardization and formal meaning of data hinders interoperability . To improve the annotation and interpretation of quantitative research data , an ontology of units of mea - sure is required . A number of different ontologies of units of measure exist , such as EngMath , 1 an ontology for mathematical modeling in engineering , written in Ontolingua by Gruber and Olsen [ 5 ] . UCUM , 2 created by Schadow et al . [ 16 ] , is a system of codes of units and quantities to refer to in e . g . electronic data inter - change ( EDI ) protocols . Another ontology is MUO , 3 the Measurement Units Ontology , in RDF [ 22 ] , which adopts the units and quantities of UCUM and gives 1 http : / / www . ksl . stanford . edu / knowledge - sharing / papers / engmath . html 2 http : / / www . unitsofmeasure . org 3 http : / / forge . morfeo - project . org / wiki _ en / index . php / Units _ of _ measurement _ ontology 1570 - 0844 / 0 - 1900 / $ 27 . 50 c (cid:13) 0 – IOS Press and the authors . All rights reserved 2 Rijgersberg et al . / Ontology of Units of Measure and Related Concepts them URLs . A number of other , older ontologies exist [ 3 , 8 , 13 , 11 ] , as we have described previously [ 14 ] . Inspired by these different proposals , we have de - veloped OM , the Ontology of units of Measure and related concepts . We have distilled a semi - formal de - scription of the domain of units of measure from sev - eral paper standards that we have analyzed . An ex - ample of such a standard is the Guide for the Use of the International System of Units [ 19 ] , by the NIST . The semi - formal description for example states that “multiples and submultiples of units combine a pre - ﬁx and a singular unit” . For a full list of statements and the sources we have used , see previous work [ 14 ] . OM is meant for use in science and engineering prac - tice . Therefore we have based it on the technical stan - dards used by physicists , chemists , engineers , food scientists , etc . , such as the documents published by the NIST [ 19 ] . We have made no explicit efforts to link to terminology in measurement theory , as this ap - pears to use a somewhat different terminology . For example , measurement theory doesn’t seem to distin - guish between what are called measurement scales and units in the technical standards . Moreover , we have not yet grounded OM in foundational ontologies such as DOLCE , the Descriptive Ontology for Linguistic and Cognitive Engineering . DOLCE aims at capturing on - tological categories underlying natural language and human common sense [ 9 ] . Studying the precise rela - tions between concepts in OM and in DOLCE is deﬁ - nitely an interesting option . However , it is beyond the scope of our present work , and not needed to achieve our goals in operational support for scientiﬁc and en - gineering . In the paper we include a short discussion on this issue . OM is modeled in OWL 2 [ 21 ] . The choice for OWL 2 is motivated by the fact that it allows us to link instances to classes , and classes to instances . We consider this to be a required feature in the design of our ontology . We need it for expressing the rela - tions between application area instances and quantity classes , and between quantity classes and commonly - used unit - of - measure instances . OM is published as Linked Open Data through our vocabulary and ontol - ogy portal Wurvoc . 4 OM can be used freely under the Creative Commons 3 . 0 Netherlands license . It was cre - ated by the authors using text editors and versioned us - ing SVN . 5 4 http : / / www . wurvoc . org / vocabularies / om - 1 . 8 / 5 http : / / subversion . apache . org / Fig . 1 . Simpliﬁed class diagram ( UML ) of OM . Figure 1 shows a part of the structure of OM . Quan - tities are related to units of measure and measurement scales that can express them . Units of measure need to be ﬁxed by some observable standard phenomenon , such as the length of the path travelled by light in a vacuum during a time interval of 1 / 299 792 458 of a second , which is the deﬁnition of the meter . Measures , such as “3 kilogram” are used to indicate amounts of quantities . Units of measure can have a preﬁx . Quan - tities and units of measure are organized in systems of units such as the International System of Units ( SI ) . Quantities have a dimension . Ontological choices in OM such as subclassing quantities and the distinc - tion between units and scales are discussed in previous work [ 14 ] . In this article we discuss the domain of quantities and units and the design of our ontology that mod - els this domain . The contributions of this article are twofold . Firstly , we present the domain and determine which use cases beneﬁt from an ontological repre - sentation of this domain . These include mathematical applications such as unit conversion and dimensional analysis . Existing software products already perform these applications but rely on their own proprietary data formats . Secondly , we present OM and discuss the modeling choices we have made . We compare these modeling choices with those underlying the QUDT on - tology , 6 which is another active effort to comprehen - sively model this domain in OWL . 7 6 http : / / www . qudt . org 7 The OASIS QUOMOS effort has an OWL version in the plan - ning stage , see http : / / wiki . oasis - open . org / quomos / . Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 3 2 . Domain Description One of the main reasons to specify quantities and units is to use them for recording observations of the physical world . These observations are used for vari - ous goals such as creating new models and theories in science and developing new artifacts in engineering . A basic record consists at least of the elements ( 1 ) phe - nomenon ( object or event being observed ) ; ( 2 ) quan - tity kind ( aspect of phenomenon being measured such as length or weight ) ; ( 3 ) unit of measurement ( e . g . me - ter ) ; and ( 4 ) numerical value ( e . g . “5 . 0” ) . In everyday language the term “quantity” is often used to denote just the quantity kind ( e . g . “the quantity length” ) , but also sometimes a value and unit ( e . g . “a quantity of 3 meter” ) . However , in the physical sciences this term may also refer to the combination of the quantity kind and the phenomenon , for example ’the density of wa - ter’ . The quantity may have been measured , i . e . a nu - merical value and unit may be known for it . If the value and unit are known , the quantity can also be regarded as a record , e . g . “height ( 2 m ) ” . Some quantity kinds are more speciﬁc than others ( e . g . diameter is a kind of length ; work is a speciﬁc kind of energy , when a force acts against resistance to produce motion of a body ) . A unit together with a nu - merical value expresses the amount of one particular quantity ; this is called a measure ( e . g . “3 meter” ) . The amount of a particular quantity can only be expressed with a speciﬁc set of units ( e . g . meter , yard , light year , etc . for distance ) . 8 A unit is deﬁned by reference to a standard measurement . For example , 1 kilogram rep - resents the mass of the International Kilogram Proto - type , a platinum cylinder stored at the International Bureau of Weights and Measures in France . Each unit can ultimately be expressed in terms of a set of base units . Which units are chosen as the base units depends on the system of units . For example the SI uses seven base units including meter and second . The CGS system on the other hand uses centimeter , gram and second as base units , plus different exten - sions to cover electromagnetism . Base units are con - sidered to be mutually independent units ( although e . g . the meter is deﬁned through the second ) within a sys - tem of units ; they cannot be converted into one an - other . Non - base units are called derived units , and are deﬁned by multiplication , division and exponentiation 8 For simplicity we ignore dimensionless units in this article . OM does model them . of base units . For example , newton is a derived unit ( in the SI ) deﬁned as kg · m / s 2 . Units can be combined with a preﬁx such as milli or mega , which represents a multiplication factor ( e . g . one micrometer is 10 − 6 meter ) . Its main use is to al - low short numerical values in actual measures ( e . g . 1 µ m instead of 0 . 000001 m ) . The combination of preﬁx and unit is called a multiple of a unit ( e . g . megameter ) or a submultiple of a unit ( e . g . millimeter ) . Compound units – units expressed as multiplication , division or power of other units – cannot be preﬁxed as a whole , only singular units such as meter and newton can be preﬁxed . Quantities and units have a dimension , which is an abstraction of a quantity , ignoring magnitude , sign and direction aspects . The dimension of a quantity or unit can be viewed as a vector in a space spanned by an independent set of base vectors ( i . e . base di - mensions ) . For example , the quantity speed has a di - mension that can be decomposed into base dimension length and base dimension time ( with certain magni - tudes as we show below ) . In principle we could also have expressed time in terms of base dimensions dis - tance and speed . The base dimensions of SI are length ( L ) , mass ( M ) , time ( T ) , electric current ( I ) , thermody - namic temperature ( Θ ) , amount of substance ( N ) and luminous intensity ( J ) . For example , speed is deﬁned as length divided by time , written as L 1 M 0 T − 1 I 0 Θ 0 N 0 J 0 [ 1 ] . Each quantity can have more than one measurement scale , which can be nominal , ordinal ( e . g . Beaufort ) , interval or ratio . Of these , the interval and ratio scale type express amount using numerical values in combi - nation with units of measure . Ratio scale types such as the Kelvin scale have an absolute zero point , while in - terval scale types such as the differential Celsius scale do not . Different quantity kinds are typically associated with different application areas . For example , the area of space and time concerns quantity kinds such as length and speed . Some areas are more speciﬁc than others ; e . g . sailing uses the nautical mile to measure speed rather than km / h . This is practical knowledge of how quantities and units are used , instead of knowl - edge concerning the mathematical nature of quantities and units themselves . Standards such as SI provide no information on such matters . 4 Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 3 . Use Cases The use cases below were identiﬁed in the context of the Tiffany project at the Dutch food research or - ganization TI Food and Nutrition . 9 In this project a semantic research repository is being created to sup - port collaboration between food researchers and to en - able knowledge transfer to food industry . The use cases are also inspired by experiences in other domains , as for example described by Hey et al . [ 6 ] . The main goals of such efforts are to enable ( 1 ) replication and veriﬁcation of experiments done by others ; ( 2 ) inte - gration of research data from different sources ; and ( 3 ) analysis of existing research data . These goals re - quire an explicit semantic description of the data ( us - ing an ontology ) . Data owners not familiar with se - mantic technologies should be supported in providing descriptions . UC1 : Representing and checking observation records . The ontology must allow us to represent statements about the physical world . It can be used to represent inputs and outputs of experiments to the advantage of scientiﬁc research ( see e . g . Roure et al . [ 15 ] ) . It should for example be possible to state that “the viscosity of ketchup sample 1 is around 70 . 000 cP” . This requires relating a phenomenon to a quantity kind , a numerical value and a unit . It should be possible to check if the unit used is consistent with the quantity kind . There - fore , the ontology should model the relationship be - tween quantity kinds and units . UC2 : Manual annotation assistance . Scientists and engineers should be supported in the process of an - notating their data ( numerical values ) with quantities and units . An example is annotating the header of a ta - ble that contains experimental results . In the domain of food science , which we work in , many researchers use Excel to store tabular data . To assist annotation we have developed an Excel add - in that allows them to quickly select the right quantity and unit . Optionally , the user ﬁrst selects an application area . This allows the tool to limit the drop - down list to relevant quanti - ties only ( e . g . astronomy uses different quantities than food research ) . After a quantity has been selected , the tool limits the set of units in the unit drop - down list . In this way the selection process is simpliﬁed . 9 http : / / www . tifn . nl UC3 : Unit conversion . In order to integrate data from different sources , and for the purpose of data analysis , it is necessary to convert between units ( for example from degrees Celsius to degrees Fahrenheit ) . This requires a conversion factor between the units ( in this case 9 / 5 ) . In the case of absolute temperature val - ues , also an offset is required ( in this case + 32 ) , be - cause different temperature scales have different zero points . UC4 : Representing and checking formulas . Research in the exact sciences often uses formulas , either in the process itself or as output when a newly dis - covered “law” is given a formal notation . Formu - las are either expressed as quantities ( e . g . Newton’s force = mass · acceleration ) or combinations of quantities and units f [ N ] = m [ kg ] · a [ m / s 2 ] . To pre - vent mistakes the formulas can be checked on their di - mensional consistency and their unit consistency . For example , the dimensional exponents of force are the same as those of mass multiplied by those of accelera - tion . A formula can be dimensionally consistent with - out being unit consistent , e . g . v [ km / h ] = s [ m ] / t [ s ] is not unit consistent . Formulas need to be speciﬁed for - mally , including the units and quantities contained in them , to allow such consistency checks . UC5 : Automated annotation . Disclosing legacy data contained in e . g . spreadsheet ﬁles without costly hu - man intervention necessitates automated annotation software . The structure of the ontology should assist in deriving annotations from text , which a ﬂat list of quantities and units cannot . In previous work [ 20 ] we describe a system that performs automatic annotation of table headers with quantities and units . Human - made tables contain ambiguous information , e . g . the symbol F can refer to over ten quantities and units . If the cell contains the text “F ( Hz ) ” it is clear to hu - mans that F refers to frequency ( because the unit hertz ( Hz ) expresses frequency and not for example force , to which capital F usually refers ) . Such ambiguity can only partly be resolved by improving the standards ( see a discussion on this issue in the SI by Foster [ 4 ] ) , because humans will probably keep using older , am - biguous notations ( a phenomenon inherent in standard - ization efforts ) , and self - invented abbreviations . We discovered that the following knowledge can be used to heuristically disambiguate : ( 1 ) relationship be - tween quantities and units ( e . g . frequency is expressed in hertz ) ; ( 2 ) application areas and their units ( e . g . nau - tical mile belongs to sailing ) ; ( 3 ) relationships between units and dimensions ; and ( 4 ) terms used in everyday Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 5 language to indicate speciﬁc quantities . The ﬁrst al - lows F in “F ( Hz ) ” to be matched to frequency . The second allows “m” to be matched to metre instead of nautical mile ( when no additional information is given , the more generic unit is the more likely interpre - tation ) . The third heuristic allows “g / l” to be matched to gram per liter instead of other possible unit combi - nations , such as gauss per liter . Quantities with that dimension are not available . In essence , dimensional analysis allows to distinguish units that are not listed in the ontology into those that are “used in practice” ( e . g . gram per liter ) from those that are not plausible ( e . g . gauss per liter ) . The fourth heuristic ( i . e . recognizing jargon ) allows to detect the right quantity although a colloquial , non - standard term was used in the text . For example , people tend to write down “weight ( gram ) ” where it should be “mass ( gram ) ” ( weight is a force ex - pressed in e . g . newton ) . Other confusions are velocity and speed , frequency and rotational speed . This type of knowledge might also be used in a system that teaches this domain to students , a future use case which we will not consider here . 4 . Design and Usage of OM Quantity Kinds , Quantities and Units . There are three basic options to model quantity kinds and quan - tities . In the ﬁrst option , “quantity - kinds - as - classes” , subclasses of Quantity are used to model the quantity kinds , e . g . Length . This is the approach OM takes . It allows us to incorporate the hierarchical relations be - tween quantity kinds in the class hierarchy ; e . g . Diame - ter is a subclass of Length . Instances of Quantity repre - sent speciﬁc occurrences of quantities , such as “the di - ameter of apple1” . In that case , “apple1” is an instance of the class Fruit . The property om : phenomenon links a quantity to the phenomenon , for example the quan - tity “diameter” has phenomenon “apple1” . In the second option , “quantity - kinds - as - instances” , quantity kinds are modeled as instances of class Quan - tityKind , e . g . , “length” and “mass” are instances of QuantityKind . The hierarchy between quantity kinds should then be modeled with a property that relates instances of QuantityKind to each other . In the third option , “quantity - kinds - as - properties” , quantity kinds are modeled as properties that connect phenomena to quantities , e . g . hasLength . The hierarchy is modeled with the subproperty mechanism , e . g . hasDiameter is a subproperty of hasLength . These three alternatives represent possible ways to model the same information Fig . 2 . UML diagram of a measurement of diameter of apple1 in OM . from slightly different perspectives . They are compat - ible in that rules may be formulated to automatically translate one in the other . Which perspective should be preferred then depends on practical concerns , e . g . which perspective allows useful reasoning ( in the cho - sen representation language ) not easy to realize in an - other perspective . We return to this issue in the Discus - sion . Requirements from use cases . To represent observa - tion records ( UC1 ) , the unit and numerical value have to be recorded . OM groups the numerical value and unit of a quantity in an instance of class Measure . Quantity instances are linked to a measure through property om : value ( see also Figure 2 ) . UC1 and UC2 both require a link between quanti - ties and units . However , the set of units is different . In UC1 ( checking annotations ) the set of units is all units allowed in principle . The set of allowed units is potentially large : each unit can also be expressed as ( sub ) multiple units that combines a binary or SI - speciﬁed preﬁx with the unit ( e . g . kilometer , millivolt , etc . ) . Even more possible combinations occur for com - pound units ( megameter per minute , centimeter per megasecond , etc . ) . An intensional description of the allowed units for a quantity can be given using OWL restrictions . It is rel - atively easy to specify all allowed ( sub ) multiple units ; see the example for electric potential in Figure 3 . For compound units the restriction can get quite large and complicated . Instead of specifying them all by hand we investigated a generative approach . The ontology currently contains the intensional description of the ( sub ) multiples for all quantities . In UC2 ( manual annotation support ) the user ﬁrst selects a quantity and should then be given a list of units to select from . This list should be much smaller 6 Rijgersberg et al . / Ontology of Units of Measure and Related Concepts om : Electric _ potential rdfs : subClassOf om : Quantity ; rdfs : subClassOf [ a owl : Restriction ; owl : onProperty om : value ; owl : allValuesFrom [ a owl : Restriction ; owl : onProperty om : unit _ of _ measure _ or _ scale ; owl : allValuesFrom om : Electric _ potential _ unit ] ] . om : Electric _ potential _ unit a owl : Class ; rdfs : subClassOf om : Unit _ of _ measure ; owl : equivalentClass [ rdf : type owl : Class ; owl : unionOf ( om : Volt _ multiple _ or _ submultiple ; owl : oneOf ( om : volt om : abvolt om : statvolt om : watt _ per _ ampere ) ) ] . om : Volt _ multiple _ or _ submultiple a owl : Class ; rdfs : subClassOf om : Unit _ multiple _ or _ submultiple ; owl : equivalentClass [ a owl : Class ; owl : intersectionOf ( [ a owl : Restriction ; owl : hasValue om : volt ; owl : onProperty om : singular _ unit ] [ a owl : Restriction ; owl : cardinality " 1 " ^ ^ xsd : nonNegativeInteger ; owl : onProperty om : singular _ unit ] [ a owl : Restriction ; owl : allValuesFrom om : SI _ prefix ; owl : onProperty om : prefix ] [ a owl : Restriction ; owl : cardinality " 1 " ^ ^ xsd : nonNegativeInteger ; owl : onProperty om : prefix ] ) ] . Fig . 3 . Example deﬁnition of the quantity kind “electric potential” and units that are allowed to appear in any Measure s of elec - tric potential ( Measure s have units and are connected to quan - tity kinds through property om : value ) . We list ( 1 ) the singu - lar unit ( e . g . volt ) ; and ( 2 ) all ( sub ) multiples of that singular unit ( Volt _ multiple _ or _ submultiple ) . All other allowed units ( e . g . watt per ampere and its ( sub ) multiples ) are added in the same way . than the set of allowed units , as many of the theoret - ically possible units are irrelevant in most cases ( e . g . yoctoliter is not used to measure volumes , and peo - ple rarely use multiples of time such as megasecond or megaminute ) . This set of “commonly used units” can - not be speciﬁed intentionally , so we list them explicitly ( see Figure 4 for an example ) . The units are linked di - rectly to the class using the property unit _ of _ measure . This information cannot be expressed as a restriction on the property unit _ of _ measure _ or _ scale ( as with allowed units ) , because it is not forbidden to use other units than the commonly used ones . Neither should it be modeled as a restriction on the property unit _ of _ measure itself for the same reason : it is not forbidden that instances of measurements ( quantities with values ) can specify commonly used units individ - ually . The set of commonly used units is actually the same as the union of all units of a quantity speciﬁed in all om : Electric _ potential om : unit _ of _ measure om : millivolt ; om : unit _ of _ measure om : volt ; om : unit _ of _ measure om : kilovolt . Fig . 4 . Deﬁnition of commonly used units for the quantity electric potential . Actual deﬁnition contains more units . application areas taken together , but this equivalence cannot be expressed in OWL . Through speciﬁcation of the commonly used units , UC2 can be covered in our annotation tool . Our selection of application areas and commonly used units is not yet completed and the choices are preliminary , to be considered as input for debate on this matter . Checking datasets . Although we have speciﬁed the allowed units of quantities in OM , this alone does not allow for checking of datasets in terms of correct use of units , as OWL DL uses the open world assump - tion . For example , if a value of electric potential would be expressed using the unit “inch” , OWL DL would conclude that inch is a member of the class Elec - tric _ potential _ unit , instead of declaring the ontology to be inconsistent . We can solve this by adding disjoint - ness axioms between e . g . Electric _ potential _ unit and Length _ unit . This allows reasoners such as Pellet to identify the erroneous speciﬁcations . Compound units . Compound units are deﬁned by classes Unit _ Multiplication , Unit _ Division and Unit _ Ex - ponentiation . Instances of these classes are linked to their constituents with the properties term _ 1 and term _ 2 ( multiplication ; range Unit ) , numerator and de - nominator ( division ; range Unit ) , and base and expo - nent ( exponentiation ; base has range unit , exponent has range integer ) . Note that all divisions can also be expressed as multiplications ( e . g . m · s − 1 instead of m / s ) . We have still included division in OM as it is of - ten used to represent these units , accepted in all stan - dards . An advantage of divisions is that the exponents are always positive . The ontology thus contains con - cepts that are compositionally different , but mathemat - ically equal ( i . e . they are not owl : sameAs ) . This has to be taken into account in applications . For example , when searching for data annotated with a division , the search process should also formulate the query as the equivalent multiplication in order to obtain all relevant results . Unit conversion . UC3 requires that conversion rela - tionships between units are modeled . This relationship consists of a source and target unit , and a conversion factor ( expressing how many of the target unit is the Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 7 same as one of the source unit ) . Notice that the tar - get unit and the conversion factor actually express the amount of a quantity – a “measurement” . For this rea - son OM reuses the class Measure to express the re - lationship between units . For example , the unit foot is linked to an instance of Measure that groups the unit metre and the numerical value “3 . 048e - 1” ( in the scientiﬁc e notation ) , denoting that one foot is equal to 0 . 3048 meter . When the standards deﬁne a unit in terms of another unit , the property deﬁnition is used to link the units . For example , newton is linked to the compound unit m · kg / s 2 . In cases where the conversion factor is 1 , we link directly to a unit rather than a mea - sure ( i . e . we omit the factor ) . The link allows conver - sion of newton to base units , after which further con - version is possible to other units . In OM , conversion factors are given for all singular derived units . In case of conversion between interval scale types , and interval and ratio scale types also an offset is re - quired , as the zero points of the scale types differ ( this requirement is almost exclusive to temperatures ; most scales have uniquely - deﬁned zero points ) . 10 OM rep - resents this by adding to the link between Measure - ment _ scale s a factor and an offset value . Note that con - versions are only possible if a unit or scale is related di - rectly or indirectly to the target unit or scale . OM pro - vides deﬁnitions of units / scales that allow most con - versions to take place directly or indirectly . Labels . UCs 1 and 2 require that names and symbols of quantities and units are provided , so that users can ﬁnd the appropriate concept to annotate with . UC5 ( au - tomated annotation ) requires that also unofﬁcial and alternative names / symbols of concepts are provided . In OM , quantities and units have a preferred label and a preferred symbol , derived from the standards . Other labels needed for UC5 such as plural forms of units ( e . g . “meters” ) and contractions of compound unit symbols ( e . g . “Pas” instead of “Pa s” for pas - cal second ) are not given but can be generated . Ex - ceptions are for example the hectare ( not “hectoare” ) and kilohm ( although “kiloohm” is also allowed ) , and US / British spelling differences ( meter / metre ) . Sym - bols for compound units can be generated from their constituent unit symbols ( e . g . “s2” and “m / s” ) . Some quantities such as mass are sometimes referred to as 10 Look for example at length scales ( such as the meter scale ) , mass scales ( such as the kilogram scale ) , density scales ( such as the kilogram per cubic meter scale ) , etc . : 0 m , 0 kg , 0 kg / m 3 are all clear zero points of these scales . “weight” in everyday language . During automated an - notation ( UC5 ) , incorrect mentions of weight have to result in annotation with mass . To reach this goal , we add unofﬁcial _ label s to mass and other cases in OM ( unofﬁcial _ label is a subproperty of skos : hiddenLabel ) . We have also added a number of frequently used ab - breviations for quantities and units , including “sec” , “temp” and “ul” ( instead of “ µ l” for microliter ) , stored in unofﬁcial _ abbreviation ( another skos : hiddenLabel ) . Application areas . UC2 and UC5 require that appli - cation areas and their quantities and units are modeled . In OM , the class Application _ area has instances such as sailing and astronomy . The quantities and units be - longing to a speciﬁc area are linked to these instances . Two areas may have the same quantities , but may use different units . For example , the parsec is a unit of dis - tance in astronomy , while it is not used in sailing . An application area is linked to its units and to its quantities by two separate properties . Application ar - eas that form a selection ( subset ) of quantities and units in another application area are linked to each other with property uses _ application _ area . For exam - ple , sailing is linked to space and time . Dimensions and systems of units . UC4 ( checking formulas ) and UC5 ( automated annotation ) require that the dimensions of quantities and units are mod - eled . In OM , the class Dimension has instances such as density - dimension . The dimensional exponents are given in properties such as SI _ mass _ dimension _ expo - nent and SI _ length _ dimension _ exponent ( for density - dimension the values of these exponents will be 1 and - 3 , respectively ) . Dimensions are linked to quantity classes by the property dimension . Instances of class System _ of _ units are used to group together the base and derived units of a system such as SI . OM deﬁnes a few other systems of units and their base and derived quantities and units . However , OM does not contain a representation of the dimensional properties of other systems . This is not necessary as the SI can support the necessary computations and analyses deﬁned in the UCs for all other systems of units . Software . All of the use cases mentioned are imple - mented as freely - accessible SOAP services , 11 an anno - tation plugin for Excel ( released in the near future ) and an automated annotation system ( freely available ) . As far as we know we are the ﬁrst to supply elementary services based on an ontology for units of measure - 11 http : / / www . wurvoc . org / services / oum . jsp 8 Rijgersberg et al . / Ontology of Units of Measure and Related Concepts ment , as opposed to embedding the functionality in a monolithic software infrastructure intended to support a speciﬁc program . Linking . We have written a SILK [ 7 ] speciﬁcation that links OM to DBpedia . 12 Using a strict comparison to ensure high precision ( but lower recall ) , we gener - ated 88 quantity ( skos : exactMatch ) links and 130 unit links . Note that recall in practice is higher than these ﬁgures suggest , because DBpedia does for example not include all ( sub ) multiple units that OM has . 5 . Comparing OM with QUDT In this section we compare OM with QUDT v1 . 0 . 0 , focusing on main modeling choices and their conse - quences for the use cases . QUDT is an OWL ontology under development by NASA and TopQuadrant in the context of the NExIOM project . Quantity Kinds , Quantities and Units . QUDT does not use the “quantity - kinds - as - classes” approach that OM uses , but “quantity - kinds - as - instances” . Quantity kinds are modeled as instances of QuantityKind . In - stances of QuantityValue group together a numerical value and a unit ( similar to om : Measure ) . Instances of Quantity link to a QuantityValue and a QuantityKind , but not to a a phenomenon to represent a complete data record . The hierarchy between quantity kinds such as velocity and linearVelocity is indicated with a special - purpose property qudt : generalization ( see example in Figure 5 ) . QUDT does not provide an intensional de - scription of “allowed” units , neither does it specify commonly used units of quantities . Units in QUDT are , like in OM , instances of Unit . Units are linked to their quantity by the property quantityKind . The units allowed for one quantity are grouped together in classes such as LinearVelocityUnit ( similar to OM ) . The property qudt : exactMatch is used to indicate that units are equivalent , e . g . knot and nau - tical mile per hour . QUDT does not contain disjoint - ness axioms between its unit classes , making it impos - sible to check observation records using OWL DL as presented for OM . QUDT does not represent ( sub ) multiple units and compound units in terms of their constituents . For ex - 12 http : / / www . afsg . nl / InformationManagement / images / escience / om _ dbpedia _ units . nt and http : / / www . afsg . nl / InformationManagement / images / escience / om _ dbpedia _ quantities . nt Fig . 5 . UML diagram of a measurement of diameter of an apple in QUDT . Note that “diameter” is not currently deﬁned in QUDT . ample , femtometer is not explicitly related to the pre - ﬁx femto and the unit metre . It is not clear why some ( sub ) multiples have been included and others not . For example , millihenry is included but millimetre is not . Labels of units in QUDT are included with rdfs : label , symbol and abbreviation . The label for e . g . millisec - ond is “Millisecond” , symbol “ms” and abbreviation “ms” ( abbreviations of units appear to be the same as the symbol ; abbreviations such as “msec” would be more useful ) . QUDT speciﬁes 239 quantity kinds and 801 units ; OM speciﬁes 463 quantity kinds ( subclasses of om : - Quantity ) and 1 , 033 units ( 206 singular units , 599 ( sub ) multiples and 228 compounds ) . In general , OM speciﬁes more quantity kinds per application area . QUDT covers additional areas : biology , communica - tion and currency ; OM covers acoustics and astron - omy . 13 QUDT contains some quantities that are not derived from standards , such as EnergyPerElectric - Charge and ForcePerArea . They might have been added to group quantities ( e . g . quantForcePerArea groups Pressure and Stress ) based on their dimen - sions . Such “organizing quantities” may be more con - fusing than helpful as no one is familiar with them . QUDT speciﬁes many physical constants ( e . g . the Planck constant or the speed of light in vacuum ) whereas OM deﬁnes only a few . Note that many of the 641 QUDT constant instances concern the same con - stant ( e . g . Planck ) expressed in different units . 13 Surprisingly , NASA’s QUDT does not contain parsec , light year and other astronomical units . Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 9 Application areas . Application areas are modeled in QUDT as instances of the class QuantityKindCategory , such as SpaceAndTimeQuantityKind and Mechanic - sQuantityKind . These instances are at the same time also classes ; they are subclass of qudt : QuantityKind . These classes group together all quantities that be - long to an area . Other classes are used to group the units that belong to a quantity , e . g . qudt : SpaceAnd - TimeUnit ( subclass of Unit ) . There are two differences with OM’s approach . Firstly , in QUDT quantities and units of one area are not grouped together . The units that belong to an area are not directly accessible from the application area instance , but only through the link they have with their quantities . Secondly , OM’s ap - proach allows to make more ﬁne - grained groupings . For example , in OM we can express that microbiology typically uses milliliter ( rather than e . g . megaliter ) . Use cases . We are not aware of software written for QUDT that enables verifying the use cases men - tioned . QUDT doesn’t support all use cases . The lack of ( sub ) multiple units and different types of la - bel hinders automated annotation ( UC3 ) , manual an - notation ( UC2 ) and representation of data records ( UC1 ) . Checking records ( UC1 ) will require additional knowledge on which units are allowed for quantities . The ontological deﬁnitions that facilitate unit conver - sion ( UC3 ) are often unclear . For example , for the qudt : abvolt an offset of 0 and a multiplier of 1 . 0e - 8 are given , but the target unit ( presumably qudt : volt ) is not given . A more problematic example is the qudt : newton , for which correct offsets and factors are provided ( namely 0 and 1 ) , but again the target unit is not speciﬁed . This case is more problematic because the likely target unit , metre kilogram per second squared , is not speciﬁed in QUDT . 6 . Discussion and Future Work Terminology . The terms that are used in OM are based on a number of technical standards [ 19 , 2 , 23 , 10 ] . These terms are used differently in standard works about observation and measurement theory [ 17 , 18 ] . E . g . in measurement theory , scales and units as appear - ing in the technical standards do not seem to be dis - tinguished . However , we concentrate on use in opera - tional science and engineering and therefore use a dif - ferent reference framework , with different terminology ( see also Introduction ) . OWL DL compatibility . Both OM and QUDT are not valid OWL 1 DL . In OM this is caused by in - stances of om : Application _ area that link to the quan - tity classes , and quantity classes that link to instances using om : unit _ of _ measure . In QUDT this problem has been avoided since it uses the “quantity - kinds - as - instances” approach ( i . e . quantities are not classes but instances ) . However , QUDT has chosen to model ap - plication areas as a meta - class qudt : QuantityKindCa - tegory , the instances of which are classes themselves ( e . g . qudt : MechanicsQuantityKind . In OWL 1 DL en - tities are not allowed to have multiple roles ( entities are either class , instance or property ) . OWL 2 DL does support multiple roles through “punning” , which only disallows any reasoning that involves the entity in both its roles ( to the reasoner they are simply two different entities ) . This is ﬁne because the application - area part of the model is only needed to lookup which quanti - ties and units belong to it ( see UC2 ) , i . e . no reason - ing over them is needed . Moreover , the major use case for an OWL - compatible ontology ( UC1 ) can be sup - ported with generally available OWL 2 DL reasoners . In short , it does not appear to be necessary to support OWL 1 DL . Generating ontologies . OM’s and QUDT’s unit class - es such as om : Electric _ potential _ unit and qudt : Energy - Unit are predictable in structure . Such classes could be generated automatically ( from each singular unit , and from each quantity , respectively ) . The labels of units are also highly regular ( e . g . a compound unit’s name can be constructed from the labels of its constituents ; a unit’s plural form is often created by sufﬁxing - s ) . Therefore , instead of tedious and error - prone manual curation , it would be beneﬁcial to automatically gen - erate these elements . However , we do not know of an OWL - based ontology editor or manager that would al - low us to specify this type of meta - knowledge and gen - erate the ontology from it . Such issues might also play a role in other ontologies , so we suggest that this is a lacking component in the ontology management life cycle . Future work and open issues . We aim to specify more precisely the application areas , and extend the number of quantities and units with some more speciﬁc ones such as half - life and resonance energy ( which we found missing through our automatic annotation ex - periments [ 20 ] ) . The mapping to DBpedia will be im - proved . For usage of OM in applications related to quantita - tive research ( representing tables , formulas , inputs and 10 Rijgersberg et al . / Ontology of Units of Measure and Related Concepts outputs of computations , hypotheses ) we are develop - ing an Ontology of Quantitative Research ( OQR ) . A number of open issues remain . Firstly , an open problem for both OM and QUDT is how to deal with quantities that are a combination of an existing quantity and a mathematical operator such as total pressure and average speed , other than specify - ing them as atomic quantities . Secondly , how to repre - sent measures with just a number rather than a num - ber with a unit . An example is the countable quantity ( e . g . number of apples ) . This issue is not straightfor - ward . Thirdly , the proper deﬁnition of application ar - eas and commonly used units belonging to quantities . Fourthly , unresolved ambiguities in SI are a source of problems ( see Foster [ 4 ] ) . For example , duplicate sym - bols for units and preﬁxes ( e . g . , “d” and “h” for re - spectively “day” and “deci” , and “hour” and “hecto” ) , which makes compound units such as “hW” ( hour watt or hectowatt ? ) ambiguous . A ﬁfth issue is which per - spective on quantity kinds ( “quantity - kinds - as - class - es” vs . “quantity - kinds - as - instances” vs . “quantity - kinds - as - properties” ) is most appropriate . When com - paring OM and QUDT we found no particular rea - son to favor one over the other . For example , OM pro - vides subclass reasoning between quantity kinds and under OWL semantics QUDT’s transitive generaliza - tion property provides similar functionality . One ad - vantage of “quantity - kinds - as - instances” is that it al - lows an OWL 1 DL compatible ontology ( although both QUDT and OM are currently not OWL 1 DL ) , but it is not clear whether this is really needed in practice . Integration . An attempt to integrate the two ontolo - gies ( i . e . merge them into one new ontology ) could simply select one of the perspectives and drop the other . Another option is to allow both models to co - exist but harmonize them such that one is automati - cally translatable into the other . This will allow users to choose based on the use case , without sacriﬁcing in - teroperability . Services written for one could also han - dle data from the other . Difﬁculties in merging will be in the missing unit information in the deﬁnitions of de - rived units in QUDT and deviating names of quantities in QUDT and OM . A complete ontology of this domain should in any case contain information currently exclusive to both ontologies . OM provides additional label types , com - positional units , clear representation of unit conver - sion characteristics and speciﬁcation of allowed units which enables automatic consistency checks through OWL ; QUDT provides physical constants . Perhaps the OASIS QUOMOS working group is a useful forum for integration , as it aims to integrate several ( OWL and non - OWL ) standards such as QUDT and UCUM . 14 This would entail merging and selecting among the ( partially overlapping ) quantities and units deﬁned in the separate approaches . An open question is whether ontologies such as OM and QUDT , although deﬁned for practical purposes , can be aligned with foundational ontologies such as DOLCE . The class Quality in DOLCE can not be de - ﬁned as a superclass of OM class om : Quantity just like that ; there are clear differences between these two classes . Firstly , DOLCE qualities have speciﬁc proper - ties , such as a temporal index . OM can be used to ex - press dynamic and static data ; in itself it does not make a choice . Additional concepts are needed to express assertions and functions , for expressing for example time dependence . Secondly , qualities in DOLCE have scales that represent their possible values [ 12 ] . In OM , most quantities are related to units . In DOLCE , qual - ities can be grouped through spaces , which can be re - lated to units of measure . So , relating quantities in OM and qualities in DOLCE is not straightforward and must be investigated . What can be related to DOLCE is a phenomenon such as the class Fruit in Figure 2 by making it a subclass of Endurant or Perduant in this ontology . Modeling domain practice . Modeling issues do arise when we leave the standardized part of the domain , and look at how quantities and units are used in prac - tice . Firstly , which application areas to include and which units belong to an area is hard to ascertain , as are the commonly used units belonging to a quan - tity . Secondly , when modeling allowed units we ﬁnd units that are theoretically possible ( e . g . microstatvolt , megasecond , millifoot ) but that are not used in prac - tice . An empirical study is needed to decide on which units are more or less common . In many cases the use of these may even not be recommended . A reason to include these as allowed units is that when they do ap - pear it is at least possible to interpret them . Thirdly , in everyday language and textual notes and tables , people use non - standard terms to refer to quantities and units . It is not enough to model the standards in an ontology , or even to reduce ambiguity within standards as pro - posed by Foster [ 4 ] . Unofﬁcial terms , symbols and ab - breviations should be linked to ofﬁcial ones in order to enable the use cases . 14 http : / / www . unitsofmeasure . org / Rijgersberg et al . / Ontology of Units of Measure and Related Concepts 11 We conclude that the practical usability of an ontol - ogy ( in terms of use cases ) should be a central design principle , which has not yet received enough attention in ontologies of this domain . In OM we provide a start - ing point for further discussion and development in the future . Acknowledgements This publication was supported by the Dutch na - tional program COMMIT . The authors thank Jeen Broekstra , Mari Wigham and Rinke Hoekstra for use - ful discussions , and Jeen and Mari for contributions to the services and ontology . References [ 1 ] Bridgman , P . ( 1922 ) . Dimensional Analysis . Yale University Press . [ 2 ] Cohen , E . and Giacomo , P . ( 1987 ) . Symbols , units , nomencla - ture and fundamental constants in physics . Physica , 146A : 1 – 68 . [ 3 ] Davenport , J . and Naylor , W . ( 2003 ) . Units and dimensions in OpenMath . Technical report , OpenMath . Available at http : / / www . openmath . org / documents / Units . pdf . [ 4 ] Foster , M . P . ( 2010 ) . The next 50 years of the SI : a review of the opportunities for the e - Science age . Metrologica , 47 ( 6 ) . [ 5 ] Gruber , T . and Olsen , G . ( 1994 ) . An ontology for engineering mathematics . In Doyle , J . , Torasso , P . , and Sandewall , E . , ed - itors , Fourth International Conference on Principles of Knowl - edge Representation and Reasoning . Morgan Kaufmann , Bonn , Germany . [ 6 ] Hey , T . , Tansley , S . , and Tolle , K . , editors ( 2009 ) . The Fourth Paradigm - Data - Intensive Scientiﬁc Discovery . Microsoft Research . Available at http : / / research . microsoft . com / en - us / collaboration / fourthparadigm / contents . aspx . [ 7 ] Isele , R . , Jentzsch , A . , and Bizer , C . ( 2010 ) . Silk Server – Adding missing Links while consuming Linked Data . In Hartig , O . , Harth , A . , and Sequeda , J . , editors , Proceedings of the First International Workshop on Consuming Linked Data ( COLD2010 ) , volume 665 . CEUR , Shanghai , China . [ 8 ] Leal , D . and Schröder , A . ( 2002 ) . RDF vocabulary for physi - cal properties , quantities and units . Technical report , ScadaOn - Web . Available at http : / / www . s - ten . eu / scadaonweb / NOTE - units / 2002 - 08 - 05 / NOTE - units . html . [ 9 ] Masolo , C . , Borgo , S . , Gangemi , A . , Guarino , N . , and Oltra - mani , A . ( 2003 ) . WonderWeb Deliverable D18 . Techni - cal report , Laboratory For Applied Ontology , Trento , Italy . Available at http : / / wonderweb . semanticweb . org / deliverables / documents / D18 . pdf . [ 10 ] NIST ( 2004 ) . The NIST Reference on Constants , Units , and Uncertainty , International System of Units ( SI ) , Preﬁxes for bi - nary multiples . Technical report , National Institute of Standards and Technology ( NIST ) . Available at http : / / physics . nist . gov / cuu / Units / binary . html . [ 11 ] Pinto , H . and Martins , J . ( 2001 ) . Revising and extending the Units of Measure " subontology " . In Proceedings of the Work - shop IEEE Standard Upper Ontology , at IJCAI’2001 , pages 43 – 50 . AAAI Press , Seattle , Washington . [ 12 ] Probst , F . ( 2008 ) . Observations , Measurements and Semantic Reference Spaces . Journal of Applied Ontology , 3 ( 1 - 2 ) . [ 13 ] Raskin , R . and Pen , M . ( 2005 ) . Knowledge representation in the Semantic Web for Earth and Environmental Terminology ( SWEET ) . Computers & Geosciences , 31 : 1119 – 1125 . [ 14 ] Rijgersberg , H . , Wigham , M . , and Top , J . L . ( 2011 ) . How semantics can improve engineering processes : A case of units of measure and quantities . Advanced Engineering Informatics , 25 ( 2 ) : 276 – 287 . [ 15 ] Roure , D . D . , Goble , C . , and Stevens , R . ( 2009 ) . The design and realisation of the Virtual Research Environment for social sharing of workﬂows . Fu - ture Generation Computer Systems , 25 ( 5 ) : 561 – 567 . Available at http : / / www . sciencedirect . com / science / article / B6V06 - 4SX9FTN - 4 / 2 / e44404603ec05e03f8add717d5069d25 . [ 16 ] Schadow , G . , McDonald , C . , Suico , J . , Fohring , U . , and Tolx - dorff , T . ( 1999 ) . Units of measure in clinical information sys - tems . Journal of the American Medical Informatics Association , 6 ( 2 ) : 151 – 162 . [ 17 ] Suppes , P . , Krantz , D . , Luce , R . , and Tversky , A . ( 1989 ) . Foun - dations of Measurement . Academic Press , San Diego . [ 18 ] Suppes , P . and Zinnes , J . ( 1962 ) . Basic measurement the - ory . Technical report , Stanford University , Stanford , Califor - nia . Available at http : / / suppescorpus . stanford . edu / techreports / IMSSS _ 45 . pdf . [ 19 ] Taylor , B . N . ( 2008 ) . Guide for the use of the International Sys - tem of Units ( SI ) . 2008 edn . Technical report , National Institute of Standards and Technology . Available at http : / / physics . nist . gov / cuu / pdf / sp811 . pdf . [ 20 ] van Assem , M . , Rijgersberg , H . , Wigham , M . , and Top , J . ( 2010 ) . Converting and Annotating Quantitative Data Tables . In Patel - Schneider , P . F . , Pan , Y . , Hitzler , P . , Mika , P . , Zhang , L . , Pan , J . , Horrocks , I . , and Glimm , B . , editors , Proceedings of the 9th International Semantic Web Conference , number 6496 in LNCS . Springer - Verlag . [ 21 ] W3C OWL Working Group ( 27 October 2009 ) . OWL 2 Web Ontology Language : Document Overview . W3C Rec - ommendation . Available at http : / / www . w3 . org / TR / owl2 - overview / . [ 22 ] W3C RDF Working Group ( 10 February 2004 ) . RDF Primer . W3C Recommendation . Available at http : / / www . w3 . org / TR / rdf - primer / . [ 23 ] Weast , R . , editor ( 1976 ) . Handbook of Chemistry and Physics . CRC Press , Cleveland , Ohio .