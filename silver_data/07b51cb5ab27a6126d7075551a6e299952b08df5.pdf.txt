A Parametric Model For Creating Customized Fabrication Machines Frikk H Fossdal Western Norway University of Applied Sciences Bergen , Norway ffo @ hvl . no Rogardt Heldal Western Norway University of Applied Sciences Bergen , Norway rogardt . heldal @ hvl . no Jens Dyvik Dyvik Design Oslo , Norway jens @ dyvikdesign . com Adrian Rutle Western Norway University of Applied Sciences Bergen , Norway adrian . rutle @ hvl . no ABSTRACT Digital fabrication tools such as 3D printers , computer - numerically controlled ( CNC ) milling machines , and laser cutters are becom - ing increasingly available , ranging from consumer to industrial versions . Although these tools have enabled a completely new set of users to take part in manufacturing , they are still limited in their use and the workflows they provide . As an answer to this , users are modifying and customizing their machines by changing the work envelope and adding different end - effectors . However , customizing , modifying and creating digital fabrication machines require extensive knowledge within multiple different engineering domains , and is non - trivial . In this paper , we present The Fabricat - able Axis , a high - level parametric model that aims to simplify the process of experimenting , customizing and implementing digital fabrication machines . This model encapsulates the knowledge of an experienced machine designer into a model that less experienced machine builders can use to design and customize linear and rotary motion axes which can be combined into different machines . The model receives high - level input parameters such as axis type , length and speed - parameters , and outputs a CAD model of a motion axis consisting of fabricatable parts ( parts that are readily available or parts that can be fabricated using accessible tools such as a CNC milling machine ) . To validate our contribution , we first present a constructed scenario were we use the model to implement a specific machine . Secondly , we present an evaluation of our tool through a series of interviews with users who have been using the model to create different types of machines . CCS CONCEPTS • Software and its engineering → Model - driven software en - gineering ; • Applied computing → Computer - aided manufac - turing . Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM mustbehonored . Abstractingwithcreditispermitted . Tocopyotherwise , orrepublish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . Request permissions from permissions @ acm . org . MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada © 2020 Association for Computing Machinery . ACM ISBN 978 - 1 - 4503 - 7019 - 6 / 20 / 10 . . . $ 15 . 00 https : / / doi . org / 10 . 1145 / 3365438 . 3410960 KEYWORDS Model Driven Engineering , Digital Fabrication , Machine Building , CNC , CAD / CAM ACM Reference Format : Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle . 2020 . A Para - metric Model For Creating Customized Fabrication Machines . In ACM / IEEE 23rd International Conference on Model Driven Engineering Languages and Systems ( MODELS ’20 ) , October 18 – 23 , 2020 , Virtual Event , Canada . ACM , New York , NY , USA , 11 pages . https : / / doi . org / 10 . 1145 / 3365438 . 3410960 1 INTRODUCTION Automated manufacturing and digital fabrication is changing the way we design , interact and create the physical objects we surround ourselves with . Over the last decade , these machines , ranging from 3D printers , to laser cutters , to CNC ( computer numerical con - trolled ) milling machines , have translated from industry - only tools , to consumer - based desktop sized tools that users can access and use from their home . In parallel , the threshold for interacting with these tools , and creating parts to be manufactured , is being signifi - cantly lowered by modern CAD ( computer aided design ) programs and more user oriented interfaces . This has spurred a new era of decentralized manufacturing , enabling more and more people to take part in fabrication [ 28 ] . As the digital fabrication curriculum expands , recent studies [ 9 , 20 , 21 , 32 ] show that there is an increasing interest in not only using these tools to make customized parts , but also to customize and extend the capability of the machines themselves . Different users , ranging from professionals to hobbyists , want to tailor and specialize their digital fabrication tools . These users want to harness the precision and autonomy that computer controlled machinery offers , and they want to be able to customize it to their specific use . This is analogous to how software users not only want to use existing software , but to also customize and extend software for their own particular needs . However , extending , customizing and modifying these machines requires users to have significant knowledge in multiple different engineering domains . Even if digital fabrication and modern CAD workflows has lowered the threshold and simplified the process of designing and fabricating parts , designing and implementing func - tional machines is not an easy task , and requires the user to have MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle significant knowledge about principles and best practices in ma - chine design . Even if the user knows which machine he ultimately needs , it is hard to conceptualize this into something implementable . The perceived benefit of Model - driven engineering ( MDE ) , is that it enables developers to manage the complexity of develop - ing large scale systems by representing the system complexity as higher level abstractions , and by modularizing different domains of an overall system into domain specific models . This has shown success in not only software industry , but also hardware related industries such as the automotive industry , where large software systems are integrated with hardware and mechanical systems . Our work is based upon model - driven principles and aims to develop a streamlined and high - level modelling approach for machine de - signers to develop and implement functional and robust instances of digital fabrication machines . To enable this kind of model driven approach , we need to develop a model that captures a machine designer’s intent and transforms this into usable physical parts and assemblies . In this article we present a model - driven approach which was developed as part of a toolkit in prior work , [ 7 ] , that aims to create a unified approach for designing and implementing customized digital fabrication ma - chines . More specifically , we present the The Fabricatable Axis , a graphical domain - specific model for generating fabricatable linear actuators . The Fabricatable Axis can be customized and refitted based on specific application needs through a high - level parameter interface , and in that way used as a building block for creating different and new types of digital fabrication machines . The model takes high - level inputs such as length , width and gearing properties , and generates a 3D CAD model of a linear actuator . The parts of the outputted mechanical design is designed to be fabricated using a CNC milling machine . The main aim of our research is to investigate how a high - level domain model of a linear actuator can be used by novel users to successfully design and deploy robust fabrication machines . In this paper we provide details on the design and implementation of the Fabricatable Axis together with a constructed scenario were its utility is demonstrated by implementing a customized machine . In addition we present an interview study of different types of users who have been using the model to build different types of fabrication machines . 2 RESEARCH CONTEXT To develop a high - level language for rapid prototyping of digital fabrication machines , we need to examine and extract some key facets of what these types of machines consists of , and provide context about the model languages that can be used to model these types of systems . 2 . 1 Modularizing Machines into Components In Figure 1 different types of digital fabrication machines are shown ; a 3D printer , CNC milling machine and a laser cutter . Each machine has different purposes and is based on different manufacturing principles . A 3D printer is an additive manufacturing machine , where physical objects are rendered by adding material layer upon layer , whilst both the laser cutter and the milling machine are examples of subtractive manufacturing machines , where objects are made by removing material from an initial stock . Their workflows are different , but we can see that their operation is fairly similar ; they consist of a digitally controlled motion platform , that moves a tool precisely in a three - dimensional Cartesian space . To make the tool move around , these machines consists of a combination of linear actuators . A linear actuator is a mechanical device that can move in one single direction by transforming digital control signals into mechanical movement . It consists of a mechanical drive train and usually an electric stepper or server motor , which is controlled by a computer . By reviewing the 3D - printer in Figure 1 , we see that it consists of 4 linear actuators ; 1 that moves the build plate in y direction , two that moves the y axis up and down in z direction , and one that moves to tool itself in x direction . The design and choice of actuator is a key facet when imple - menting these machines . This requires the machine builder to first of all have knowledge about what type of actuators are available to use , and how that actuator should be used in the specific machine application . Ultimately , it is possible to buy such devices at spe - cific length that can fit a machine designer’s particular application . However , robust actuators can be expensive and difficult to source . In addition , evaluating if a machine design is successful , or not suc - cessful , is also a quite expensive process time - wise . It takes a long time from when a machine is conceptualized , until it has matured into a manifestation that can be evaluated . Decreasing this iteration cycle would significantly reduce both the cost and the threshold for both prototyping and implementing digital fabrication machines . Our research is about building a high - level model that encap - sulates the knowledge required to design and customize motion actuators , and that transforms these designs into usable parts and assemblies . The goal is to streamline user’s ability to rapidly design and build their own customized motion platforms and machines . 2 . 2 Fabricatable Designs In order for these users to be able to go from virtual to physical quickly , the parts assemblies that our model generates needs to be made in such a way that they can be physically made and put together fast . To do this we rely on the machine’s themselves ability to produce parts . Our designs are composed of fabricatable parts ; parts that can either be made with accessible tools ( CNC milling ma - chines , 3D printers , laser cutters ) , or parts that are readily available Figure 1 : Figure shows 3 different machines , a 3D printer , a CNC milling machine , and a laser cutter . By examining the different machines , we see that each machine uses different compositions of linear actuators to move its tool around in space . A Parametric Model For Creating Customized Fabrication Machines MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Figure 2 : Grasshopper program that generates three - dimensional boxes . The component to the right in the net - work expects two input parameters , the start point of a box , and the endpoint of a box . The start point is given a con - stant , while the end - point lets the user input parameters by interacting with the sliders . in hardware stores ( bolts and fasteners , bearings , stepper motors , etc ) . 2 . 3 Rhino 3D & Grasshopper Rhino is a commercial CAD program used by different users rang - ing from product designers , architects , automobile designers to engineers . While Rhino’s core functionality lies in direct manipula - tion of geometry through its different off - the - shelf tools , like most CAD software , an increasingly popular functionality in Rhino is its built - in parametric modelling tool Grasshopper . Grasshopper is a tool for creating parametric - associative models represented as vi - sual data - flow graphs . Here , it is important to differentiate between explicit and parametric - associative modelling . In both of these mod - elling methods , a 3D CAD model consist of a part or an assembly of parts , which is programmatically described by geometric param - eters . In explicit modelling there are no dependencies between the individual geometric parameters , thus the developed model is static , and to change the model , a modeller has to remake the model . The modeller will not have access to the parameters and operations that were used to develop the model . In parametric - associative modelling a model is made by keeping track of the genesis of the geometrical patterns . A modelled geometry is represented as not only geometry , but also by the geometrical operations , or the model that was used to make the 3D CAD model . Thus , a modeller can create different variations of the CAD model , by changing and in - putting the different parameters that drives the generation of the model . Grasshopper is a visual modelling language for creating these types of parametric - associative models . Grasshopper models are developed by connecting and combining different components rep - resenting different geometrical operations in a data - flow graph . Instead of creating geometry by adding geometrical operations in a linear annotation , by for example drawing polygons and extrud - ing them into 3D geometry , geometry is represented as a visual data - flow graph in Grasshopper . Thus , users can manipulate and view the raw data that drives the geometry in the Rhino workspace , algorithmically . A Grasshopper model is set up with some initial user defined input parameters . The data - flow follows a left - to - right annotation . As the initial parameters are connected to different components , each representing a mathematical operation on the raw data , the initial parameters are manipulated and modified , finally resulting in a geometry that can be baked ( generated to solid Brep geometry ) into the Rhino workspace . The Grasshopper language includes a rich curriculum of different components for manipulating geometry . It also allows users to create and customize components written in pure code ( Python or C # ) . Continuously , as the user modifies and adds components to the grasshopper network graph , the resulting output geometry is rendered as a preview to the view - port in Rhino . The advantage of modelling geometry in Grasshopper lies in its flexibility . While a program initially can be developed for a specific type of geometry , for example the initial input parameter could be a square , a user can at anytime change the initial geometry to something different ; for example a circle or a hexagon . Furthermore , a Grasshopper model exposes the user to not only a parametric design , but also to the total design process itself . A user can go through the geometry network and visualize what the individual nodes or parts in the network does with the data . A simple Grasshopper example is given in Figure 2 . Here , we can see how a three - dimensional box is represented as a Grasshop - per program . By manipulating the input to the model , different boxes of different sizes are generated . The model allows the user to explore countless different variations quickly , rather than re - modelling the box for each variation . We want to enable this same type of modelling for modularized parts that can be used to create machines . 3 RESEARCH QUESTIONS As discussed in the research context , we have identified linear and rotary actuators as key components when designing these types of machines . In order to enable these users to swiftly implement and experiment with customized motion platforms , we want to enable a language where motion platforms can be conceptualized and imple - mented swiftly using customizable actuators . To do this we want to create a high - level language for designing and making these actuators as building blocks , that in turn can be assembled into different motion platforms . We believe that this would greatly im - prove user’s ability to implement and experiment with customized digitally controlled machines . The research question of the work presented in this paper is : How well can we provide a high - level model that enables our users to conceptualize and implement robust machine designs ? The main contributions we make towards this goal is : • A high - level model that generates rotary and linear actuators and that encapsulates the domain expertise that is required to design these types of mechanical systems • Evaluation of users using our model to implement different types of machines and bespoke digital fabrication tools 4 RESEARCH METHODOLOGY In [ 10 ] , Hevner et al presents a methodology framework aimed to - wards design science in information systems ( IS ) . Hevner presents MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle Figure 3 : Through the parameter interface , the model enables users to customize and generate two different types of actuators ; a linear actuator ( A ) and a rotary actuator ( B ) . After generating multiple actuators using the model , they can be arranged into different compositions and thus different machines can be expressed . A preview of different machine compositions made with The Fabricatable Axis is shown in the left figure . By enabling users to quickly create and visualize actuators , and arranging them into different compositions , the process of conceptualizing machines is reduced . By having the designs as fabricatable designs , users can quickly go from virtual models , to usable physical machines . a guideline that is meant to aid researchers in IS to deploy high - quality design - science research . In [ 5 ] , Engström et al aligned this approach with research in a software engineering context . The presented work in this paper follows this framework for identifying problem relevance , deploy correct evaluation methods and con - tributing clear and verifiable contributions back to the knowledge - base . Our target group for this research are users who have experience in using CAD programs to design different artefacts , and have experience in using existing digital fabrication equipment such as CNC milling machines and 3D printers to make parts . Furthermore they want to expand their fabrication capabilities by developing custom machines of different sizes , with different end - effectors , and thereby different fabrication workflows . We have identified two concrete problems that these users are facing : • Understanding the design and engineering principles be - hind designing robust motion platforms that can be used to implement machines . • Being able to rapidly conceptualize , deploy and evaluate machine implementations . The implemented artefact presented in this paper is meant to aid these users by simplifying the process of conceptualizing , designing and manufacturing digitally controlled actuators through a high - level parameter interface . The artefact was developed over time through a continuous de - sign process between end - users using the artefacts , and machine building experts continuously making adjustments to the artefact to fulfill the need of the end - users . This was especially important to understand what types of parameters should be exposed through the parameter interface in Grasshopper , and how we could stream - line the user experience of the model . To evaluate the artefact we deploy two types of evaluation methods : ( 1 ) a constructed scenario were we demonstrate the utility of our artefact by using it ourselves to implement a customized machine , and ( 2 ) a case study were we interview subjects who have been using the artefact to design dif - ferent machines , and who have been using the machines that have been designed using the artefact . 5 FABRICATABLE AXIS The Fabricatable Axis is a model that lets users generate mechanical designs for linear and rotary actuators . The model takes high - level inputs and generates assemblies of parts that are fabricatable . The model is developed and implemented using the Grasshopper lan - guage . In this section we present how we designed the model and how it is used to create functional machines . 5 . 1 Grasshopper Model The complete model is implemented as a single data - graph in Grasshopper . The model takes high - level user input and gener - ates actuator designs based on these parameters . The generated CAD model consists of an assembly of multiple parts that is fas - tened together using generated holes for fasteners . An overview image of both the complete model in Grasshopper and its output in Rhino is shown in Figure 4 . Key parameters include axis length and width , the properties of the drive - train ( gear ratio and properties for the chamfer rail ) , thickness of available material and the milling bit used to make the parts using a CNC machine . The output of the tool is a CAD model of the actuator , and a 2D trace of the parts . The latter is used when generating the tool - paths for milling the parts . Through a series of different operations , each a combination of different Grasshopper components , the input data is propagated through the data - graph , resulting in different parts of the actuator assembly . The different operations are grouped into appropriate groups to make a clear and understandable view of how the data is modified through the model . For example , one group is responsible for generating the geometry of the actuator rail , while another A Parametric Model For Creating Customized Fabrication Machines MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Figure 4 : The figure shows an overview of the model for the Fabricatable axis which is implemented in the Grasshopper language . On the left hand side the Rhino workspace can be seen . This is where the Grasshopper model outputs its geometry . On the right side the full model of the linear actuator can be seen . As users change the input parameters of the model , the geometry in Rhino is updated accordingly . This shown how the tool is typically used . As the parameters are updated , users will inspect and assess the output visually . group generates the rack & pinion geometry on top of the rail . In Figure 5 an example of the sub - group that generates the pinion gear is shown . The model also holds parameters for controlling what type of geometry the model is transformed to . The geometry can either be generated as 3D geometry , which is usable for modelling machines in Rhino , or it can be generated to nested 2D curves , which is used for cutting out the parts using a CNC milling machine . The user parameters are exposed to the user on the left side of the grasshopper model . These are grouped into different categories , where each category exposes the high - level properties of the dif - ferent parts of the actuator . The output of the compiled geometry data is continuously rendered as a preview in the Rhino viewport . This makes it easier for a user to learn and explore what the dif - ferent parameters are controlling . Once a user is satisfied with the compiled version of an actuator , the preview can be baked into a solid geometry file in Rhino . Figure 5 : One of the many sub - definitions that the model consists of . The definition in the figure generates the geom - etry of the pinion gear that engages on the rack of the axis . 5 . 2 Mechanical Design Tomakethiskindofhigh - levelabstractionusefulandimplementable , the models of the actuators must be possible to manufacture and as - semble by our end - users . An important facet of our implementation is the mechanical design of the actuators . The mechanical design is optimized to be manufactured using a CNC milling machine . The designs also need to be highly flexible to allow to be manufactured in different materials using different types of CNC machines . The model holds several properties for this purpose . Through the input interface , users can set different material thicknesses and define what type of milling bit they want the geometry to be optimized for . A key property that enables this flexibility lies in the design of the drive - train of the actuators . It is designed to be milled directly into the surface of the linear rail . The geometry of both the rack and pinion are based on a cycloid curve , so that it can easily be milled using round milling bits . 6 REFLECTION OF THE DESIGN The model was developed over time by a multiple people , both with and without domain expertise in machine design and program - ming . The iteration cycle typically consisted of developing and implementing features to the model , use the model to develop new machine designs , then fabricating , building , testing and evaluating the machine designs , and finally evaluating how useful the model was when implementing the machines . By interacting with a com - munity of machine builders , and through the process of developing our model , we have extracted some key insights and lesson learned . 6 . 1 Standardisation is good for customization Our key insight is that by constraining a machine designer to a simple design language , where different machines can be expressed by manipulating the two different modules our model provides , it significantly reduces the threshold for designing new machines . An important facet in machine design , and mechanical design in general , is having knowledge about different mechanical principles MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle Figure 6 : Process of designing 2 - axis pen - plotter using the Fabricatable Axis . The model is used to generate 3 different actuators . The actuators are then put in a machine composi - tion by translating and rotating them in Rhino , which can be seen in A . In B , an additional frame structure and blocks for joining are added to the machine . The final machine design is shown in C . and what types of parts are available to be used when developing a novel design . By constraining users to a specific type of design par - adigm , using fabricatable linear and rotary actuators as a building blocks , we observed that users were more confident when exploring different machine configuration , thus being able to speed up the iteration cycle of implementing bespoke machines . 6 . 2 The role of visual feedback The grasshopper model follows the lineage of other visual modelling tools . Through our study we have seen the importance of how visual results are aiding our users in using the model . Several of the users in our community had little to no experience in either using Grasshopper as a modelling tool , or in machine design best practices . They did not necessarily understand what the different input parameters of our model did , or how they worked . However , by adjusting the parameters , and seeing visually how the output CAD model was changed and adapted , they where able to gain understanding as they where interacting with the model . We see this as a successful use case of a graphical modelling tool and how visual feedback can help novice users using new tools . 6 . 3 Summary Three factors played a role for building our model , domain knowl - edge , standardisation , and fast feedback . To follow design science methodology , we need to both do an evaluation of the implemented artefact , and we need to see how well it will satisfy the machine building community that we address . This will be done in the next two sections , and we start with the evaluation of the model . 7 EVALUATION OF THE MODEL To demonstrate and evaluate how the model can be used to build a complete machine , we present a constructed scenario were we use the model to design and implement a machine with specific requirements . 7 . 1 Setup We used the model to implement a 2 - axis pen plotter , which was designed based on some specific requirements ; it needed to fit in an airplane friendly suitcase so that it could be brought to a conference and used as a demo machine of the toolkit . As part of the demo , it also needed to be able to draw different plots with high precision using a marker . The author who implemented the machine was involved in the development of the model itself , and had fluent knowledge about how to use Rhino as a CAD tool and in using CNC milling machines to fabricate parts . axis Length Gear Ratio Motor Type X 400 2 . 2 Nema24 Y1 500 2 . 2 Nema24 Y2 500 2 . 2 Nema24 Table 1 : Parameters used in model to generate the 3 linear actuators used in the 2 - axis pen - plotter To meet the requirements , the machine needed to have a specific size ( it needed to fit in a suitcase ) . It also needed to move a pen - tool around in 2 dimensions quickly and precise . The requirements for rigidity and stiffness where not that high , since a pen - tool is relatively light weight and requires little torque to be moved around . The dimensions of the machine were decided to be 400 x 500mm . We used a 3mm round milling bit to cut the parts , and the properties of the drivetrain were optimized to be made using this bit . The parts where made from a 1x1m sheet of 8mm POM ( Polyoxymethylene ) , so an additional requirement was that the nested parts needed to fit within this envelope . 7 . 2 Operations Based on these initial requirements , we used the model to generate the components we needed to make the motion platform . This was an exploratory and iterative process . From our requirements we knew the parameters the different actuators needed to be . The parameters where used as input to the model which was used to generate 3 instances different linear actuators . As the different instances were generated with the model and baked into Rhino , we used the native tools of Rhino to move the actuators around in space , and position them into the composition we wanted . If we at anytime needed to change or modify one of the instances , we simply regenerated the instances using the model . This iterative process continued until we were contempt with the layout of our machine . Once the composition of the actuator was completed , an addi - tional frame was modelled and added to the composition to increase the stiffness of the machine and to simplify the process of assem - bling the parts into a rigid construction . This part was done manu - ally in Rhino , on top of the already generated linear actuators . To prepare the parts machine for fabrication , we export the generated 2D cut files that the model provides . Finally , a CNC milling machine was used to cut out the required parts out from the POM sheet . The complete milling time was approximately completed in 1 hour . The parts was then assembled into a final machine . Each axis was first assembled separately , with its glide block on top of it , and the NEMA 23 motor was attached to the CNC cut motor plate . The axes where then arranged accordingly to the modelled composi - tion , were two of them is facing the y - direction , whilst the last is attached on top of the y - direction axes , moving in the x - direction . The composition was then attached on top of the modelled frame , A Parametric Model For Creating Customized Fabrication Machines MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Figure 7 : In picture A the parts for the 2 - axis pen - plotter is cut using a CNC milling machine at a local makerspace . Pic - ture B shows the assembly process of the machine . In Picture C the completed pen - plotter is being used to draw line art on paper . and fasteners were used for holding the parts together . Finally , each motor was connected to an off - the - shelf motion controller that is used to control the motion digitally . 7 . 3 Result The machine was designed and built over the course of one week , and thereby shows the efficiency of the tool and the advantage of using a fabricatable design . The demonstration shows how a machine designer , who is already fluent in machine design , and in the use of digital fabrication tools , benefits from a high - level model for generating motion modules . By generating the required modules , the machine designer was able to conceptualize and manifest a design swiftly . However , it is important to note that the machine designer , based on his experience , already had a clear image of what a sound machine design would look like . This might not be the case for users who are inexperienced in machine design . Apart from conceptualizing , fabricating and assembling a me - chanical design , the process also involved a final step where motors , electronics and control logic was fitted to the machine . This is a trivial step for a simple 2 - axis machine , since there exists a quite rich ecosystem for different off - the - shelf controllers for controlling machines with 2 - 3 degrees of freedom . However , as the degrees of freedom increases , this is no longer the case , and implementing the control is left for the user . 8 FEEDBACK FROM COMMUNITY Occupation Machines Built subject 1 mechanical engineer / teacher 6 subject 2 machinist / teacher 3 subject 3 entrepreneur 1 subject 4 graphical designer 1 subject 5 physicist / computer scientist 2 subject 6 machine designer 6 Table 2 : Demographic overview of subjects in the interview To evaluate the usefulness of our model , we have over time been observing a community of machine builders that have been using our model to make different customized machines . These observation has mainly been monitored and tracked through the GitHub repository where the project lives . We wanted to understand how the model aided these users in designing and creating machines . To do this , we conducted a series of semi - structured interviews over video calls with 6 different participants from the community . The users in the study were between 20 - 35 years old and had a diverse set of backgrounds , ranging from teachers to industry mechanics . 8 . 1 Interview Questions The interviews were structured around our main research question . Our main goal in the interview was to understand how different users were interacting with the model , and whether they had been able to successfully use it to design and implement machine designs . The study included a total of 13 questions that were used as a foundation in the discussions . Specifically we wanted to understand why these users were building customized machines , how the model aided them in doing so , and how useful they found the machines that they built . During the first interview we found that the subject had ported a version of the model to a different CAD tool , namely Autodesk Fusion360 [ 2 ] , and that several of the subjects in our study had used this version of the model , rather than the original . The details about this implementation is discussed in the interview results . The user interaction with this tool is the same as with the Grasshopper model , so for the purpose of the interview , whether the user used the Fusion360 model or the Grasshopper model does not matter . 8 . 2 Interview Results What type of machine did you build using the Fabricatable Axis ? Some of the users had generated multiple different machines using the model , ranging from conventional CNC milling machines and 3D printers , to more unique machine designs like ping - pong shooting robots and light - painting robots . All subjects in the study had interacted and used the model to generate different axis designs , that they in turn fabricated . We found that users who were inexpe - rienced in machines design typically used the model to generate one single instance of an actuator , rather than combining multiple axes into a complete machine design . They then proceeded to fab - ricate the parts for the actuators , assemble it using the instructions found in the repositories wiki , and test it . This served as a starting point for novel users . Once they were comfortable using the model to generate instances of the axis , they found it easier to proceed with using it to create more complex machine compositions . Here , several subjects underlined the importance of how the model al - lowed them to move quickly from conceptualising and designing the actuator , to swiftly producing the parts of it , assembling it , and testing it physically . Although all users had interacted with the model , we found that the majority of the complete machine designs found in the repository were designed by a core group of 3 users . The rest of the users were reusing these machine designs rather than using the model to create new machine designs . When asked about why , the users answered that the existing machine designs solved the requirements that they had . Didyouunderstandthedifferentparametersofthemodel ? The majority of the subjects answered that they understood the main parameters such as axis type and axis length , but struggled to understand how the properties controlling the drivetrain worked . MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle They answered it was hard to differentiate between what parame - ters would yield a drivetrain with high resolution , or what parame - ters would yield a high - torque actuator . The subjects commented that it was hard to know what type of drivetrain would be ap - propriate for different applications . For example , what should the parameters be for actuators that are used for a 3D printing appli - cation , or what are appropriate parameters for a machine that is used for a milling application . One of the subjects made comments about how this could be solved by abstracting these parameters to a higher level . For example , the axis generator could hold input parameters such as " high - torque , " fast " , " slow " or " high precision " , or even , parameters reflecting application specific information such as 3D printing , milling or laser cutting . However , we found that even if the subjects did not fully understand how the different pa - rameters inflicted the model , they were able to gain understanding of this by changing the parameters , and observing the visual CAD results , or in some cases , fabrication the actuator to evaluate the performance . Did your machine give you capabilities you did not have access to before ? Here , almost all of the subjects made remarks about the upside of having the output of the model being fabricat - able . Several of the subjects had experience with making machines prior to using the model , and explained how they felt overwhelmed about finding correct parts for a machine design , and going through the time intensive process of sourcing them . They explained how the model constrained them to a design space where they were limited in these choices , and how they were able to quickly go into a makerspace , use the model to quickly generate the parts they needed , and using a CNC milling machine to fabricate the parts . Was there any capabilities you missed in the model ? Following the thread of understanding the different parameters of the model , some of the subjects found it difficult understanding all of the parameters that the model exposed to them , and wanted a more high - level user interface for creating instances of actuators . Some of the subjects also found it difficult to integrate the actuators they generated into robust machine compositions , and as an answer to this , they wanted the model to have a suggestive feature , were they could input the type of machine they wanted , for example a 3D printer with a given work envelope , and have the model generate a suggestive composition of such a machine . Finally several of the subjects also made comments about how they found it challenging to integrate electronics and control to the machines they designed . They suggested that when modelling the machine in Rhino , all the information needed to create the control topology of the machine composition is available , and that it should be utilized into a fully integrated tool were the control infrastructure is generated as the machine is designed . Did you do any modifications to the model ? Several of the subjects had either modified the model directly or by giving feed - back through the repository . As discussed in the previous subsec - tion , one of the users in the study had also ported the model to another CAD tool . When asked about his motivation for doing this , the subject commented that this was due to him having more profi - ciency and knowledge about using this particular tools . The subject explained that he had followed the originals models Grasshopper data - graph , and implement the same flow of data in Fusion360 . As the interviews proceeded , we found that several users had used the Fusion360 - based model to design and implement different ma - chines , rather than the original Grasshopper model . When asked about why they preferred the one over the other , they answered that this was due to either the licensing cost of Rhino ( Fusion360 is free for hobbyists ) , or because they were more comfortable or had more experience using Fusion360 . One of the subjects also explained that he wanted to port the model to a browser - based application , freeing the model from licensed software and enabling it as a cross - platform open - source browser software . Additionally , two of the subjects made remarks about the robustness of the output design . They commented on how the original glide - block design did not suffice in high - torque application . Based on this they modified the model to generate a glide - block design that used bearings to compensate for friction , and that was adjustable using eccentric nuts . How robust was the machine you built , and what did you use it for ? We asked several questions about how useful the ma - chines the different subjects implemented were , and what they were using their machines for . Although most of the machines were designed based on an end - goal as experimentation and learning platforms , we also found several examples of machines being put to commercial use . Two of the subjects had used the Fabricatable Axis to design large - format CNC milling machines that were ac - tively being used in several makerspaces . Two of the subjects had been commissioned to design and build CNC mills for different companies . However , as some of the subjects pointed out , building machines from modularized machine comes at a price in terms of rigidity . Ultimately , it is also possible to buy much more rigid machine components if budget is not a limitations . However , as these subjects speculated over , the requirements of precision and rigidity are not necessarily always the most important end - goal in a machine building process , and a hobbyist building a machine will ultimately have very different requirements for repeatability and precision then an industrial endeavour . Why are you interested in building machines ? A common answer presented itself throughout the user group ; first and fore - most , they saw this as a learning curriculum and a practical access point to gain knowledge about how to use these types of machines , and to gain knowledge about the driving engineering principles of their designs . For these users , the Fabricatable Axis worked as a onboarding artefact that enabled them to learn about these top - ics . Two of the subjects worked as teachers in vocation schools were several machines were built and implemented in the schools workshop , and used on a daily basis by the students . The subjects underlined the importance of fabricatable design as a learning cur - riculum . The machines being used at the schools were both made and maintained by the students . The subjects reflected over how valuable it was for the students to be in control of almost the entire supply chain of the parts that were used in the machines , and how by having the machines as fabricatable designs , the students could constantly add new parts , fix broken parts and make modifications to the machines . Apart from building machines to gain knowledge , several sub - jects made comments about how Fabricatable Axis was an cheap and easy access point for them to expand their digital manufactur - ing capabilities . This was in particular important for the users that needed machines for commercial use . They saw the Fabricatable A Parametric Model For Creating Customized Fabrication Machines MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Axis as a mean to gain access to machines that they previously did not have access to . These users also reflected over what types of machines they saw as valuable in this context . They saw mak - erspaces and the machines that makerspaces offers as an access point to generalized fabrication machines ( laser cutters , CNC mills and 3D printers ) , whilst they could use the Fabricatable Axis to create more specialized machines that they needed in their prac - tice . For example , one of the subject were working on creating a automated anodizing platform based on a linear axis created by our model . 8 . 3 Interview Summary The interviews shows that all the subjects of the study were able to use the model to implement linear or rotary motion . The subjects made positive remarks about the tools ability to generate parts and assemblies that could be assembled into usable and functional actu - ators . They underlined the importance of fabricatable designs , and how this released them from the treacherous process of choosing and sourcing parts . However , as some of the users speculated over , the tool has unreleased potential when it comes to aiding novel users in being able to create fully functional machine compositions . The subjects especially pointed out that suggestive machine com - positions and automatic control generation are features that would significantly broaden their ability to create customized machine designs . 9 THREATS TO VALIDITY To classify potential threats to validity , and reason about our corre - sponding mitigation strategies , we follow the scheme proposed by Runeson and Höst [ 25 ] . a ) Internal : To build a machine using a framework that one has built is a potential thread of internal validity since one might be able to build the machine only because one has built the framework . Therefore , the interviews play an essential role where others are using the framework . In terms of threats to internal validity regard - ing the interview , we followed a systematic approach in setting up the study and best practice guidelines for both data collection and analysis [ 25 ] . Moreover , the interview questions might have influenced the participants in how good they thought the model was . To mitigate this risk , we spent time discussing how to phrase the questions and types of questions to avoid . b ) External : Generalizability is inherently limited for case studies . All interviews were done within the fab - lab community . The reason for this is that this community is an early adapter of building Fabri - catable machines . They are used to play and build ; this might not be the case in general . However , the group of people who want to build their own machines are increasing as the number of fab - labs around the world is being built . c ) Construct : Two of the authors have prior experience with the building machines and been key contributors of the model , which we leverage to ensure construct validity . Thus , the interview situa - tion was informal and characterized by mutual trust . Furthermore , the interview guide was refined through multiple iterations . d ) Reliability : To ensure reliability , we used observer triangu - lation during the interviews . The first author conducted the in - terviews via Zoom , and the second watched the interview and discussed them with the first author . What we missed here was the ability for the second author to ask follow - up questions for additional clarifications ; however , that was not a problem in our case , since the interview was easy to understand . The first author did the coding and discussed it with the second author . We got a good understanding by listening to the interviews , so transcriptions did not appear to offer a positive return on time we would have to invest . Even with the small number of partici - pants , we feel we got a good saturation [ 26 ] due to the relatively homogeneous group of people building machines . 10 DISCUSSION Our study shows that our tool enables a diverse set of end - users to implement complex mechanical devices through a high - level de - sign tool . We have demonstrated that both novel users and experts benefit from using a high - level model that is used to customize motion platforms . Through our evaluation , we see that the model aids in different ways for different types of users . For users who already have expertise in machine building , the model functions as a tool for quickly conceptualizing and prototyping different types of motion platforms . For novice users , the model acts as a gateway for learning about machine building practices , and to familiarize themselves with how such machines can be implemented . We ob - served that users who use our model to generate their own specific machines , are more likely to further customize and expand the features of the machine throughout its life cycle . By lowering the threshold for implementing motion platforms , we see that our users are more free to experiment and customize their specific fabrication workflows , rather than spending time on implementing the motion platform . To enable more end - users to experiment with digital fabrication tools , there is a need for high - level infrastructure for creating novel machines . We see this work as a first step towards bridging con - cepts from model - driven engineering with the field of personlalized fabrication . The Fabricatable Axis provides the means to generate customized motion platforms . However , as we saw in the study , there are still challenges to be resolved in order to enable end - users to to fully harness and tailor the precision of machines for their specific applications . Understanding what types of platforms and compositions are suited for different fabrication workflow is a diffi - cult task for novel machine designs , thus , there is a need for a tool that aids these users in this task . We also see that when combining different actuators into compositions in a CAD tool , we have all the information necessary to extract the kinematic representation of a motion platform and utilize this to automatically generate the control infrastructure necessary to control the machine . 11 RELATED WORK As automated tools and fabrication technology are becoming wide - spread , aiding how users can more readily adapt and use these tools have become a salient topic in computer science . Literature shows the benefits and the need for allowing end - users to customize and tailor their own machine interactions . For example , Tian modified created a customized lathe with its own graphical user interface to explore how novel users could learn about machining through haptic feedback . Teibrich et al . [ 29 ] added an additional end - effector MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada Frikk H Fossdal , Rogardt Heldal , Jens Dyvik , and Adrian Rutle Figure 8 : Examples of machines built with the Fabricat - able Axis . A . Pen - Plotter , B . Pipe - inspection robot , C . Large - Format CNC mill , D . CNC mill on top of a Gelendewagen , E . PCB milling machine , F . 3D printer with silk screen decals to an existing 3D printer to be able to use the same platform for sub - tractive and additive processes . Adding functionality to 3D printers for interactive or hybrid fabrication has also been achieved [ 9 , 20 ] . Yet ‘hacking’ limits researchers to modifications that can be made to only existing platforms . 11 . 1 End - user CAD Tools We are indebted to Hofman et al . ’s framing of the need for CAD tools that use an end - user program perspective [ 12 ] . In their frame - work PARTs , they provide users with familiarity but not expertise in CAD with tools to more easily express and reuse 3D design intent . In 1992 , Gantt and Nardi wrote about the different roles different levels of users of CAD may take on within a single organization and how ‘local developers’ provide support [ 8 ] . Since then , the role of ‘local developer’ has perhaps mostly moved online , but we believe the ‘gardener’ role now has also taken on the development and maintenance of third - party CAD plugins ( E . g . for Autodesk’s app store or Food4Rhino [ 6 ] ) . Grafter is another example of an end - user CAD tool ; it encapsulates the complexity of mechanisms to ease their reuse [ 24 ] . Drawing from this related work , the work pre - sented in this paper aims to encapsulate machine design expertise in an abstraction that is more accessible to an end - user . 11 . 2 Fabrication Toolkits Encapsulating subject expertise into toolkits is an active topic in fabrication and robotics . In [ 19 ] , the authors presented a toolkit for modularizing machines into linear and rotary actuators made out of cardboard , a modular control infrastructure for controlling the actuators implemented in Python . However , cardboard is a limiting material to build functional machines , and our approach differs in its ability to create parts made out of high - performance materials . We are inspired by the open - source work by Holland et al . who released the Soft Robotics Toolkit ( SRT ) [ 13 ] . Oh et al . encapsulate information on mechanisms into their toolkit FoldMecha [ 17 ] , en - abling an end - user approach to adding motion to papercraft . Mehta et al . enable the design of robots from functional specifications in their work on end - to - end systems for printable robots [ 16 ] . In [ 30 ] , the authors provides an open - source motion platform for user defined end - effectors . Our toolkit differs from this related work in its application to digital fabrication machines and its ability to enable customized motion platforms . 11 . 3 Fabrication in modelling Workflows and modelling using CAD tools have been subject to prior work in the modelling community . Specifically , [ 27 ] presented a MDE driven approach for generating meta models for capturing designer intent and transforming it into parametric models . [ 1 ] presented a feature language for sculptured modelling . In [ 11 ] , the authors present a UML approach for modelling part assemblies . In [ 4 ] Royo et al demonstrates models intended for integrating processes for form generation , digital fabrication and material com - putation . In [ 22 ] the authors presented a framework for going from conceptual code detailing how a integrated circuit design should function , to generate the necessary PCB - design files to manufac - ture and implement the complete circuit design . Our approach is motivated by these efforts , but differ in terms of its functionality . 11 . 4 Open - Source Hardware Our work is closely related to and builds upon other open - source machine building efforts . RepRap and the Fab @ Home are founda - tions in the open - source machine space [ 14 , 23 , 31 ] . New machines such as Maslow CNC [ 15 ] or the Prusa 3D printer embody what we believe to be best practices for online and distributed community development of machines . Companies who sell machine - building parts in low - volume such as Openbuilds [ 18 ] are reducing the need for open - source designs to not rely on external supply chains ( this is in contrast to their industrial counterparts such as RexRoth [ 3 ] which are difficult for individuals to source or buy ) . However , we differ from most of these existing machine building efforts in that Fabricatable Machines is focused on motion platforms rather than specific end - effectors . 12 CONCLUSION AND FUTURE WORK In this paper we presented the Fabricatable Axis , a high - level model that can be utilized to design and implement customized digital fabrication machines . Through a community of machine builders we have seen how they were able to successfully implement bespoke digital fabrication tools . As a future road map in our research we propose the following work lines : Automatic Control system generation : As users are building up the machine composition visually in the CAD environment , we have access to all the information needed to generate the necessary control topology for controlling the machine itself . As discussed ear - lier in the paper , it is easy for users to use off - the - shelf controllers for common 2 - and 3 - axis machine configurations . However , creat - ing more complex kinematic chains is non trivial . An interesting future direction of this work would be to generate the control topol - ogy simultaneously from the information that is available as the machine is generated by our model . AutomaticMachineCompositionGeneration : Asmentioned in the discussion , an interesting future direction would be to in - corporate automatic machine compositions based on high - level parameters . For example , users could express what kind of work - flow they want to create a machine for ( 3D printing , CNC cutting or turning , laser cutter , etc ) . Based on this information , we could be able to suggest what type of machine configuration would be A Parametric Model For Creating Customized Fabrication Machines MODELS ’20 , October 18 – 23 , 2020 , Virtual Event , Canada best suited for the users application in terms of rigidity , speed and layout . REFERENCES [ 1 ] C . K . Au and M . M . F . Yuen . 2000 . A semantic feature language for sculptured object modelling . Computer - Aided Design 32 , 1 ( Jan . 2000 ) , 63 – 74 . https : / / doi . org / 10 . 1016 / S0010 - 4485 ( 99 ) 00085 - 8 [ 2 ] Autodesk . [ n . d . ] . Fusion360 . https : / / www . autodesk . com / products / fusion - 360 / overview Library Catalog : www . autodesk . com . [ 3 ] Bosch . 2019 . Rexroth . https : / / www . boschrexroth . com / en / xc / [ 4 ] Jorge Duro - Royo and Neri Oxman . 2015 . Towards Fabrication Information Modeling ( FIM ) : Four Case Models to Derive Designs informed by Multi - Scale Trans - Disciplinary Data . MRS Proceedings 1800 ( 2015 ) , mrss15 – 2138549 . https : / / doi . org / 10 . 1557 / opl . 2015 . 647 [ 5 ] Emelie Engström , Margaret - Anne Storey , Per Runeson , Martin Höst , and Maria Teresa Baldassarre . 2019 . How software engineering research aligns with design science : A review . arXiv : 1904 . 12742 [ cs ] ( Nov . 2019 ) . http : / / arxiv . org / abs / 1904 . 12742 arXiv : 1904 . 12742 . [ 6 ] food4rhino . 2019 . Food4Rhino . https : / / www . food4rhino . com / [ 7 ] FrikkH . Fossdal , JensDyvik , JakobAndersNilsson , JonNordby , TorbjørnNordvik Helgesen , Rogardt Heldal , and Nadya Peek . 2020 . Fabricatable Machines : A ToolkitforBuildingDigitalFabricationMachines . In ProceedingsoftheFourteenth International Conference on Tangible , Embedded , and Embodied Interaction . ACM , Sydney NSW Australia , 411 – 422 . https : / / doi . org / 10 . 1145 / 3374920 . 3374929 [ 8 ] Michelle Gantt and Bonnie A . Nardi . 1992 . Gardeners and gurus : patterns of cooperationamongCADusers . In ProceedingsoftheSIGCHIconferenceonHuman factors in computing systems - CHI ’92 . ACM Press , Monterey , California , United States , 107 – 117 . https : / / doi . org / 10 . 1145 / 142750 . 142767 [ 9 ] Wei Gao , Yunbo Zhang , Diogo C . Nazzetta , Karthik Ramani , and Raymond J . Cipra . 2015 . RevoMaker : Enabling Multi - directional and Functionally - embedded 3D printing using a Rotational Cuboidal Platform . In Proceedings of the 28th Annual ACM Symposium on User Interface Software & Technology - UIST ’15 . ACM Press , Daegu , Kyungpook , Republic of Korea , 437 – 446 . https : / / doi . org / 10 . 1145 / 2807442 . 2807476 [ 10 ] Alan R Hevner , Salvatore T March , Jinsoo Park , and Sudha Ram . [ n . d . ] . Design Science in Information Systems Research . ( [ n . d . ] ) , 32 . [ 11 ] Rainer Hochgeladen and Prachi Vyas . [ n . d . ] . Entwurf komplexer Zusammen - bauten Rainer Hochgeladen Prachi Vyas Senden mit UML . CAD - CAM REPORT ( [ n . d . ] ) . [ 12 ] Megan Hofmann , Gabriella Hann , Scott E . Hudson , and Jennifer Mankoff . 2018 . Greater than the Sum of its PARTs : Expressing and Reusing Design Intent in 3D Models . In Proceedingsofthe2018CHIConferenceonHumanFactorsinComputing Systems - CHI ’18 . ACM Press , Montreal QC , Canada , 1 – 12 . https : / / doi . org / 10 . 1145 / 3173574 . 3173875 [ 13 ] Donal Padraic Holland , Colette Abah , Marielena Velasco - Enriquez , Maxwell Herman , Gareth J . Bennett , Emir Augusto Vela , and Conor James Walsh . 2017 . The Soft Robotics Toolkit : Strategies for Overcoming Obstacles to the Wide Dissemination of Soft - Robotic Hardware . IEEE Robotics & Automation Magazine 24 , 1 ( March 2017 ) , 57 – 64 . https : / / doi . org / 10 . 1109 / MRA . 2016 . 2639067 [ 14 ] Evan Malone and Hod Lipson . 2007 . Fab @ Home : the personal desktop fabricator kit . Rapid Prototyping Journal 13 , 4 ( 2007 ) , 245 – 255 . [ 15 ] Maslow . 2019 . Maslow . https : / / www . maslowcnc . com / [ 16 ] Ankur M . Mehta , Joseph DelPreto , Kai Weng Wong , Scott Hamill , Hadas Kress - Gazit , and Daniela Rus . 2018 . Robot Creation from Functional Specifications . In Robotics Research , Antonio Bicchi and Wolfram Burgard ( Eds . ) . Vol . 3 . Springer International Publishing , Cham , 631 – 648 . https : / / doi . org / 10 . 1007 / 978 - 3 - 319 - 60916 - 4 _ 36 [ 17 ] Hyunjoo Oh , Jeeeun Kim , Cory Morales , Mark Gross , Michael Eisenberg , and Sherry Hsi . 2017 . FoldMecha : Exploratory Design and Engineering of Mechani - cal Papercraft . In Proceedings of the Tenth International Conference on Tangible , Embedded , and Embodied Interaction - TEI ’17 . ACM Press , Yokohama , Japan , 131 – 139 . https : / / doi . org / 10 . 1145 / 3024969 . 3024991 [ 18 ] OpenBuilds . 2019 . OpenBuilds . https : / / openbuilds . com / [ 19 ] Nadya Peek , James Coleman , Ilan Moyer , and Neil Gershenfeld . 2017 . Cardboard Machine Kit : Modules for the Rapid Prototyping of Rapid Prototyping Machines . In Proceedingsofthe2017CHIConferenceonHumanFactorsinComputingSystems ( CHI ’17 ) . ACM , New York , NY , USA , 3657 – 3668 . https : / / doi . org / 10 . 1145 / 3025453 . 3025491 [ 20 ] Huaishu Peng , François Guimbretière , James McCann , and Scott Hudson . 2016 . A 3D Printer for Interactive Electromagnetic Devices . In Proceedings of the 29th Annual Symposium on User Interface Software and Technology - UIST ’16 . ACM Press , Tokyo , Japan , 553 – 562 . https : / / doi . org / 10 . 1145 / 2984511 . 2984523 [ 21 ] Huaishu Peng , Rundong Wu , Steve Marschner , and François Guimbretière . 2016 . On - The - Fly Print : Incremental Printing While Modelling . In Proceedings of the 2016CHIConferenceonHumanFactorsinComputingSystems - CHI’16 . ACMPress , Santa Clara , California , USA , 887 – 896 . https : / / doi . org / 10 . 1145 / 2858036 . 2858106 [ 22 ] Rohit Ramesh , Richard Lin , Antonio Iannopollo , Alberto Sangiovanni - Vincentelli , BjörnHartmann , andPrabalDutta . 2017 . Turning coders into makers : thepromise of embedded design generation . In Proceedings of the 1st Annual ACM Symposium on Computational Fabrication - SCF ’17 . ACM Press , Cambridge , Massachusetts , 1 – 10 . https : / / doi . org / 10 . 1145 / 3083157 . 3083159 [ 23 ] Reprap . 2019 . RepRap . https : / / reprap . org / wiki / RepRap [ 24 ] Thijs Jan Roumen , Willi Müller , and Patrick Baudisch . 2018 . Grafter : Remixing 3D - PrintedMachines . In Proceedingsofthe2018CHIConferenceonHumanFactors in Computing Systems ( CHI ’18 ) . ACM , New York , NY , USA , 63 : 1 – 63 : 12 . https : / / doi . org / 10 . 1145 / 3173574 . 3173637 [ 25 ] Per Runeson and Martin Höst . 2009 . Guidelines for conducting and reporting case study research in software engineering . Empirical Software Engineering 14 , 2 ( April 2009 ) , 131 – 164 . https : / / doi . org / 10 . 1007 / s10664 - 008 - 9102 - 8 [ 26 ] Benjamin Saunders , Julius Sim , Tom Kingstone , Shula Baker , Jackie Waterfield , BernadetteBartlam , HeatherBurroughs , andClareJinks . 2018 . Saturationinqual - itativeresearch : exploringitsconceptualizationandoperationalization . Quality & Quantity 52 , 4 ( July2018 ) , 1893 – 1907 . https : / / doi . org / 10 . 1007 / s11135 - 017 - 0574 - 8 [ 27 ] Robert Scheffler , Sergej Koch , Gregor Wrobel , Matthias Pleßow , Christian Buse , and Bernd - Arno Behrens . 2016 . Modelling CAD Models - Method for the Model Driven Design of CAD Models for Deep Drawing Tools : . In Proceedings of the 4th International Conference on Model - Driven Engineering and Software Development . SCITEPRESS - Science and and Technology Publications , Rome , Italy , 377 – 383 . https : / / doi . org / 10 . 5220 / 0005799403770383 [ 28 ] Jagjit Singh Srai , Mukesh Kumar , Gary Graham , Wendy Phillips , James Tooze , Simon Ford , Paul Beecher , Baldev Raj , Mike Gregory , Manoj Kumar Tiwari , B . Ravi , Andy Neely , Ravi Shankar , Fiona Charnley , and Ashutosh Tiwari . 2016 . Distributed manufacturing : scope , challenges and opportunities . International Journal of Production Research 54 , 23 ( Dec . 2016 ) , 6917 – 6935 . https : / / doi . org / 10 . 1080 / 00207543 . 2016 . 1192302 [ 29 ] Alexander Teibrich , Stefanie Mueller , François Guimbretière , Robert Kovacs , Stefan Neubert , and Patrick Baudisch . 2015 . Patching Physical Objects . In Pro - ceedings of the 28th Annual ACM Symposium on User Interface Software & Tech - nology - UIST ’15 . ACM Press , Daegu , Kyungpook , Republic of Korea , 83 – 91 . https : / / doi . org / 10 . 1145 / 2807442 . 2807467 [ 30 ] Joshua Vasquez , Hannah Twigg - Smith , Jasper Tran O’Leary , and Nadya Peek . 2020 . Jubilee : An Extensible Machine for Multi - tool Fabrication . ( 2020 ) , 13 . [ 31 ] T . Vilbrandt , E . Malone , H . Lipson , and A . Pasko . 2008 . Universal desktop fabri - cation . In Heterogeneous Objects Modelling and Applications , Alexander Pasko , Valery Adzhiev , and Peter Comninos ( Eds . ) . Springer - Verlag , Berlin , Heidelberg , 259 – 284 . http : / / dl . acm . org / citation . cfm ? id = 1806158 . 1806169 [ 32 ] Guanyun Wang , Lining Yao , Wen Wang , Jifei Ou , Chin - Yi Cheng , and Hiroshi Ishii . 2016 . xPrint : A Modularized Liquid Printer for Smart Materials Deposition . In Proceedingsofthe2016CHIConferenceonHumanFactorsinComputingSystems - CHI ’16 . ACM Press , Santa Clara , California , USA , 5743 – 5752 . https : / / doi . org / 10 . 1145 / 2858036 . 2858281