Frame - Axis Model for Automatic Information Organizing and Spatial Navigation Yoshihiro Masuda , Yasuhiro Ishitobi , and Manabu Ueda Systems and Communications Lab . , Fuji Xerox KSP R & D Business Park Bldg . 3 - 2 - 1 Sakado , Takatsu - ku , Kawasaki - shi , 213 Japan phone : + 81 - 44 - 812 - 5140 , fax : + 81 - 44 - 812 - 8109 e - mail : { ymasuda , ishitobi , mueda } @ s5g . ksp . fujixerox . co . jp ABSTRACT In taxonomic reasoning tasks , such as scientific research or decision making , people gain insight and find new ideas through analysis of large numbers of factual data or ma - terial documents , which are generally disorganized and un - structured . Hypermedia technology provides effective mean - s of organizing and browsing information with such nature . However , for large amounts of information , the convention - al node - link model makes linking or browsing operations be complicated because their relationship have to be represented as binary relations . In this paper , we propose a hypermedia data model call Frame - Axis Model , which represents rela - tionship between information as N - ary relations on mapped space . Also , the automatic information organizing mecha - nism which is based on this data model and the browsing interface HyperCharrs which employ spatial layout are pro - vided . Finally , we show some browsing examples on our working prototype system , CastingNet . KEYWORDS : data model , automatic linking , spatial hyper - text , browsing , visualization 1 INTRODUCTION In scientific research fields , scientists gain insight and find new facts through analysis of data which are obtained from experiments or observations . As a typical example , the hu - man genome project is a worldwide effort to decipher the DNA structure , which consists of art estimated three billion nucleotides , and investigators are analyzing a large numbers of data toward a goal of creating genetic maps [ 11 ] . One of opemi ~ ~ ionto copy Wikout fee au or part of this materialis wmwcl provided rhat the copies arenot made or distributed for direct commercial advantsge , the ACM copyright notice and the titte of the publication and its date appear , and notice is given that copyright is by permission of the Association for Computing Machinery . To copy otherwise , or to republish , requires a fee and / or specific permission . ( @ 1994 ACM O - 89791 - 640 - 9194NCW $ . 3 . 50 the common feature that such scientific data possesses is that the schemata or common structures of data are gradually pro - vided as research results rather than provided in entirely in the beginning . Hence , it is considered that scientific database applications requires some incremental organizing methods for these unstructured data [ 41 ] . In addition , similar situations can be seen in our office work . We usually make decisions by arranging and analyzing vari - ous kinds of documents . But , in the instance where there is a proportionate increase in the number and types of documents , they are piled into disparate groups because we cannot decide on a set of categories which is most convenient for their access [ 23 ] . As a result , this makes it impossible for us to retrieve or browse for the required information at will . Although , the proliferation of personal computers and workstations have turned most office documents into electronic documen $ s , the situation has not drastically y changed . In this sense we need some tools which enable us to arrange and browse different kinds of documents as integrated information . ~ So far , hypermedia systems have been used as a’tool to meet the above requirements . However , as Halasz pointed out in his keynote talk [ 19 ] in HYPERTEXT’91 , the handling of large amounts of information is still considered to be an unavoidable issue for hypermedia systems . As a result of our investigation , we think that one of the ob - stacles , for handling large amounts of information in hyper - media systems is owed to the adoption of the node - link model as their base model . And based on this point of view , this paper propose a hypermedia data model which is designed for organizing large amounts of information automatically . And also we propose a browsing interface for the organized information . The rest of this paper is structured as follows . In the next section we give a brief summary of related work . In the subsequent section , we propose our hypermedia data mod - el , frame - axis model . In section 4 , we detail the automatic information organizing mechanism , and in section 5 , we ex - plain the browsing interface which employs spatial layout . In ECHT ’94 Proceedings 146 September 1994 section 6 , we show some application examples implemented with our working prototype system CczstingNeL The con - cluding section summarizes our work and gives some ideas for future work . 2 RELATED WORK In the hypermedia research field , we can observe various attempts for browsing large amounts of disorganized and un - structured information . In this section , we summarize these studies from two points of view : organizing and browsing . 2 . 1 Organizing large amounts of information One of the most remarkable advantages of hypermedia sys - tems in comparison with query - based database systems is that which enables users to browse information associative - ly . In general , browsing operations in hypermedia systems are accomplished by tracing links which are established in advance . Thus it should be required some methods for auto - matic linking or link management to browse large amounts of information . Text conversion approach : It is important to respect that large amounts of useful texts already exist in the rest world . In the Medicat Handbook [ 15 ] and the OED [ 32 ] , existing large linear text such aselectrical dictionaries or manuals are split into plurat nodes with natural language processing techniques , then come up with links and their anchors according to given rules . However , the links created with this approach are generally conventional ones because the rules can only extract predetermined common associative relations . Automatic linking approach : Automatic linking tech - nique is considered a particularly powerful method for organizing large amounts of information . For instance , [ 2 ] , [ 34 ] , [ 14 ] , and HieNet [ 7 ] introduce methods which come up with associative links according to textual sim - ilarities calculated with keywords frequency analysis . Also , CYBERMAP [ 17 ] and NEURODOC [ 1 ] intro - duce a method which maps nodes onto one or two di - mensional axes based on their textual similarities . These methods provide similarity - based automatic organizing , however , it is considered that effective browsing might require more than similarity relationship . Dynamic linking approach : For huge hypertext , mainte - nance of links is a troublesome task for users . In MI - CROCOSM [ 131 and [ 37 ] , ordinary link anchors are substituted with queries to databases . The main idea of these methods is that destination anchors are abstract - ed from actual position in nodes as queries to databases . This query - based approach also provides open operabil - ity and concurrent linking , however , it enforces users to specify complicated query statements for each destina - tion anchor . Aggregation Approach : As another approach for mainte - nance of large numbers of links , [ 20 ] and [ 5 ] introduce a method which automatically aggregates links into sev - eral sets with clustering methods . These aggregated links are treated as abstracted links , and this mechanism atlows users to navigate complicated large hypermedia networks from global viewpoints . Data model approach : We can observe various hyperme - dia data models which are designed to handle large amounts of information . These data models can be ckrs - sified as two approaches . First one is which introduces new elements to categorize nodes or links . The con - texts of Neptune [ 10 ] , the webs of Intermedia [ 40 ] , and the nested context model [ 6 ] come under this method . Second one is which extend the notion of links from bi - nary relations to N - ary relations . HyperSet [ 29 , 30 ] and Aquanet [ 24 ] come under this method . These data mod - els mainly focus on the improvement of representation ability . 2 . 2 Browsing interface for large hypertext To navigate in large hypermedia networks , users have to recognize not on ] y the current position in the network but also the contents of some nodes shown on a display . These issues are known as the disorientation problem and the cognitive overhead problem , pointed out by Conklin [ 8 ] . Spatial layout approach : To meet with the disorientation problem , NoteCards , gIBIS , Intermedia , and most ex - isting hypermedia systems introduce overviewing inter - faces which atlow users to recognize relationship be - tween nodes as spatial relationship on trees or network - s [ 40 ] . Other forms of spatial layout approach , such as SaTellite [ 31 ] and NEURODOC [ 1 ] provide views which represent similarities between nodes as points on two dimensional space . In addition , Aquanet [ 25 , 26 ] introduces an interface which represents N - ary relation - ship between objects with various patterns of spatial layout . Navigation guide approach : Guiding navigational paths is another way to cope with the disorientation problem . Guided Tours [ 39 ] is a early study of this approach , and which enables users to browse in a hypermedia network according to specified navigation paths . Another forms of navigation guiding , [ 3 ] controls navigation paths dy - namically by learning with neurat networks , and [ 18 ] decides navigation paths dynamically based on similar - ities between nodes and specified query forms . Hierarchical presentation approach : For the other prob - lem , or the cognitive overhead problem , we can observe ECHT ’94 Proceedings 147 September 1994 various attemptswith hierarchical presentation inter - faces . For instance , Fisheye Views [ 16 ] provides a gen - eralized viewing method which present the gazing point nearby in detail and the more remote regions in suc - cessively less detail . Also based on this method , [ 36 ] and [ 28 ] introduce browsing interfaces with hierarchi - cal representation of nested networks . In other forms of browsing interfaces , [ 9 ] introduce hierarchically classi - fied links with clustering , and CONCEPTORGANIZER [ 21 ] introduce chunk - based hierarchical link classifica - tion . And further , [ 38 ] and [ 12 ] introduce browsing interfaces in which hierarchical relationship between nodes are represented as inclusions relationship of win - dows . 3 FRAME - AXIS MODEL As a consequence of above surveys , we were able to gain the following insight on hypermedia research for organizing and browsing of large amounts of disorganized and unstructured information . 1 . 2 . 3 . Automatic linking in conventional node - link model is accomplished by finding anchors of links automatically . However , to find significant link anchors in texts is not so easy because it requires semantic analysis of their contexts . It is convinced that dynamic linking technology might improve the ability to maintain a large hypermedia net - work , however , it cannot make users free from trouble - some specifications of link anchors because each link anchor has to take the form of a query . In comparison with the states of a hypermedia network which users want to organize , links of the node - link model are considered too small for cognitive units . In other words , each link is anchored actual points on n - odes , however , more abstracted relations should be re - quired to represents large hypermedia networks . This is obvious because we can observe various attempts for link abstraction methods as shown in above section , Based on the above insights , we propose a hypermedia data model , Frame - Axis Model , which is designed to achieve the automatic organizing of large amounts of information . 3 . 1 Node - Link Model V . S . Frame - Axis Model Our proposed hypermedia data model , Franze - Axis Model , consists of two basic components : frames and axes . In this section , we give an explanation of these elements through a comparison with the conventional node - link model . Frames ECHT ’94 Proceedings The original idea of the conventional node - link model is to accomplish non - sequential accesses to fragments of texts associatively . Most of the ordinary hypermedia systems rep - resent each node as a form of card or document . On the other hands , we can observe some attempts to represent knowl - edge structure as a hypermedia network . For instance , [ 22 ] , MacWeb [ 27 ] , Aquanet [ 24 ] , and SEPIA [ 35 ] introduce mod - els which represent each node as a frame or an object , which is consists of one or more properties . Among these approaches , the frame - axis model takes later one approach , i . e . each fragment of information consists of properties . This is because by splitting each fragment of information into semantic units , or properties in advance , it requires no semantic analysis like natural language process - ing , thus it is convenient for organizing them . We call these fragments of information ~ rames , and they also possess the following features . Each frame consists of slots which represents properties of the frame . The structure of frame can be modified by each frame . Each slot consists of three fundamental elements : a slot name , a slot value , and a mapping type . In addition , each mapping type corresponds to the type of some axis with each other . Axes In the conventional node - link model , links mainly repre - sent association process of human brains as binary relation - s . However , most relationship between objects in our rest world can be represented as N - ary relations . For instance , time , degree , position , or category are criteria to recognize relationship between objects , and objects are recognized as if they are mapped into these criteria by themselves . In the frame - axis model , relationship between frames are represented as N - ary relations on various mapped spaces , axes , And automatic organizing of frames is accomplished by mapping onto these axes . In addition , axe ~ possess following features . l l l Each axis has a mapped space , and it maps frames onto one or more points on the space . Each axis has a mapping type . Each mapping type corresponds to a type of slot . Namely , the mapping type space is shared with slots and axes . Each axis has a frame mapping function which maps frames onto own mapped space . The mapping functions are applied to slots which has the same mapping type in a frame , and the mapping positions of the frames are calculated from the values of the slots . Figure 1 shows a conceptual comparison between the con - ventional node - link model and the frame - axis model . 148 September 1994 Node i - Automstio ‘m’ : . . n m mv 11 : : 181 II 111 1 , , , , 1 , , 1 , , , , , , , , , m ; . ii ii ii , , , , ; . ’ II Automatic q : : Axi ; 11 Mapping , , ‘m Node - Link Model Frame = Axis Model Figure 1 : Node - Link Model V . S . Frame - Axis Model 3 . 2 Definition In this section , we givea semi - formal definition of the frame - axis model . The Frame - Axis model can be represented as an septuple M = ( F’ , S , A , H , G , Q , 7’ ) , where H is a set of HyperCharm which is defined in section 5 . Frames F is a set of frames , and each frame ~ i consists of slots s’s , where sij e S . Each slot has its own name ntj , a value Vij , and a mapping type fij , g ~ : F - uk , where each mapped frame ~ i has to contain one or more slot whose mapping type is common to the type of axis t ~ . ( fi E f’ ) A ( ’ ? ? l [ ttipe ( si ~ ) = tk ] ) . 4 AUTOMATIC ORGANIZING As we described in the previous section , the frame - axis mod - el provides automatic information organizing mechanism which is accomplished by mapping frames onto axes . In this section , we explain how the mechanism organize information automatically from three points of views which corresponds to the elements of an axis : a mapped space , a mapping type , and a frame mapping function , Sij = ( ? l ~ j , ‘l ) jj , t ~ j ) , 4 . 1 Mapped Space where T is a set of mapping types , i . e . t ~ j c T , and in here we introduce the function type which returns the type of the slot , type : S - T , type ( s ; j ) = tij . Axes A is a set of axes , and each axis ak is denoted as a Kipel of a frame mapping function gk , a mapped space Wk , and a mapping type tk . ~ k = ( 9 / c , % , tk ? ) , where Uk E ! 2 , and gk C G . And a frame mapping funcXiOn g ~ maps frames onto a mapped space w ~ , A mapped space on which frames are mapped represents relationship between frames asN - ary relations . Each mapped space of an axis is implemented as one or more dimensional spaces , The following illustrates two classes of mapped spaces . Figure 2 shows an example of mapping onto these mapped spaces . Numerical Spaces A numerical space represents a continu - ous space such as date , time , Iatitudeflongitude , temperature , precedence , or similarity . Frames are mapped onto some of these spaces according to their values of slots which can be calculated and positioned at some points on the mapped space . As a consequence , these positioned points represent N - ary relationship between frames . In figure 2 , according to the value of the slot Dat e , the frames Act ion Item and Mail are mapped onto the mapped space of the axis Dat e which has the common mapping type DATE . In the same way , the frames are mapped onto the ECHT ’94 Proceedings 149 September 1994 Frames Action Item Mail Personal Data . Subject [ TEXt’1 Pmjecl Me $ tmg Subject [ TEXTI CastingNet : VO 1 Release Date [ DATE ] January l ? ? SS4 Date [ DATE ] February ~ . 1 994 Project [ CODENAMEI NexI Hprm’cd @ , Fmm [ MAIL . U ) DR ] CN _ coor @ n , atOr @ s5gksp Precedence [ DE471O ] I \ . , . ’ 3 To [ MAILADDRII all _ rsl @ . f @ , ksp fufk + rox \ . , \ Level [ DEG1OII 4 . . ; . , : . s - ~ : . . . . . 1 . , , . ~ ‘ . . ? . . . . . - . . . ~ , Contents WEM’1 ] % , , . . NOWC & & et VO1 ! s ‘ . , . , , . . : , . \ $ . . . . . . % . . av ? ! b ~ e lc $ . + 41RSL stufl - ’ . . . 5 . . . ” : . . . \ ‘ . . . . . , , . ” . . . . . . . . . . . . . . . . . . . , , , . . . . ; % . ‘ % , . : / ; . . - . . . , . . . . . . ” Axes [ t . ! ap + xngTyps ] Date [ DATE ] Precedence [ DEGIO ] Text - Similarity [ TEXT ] Project [ CODENAME ] Mail - Addre = [ MAILADDR ] : . . , , : . . . \ I \ \ : . : : . , ” , ’ : . : : ~ ~ . + . , y : : ; : ‘i : : ; , : : : ; \ , , , : : : : ~ : : : ; : : ; : : ~ t : . fi : : : ti ! : : : : : : : : : : . : : : : : : : : : : : : : : : : : : : : : . . : : . . . . . . . . . . . . . . : . V . . . . . J : . : . . . : . : : > < : : . . . . . . ! . . . . . . . . . . . . . . . . fl . . . . . . i . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , . . . . . . . . . . ’ . ” . ’ . ’ . . . : : : : Y : : : : : : : : : : : \ ; , , , . . , ) , I , = + n , 0 , 0 T 00 1 Figure 2 : Frames and Mapped Spaces mapped space of the axis Precedence according to the values of the slots Precedence and Level . Item Spacex An item space represents a scattered space such as person names , titles , organizations , addresses , places , or research fields . Frames are mapped onto some of these spaces according to their values of slots which can be calculated and corresponded to some keyword on the mapped space , As a consequence , these keywords represent N - my relationship between frames . In the figure 2 , according to the values of the slots Pro j ect , the frames Action Item and Personal Data are mapped onto the mapped space of the axis Project which has the common mappbtg type CODENAME . In the same way , the frames Mail and Personal Data are mapped onto the axis Mail - Address . 4 . 2 Mapping Type As illustrated in above figure 2 , a slot and its mapped axis has a common mapping type . Each mapping type represents a type of the slot value which is used for the calculation of the mapped points by their frame mapping function . The creation of a slot is based on a mapping type , and each frame mapping function of axes which have a common mapping type with the slot is invoked in the process of automatic organizing . In this sense , The mapping types play a role for keeping the consistency of mapping of frames . In here , we have to pay attention that the mapping types are NOT identical with the data types of mapped spaces . This is because that we have to take a numerical space which represents textual similarity into account . For example in figure 2 , according to the slots Subject and Cent ents , the frames are mapped onto the numerical space of the axis Text - S imi 1 a rit y which has the common mapping type TEXT . In addition , there are two kinds of mapping types : basic map - ping type , and derived mapping type . Each basic mapping type is a built - in type which corresponds to some data type or class . On the other hand , the derived mapping types are types which renamed some of the basic types . 4 . 3 Frame Mapping Function As we defined in the section 3 . 2 , each axis has a frame mapping function . E ~ ch frame mapping function calculates positions of frames on their mapped space . This mapping process is accomplished through two phases , i . e . jil ( ering and positioning . Filtering of Frames The first phase of the mapping is filtering of frames . Con - sidering a general axis such as time , so many frames are mapped onto it because many kinds of frames such as mail , news , action items , which contain slots relate to time . To meet this problem , each frame mapping function provides a ECHT ’94 Proceedings 150 September 1994 frame filtering mechanism . In current implementation , we introduced a mechanism which filters out frames according to the following criteria . l slot names l value range of slots l excepted frames l versions of frames This filtering mechanism enables us to filter frames under a condition such as “ the frames that have slots named Begi . n and End , and both type of slots are TIME , and their value ranges from 10 . 00 to 17 . 00 , and also contain slots named Subject and Action” . Positioning of Filtered Frames The second phase of the mapping is positioning of the fil - tered frames . This process calculates positions on which the filtered frames mapped . At first , it finds slots which is fil - tered with above filtering process and whose mapping type is identical to the one of the axis . Second , it calculates actual points on the mapped space according to the values c ] f the slots . For example in figure 2 , consider that the filtered frames are Act ion Item and Mai 1 , At first , the frame mapping function of the axis Dat e finds a slot which has the mapping type DATE for each frame , and it finds the slots Dat e as its results . Then it converts their slot values January 121994 and Februaty 221994 into GMT values such as 2906871146 and 290693667 which represents the positions of each frame on the mapped space . Invocation of aframe mapping function In our working prototype system CastingNet , the automatic information organizing mechanism we mentioned above is implemented in a single process . Thus , invocation of frame mapping functions have to be synchronized with the user events in order to keep the consistency of relations of whole frames and axes . Table 1 shows the relationship between user events , mapped frames , and activated axes . This single process method requires heavy computing load , thus we are now implementing a concurrent organizing method which is processed by a child process of the main process . ( see Section 6 ) Table 1 : User events and frame mapping Events Mapped Frame ( s ) Activated Axis ( es ) frame the created / deleted the axes which has the create / delete frame same mapping types with some of the slots of the frame slot the frame which the axis which has the create / delete has the the slot same mapping type with / modify the slot axis whole frames the created / modified create / modifv axis In the frame - axis model , each axis represents N - ary relation - ship between frames . Hence , to accomplish the navigational access on the model , it is required to provide two operations which enables us to , l select an axis on a frame l select a frame on an axis 5 . 1 User Interface Elements To provide the operations described above , browsing inter - face mechanism of the frame - axis model provides two user interface elements : frameviews and hypercharts . Frameviews Eachframeview is a visualized frame , and it takes the form of a window which lists slots ( figure 4 and 5 ) . In a frameview , users can add or delete slots at will without any definitions of their structure . By selecting a button which attached at left side of each slot , users can open related hypercharts which is built from axes on which the frame is mapped . Hypercharts Each hyperchart is a visualized axes , and it take the form of various kinds of charts ( figure 4 and 5 ) . Each hypcrcharts enables users to visualize one or more axes as a combined mapped space . Now we can denote a set of hypercharts H formally as a combination of mapped spaces , H = 2n 5 SPATIAL NAVIGATION In conventional node - link model , navigational access in a hy - permedia network is accomplished by tracing up their links . On the other hand , we now needs own browsing interface mechanism for the frame - axis model because no navigation - al link is provided in the model . Hypercharts have two aspects as a novel user interface tool . First is the one as a dynamic information visualizer such that provided in spreadsheet systems . According to the us - er’s operation such as add , delete , or modify of frames or slots , the points or labels plotted on hypercharts are updated automatically . Second is the one as a spatiat overview of a ECHT ’94 Proceedings 151 September 1994 hypermedia network such as provided in conventional hyper - media systems . By selecting a point or label on a hyperchart , corresponding frameview is opened . 5 . 2 Spatial Navigation While associative browsing is accomplished through a se - quence of link tracing operations in the conventional node - link model , associative browsing in the frame - axis model is accomplished by repetition of two navigating operations : overview andjiocus which corresponds the requirements we mentioned at the introduction of this section . ( figure 3 ) . Overview In the frame - axis model , the conventional link selecting op - eration is accomplished by a selecting of a button which corresponds to a slot . This also implies that each slot in the frame is treated as a link anchor . And the selecting oper - ation opens a hyperchart which visualizes axes , and in the hyperchart , a point or region which corresponds to the frame blinks and notifies users the position of the current frame , Through this operation , overview , users are able to overview the relationship between frames . Now , we can denote the navigating function overview as follows , overview : F * H . Focus On the overviewing hyperchart , each frame is plotted as a point or region , and users can select the one of which they want to get details . This selecting operation , focus , opens the frarneview which corresponds to the point or region they selected . Now , we can also denote the navigating function f Ocus as follows , focus : H w F . 5 . 3 Implicit Spatial Navigation In the navigating operation sequences , if we can describe a rule for focusing , or selecting a destination frame on hy - perchart , we can hide the hyperchart at browsing operations and make it possible to do a conventional frame - to - frame navigation . To accomplish above navigational access , invisible hyper - charts , implicit hypercharts are provided . The implicit hy - perchart is a sort of hyperchart , but it is not opened by the overview operation . Each implicit hyperchm enables users to specify a rule for focusing frames , which are opened au - tomatically . For example , users can specify a mle like “open the nearest frame from the current frame” , or “open the ear - liest schedule to have a meeting with the specified person X“ as programs . 6 PROTOTYPE SYSTEM We implemented the automatic information organizing mech - anism and spatial browsing interface we described above as a prototype hypermedia system CastingNet . This system is developed on Objectworks / Smallt . alk programming environ - ment . 6 . 1 Architectures In current implementation , the modules which compose Cast - ingNet are classified into two layers : hypermedia layer and presentation layer . The hypermedia layer provides a storage management mech - anism for whole frames and axes , and the automatic organiz - ing mechanism we mentioned in section 4 . 3 . The presentation layer provides basic user interfaces such as launcher , browser , frameviews , and hypercharts , and the special navigation mechanism we mentioned above section . The launcher is a main menu of the system . The browser enables users to manage whole frames and axes , and to create hypercharts by combining the axes . In addition , CastingNet have a mechanism which converts various kind of information into frames . In current imple - mentation , converters for mail , news , online databases are provided . This mechanism enables us to organize and browse heterogeneous information in a personat storage . 6 . 2 Applications CastingNet is a hypermedia application framework . In the following , we illustrate two application examples built on CastingNet . Scientific Database UI Figure 4 shows the status of the display after a sequence of browsing operations in the experimental tool for yeast classi - fication . Each frame , which consists of estimated 100 slots , contains experimental results of one yeast , These frames are mapped onto two axes , where both axes have numerical s - paces which represent similarity , but each mapping function differs in their calculation methods : the one is based on the clustering and the other IS based on the canonical analysis , In this example , the organized result can be overviewed through hyperchmts such that you can have views as a den - drogram , a two dimensional chart , or a three dimensional chart . Investigators can focus a frameview from a hyper - chart , and overview their relations from different points of view . Also through these browsing operations , they can cre - ate classification maps on the yeasts . Personal Information Management Tool ECHT ’94 Proceedings 152 September 1994 - u , P ? , , , . , , : , Frames : : : * : , : I : i , , , : ! J : , : # , . . ” - . . . . . . . . . . . . . . . . . . + , ’ ‘Ez ! ! El . : - - - - - - - - v , - , . , EEEl , ! , 4 , : ! , : , . , . overview ; ; $ & ! ! . . . . . , , , , . . : , : ! . , . , . . . . . / ; . filw , : l . . . . . : , : : , , , : , , , , , * : , . . . , . . . f Oc us / . . . . . . . . . . . . + OC u2 ; ~ ~ over view . . . . D = ‘J , ’ . , l : : : ‘‘ ; . “’“ , ’ , ‘ ! ! $ W’ , ; y ] ~ mi ~ ~ j \ ~ ~ ; pql ~ ~ ~ , , , , , . , , , , , , , , ~ \ $ W ; : : , % l : ; ; , ~ mg : - . , , , , , iy , , ~ * * * & . “ ! , , , . . . . yoc us ; ’ , , . , , . . . . , - , . : , , , , , , : , , , ; , : , , , : . . , , . . . , / , , . . . . . . . . . . . . . . . . . . focus , . . . . . . . . . . . . . . Hyper < harts . . . . . . . . . overview focus . . . . . . . . . . . . . . . . . . . . . . . . . H Time Figure3 : Spatial Navigation Process Figure5 shows the status of thedisplay after a sequence of browsing operations in the experimental tool for personal information management , Mail sheets , action items , news , profiles , schedule items and other created or retrieved data are stored as frames , and they are organized with pre - defined axes such as time , date , person , place , and topics . Following is an example scenario of spatiat navigation in figure 5 : 1 . 2 . 3 . 4 . 5 . By selecting the button of the slot date in the ac - tion item Schedule Meeting , a scheduler hyper - chart of the day 13 January 1994 is opened and corresponding label Schedule Meet i ng blinks in it . To consult the contents of the mail Monthly Forum , you select the label Mont hl y Forum on the sched - uler hyperchart , then the corresponding frameview Monthly Forum is Opened . In the frarneview , you can find the slot place . To get a information of the value of the slot Kanagawa Science Park , you select theslot , then the frameview about the place via implicit hyperchart is opened . In the frameview Kanagawa Science Park , if y - ou want to get the information about their location , you select the slot location , then the map hyper - chart Takufsu - Ku is opened , and the corresponding place blinks . If you want to know about the time table of the near - est station on the map hyperchart , you select the point of the station . Then the frarneview Mi z onokuchi Station is opened . ECHT ’94 Proceedings 7 CONCLUSIONS In taxonomic reasoning tasks , such as scientific research or decision making , people gain insight and find new ideas through analysis of large numbers of factual data or mate - rial documents . To support this sort of tasks , we proposed a novel hyper - media data model frame - axis model which is designed for automatic organizing of disorganized and unstructured infor - mation . The data model is consists of two kinds of elements , frames and axes , and each frame is mapped onto some axes according to its property values . And also we presented an associative browsing interface for the organized information . The mapped spaces of axes are combined and visualized as Hypercharts , and users can browse frames through them as - sociative y . We implemented the above mechanisms in a prototype sys - tem CastingNet , and we built some applications on it ex - perimentally . We came to the following conclusions as a result . l Based on the frame - axis model , heterogeneous informa - tion can be organized automatically without any restric - tion on their structures or schemata . . Browsing interface with spatial layout helps users to find new facts or insights intuitively . In addition we found the following additionat advantages of this data model which are not referred to in the above sections . l 153 In contrast to “hard” links which are accomplished by setting static link anchors , frame - axis model provides September 1994 Figure 4 : Application ( Scientific Database I / F ) “soft” links which are accomplished by dynamic map - ping onto axes . In this sense each frame in the frarne - axis model is independent from whole axes , and they can be shared between different users . l In contrast to the node - link model which creates one link object and two anchor objects per one binary relation , the frame - axis model creates only one axis per N - ary relations . This means the frame - axis model is superior to the node - link model in cost of the storage , Finally , we give some future research directions . Incremental DBMSS Existing Database Management Sys - tems enforce users to define static schemata . Howev - er , general taxonomic reasoning tasks need incremental ECHT ’94 Proceedings DBMSS such that have no schema definition and en - ables each frame to have their own flexible structures [ 41 ] . To handle large amounts of unstructured informat - ion as frames , we have to design a novel DBMS model which requires no schema definition . Effective frame mapping As we mentioned in the section 4 . 3 , frame mapping functions can be applied concur - rently . In the next system , the automatic organizing process will be implemented as a child process of the main process . Visualization of information To display and manipulate large amounts of information on hypercharts , visualiza - tion methods like 3D interfaces of the Information Vi - sualizer [ 33 ] or filtering / zooming interface of the Tool - grass and MagicLenses [ 4 ] are considered to be effec - tive . 154 September 1994 Figure 5 : Application ( Personal Information Management Tool ) 8 ACKNOWLEDGEMENTS This study was performed as a part of the project “Self Or - ganizing Information - Base Systems for Creative Research and Development” through the Special Coordination Fund - s of the Science and Technology Agency of the Jalpanese Government . We gratefully acknowledge Hideaki Sugawara and Satoru Miyazaki , Institute of Physical and Chemical Research , for their instructive advice on user interface design of tlhe sci - entific database application . We would also like to thank Tomomi Murata for his support for implementing the proto - type system . ECHT ’94 Proceedings References [ 1 ] [ 2 ] [ 3 ] 155 Alain , L . , and Claire F . Hypertext paradigm in the field of information retrieval : a neural approach ACM ECHT ’92 Conference Proceedings , pp . 112 - 121 , December 1992 . Bernstein , M . An Apprentice That Discovers Hypertext Links ECHT ’90 Conference Proceedings , pp . 212 - 223 , November 1990 . Biennier , F . , Guivarch , M , , and Pinon J . Browsing in Hyperdocuments with the Assistance of a neural Net - work ECHT ’90 Conference Proceedings , pp . 288 - 297 , November 1990 . September 1994 [ 4 ] [ 51 [ 6 ] [ 7 ] [ 8 ] [ 9 ] [ 10 ] [ 11 ] [ 12 ] [ 13 ] [ 14 ] [ 15 ] [ 16 ] [ 17 ] [ 18 ] Bier , E . A . , Stone , M . , Pier , K . , Buxton , W . , and DeRose , T . Toolgla . w and Magic Lenses : The See - Through In - terface ACM SIGGRAPH ’93 Conference Proceedings , pp . 73 - 80 , August 1993 . Botafogo , R . A . , and Shneiderman , B . Identifying Ag - gregates in Hypertext Structures ACM HYPERTEXT ’91 Proceedings , pp . 63 - 74 , December 1991 . Casanova , M . A . , Tucherman , L . , Lima , M . J . D . , Netto , J . L . R . , Rodriguez , N . , and Soares , L . F . G . The Nested Context Model for Hyperdocuments ACM HYPER - TEXT ’91 Proceedings , pp . 193 - 201 , December 1991 . Chang , D . T . HieNec A User - Centered Approach for Automatic Link Generation ACM HYPERTEXT ’93 Conference Proceedings , pp . 145 - 158 , November 1993 . Conklin , J . HypertexC An Introduction and Survey IEEE Computer , pp . 17 - 41 , September 1987 . Crouch , D . B . , Crouch , C . J . , and Andreas , G . The Use of Cluster Hierarchies in Hypertext Information RetrievaJ ACM HYPERTEXT ’89 Conference Proceedings , pp . 225 - 237 , November 1989 . Delisle , N . M . , and Shwartz , M . D . Contexts - A Parti - tioning Concept for Hypertext ACM Transactions on Office Information Systems 5 ( 2 ) , pp . 168 - 186 , April 1987 . Erickson , D . Hacking ‘fhe Genome SCIENTIFIC AMERICAN , pp . 128 - 137 , April 1992 . Feiner , S . Seeing the Forest for the Trees : Hierarchical Display of Hypertext Structure ACM 01S ’88 Confer - ence Proceedings , pp . 205 - 212 , 1988 . Fountain , A . M . , Hall , W . , Heath , I . , and Davis , H . C . MICROCOSM : An Open Model for Hypermedia With Dynamic Linking ECHT ’90 Conference Proceedings , pp . 298 - 311 , November 1990 . Frei , H . P . , and Stieger D . Making Use of Hypertext Links when Retrieving Information ACM ECHT’92 Conference Proceedings , pp . 102 - 111 , December 1993 Frisse , M . From Text to Hypertext BYTE , pp . 247 - 253 , October 1988 . Furnas , G . F . Generalized Fisheye Views ACM CHI ’86 Conference Proceedings , pp . 16 - 23 , April 1986 . GloorP . A . CYBERMAP Yet Another Way of Navigat - ing in Hyperspace ACM HYPERTEXT’91 Conference Proceedings , pp . 107 - 121 , December 1991 . Guinan , C . , and Smeaton , A . F . Information Retrieval from Hypertext Using Dynamically Planned Guided Tours ACM ECHT ’92 Conference Proceedings , pp . 122 - 130 , December 1992 . ECHT ’94 Proceedings [ 19 ] [ 20 ] [ 21 ] [ 22 ] [ 23 ] [ 24 ] [ 25 ] [ 26 ] [ 27 ] [ 28 ] [ 29 ] [ 30 ] [ 31 ] [ 32 ] 156 Halasz , F . G . Seven Issues : Revisited Slides from Keynote Talk on ACM HYPERTEXT ’91 Conference , December 1991 . Hara , Y . , Keller , A . M . and Wiederhold G . Implement - ing Hypertext Database Relationship through Aggrega - tions and Exceptions ACM HYPERTEXT ’91 Confer - ence Proceedings , pp . 75 - 90 , December 1991 . Heylighen , F . Design of a hypermedia interface trans - lating between associative and formal representations International Journal on Man - Machine Studies 35 , pp . 491 - 515 , 1991 . Kaindl , H . , and Snaprud , M . Hypertext and Structured Object Representation : A Unifying View ACM HY - PERTEXT ‘91 Proceedings , pp . 345 - 358 , December 1991 . Malone , T . W . How Do People Organize Their Desks ? Implications for the Design of Office Information Sys - tems ACM Transactions on Office Information Systems l ( l ) , January 1983 . Marshall , C . C , , Halasz , F . G . , Rogers , R , A . , Janssen Jr . , W . C . AquaneL a hypertext tool to hold your knowledge in place ACM HYPERTEXT’91 Proceedings , pp . 261 - 275 , December 1991 . Marshall , C . C . Two Years before the Mist Experiences with Aquanet ACM ECHT ’92 Conference Proceed - ings , pp . 53 - 62 , December 1992 . Marshall , Shipman III , F . M . Searching for the Missing Link : Discovering Implicit Structure in Spatial Hyper - text ACM HYPERTEXT ’93 Conference Proceedings , pp . 217 - 230 , November 1993 . Nanard , J . , Nanard . M . Should Anchors Be ~ ped Too ? An Experiment with MacWeb ACM HYPERTEXT ’93 Conference Proceedings , pp . 51 - 62 , November 1993 . Noik , E . Exploring Large Hyperdocuments : Fisheye Views of Nested Networks ACM HYPERTEXT ’93 Conference Proceedings , pp . 192 - 205 , November 1993 . Parunak , H . V . D . Don’t Link Me In : Set Based Hyper - media for Taxonomic Reasoning ACM HYPERTEXT ’91 Proceedings , pp . 233 - 242 , December 1991 . Parunak , H . V . D . Hypercubes Grow on Trees ( and Oth - er Observations from the Land of Hypersets ) ACM HYPERTEXT ’93 Proceedings , pp . 73 - 81 , November 1993 . Pintado , X . , and Tsichritzis , D . SaTellitti Hypermedia Navigation by Affinity ECHT ’90 Conference Proceed - ings , pp . 275 - 287 , November 1990 . Raymond , D . R . , and Tompa F . W . Hypertext and the New Oxford English Dictionary ACM HYPERTEXT ’87 Conference Proceedings , 1987 . September 1994 [ 331 Robertson , G . G . , Card , S . K . , and Mackinlay J . D . Infor - mation Visualization Using 3D Interactive Animation Communications of the ACM 36 ( 4 ) , pp . 56 - 71 , April 1993 . [ 341 Salton , G . , and AlIan , J . Selective Text Utilization and Text Traversal ACM HYPERTEXT ’93 Conference Proceedings , pp . 131 - 144 , November 1993 , [ 35 ] Streitz , N . SEPIA : A Cooperative Hypermedia Author - ing Environment ACM ECHT ’92 Conference Proceed - ings , pp . 11 - 22 , December 1992 . [ 361 Tochtermann , K . , and Dittrich G . Fishing for C ] ktrity in Hyperdocuments with Enhanced Fisheye - Views ACM ECHT ’92 Conference Proceedings , pp . 212 - 221 , De - cember 1992 . [ 37 ] Tompa , F . W . , Blake G . E . , and Raymond , D . It . Hy - pertext by Link - Resolving Components ACM HY - PERTEXT ’93 Conference Proceedings , pp . 118 - 130 , November 1993 . [ 381 Travers , M . A Visual Representation for Knowledge Structures ACM HYPERTEXT ’89 Conference Pro - ceedings , November 1989 . [ 39 ] Trigg , R . H . Guided Tours and Tabletops : Tc ) ols for Communicating in a Hypertext Environment ACM Transactions on Office Information Systems 6 ( 4 ) , pp . 398 - 414 , October 1988 . [ 40 ] Utting , K . , and Yankelovich , N . Context and ( Menta - tion in Hypermedia Networks ACM Transactions on Office Information Systems 7 ( l ) , pp . 58 - 83 , Jhmuary 1989 . [ 41 ] Zdonik , S . B . Incremental Database Systems : Data - bases from the Ground Up ACM SIGMOD ’93 Con - ference Proceedings , pp . 408 - 412 , June 1993 . ECHT ’94 Proceedings 157 September 1994