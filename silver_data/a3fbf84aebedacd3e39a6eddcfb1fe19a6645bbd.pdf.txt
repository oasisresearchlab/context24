MILANO , NOVEMBER 30 - DECEMBER 4 , 1992 11 SEPIA : A Cooperative Hypermedia Authoring Environment Norbert Streitz , Jorg Haake . Jorg Hannemann , Andreas Lemke , Wolfgang Schuler , Helge Schtitt , Manfred Thuring Integrated Publication and Information Systems Institute ( IPSI ) Gesellschaft fur Mathematik und Datenverarbeitung ( GMD ) Dolivostr . 15 , D – 6100 Darmstadt , Germany , e – mail : streitz @ darmstadt . gmd . de Abstract In this paper , we report about the designl development , and implementation of the SEPIA cooperative hyper - media authoring environment . It provides results on the following aspects of SEPIA : persistent and shared data storage , hypermedia data model with composites , so - phisticated and comprehensive authoring functionality , support for anew rhetoric and for cooperative work . We start by identifying the challenge of hypermedia author - ing and production which serves asthe driving force for our development . Using interacting problem spaces as the vehicle for modelling the dynamic aspects of author - ing , we arrive at a set of requirements answered by the concept of “activity spaces” . The design of coherent hy - perdocuments is facilitated by our “construction kit” . Furthermore , we describe the extensions and modifica - tions necessary to suppok multiple authors with the cooperative version of SEPIA . The central issue of the paper is the system architecture and its implementation . We describe the basis for access to shared hyperdocu - ments , the activity space browsers , the integration of multimedia functionality ( audio , graphics , pictures ) , and the integration of a video conferencing system . 1 Introduction In his “Seven Issues : Revisited” , Halasz ( 1991 ) men - tions a ‘broader vision of what constitutes the world of hypermedia’ . He proposes a five - level system architec - ture and distinguishes : data storage substrate , data mod - els , navigational facilities , applications , issues of si - tuated use . Most of these aspects are treated in the context of the design , development , and implementa - Permission to copy without fee all or part of this material is granted provided that copies are not made or distributed for direct commercial advantage , the ACM copyright no - tice and the title of the publication and its date appear , and notice is given that copying is by permission of the Association for Computing Machinery . To copy otherwise , or to republish , requires a fee and / or specific permission . @ 992 ACM O - 89791 - 547 - X / 92 / 0011 / 0011 / $ 1 . 50 tion of the SEPIA cooperative hypermedia authoring environment . In this paper , we will report about this on - going research resulting in a hypermedia system which addresses four of these five levels . It provides results on persistent and shared data storage , hypermedia data model with composites , sophisticated and comprehen - sive authoring functionality at the application level , support for a new rhetoric and for cooperative work at the situated use level . The idea of SEPIA ( Structured Elicitation and Proces - sing of Ideas for Authoring ) and its basic design prin - ciples were first described in Streitz et al . ( 1989 ) . We be - lieve that the point of view that authors need a different and specialized support is still or even more valid than three years ago . But we also learned the lesson that one cannot develop authoring tools without being aware of what a presentation environment requires . This is re - flected in our R & D strategy which addresses the cogni - tive processes , the product , and the social aspects of the authoring activity . Figure 1 shows the relationship of the activity under investigation , the theoretical basis , and the resulting components of SEPIA . Paying atten - tion to the process aspect requires to develop and refine a model of the cognitive processes of writing and to tkmsform these results into requirements , as e . g . in our activity space concept . Looking at hyperdocuments as a product with features of a new rhetoric ( Thihing et al . , 199 1 ) results in requirements for a corresponding func - tionality , as e . g . our construction kit in the rhetorical space . To get valid requirements , we built a large hyper - document in a separate reading environment testing our assumptions about anew rhetoric for hypermedia ( Han - nemann et al . , 1992 ) . Considering that most large and complex documents are prepared by a team , social cooperation models had tO be defined , and SEPIA had to be extended from a single - author to a multiple - att ~ or environment by providing corresponding cooperatiorf modes . Thus ; detailed knowledge about the process , the product , and the social situation played equally impor - tant roles in the development of our user - oriented and task - driven authoring environment . 12 ACM ECHT CONFERENCE 4uthoring Activity Iz = = = = l EEEl - - c Social Model of Cooperation > - Figure 1 : Research and development strategy for SEPIA , 2 The Challenge of Hypermedia Authoring Readers as well as authors have to struggle with a vari - ety of problems arising from the net - like character of hypertext . The reader of a hyperdocument is typically confronted with two difficulties . The first one is known asthe navi - gation problem : Readers often “get lost in hyperspace” ( Conklin , 1987 ) . Most of the research on reading hyper - text has solely concentrated on the navigation problem thus overlooking asecond difficulty : Many readers have trouble to comprehend ahyperdocument , i . e . , they often fail to grasp its overall structure or to understand the se - mantics of links . Disorientation and deficient compre - hension probably have the same cause : readers are im - peded in forming a coherent mental representation of the document . As a consequence , more and more read - ers complain about the low quality of hyperdocuments . To create hyperdocuments of high quality , the author must be aware of his readers ~ problems and view them asproblems caused by him – at least to a certain degree . Especially , he is responsible for designing hypertext structures and presentation formats which increase the coherence of his document and support efficient naviga - tion . But this is not an easy task . In contrast to writers of linear documents , authors of hyperdocuments have no guidelines telling them what their product should look like . Many rhetorical decisions must be made with - out the security of widely accepted conventions . Since these decisions entail activities supplementary to the processes of writing a linear text , such activities are often regarded as cognitive overhead ( Conklin , 1987 ) . The lack of rhetorical guidelines and cognitive overhead complicates the authoring of hyperdocuments and con - tributes to their low quality . To overcome this unsatis - factory state , the developers of hypertext systems must be more aware of reader - and author - specific problems and the construction of writing tools must be based on a sound theoretical foundation . Applying the basic prin - ciple of cognitive compatibility ( Streitz , 1987 ) , we have translated this insight into the requirement that author - ing systems which are intended to give appropriate sup - port must be cognitively compatible to authoring activi - ties ( Streitz , et al . , 1989 ) . 2 . 1 A Cognitive Framework : Authoring as Design Problem Solving Based on an analysis of the cognitive processes of writ - ing and the features of the authoring situation , we have characterized writing as a design activity ( Hannemann et al . , 1990 ) . The interdependencies of extensive plan - ning , production and revision activities are characteris - tic for the writing process and lead to both , an external product – the text – and an internal product – a new knowledge structure . Just asreaders may find it difficult to explore the hyperspace , authors find it difficult to ex - plore the complex design space . Helping an author ‘traveling’ through this space , the development of an authoring environment must rely on three main features of every design process : Design is a complex problem solving process , which consists of different subproblems . These problems are solved by specific activities which are opportunistic , i . e . , they strongly interact and build on each others’ results . Design is the construction of an artfact which has to fulfil specific criteria and for which the designer needs adequate building blocks to compose the ar - tifact . Design usually is a social process that involves a group of individuals . Therefore , facilities which support cooperation should be incorporated into an authoring environment . Now , we describe the implications of these aspects and derive requirements for the development of SEPIA , MILANO , NOVEMBER 30 - DECEMBER 4 , 1992 13 2 . 2 Supporting the Design Process : Activity Spaces for Hypermedia Authoring Using results of writing research , we have identified three closely related subproblems which an author must solve to produce a document : the content problem , the rhetorical problem , and the planning problem . Accord - ing to Newell ( 1980 ) , the mental representation of these three problems can be described in terms of separate but interacting problem spaces formed by different constraints , design objects and operations in which dif - ferent knowledge sources are brought to bear . Applying the principle of ‘cognitive compatibility’ , we use this decomposition of the design space into subspaces as a basis for dedicated requirements of components of the authoring environment . These ( cognitive ) problem spaces are “matched” in the SEPIA system by corre - sponding activity spaces . Each activity space provides specific design objects and operations appropriate to fa - cilitate the author’s activities when working on the above subproblems : + the content space , + the rhetorical space , and + the planning space . Since argumentation is a crucial cognitive activity which plays an important role in writing for alarge num - ber of document types , we supplemented these three spaces by a fourth space called + argumentation space . To support the construction of artijacts SEPIA pro - vides a special ‘construction kit’ with is integrated in the rhetorical space ( for more details see Thuring et al . , 1991 ) ! 2 . 3 Supporting the Social Process : From Single to Multiple Authors As stated before , amain feature of the authoring process is that it involves in many cases more than one person . The design of SEPIA has to reflect this by providing support for the cooperation of authors working in groups . This involves the following activities . First of all , authors access and modify shared hyperdo - cuments concurrently . The environment should allow a maximum of concurrent activities by the authors when - ever they work on different parts of the document . Au - thors working on the same part of the document should be prevented from accidentally destroying each other’s work . Group authoring occurs indifferent modes of col - laboration that we label : individual , “loosely - coupled , and tightly - coupled work . The modes differ in the level of awareness each author has of the activities of the coauthors . In individual work , a single author manipu - lates a task - specific cluster of nodes and links . Even though the author works individually , there is a need to collaborate with the coauthors asynchronously , for instance , through an annotation facility . In loosely - coupled work , several coauthors working on the same subtaskmanipulate the same cluster . In this mode , they need to be aw ~ e of each others presence and activities . In tightly - coupled work , authors cooperate and coordi - nate their work in synchronous conference - like “meet - ings . ” In this mode , authors should be provided with a WYSIWIS – functionality ( WYSIWIS – What You SeeIs What I See ) and additional channels for meta - commu - nication . Cooperative writing proceeds by shifting be - tween these three collaboration modes . Due to the op - portunistic nature of cooperative writing , one cannot foresee the sequence of the collaboration modes . There - fore , smooth transitions between the modes must be sup - ported . 2 . 4 Summary of Requirements To support both individual and cooperative writing of hypermedia documents , SEPIA should therefore meet the following requirements . It should ( Rl ) support activity spaces for hypermedia author - ing , i . e . – provide task - specific objects and operations , – provide views on hyperdocument structure ( network level ) and content ( node level ) , – provide a cognitively compatible user - inter - face , — support exchange and cross - referencing of ob - jects across activity spaces , – provide a hypermedia data model which is tai - lorable to activity spaces and tasks , — provide persistent storage for structure , con - . t , and view information , — suppwt multimedia data ( text , sound , voice , graphics , pictures , etc . ) . ( R2 ) support versioning of hyperdocuments . ( R3 ) support distributed authoring of’ hyperdocu - ments including access to a shared hyperdocu - ment database . ( R4 ) support shared workspaces at the network and the node level . These — are shared browsers for activity spaces , resp . composite nodes in general . — support different collaborative modes ( individ - ual , loosely coupled , tightly coupled ) , – allow for smooth transition between modes . ( R5 ) support additional channels for meta - comrnu - nication ( audio , video conferencing ) . 14 ACM ECHT CONFERENCE 3 Functionality and User - Interface Within each activity space there are two levels of opera - tions : the network level ( navigation in the graphical browser and actively editing the network ) and the node level ( reading and editing content ) . 3 . 1 Authoring at the Network Level 3 . 1 . 1 Activity Space Functionality Figure 2 shows a screendump of open activity space browsers . They were opened by clicking on their initials ( P , C , A , R ) in the ‘launcher’ of the ‘project’ “Telecoop” . Users can browse in each space by activating nodes and links and scrolling if the current window does not con - tain all objects . A ‘roaming box’ ( upper left corner ) shows an actively manipulable presentation of the whole space ( resp . composite node ) . Each space pro - vides space - specific functionality ( typed nodes , links , operations ) available for every author independent from his cooperative work mode . Figure 2 : User - Interface of SEPIA The design objects and operations of the content space are dedicated to facilitate the development of a domain model . For this purpose , SEPIA provides the structuring facility of hypertext to support idea dumping , their grouping in topic - related clusters by composite nodes and connecting them via typed links , This can also in - volve access to background material either from internal ( e . g . , previous documents ) or external sources ( e . g . , querying a database ) . In the rhetorical space , the author creates the reader - oriented , final document . This final product can be both a conventional , linear text or a hyperdocument , formed by a typical network of nodes and links . Both document types constitute a scale ranging from strictly linear to strictly non - linear documents . Notice that hyperdocu - ments can vary in the degree of their linearity between these two endpoints . Nevertheless , they all should satis - fy one major requirement In order to support compre - hension and navigation on behalf of the readers , they must appear as coherent entities . Therefore , the rhetori - cal space provides a special ‘construction kit’ based on the concept of coherence consisting of design objects MILANO , NOVEMBER 30 - DECEMBER 4 , 1992 15 that are explicitly tailored to the requirements of design - ing artifacts ( Thuring et al . , 1991 ) . In the planning space , an author has the opportunity to externalize his writing plans , resp . goals , to construct is - sues to be concerned within the document , and to estab - lish an agenda for the authoring activity . Consequently , this space serves asameta space for coordinating the ac - tivities in the other three spaces and for controlling the progress of the design process . For the development of an issue structure , SEPIA pro - vides a set of dedicated nodes and links . . We use a modi - fication of the IBIS method ( Kunz & Rittel , 1970 ) by ex - tending the issue concept and introducing a new principle for linking issues ( Schuler & Smith , 1990 ) . In addition , the planning space is linked tightly to the argu - mentation space . ‘Positions’ which are formulated as ‘answers’ to issues in the planning space are trans - formed and recreated as ‘claims’ in the argumentation space prompting the author for providing supporting ar - guments ( example in fig . 2 : ‘Horizontal distribution’ ) . The argumentation space supports the development of an argumentative structure by providing appropriate de - sign objects and operations based on our extension of the argumentation schema developed by Toulmin ( 1959 ) . Using the argumentation space , the author can elaborate an argumentation by generating support or ob - jections on different levels , by formulating contradic - tions and by constructing argumentative chains ( for de - tails see Streitz et al . , 1989 ) . When ‘traveling through activity spaces’ , the author does not need to follow a predetermined route . At every point in the authoring process , he can decide which sub - space to use next . To support the high flexibility for in - teraction and smooth transformation of knowledge be - tween the activity spaces , SEPIA allows automatic transfer of design objects between specified spaces , their reuse , and the indication and control of references between activity spaces . 3 . 1 . 2 Multiple Authors Figure3 shows the user - interface of an author who is in different composites in different cooperation modes . Figure 3 : User - Interface of cooperative SEPIA 16 ACM ECHT CONFERENCE When several coauthors wofk on the same task ( i . e . , each of them has an active browser on the corresponding composite node ) , the respective browsers initially are in loosely coupled mode ( Planning space in fig . 3 ) . Au - thors are made aware of each other via ( 1 ) a list of all concurrent users displayed in the resp . browsers ( e . g . Schuler , Haake ) ( 2 ) highlighting of objects locked by other users , and ( 3 ) a relaxed WYSIWIS view . Actions affecting the view of the node are private , but manipula - tions of objects in the node become visible immediately to all other browsers if they affect the currently visible area . Locking at the data base level is used to prevent coauthors from simultaneously modifying the same oQ - ject . In tightly coupled mode , the coupled browsers display aWYSIWIS - view on the composite node’s content . For an example see the Content Space in figure 3 showing two tightly’ coupled users ( Schuler , Haake ) and one additional loosely coupled user ( Hannemann ) . In addi - tion to the functionality of the loosely coupled mode , scrolling and resizing events are immediately broadcast to all tightly coupled browsers . Awareness of the coauthors’ activities is a prerequisite for smooth adhoc transitions from one mode of collabo - ration to another . Currently , the transition from individ - ual work to loosely - coupled work is triggered automati - cally when a second author opens a composite node already “occupied” by the first author . This is indicated by a “door bell” sound on both workstations and the change of the user list . Being in loosely - coupled mode , authors might want to join for a tightly - coupled session . To start a tightly - coupled session , one coauthor selects all or a subset of those coauthors currently in the same node and invites them to participate in the session . The system asks each of them to , confirm . The browsers of those coauthors who confirmed are shifted into tightly - coupled mode . Authors can exit a tightly - toppled ses - sion either by closing the composite node or by retur - ningto loosely - coupled mode ( for more details seeHaake & Wilson , 1992 ) . 3 . 2 Node Level Beyond the structural aspects at the network level , hy - perdocuments are very much characterized by the type of media which are used . All atomic ( content ) nodes carry multimedia information including text , graphics , pictures , and sound . They can alsobe annotated by mul - timedia nodes . Currently , we are working on the integra - tion of digital video asthe content of a node . This use of multimedia has to be distinguished from using it for communication purposes as , e . g . , in audio and video conferencing systems . Cooperative use of hypermedia requires joint viewing and editing of the content of a node . Currently , we have integrated WSCRAWL for this purpose . It is a group - ware , color , pixel - oriented , shared drawing tool ( Lemke et al . , 1992 ) which is used for displaying and editing the graphics and picture content of nodes ( seethe picture of the “Model of the governmental area” dis - played for Schuler and Haake in fig . 3 ) . Each drawing action is immediately visible on all oonnected displays . Users can import arbitrary information from their screens ( even outside WSCRAWL or SEPIA ) using the ‘SuperSelect’ facility and show it to everybody current - ly sharing the view in WSCRAWL . 3 . 3 Mets - Communication Channels Having shared browsers is only one way of supporting synchronous remote cooperation . As indicated by the ‘interactive communication model’ in CoLab ( Tatar et al . , 199 1 ) , additional communication channels are re - quired . SEPIA provides a digital audio channel for au - dio - only conferencing as well as an analog audio / video conferencing device enabling currently two – soon up to four – coauthors to see and talk to each other ( see Col - laboration menu in fig . 3 ) . In addition , SEPIA supports gesturing by providing concurrent telepointing for each tightly coupled user ( e . g . Haake ) at the network level and within WSCRAWL at the node level . Each tele - printer displays the name of its user . Furthermore WSCRAWL serves as a common scratch space for coauthors in tightly coupled sessions . Groups of authors can take meetings notes which are available immediate - ly to any group member and which can be attached to the hyperdocument if desired . 4 System Architecture and Implementation First , we descfibe the single author system before we discuss the implementation of the cooperative system . 4 . 1 The Single - Author System In order to meet the requirements R1 and R2 , we chose the architecture shown in figure 4 which we discuss in a bottom - up fashion . We distinguish between an application module ( SE - PIA’s activity spaces ) and an object management mod - ule . In the latter , the hypeklocument data ( nodes , links , and composites , together with their attributes ) are han - dled by the hypermedia engine HyperBase ( Schutt & Streitz , 1990 ) which provides a persistent storage and retrieval mechanism for hyperdocuments . These are stored in a hyperdocument database . HyperBase was extended to CHS ( Cooperative Hypermedia Server , cf . section 4 . 2 ) . MILANO , NOVEMBER 30 - DECEMBER 4 , 1992 17 Al Figure 4 : System architecture of SEPIA for single authors To support versioning ( R2 ) we are currently integrating CoVer , a contextual version server which provides basic versioning concepts to the activity space browsers . The distinguishing feature of CoVer is that it not only main - tains versions of individual objects but it also maintains the task context in which versions are created . See Haake ( 1992 ) for details . All hypermedia objects are implemented asrefinements of a generic data model which was specified using the SFKfiame system developed at IPSI ( Fischer & Rostek , 1992 ) . A frame - based approach is well suited for the modelling of typed hypermedia structures because it al - lows the declarative specification of constraints which can be checked at runtime ( e . g . , validity of link sources and destinations ) , it is easily extendible ( tailorability ) , and it supports transactions within the authoring envi - ronment : Our generic data model combines hypertext constructs with object - oriented frame - based representations simi - lar to Aquanet ( Marshall et al , , 1991 ) or MacWeb ( Na - narcl & Nanard , 1991 ) . All its entities are represented as frame objects with single inheritance . Their named and wpedslots carry content , structure , and system informat - ion , as well as attributes . The basic data model objects are typed nodes and links , where the types are realized as frame classes . The content slot of the nodes contains the hypermedia’s primitive data types ( e . g . text , image , sound ) . Links are also typed first - class objects . They represent relationships between SEPIA objects . Their type definition includes their constraint information . Source and destination objects of a link are link anchor objects which are associated to the basic objects of the link relation . Anchors are conceived as logical and not geometrical entities bound to aportion of text or picture . The application interface defines the mapping of this data model ( see fig . 5 ) to the data model of HyperBase . SEPIA’s basic structuring means are composite nodes which contain a partially ordered set of basic objects ( nodes and links ) . Composite nodes are used to repre - sent subgraphs of the hypermedia network . Activity spaces and folders used in an activity space are imple - mented ascomposite nodes . Each activity space uses an application - dependent subset of the node and link types . ActiviQ space browsers provide activity - specific views on the hyperdocument . These views provide access to task - specific objects and operations . Activity space browsers can exchange hypermedia objects or can create reference links to objects of other activity spaces . In a hypermedia environment it is important to support persistent view information because structuring the lay - out of a hypermedia network is an additional important feature for authors . For every data object ( node , link , composite node ) to be displayed in an activity space browser SEPIA uses a special persistent container object which contains its view information . Thus , all display information ( e . g . position , icon , style , size in a graphical net browser ) of a data object to be shown in abrowser is stored in a spe - cial container object which is typed according to the data object . As a result , one data object can be connected with different container objects and therefore be dis - played differently in different contexts via different container objects . Example : A ‘position’ in the planning space can be displayed asa ‘claim’ in the argumentation space . 4 . 2 The Multi - Author System In order to meet the requirements for cooperative au - thoring ( R3 - R5 ) , we extended the architecture as fol - lows ( cf . figure 6 ) . Since the hypermedia server CHS was built on top of a multi - user DBMS from the very beginning , we allow shared access to hypermedia documents . CHS exploits the transaction management facilities of the underlying database system for concurrency control and recovery . It captures deadlock and livelock situations and ensures that the hyperdocument database always is in a consis - 18 ACM ECHT CONFERENCE Node Liti Link Anchor ConLiner Atomic Node Composite Node unidkectional bidirectional Node Container Link Container Figure 5 : SEPIA Data Model Hierarchy Basic data objects are shown in normal letters , view objects in italic , tent state . The adopted client - server architecture en - ablesmultiple clientsto ccessthe samedatabase server ? in a distributed computing environment ( R3 ) . In order to support collaboration , CHS maintains a iist of users which are currently logged into the system . The data model of CHS has been extended by locks which can be assigned to objects . The application inte ~ ace now not only defines a mapping from the clients’ data model to the data model of CHS , but it also defines policies for transferring data between a client and the shared data - base ( more details are found in Schiitt & Haake , 1993 ) . 4 . 2 . 1 Shared Workspaces at the Network Leve [ Shared workspaces ( R4 ) have been realized through ap - plication interfaces and browsers which exchange up - date information . In SEPIA , all changes are immediate - ly stored to the shared database . In addition to this , change notifications are broadcast among SEPIA cli - ents in two ways : First , the application inte ~ ace broadcasts change notifi - cations of hypermedia objects stored in the database to ensure that all clients use the same state of the shared ob - jects , This feature is used to realize the loosely coupled mode of activity space browsers . A broadcast server is connected to all SEPIA clients which broadcasts change notifications among the clients . Every SEPIA client in - cludes a broadcast listener process which waits for change notifications from the broadcast server . Second , activity space browsers which are in tightly coupled mode communicate directly with each other . They exchange messages synchronizing scrolling , re - sizing , and telepointing . These messages are received by a local communication handler which is associated with each browser , Each browser has a session object attached to it which keeps track of cooperation modes and current users . 4 . 2 . 2 Shared Workspaces at the Node Level Sharing of information is also available at the node lev - el . In SEPIA , we use the WSCRAWL shared drawing tool for that purpose . Opening a node with graphical contents starts WSCRAWL which provides an arbitrary number of authors with a shared whiteboard every au - thor can write on . WSCRAWL uses the X window server to synchronize event handling and to exchange data among participating authors . When WSCRAWL is called from a browser which is in tightly coupled mode , it is also started in tightly coupled mode , 4 . 2 . 3 Additional Communication Channels In order to provide additional communication channels ( R5 ) , we are following two technical routes : analog and digital . For digital audio , we use the Netfone software ( Walker 199 1 ) to automatically set up a bidirectional communication line – over the ethernet – among two tightly coupled users in a session . There are appropriate mike and speakerprocesses installed at the beginning of a tightly coupled session at each workstation , which send and receive audio packets to or from the remote partners . Only one tightly coupled session at a time can use the audio communication facility due to the limited mike and speaker resources . When finishing a tightly coupled session the corresponding audio processes are automatically shut down , On the other hand , we integrated avideo conference sys - tem installed at IPSI into the cooperative SEPIA clients . Each SEPIA user can ask the video router to provide a bidirectional analog video and audio connection be - tween him / her and aremote partner . Currently , this fea - ture is limited to connections between two people at a time . This facility will be extended by using across split video switch which allows four people to interact and see each other through the video device . 4 . 3 Implementation Details The cooperative SEPIA clients are implemented in Smalltalk - 80 , Release 4 . 0 . 2 , on SUN Spare - 2 worksta - tions running SUN OS 4 . 1 . 2 Unix and the OpenWin - dows 3 , 0 window system . CHS is implemented in C on top of the relational DBMS Sybase . The audio commu - nication feature uses the Netfone software ( release 1 ) written in C . The video server and WSCRAWL are im - plemented in C . WSCRAWL uses an X server to broad - cast jnforrnation . InterProcess communication is imple - mented using standard UNIX sockets . MILANO , NOVEMBER 30 - DECEMBER 4 , 1992 19 , Workstation n ——— , I I SEPIA Client n , ’11 ~ 1 Video Channel ——— , . —J — Workstation 1 Video Channel 1 I 1 j mallet —— — Video Router v’ Unix Socket Mechanism I Broadcast Server I I u Workstation I Unix Socket Mechanism I X Window Server Workstation Figure 6 : System Architecture for Cooperative SEPIA Shaded areas represent components which already exist in the SEPIA system for single authors . The communication handler and the mike / speaker processes are represented as dotted lines because they are created on demand only . 5 Conclusions and Future Work We now discuss the innovative aspects of SEPIA on the following three dimensions of a design process and compare it with other approaches having similar goals : 1 . 2 . 3 . User - oriented and task - driven system design re - sulting in support for different subtasks of the au - thoring activity Support for the special requirements of hyperdo - cument production Support different modes of cooperating authors 5 . 1 Dedicated Support for Different Subtasks of the Authoring Activity With respect to the first dimension , we would like to state that there are only few attempts to address the prob - lem of dedicated support for authoring . Most systems focus primarily on providing a ~ resentation and reading environment . Similar to our approach – in terms of cog - nitive modelling – is the development of the Writing En - vironment ( WE ) ( Smith et al . , 1987 ) . It supports the cre - ation of a network of ideas ( network mode ) to be transformed in a hierarchical document structure dis - played and edited in a linear fashion . Only the network 20 ACM ECHT CONFERENCE mode exhibits anode - link structure but does not offer different types of nodes and links . The final document is a linear document – not a hyperdocument . WE does not support multimedia components nor collaborative writing . This comparison would be incomplete without men - tioning systems for argumentation support : gIBIS ( Conklin & Begeman , 1988 ) , PHIDIAS ( McCall et al . , 1990 ) , EUCLID ( Smolensky et al . , 1987 ) , Toulmin in NoteCards ( Marshall , 1989 ) . They have in common that they use either the IBIS - approach or the Toulmin model of argumentation . Aquanet ( Marshall et al . , 1991 ) , a more recent development , provides schemata to create Toulmin or IBIS - structures . Although these systems of - ’ fer dedicated support for one aspect of the authoring ac - tivity ( argumentation , knowledge structuring ) they lack support for the other processes we have identified and realized in the four activity spaces of SEPIA . In summary of the first dimension , we can state that SE - PIA is unique in so far as it provides support for the whole range of hype ~ edia authoring . It is theoretically very well grounded , reflects the theory via the provision of dedicated node and link types and corresponding op - erations in each space . In addition , it offers inter - space linking possibilities and the reuse of hypermedia struc - tures and content across subtasks . 5 . 2 Dedicated Support for Hyperdocument Production As introduced in chapter 2 , the production of hyperdo - cuments requires concepts and methodologies with re - spect to the final product . Authors need support on dif - ferent levels of hypermedia networks . Conceptually related to our construction kit , Garzotto et al . ( 1991 ) propose HDM – the hypertext design model – utilizing a schema approach for efficient high level structuring of large applications and subsequent instantiation . Anoth - er attempt to provide high level concepts to the author was proposed by Smith Catlin et al . ( 1991 ) . They ex - tended Intermedia with templates realized as a set of pre - linked documents which can contain both content and formatting information . But none of them explicitly addresses the problem of coherence . 5 . 3 Support for Different Modes of Cooperating Authors SEPIA realizes two roles which hypermedia can and should play for cooperative work : ( 1 ) Hypermedia constitute the content of cooperation and ( 2 ) Hyperme - dia represent abase technology for facilitating coopera - tion . This is in line with the observation of Halasz ( 1988 , p . 848 ) : “Hypermedia is a natural medium for support - ing collaborative work . ” Comparing SEPIA with other systems on this “cooperative” dimension yields the fol - lowing observations . The GROVE group text editor ( Ellis & Gibbs , 1989 ) uses local editors and replicated documents together with a central coordinator serializing all editing opera - tions . SEPIA is geared towards hyperdocument author - ing and synchronization is done using transactions and locking of objects in the database . Instead of broadcast - ing operations which are difficult to sequentialize , SE - PIA broadcasts update notifications which need not be sequentialized by the clients . The rIBIS system ( Rein & Ellis , 1991 ) is based on acentral server architecture pro - viding one TC session per hyperdocument and support - ing only one mouse – a group mouse – within a TC ses - sion . SEPIA is implemented following the replicated architecture approach providing multiple TC sessions per composite node and supporting a private mouse for each coauthor . Switching between cooperative modes is very smooth in SEPIA . While Dewan & Choudhary’s ( 199 1 ) collaboration support environment requires us - ers to tailor the coupling behaviour to their needs , coop - erative SEPIA relieves users from constructing a specif - ic coupling behaviour . Furthermore , SEPIA provides concurrency control and maintains dynamic sessions , Aquanet ( Marshall et al . , 1991 ) follows also the repli - cated architecture approach but does not support syn - chronous cooperation in terms of shared views , tele - printers , and audio communication . Similarly to this aspect , the PREP - editor ( Neuwirth et al . , 1990 ) address - es asynchronous collaboration of authors but lacks the synchronous facilities while SEPIA offers both . It ad - dresses the cooperative aspects of writing and supports common planning and annotation activities . Although having the very interesting features – separate columns for each author and links for annotations – it has only a limited hypertext functionality . 5 . 4 Future Work In our early uses of the prototype system , we have been concerned with ( argumentative ) proposal writing , proj - ect plan maintenance , recording user feedback in SE - PIA itself , and replicating the task of a science journalist writrng an article on a scientific debate . These experi - ences show that the system is appropriate for these tasks . In order to test SEPIA in new application domains ( e . g . cooperative decision making , capturing design ratio - nale ) we will extend it by using the tailorability of activ - ity spaces or defining new application - specific spaces , As mentioned before , we plan enhancements for the DBMS support . We are currently reimplementing CHS with the help of the VODAK database management sys - tem . This is a distributed object - oriented database man - MILANO , NOVEMBER 30 - DECEMkER 4 , 1992 21 agement system currently developed at GMD - IPSI ( Klas et al . , 1990 ) . Although SEPIA is a hypermedia authoring environ - ment , we have to acknowledge that we still live in the context of traditional linear documents and printed pa - per output . Therefore , we are developing a linearize tool which transforms ahyperdocument in the rhetorical space to either a plain ASCII file or a document which is marked up in Interleaf ASCII format , Conversely , an Interleaf document with appropriate markup can be read in and converted to a hyperdocument which is based on our notion of paths . In the future , we will extend the transformation process to produce documents which conform to the SGML standard ( 1S0 , 1986 ) . Building on the idea of the construction kit , we . need a number of enhancements in the rhetorical space . This includes to provide special predefine document types for later use . The type definition will be formulated in SGML or HyTime ( ISO , 1991 ) . Other extensions currently being developed are a graphical path editor and a reading environment . The path editor allows the definition and modification of path conditions bound to nodes and links in the rhetorical space . A path interpreter is used to evaluate such conditions ( which are based on a history of visited nodes and links ) at run time . The reading environment provides the author with previews of the final presenta - tion format . With respect ot the CSCW support , we are planning the following improvements . The current design does not support the dynamic expansion of a tightly coupled ses - sion to include more authors . Furthermore , we will ex - tend cooperative SEPIA to support persistent activity tracking ( e . g . , who made which changes during a given time period ? ) . The history cards in NoteCards ( Irish & Trigg , 1989 ) list log of updates . But one is also inter - ested in the content of previous versions . For this pur - pose , we will use a version server for structured elec - tronic documents which is under development at IPSI ( Haake , 1992 ) . In the case of agroyp of authors cooperating over along - er period of time and on larger volumes of information , management issues become crucial . In this context , we plan a coordination functionality dedicated to task man - agement and the maintenance of access rights based on the current role of a coauthor , Finally , we are interested in how the system will scale when more users use it on large hyperdocument bases . Acknowledgements We would like to thank B . Bokowski , L . Kirchner , J . Schiimmer , and Ch . Schuckmann helping us to imple - ment SEPIA . References Conklin , J . ( 1987 ) . Hypertext : An introduction and sur - vey . IEEE Computer , 20 ( 9 ) , 17 - 41 . Conklin , J . & Begeman , M . L . ( 1988 ) . gIBIS : A Hypertext Tool for Exploratory Policy Discussion . In Proceed - ings of the ACM Conference on Computer - Sup - ported Cooperati ~ ’e Work ( CSCW’88 ) ( pp . 140 - 152 ) . Dewan , P , & Choudhary , R . ( 1991 ) . Flexible user interface coupling in a collaborative system , In Proceedings of the CHZ’91 ( pp . 41 – 48 ) . Ellis . C . A . & Gibbs , S . J . ( 1989 ) . Concurrency Control in Groupware Systems . In Proceedings of the ACM SIGMOD’89 Conference on the Mailagement of Data ( pp . 399 – 407 ) . ACM Press . Fischer , D . H . & Rostek , L . ( 1992 ) . SFK : A Smalltalk Frame Kit – Concepts and Use . Internal working pa - per , GMD - IPSI . Darmstadt , February 1992 . Garzotto , F . , Paolini , P . & Schwabe , D . ( 1991 ) . HDM — A Model for the Design of Hypertext Applications . In Proceedings of the 3rd ACM Conference on Hy - pertext ( Hypertest ’91 ) ( pp . 313 – 328 ) . Haake , A . ( 1992 ) . CoVer : A Contextual Version Server for Hypertext Applications . In Proceedings of the Euro - pean Conference on Hypertext ( ECHT92 ) . Haake , J . & Wilson , B . ( 1992 ) . Supporting Collaborative Writing of Hyperdocuments in SEPIA . In Proceed - ings of the ACM Conference on Computer Supported Cooperative Work ( CSCW92 ) . Halasz , F . G . ( 1991 ) . “Se ~ ’en issues” : Revisited . Final Keynote Talk at the 3rd ACM Conference on Hyper - text , San Antonio , TX , December 15 – 18 , 1991 . Hannemann , J . , Thuring , M . & Streitz , N . A . ( 1990 ) . Schreiben als Designproblem : Ein integrative An - satz . In D . Frey ( Hrsg . ) , Bericht iiber den37 . KongreJ3 derDeutschen Gesellschaftftir Psychologie . Gottin - gen : Hogrefe . Hannemann , J . , Thi . iring , M . & Friedrich , N . ( 1992 ) , Hy - perdocuments asuser interfaces : Exploring abrows - ing semantic for coherent hyperdocuments . In R . Cordes & N . Streitz ( eds . ) , Hypertext und Hyper - media 1992 ( S . 87 – 1 02 ) . Heidelberg : Springer . Irish , P . M . & Trigg , R . H . ( 1989 ) . Supporting Collabora - tion in Hypermedia : Issues and Experiences . In . Jour - nal of the American Society for Information Science , 40 ( 3 ) , 192 - 199 , May , 1989 . 1S0 ( 1986 ) . ISO / IEC International Standard 8879 - 1986 : Information Processing — Text and Office Systems — Standard Generalized Markup Language ( SGML ) , 1986 . 22 ACM ECHT CONFERENCE ISO ( 199 1 ) . ISO / fEC Draft International Standard 10744 : Information Processing — Text and Office Systems — Hypermedia / Time - Based Document Structuring Language ( HyTime ) , 1991 . Klas , W . , Neuhold , E . J . & Schrefl , M . ( 1990 ) . Using an Object - Oriented Approach to Model Multimedia Data . Computer Communications 13 ( 4 ) , 204 – 216 Kunz , W . & Rittel , H . ( 1970 ) . Issues as elements of in - formation systems ( Working paper 131 ) . Berkeley , CA : University of California . Lemke , A . , Streitz , N . A . & Wilson , B . ( 1992 ) WSCRAWL : The use of a shared ~ orkspace in a desktop confer - encing system . GMD - IPSI , Tech . Report . Arbeitspa - piere der GMD Nr . 672 . Marshall C . ( 1989 ) . Representing the structure of a legal argument . Proceedings of 2nd International Confer - ence on AI and Law ( pp . 121 – 127 ) Vancouver . Marshall C . , Halasz , F . , Rogers , R . & Jansen , W . Jr . ( 1991 ) . Aquanet : A Hypertext Tool to Hold Your Knowledge in Place . In Proceedings of the 3rd ACM Conference on Hypertext ( Hypertext’91 ) , ( pp . 261 – 275 ] ACM Press . McCall , R . , Bennet , P . , D’Omozio , P . , Ostwald , J . , Ship - man , F . & Wallace , N . ( 1990 ) . PHIDIAS : Integrating CAD Graphics into Dynamic Hypertext . In A . Rizk , N . Streitz , & J . Andr6 ( eds . ) , Hypertext : Concepts , Systems , and Applications ( ECHT’90 ) . ( pp . 152 - 165 ) Cambridge University Press . Nanard , J . & Nanard , M . ( 1991 ) . Using Structured Types to Incorporate Knowledge in Hypertext . In Proceed - ings of the 3rd ACM Conference on Hypertext ( Hy - pertext ’91 ) ( pp . 329 – 343 ) ACM Press . Neuwirth , C . M . , Kaufer , D . S . , Chandhok , R . & Morris , J . H . ( 1990 ) . Issues in the Design of Computer Sup - port for Co - authoring and Commenting . In Proceed - ings of the Conference on Computer - Supported Cooperative Work ( CSCW’90 ) ( pp . 183 - 195 ) ACM Press . Newell , A . ( 1980 ) . Reasoning , problem solving , and deci - sion processes : The probiem space asafundamental category . In R . S . Nickerson ( cd , ) , Attention and per - formance ( Vol . 8 , pp . 693 - 718 ) . Hillsdale , NJ . : Law - rence Erlbaum . Rein , G . L . & Ellis , C . A . ( 1991 ) , rIBIS : areal - time group hypertext system . International Journal of Man - Machine Studies , 34 , 339 – 367 . Schi , itt , H . & Haake , J . M . ( 199 . 3 ) . Server Support for Cooperative Hypermedia Environments . To appear in H . P . Frei ( cd . ) , Proceedings of Hypermedia’ 93 , Zurich , March 2 – 3 , 1993 . Schutt , H . & Streitz , N . A . ( 1990 ) . HyperBase : A Hyper - media Engine Based on aRelational Database Man - agement System . In A . Rizk , N . Streitz , & J . Andr6 ( eds . ) , Hypertext : Concepts , Systems , and Applica - tions ( ECHT’90 ) ( pp . 95 – 108 ) . Cambridge : Cam - bridge University Press . Schuler , W . & Smith , J . B . ( 1990 ) . Author’s Argumenta - tion Assistant ( AAA ) : A Hypertext - Based Author - ing Tool for Argumentative Texts , In A , Rizk , N . Streitz , & J . Andr6 ( eds . ) , Hypertext : Concepts , Systems , andApplications ( ECHT’90 ) ( pp . 95 - 108 ) . Cambridge : Cambridge University Press . Smith , J . B . , Weiss , S . F . & Ferguson , G . J . ( 1987 ) . A Hy - pertext Writing Environment and its Cognitive Ba - sis . In Proceedings of the First ACM Workshop on Hypertext ( Hypertext’87 ) ( pp . 195 – 214 ) ACM . Smith Catlin , K . , Garrett , L . N . & Launhardt , J . A . ( 1991 ) . Hypermedia Templates : An Author’s Tool , In Pro - ceedings of the 3rd ACM Conference on Hypertext ( Hypertext ’91 ) ( pp . 147 - 160 ) ACM Press Smolensky , P , , Bell , B , , Fox , B . , King , R . & Lewis , C . ( 1987 ) . Constraint - Based Hypertext for Argumenta - tion , In Proceedings of the First ACM Workshop on Hypertext ( Hypertext’87 ) ( pp . 215 – 245 ) . Streitz , N . A . ( 1987 ) . Cognitive compatibility as a central issue in human - computer interaction : Theoretical framework and empirical findings . In G . Salvendy ( Ed . ) , Cognitive engineering in the design of human - computer interaction andexpertsystems ( pp . 75 - 82 ) . ‘Amsterdam : Elsevier . Streitz , N . A . , Hannemann , J . & Thuring , M . ( 1989 ) . From Ideas , and Arguments to Hyperdocuments : Travel - ing through Activity Spaces . In Proceedings of the 2nd ACM Conference on Hypertext ( Hypertext’89 ) ( PP . 343 - 364 ) . ACM Press . Tatar , D . Q . , Foster , G . & Bobrow , D . ( 1991 ) . Design for conversation : lessons from Cognoter . International Journal of Man - Machine Studies , 34 , 185 - 209 . Thuring , M . , Haake , J . & Hannemann , J . ( 1991 ) . What’s Eliza doing in the Chinese Room ? - Incoherent hy - perdocuments - and how to avoid them . In Proceed - ings of the 3rd ACM Conference on Hypertext ( Hy - pertext ’91 ) ( pp . 161 – 177 ) . ACM Press . Toulmin , S . ( 1959 ) . The uses of argument . Cambridge : Cambridge University Press . Walker , J . ( 1991 ) . NetfoneRelease 1 . Posted innewsgroup comp . sources . sun . September . 12 , 1991 .