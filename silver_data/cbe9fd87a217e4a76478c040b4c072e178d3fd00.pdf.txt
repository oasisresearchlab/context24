Over the Shoulder Learning : Supporting Brief Informal Learning MICHAEL B . TWIDALE Graduate School of Library and Information Science , University of Illinois , Urbana - Champaign , Champaign , IL , 61820 , USA ( E - mail : twidale @ uiuc . edu ) Abstract . The paper reviews work on informal technical help giving between colleagues . It concentrates on the process of how colleagues help each other to use a computer application to achieve a speciﬁc work task , contrasting this with the focus of much prior work on sur - rounding issues like the choice of whom to ask , information re - use and the larger work context of encouragement or otherwise of such learning . By an analysis of the literature and a study of oﬃce activity , some strengths and weaknesses of the method are identiﬁed . The diﬃculties of talking about the process of performing graphical user interface actions are explored . Various design implications for functionalities to improve the eﬃciency of informal help giving are explored . A consideration of informal learning can help in designing more eﬀective , learnable , robust and acceptable CSCW systems . It also provides a diﬀerent perspective on interface design as an exploration of features to support human – human interaction , using the computer screen as a shared resource to support this . In this way CSCW research may contribute to HCI research , since during such help giving , all computer systems are at least temporarily collab - orative applications . Key words : computer supported collaborative learning , help giving , informal learning , inter - face design , workplace learning 1 . Introduction Learning how to use a computer application is often a collaborative activity . This is hardly a novel claim , nor a surprising one to CSCW researchers . And yet strangely in the discussions about CSCW applications development , evaluation and real world use , collaborative learning of how to use them seems to get overlooked . This paper draws together a variety of work on informal collaborative learning of computer applications in order to draw attention to certain aspects of the phenomenon which might inform CSCW design , and to which CSCW research can contribute . Naturally people need to learn how to use any CSCW application , and also to learn its more advanced features incrementally . Problems with learnability have long been noted as a potential barrier to adoption of collaborative applications ( Grudin , 1989 ) . Nevertheless , learning issues can get overlooked Computer Supported Cooperative Work ( 2005 ) 14 : 505 – 547 (cid:1) Springer 2005 DOI 10 . 1007 / s10606 - 005 - 9007 - 7 in preference to a focus on the power of existing or potential skilled use . Additionally , CSCW applications often involve rather complex initial setup and conﬁguration activities , and subsequent tailoring and adaptation to changing work needs that all require a combination of learning and problem solving . It would be ironic if a system explicitly developed to facilitate col - laborative work did not explicitly support collaborative ways to address the installation , setup , conﬁguration , learning , problem diagnosis and repair challenges that inevitably arise in use . Such activities are frequently regarded as ‘overhead’ , separate from the ‘real’ use of the system , which ( sadly ) is the chief focus of careful evaluation and redesign . In the absence of a consid - eration of these rather mundane aspects of learning and problem - solving , systems are less robust and collaborative infrastructures may fail to gain necessary critical mass ( Star and Ruhleder , 1996 ) . With growing interest in cyberinfrastructures , it is critical to consider not just the ﬁt of the infra - structural elements and applications to the intended uses , but also how well the system supports the collaborative learning , use , coping and ﬁxing of the cyberinfrastructure itself . In addition to CSCW systems themselves , CSCW research has a role to play in assisting the learning of applications not conventionally considered as collaborative . It is widely acknowledged that the learnability of any appli - cation is a crucial aspect of its usefulness , usability and acceptability ( Nielsen , 1993 ) . Traditionally this has been considered the domain of researchers in Human Computer Interaction ( HCI ) , chieﬂy drawing on theories from cognitive psychology and ( less often ) from educational research . However , during help giving all applications become CSCW applications – at least temporarily , and so may beneﬁt from a consideration of design principles , analyses , methods and functionalities from research on more conventional CSCW systems . In a similar manner , the move towards ubiquitous or per - vasive computing use across society creates yet more challenges for how to learn how to use these devices , and how to integrate them with each other and into everyday lives . New devices and functionalities appear every year to compound the problem . Actively facilitated informal collaborative learning may have a crucial role to play . Finally , collaborative applications can be used to support learning a par - ticular subject , such as basic literacy skills , high school biology , or profes - sional ethics . The ﬁeld of computer supported collaborative learning ( CSCL ) investigates the challenges of designing systems to support highly productive and engaging learning experiences . This paper does not consider how to use CSCL technologies to learn a subject , but does raise the sometimes over - looked issue of how easily people learn to use the CSCL application in order to learn the ‘real’ subject of study . We believe that a consideration of the educational and pedagogic aspects of learning to use applications can complement the insights gained from the michael b . twidale 506 interplay of the disciplines , particularly Computer Science , Psychology and Sociology , that have so enriched CSCW research to date . It is our contention that despite considerable research in informal learning around the use of computer applications , we still do not really understand what happens , why it is at times successful or unsuccessful , and how systems could be improved to help people learn from each other more productively . This paper aims to provoke a discussion on these issues rather than to propose any clear solutions . The paper reviews multiple literatures to consider these issues . It begins with an exploration of the range of related learning activities , focussing on co - located how - to technical help . A review of workplace studies and a pilot study are then used to illustrate issues and problems that can arise during a help giving interaction . These issues are then analyzed to uncover aspects of the process that can be informed by work in a variety of disciplines leading to potential design implications . 2 . Clarifying informal collaborative learning It is almost a truism in interface design that many users rarely read manuals or use online help ( e . g . Nielsen , 1993 ) . A user may be unable to obtain training , either because it costs too much , or is not available at the time of need . Al - though some people like to learn a system on their own , many prefer learning in a more social context . Indeed there is support for this preference from educa - tional theory ( Vygotsky , 1986 ; Brown and Duguid , 1991 ; Lave and Wenger , 1991 ) . There is strong evidence that informal workplace learning , regardless of any computer use , is important ( e . g . Schlager , 1995 ) . It may turn out that informal collaborative learning is not merely one of several possible learning options , but that it plays a signiﬁcant part in the learning of many users . There are many kinds of learning interactions . We use one as a focus for this paper : an informal learning interaction with a colleague involving how to use an application , which takes place embedded in a larger ( usually work - place ) context . For example : John asks Mary for help . Mary comes over to John’s desk and leans over , making suggestions . We borrow Bannon’s term ‘Over The Shoulder Learning’ ( OTSL ) to refer to this for obvious reasons . Bannon ( 1986 , p . 403 ) used the term ‘‘over - the - shoulder’’ in the description of a case of a new employee commenting on the advantages of sharing an oﬃce with a more experienced person because of its advantages for hints on computer use . O’Day et al . ( 1995 ) also use the term . The activity is suﬃciently common to be easily recognized , and indeed it may seem surprising that there is much to be said about it . We are not claiming that the phenomenon is new , nor that it has never been mentioned before , quite the contrary . We are not advocating that it ought to occur , because it easy to observe that it already does occur . Rather , we are advocating the need to study how it happens in order to understand the circumstances in which it is OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 507 and is not successful , and to consider the design implications for improving its eﬀectiveness . Later sections will show that it is not as straightforward as it might at ﬁrst appear . The paradigm OTSL case is a useful place to start exploring issues and design implications , but there are many variants that merit further study . These are considered in section 3 . 8 . We are using the same - time same - place context as our initial focus chieﬂy because we believe it is the most straightforward kind of help giving interaction , but by no means trivial . When discussing help giving with CSCW developers , a common audience reaction is to immediately consider technologies to support remote or asynchronous help giving . It is tempting to assume that face - to - face help is unproblematic , and so can be used as a gold standard for improving remote help . Such a view can lead to thinking that technological support for remote help should replicate as many of the features of face - to - face as possible . By contrast we want to question whether face - to - face help is indeed unpro - blematic and whether it too could beneﬁt from greater technological support . This consideration should occur before branching out to consider more complex kinds of remote help giving . Our aim is to understand current OTSL behavior , but not in order to automate it . That would remove the human – human interaction , which we suspect is crucial to the very success of OTSL . Our focus is on analysis in order to build tools to allow OTSL to operate more eﬃciently , thus encouraging it to occur more frequently as a signiﬁcant contribution to ongoing workplace productivity improvement . 3 . Studies of help giving Bannon ( 1986 ) ﬁrst raised informal user help as an issue of signiﬁcance for interface design . He made the distinction between formal and informal sources of help , and laid out a number of ways in which help giving may be usefully analyzed . He noted that the ‘‘acceptance of the ‘one terminal – one person’ perspective as the focus of study in human – computer interaction may be overly limiting’’ . Bannon has subsequently developed and elaborated his analysis , exploring the implications for CSCW , HCI and CSCL ( e . g . Bannon , 1991 ; Bannon and Bødker , 1991 ; Bannon , 1995 ) . In the rest of this section we explore related work on help giving . To provide a structure , we use the standard journalistic questions ; ‘‘what , who , why , when , where and how’’ . 3 . 1 . WHAT ? Informal communication has been shown to be an important part of eﬀective work activity ( e . g . Kraut et al . , 1990 ; Whittaker et al . , 1994 ; Orr , 1996 ) . The importance of informal learning in workplaces ( irrespective of any techno - michael b . twidale 508 logical focus ) forms a crucial part of the interest in Knowledge Management and Organizational Learning ( e . g . Senge , 1990 ; Argyris and Scho¨n , 1996 ) . It is diﬃcult to get a sense of the relative importance of informal learning . One study claimed that up to 70 % of learning needs are met by this approach ( Center for Workforce Development , 1998 ) . A diary study of computer - oriented exploratory learning found that in one week 10 participants re - ported a total of 69 learning episodes of which 18 involved help from others ( Rieman , 1993 ) . In another diary study a 2 week problem - incident diary completed by four secretaries reported 40 distinct incidents that interrupted work , of which 25 led to conferring with someone else ( Clement , 1990 ) . Researchers in IT training have investigated informal collaborative learning , particularly in the context of communities of practice ( e . g . Gallivan , 2000 ) . However : ‘‘There has been scant research to determine what portion of users’ overall IT learning occurs through working with such ‘informal con - sultants’ or ‘lead users’ versus through formal training , or other mechanisms . Similarly , little research has addressed the issue of whether certain types of technology skills are best acquired through these various learning mecha - nisms . ’’ ( Gallivan , 2000 , p . 55 ) . Gallivan notes that conventional approaches to end - user training mostly view it as an individual level phenomenon distinct from the activity of everyday job tasks , re - emphasizing the argument of George et al . ( 1995 ) . By contrast , Brown and Duguid ( 1991 ) , Sachs ( 1995 ) , Orr ( 1996 ) and others have stressed how learning intertwines with work . Indeed Brown and Duguid cite Orr as claiming : ‘‘learning going on in the process of and inseparable from work’’ . Or as Zuboﬀ ( 1988 ) notes : ‘‘Learning is not something that requires time out from being engaged in productive activity ; learning is the heart of productive activity . To put it simply , learning is the new form of labor’’ . Although strongly interwoven , we want to ask : are the functionalities and interfaces designed to optimize work and optimize individual learning precisely those that optimize collaborative learning ? As computational tools increasingly pervade the workplace , aspects of computer use ﬁgure in informal communications . The computer may serve as an information repository or as a conversational medium for information sharing ( e . g . Paepcke , 1996 ) , as elaborated later . In addition the problem arises of learning exactly which sequence of interaction steps will cause the application to do a task . Fifteen years later , Clement’s concern is still true : ‘‘Even those who develop computer supported cooperative work ( CSCW ) applications and thus recognize that people work in groups , concentrate almost exclusively on supporting well deﬁned tasks or general communica - tions while ignoring the informal facilitation of the basic meta - task of simply learning to use and adapt the technology’’ ( Clement , 1990 ) . The critical importance of workplace learning , even to the extent of talking about a ‘learning organization’ is widely acknowledged . Much workplace learning has nothing to do with computer use or just uses computers as a OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 509 medium for learning discussions . For example , Wenger’s ( 1998 ) vignettes about insurance claims processing are clearly examples of collaborative problem - solving and learning about work practice , but they involve learning about how to do the work process , not how to use the computer application . That is , the informants knew very well what to do to initiate diﬀerent computational results , they just didn’t know which category a given claim case belonged in , and so which action sequence to initiate in the application . Similarly , much work on knowledge management systems and knowledge sharing focuses on information that is stored on computers and searched for and disseminated by applications , but where that knowledge itself has nothing to do with computer use ( e . g . Paepcke , 1996 ) . By contrast , we are choosing to focus on what Paepcke describes as ‘‘’how - to’ instructions for computer interactions . ’’ Does it makes sense to just consider learning about how to do something with a computer ? Is it the case that there is something especially diﬃcult about such how - to problems ? Once acknowledging the issue , can systems designers consider ways to support collaborative help giving , just as they already use HCI techniques to support individual learning ? Indeed , are the features useful for collaborative and individual learning identical ? If so , we can continue with current HCI work that focuses almost exclusively on analysis and design to support the latter . We believe that at least for reasons of simplicity , it can help to focus on technical problems , and that there are at least hints that such ‘how - to’ information can be rather problematic for people to learn and share . 3 . 2 . WHO ? When computers were scarce , the users of computers were more often computer scientists and so early studies of help giving around computers not surprisingly revealed interactions between people who would consider themselves relatively technically skilled . An early classic is the work of Weinberg ( 1971 ) which included the story of vending machines in a common room that became the focus of much social chat . This was perceived as time - wasting , but their removal led to a noticeable decline in productivity leading to the discovery that interspersed within the social chat was signiﬁcant problem - solving . Variations on this story ( sometimes called the coﬀee ma - chine story or the water cooler phenomenon ) are often used as anecdotal evidence for the importance of informal collaboration and awareness of the activities of others in the software development process . Studies of pro - grammer behavior have shown how they beneﬁt from informally learning from their peers ( e . g . Alty and Coombs , 1980 ; Lang et al . , 1981 , 1982 ) . More recent work on extreme programming ( Beck , 2000 ) notes the value of having programmers work in pairs , not just for productive bug catching but also for organizational learning . It is interesting to note the accumulating evidence michael b . twidale 510 that ( perhaps surprisingly ) pair programming can actually enhance productivity . With more widespread adoption of computers , more kinds of people are involved in OTSL interactions . They may still be computer scientists helping their peers , or people who , although also in the domain , are regarded as novices or apprentices ( Berlin and Jeﬀries , 1992 ) . They may be designated technical support staﬀ helping people known as ‘end users’ to indicate that these are considered more as consumers of computer applications as a means to support their own , diﬀerent set of specialist workplace skills ( Scharer , 1983 ; Cole , 1984 ; Lee , 1986 ) . Instead of calling on a technical support person , an end user may ask a peer , such as a fellow secretary ( Clement , 1990 ) , child ( Bruckman and De Bonte , 1997 ) , undergraduate ( Twidale et al . , 1997a ) or astrophysicist ( Ackerman and Mandel , 1999 ) even if ( or perhaps especially because ) that peer does not consider themselves a computer expert . Some seekers of help may not know who to ask , and technologies have been developed to meet this informational need ( e . g . Ackerman and Malone , 1990 , 1998 ; Contractor et al . , 1998 ; McDonald and Ackerman 2000 ; Vivacqua and Lieberman , 2000 ; McDonald , 2001 ; Acker - man et al . , 2002 ; Yimam - Said and Kobsa , 2002 ) . Many researchers have noted the existence of informal networks that can involve help giving and numerous studies have investigated who talks to whom ( e . g . Nohria and Eccles , 1992 ; Krackhardt and Hanson , 1997 ) . By contrast , far less attention has been given to understanding and supporting help giving once a helper has been located . 3 . 3 . WHY ? Eveland et al . ( 1994 ) examined the nature of help networks and the importance of a small number of help providers , who are similar to those they help in their work and position , and who link users to central help resources . As with other studies ( e . g . Eason , 1988 ) they found that users ask for help from people nearby and from people with similar work tasks in preference to more remote but much more expert users / help staﬀ , even when these are available . Convenience and eﬀectiveness appear to be major rea - sons for the choice of informal interactions , particularly with peers . A colleague who is nearby is easier to ask , and it is easier to ascertain when it is appropriate to ask . A colleague is more likely to understand the wider work context of the problem raised , requiring less explanation of why the person wants to do a certain action ( Berlin and Jeﬀries , 1992 ) . Nevertheless the concern remains that at times this can lead to the blind leading the blind ( Trauth and Cole , 1992 ) . Although considering remote assistance ( Apache ﬁeld support ) , the ﬁndings of Lakhani and von Hippel ( 2003 ) are relevant in revealing that help givers also beneﬁt from the activity of helping by OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 511 learning more about the system that enables them to do their own job better . 3 . 4 . WHEN ? The convenience of being able to ask a person for help at the moment of need is clearly advantageous , especially compared to traditional training . If a colleague is not immediately available , delays occur and the interaction may extend over time and maybe space as well . After an interaction has occurred , it is useful to think about whether and how the explanation can be recorded and re - used by other people , so increasing workplace productivity . The simplest case of this is the development of a ﬁle of Frequently Asked Questions ( FAQs ) , ( e . g . Halverson et al . , 2004 ) and more sophisticated mechanisms have also been developed and tested ( e . g . Greer et al . , 1997 ; Ackerman , 1998 ) . Considerable work has examined the stages before ( ﬁnding someone ) and after ( re - using the knowledge ) a help giving interaction . By contrast , relatively little work has explored what actually happens during such an interaction . 3 . 5 . WHERE ? Informal interactions can take place at the learner’s desk or the helper’s desk . The interactions may also occur at third places such as in the corridor , at the water cooler , in the library ( Twidale et al . , 1997a ) or at the lunch table ( Orr , 1996 ) . Sometimes it is not possible to obtain help from nearby colleagues . Numerous studies have discussed ( e . g . Bannon , 1986 ) or shown ( Constant et al . , 1996 ) how electronic networks , including mailing lists , bulletin boards and Usenet news are used to obtain information from others , across departmental , organizational and even national boundaries . The use of technologies to support synchronous remote help ( audio plus shared appli - cations ) has also been explored ( O’Day et al . , 1995 ) . These are all extensions to our base case of co - located help . In this paper we concentrate on the workplace , but increasing use of technologies in the home and public spaces mean that these settings are also becoming important settings for learning . 3 . 6 . HOW ? Certain costs ( eﬀort , but also social , such as embarrassment or reluctance to disturb others ) must be factored into the decision to seek help , and this has been used to account for the diﬀerences in satisfaction with the same tech - nology between two seemingly similar workplace situations ( Blomberg , 1987 ) . Ackerman ( 1998 ) notes the problems involved in computer experts maintaining organizational face and hence the advantages of functionality in michael b . twidale 512 Answer Garden to ask questions anonymously . In a study of informal con - sulting interactions between apprentices and expert computer scientists , it was found that apprentices tried to minimize their use of consultants’ scarce time by various strategies ( Berlin and Jeﬀries , 1992 ) . In both face - to - face and online asynchronous help there is an evolving netiquette of when and how to ask for help ( Agre , 1994a ) . Beyond the problems of initiating a request for help , we believe that the pedagogic details of how help giving occurs have been relatively neglected . The rest of the paper aims to chart out the diﬀerent aspects of this issue . 3 . 7 . OTHER KINDS OF INFORMAL HELP AND LEARNING The wider organizational context plays a crucial role in whether informal learning is supported or even permitted . Cases of workers being given tech - nology to use with little warning , training and support do occur ( e . g . Clement , 1990 ) , and the workers may compensate for this unfortunate situ - ation by doing more informal learning , including OTSL . Although this paper extols the advantages of informal , spontaneous learning interleaved with work tasks , that does not mean that it should be taken as a justiﬁcation for the abolition of formal training . Unfortunately informal learning is some - times identiﬁed as a problem ( or a symptom ) to be rectiﬁed , rather than being acknowledged as a powerful tool to address a larger problem . For example , George et al . ( 1995 ) contrast two studies , one of professionals and the other of clerical workers . They show how it was much more diﬃcult for the latter to engage in informal learning interactions , above the minimum necessary to do the basic work , because of time pressures , lack of management support ( or even understanding of what their work really entailed ) and lack of control of their work environment . By contrast , the professional group had consid - erable freedom and used it to eﬀect substantial informal learning . Some activities similar to informal learning have very similar features . One is the collaborative nature of customising software ( Mackay , 1990 ) . Although this is help giving , it is not necessarily OTSL , in that the help giver may just pass on the customization ﬁles to the recipient without the latter learning how to do it herself . Mackay’s study revealed users’ preferred methods to obtain information about customization were ‘ask a person’ and ‘copy and experiment’ ( which involved getting a ﬁle from a colleague ) . The study identiﬁed translators ; people who actively share ﬁles and talk to others . Translators may not be the most technically adept in a group , but are willing to spend time with others to help them . They often create simpliﬁed and more task - speciﬁc customizations to share . The chief disadvantage is that their relative lack of technical skills means that they may propagate errors through the organization . Studies of the process of tailoring also note the importance of informal learning ( Maclean et al . , 1990 ; Trigg and Bødker , 1994 ) . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 513 A study by Nardi and Miller ( 1991 ) showed how even a spreadsheet pro - gram is at times used as a CSCW tool . Local developers emerged who were work domain experts who chose to spend more time ‘tinkering’ ; learning about the technology and interacting with programmers ( Nardi , 1993 ) . Users shared spreadsheet templates , and local developers and programmers con - tributed code to the spreadsheets of less experienced users . As with tailoring work , spreadsheets could be shared without learning happening . However , informal teaching did also occur , often precipitated by a user observing a feature in a colleague’s spreadsheet . Thus spreadsheets support the sharing of both programming and domain expertise , using the spreadsheet as a medium of communication . It is worth considering how the design of the spreadsheet application happened to aﬀord such collaborative learnability even though it was only intended to support solitary use . Gantt and Nardi’s ( 1992 ) analysis of the use of Computer Aided Design systems uncovered ‘gardeners’ who help co - workers to use the tool more eﬃciently . Gardeners are help givers whose role has been somewhat for - malized by managerial support . They can also act as intermediaries between users and managers , management information systems staﬀ and systems staﬀ . The idea is extended in Nardi and O’Day ( 1999 ) . A study of the work of reference librarians provides an insight from a more formalized kind of help giving ( Nardi and O’Day , 1996 ) . Context was found to be very important – the more a librarian works with a given client the easier it is to understand the client’s needs and predict the usefulness of a given item . 3 . 8 . CONSIDERING THE DIMENSIONS OF LEARNING EPISODES For this paper we are chieﬂy considering informal face - to - face interactions in the workplace involving learning how to do something with computer applications . This is the activity that we have chosen to name OTSL . Even this activity involves a range of diﬀerent manifestations and so should be considered as a somewhat arbitrary grouping of activities along several dif - ferent dimensions . Other related kinds of activities can be identiﬁed by moving along these dimensions : • Time : from synchronous to asynchronous and longer extended interac - tions interwoven with other work • Location : from the help seeker’s computer to another computer such as the help givers , away from computers such as at the lunch table , near - distributed such as yelling across cubicles and far - distributed such as tech support phone calls . • Topic : from how - to help about using an application to broader activities that happen to use computers in their solution or in obtaining the solution , as addressed in many knowledge management systems . michael b . twidale 514 • Number of people : from two to involving larger numbers in the initial solution or its subsequent reﬁnement and sharing . • Novelty : from a solution already known by the help giver to more col - laborative problem - solving where neither participant knows the answer , ideally leading to the innovation of new solutions . • Formality : from ad hoc informal peer interactions to those with desig - nated experts , mentors , trainers or tech support in identiﬁable or des - ignated training sessions , or to playful social interactions or opportunistic vicarious learning by watching what another person does . • Context : from the workplace to schools , libraries , museums , airports , cafes , the home , etc . • Focus : from what happens during the interaction to what happens be - fore ( deciding who to ask and how to ask ) to what happens after ( how / whether the learning is applied , and how it might be reused and shared more eﬀectively ) . Although concentrated on OTSL , we hope that the work begun here can also contribute to situations at other points along these dimensions . For example , considering the context dimension , the learning of domestic computer applications such as email , or shopping on the web might at ﬁrst glance be assumed to be mostly solitary . But is this true ? Is there a social dimension to learning from friends and family that has not been acknowl - edged and thus not explicitly supported ? The social aspects of learning about the existence of a feature are well known and supported through mechanisms such as ‘email a friend’ viral marketing . Kiesler et al . ( 2000 ) note the signiﬁcance of help from family members , particularly younger people , in the use of home computers . We have also looked at collaborative learning in the playing of computer games and other more playful contexts ( Hinn et al . , 2004 ) . Similarly , are certain technologies particularly well adapted either by accident or design to aﬀord certain kinds of OTSL ? For example , text messaging has grown rapidly in popularity , despite having an interface that is rather ﬁddly to learn and use ( Grinter and Eldridge , 2001 ) . No doubt the main reason is that the usefulness of the functionality out - weighs any usability issues . But is social learning a signiﬁcant contributing factor ? It is easy to show a friend how to send and receive text messages in a variety of social contexts since people carry their mobile phones with them . Perhaps mobile phones in some ways aﬀord ad hoc social learning even better than a desktop computer . Extending this idea , what are the design implications of OTSL for the adoption of ubiquitous computing applications ? In particular , what are the implications for the learnability of semi - public devices such as information displays for travel planning ( Rodden et al . , 2003 ) or simple social sharing ( Brignull et al . , 2004 ) , ticket dispensers , interactive public art ( Bolter , 2003 ) and advanced museum guide technologies ? These are often learned by OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 515 watching their use by others , a kind of vicarious learning ( Bandura , 1986 ) even if explicit help giving does not occur . The larger body movements required for interaction with large displays , using touch screens and gesture based interactions all seem to be almost accidental aﬀordances for collab - orative learning that are better than conventional small screens , mice and keyboards , which are better for individual use than collaborative learna - bility . Subsequent work ( Twidale and Ruhleder , 2004b ) has led us to realize the importance of interactions further along the novelty dimension ; not just pure learning – teaching episodes but collaborative learning and problem - solving leading to end user innovation . This echoes the point of George et al . ( 1995 ) : ‘‘People learn about computing during the course of adopting , altering , and using it in their work’’ . 3 . 9 . SUMMARY OF HELP GIVING STUDIES Despite the large body of work on informal technical help giving , there is relatively little focus on the details of how it occurs , particularly with respect to face - to - face help . By contrast there is substantial focus on what happens before the interaction in ﬁnding the right person to ask , and after the interaction to re - use the knowledge . Noting this gap , we wish to make the point that actual help giving is neither uninteresting nor unproblematic . It may be diﬃcult to consider how to facilitate it technologically , but given its importance it is at least worth trying . 4 . A study of help giving in an oﬃce We use some ﬁndings from a small scale pilot study to illustrate elements of the help giving process and potential problems , and so to inform the later section on design implications and wider issues . To simplify the study , an administrative oﬃce was chosen where it was known that many face - to - face help giving interactions occurred involving relatively simple applications . Subsequent work ( Twidale and Ruhleder , 2004a , b ) extends , but does not contradict the ﬁndings reported here . The oﬃce was open plan , with ﬁve administrative staﬀ working on many diﬀerent tasks and using a range of software including word processors , email systems , spreadsheets , several databases , and a complex bulletin board sys - tem for communicating with the rest of the department . Activity was ob - served in 15 one - hour periods at diﬀerent times of the day and diﬀerent days of the week over a period of 10 weeks . Five of the sessions were videotaped for further analysis . Participants were also interviewed . The participants se - lected their own pseudonyms . michael b . twidale 516 The workplace was relaxed , informal , and collegial , with strong managerial encouragement for initiative - taking . Help giving was part of the culture . Although each staﬀ member had clearly identiﬁed responsibilities , they covered for each other when necessary . Their work involved substantial interaction with each other , aﬀording opportunities for learning . It was also a very public space , with other co - workers and visitors frequently entering and interacting . Consequently , the context is nearer to the ideal of a setting where mutual learning is likely to take place than the average oﬃce setting . Thus the examples of learning observed and analyzed in no way contradict the ﬁndings of George et al . ( 1995 ) of the diﬃculties that clerical work groups often have in making time for learning . Neither do they contradict the ﬁndings of Ackerman ( 1998 ) that some people may be concerned about being seen to need to ask for help . Given that the aim was in part to understand the problems with help giving , the benign work context should not invalidate the ﬁndings . 4 . 1 . METHODOLOGICAL IMPLICATIONS OF THE STUDY The oﬃce members understood the aims and nature of the study . They even volunteered to ‘save up’ some learning episodes for when the researcher would next be present . Hence those particular episodes were not exactly the purely spontaneous learning episodes that we wanted to observe . Neverthe - less , they were authentic in that they were learning tasks that the participant was intending to undertake anyway at some time , and the participants claimed that they were similar to normal unobserved learning episodes . They did not appear to be substantially diﬀerent from the truly spontaneous epi - sodes observed , except that the latter were much shorter ( seconds to a couple of minutes rather than 20 – 40 minutes ) . However the study was too small for conclusive ﬁndings . This raises an important issue of the problems of undertaking an observational study where a particular focus of interest is a relatively rare , brief and spontaneous event . Unless you have a lot of time to spend in observation , you may not see much of it . The research described in Section 3 mostly used post hoc interviews ( as well as some ethnographic observations and the use of diaries ) . This method can be a powerful and reliable method for accumulating substantial aggregate information about remembered episodes , the nature of the problem , the social network features , who was involved and the perceived frequency of the episodes . However details about exactly how the learning occurred , and how the existing application helped or hindered this process will necessarily be rather hazy and so may not be suﬃciently detailed to help its analysis , par - ticularly that needed to inform systems design . As later sections note , this is just the same problem that a learner has when trying to explain to a helper what she has tried so far . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 517 4 . 2 . DIFFERENT KINDS OF HELP IN ONE INTERACTION One of the chief advantages of getting help from colleagues is that there is so much shared context , as noted in several of the studies cited above . The helper can choose examples related to the work that the system will be used for , and pitch the explanation at the appropriate level based on what is known about the recipient’s prior experience and expertise . As with any kind of one - to - one tuition , it is much easier for the helper to diagnose miscon - ceptions and for the learner to ask for remedial help . Just because there might be a logical ordering to learning concepts ( including important pre - requisites ) does not mean that each learner must have traveled that path . Example : In the middle of a discussion of how to create and use mailboxes , Gretchen discovered that Amanda did not fully understand the convention of inserted right angle brackets in a replied message , although she had encountered it many times . Gretchen detoured from her explanation of mailboxes in the Eudora email program to explain this general email convention . It might have been assumed that Amanda , with considerable experience of email use , would have this concept , but she had never fully acquired it . Given the work context , people ask for help when they have a particular real - world task and need help in how to achieve it using the available tech - nologies . The resultant explanations are not solely about how to use a given software feature . Example : Anne was explaining to Gretchen aspects of using the depart - mental bulletin boards . The explanation was not just about how to use the software to do a given task , but also about aspects of oﬃce procedure , such as which kinds of message it was appropriate to send to which bulletin board . Although it would be convenient for the purposes of analysis if learning episodes could be split into how - to issues of computer use as opposed to issues of oﬃce practice , rules and norms , this is not the case . Actual help does not conﬁne itself to one point in the topic dimension of Section 3 . 8 . Anne’s explanation to Gretchen about bulletin board options was as much about exactly when and why Gretchen might want to use the features under dis - cussion as about how to use them . Some discussions swooped over many levels of detail , from exactly which keys to press , to how to choose between options , to examples of oﬃce practice in which the technique has proved useful , a phenomenon also noted by Berlin and Jeﬀries ( 1992 ) : ‘‘Within minutes , conversations jump around multiple domains and levels as questions are triggered by the code itself , the mentor’s explanations and the physical actions of either participant . Discussions range from strategic , michael b . twidale 518 conceptual and procedural information ( e . g . what is broadcasting and how does it work ) , to historical notes , pointers to information sources , down to syntactic details , and side - trips to discuss commands or tools that would increase the apprentice’s productivity . ’’ 4 . 3 . A WORK TASK FOCUS MEANS A CROSS - APPLICATION FOCUS For the participants , major advantages of explanations from team members ( rather than from systems engineers or formal trainers ) were that the help was available as it was needed and that the helper would understand what it was that the learner was trying to do in terms of the oﬃce’s actual work . These are sound pedagogic reasons familiar to the advocates of construc - tivism and situated learning . In addition , the explanations were geared to the needs of the oﬃce rather than the capabilities of any given system ( Bannon , 1986 ) . It is tempting for systems developers to slip into a system - centric or functionality - centric mindset . However end users have an actual task they have to do . They have to ‘negotiate’ with the applications they have and the functionalities in those applications that they know about in order to get the best approximation to what they would really like to do . Work goals result in sequences of actions to achieve them ( Bannon et al . , 1983 ) . In order to solve a work problem , the help oﬀered may involve the use of more than one application . Example : Anne was explaining aspects of bulletin board use to Gretchen . The conversation moved between the interface to the bulletin board , the menu - based Telnet interface to the departmental information system of which the bulletin boards were a part , accessing a Unix prompt , using the Pico editor , as well as a passing mention of the use of the Pine email system that Gretchen was familiar with . No one piece of software could do what Gretchen wanted , nor was the new knowledge she needed conﬁned to a single application . It was not the case that she just needed to know how to integrate a new application into her armoury of familiar technologies . Rather , she needed to learn about rela - tively minor aspects of several pieces of familiar software that only in coordination would help her to do what she wanted . Example : Gretchen was explaining to Amanda how to send an attached ﬁle in Eudora . This involved explaining aspects of the Windows ﬁle browser dialogue box , naming and ﬁle format issues of WordPerfect , equivalent issues for other documents and comparisons with the Pine email system that Amanda was familiar with . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 519 Cross - application solutions are another reason that personalized peer help is so eﬀective . Even a radically redesigned online help system for a single application would be unable to oﬀer a multiple application solution . 4 . 4 . THE EMPLOYMENT OF RESOURCES AT HAND IN HELP GIVING Just as the screen , work documents and ongoing tasks can be appropriated to enhance a help giving interaction , so can other people . In the following extract Gretchen was explaining to Amanda how to use Eudora . { How to forward an email } G : If you wanted , I was going to say you can do it if you want to forward stuﬀ here , you can do that . Em . A : How do you do it here like . . . { Diﬃculty of linguistic pointing in a graphical interface } G : The red arrow , to the right with a little letter , up there , you won’t be able to do anything from there . A : Oh , OK . G : This is just coming to you . you could read it . But it , then you have to decide what you want with it . That’s your Inbox . A : Oh . G : Keep going to the right , to the right , to the right , to the right , whoa ! A : This one . G : No . That just goes in < inaudible > . Ahm . A : Oh . G : That’s Redirect . { The Redirect icon is near the Forward icon and looks similar . Amanda has clicked on Redirect and opened up a new sub - window } A : Oh , OK . What one do I really want ? G : . . . just close it . . . . to the left of that one . A : To the left of this one ? G : Of the one that you just opened . A : This one ? G : No , keep on left , left , stop ! See it says Forward . A : Oh . G : If you got that and you didn’t want to reply to but you wanted to give it to somebody else . A : OK . G : Then you’d type in whomever else you wanted to give it . ( Amanda types in Suzanne’s email address ) A : Suzanne is going to kill me . G : Suzanne is going to love this . A : Suzanne is the recipient of all my practice stuﬀ . michael b . twidale 520 Here and in other cases another person was recruited to help practice certain collaborative interactions with the software ( receiving , replying and forwarding email ) . The help giver may themselves need help and call others into the interaction . In a diﬀerent interaction , a question by Gretchen caused Anne ( at that time acting as the help giver ) to realize that she did not know the precise composition of certain bulletin board groups used in the department , and she called over to Amanda for advice on the point . This also illustrates that the roles of help giver and help - receiver are ﬂexible , and can switch direction – Suzanne , Anne , Gretchen and Amanda all both gave and received help from each other . 4 . 5 . PROBLEMS OBSERVED Even in this study’s near - ideal setting for facilitating OTSL , problems arose . The most visible was the diﬃculty for a learner to remember all the information being provided . In one episode , Gretchen resorted to taking laborious detailed written notes . Processes may need to be slowed down and repeated to help the learner memorize the exact sequence of steps . There is a substantial diﬀerence in the rate at which a learner can follow an overview compared to following and practicing a complex action sequence so that she is conﬁdent in being able to perform them unaided in the future . The free - form nature of the help given , ranging as noted between the tac - tical and the strategic compounds the problem . Somewhat mitigating this , it is possible to ask for the help again in the future – if potentially embar - rassing . Another problem is that it is quite possible that an icon is visually easy to distinguish from the others around it , and once its functionality is learned , is easy to remember , but yet remains a challenge to describe in words to tell a learner what to do . This point can be tested by trying to describe some of the icons in any application . Some examples from the study : ‘‘But you should have little dots’’ ; ‘‘OK , go to the very top of your screen , and there to the right of these little things look like button , em , like shoe laces , shoe lace holes , I don’t know what you call em . ’’ ; ‘‘You go up to your tool bar and see the arrow that points to the left . There’s a letter with the arrow that points to the left . ’’ Note that often the easiest way of describing the icon is by the name of the function it denotes . This works perfectly well for discussion between people who both know the system , but is useless in the case of the novice whose need is to know which icon allows her to do the action under dis - cussion . For such a novice , the response ‘‘Click on the Reply To icon’’ is completely useless . The episodes observed mostly followed the approved help giving style where the learner remains in control of the system and the helper talks them through ( e . g . Agre , 1994b ) . This is in contrast to the helper taking over the OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 521 keyboard , which although it usually leads to the task being completed faster , may render the learner incapable of replicating it . Although sound pedagogy , the helper’s verbal coaching is itself problematic . Indeed the interaction can at times degenerate into something reminiscent of a game show ; ‘up a bit , left a bit , no – back one . . . ’ . The lack of mutually understood terminology can be a hindrance , but participants can recover by directly pointing at the screen and talking about ‘that thing there’ . Although less clear , it is also possible to talk about processes by referring to action sequences just done as exemplars . That is not to say that more expert help givers do not or should not introduce new vocabulary . It clearly enables more eﬃcient conversations and ones that can also take place away from pointing at the device ( Orr , 1996 ) . However sometimes the number of new terms that would need to be introduced are just too overwhelming , when what is needed and expected is a brief help giving interaction so that the work task can be accomplished . The spontaneous nature of the help giving interaction means that errors will occur during it . The learner may accidentally click on the wrong thing , necessitating ﬁrst an identiﬁcation of what has happened and then a recovery . For example in practising sending ﬁles , Amanda accidentally sent one in an unreadable format . Although this might be a learning opportunity , it can just serve as an additional complication , a further distraction from the core learning . The advantage of OTSL is that when such errors occur , they are much easier to detect and remedy . As well as errors by the learner , the teacher may make pedagogical errors . In one episode , an explanation of some features of Eudora included a detailed description of how to include colored text in a message . Although an amusing feature , this does not seem crucial , and the time perhaps could have been better spent on teaching something more useful , clarifying the understanding of a topic already covered , or just cutting short the whole interaction and reducing the number of facts the learner has to assimilate ( Carroll , 1990 ) . With any help giving interaction observed , it is diﬃcult to resist the temptation to consider how it could be improved if either the help giver or learner were more knowledgeable about computing ( or indeed educational theory ) . However that is to miss the point . It is precisely because the help giver and learner feel an aﬃnity in that they are not computing experts but rather are experts in the tasks of the workplace , that makes the interaction as a whole work so well . If representative , these are the helping interactions that people do , and wishing that they all had advanced training in computer science and educational theory is pointless . It does though give an indication of skill sets for more eﬀective OTSL that might be taught , in addition to the technological interventions explored below . michael b . twidale 522 5 . Supporting theory and broader implications Taking the prior work and ﬁndings from the study and adding them to those of our earlier studies ( Crabtree et al . , 1997 ; Twidale et al . , 1997a , b ) , informal observations of practice and personal experiences of help giving and receiv - ing , we can begin to outline a ‘folk’ analysis of OTSL ( rather as ‘folk psy - chology’ and introspection were imperfect precursors of systematic scientiﬁc research ) . The aim is to inform both design and future , more principled studies . We can also draw on work from a variety of disciplines including educational theory and CSCL . This can help inspire future functionalities and interfaces to explicitly support informal learning of application use . 5 . 1 . THEORIES OF LEARNING AND INTERACTION The kind of learning that occurs in OTSL is brief , ad hoc , informal , strongly situated ( Lave and Wenger , 1991 ) , embedded in a community of practice ( Brown and Duguid , 1991 ; Wenger 1998 ) and ideally lightweight . These features need to be borne in mind when considering how aspects of existing applications aﬀord or hinder its operation . The ﬁeld of CSCL examines how collaborative technologies can be used to support learning of a given subject ( e . g . Roschelle , 1996 ; Koschmann et al . , 2002 ) . Of course in order for the learning of the subject to be productive , students must also learn to use the CSCL application . This prerequisite application learning can get overlooked in CSCL just as it can in CSCW research . Indeed in the literatures of both ﬁelds , discussion of the learning of how to use the application is inclined to be found in the methods part of evaluations rather than the results section ; the latter mostly concerned with post - learning use . Also , the majority of studies of learning computer applications have focused on initial learning ( e . g . Carroll , 1990 ) , somewhat neglecting the issue of how to support learning for incremental improvement . Eales and Welsh ( 1995 ) explore the idea of explicitly designing for col - laborative learnability . They emphasize the central importance of demon - stration to the success of the learning episode , noting that these are usually accompanied by a verbal commentary that serves to highlight signiﬁcant events . They develop design criteria for technologies to support this , focusing on the importance of making tool use visible , by capturing , storing and sharing activity . Although providing a clear overview of the issue , relatively little subsequent work seems to have explicitly addressed the issues outlined . OTSL is a form of one - to - one tutoring , and so can beneﬁt from analysis of this highly eﬀective ( Bloom , 1984 ) but extremely expensive form of pedagogy . Individualized explanations can be modulated , expanding on areas the re - cipient has diﬃculty with and abstracting over areas they are familiar with . For example the instruction ‘‘First , start up Microsoft Word’’ will be suﬃ - OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 523 ciently comprehensible , even an atomic act , to a conﬁdent computer user , but necessitate a complex sequence of elaborated substeps of careful mouse movements and time - critical button clicks to a computer novice . Additionally the teacher can ask questions and the learner can make comments to deter - mine if the level of detail should be changed . Simple glance , gesture and tone of voice can also convey this information . This saves the time of both learner and teacher , and can be contrasted with the diﬃculty of achieving equivalent ﬂexibility in help manuals and online resources . These are inclined to bloat as authors cannot assume a universal set of prior knowledge on the part of their readers . The more that is known about the learner’s prior experience and current understanding , the easier it is to tailor the interaction . This helps to explain the advantages of receiving help from people who know you well , even in preference to people who know the application under discussion better ( Lang et al . , 1982 ) . Also , the more that is known about the work context and the underlying reasons for the initiating request , the easier it is to develop a workaround . This might involve using a quite diﬀerent application than that which initiated the help request , or might involve combining several applications to produce a satisﬁcing result . Many OTSL interactions employ the pedagogical technique of scaﬀolding ( Rogoﬀ , 1990 ; Quintana et al . , 2002 ) . This can include slowing interaction , breaking the problem down , managing parts of it , reifying it and providing a running commentary on the meaning of various sub - steps . By so doing , the teacher is providing a supportive learning environment by reducing the number of things that the learner has to think about , permitting a greater focus on sub - parts of the learning task . The support may be in the form of traditional apprenticeship , where the expert makes the strategic decisions and the novice concentrates on implementing them . The support may also be the opposite , with the novice making the strategic decisions and the expert implementing them . In either case , the aim is to gradually fade the support so that the learner will be able to achieve the whole task unaided . The concept of scaﬀolding is evolving beyond what a person does to what a technology does ( Reiser , 2002 ) . In addition to the conventional scaﬀolding provided by a single teacher , another , even more social form of scaﬀolding is possible , where the wider work context is exploited to support the learning . The OTSL approach is also a socio - technical microworld ; a supportive learning environment where the learner is freer to experiment because she is protected from the undesirable consequences of incorrect actions , or where those actions are easier to recover from ( Papert , 1987 ) . Along with scaﬀolding , the idea of microworlds is closely related to Vygotsky’s Zone of Proximal Development ( Vygotsky , 1986 ) . Even a helper just standing by , not saying anything can create a microworld - like environment , since this presence can reassure the learner that if he were to do anything potentially catastrophic , the helper would intervene and prevent it . If the learner makes an error , he can michael b . twidale 524 more conﬁdently explore trying to recover from it , knowing that the helper is on hand to intervene and prevent or unwind the classic problem of a bewildering sequence of errors precipitating erroneous recovery attempts , which in turn must be remedied . Thus the presence of a helper can encourage risk - taking , exploration and experimentation , and consequently learning , even in cases where the helper appears seems to be saying or doing nothing . Hutchins ( 1990 ) in his work on distributed cognition shows how techno - logical devices are better seen as media for representation than as ampliﬁers or surrogates for cognitive abilities . He notes how diﬀerent representations using diﬀerent technologies can transform a problem so that it is easier for people to solve . We can look to innovative interface design to tackle the same kind of problem . This is not to automate the problem solution . In re - representation , the person is still involved in the problem solving activity , but makes use of diﬀerent representations and interfaces to make the problem easier . Hutchins also notes that the nature of tools aﬀects their suitability for supporting interaction and hence learning . An open tool makes much of the work visible and so open for the detection of errors ( or for raising questions by learners ) and provides a forum for discussion . External representations , particularly graphical representation , are known to be helpful in supporting reasoning and learning . Scaife and Rogers ( 1996 ) provide a good overview , while noting that that the details of exactly how graphical representations work are still unknown . An external representation can reduce working memory load , freeing up cognitive resources for reﬂec - tion and deeper analysis . This approach leads to diﬀerent ways of viewing a computer applications and its interface – not just as a communication medium but as an external memory ( Card et al . , 1984 ) , as a cognitive tool ( Lajoie and Derry , 1993 ) and as a way of providing alternative visualizations of aspects of a domain that can then serve as a conversational resource ( Van Bruggen et al . , 2002 ) , as considered below . The consideration of interfaces as conversational resources has links with activity theory ( Bannon and Bødker , 1991 ; Favorin , 1995 ; Collins et al . , 2002 ) . In particular , Kaptelinin ( 1996 ) explores how collaborative systems mean that computer interfaces can be both individual artifacts and group artifacts , viewed as part of a wider context of human interaction with com - puters . Computer applications , along with other artifacts , are regarded as mediators of human activity ( Bertelsen and Bødker , 2002 ) . Furthermore , applications can mediate several diﬀerent activities , sometimes simulta - neously . In the case of OTSL these include : • Achieving the main aim ( or object ) , such as informing a team of an important issue by sending round a memo by email . • Explaining the nature of the help - seeker’s diﬃculty with how to do part of this task to the help giver ( pointing at the screen to indicate that the help - seeker is confused about how to send the document containing the memo ) . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 525 • Using one or more applications and their interface features in order to talk about how to solve the problem ( such as the ‘attach document’ feature in the email program , and the Windows ﬁle browser ) . • Explaining to the help - seeker exactly how to achieve the desired sub - task . The review of theoretical approaches for HCI by Rogers ( 2004 ) brings together these themes of distributed cognition , activity theory and external representations . The literature on knowledge management is potentially relevant , though as Orlikowski ( 2002 ) notes , this can too often focus on knowledge as static elements or facts that can be collected and shared around . She proposes considering ‘‘knowing how’’ and practice to be mutually constitutive so that the key issue is to support learning by doing . This reinforces our desire to support OTSL rather than to automate it . Trauth and Cole ( 1992 ) propose the organizational interface as a way of integrating HCI , management information systems and end user computing approaches to user support . The framework is used to show that problems can be solved by approaches that use organizational forms of support to enhance or even substitute for the existing user interface , enabling the consideration of tradeoﬀs between can - didate technological and organizational solutions . The organizational inter - face can be viewed as a ‘social wrapper’ for facilitating local tailoring and learning . The framework explicitly acknowledges informal peer support as a key component of the overall support mix , as well as the importance of managerial encouragement for diﬀerent support activities . This work paral - lels that of Grudin ( 1993 ) in his advocacy of enlarging the notion of the user interface . In addition the activity of OTSL can be considered a form of Schmidt and Bannon’s ( 1992 ) articulation work , and hence the importance of developing tools to support it ( Bannon , 1992 ) . Another research area that seems to have many interesting parallels with OTSL is the Reference Interview in Library and Information Science ( e . g . Bopp and Smith , 2001 ) . The analysis of the interaction between a patron and a librarian reveals many complex moves and techniques . Most relevant to OTSL is the consideration of how to move from what the patron initially presents as her request to diagnosing the underlying need and so to the most appropriate kinds of help and information . The ethnographic work by Ehrlich and Cash ( 1999 ) links this setting back to methods and analysis more familiar to CSCW researchers . Even if they are not expert computer scientists or expert educators , people appropriate features in order to aid their teaching and explaining . Even something as simple as moving a mouse means something diﬀerent when an extra person is present . It may be a way of directly interacting with the interface , or it may be a way of drawing attention to diﬀerent parts of the interface as these are discussed . Similarly a window or other graphic element may be moved or jiggled around to emphasize it as the current focus of the michael b . twidale 526 ongoing conversation . As Brown and Duguid ( 1991 ) describe Orr’s ( 1996 ) service technicians’ use of bricolage ( Le´vi - Strauss , 1966 ) during problem diagnosis and solution activities , so we can think of these pedagogic appropriations as another kind of bricolage ; partial , ad hoc , but quick and easy to incorporate into ongoing activity . 5 . 2 . DEMONSTRATIONS AND RHETORICAL INTERFACES A demonstration is a pedagogic method often used in a help giving inter - action ( Eales and Welsh , 1995 ) . Demonstrating is diﬀerent from doing . When doing , one usually wants to be as fast as possible . That may not be appro - priate when demonstrating . The speed of the interaction may be slowed or modulated in order to make certain steps more visible to the learner or to give extra time to the accompanying verbal commentary . Certain features of an interface optimized for use may become rather clumsy during learning . Graphical interface elements and actions sequences may be diﬃcult to ver - balize without a mutually comprehensible abstract language . Actions requiring such precise combinations of clicking and dragging ( e . g . resizing columns in Microsoft Excel ) are also more prone not merely to fail when attempted by the novice , but to cause additional , undesired eﬀects . Time critical interactions can be harder to demonstrate ( indeed , that is why sim - ulators for time critical interfaces such as for vehicles , aircraft and power plants are particularly useful – in addition to concerns of safety ) . Even the interfaces of oﬃce - like applications may have temporal aspects that can cause problems during demonstrations . For example , a system may have a timeout feature ( for security purposes ) , that is triggered inadvertently when demonstrating and talking . A demonstration may also involve a certain amount of exaggeration of the actions in order to make the learner aware of them . A subtle action may be eﬃcient , but much harder to demonstrate . Demonstrations are usually accompanied by verbal commentary . The actions ( interactions with the system ) may be used to illustrate the talk rather than the talk to illuminate the actions . This implies that we need to consider the rhetorical aspects of collaborative interface use . The demon - strator may be pointing with the mouse or dragging items on the screen , not in order to tell the computer to do something , but in order to tell the learner how to do something . Of course we haven’t told the computer that , and so the system may interpret a rhetorical action as an interaction . This can lead to confusions reminiscent of those Suchman ( 1987 ) noted when the plan recognition system in a photocopier got out of synchronization with what the users were doing and their interpretations of its supposedly helpful but actually misleading responses to their actions . In the case of OTSL the problem is not the diﬃculty , impossibility or inadvisability of automated plan recognition , but rather that the attention of the two participants is OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 527 more on interacting with each other and using the system as a resource to show things to each other rather than to interact solely with the system through the interface . The work on the use of telepointers for gesture ( e . g . Hayne et al . , 1994 ) is useful to consider here , even in the context of same - time same - place collaborations . 5 . 3 . INDIRECT HELP AND INDEXING An extremely abstract indirect case of help giving is where the interaction is entirely about making the recipient aware of the existence of a functionality , with no attempt to explain how to achieve it . Such an existence help ‘explanation’ need take no more than a few seconds , saving the time of the help giver and encouraging the altruistic volunteering of information and the introduction of the topic into informal social chat ( the coﬀee machine phe - nomenon ) . Information about the existence of a feature places the onus on the recipient to investigate how to apply the feature , using other techniques such as exploration , manuals , online help , etc . , but they have been given the clue that the feature is in the application somewhere . Thus eﬀort expended in the search for the feature is not wasted , unlike the case where the searcher does not even know if what is desired is possible , and thus at some point needs to decide when and whether to abandon the search . A noted diﬃculty with creating help indexes is that people may call the same thing by many diﬀerent names . Even choosing the most popular term may still mean that as few as 20 % of potential readers would think of calling the action by that name ( Furnas et al . , 1987 ) . Thus a slight extension of existence help can be simply translating the desired action from the work task vocabulary into the names of appropriate operations in the application ( s ) . This very short interaction means that the online help or user manual can now be productively used in the traditional solitary manner . The help giver here acts as a context - speciﬁc indexer into other help resources . O’Malley ( 1986 ) explores this issue of a colleague acting as an intermediary to help someone ﬁnd the answer to their technical problem in other resources such as manuals and online help . A variant of this approach is the Toolbox system ( Maltzahn and Vollmar , 1994 ) which provides awareness information of the use of tools within a work community , enabling users to ﬁnd out who is using a tool which might be of use to them . 5 . 4 . TALKING ABOUT INTERFACES : IS IT EASIER TO TALK ABOUT UNIX THAN WINDOWS ? One of the problems noted in the study was the diﬃculty that can arise in talking about computer use , even under the seemingly ideal circumstances of talking around the same display . It almost seems to be an ‘anti - aﬀordance’ of michael b . twidale 528 graphical user interfaces ( GUIs ) , with respect to collaborative learnability , usually compensated for by the ease of pointing to recover shared reference . Although GUIs may be easier to learn on one’s own , do textual user inter - faces have certain aﬀordances for learning from another person ? Current GUIs are designed to help a new user learn how to use the system on her own . There does seem to be a problem when trying to explain to a colleague in words what to do with the mouse , the pointer on the screen , the mouse buttons and the keyboard . This is exacerbated when these elements have to be coordinated in a time critical way ( consider the problems that some mouse novices have with the process of double click - ing ) . Why should this explanation be harder for a graphical user interface than explaining how to use a textual interface ? Once articulated the answer is clear – the medium is diﬀerent . Talking about a textual user interface is easy , you just say the command words . Conventions do still have to be established for the names of certain characters ( ~ is pronounced ‘‘tilde’’ , etc . ) as well as for formatting ( such as when to insert spaces into a complex command ) . Likewise , written text describing what to do with a textual interface is relatively easier to understand than text trying to describe use of a graphical user interface . Indeed some of the bulkiness of current manuals and how - to books can be ascribed to the need for multiple screenshots to show the sequence of what must be clicked and dragged – a means of explanation that can consume much more space than textual descriptions of textual commands . A Unix command window by contrast provides a scrolling list of com - mands already issued . This helps to keep a sense of at least some larger context of the interaction as a whole . The history command provides even more detail for recapping , re - use and modiﬁcation . As a result , the process of even remote help becomes relatively easy . The help seeker can recover what he has tried so far with history , read it out or copy and paste it into a text communication such as email , the help giver can test a solution on her computer and then again use history to copy and paste this solution back , even editing it or interspersing it with text comments as needed . Finally the recipient can copy the commands out of the email and paste them directly into the command line . The aﬀordances for collaborative learnability of Unix in the scenario just outlined are its terseness , its one - dimensional textual format enabling the eﬃcient listing of command sequences , and the ease of copying and pasting it into existing lightweight text based collaborative technologies such as email , instant messaging , bulletin boards etc . By contrast the same terseness and manipulability of text based commands are anti - aﬀordances for indi - vidual learnability ( Norman , 1981 ) . GUIs support a very rich visualization both of what has just been done and of the many things that might be done next , but relatively little support for the visualization of action sequences as OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 529 a whole . Nor do they support easy saving , sharing editing and replaying . The equivalent interaction in GUI would involve either laborious copying and pasting of screenshots or the creation and sharing of interaction movies , neither of which can currently be ‘pasted’ back into the GUI as a set of commands . Also , such an interaction is harder to integrate with current lightweight low eﬀort collaboration technologies ( email , messaging , etc ) . Thus the success of textually mediated technical help giving Usenet newsgroups ( e . g . Lakhani and von Hippel , 2003 ) , as well as purpose - built help tools such as Ackerman’s Answer Garden , may be ascribed as much to the nature of the interface being discussed ( e . g . the conventional Unix command line interface , or a set of textual commands in a preferences ﬁle ) as to the expertise of the participants . Unfortunately , Unix is mostly used by more expert computer users so the two factors are hard to tease apart . An exploration of help in more text based environments such as MOOs ( Bruckman and De Bonte , 1997 ; O’Day et al . , 1998 ) would help clarify this issues . With any operating system , a help - seeker may go to a help giver’s desk and receive an explanation that they understand , but then be confused that they can’t replicate the solution on their own machine . This frustration can be due to diﬀerences in setup and customization that the help giver did not consider or was not aware of . Another round of problem - solving is then required to enable the solution that works in the context of the help giver’s environment to also work in the help - seeker’s environment . It would be helpful to be able to automatically determine the diﬀerences between the two contexts that might have led to the incompatibility . Again , Unix has some useful features that can address this problem , for example a diﬀ command on the two . cshrc ﬁles to reveal some conﬁguration diﬀerences . The fact that conﬁguration ﬁles are textual and easily accessible to Unix users aﬀords recontextualization of help . It would be helpful do be able to do the equivalent with the complex preferences and settings of GUI applications such as MS Word . It is ironic that the text - based interface to Unix has so many features that seem to aﬀord collaborative learnability , given its reputation as an operating system mostly intended for power users and somewhat daunting for novices . It certainly has many features that inhibit individual learnability , and we are not aware that the features outlined above were explicitly provided to address learning needs , but nevertheless they can be so appropriated . There also seems to be very little discussion about the degree to which the users of Unix learn their skills individually or collaboratively . We believe that further study of this issue can also serve as ( indirect ) inspiration for enhancing both individual and collaborative learnability in GUIs . michael b . twidale 530 5 . 5 . RE - THINKING INTERFACE DESIGN IN THE LIGHT OF COLLABORATIVE HELP GIVING In conventional interface design , designers ask themselves questions such as ‘‘How can we improve this interface so that it is easier for the user to work out how to do what she wants to do ? ’’ . In design with a sensitivity to OTSL there is an additional question : ‘‘How can we improve this interface so that it is easier for the user to ask and receive help from someone else on how to do what she wants to do ? ’’ Do these two design questions yield diﬀerent solu - tions ? That remains to be seen , as does the question of how we might make trade - oﬀ decisions between them . It is likely that many of the technologies developed to support OTSL will also support individual learning . However this will not always be true , nor will the reverse ; that technologies to support individual learning will also adequately support OTSL . In either case , it raises the importance of bringing expertise in collaborative technologies to the design of interfaces . 5 . 6 . HUMAN – HUMAN – COMPUTER INTERACTION Much HCI research initially focused on the interaction between an individual user and a computer system via the interface . The advent of the research areas of Computer Mediated Communication , CSCW and CSCL has broadened this concept to include the use of computer systems as a medium via which people interact with other people ( Bannon , 1992 ) . This can involve aspects of conventional interface design ( interacting with the system in order to be able to interact with people ) as well as new kinds of media and inter - faces to support human – human interaction . This latter draws on research in areas such as communications , social psychology and business practice for insights into how to improve the quality or eﬃciency of these interactions . CSCW research in co - located collaboration includes the use of shared whiteboards and other kinds of hardware ( Mynatt et al . , 1999 ) , as well as conventional computer displays ( Stewart et al . , 1999 ) . In these cases the focus is on how people already co - located either around a desktop , or moving to appropriate technologies available in an advanced meeting room ( Streitz et al . , 1998 ) , can have their conventional interactions augmented by the provision of advanced technologies . In human – human – computer interaction ( HHCI ) , ideally the bulk of the attention and cognitive resources of the people is devoted to interacting with each other , not primarily to interacting with the computer . More ambient or calm ( Weiser and Brown , 1998 ) tech - nologies or interfaces are likely to be better able to support such kinds of interaction than current complex but powerful technologies that demand considerable , even undivided attention to use well . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 531 5 . 7 . METAPHOR : WINDOW OR WHITEBOARD ? In HHCI , the interface design task is less to support the interaction between the user and the system than to support the interaction between the users . The technologies and especially the interface serve as a notation , or a reiﬁ - cation that is used as a resource in the clarifying dialogue between the human participants ( Lajoie and Derry , 1993 ) . Where reiﬁcation is used in such cir - cumstances to support not just individual reﬂection but also discussion , it addresses Wenger’s concern to treat reiﬁcation and participation as a duality ( Wenger 1998 , p . 63 ) . This view of interface as notation or reiﬁcation leads to a diﬀerent kind of metaphor – instead of the screen as a window onto the data and its manipulation , or a window through which to collaborate remotely with others , we should ( also ) consider it as a kind of dynamic , interactive whiteboard – a resource for discussion with another person . Taking Grudin’s ( 1993 ) call to reassess our understanding of ‘interface’ to include amongst other things , other people , we can also consider interfaces as rhetorical media for facilitating human – human interaction . 5 . 8 . LIGHTWEIGHT INTERFACES FOR LIGHTWEIGHT INTERACTIONS Help givers make use of the application’s interface , simple physical objects such as pens and sticky notes , and even use colleagues to assist their expla - nations . If we are to try to provide CSCW systems , features or options that improve on these resources , what we produce must also compete on the eﬀort - beneﬁt trade - oﬀ . Unfortunately OTSL episodes are necessarily ad hoc and are hopefully brief . This means that powerful but complex resources may just be ignored in preference to the simpler ones that enable the user to concentrate on the task at hand . Using a video camera can be useful in teaching ( it is used extensively in music and sports education ) , but in a 10 - min informal interaction , it is not worth the bother of ﬁddling with complex equipment . This reluctance can be contrasted with using the same computational technology to produce help demos to be made available to many users . In that context , the work is expected to take longer , and there are expectations of a higher quality product than in an informal interaction . The extra cost can be discounted over many beneﬁciaries . Thus it is worth investing the time and eﬀort in using a sophisticated tool . There is a need for what might be called ‘lightweight interfaces’ . The name tries to capture the nature of the design challenge – that use should be as easy as grabbing a pen and sticky note . Unfortunately it also captures the problem with working on this task – that it may be regarded as beneath the attention of skilled designers . Most of the kudos in software design goes in developing powerful and sophisticated functionality . Interface design work comes a poor second in trying to mitigate the complicating eﬀects of this functionality . michael b . twidale 532 Design of lightweight interfaces , involving conscious decisions to limit functionality in the interests of simplicity may come even lower . Such an approach is in many ways the computational equivalent of part of Carroll’s ( 1990 ) work on minimal manuals . The challenge is to consider how research from CSCW can be applied in this context of micro - collaboration , where the goal is to preserve the brevity , ﬂexibility and somewhat ad hoc nature of the interaction . The pilot study reinforced how much work and learning may interleaved and indeed interrupted by each other . As such the learning activity is just like other computer based work activities in a busy environment , where designers need to be aware that they should be designing systems to support people working ( and now learning ) with constant interruption ( Rounceﬁeld et al . , 1994 ) , and the need to easily resume their learning activity once the inter - ruption is over . The simpliﬁed assumptions of single focus that can inﬂuence systems designers and laboratory testing are equally inappropriate in designing to support collaborative help giving ( Bannon , 1991 ) . 6 . Implications for design Drawing on the work cited and the pilot study we can begin to consider the design of systems , functionalities and interfaces that might improve the process of OTSL . Our aim is to show how even a relatively small analysis of the issues involved in OTSL can lead to a variety of interesting avenues of study and development , leading to new considerations of how technologies can support this particular kind of collaborative interaction . There are several open design challenges : • Is it possible to design to actively support informal collaboration ? • If not , is it at least possible to design to minimize impeding informal collaboration ? • What might we provide that people could select , compose and innovate with , in order to address their unique needs for particular informal collaboration contexts ? • How might we design to support informal collaborative learning of application use ? • How might we design to support informal collaborative learning in general ? These questions may seem impossibly vague or impossibly ambitious , so it is worth noting that by a co - evolutionary process of design and end user appropriation and innovation we already have developed applications that support informal collaborative interactions , such as email , bulletin boards , text messaging , blogs and wikis , that are appropriated for learning . Similarly , existing applications are being used in OTSL interactions whether we do anything to support it or not . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 533 The ad hoc nature of much informal learning means that at times partici - pants appropriate features of their environment ( which might include the screen , pen and paper , or other people ) turning them into pedagogic tools . This issue is raised by Wenger in his exploration of the duality of the designed and the emergent as part of the challenge of designing for learning ( Wenger 1998 , p . 231 ) . Even tools intentionally designed for collaborative learnability will be used in surprising ways . It is unlikely that we can ( or even should ) try to produce an integrated toolkit at this stage of our understanding . No current ‘design for OTSL’ could support an activity that is not merely complex in its own right , but is so strongly enmeshed in the larger complexities of workplace practice . But nor is this a reason to give up . Even if we are unable to specify exactly what should be built , we can note features that can get in the way of collaborative learnability and set an agenda for the construction of systems that have the potential for exploring issues such as those outlined in this paper . There are diﬀerent approaches . One involves the design of application - independent OTSL resources that can be used with any unfamiliar applica - tion in order to help the user learn or improve by asking and receiving help . Another is to make changes to the design of all applications so that they have a sensitivity to the existence and needs of OTSL . As well as support during the help giving interaction , it is important to consider designs that aﬀect activity before and after it . Both have received attention by various researchers , as noted earlier . For simplicity , in this paper we just focus on support during the interaction . One key motivation in any design must be to reduce the cost of OTSL . Even its strongest supporters must acknowledge that it is very labor inten - sive , taking up the time of both the help giver and the help - receiver . A technology that can reduce the length of an interaction from say half an hour to 5 minutes would clearly be beneﬁcial . In the absence of such design changes , OTSL is in danger of being regarded solely as an expensive invisible overhead of computer use ( Ko and Hurley , 1995 ) . 6 . 1 . CAPTURE AND VISUALIZATION OF CONTEXT When giving help to a close colleague , much contextual information is available for free . However even here it is useful to know what they have done so far , why , and what they wanted to do . Asking the learner is problematic ; she may ﬁnd it diﬃcult to remember exactly ( since confusion is often the reason for asking for help ) , or she may lack a vocabulary for describing what she did at any manageable level of abstraction . The learner may not remember ( or even have noticed ) any errors made along the way ; people naturally autocorrect . Prior actions may involve a sequence of errors and attempted corrections adding to the complexity of the current system state and of the learner’s confusion . It would be useful to be able to record what has been tried michael b . twidale 534 and be able to provide this information in an easy to understand visualization . A transcript is not suﬃcient because these can be very long , particularly in the case of a doggedly determined learner who then may claim in response to almost any suggestion : ‘‘But I already tried that and it didn’t work’’ . It seems we need a visualization of the process of using a computer system . That often means a visualization of the process of using a graphical user interface . One could just record the whole interaction and play it back like a movie . Indeed systems such as Camtasia Studio ( produced by TechSmith ) already provide such a functionality . The potential of animated interaction sequences and associated annotations is explored further by Oppermann and Thomas ( 1995 ) . However , animation may be insuﬃcient for reifying and thus scaﬀolding a discussion about process , since it can only show a sequence of steps , not all the steps at once as a single abstraction that should be chunked together , thought of as a whole , or pointed at . The Unix history command is an example of a text - based representation of the process of text based interaction . It is relatively straightforward and as a result is a simple but surprisingly powerful user support tool ( Lee , 1992 ) . Bannon et al . ( 1983 ) examined user annotated histories as a way of under - standing the interaction between users’ goals and actions . This study showed how complex histories can become , because users frequently have multiple tasks on the go at once and switch between them . It also showed how users perceive their work as a set of interleaved tasks , each consisting of a sequence of interactions with the system . Unfortunately , systems rarely have a way of explicitly representing this chunking of actions . We have explored the development of graphical representations of the process of interaction with text - based interfaces , speciﬁcally Telnet - based connections to library cata - logues and bibliographic databases ( Twidale and Nichols , 1998 ) . The graphical representation allows for interesting ways of visualizing activity over time , both actions and their results , and providing the abstraction features that history lacks . Such an externalized history visualization sup - ports not just analysis by the helper of what has been done by the learner , but can serve as a focus of discussion , a reiﬁcation , about what has been done , what it means and what might be done next , or instead . The next stage is to consider graphical representations of the process of using graphical interfaces . Derthick and Roth ( 2001 ) explores this within a single application , enabling the exploration of alternative attempts . Even after building such a system , it is still necessary to consider issues of privacy and ownership . The system is recording a user’s activity . To be really eﬀec - tive , it should be on all the time , constantly recording all activity and destroying the record after a suitable interval . This is needed because the user will not be able to predict that a problem will occur and it helps the future help giver to know what had occurred up to the point when the problem was identiﬁed . Clearly such a system and its use will need to be both trusted and OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 535 shown to be useful before users will be willing to sacriﬁce their privacy ( even if it only records the details onto their own hard drive ) . As well as supporting diagnosis of prior actions , a history visualization can also be useful as a memory aid for the learner after the completion of the help giving interaction , minimizing the need for laborious note taking or memo - rization . Records of explanations once made can in theory be re - used , fol - lowing for example the approach in Answer Garden ( Ackerman and Malone , 1990 ) . A helper , seeing a classic problem , may pass on a pre - recorded explanation and tell the recipient to try it ﬁrst , with the oﬀer of additional help if that does suﬃce . In the same way that a user asking for help on a Usenet newsgroup is expected to ﬁrst read through the FAQ , a suitably indexed set of preserved OTSL episodes may be made available . These are all mechanisms to reduce the time costs of the helper ( but not necessarily of the learner ) . Such re - use is not necessarily trivial , and would need further study and the development of appropriate tool support . For example , an expla - nation created on the spur of the moment for one person , may need some tidying up ( analogous to refactoring in object - oriented programming ) before it is of use in a new , less focused context . 6 . 2 . SUPPLEMENTAL INTERFACES : MAPS AND ANNOTATIONS With larger displays , multiple displays ( Grudin , 2001 ) , or the possibility to incorporate portable small displays such as cell phone or PDAs ( e . g . Myers et al . , 1998 ) , it become reasonable to explore the provision of additional interfaces to support use of a main interface . During learning and problem solving , an additional interface may be helpful to support discussion , and to provide externalizations or reiﬁcations of meanings that are only implicit in the interface . For example , in explaining how to create , edit and upload a web - page , a schematic illustrating the process may help to make sense of what otherwise can seem a rather arbitrary sequence of steps using one or more applications . Also , a representation analogous to the sitemap of a complex website that can be pointed to or annotated can be useful as a guide , commentary or roadmap of an application’s complex hierarchy of menu and dialogue box options . This map could sit alongside the ‘real’ interface that is used for enacting the steps . The work of van der Meij and Gellevij ( 1998 ) on the roles of screen captures in paper docu - mentation is a rare analysis of the issue and one that can also be brought to the design of supplementary map - like interfaces to guide learning of the main interface . The consideration of interfaces as rhetorical devices for HHCI raises the question of whether annotations should be attached directly onto the inter - face . Perhaps this could be done by pulling down a metaphorical clear crib sheet over the interface onto which textual and graphic annotations can be michael b . twidale 536 made , and through which click actions do not penetrate to the real interface to accidentally cause unintended real action . This would also be somewhat analogous to merely touching a real button as part of an explanation of when to use it and not actually pressing it . Alternatively we might explore ‘ripping out’ elements of the interface into a separate scrapbook interface to be used for talking about using the real interface ( Huang et al . , 2005 ) . In the physical world , we have various mechanisms for indexing into complex information resources . We attach bookmarks , labels and sticky notes to books , but also to items of technology such as VCRs . In using an interface , it may be useful for a learner to be able to attach a note to a menu or button , reminding her of something that the helper said . The design challenge here is the very limited space available for such an attachment . Interfaces are complicated anyway ( that is why we have to ask others for help ) without adding a host of additional annotations . Clement ( 1990 ) includes a design suggestion reminiscent of Hill and Hollan’s ( 1994 ) read wear , where menu choices commonly used by others are emphasized . The resulting usage patterns can then be used as information for a recommender system to suggest who to ask for help ( Linton et al . , 2000 ) . 6 . 3 . MICROWORLDS AND UNDO When learning it can be helpful to switch from work mode to a microworld - like practice mode . The absence of such a feature can impair learning . For example , if there is no practice mode in using a database , the learner may be very reluctant to experiment adding , deleting or modifying live data . A microworld can contain non - critical ﬁles and data that the learner can manipulate as if they were real ones , without the consequences of doing it for real . Ideally resources should be provided that can be assembled and tailored to the particular learning need , and then available for subsequent re - use and re - tailoring . In the study , there were instances of bringing colleagues in to form a social microworld to practice email messaging . Although very desir - able , in cases where this is not feasible , we can envisage the creation of a practice mailing agent that can be asked to send diﬀerent kinds of messages , do replies and other activities to enable practice of the interactive aspects of the system’s features . Similar practice issues arise in creating microworlds for database use , workﬂows , or any arbitrary CSCW application . When helping a colleague , it may ﬁrst be necessary to help her recover from the numerous activities that she has undertaken to try and solve the problem herself . Coupled with the contextual capture features described above , a powerful , multi - level undo feature ( e . g . Prakash and Knister , 1992 ) would be a very eﬀective means of minimising the costs of this preparatory phase of an OTSL interaction , as well as facilitating greater exploratory learning . Thimbleby ( 1990 ) and Dix and Mancini ( 1997 ) consider the OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 537 implications of sophisticated undo features . Given the importance of multiple application use we also need to support cross - application undo . 6 . 4 . CROSS - APPLICATION SUPPORT The oﬃce study revealed the cross - application nature of the participants’ work and learning needs . This requirement that a system to support OTSL should accommodate solutions that jump between applications adds to the complexity of the design , and for many functionality options requires access to the operating system . Lest this seem too daunting , note that in this pilot study and conﬁrmed in our subsequent work ( Twidale and Ruhleder , 2004b ) , we found that people exploit the clipboard to enable very sophisticated workﬂows by very simple uses of copy and paste . The challenge is whether additional functionalities can be developed that can extend the power of this simple but elegant approach . 6 . 5 . REMOTE HELP : OVER THE VIRTUAL SHOULDER ? The chief focus of this paper is on co - located synchronous interactions . We have shown that even in this relatively simple and probably ideal case , problems arise in the interaction that create a research agenda for developing systems to support more eﬃcient operation . However remote synchronous and asynchronous support already exists in such forms as telephone hotlines ( Pentland , 1992 ) , technical support ( Paepcke , 1996 ; Tang , 1999 ; Mamykina and Wolf , 2000 ) , remote reference ( Sloan , 1998 ) and mailing lists , bulletin boards , etc . Can we improve their eﬀectiveness by incorporating some of the ﬁndings from studying OTSL ? We must acknowledge that remote interaction is even harder , adding yet more problems even to those identiﬁed with co - located OTSL , since remote help lacks the ease of determining and main - taining context . Various CSCW technologies can be used to support informal communica - tion , including video , shared screens , telepointing and ways of establishing a richer context of use ( Isaacs et al . , 1997 ) . Remote synchronous support in - creases the number of potential help givers , at the expense of loss of context . Remote asynchronous support further increases the number of potential helpers , but further reduces context . Both oﬀer some cost savings for the helper at the expense of the convenience of the learner . Nevertheless both can be useful , particularly in the case of complex problems where no - one at hand can help . Again , the challenge is to try and build back in context in order to speed up the interaction , particularly in cases of peer help , where it cannot be assumed that the help giver is an expert in how to help , and so may need some assistance and structuring ( Kumar et al . , 1999 ) . Just importing existing CSCW applications or toolkits to address this particular collaborative need is unlikely michael b . twidale 538 to be suﬃcient . In any case , it is important for developers of remote help systems to note that aspiring to design systems that are ‘as good as being there’ may not be suﬃcient . As we have noted , sometimes being there isn’t that great . 6 . 6 . ORGANIZATIONAL DESIGN IMPLICATIONS Finally , it should be acknowledged that the most signiﬁcant changes are likely to be managerial and organizational rather than technical . Wenger ( 1998 ) for example chieﬂy focuses on design for learning at this higher organizational level rather than in terms of tool support . If workers feel that they do not have permission to invest time in informal learning and teaching , they will at best only do it surreptitiously . Helping colleagues needs to be recognized as valuable work , rather than undesirable overhead , ‘indulging’ in activity that should be left to professional trainers . A useful analogy is the way that in manufacturing , participation in quality circles is viewed positively rather than as time wasted by amateur quality experts who should spend all their time on the production line , and leave quality improvements to pro - fessionals . The skills of help giving and asking for help can be explicitly taught ( Agre , 1994a , b ) as a way of improving the eﬃciency of the interac - tions , which is just as important as the technical ways outlined . 7 . Conclusion Although the importance of informal collaborative learning of computer application use is well known , relatively little attention has been given to the process of how it works in face - to - face interactions and how it might be en - hanced . This paper , drawing on work in a variety of ﬁelds , has attempted to sketch out ways of analyzing the phenomenon as a means of informing sub - sequent research in the development of features to actively support diﬀerent kinds of informal collaborative learning . The approach implies a diﬀerent perspective on interface design , considering the development of features to support human – human interaction , particularly pedagogic interactions . This involves using the computer screen as a shared resource to support these hu - man – human interactions , rather than focusing solely on the use of the interface as a medium through which the user interacts with the computer . This implies that CSCW researchers can contribute to usability design , since all computer systems should be considered as being ( at least temporarily ) collaborative applications . Also all users of CSCW applications have to learn how to use them , and this can and should have a collaborative aspect . However both these intersections of CSCW and learning create additional challenges since col - laborative help giving is , at its best , ﬂuid , ﬂexible and fast . Consequently , CSCW tools to support OTSL will likewise have to be fast and lightweight . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 539 Acknowledgements I would like to thank Madonnalisa Gonzales for her work in observing and videotaping during the study , and Karen Ruhleder , Liam Bannon and the anonymous reviewers for many helpful comments on earlier drafts of this paper . This paper is in part based upon work supported by the National Science Foundation under Grant No . 0081112 . References Ackerman , M . S . ( 1998 ) : Augmenting the Organizational Memory : A Field Study of Answer Garden . ACM Transactions on Information Systems , vol . 16 , no . 3 , pp . 203 – 224 . Ackerman , M . S . and E . Mandel ( 1999 ) : Memory in the Small : Combining Collective Memory and Task Support for a Scientiﬁc Community . Journal of Organizational Computing and Electronic Commerce , vol . 9 , no . 2 – 3 , pp . 105 – 127 . Ackerman , M . S . , V . Pipek and V . Wulf ( 2002 ) : Sharing Expertise : Beyond Knowledge Management . Cambridge , MA : MIT Press . Ackerman , M . S . and T . W . Malone ( 1990 ) : Answer Garden : A Tool for Growing Organizational Memory . Proceedings of ACM Conference on Oﬃce Information Systems . New York : ACM Press , pp . 31 – 39 . Agre , P . E . ( 1994a ) : The Art of Getting Help . The Network Observer , vol . 1 , no . 2 . http : / dlis . gseis . ucla . edu / people / pagre / tno / february - 1994 . html # help . Agre , P . E . ( 1994b ) : How to Help Someone Use a Computer . The Network Observer , vol . 1 , no . 5 . http : / dlis . gseis . ucla . edu / people / pagre / tno / may - 1994 . html # how . Alty , J . L . and M . J . Coombs ( 1980 ) : Face - to - face Guidance of University Computer Users – I : A Study of Advisory Services . International Journal of Man - Machine Studies , vol . 12 , no . 4 , pp . 389 – 405 . Argyris , C . and D Scho¨n ( 1996 ) : Organizational Learning II : Theory , Method and Practice . Reading , MA : Addison Wesley . Bandura , A . ( 1986 ) : Social Foundations of Thought and Action . Englewood Cliﬀs , NJ : Prentice Hall . Bannon , L . J . ( 1986 ) : Helping Users Help Each Other . In D . A . Norman and S . W . Draper ( eds . ) : User Centered System Design : New Perspectives on Human – Computer Interaction . Hillsdale , NJ : Lawrence Erlbaum Associates , pp . 399 – 410 . Bannon , L . J . ( 1991 ) : From Human Factors to Human Actors : The Role of Psychology and Human – Computer Interaction Studies in Systems Design . In J . Greenbaum and M . Kyng ( eds . ) : Design at Work : Cooperative Design of Computer Systems . Hillsdale , NJ : Lawrence Erlbaum Associates , pp . 25 – 44 . Bannon L . J . ( 1992 ) : Perspectives on CSCW : From HCI and CMC to CSCW . In EW - HCI’ 92 . Proceedings of the East – West International Conference on Human – Computer Interaction , St . Petersburg , Russia , pp . 148 – 158 . Bannon , L . J . ( 1995 ) : Issues in Computer Supported Collaborative Learning . In C . O’Malley ( ed . ) : Computer Supported Collaborative Learning . Berlin : Springer - Verlag , pp . 267 – 282 . Bannon , L . J . and S . Bødker ( 1991 ) : Beyond the Interface : Encountering Artifacts in Use . In J . M . Carroll ( ed . ) : Designing Interaction : Psychology at the Human – Computer Interface . New York : Cambridge University Press , pp . 227 – 253 . Bannon L . J . , A . Cypher , S . Greenspan and M . L . Monty ( 1983 ) : Evaluation and Analysis of Users’ Activity Organization . In CHI’ 83 . Proceedings of the Conference on Human Factors in Computing Systems , Boston , MA , New York : ACM Press , pp . 54 – 57 . michael b . twidale 540 Beck , K . ( 2000 ) : Extreme Programming Explained . Boston : Addison - Wesley . Berlin , L . M . and R . Jeﬀries ( 1992 ) : Consultants and Apprentices : Observations about Learning andCollaborativeProblemSolving . In CSCW’92 . ProceedingsoftheConferenceonComputer - Supported Cooperative Work , Toronto , Canada . New York : ACM Press , pp . 130 – 137 . Bertelsen , O . W . and S . Bødker ( 2002 ) : Discontinuities . In C . Floyd , Y . Dittrich and R . Klischewski ( eds . ) : Social Thinking – Software Practice . Cambridge , MA : MIT Press , pp . 409 – 424 . Blomberg , J . L . ( 1987 ) : Social Interaction and Oﬃce Communication : Eﬀects on User Evaluation of New Technologies . In R . E . Kraut ( ed . ) : Technology and the Transformation of White - Collar Work . Hillsdale , NJ : Lawrence Erlbaum Associates , pp . 195 – 210 . Bloom , B . S . ( 1984 ) : The 2 Sigma Problem : The Search for Methods of Group Instruction as Eﬀective as One - To - One Tutoring . Educational Researcher , vol . 13 , no . 6 , pp . 4 – 16 . Bolter , J . D . ( 2003 ) : Windows and Mirrors : Interaction Design , Digital Art , and the Myth of Transparency . Boston : MIT Press . Bopp , R . E . and L . C . Smith ( 2001 ) : Reference and Information Services : An Introduction . Libraries Unlimited : Englewood CO . Brignull , H . , S . Izadi , G . Fitzpatrick , Y . Rogers and T . Rodden ( 2004 ) : The Introduction of a Shared Interactive Surface into a Communal Space . In CSCW’04 . Proceedings of the Conference on Computer - Supported Cooperative Work , Chicago , IL . New York : ACM Press , pp . 49 – 58 . Brown , J . S . and P . Duguid ( 1991 ) : Organizational Learning and Communities - of - Practice : Toward a Uniﬁed View of Working , Learning , and Innovation . Organization Science , vol . 2 , no . 1 , pp . 40 – 57 . Bruckman , A . and A . De Bonte ( 1997 ) : MOOSE Goes to School : A Comparison of Three Classrooms Using a CSCL Environment . In CSCL’ 97 . Proceedings of the Conference on Computer Support for Collaborative Learning , Toronto , Canada , pp . 20 – 26 . Card , S . K . , M . Pavel and J . E . Farrell ( 1984 ) : Window - based Computer Dialogues . In INTERACT’ 84 , First IFIP Conference on Human – Computer Interaction . London , UK , Amsterdam : Elsevier Science Publishers , pp . 239 – 243 . Carroll , J . M . ( 1990 ) : The Nurnberg Funnel : Designing Minimalist Instruction for Practical Computer Skill . Cambridge MA : MIT Press . Center for Workforce Development . ( 1998 ) : The Teaching Firm : Where Productive Work and Learning Converge : Report on Research Findings and Implications . Newton MA : Center for Workforce Development Education Development Center . Clement A . ( 1990 ) : Cooperative Support for Computer Work : A Social Perspective on the Empowering of End Users . In CSCW’ 90 . Proceedings of the Conference on Computer - Supported Cooperative Work , Los Angeles , CA . New York : ACM Press , pp . 223 – 236 . Cole , E . ( 1984 ) : Sources of Problem Solving for Computing End - Users : Human Computer Interface and Social Networks in Organizations . In H . W . Hendrick and O . Brown Jr . ( eds . ) : Human Factors in Organizational Design and Management . New York : North Holland , pp . 213 – 218 . Collins , P . , S . Shukla and D . Redmiles ( 2002 ) : Activity Theory and System Design : A View from the Trenches . Computer Supported Cooperative Work : The Journal of Collaborative Computing , vol . 11 , no . 1 , pp . 55 – 80 . Constant , D . , S . B . Kiesler andL . S . Sproull ( 1996 ) : TheKindness ofStrangers : TheUsefulness of Electronic Weak Ties for Technical Advice . Organization Science , vol . 7 , no . 2 , pp . 119 – 135 . Contractor , N . , D . Zink and M . Chan ( 1998 ) : IKNOW : A Tool to Assist and Study the Creation , Maintenance , and Dissolution of Knowledge Networks . In T . Ishida ( ed . ) : Community Computing and Support Systems , Lecture Notes in Computer Science 1519 . Berlin : Springer - Verlag , pp . 201 – 217 . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 541 Crabtree A . , M . B . Twidale , J . O’Brien and D . M . Nichols ( 1997 ) : Talking in the Library : Implications for the Design of Digital Libraries . In Proceedings of ACM Digital Libraries’ 97 , Philadelphia , PA , New York : ACM Press , pp . 221 – 228 . Derthick , M . and S . F . Roth ( 2001 ) : Enhancing Data Exploration with a Branching History of User Operations . Knowledge Based Systems , vol . 14 , no . 1 – 2 , pp . 65 – 74 . Dix , A . and R . Mancini ( 1997 ) : Specifying History and Backtracking Mechanisms . In P . Palanque and F . Paterno ( eds . ) : Formal Methods in Human – Computer Interaction . London , UK : Springer - Verlag , pp . 1 – 23 . Eales , R . T . J . and J . Welsh ( 1995 ) : Design for Collaborative Learnability . In CSCL’ 95 . Proceedings of the First International Conference on Computer Support for Collaborative Learning , Bloomington , IN . Lawrence Erlbaum Associates , Inc . , pp . 99 – 106 . Eason , K . ( 1988 ) : Information Technology and Organisational Change . London : Taylor & Francis . Ehrlich , K . and D . Cash ( 1999 ) : The Invisible World of Intermediaries : A Cautionary Tale . Computer Supported Cooperative Work : The Journal of Collaborative Computing , vol . 8 , no . 1 – 2 , pp . 147 – 167 . Eveland , J . D . , A . Blanchard , W . Brown and J . Mattocks ( 1994 ) : The Role of ‘‘Help Networks’’ in Facilitating Use of CSCW Tools . In CSCW ’94 . Proceedings of the Conference on Computer - Supported Cooperative Work , Chapel Hill , NC . New York : ACM Press , pp . 265 – 274 . Favorin , M . ( 1995 ) : Towards Computer Support for Collaborative Learning at Work : Six Requirements . In CSCL’ 95 . Proceedings of the First International Conference on Computer Support for Collaborative Learning , Bloomington , IN . Lawrence Erlbaum Associates , Inc . , pp . 116 – 119 . Furnas , G . W . , T . K . Landauer , L . M . Gomez and S . T . Dumais ( 1987 ) : The Vocabulary Problem in Human System Communication . Communications of the ACM , vol . 30 , no . 11 , pp . 964 – 971 . Gallivan , M . J . ( 2000 ) : Examining Workgroup Inﬂuence on Technology Usage : A Community of Practice Perspective . In Proceedings of the SIGCPR conference on Computer Personnel Research , Evanston , IL . New York : ACM Press , pp . 54 – 66 . Gantt , M . and B . A . Nardi ( 1992 ) : Gardeners and Gurus : Patterns of Cooperation among CAD Users . In CHI’ 92 . Proceedings of the Conference on Human Factors in Computing Systems , Monterey , CA . New York : ACM Press , pp . 107 – 117 . George , J . F . , S . Iacono and R . Kling ( 1995 ) : Learning in Context : Extensively Computerized Work Groups as Communities - of - Practice . Accounting , Management and Information Technology , vol . 5 , no . 3 – 4 , pp . 185 – 202 . Greer , J . , G . McCalla , V . Kumar , J . Collins and P . Meagher ( 1997 ) : Facilitating Collaborative Learning in Distributed Organizations . In CSCL’ 97 . Proceedings of the Conference on Computer Support for Collaborative Learning , Toronto , Canada , pp . 73 – 82 . Grinter , R . E . and M . A . Eldridge ( 2001 ) : ‘y do tngrs luv 2 txt msg ? ’ . In ECSCW’ 01 . Proceedings of the Seventh European Conference on Computer - Supported Cooperative Work , Bonn , Germany . Dordrecht , Netherlands : Kluwer Academic Publishers , pp . 219 – 238 . Grudin , J . T . ( 1989 ) : Why Groupware Applications Fail : Problems in Design and Evaluation . Oﬃce Technology and People , vol . 4 , no . 3 , pp . 245 – 264 . Grudin , J . T . ( 1993 ) : Interface : An Evolving Concept . Communications of the ACM , vol . 36 , no . 4 , pp . 110 – 119 . Grudin , J . T . ( 2001 ) : Partitioning Digital Worlds : Focal and Peripheral Awareness in Multiple Monitor Use . In CHI’ 01 . Proceedings of the Conference on Human Factors in Computing System , Seattle , WA . New York : ACM Press , pp . 458 – 465 . michael b . twidale 542 Halverson , C . A . , T . Erickson and M . S . Ackerman ( 2004 ) : Behind the Help Desk : Evolution of a Knowledge Management System in a Large Organization . In CSCW’ 04 . Proceedings of the Conference on Computer - Supported Cooperative Work , Chicago , IL . New York : ACM Press , pp . 304 – 313 . Hayne , S . , M . Pendergast and S . Greenberg ( 1994 ) : Implementing Gesturing with Cursors in Group Support Systems . Journal of Management Information Systems , vol . 10 , no . 3 , pp . 43 – 61 . Hill , W . C . and J . D . Hollan ( 1994 ) : History - Enriched Digital Objects : Prototypes and Policy Issues . The Information Society , vol . 10 , no . 2 , pp . 139 – 145 . Hinn , D . M . , X . C . Wang and M . B . Twidale ( 2004 ) : Collaborative Learning of Computer Applications in the Contexts of Work , Learning and Play . In Proceedings , 4th Annual IEEE International Conference on Advanced Learning Technologies , Joensuu , Finland , pp . 201 – 205 . Huang , J . , B . Lu and M . B . Twidale ( 2005 ) : Graphical Abstracts for Explaining Interaction . In CHINZ’ 05 . Proceedings of the 6th Annual Conference of the ACM SIGCHI New Zealand Chapter’s International Conference on Computer – Human Interaction , Auckland , New Zealand , pp . 83 – 89 . Hutchins , E . ( 1990 ) : The Technology of Team Navigation . In J . Galegher , R . E . Kraut and C . Egido ( eds . ) : Intellectual Teamwork : Social Foundations of Cooperative Work . Hillsdale , NJ : Lawrence Erlbaum Associates , pp . 191 – 220 . Isaacs , E . A . , S . Whittaker , D . Frohlich and B . O’Conaill ( 1997 ) : Informal Communication Re - examined : New Functions for Video in Supporting Opportunistic Encounters . In K . E . Finn , A . J . Sellen and S . B . Wilbur ( eds . ) : Video - Mediated Communication . Hillsdale , NJ : Lawrence Erlbaum , pp . 459 – 485 . Kaptelinin , V . ( 1996 ) : Computer - Mediated Activity : Functional Organs in Social and Developmental Contexts . In B . A . Nardi ( ed . ) : Context and Consciousness : Activity Theory and Human – Computer Interaction . Cambridge , MA : The MIT Press , pp . 45 – 68 . Kiesler , S . , B . Zdaniuk , V . Lundmark and R . Kraut ( 2000 ) : Troubles With the Internet : The Dynamics of Help at Home . Human – Computer Interaction , vol . 15 , 323 – 351 . Ko , C . and M . Hurley ( 1995 ) : Managing End - user Computing . Information Management & Computer Security , vol . 3 , no . 3 , pp . 3 – 6 . Koschmann , T . , R . Hall and N . Miyake ( 2002 ) : CSCL 2 : Carrying Forward the Conversation . Hillsdale NJ : Lawrence Erlbaum . Krackhardt , D . and J . R . Hanson ( 1997 ) : Informal Networks : The Company . In L . Prusak ( ed . ) : Knowledge in Organizations . Boston MA : Butterworth - Heinemann , pp . 37 – 49 . Kraut , R . E . , R . S . Fish , R . W . Root and B . L . Chalfonte ( 1990 ) : Informal Communication in Organizations : Form , Function , and Technology . In S . Oskamp and S . Spacapan ( eds . ) : People’s Reactions to Technology in Factories , Oﬃces , and Aerospace ( Proceedings of The Claremont Symposium on Applied Social Psychology ) . Newbury Park CA : SAGE Publications , pp . 145 – 199 . Kumar V . , G . McCalla and J . Greer ( 1999 ) . Helping the Peer Helper . In Proceedings of the International Conference on AI in Education , Le Mans , France , pp . 325 – 332 . Lajoie , S . P . and S . J . Derry ( 1993 ) : Computers as Cognitive Tools . Hillsdale NJ : Lawrence Erlbaum Associates . Lakhani , K . R . and E . Hippelvon ( 2003 ) : How Open Source Software Works : ‘Free’ User - to - User Assistance . Research Policy , vol . 32 , no . 6 , pp . 923 – 943 . Lang , K . N . , R . Auld and T . Lang ( 1982 ) : The Goals and Methods of Computer Users . International Journal of Man - Machine Studies , vol . 17 , no . 4 , pp . 375 – 399 . Lang , K . N . , T . Lang and R . Auld ( 1981 ) : Support for Users of Operating Systems and Applications Software . International Journal of Man - Machine Studies , vol . 14 , no . 3 , pp . 269 – 282 . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 543 Lave , J . and E . Wenger ( 1991 ) : Situated Learning : Legitimate Peripheral Participation . Cambridge UK : Cambridge University Press . Lee , A . ( 1992 ) : Investigations into History Tools for User Support . PhD Thesis , Department of Computer Science , University of Toronto , Canada . Lee , D . M . S . ( 1986 ) : Usage Pattern and Sources of Assistance for Personal Computer Users . MIS Quarterly , vol . 10 , no . 4 , pp . 313 – 325 . Le´vi - Strauss , C . ( 1966 ) : The Savage Mind . Chicago IL : The University of Chicago Press . Linton , F . , D . Joy , H . - P . Schaefer and A . Charron ( 2000 ) : OWL : A Recommender System for Organization - Wide Learning . Educational Technology & Society , vol . 3 , no . 1 , pp . 62 – 76 . Mackay , W . E . ( 1990 ) : Patterns of Sharing Customizable Software . In CSCW’ 90 . Proceedings of the Conference on Computer - Supported Cooperative Work , Los Angeles , CA . New York : ACM Press , pp . 209 – 222 . MacLean , A . , K . Carter , L . Lovstrand and T . Moran ( 1990 ) : User - Tailorable Systems : Pressing the Issues with Buttons . In CHI’ 90 . Proceedings of the Conference on Human Factors in Computing Systems , Seattle , WA , pp . 175 – 182 . Maltzahn , C . , and D . Vollmar ( 1994 ) : ToolBox : A Living Directory For Unix Tools Owned By the Community Technical Report ( CU - CS - 747 – 94 ) . Computer Science Department , University of Colorado , Boulder , CO . Mamykina , L . and C . G . Wolf ( 2000 ) : Evolution of Contact Point : A Case Study of a Help Desk and its Users . In CSCW ’00 . Proceedings of the Conference on Computer Supported Cooperative Work , Philadelphia , PA . New York : ACM Press , pp . 41 – 48 . McDonald , D . W . ( 2001 ) : Evaluating Expertise Recommendations . In GROUP ’01 . Proceed - ings of the International Conference on Supporting Group Work . New York : ACM Press , pp . 214 – 223 . McDonald , D . W . and M . S . Ackerman ( 2000 ) : Expertise Recommender : A Flexible Recom - mendation System and Architecture . In CSCW ’00 . Proceedings of the Conference on Computer Supported Cooperative Work , Philadelphia , PA . New York : ACM Press , pp . 231 – 240 . Myers , B . A . , H . Stiel and R . Gargiulo ( 1998 ) : Collaboration Using Multiple PDAs Connected to a PC . In CSCW ’98 . Proceedings of the Conference on Computer - Supported Cooperative Work , Seattle , WA . New York : ACM Press , pp . 285 – 294 . Mynatt , E . D . , T . Igrashi , W . K . Edwards and A . LaMarca ( 1999 ) : Flatland : New Dimensions in Oﬃce Whiteboards . In CHI ’99 . Proceedings of the Conference on Human Factors in Computing Systems , Pittsburgh , PA . New York : ACM Press , pp . 346 – 353 . Nardi , B . A . ( 1993 ) : A Small Matter of Programming : Perspectives on End User Computing . Cambridge , MA : MIT Press . Nardi , B . A . and J . R . Miller ( 1991 ) : Twinkling Lights and Nested Loops : Distributed Problem Solving and Spreadsheet Development . International Journal of Man - Machine Studies . , vol . 34 , no . 2 , pp . 161 – 184 . Nardi , B . A . and V . L . O’Day ( 1996 ) : Intelligent Agents : What We Learned at the Library . Libri . , vol . 46 , no . 2 , pp . 59 – 88 . Nardi , B . A . and V . L . O’Day ( 1999 ) : Information Ecologies : Using Technology with Heart . Cambridge , MA : MIT Press . Nielsen , J . ( 1993 ) : Usability Engineering . London : Academic Press . Nohria , N . and R . G . Eccles ( 1992 ) : Networks and Organizations : Structure Form And Action . Harvard , Boston , MA : Business School Press . Norman , D . A . ( 1981 ) : The Trouble with UNIX : The User Interface is Horrid . Datamation , vol . 27 , no . 12 , pp . 139 – 150 . michael b . twidale 544 O’Day , V . L . , K . Finn , E . Craighill , T . Frivold , R . Lang , M . Schlager and K . Skinner ( 1995 ) : Shared Work Experiences in a Synchronous Collaboration Environment . Technical Report . Menlo Park , CA : SRI International . O’Day , V . L . , D . Bobrow , K . Bobrow , M . Shirley , B . Hughes and J . Walters ( 1998 ) : Moving Practice : From Classrooms to MOO Rooms . Computer Supported Cooperative Work : The Journal of Collaborative Computing . , vol . 7 , no . 1 – 2 , pp . 9 – 45 . O’Malley , C . E . ( 1986 ) : Helping Users Help Themselves . In D . A . Norman and S . W . Draper ( eds . ) : User Centered System Design : New Perspectives on Human – Computer Interaction . Hillsdale , NJ : Lawrence Erlbaum Associates , pp . 377 – 398 . Oppermann , R . and C . G . Thomas ( 1995 ) : Learning and Problem Solving as an Iterative Process : Learner’s Living Repository : LEAR . In C . Stephanidis ( ed . ) : Proceedings of the 1st ERCIM Workshop on ’User Interfaces for All’ . Crete , Greece : Heraklion . Orlikowski , W . J . ( 2002 ) : Knowing in Practice : Enacting a Collective Capability in Distributed Organizing . Organization Science , vol . 13 , no . 3 , pp . 249 – 273 . Orr , J . E . ( 1996 ) : Talking about Machines : An Ethnography of a Modern Job . Ithaca , NY : Cornell University Press . Paepcke , A . ( 1996 ) : Information Needs in Technical Work Settings and their Implications for the Design of Computer Tools . Computer Supported Cooperative Work : The Journal of Collaborative Computing . , vol . 5 , no . 1 , pp . 63 – 92 . Papert , S . ( 1987 ) : Microworlds : Transforming Education . In R . W . Lawler and M . Yazdani ( eds . ) : AI and Education : Learning Environments and Tutoring Systems , Vol . 1 . Norwood , NJ : Ablex , pp . 79 – 94 . Pentland , B . T . ( 1992 ) : Organizing Moves in Software Support Hot Lines . Administrative Science Quarterly . , vol . 37 , no . 4 , pp . 527 – 548 . Prakash , A . and M . J . Knister ( 1992 ) : Undoing Actions in Collaborative Work . In CSCW ’92 . Proceedings of the Conference on Computer - Supported Cooperative Work , Toronto , Canada . New York : ACM Press , pp . 273 – 280 . Quintana , C . , J . Krajcik , and E . Soloway ( 2002 ) . A Case Study to Distill Structural Scaﬀolding Guidelines for Scaﬀolded Software Environments . In CHI ’02 . Proceedings of the Conference on Human Factors in Computing Systems , Minneapolis , MN . New York : ACM Press , pp . 81 – 88 . Reiser , B . J . ( 2002 ) : Why Scaﬀolding Should Sometimes Make Tasks More Diﬃcult for Learners . In CSCL ’02 . Proceedings of the Conference on Computer Support for Collaborative Learning , Boulder , CO , pp . 255 – 264 . Rieman , J . ( 1993 ) : The Diary Study : A Workplace - Oriented Research Tool to Guide Laboratory Eﬀorts . In INTERCHI ’93 . Proceedings of the Conference on Human Factors in Computing Systems , Amsterdam , Netherlands . Reading , MA : Addison Wesley , pp . 321 – 326 . Rodden , T . , Y . Rogers , J . Halloran and I . Taylor ( 2003 ) : Designing Novel Interactional Workspaces to Support Face to Face Consultations . In CHI ’03 . Proceedings of the Conference on Human Factors in Computing Systems , Ft . Lauderdale , FL . New York : ACM Press , pp . 57 – 64 . Rogers , Y . ( 2004 ) : New Theoretical Approaches For HCI . Annual Review of Information Science and Technology . , vol . 38 , 87 – 143 . Rogoﬀ , B . B . ( 1990 ) : Apprenticeship in Thinking : Cognitive Development in Social Context . New York : Oxford University Press . Roschelle , J . ( 1996 ) : Designing for Cognitive Communication : Epistemic Fidelity or Mediating Collaborating Inquiry . In D . L . Day and D . K . Kovacs ( eds . ) : Computers , Communication & Mental Models . London : Taylor & Francis , pp . 13 – 25 . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 545 Rounceﬁeld , M . , J . A . Hughes , T . Rodden and S . Viller ( 1994 ) : Working with ‘‘Constant Interruption’’ : CSCW and the Small Oﬃce . In CSCW 94 . Proceedings of the Conference on Computer - SupportedCooperativeWork , ChapelHill , NC . NewYork : ACMPress , pp . 275 – 286 . Sachs , P . ( 1995 ) : Transforming Work : Collaboration , Learning and Design . Communications of the ACM , vol . 38 , no . 9 , pp . 227 – 249 . Scaife , M . and Y . Rogers ( 1996 ) : External Cognition : How do Graphical Representations Work ? . International Journal of Human – Computer Studies , vol . 45 , no . 2 , pp . 185 – 213 . Scharer , L . L . ( 1983 ) : User Training : Less is More . Datamation , vol . 29 , no . 7 , pp . 175 – 182 . Schlager , M . S . , C . Poirer and B . M . Means ( 1995 ) : Mentors in the Classroom : Bringing the World Outside in . In H McLellan ( ed . ) : Situated Learning Perspectives . Englewood Cliﬀs , NJ : Educational Technology Publications , pp . 243 – 262 . Schmidt , K . and L . Bannon ( 1992 ) : Taking CSCW Seriously : Supporting Articulation Work . Computer Supported Cooperative Work . The Journal of Collaborative Computing . , vol . 1 , no . 1 – 2 , pp . 7 – 40 . Senge , P . ( 1990 ) : The Fifth Discipline The Art and Practice of the Learning Organization . New York : Doubleday . Sloan , B . ( 1998 ) : Service Perspectives for the Digital Library : Remote Reference Services . Library Trends , vol . 47 , no . 1 , pp . 117 – 143 . Star , S . L . and K . Ruhleder ( 1996 ) : Steps Toward an Ecology of Infrastructure : Design and Access for Large Information Spaces . Information Systems Research . , vol . 7 , no . 1 , pp . 111 – 134 . Stewart , J . , B . B . Bederson and A . Druin ( 1999 ) : Single Display Groupware : A Model for Co - Present Collaboration . In CHI 99 . Proceedings of the Conference on Human Factors in Computing Systems , Pittsburgh , PA . New York : ACM Press , pp . 286 – 293 . Streitz , N . A . , J . Geißler , T . Holmer , S . Konomi , C . Mu¨ller - Tomfelde , W . Reischl , P . Rexroth , P . Seitz and R . Teinmetz ( 1998 ) : i - LAND : An Interactive Landscape for Creativity And Innovation . In CSCW ’98 . Proceedings of the Conference on Computer - Supported Cooperative Work , Seattle , WA . New York : ACM Press , pp . 120 – 127 . Suchman , L . A . ( 1987 ) : Plans and Situated Actions : the Problem of Human - Machine Communication . Cambridge , UK : Cambridge University Press . Tang , J . , N . Yankelovich and J . Begole ( 1999 ) : SharedShell : A Shared Terminal for Collaborative System Administration . Network Communities Report , Sun Microsystems Laboratories , June 1999 . Thimbleby , H . ( 1990 ) : User Interface Design . New York : ACM Press . Trauth , E . M . and E . Cole ( 1992 ) : The Organizational Interface : A Method for Supporting End Users of Packaged Software . MIS Quarterly , vol . 16 , no . 1 , pp . 35 – 53 . Trigg , R . H . and S . Bødker ( 1994 ) : From Implementation to Design : Tailoring and the Emergence of Systematization in CSCW . In CSCW ’94 . Proceedings of the Conference on Computer - Supported Cooperative Work , Chapel Hill , NC . New York : ACM Press , pp . 45 – 53 . Twidale , M . B . and D . M . Nichols ( 1998 ) : Designing Interfaces to Support Collaboration in Information Retrieval . Interacting with Computers , vol . 10 , no . 2 , pp . 177 – 193 . Twidale , M . B . and K . Ruhleder ( 2004a ) : Over - the - Shoulder Learning in a Distance Education Environment . In C . Haythornthwaite and M . M . Kazmer ( eds . ) : Learning , Culture and Community in Online Education : Research and Practice . New York : Peter Lang , pp . 177 – 194 . Twidale , M . B . and K . Ruhleder ( 2004b ) : Where am I and Who am I ? Issues in Collaborative Technical Help . In CSCW ’04 . Proceedings of the Conference on Computer - Supported Cooperative Work , Chicago , IL . New York : ACM Press , pp . 378 – 387 . michael b . twidale 546 Twidale , M . B . , D . Chaplin , A . Crabtree , D . M . Nichols , J . O’Brien and M . Rounceﬁeld ( 1997a ) : Collaboration in Physical and Digital Libraries , British Library Research and Innovation Report No . 64 . British Library Research and Innovation Centre , London , UK . Twidale , M . B . , D . M . Nichols and C . Paice ( 1997b ) : Browsing is a Collaborative Process . Information Processing & Management . , vol . 33 , no . 6 , pp . 761 – 783 . Van Bruggen , J . M . , P . A . Kirschner and W . Jochems ( 2002 ) : External Representation of Argumentation in CSCL and the Management of Cognitive Load . Learning and Instruction , vol . 12 , no . 1 , pp . 121 – 138 . van der Meij , H . and M . Gellevij ( 1998 ) : Screen Captures in Software Documentation . Technical Communication . , vol . 45 , no . 4 , pp . 529 – 543 . Vivacqua , A . S . and H . Lieberman ( 2000 ) : Agents to Assist in Finding Help . In CHI ’00 . Proceedings of the Conference on Human Factors in Computing Systems , The Hague , Netherlands . New York : ACM Press , pp . 65 – 72 . Vygotsky , L . ( 1986 ) : Thought and Language . Cambridge , MA : MIT Press . Weinberg , G . M . ( 1971 ) : The Psychology of Computer Programming . New York : Van Nostrand Reinhold . Weiser , M . and J . S . Brown ( 1998 ) : The Coming Age of Calm Technology . In P . J . Denning and R . M . Metcalfe ( eds . ) : Beyond Calculation : The Next Fifty Years of Computing . New York : Copernicus , pp . 75 – 86 . Wenger , E . ( 1998 ) : Communities of Practice : Learning , Meaning , and Identity . Cambridge : Cambridge University Press . Whittaker , S . , D . Frolich and O . Daly - Jones ( 1994 ) : Informal Workplace Communication : What is it Like and How Might We Support it ? In CHI ’94 . Proceedings of the Conference on Human Factors in Computing Systems , Boston , MA . New York : ACM Press , pp . 131 – 137 . Yimam - Seid , D . and A . Kobsa ( 2002 ) : Expert Finding Systems for Organizations : Problem and Domain Analysis and the DEMOIR Approach . Organizational Computing and Electronic Commerce . , vol . 13 , no . 1 , pp . 1 – 24 . Zuboﬀ , S . ( 1988 ) : The Age of the Smart Machine : The Future of Work and Power . New York : Basic Books . OVER THE SHOULDER LEARNING : SUPPORTING BRIEF INFORMAL LEARNING 547