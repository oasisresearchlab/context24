Journal of Experimental Psychology : Applied 2000 , Vol . 6 , No . 4 , 322 - 335 Copyright 2000 by the American Psychological Association , Inc . 1076 - 898X / 00 / $ 5 . 00 DOI : 10 . ! 037 / / 1076 - 898X . 6 . 4 . 322 Milliseconds Matter : An Introduction to Microstrategies and to Their Use in Describing and Predicting Interactive Behavior Wayne D . Gray and Deborah A . Boehm - Davis George Mason University Interactive behavior is constrained by the design of the artifacts available ( e . g . , a mouse and button ) as well as by the ways in which elementary cognitive , perceptual , and motor operations can be combined . Any 2 basic activities , for example , ( a ) moving to and ( b ) clicking on a button , can be combined to yield a limited number of microstrategies . The results of an experimental study suggest that alternative microstrategies can be deployed that shave milliseconds from routine interactive behavior . Data from a usability study are used to explore the potential of microst:rategies for ( a ) bracketing the range of individual performance , ( b ) profiling individual differences , and ( cl diagnosing mismatches between expected and obtained performance . These 2 studies support the arguments that the microstrategies deployed can be sensitive to small features of an interface and that task analyses at the millisecond level can inform design . Interactive technology consists of two parts : the interactive device used to input user commands and the interactive object to which the commands are directed . The direct - manipulation inter­ face is a common interactive technology that uses a mouse and keyboard ( interactive devices ) to operate on buttons , text , icons , menu items , and so on ( interactive objects ) . Less common inter­ active technologies might deploy point of gaze to select a window or speech and speech recognition software to enter text into a field . Different interactive technologies support different basic activ­ ities such as moving a cursor or clicking a button . These basic activities combine to form microstrategies . We argue that micro­ strategies provide the user with a way of optimizing interaction while minimizing the cost of that interaction . Microstrategies develop in response to the fine - grained details of the interactive technology ; that is , microstrategies focus on what most designers would regard as the mundane aspects of interface design : the ways in which subtle features of interactive technology influence the ways in which users perform tasks . Although fine - grained , such details are important because they create differences ( on the order of milliseconds ) in the time that is required to complete a task . That people are sensitive to the costs Wayne D . Gray and Deborah A . Boehm - Davis , Human Factors and Applied Cognition Program , George Mason University . This work was supported through the U . S . Air Force ( USAF ) Office of Scientific Research by Department of Defense Grant F49620 - 97 - l - 0353 and by National Science Foundation Grant IRI - 9618833 . Data for the target - acquisition task were collected at Synthetic Environments , Inc . , as part of a Phase II Small Business Innovative Research project under Contract F41624 - 95 - C - 6012 to the USAF Armstrong Laboratory , Crew Systems Directorate . We thank Franz Hatfield and Eric Jenkins for making these data available for publication . We also thank Wai - tat Fu for con­ structing and running the button study and Erik M . Altmann for feedback on earlier versions of this article . Correspondence concerning this article should be addressed to Wayne D . Gray , Human Factors and Applied Cognition Program , George Mason University , MSN 3F5 , Fairfax , Virginia 22030 . Electronic mail may be sent to gray @ gmu . edu . 322 of low - level processes is supported by research . For example , changing information gathering from an eye movement to a mouse movement influenced the decision - making strategies adopted in a classic decision - making paradigm ( Lohse & Johnson , 1996 ) . When the cost of making a move in solving simple puzzles increased from one keystroke to several ( O ' Hara & Payne , 1998 ; Svendsen , 1991 ) , the strategy used to solve the puzzles shifted from one in which search was " reactive and display - based " ( O ' Hara & Payne , 1998 , p . 66 ) to one in which search was more plan based . A similar result was obtained when either a lockout was used to increase the minimum intermove latency or the cost of error recovery was increased ( O ' Hara & Payne , 1999 ) . The sub­ tlety of change in response to minor variations in interface design should not be underestimated . For example , by increasing the cost of information acquisition from a simple saccade to a head move­ ment , Ballard ( Ballard , Hayhoe , & Pelz , 1995 ; Ballard , Hayhoe , Pook , & Rao , 1997 ) induced a shift from a memoryless strategy to one that required holding information in working memory . We argue that these shifts in strategy are the result of users being sensitive to the effort required to execute alternative microstrate­ gies , that is , an important implication of microstrategies is that when alternative microstrategies can be applied , users tend to select the one that is most efficient in the particular task context . Understanding microstrategies requires a detailed analysis of the low - level cognitive , perceptual , and motor operations used to perform a task . Such an analysis goes beyond a mere listing of the operators to include some understanding of the interactions among them and how these interactions are orchestrated . Theories of the control of cognitive - perceptual - motor interactions are called the­ ories of embodied cognition ( Kieras & Meyer , 1997 ) ; the three best developed theories are EPIC ( Kieras & Meyer , 1997 ) , EPIC - Soar ( Chong & Laird , 1997 ; Lallement & John , 1998 ) , and ACT - R Perceptual - Motor ( ACT - R / PM ; Byrne & Anderson , 1998 ) . In this article , we have eschewed casting our arguments in the form of one of these developing theories , choosing instead the graphic notation and minimalist theory provided by CPM - GOMS ( Gray , John , & Atwood , 1993 ; John , 1990 , 1996 ) . The graphic MILLISECONDS MATIER 323 notation makes the differences between models more readily ap­ parent to those who do not build such models ( i . e . , most of our readers ) than would be the case ifthe models were cast as EPIC or ACT - R/PM productions . The minimalist theory makes the CPM­ GOMS analyses of microstrategies simpler and more general than those that would be provided by EPIC , EPIC - Soar , or ACT - R/PM . What we lose in subtlety and precision we gain ( or so we hope ) in clarity of communication and likelihood that our findings will influence design as well as research . In sum , in this article , we focus on how the design of interactive technologies can constrain the methods available for completing interactive tasks and , by extension , the ease or difficulty ( i . e . , costs ) of completing these tasks . The next section introduces the concepts of activity and microstrategy . The following section tests whether , when the task context is stable and predictable , users will deploy the most efficient microstrategy . The utility of microstrategies is not limited to research settings . They can be used before a system is built to predict or bracket the range of performance expected from the system . After the system is built , microstrategies can be used to profile and diagnose mis­ matches between expected and obtained performance . The impli­ cation is that a usability problem exists whenever users do not adopt the most efficient microstrategy that is available in a partic­ ular context . These potential uses of microstrategies are illustrated by data obtained from a usability study involving 2 participants using a software prototype . We conclude the article by summarizing our presentation and discussing the implications of the microstrategy approach for interface design . Milliseconds matter : 40 - 400 ms added to each small step of an interactive task may result in an interactive system A 50 Predicted time : 745ms 50 0 30 verify­target­ pos attend­cursor @ target verify­cursor @ target whose interface feels sluggish . Under the wrong set of conditions , this sluggish response or attempts by the user to avoid it ( e . g . , by adopting microstrategies that rely more on cognition and less on perception ) may result in higher workload or increased errors . Microstrategies for Mouse - Button Interactive Technology The CPM - GOMS graphic notation is used to represent three levels of description : activities , microstrategies , and cognitive models of tasks . CPM - GOMS ( Gray et al . , 1993 ; John , 1990 ) is a GOMS ( Card , Moran , & Newell , 1983 ; John , 1995 ; John & Kieras , 1996a , 1996b ) variant that takes the task analysis down to the elementary cognitive , perceptual , and motor operators involved in a task . It yields a critical path of operators that represents the shortest time from the beginning to the end of the task . CPM­ GOMS inherits the GOMS family ' s concern with building approx­ imate , engineering - style models ( Card et al . , 1983 ; John & Kieras , 1996a , 1996b ; Newell & Card , 1985 ) . CPM - GOMS Notation and the Critical Path Moving a cursor to a button is a basic activity for direct manipulation interfaces . By a CPM - GOMS analysis , moving is composed of 11 operators ( see Figure IA and B ) . Six of the operators are cogrnuve : 1mtiate - move - cursor , attend - target , initiate - point - of - gaze ( POG ; i . e . , eye movement ) , verify - target­ position , attend - cursor @ target , and verify - cursor @ target . Follow­ ing standard CPM - GOMS assumptions , an execution time of 50 ms is assigned to each cognitive operator ( see , e . g . , Gray et al . , 1993 ) . Figure 1 shows one motor manual operator : move - cursor . B 50 Predicted time : 530ms 0 30 POG 50 50 verify - attend· target - cursor pos @ target perceive - verify­cursor @ tar et Figure 1 . Moving : A CPM - GOMS model of one of the two basic activities that can be performed with a mouse . The operators and their dependencies are identical in A and B with one exception . The move - cursor operator in A has a duration of 545 ms , whereas that used in B has a duration of 301 ms . This difference has a dramatic effect on the critical path ( indicated by bold lines connecting shadowed boxes ) as well as on the prediction of the total time needed to execute this activity . The operators and the connecting lines are explained in the text . POG = point of gaze ; pos = position . 324 GRAY AND BOEHM - DA VIS The time for this operator depends on the target size and distance to be moved . The move cursor activity also has one motor eye movement operator ( POG ) with a standard time taken from the literature of 30 ms . ( As cited in Card et al . , 1983 , Russo , 1978 , gives the time for a saccade as 30 ms . ) Two of the operators are perceptual : perceive­ target and perceive - cursor @ target . The duration of these operators is taken from estimates in the psychological literature of the time needed to perceive a simple binary event . 1 New - cursor - location represents the system ' s response to the activity of moving the mouse . In most computer systems , there is no lag between moving the mouse and a change in the cursor position ; hence , this box is given a duration of 0 ms . CPM - GOMS requires that the operators be sequential within each operator type . In Figure 1 , this seriality is represented by placing operators of the same type in a row and drawing depen­ dency lines between them . For example , the cognitive operator attend - target must be executed after initiate - move - cursor but be­ fore initiate - POG . Different types of operators ( e . g . , cognitive and perceptual ) can fire in parallel , but sequential dependencies may exist between two particular operators , each of a different type . For example , in Figure 1 , the cognitive operator initiate - move - cursor is prerequisite to both the cognitive operator attend - target and the motor operator move - cursor ; however , these operators begin at the same time ( i . e . , immediately after initiate - move - cursor completes ) . The chain of dependent operators with the longest duration defines the critical path , that is , the time required to execute the activity . In Figure 1 , the critical path is indicated by bold lines connecting shadowed boxes . All operators in Figure 1 are re­ quired by the move cursor activity . However , not all operators are on the critical path . In Figure lA , the chain of dependent operators with the longest duration consists of five operators : initiate - move - cursor , move - cursor , new - cursor - location , perceive­ cursor @ target , and verify - cursor @ target . The predicted time is calculated as the sum of the operators along the critical path , in this case , 50 + 545 + 0 + 100 + 50 = 745 ms . In Figure lA , the critical path is largely determined by the time required to move the cursor . The operators that are not in bold are said to occur during slack time . Essentially , in Figure lA , visual attention is shifted to the target location before the cursor arrives . Figure 1B shows a different state of affairs . Here the time for the move - cursor operator is less than in Figure lA ( presumably be­ cause the hypothetical distance is less ) . The decrease in time is such that the move - cursor operator " falls off ' the critical path . In Figure lB , the critical path ( as shown by the path of bold lines connecting shadowed boxes ) is largely determined by the time required to move visual attention to the target . Microstrategies Another activity enabled by mice and buttons is clicking . Click­ ing and moving can be combined to form two families of basic microstrategies : ( a ) MOVE - CLICK ( MIC ) - move to a button then click on it - and ( b ) CLICK - MOVE ( C / M ) - click on a button then move someplace else . For each family , the number and variety of members are constrained by the task being performed , the nature of embodied cognition , and the design of the interactive system . Because of the nature of embodied cognition , not all combinations of operators are possible . Because of the design of the artifact ( i . e . , the interactive device and interactive objects ) , all possible combinations are not plausible . Those combinations that are both possible and plausible determine the members of a mi­ crostrategy family . The different microstrategies within a family are thus represented by different operators , different sequences of the same operators , and different dependencies among operators . Figure 2 contains a CPM - GOMS model of two MIC microstrat­ egies . With three exceptions , the operators and parameters in each are identical . The SLOW - MIC microstrategy ( top ) includes an explicit verification that the cursor is in position before the mouse click can be initiated . This verification requires three operators : two cognitive ( attend - cursor @ target and verify - cursor @ - target ) and one perceptual ( perceive - cursor @ target ) . Two of these oper­ ators , perceive - cursor @ target and verify - cursor @ target , are on the critical path and add 150 ms to the predicted time for SLOW - MIC . The SLOW - MIC microstrategy seems likely to be used for MIC interactions that require precision in selecting the target . For the FAST - MIC microstrategy , the critical path goes directly from the completion of move - cursor to initiating the mouse click . For this MIC microstrategy , verification that the cursor is inside the target is not prerequisite to clicking . Figure 3 contains the CPM - GOMS models for three members of the C/M family of micro strategies . The critical path in the SLOW­ C / M microstrategy reflects the case in which , after the user clicks on a button , the MOVE cannot be initiated until the system responds . The MEDIUM - C / M microstrategy reflects the case in which the user does not need to wait for a system response to the CLICK to know the location of the next entry . Such situations might include clicking on a dialog box to close it and then moving the mouse to a known location ( e . g . , a cell in a spreadsheet ) . With three fewer operators on the critical path than with SLOW - C / M , the MEDIUM - C / M strategy is 150 ms faster . A FAST - C / M microstrategy can be used in situations where the mouse up does not have to be done in the same location as the mouse down . Because this microstrategy excludes the cost of the mouse - up operator , it is predicted to be approximately 100 ms faster than the MEDIUM - CIM strategy ( see Figure 3 ) . However , because most ( but not all ) button objects require that the mouse down and mouse up take place inside the button , this strategy cannot be used for most buttons . Assumptions Embedded in the microstrategy concept are several assumptions that are worth making explicit . First , it may be possible to deploy different microstrategies in the same task context . Second , within a task context , the microstrategy that is deployed is not chosen through a process of deliberation but is selected rapidly without any external signs of decision making . Third , each family of microstrategies may have several members . An implication of microstrategies is that when the task context is clear and consis­ tent , the microstrategy selected should be the optimal microstrat­ egy for that task context . These analyses suggest that the cost or benefit of alternative microstrategies can be measured in milliseconds . Hence , differ - 1 Times for perceptual events vary with the complexity of the stimuli being perceived . See Gray et al . ( 1993 ) for a more detailed discussion . MILLISECONDS MA TIER 325 SLOW - MIC Predicted time : 845ms move­cursor 0 verify­cursor @ target 50 FAST - MIC new - cursor - location Predicted time : 695 ms START initltate­move­cursor Figure 2 . MOVE - CLICK ( MIC ) : Alternative microstrategies for when to mouse down . The different micro­ strategies within a family may be represented by different operators , different sequences of the same operators , and different dependencies between operators . Each microstrategy starts after the end of the initiate - move - cursor operator and ends after the completion of the mouse - down ( mouseDn ) operator . The critical path is indicated by bold lines connecting shadowed boxes . POG = point of gaze ; pos = position . ences in choice of microstrategy should lead to differences in the time required to execute tasks . Do milliseconds matter ? Specifi­ cally , do users prefer strategies that require less execution time ? As we show in the next section , for a clear and consistent task context , the answer is yes . The Button Study An important question is what happens when two similar but subtly different task contexts exist in the same interface . In such a situation , will users employ two similar but subtly different mi­ crostrategies , or will they always use the one microstrategy that always works despite the fact that it may not be optimal for both situations ? Will users optimize performance by selecting the most efficient microstrategy , or is selecting a microstrategy itself a burden ? This question was explored in a simple study that had nine buttons arranged in three rows of three columns . 2 Only one button appeared on the screen at a time , and none of the buttons were labeled in any way . Each block of 32 trials began by the participant clicldng on the home button ( at the middle of the bottom row ) . The 2 The data reported here were collected as part of an ongoing project to understand the interactions among cognition , visual attention , and motor operations in a fast - paced task . A fuller report of the procedures , data , and ACT - R/PM models developed to fit the data is provided by Gray , Schoel­ les , and Fu ( 2000 ) . 326 GRAY AND BOEHM - DAVIS SLOW - C / M Predicted time : 300ms 0 perceive - display - change move­ cursor 50 initiate - move - 100 50 START initiate - mouse move - cursor FAST - C / M Predicted time : 150 ms EN) move - cursor Predicted time : 50ms EN) move­ cursor Figure 3 . CLICK - MOVE ( C/M ) : Alternative microstrategies for when to move the cursor . The different microstrategies within a family may be represented by different operators , different sequences of the same operators , and different dependencies between operators . Each microstrategy starts after the end of the mouse - down operator and ends before the start of the move - cursor operator . The critical path is indicated by bold lines connecting shadowed boxes . mouse Dn = mouse - down ; MED = MEDIUM . home button would disappear , and a target button would appear at one of the eight target - button positions ( top - left , top - middle , top - right , middle - left , middle - middle , middle - right , bottom­ left , and bottom - right ) . The participant would move to and click on the target button at which point it would disappear and the home button would reappear . Each block continued for 16 target - home cycles , with each target - button position being used twice ( see Gray , Schoelles , & Fu , 2000 , for more details ) . The fastest reasonable rnicrostrategy for going from home to target differs from the fastest reasonable one for going from target to home . When the cursor is at home , the participant does not know where , out of the eight positions , the target will appear . To determine the target ' s location , the participant must mouse down and up on home and then wait until the target appears . In contrast , when the cursor is at a target button , the situation is subtly different . Although the home button will not appear until the participant has clicked on the target , the participant knows the home button ' s location . Hence , with the fastest reasonable microstrategy , users will begin moving the cursor to the home location before they can perceive and verify that the home button is there . The CPM - GOMS models for these tasks are included as Figure 4 and Figure 5 . Both models use default times for all CPM - GOMS operators except for move - cursor . For move - cursor , Fitts law was used to calculate the time to move to each of the eight target buttons from the home button . In calculating Fitts ' s law , we ran ACT - R / PM on the same interface as used by our participants . Using its default parameters ( Byrne , 1999 ) , ACT - R/PM deter­ mined the visual angle between each target and the home button and used the angle of approach to calculate the button ' s effective width ( MacKenzie , 1992 ) . The average of these eight times was 301 ms . This number was used by the CPM - GOMS models shown in Figure 4 for moving from HOME - to - TARGET as well as in Figure 5 for moving from TARGET - to - HOME . Because the HOME - to - TARGET model does not know where the target will appear , it must use the SLOW - C / M rnicrostrategy ( see Figure 3 ) to perceive and verify the target ' s location before it begins moving the cursor . In contrast , because the TARGET - to­ HOME model knows where the home button will appear , it can use the MEDIUM - C / M rnicrostrategy to begin moving to the home location before it perceives and verifies the actual physical loca­ tion . Both models use the SLOW - MIC ( see Figure 2 ) rnicrostrat­ egy because both require an explicit verification that the cursor is in the button before they begin to mouse down . Except for differences in the C/M rnicrostrategy , the two models are identical . Hence , the predicted time difference between the two models ( see Table 1 ) of 970 ms versus 820 ms reflects the 150 - ms difference between the SLOW - C / M and MEDIUM - C / M rnicro­ strategies shown in Figure 3 . Method For the study , we ran 30 participants through 50 blocks of trials . Each block entailed 32 button clicks and 32 mouse movements . A block began when the participant clicked on the button in the middle of the bottom row . Throughout a block , the basic pattern was ( begin ) HOME - TARGET­ HOME - TARGET - HOME until 33 buttons ( each block began and ended with a home button ) had been clicked . Time to click on the first home button was not included in the calculations of inter - button - click time . All mouse events were saved to a log file with 16 . 667 ms accuracy . Properties of the button as an interactive object required that both the mouse down and mouse up events occur inside the button . Hence , any trial on which a mouse event occurred on the window before a complete mouse down and mouse up occurring in the button was regarded as an error trial and discarded . MILLISECONDS MATTER 327 0 0 perceive - display HOME POG Predicted time : 970 s initiate - mouse On 90 970 TARGET Figure 4 . From HOME button ( btn ) to TARGET btn . The location of the TARGET is not known until it is perceived and verified . The CPM - GOMS prediction for time from mouse down on HOME to mouse down on TARGET is 970 ms . The critical path is indicated by bold lines connecting shadowed boxes . mouse Dn = mouse - down ; POG = point of gaze ; Joe = location . Results and Discussion Because we were not interested in modeling learning , data from the first 10 blocks were discarded . For each participant , the median mouse down to mouse down time for moving to each target and moving from each target to home was calculated for Blocks 10 - 50 . The data were cleaned to eliminate any trial on which a partic­ ipant clicked on the window before clicking on the button . This stringent criterion eliminated 31 % of the button clicks . Because this procedure eliminated over two thirds of the data for 1 partic­ ipant , that participant was eliminated from the analysis . A second participant was eliminated as his or her median response times exceeded the mean times for all participants by 3 standard deviations . The empirical data yield a mean difference of 154 ms ( see Table 1 ) in going from HOME - to - TARGET as opposed to going from TARGET - to - HOME . An analysis of variance CANOVA ) showed this difference to be significant , F ( l , 27 ) = 682 . 17 , p < . 0001 , MSE = 0 . 004 . The overall absolute difference between predicted versus found was 2 . 41 % for the HOME - to - T ARGET model and 2 . 38 % for the TARGET - to - HOME model . Comparing the prediction of the model with the mean time for each of the 28 participants yielded a root - mean - square deviation ( RMSD ) of the HOME - to - TARGET model from the data of 131 ms and an RMSD of the TARGET­ to - HOME model from the data of 137 ms . The RMSD as a percentage is 13 . 12 % for the HOME - to - TARGET model and 16 . 33 % for the TARGET - to - HOME model . For both models , the percentage of absolute difference as well as the percentage RMSD is below the 20 % mark suggested by John and Newell ( 1989 ) as acceptable for approximate modeling . Of greater interest for the microstrategy argument , the predicted difference of 150 ms is within the 95 % confidence interval ( 142 to 166 ms ) of the obtained difference of 154 ms , t ( 27 ) = 0 . 700 , p = 0 . 49 . This match is taken as evidence that the essential difference between the HOME - to - TARGET and TARGET - to­ HOME models is the difference in the time it takes to perceive and verify the next button ' s location . For the HOME - to - TARGET model , this perceive and verify must be done ; for the TARGET­ to - HOME model , the participants are free to adopt the SLOW - C / M strategy but , apparently , do not . The results suggest that people are sensitive to time costs as small as 150 ms . In a simple paradigm , moving to and clicking on a button , participants differentiate among buttons and adopt the microstrategy that maximizes per­ formance for each button , instead of using one strategy for all buttons . Bracketing , Profiling , and Diagnosis : The Target - Acquisition Task The button study illustrated that people are able to maximize performance by adapting their microstrategies to small but pre - 328 GRAY AND BOEHM - DA VIS 0 display - change 50 50 50 initiate - attend· move - visual cursor TARGET 0 50 verify target - loc cursor 50 Predicted time : 820ms initiate - mouse On 90 HOME 820 Figure 5 . From TARGET button ( btn ) to HOME btn . HOME location is known before it is perceived and verified . The CPM - GOMS prediction for time from mouse down on TARGET to mouse down on HOME is 820 ms . The critical path is indicated by bold lines connecting shadowed boxes . mouse Dn = mouse - down ; POG = point of gaze ; loc = location . dictable task differences . However , the study was a well - controlled experiment with a narrow focus and many participants . This raises the question of whether microstrategies can be useful in a broader context with more realistic tasks . In contrast to the button study , the target - acquisition task was a usability study involving 2 participants using a software prototype . Although empirical data were collected , it was not an experiment . The goal of data collection was not to test hypotheses , but to provide useful feedback to the developers . This feedback took three forms . First was bracketing . Taking into account only those constraints imposed by the interface , could we define two sets of models that defined the lower and upper Table 1 Mean Time Difference ( in Milliseconds ) Between Moving From HOME - to - TARGET and TARGET - to - HOME HOME - to - TARGET - to - Difference TARGET HOME Difference Predicted 970 820 150 Found 99 4 840 154 95 % CI 19 . 7 19 . 7 Absolute difference ( % ) 2 . 41 2 . 38 Note . The absolute difference was calculated as ( found - predicted ) / found . CI = confidence interval . bounds on performance and , therefore , bracket ( Kieras & Meyer , 1998 ) individual performance ? Second was profiling . If we could bracket performance , could we also characterize systematic deviations from the FASTEST REASONABLE model as due solely to the use of a slower microstrategy ? To address this question , we constructed BEST FIT models to identify which microstrategies people were using . The third question concerned diagnosis . Places in which the microstrategy used in the BEST FIT model differs from that used in the FASTEST REASONABLE model indicate less than optimal performance . The BEST FIT models identify what people are doing instead of the optimal and may lead to insights regarding why they are doing it . Task and Procedures The target - acquisition task involved a scenario in which participants acquired and designated three increasingly precise locations . The task was modeled on one performed by F - 16 pilots who must designate a succession of way points as their mission proceeds . An initial way point is designated before the mission begins . As they approach their target , they successively zoom ( magnify ) the display from a more global to a more local view . After each zoom , they designate a new , more precise , target way point . Each trial consisted of three unit tasks of approximately 5 s each , with a 5 - s blank screen between unit tasks . Each unit task required designating a way point . For the second and third unit tasks , before a way point was designated , the display had to be zoomed . Because the three unit tasks were MILLISECONDS MA TIER 329 similar , with the advise and consent of the developer , we chose to focus on the third unit task . Both the second and third unit tasks can be decomposed into a five - part sequence . After the blank screen disappears , the participant is required to depress a function key located on the keyboard . This event activates a radar display ( Figure 6 : upper - right section ) . The participant is then required to select a point on the radar display to become the center ( the zoom point ) of a new ( zoomed ) display by initiating a mouse - down event ( Part 1 ) . ( Note that the mouse - up event does not need to be performed in the same display location as the mouse - down event . ) Once the zoom point has been selected , the participant moves the mouse to and clicks on a button ( EXP2 ) located at the bottom right of the radar display . This event magnifies the display with the zoom point as the center of the expanded display ( Part 2 ) . The participant then moves the mouse back to near the center of the radar display and mouse downs on a new way point . Here again , it is the mouse - down event that selects the point , not the mouse - up event ( Part 3 ) . The participant then presses another function key located on the key­ board . This keypress activates the NA V DES display ( Figure 6 : bottom ) . Activating the NA V DES display puts the cursor at its center ( Part 4 ) . Finally , the participant moves the cursor from the center of NA V DES to the NA VDESG button ( located at the bottom right of the NA V DES display ) and clicks on the button . The mouse - up event on the NA VDESG button ends Part 5 as well as the unit task . The displays for the three unit tasks overlap , and the procedures are very similar . The ground radar display ( Figure 6 : upper - right section ) for the first unit task is the initial display for Unit Task 2 . The zoomed display for Unit Task 2 is the initial display for Unit Task 3 . Similarly , the labels on some of the buttons change along with the zoomed state of the display , whereas most button labels do not . Figure 6 shows the initial display for Unit Task 3 . At this stage , the display has been zoomed once , and the zoom options - presented as soft buttons - are to go back to the normal view ( NORM ) or to expand the display a second time ( EXP2 ) . Microstrategies Used The five parts of the third unit task are shown in Table 2 . Each part is divided into one or two segments . The stub column contains a description Figure 6 . A screen print of the target display . The labels for three buttons ( NORM , EXP2 , and NA VDESG ) have been enhanced to make it easier for the reader to follow the procedures discussed in the text . NORM = Normative ; EXP2 = expand a second time . 330 GRAY AND BOEHM - DA VIS Table 2 Microstrategies Used in the Target - Acquisition Task Description Microstrategy SLOW Pl BEST FIT P2 FASTEST REASONABLE Part 1 : K3 to mouse down at zoom point From keypress to move cursor Mouse down on zoom point KP ! M MIC SLOW - C / M SLOW - MIC FAST - KP / M MEDIUM - KP / M FAST - KP / M SLOW - MIC SLOW - MIC SLOW - MIC Part 2 : Mouse down at zoom point to mouse down at EXP2 button Move from zoom point to EXP2 button Mouse down on EXP2 button CIM SLOW - C / M MIC SLOW - MIC SLOW - C / M MEDIUM - CIM FAST - C / M SLOW - MIC SLOW - MIC SLOW - MIC Part 3 : Mouse down at EXP2 button to mouse down at target Move from EXP2 button to way point Mouse down on way point CIM SLOW - C / M MIC SLOW - MIC MEDIUM - C / M SLOW - C / M MEDIUM - C / M SLOW - MIC SLOW - MIC SLOW - MIC Part 4 : Mouse down at target to K2 Keypress to select NA V DES display C / KP SLOW - C / KP SLOW - C / KP MEDIUM - C / KP FAST - C / KP Part 5 : K2 to mouse down at NA VDESG button Move from center to NA VDESG button Mouse down on KPIM SLOW - KP / M SLOW - KPIM MEDIUM - KP / M FAST - KP / M NA VDESG button MIC SLOW - MIC SLOW - MIC SLOW - MIC SLOW - MIC Note . The complete set of microstrategies for each participant can be downloaded from http : l / hfac . gmu . edul � mm/ . This site also includes the models for the KP / M and C / KP families of microstrategies . Pl = Participant l ; P2 = Participant 2 ; K2 = Function Key 2 ; K3 = Function Key 3 ; EXP2 = expand a second time ; KP / M = KEYPRESS - MOVE ; C / M = CLICK - MOVE ; MIC = MOVE - CLICK ; C / KP = CLICK - KEYPRESS . of the actions required . The first column lists the microstrategy family for each segment . As shown in the table , Parts 2 and 3 of the task can be characterized by the two families of microstrategies used in the button study ( C / M and MIC ) . The task also introduces two new families of microstrategies : KEYPRESS - MOVE ( KP / M ) and CLICK - KEYPRESS ( CIKP ) . ( The CPM - GOMS models of the microstrategies for these two families can be found at http : lll1fa c . gmu . edu / �mm / along with the complete set of models for each participant . ) Within the four microstrategy families required for this task ( MIC , CIM , KP / M , and C / KP ) , the design of the interactive system imposes constraints on which microstrategy can be applied . As shown by the last column of Table 2 , in many cases the microstrategy used by the FASTEST REASONABLE model is the slow or medium one . For the target - acquisition task , whenever an MIC is required , the FASTEST REASONABLE model incorporates the SLOW - MIC family member . The FAST - MIC microstrategy ( see Figure 2 ) assumes that the mouse can be clicked without ve1ifying that the cursor is inside the target . However , each of the four MICs needed for the target - acquisition task requires that the participant move to and click on a button or a smaller target . In all four cases , an explicit verification of cursor position is needed before the mouse can be clicked . Hence , the design of the interactive objects precludes the FAST - MIC microstrategy . Part 3 of the target - acquisition task requires a C / M followed by an MIC . However , the design of the interactive object , a typical button , prevents participants from using the fastest C / M microstrategy . As shown in Fig­ ure 3 , the FAST - C / M microstrategy assumes that the participant can begin moving the cursor ( initiate - move - cursor ) as soon as the mouse button is down and before the mouse up is completed . For the button objects used in this interface , this is an unreasonable assumption . In coruruon with most buttons , if the mouse is moved out of the button after mouse down but before mouse up completes , the system will not respond to the button click . In contrast , the MEDIUM - C / M microstrategy assumes that initiate - move­ cursor is dependent on completing the mouse up . Hence , for Part 3 , MEDIUM - C/M is the fastest C/M microstrategy available to participants . Empirical Data Participants and procedure . Data were collected from 2 participants ( refen-ed to as Pl and P2 ) . Each participant received 80 trials of training and 28 ( Pl ) or 27 ( P2 ) perfonnance trials on the task ( the difference in the number of performance trials was due to a place - keeping en-or by the usability specialist who collected the data ) . The time between trials was under the control of the pm·ticipant . During the performance trials , log files were collected that saved events - including mouse down , mouse up , and keypress - to the nearest tick ( 16 . 667 ms ) . Parameters . To model the microstrategies used by each participant in perfonning the target - acquisition task , we needed execution times for some of the operators . Treating individual keypresses as independent events , there was a significant between - subject difference of 52 ms in the mean MILLISECONDS MATTER 331 time taken to mouse up ( where the duration of the mouse up was calculated as beginning at the mouse - down time and ending at the mouse - up time ) across all three unit tasks , F ( l , 98 ) = 185 . 49 , p < . 0001 , MSE = 66 , 187 . 80 . Unfortunately , there were no similar events to mark the beginning of either the mouse - down or the keypress events . Hence , for each participant , these events were assigned the same durntion as the mouse up . Across the entire task , there were two lengths of cursor movement : short and long . Short movements included those from one button to an adjacent button as well as those from the center of the surface radar to the zoom point . Long movements included all movements from near the center of a display to a button or , conversely , from a button to near the center of the display . Again treating individual keypresses as independent events , the differ­ ence between participants in short movement times was significant , thereby justifying the use of a different short cursor movement parameter for Pl ( 196 ms ) than for P2 ( 309 ms ) , F ( l , 51 ) = 5 . 69 , p = . 021 , MSE = 168 , 246 . 58 . However , as the difference in the long movement time was not significant , the average long movement time of 493 ms was used for both participants ( F < 1 ) . The remaining parameters reflect normative times obtained from sources outside the current study . As shown in Table 3 , these parameters were identical for each participant . Bracketing the Data In and of itself , bracketing is most useful if done as part of the design process , that is , before a prototype is built and before empirical data can be collected . In this case , the models would use default parameters . A model using the fastest reasonable microstrategies should predict how fast users would be if they took the full advantage of the fastest microstrategies permitted by the design of the software . Hence , the FASTEST REASONABLE models provide a way for developers to understand what optimal performance ( defined here as fastest performance ) on their system would be . The SLOWEST models serve as another important benchmark . How slow would performance be expected to be if users did not take advantage of the full potential of the interface ? For the target - acquisition task , the interface had already been built , and the charge from the developer was to evaluate how well participants performed using the interface . That is , the focus of the usability evaluation was on profiling and diagnosis . However , bracketing is a prerequisite for profiling . Thus , two CPM - GOMS models were built that we expected Table 3 Parameters Used to Fit Single Participant Curves Duration Operator Pl P2 Source All cognitive 50 50 Normative Motor Keypress down 127 75 Mouse up for Pl vs . P2 Mouse down 127 75 Mouse up for Pl vs . P2 Mouse up 127 75 Pl vs . P2 * * Move cursor short distance 196 309 Pl vs . P2 * Move cursor long distance 493 493 Pl and P2 Saccade 30 30 Normative Perceptual Perceive simple visual event 100 100 Normative Perceive simple semantic event 290 290 Normative Note . Pl = Participant 1 ; P2 = Participant 2 . All values are in millisec­ onds . For " move cursor long distance , " F < 1 . * p = . 021 . * * p < . 0001 . • SLOW II BEST FlTIING 151 data • FAS'IEST REASONABLE 1250 1000 750 "' e 500 250 0 1 2 3 4 5 part Figure 7 . Data and predictions for Participant 1 ( Pl ; error bars show 95 % confidence interval ) . Data are bracketed by the SLOW and FASTEST REASONABLE models . would bracket participant performance . The SLOWEST model assumed that each participant always used the slowest microstrategy . The FASTEST REASONABLE model assumed that each always used the fastest micro­ strategy available given the constraints imposed by the design of the interactive objects . Using the parameters in Table 3 , two versions of each model were built , one for each participant . The predicted duration of each part of the task was calculated for each model and compared with the data . The predicted durations are shown in Figure 7 for Pl and in Figure 8 for P2 . The fit of the models to the data is shown in Table 4 . As can be seen in Figures 7 and 8 , the FASTEST REASONABLE and SLOW models bracket the empirical data . Treating each part of the task as an independent event , we calculated the 95 % confidence interval around • SLOW li\il BEST - FlTIING El data • FAS'IEST REASONABLE 1250 P2 1000 750 "" e 500 250 0 1 2 3 4 5 part Figure 8 . Data and predictions for Participant 2 ( P2 ; error bars show 95 % confidence interval ) . Data are bracketed by the SLOW and FASTEST REASONABLE models . 332 GRAY AND BOEHM - DA VIS Table 4 Fit of the SLOWEST, FASTEST REASONABLE , and BEST FIT Models to the Empirical Data for Participants 1 and 2 FASTEST Participant SLOWEST REASONABLE BEST FIT 1 RMSD 99 165 42 Mean % difference 11 19 5 2 RMSD 134 49 29 Mean % difference 20 8 4 Note . RMSD = root - mean - square deviation . each mean . Using these larger intervals as our estimates of the true empirical mean , the FASTEST REASONABLE and SLOW models still bracket all of our data , with one notable exception ( Part 5 for Pl ) . To calculate the extent to which the models deviated from the data of each participant , we calculated the mean percentage difference between the RMSD and data ( RMSDModeI y/Data P art x ) for each model over the five parts . This calculation yielded a mean percentage difference for the FASTEST REASONABLE model of 18 . 6 % for Pl and 7 . 5 % for P2 . For the SLOW model , the mean percentage difference was 11 . 2 % for Pl and 20 . 4 % for P2 ( see Table 4 ) . Profiling : Building the BEST FIT Model Profiling consists of building a BEST FIT model . For each pait of the task in which performance does not match the FASTEST REASONABLE model , faster microstrategies are swapped for successively slower micro­ strategies until either a good fit is obtained or the slowest microstrategy of a family has been used . This produces a BEST FIT model . When a model mismatches performance , a common way to increase its fit is to change one or more of its parameters . However , the microstrategy approach constrains the set of possible model changes in several important ways . In building a BEST FIT model , ( a ) the paraineters must be constant : The SLOW , BEST FIT , and FASTEST REASONABLE models must all use the saine parameter set ; ( b ) corresponding parts of the SLOW , BEST FIT , and FASTEST REASONABLE models must use members of the saine microstrategy fainily ; and ( c ) improving the fit of the BEST FIT model can be accomplished only by swapping microstrategies in and out from the saine family . Hence , the BEST FIT models are post hoc but not ad hoc . We argue that as with the mouse - button exainple , the set of microstrategies for any given interactive technology is small , constrained , and determinable . This process was followed to construct the BEST FIT models for Pl and P2 shown in columns 3 and 4 of Table 2 . ( The BEST FIT models are the only models that incorporated different members of the same micro­ strategy fainily for Pl and P2 . ) As shown in Table 4 , the mean per­ centage difference between the RMSD for the BEST FIT model and data ( RMSDModel BF / Data P art x ) over the five parts was 4 . 8 % for Pl and 4 . 4 % for P2 ( see also Figures 7 and 8 ) . The BEST FIT models are well within the range of acceptable error for approximate modeling ( John & Newell , 1989 ) . Diagnosis : Explaining How and Why the BEST FIT Model Differs From the FASTEST REASONABLE Model Places where the FASTEST REASONABLE model fits the data are taken as places in which performance is limited by the design of the interactive object . In contrast , places where the FASTEST REASONABLE model does not match the data are places in which the user is not working as efficiently as the developer expected . Diagnosing how the microstrategies used in the BEST FIT model differ from those used in the FASTEST REASONABLE model can be objectively determined by visually comparing the two models . Diagnosing why these differences exist is more spec­ ulative and entails generating hypotheses for each found differ­ ence . Below , we discuss how and why for each microstrategy . C/M . The task analysis suggested that a C / M microstrategy would be needed in Parts 2 and 3 ( see Table 2 and Figure 3 ) . The BEST FIT model suggested that the microstrategy adopted in Part 2 by both participants was slower than that used in the FASTEST REASONABLE model ; Pl adopted SLOW - C / M , and P2 adopted MEDIUM - C / M . In Part 3 of the task , the BEST FIT model matched the FASTEST REASONABLE model for Pl ( MEDIUM - C / M ) ; however , for P2 , a better fit was provided by the slowest microstrategy ( SLOW - C / M ) . For Part 2 , participants could begin moving to the EXP2 button immediately after they had moused down on the zoom point . However , the BEST FIT model suggested that neither did so . Unlike a button , the zoom point is not well defined . The reluctance of the participants to begin moving at the soonest possible time could reflect an uncertainty regarding whether they had indeed clicked on the right target . Hence , for Part 2 , the verification may be needed not to determine where to move next , but to determine that the zoom point had been selected . For Part 3 , participants could begin moving to the way point as soon as they had moused up on the EXP2 button . Because the display changed after the mouse up , this meant that the participants would know the approximate location of the target ( from previous experience ) but not the exact location . Apparently , Pl was willing to adjust her course while in motion , but P2 was not . The objects displayed on the screen differed after each zoom . This meant that the display in Unit Task 1 after the zoom ( while the first way point was being selected ) was the same as the display in Unit Task 2 before the zoom ( while the first zoom point was being selected ) . Similarly , the display in Unit Task 2 after the zoom ( while the second way point was being selected ) was the same as the display in Unit Task 3 before the zoom ( while the second zoom point was being selected ) . ( Unit Tasks 2 and 3 each involved selecting a zoom point , zooming , and then selecting a way point . Selecting a zoom point and zooming were not part of Unit Task 1 . ) Hence , the display did not uniquely cue the current task . The absence of reliable perceptual cues seems likely to have forced a greater reliance on memory . The number of identical trials and the similarity of unit tasks on each trial would be expected to foster proactive interference ( see , e . g . , Postman & Gray , 1977 ) . Hence , the task conditions may have encouraged the participants to adopt conservative strategies . MIC . In all four situations in which an MIC is used ( see Table 2 ) , the FASTEST REASONABLE and BEST FIT models use the SLOW - MIC microstrategy , which requires that the participant obtain precise knowledge of the target location and requires ex­ plicit verification that the cursor is over ( or in ) the target before the mouse - down operator is initialized . Given the fact that this inter­ face presented the participants with small targets for selection , it is hard to imagine how the participants could have adopted any microstrategy other than SLOW - MIC . MILLISECONDS MATIER 333 KP / M . The task analysis of the target - acquisition task yielded a KP / M microstrategy for Parts 1 and 5 of the task . For Pl , the BEST FIT for Part 1 is the fastest microstrategy : FAST - KP / M . An examination of task constraints suggests that Pl might have been using the time between segments to anticipate what needed to be done at the beginning of the segment . After Part 4 , no time was available to similarly prepare for the KP / M required by Part 5 . Thus , for Pl , the use of the SLOW - KP / M microstrategy in Part 5 was consistent with her use of the SLOW - C / KP microstrategy in Part 4 . As discussed below , the SLOW - C / KP microstrategy re­ quired the participant to move her eyes to the key and verify finger position before pressing the key . Hence , use of the SLOW - C / KP microstrategy in Part 4 left the eyes in the wrong position , neces­ sitating a POG to the NA V DES display after the key had been pressed . The BEST FIT for P2 had him using the same MEDIUM - KP / M microstrategy for Parts 1 and 5 . This microstrategy suggested that Pl moved his eyes ahead of time but was reluctant to move the cursor until he could verify that the display had truly changed . C!KP . For Part 4 , the best fitting C / KP microstrategy for each participant reflected an explicit verification that the goal of Part 3 , selecting the way point , had been accomplished before the key­ press . This 150 - ms hesitation might reflect a lack of confidence , or a lack of experience , with the system . In addition , the SLOW­ C / KP model needed for Pl implied that an explicit check of finger position , costing an additional 280 ms , was prerequisite to keypressing . Discussion In this study , the first step was to determine if building the FASTEST REASONABLE and SLOW models would bracket the performance of both of our participants , which it did . The second step was to use profiling to see if a BEST FIT model could improve the match of the individual participants ' models to the data , which it did . The BEST FIT models indicated that the behavior of the par­ ticipants matched the FASTEST REASONABLE model for the MIC microstrategy but differed from the FASTEST REASONABLE model for C / M , KP / M , and C / KP . For C / M , we suggested that the use of slower microstrategies reflected a confusion among the three unit tasks . The three unit tasks were not perceptually distinct . This perceptual similarity negated the utility of the graphic user interface for helping users decide what to do next ( Payne , 1991 ) . Hence , rather than relying on the display to cue the current state of the target - acquisition task , participants might have had to rely more on memory than is usual for interactive behavior with current interactive technology . The slower microstrategies adopted for KP / M and C / KP might reflect a lack of confidence or familiarity with the behavior of the interface . Participants had only 80 trials of experience with the target - acquisition task before the trials on which data were col­ lected . Perhaps more trials were needed to acquire familiarity with the interface . Alternatively , given the lack of distinctive perceptual cues , the hypothesized forced reliance on memory might have caused the participants to lose their place in the procedure even after they had gained familiarity with the task . Although lack of experience might be a factor in explaining the use of less - than - optimal microstrategies , the common theme in the diagnosis was the lack of distinctive perceptual cues . Feedback to the developer would stress the importance of changing the inter­ face so that the current state of the system ( i . e . , both the current unit task - I , 2 , or 3 - and the subtask within each unit task­ selecting a zoom point versus selecting a way point ) could be readily determined by perceptual cues . Summary In this article , CPM - GOMS notation was used to model basic activities involving interactive devices and interactive objects . Microstrategies were derived from these activities and combined to yield cognitive models of interactive behavior . The models were used to predict performance times for two tasks : the button task and the target - acquisition task . The resulting data suggested a number of basic properties of microstrategies . It Is Possible to Deploy Different Microstrategies in the Same Task Context Both tasks showed that different members of the same micro­ strategy family could be deployed in the same task context . For the button study , in the TARGET - to - HOME task , the participants deployed the MEDIUM - C / M microstrategy , whereas in the HOME - to - TARGET task , participants used the SLOW - C / M mi­ crostrategy . The two participants in the target - acquisition task deployed different members of the same microstrategy family in different pai.ts of the task . Microstrategy Selection Is Nondeliberate None of the models built for these tasks contained an explicit deliberative process for choosing among microstrategies . Indeed , unless the models are very wrong , they strongly suggest that there is no time taken during task execution for such deliberation . The lack of time for deliberation suggests that users must have acquired selection rules for when to use one microstrategy rather than another from prior experiences with interactive systems . Alterna­ tively , selection rules may be quickly acquired during the early trials of a task . This assumption of nondeliberate selection is similar to that made by Card et al . ( 1983 ) to explain the selection of one method when alternative methods exist for accomplishing the same goal . Although the cognitive basis of nondeliberate choice is under­ specified by the GOMS family of models , it is compatible with the cognitive mechanisms for nondeliberate choice elaborated by such theories as ACT - R ( Anderson & Lebiere , 1998 ) , EPIC ( Kieras & Meyer , 1997 ) , and Soar ( Newell , 1990 ) . Faster Microstrategies Require the Elimination of Explicit Verifications Previous research had suggested that human cognition is sensi­ tive to small differences in the cost of performing a task . The button study confirmed this result as people optimized their inter­ actions by choosing the fastest microstrategy for each of the two tasks ( HOME - to - TARGET and TARGET - to - HOME ) . However , the target - acquisition task suggested some caveats to this conclusion . 334 GRAY AND BOEHM - DAVIS In the target - acquisition task , when the interface permitted al­ ternative microstrategies , the slowest microstrategy was chosen in four instances , whereas a faster microstrategy was chosen in six . Although the interface permitted a choice of microstrategies , the participants were unable to select the fastest reasonable one . Use of more conservative microstrategies might have reflected the lack of distinctive perceptual cues . Slower microstrategies incorporate more explicit verification than do faster microstrategies . Bovair , Kieras , and Polson ( 1990 ) have noted that explicitly checking " for all feedback from the device before performing the next step " ( p . 15 ) is a characteristic of novice performance . It seems reasonable to interpret novice reliance on explicit feedback as a reaction to their uncertainty about the effect that their actions will have on the current state . This analysis suggests that in ambiguous situations , explicit veri­ fications will be the norm regardless of level of expertise . The three target - acquisition unit tasks lacked distinctive percep­ tual cues . In performing this task , participants might have relied on a combination of error - prone memory for place - keeping combined with explicit verification . Such explicit verification strategies may also be needed for extremely complex or safety - critical tasks , where mistakes may be quite costly ( see O ' Hara & Payne , 1999 , for research that may be relevant to this point ) . Whereas in the target - acquisition task , the need for explicit verifications reflects a design flaw ; in safety - critical cases , encouraging the use of explicit verification strategies may be a design goal . Microstrategies Can Be Incorporated Into Task Analysis Models to Improve Predictions of Peiformance In the second study , models built using the fastest reasonable versus the slowest microstrategies bracketed individual perfor­ mance . For many design purposes , having some assurance that performance will fall between the extremes established by the FASTEST - REASONABLE and SLOW models ( see Figure 7 and Figure 8 ) will be enough to assure that the user can do what is needed in the time allotted . If bracketing is done during the design phase ( rather than as a prerequisite to profiling and diagnosis ) , normative parameters can be used ; collecting empirical data to estimate parameters is not required . Within the limits posed by the operating system and software tools , the designer determines the microstrategies available to the user . The user will not have access to a microstrategy that is faster than the fastest microstrategy permitted by the design of the interface . Likewise , if the design limits the feedback available to the user , then the user will not be able to verify their inputs and , hence , will not have access to microstrategies that incorporate explicit checking . Hence , unlike the case presented here , perfor­ mance could match the fastest reasonable microstrategies but not meet performance specifications due to an increase in errors . Microstrategies Can Be Used for Diagnosis Once profiling has been done , discrepancies between the microstrategy for the BEST FIT versus the FASTEST REASONABLE model can provide insight into constraints that limit performance . For example , the use of a slower - than - optimal microstrategy could be due to lack of experience , to lack of distinctive perceptual cues , or to the need for explicit feedback verifying that an action had the intended result . Embodied Cognition , Task , and Artifact Interactive behavior emerges from the constraints and opportu­ nities provided by the interactions among embodied cognition , the task , and the artifact ( the ETA or TJ triad ) . We conjecture that the graphic notation and minimalist theory adopted in this article to describe interactive behavior will make the utility of microstrate­ gies apparent to designers . Similarly , we hope that the level of description will make clear to psychological researchers the im­ portance of integrating hitherto disparate descriptions of low - level cognitive , perceptual , and motor operations into theories of em­ bodied cognition . The button study presented participants with what was , essen­ tially , a single reaction time ( SRT ) task : When a button appears , move the mouse to and click on the button . The microstrategies approach made the alternatives for performing the task apparent and allowed us to focus on the locus of the differences in TARGET - to - HOME versus HOME - to - TARGET performance . In­ deed , the microstrategy approach provides a methodology by which cognitive and perceptual theorists can focus on productive issues while avoiding those that are predetermined by the ET A triad . For example , in work that we have recently begun ( Gray et al . , 2000 ) , we have extended the analysis of the microstrategies used in the button study to identify what we believe are hitherto unnoted interactions among cognitive , perceptual , and motor op­ erations . The link between research and application is bidirec­ tional . We believe that our applied colleagues will benefit from the research results of such microdecomposition of the task , especially if the results can be cast as differences between microstrategies at the CPM - GOMS level of analysis . Implications : Why Milliseconds Matter Whether designers intend to engineer interactions at the milli­ second level , they do . Decisions made by designers who focus on higher level design issues affect strategies adopted at the millisec­ ond level . In the case of the button study , the microstrategies that participants adopted took advantage of the predictability of the home button ' s location to shave milliseconds from the TARGET­ to - HOME time . In contrast , each of the three target - acquisition unit tasks required slightly different behavior with perceptually similar interfaces . In these circumstances , keeping the current task in mind is hard work ( Altmann & Gray , 1999 , 2000 ) . Such circumstances may have led participants to adopt conservative microstrategies that incorporated much explicit verification . Although milliseconds may seem too small to matter , millisec­ onds added to each low - level step of interactive behavior quickly add up . For the four microstrategy families reviewed here , the slowest microstrategy added 22 % to the time required for the fastest MIC microstrategy , 179 % for C / KP , 500 % for C / M , and 560 % for KP / M . Under the best of conditions , using a slower microstrategy when a faster one is available may make an interface feel sluggish and nonresponsive . Under the wrong set of condi­ tions , this sluggish response or attempts by the user to avoid it may result in higher workload or increased errors . Microstrategies should also matter to those who are considering whether or how MILLISECONDS MATIER 335 best to use new interactive technologies . If these technologies are to replace or supplement current technologies such as the mouse and button , it will be because milliseconds do matter and the microstrategies that these techniques facilitate involve less effort for the user to learn and deploy than the existing alternatives . References Altmann , E . M . , & Gray , W . D . ( 1999 ) . Serial attention as strategic memory . In M . Hahn & S . C . Stoness ( Eds . ) , Proceedings of the 21st Annual Conference of the Cognitive Science Society ( pp . 25 - 30 ) . Hills­ dale , NJ : Erlbaum . Altmann , E . M . , & Gray , W . D . ( 2000 ) . Preparing to forget : Memory and functional decay in serial attention . Manuscript submitted for publica­ tion . Anderson , J . R . , & Lebiere , C . ( Eds . ) . ( 1998 ) . Atomic components of thought . Hillsdale , NJ : Erlbaum . Ballard , D . H . , Hayhoe , M . M . , & Pelz , J . B . ( 1995 ) . Memory represen­ tations in natural tasks . Journal of Cognitive Neuroscience , 7 , 66 - 80 . Ballard , D . H . , Hayhoe , M . M . , Pook , P . K . , & Rao , R . P . N . ( 1997 ) . Deictic codes for the embodiment of cognition . Behavioral and Brain Sciences , 20 , 723 - 742 . Bovair , S . , Kieras , D . E . , & Polson , P . G . ( 1990 ) . The acquisition and performance of text - editing skill : A cognitive complexity analysis . Human - Computer Interaction , 5 , 1 - 48 . Byrne , M . D . ( 1999 ) . ACT - R Perceptual - Motor ( ACT - R/PM ) : A users manual [ On - line ] . Available http : / / chil . rice . edu / byrne/RPM / docs / index . html Byrne , M . D . , & Anderson , J . R . ( 1998 ) . Perception and action . In J . R . Anderson & C . Lebiere ( Eds . ) , The atomic components of thought ( pp . 167 - 200 ) . Hillsdale , NJ : Erlbaum . Card , S . K . , Moran , T . P . , & Newell , A . ( 1983 ) . The psychology of human - computer interaction . Hillsdale , NJ : Erlbaum . Chong , R . S . , & Laird , J . E . ( 1997 ) . Identifying dual - task executive process knowledge using EPIC - Soar . In M . G . Shafto & P . Langley ( Eds . ) , Proceedings of the 19th annual conference of the Cognitive Science Society ( pp . 107 - 112 ) . Palo Alto , CA : Erlbaum . Gray , W . D . , John , B . E . , & Atwood , M . E . ( 1993 ) . Project Ernestine : Validating a GOMS analysis for predicting and explaining real - world performance . Human - Computer Interaction , 8 , 237 - 309 . Gray , W . D . , Schoelles , M . J . , & Fu , W . - t . ( 2000 ) . Modeling a continuous dynamic task . In N . Taatgen & J . Aasman ( Eds . ) , Proceedings of the third international conference on cognitive modeling ( pp . 158 - 168 ) . Groningen , the Netherlands : Universal Press . John , B . E . ( 1990 ) . Extensions of GOMS analyses to expert performance requiring perception of dynamic visual and auditory information . In J . C . Chew & J . Whiteside ( Eds . ) , ACM CHI ' 90 Conference on Human Factors in Computing Systems ( pp . 107 - 115 ) . New York : ACM Press . John , B . E . ( 1995 , October ) . Why GOMS ? interactions , 2 , 80 - 89 . John , B . E . ( 1996 ) . TYPIST : A theory of performance in skilled typing . Human - Computer Interaction , 11 , 321 - 355 . John , B . E . , & Kieras , D . E . ( 1996a ) . The GOMS family of user interface analysis techniques : Comparison and contrast . ACM Transactions 011 Computer - Human Interaction , 3 , 320 - 351 . John , B . E . , & Kieras , D . E . ( 1996b ) . Using GOMS for user interface design and evaluation : Which technique ? ACM Transactions on Computer - Human Interaction , 3 , 287 - 319 . John , B . E . , & Newell , A . ( 1989 ) . Cumulating the science of HCI : From S - R compatibility to transcription typing . In K . Bice & C . Lewis ( Eds . ) , ACM CHI ' 89 conference on human factors in computing systems ( pp . 109 - 114 ) . New York : ACM Press . Kieras , D . E . , & Meyer , D . E . ( 1997 ) . An overview of the EPIC architec­ ture for cognition and performance with application to human - computer interaction . Human - Computer Interaction , 12 , 391 - 438 . Kieras , D . E . , & Meyer , D . E . ( 2000 ) . The role of cognitive task analysis in the application of predictive models of human performance . In J . M . Schraagen , S . F . Chipman , & V . L . Shalin , ( Eds . ) , Cognitive task analysis ( pp . 237 - 260 ) . Mahwah , NJ : Erlbaum . Lallement , Y . , & John , B . E . ( 1998 ) . Cognitive architecture and modeling idiom : An examination of three models of the Wickens ' task . In M . A . Gernsbacher & S . J . Derry ( Eds . ) , Proceedings of the 20th annual coriference of the Cognitive Science Society ( pp . 597 - 602 ) . Hillsdale , NJ : Erlbaum . Lohse , G . L . , & Johnson , E . J . ( 1996 ) . A comparison of two process tracing methods for choice tasks . Organizational Behavior and Human Decision Processes , 68 ( 1 ) , 28 - 43 . MacKenzie , I . S . ( 1992 ) . Fitts ' law as a research and design tool in human - computer interaction . Human - Computer Interaction , 7 ( 1 ) , 91 - 139 . Newell , A . ( 1990 ) . Unified theories of cognition . Cambridge , MA : Harvard University Press . Newell , A . , & Card , S . K . ( 1985 ) . The prospects for psychological science in human - computer interaction . Human - Computer Interaction , 1 ( 3 ) , 209 - 242 . O ' Hara , K . P . , & Payne , S . J . ( 1998 ) . The effects of operator implemen­ tation cost on planfulness of problem solving and learning . Cognitive Psychology , 35 , 34 - 70 . O ' Hara , K . P . , & Payne , S . J . ( 1999 ) . Planning and the user interface : The effects of lockout time and error recovery cost . International Journal of Human - Computer Studies , 50 , 41 - 59 . Payne , S . J . ( 1991 ) . Display - based action at the user interface . Interna­ tional Journal of Man - Machine Studies , 35 , 275 - 289 . Postman , L . , & Gray , W . D . ( 1977 ) . Maintenance of prior associations and proactive inhibition . Journal of Experimental Psychology : Human Leaming and Memory , 3 , 255 - 263 . Svendsen , G . B . ( 1991 ) . The influence of interface style on problem solving . International Journal of Man - Machine Studies , 35 , 379 - 397 . Received September 17 , 1999 Revision received May 15 , 2000 Accepted May 17 , 2000 •