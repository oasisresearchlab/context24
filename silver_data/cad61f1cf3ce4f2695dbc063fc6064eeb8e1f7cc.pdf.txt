Computers and the Humanities 35 : 123 – 152 , 2001 . © 2001 Kluwer Academic Publishers . Printed in the Netherlands . 123 Archaeological Data Models and Web Publication Using XML J . DAVID SCHLOEN The Oriental Institute of the University of Chicago , 1155 East 58th Street , Chicago , IL 60637 , USA Abstract . An appropriate standardized data model is necessary to facilitate electronic publication and analysis of archaeological data on the World Wide Web . A hierarchical “item - based” model is proposed which can be readily implemented as an Extensible Markup Language ( XML ) tagging scheme that can represent any kind of archaeological data and deliver it in a cross - platform , stand - ardized fashion to any Web browser . This tagging scheme and the data model it implements permit seamless integration and joint querying of archaeological datasets derived from many different sources . Key words : archaeology , data models , World Wide Web , XML 1 . XML , Java , and the Future of Archaeological Publication The basic premise of this paper is , to put it bluntly , that traditional print publication of archaeological data is obsolete and will increasingly be replaced by electronic publication . Although the death of print and the ascendancy of electronic publica - tion has been predicted many times , this change in archaeological practice is made imminent by the huge expansion of the Internet in recent years and by the phenom - enal success of the World Wide Web in particular . Furthermore , new developments in the Web itself will remove its current limitations and release the full potential of the Internet as a medium of archaeological publication and research . Archaeological publication on the Web has some well - known advantages . This form of publication is highly efﬁcient because of the speed and cheapness of disseminating large quantities of detailed archaeological information electronic - ally , including full - color visual information such as maps and photographs . It is also “platform independent” because it can rely on ubiquitous Web browser soft - ware that makes it possible to present the same published material on any computer without regard to the operating system being used ( e . g . , Windows vs . Macintosh ) , thus avoiding the complications of distributing and maintaining software and data in multiple specialized formats tailored for speciﬁc computer platforms . Thirdly , it is dynamic , because published information is sent on demand from central “server” computers , making it possible for authors to revise and update archae - ological information as needed and making it unnecessary for their readers to store 124 J . DAVID SCHLOEN for themselves large datasets in multiple versions . It is true that the rate of data transfer on the Web continues to be inadequate for many users , but rapidly devel - oping Internet technology will eventually solve this problem , and the network data transfer problem can be circumvented , if need be , through the physical distribution of Web - style content on CD - ROM or DVD - ROM disks . ( A useful review of “elec - tronic archaeology , ” including some of the issues associated with Web publication , may be found in Antiquity vol . 71 , Dec . 1997 , pp . 1026 – 1076 ) . The principal disadvantage of Web publication to date has been the inab - ility to disseminate the underlying structure of complex datasets , as opposed to particular static views of the data . What is sent over the Internet to a local Web browser are preformatted “pages” of information encoded in the standard Hyper - text Markup Language ( HTML ) , which provides instructions for the display of text and pictures and supplies “hyperlinks” to other Web pages . Unfortunately , this approach severely limits search - and - retrieval options and modes of user inter - action , making it difﬁcult to provide the kinds of sophisticated database features that are possible with current non - Web software . Internet experts have long recog - nized the limitations of HTML’s presentation - oriented format and the consequent inefﬁciency of Web data - publishing applications , which require cumbersome inter - actions with underlying databases on central server computers in order to prepare each static page of information that is seen by a Web user . A solution to this problem has therefore been offered recently in the form of the new Extensible Markup Language ( XML ) , which is a streamlined version of the Standard Gener - alized Markup Language ( SGML ) that predates the World Wide Web and has been used in sophisticated electronic publishing applications for more than a decade . ( For up - to - date information and detailed bibliographies see the “SGML / XML Web Page” maintained by Robin Cover at http : / / www . oasis - open . org / cover . ) XML was formally approved by the World Wide Web Consortium in February 1998 as a standard format for disseminating structured data on the Web ( Bray et al . , 1998 ) . It has already attracted a great deal of attention in the software industry , and Microsoft and Netscape have hastened to add XML capabilities to their Web browser software ( Microsoft Corp . , 1998 ) . XML is seen as a means of realizing the goal of “distributed databases” that build on the enormous success of the World Wide Web by delivering richly structured information wherever and whenever it is needed . XML can do this because it is “extensible” in that it allows the creation of any number of new “tags” or element types for “marking up” published content , unlike HTML which uses a ﬁxed set of tags ( see Stanek , 1998 for examples ) . This means that an XML dataset ( or “document” ) contains both data and “metadata , ” that is , information concerning the meaning and organization of the data . Anyone who wishes may propose a new set of XML tags – a new “markup language” – that deﬁnes a standard structure for datasets in a particular subject area or information domain . Archaeology in particular is characterized by complex , highly structured data - sets consisting of visual as well as textual information . The discipline would ARCHAEOLOGICAL DATA MODELS 125 therefore beneﬁt greatly from a form of electronic publication that makes it possible to represent in a rigorous , standardized fashion the large number of internal and external cross - references among the individual elements of archaeological data - sets , as well as the meaning of the many possible types of such cross - references , representing spatial , temporal , or other relationships . The goal of such publica - tion is not simply to facilitate human navigation of large and complex bodies of information , but also to permit automated computer - aided retrieval and analysis of archaeological data dispersed among many different published datasets . XML will therefore be an important medium for disseminating archaeological information because Web publication using this new data format promises to be a simple and effective means of combining complex datasets from multiple sources for purposes of broader scale retrieval and analysis , avoiding the problems caused by the existing proprietary , limited , and inﬂexible data formats which have hindered electronic publication to date . The progress of archaeological research will depend on a ﬂexible yet standard - ized data representation format of this sort . For reasons of cost and space only a fraction of recorded archaeological data is currently disseminated via traditional print publication . Even with what is published it is difﬁcult to perform compre - hensive computer - aided analyses in order to make sense of the large volume of information that has accumulated from many different sources . Improved dissem - ination of archaeological information and efﬁcient analysis of it will require the kind of standardization which XML can facilitate . But XML itself is merely a general grammar for deﬁning speciﬁc markup schemes , which must be created for each information domain . Archaeologists therefore need to develop a discipline - speciﬁc XML markup scheme for producing XML documents which represent archaeological datasets . Such a markup language is proposed in this article as a basis for discussion and to encourage consideration of this approach to archaeological publication . In addition to XML another important tool for achieving effective elec - tronic publication of archaeological data is the Web - oriented “Java” program - ming language which has become popular over the past few years ( see http : / / www . javasoft . com ) . Java is much like other object - oriented program - ming languages in use today , but Java software has the unique feature of being platform independent ( or at least “100 % pure Java” software has this feature ) . A Java application can run on any computer , just as data in XML format can be processed by any computer . Java and XML together therefore provide a simple , standardized means by which Web users can invoke both software and the struc - tured data it works with in order to ﬁnd what they are looking for , without worrying about implementation details . Java software and XML documents can be delivered over the Internet as needed via a Web browser , freeing the user from the complic - ated and potentially expensive task of installing and maintaining platform - speciﬁc software and data . This complementarity is expressed by the slogan “XML gives Java something to do” ( Bosak , 1997 ) . 126 J . DAVID SCHLOEN The beneﬁts of XML and Java for electronic publication , and for archae - ological publication in particular , are substantial . It is now feasible to develop applications that will enable any Web user to view and analyze complex interre - lationships among individual data elements , textual or pictorial , which are drawn simultaneously from different sources . Through the use of an appropriate archae - ological data model expressed in an XML markup scheme it will be possible to achieve seamless integration of disparate datasets produced by individual excav - ation , survey , and archaeometric projects . The purpose of such integration , of course , is to allow unfettered human navigation of relevant information origin - ating in many different places , as well as comprehensive automated querying of combined archaeological data on any spatial scale , using complex retrieval criteria that take account of both the intrinsic attributes of units of observation and their extrinsic spatial and temporal interrelationships . Rather than having to deal one by one with a series of idiosyncratic , incommensurable datasets , archaeologists will be able to make full use of a comprehensive data model that organizes and inter - prets archaeological observations which have been made across multiple scales of measurement , from artifact to site to region , and have been produced by multiple recording and analytical techniques . In this way the electronic publication of archaeological information can fulﬁll its potential as a basis for computer - assisted research and analysis . To put this more concretely , one can imagine a scenario in which an archae - ologist uses a Web browser to search for published datasets which are displayed geographically as sites on a map or in an alphabetical checklist . The researcher will then select one or more datasets of interest and these will begin to be downloaded automatically to his or her computer , together with the Java software needed to view and analyze them . The researcher will be presented with a single composite view of the information in all of the datasets , organized in a spatial hierarchy or map that permits intuitive navigation among archaeological “items” ( units of observation ) at various spatial scales . He or she will click on items to show more detail , to display photographs , maps , diagrams , or textual documents , and to jump to other items , without being concerned about which dataset the information comes from or where it is physically stored . Most importantly , the archaeologist will be able to perform complex automated queries that span multiple datasets in order to retrieve and analyze selected information . The spatial scope of such queries will be speciﬁed quite easily by selecting the appropriate branch of the overall spatial hierarchy that integrates the datasets . Moreover , queries will automatically match descriptive attributes across datasets by making use of predeﬁned semantic equivalences ( electronic “thesauruses” ) , in spite of the diverse terminology used in datasets published by different projects . ARCHAEOLOGICAL DATA MODELS 127 2 . Archaeological Data Models With the advent of XML and Java , it is feasible to create this sort of “distributed” and dynamically integrated archaeological Web publication that incorporates soph - isticated database search and retrieval features . In order to achieve this , however , it is necessary to deﬁne an appropriate model for organizing archaeological data – one that supplies a ﬂexible , integrative structure that can be implemented efﬁciently on the Web using an XML markup scheme . It might be thought that no single data model could encompass the wide variety of archaeological observations and recording systems that exist today . Indeed , over the years there has been a persistent lack of standardization in the structure of archaeological datasets . This is because every archaeologist understandably wishes to customize his or her database system for the project at hand . Unfortunately , the resulting chaos of incompatible ﬁle formats prevents easy electronic merging of detailed information from different projects , thus hindering computer - based archaeological research conducted on broad spatial and temporal scales . The situation is not improved simply by dumping idiosyncratically structured datasets without modiﬁcation on the Internet , because navigation and querying of such datasets remains very limited . On the other hand , most archaeologists would agree that no detailed prescriptive scheme adopted at the outset for recording the data from diverse excavation and survey projects can or should be enforced , even within a single geographical region ( e . g . , Richards , 1985 ) . Each investigator should be free to employ the terminology and the recording system that is best suited to his or her project , and any computerized data model should easily accommodate these preferences . Thus the legitimate requirements of individual projects appear to conﬂict with the laudable ambition , long - held and widely shared among archaeologists , to combine datasets for detailed multi - site archaeological comparison and analysis . There is a way of resolving this conﬂict , however . Despite the inevitable variety of archaeological recording systems and terminology , there are basic features common to all archaeological data which permit a standardized data model and a correspondingly uniform and intuitive user interface – although at a more abstract level than has usually been considered . Moreover , the standardized data model advocated here does not prescribe the use of any particular terminology or recording system . The requisite level of standardization and integration can be achieved by using a ﬂexible “item - based” data model instead of the more rigidly structured “class - based” data models that have been common in archaeology . Note that the choice between a class - based versus an item - based data model is not the same as the choice between a relational database management system ( RDBMS ) as opposed to an object - oriented database management system ( OODBMS ) . A RDBMS can implement either an item - based or a class - based data model , depending on what is represented semantically by the “relations” it deﬁnes . Similarly , an OODBMS can implement either an item - based or a class - based data model , depending on what its “objects” signify . Indeed , either type of data 128 J . DAVID SCHLOEN Figure 1 . Data models versus database implementations . Figure 2 . Schematic diagram of the class - based data model . model can be implemented in still other data - description formats , such as XML ( Figure 1 ) . 3 . Class - based Data Models Class - based databases typically provide one data structure – usually represented as a two - dimensional table – for each class or subclass of archaeological observations ( ceramic , lithic , faunal , botanical , architectural , stratigraphic , etc . ) . In each class’s table there is a ﬁxed number of columns which predetermine the variables that are available to describe units of observation ( “items” ) belonging to that class . Each item is therefore represented as a row in a table with a predeﬁned structure ( Figure 2 ) . Each cell of the table , at the intersection of a row and a column , contains the value of a given variable for a given item . Rigidly structured databases of this sort employ what has been called a “strictly typed” data model ( Tsichritzis and Lochovsky , 1982 , p . 8 ) . As applied to archaeology , this means that decisions about the typology of archaeological observations – how many classes of observations will be considered and how many and what kind of attributes each class will possess – are all “hard - coded” into the structure of the database from the beginning and cannot be changed very easily afterwards . Simple database tables like this have the advantage of familiarity . The archae - ologist is immediately at home in what is essentially a computerized imitation of ARCHAEOLOGICAL DATA MODELS 129 a traditional paper - based recording system consisting of simple tabular registries and various special forms . A class - based database consisting of simple tables ( “ﬂat ﬁles” ) is also very easy to set up in a format that has been customized for a speciﬁc project , by means of inexpensive commercially available database management software that requires little or no actual programming . But the disadvantages of this type of database are : ( 1 ) its rigidity in the structuring of information once it has been set up ; ( 2 ) its inefﬁciency in the use of storage space ; and ( 3 ) its bias towards cumbersome and idiosyncratic alphanumeric representations of the extrinsic rela - tionships among items in the database , which are thus treated no differently than the intrinsic attributes of the items themselves . For example , the spatial and stratigraphic relationships among items which are so important in archaeology are typically entered and shown as alphanumeric values in special - purpose table columns . Furthermore , these alphanumeric representations of extrinsic relation - ships are usually unstandardized , having been tailored for a particular project or region , instead of using more standardized and easily understood diagrammatic representations of the same relationships , such as are discussed below . These problems are not necessarily solved by using the more sophisticated “relational” features of commercial database software . Setting up a truly relational database requires some planning and skill ( although currently available commer - cial software makes the task much easier than it used to be ) ; in particular , the database developer must ignore the existing paper - based recording system and analyze the archaeologist’s information - recording requirements at a more abstract level . He must then construct a properly “normalized” set of relational tables in which the data of interest are represented in linked ﬁles with a minimum of redund - ancy ( see Burnard , 1991 , 106ff ; Smith , 1991 ) . In spite of their greater internal complexity , however , relational database systems – in archaeology and elsewhere – typically present to the user a set of familiar tables and forms organized by class of data , just as in simpler ﬂat - ﬁle databases , although the computer does more work behind the scenes to assemble these tables from separate internal ﬁles . Thus most relational database systems use a class - based data model also , even though there are , in principle , other ways of implementing relational database structures for archaeological purposes . As with ﬂat - ﬁle databases , most existing relational systems are tailored for a particular project or a group of similar projects , and this is reﬂected in the particular classes of data and the variables that they prescribe for the user . Once they have been set up such systems are quite rigid in their mode of structuring information and thus do little to facilitate the merging and sharing of archaeological data on a wider scale . Fully relational database systems are certainly more efﬁcient in their use of storage space than ﬂat - ﬁle systems , but , as commonly designed , they share important disadvantages with them , not just in terms of their inﬂexibility but also in their dependence on tabular alphanumeric representations of extrinsic inter - item relationships . The rigid structure and alphanumeric bias of class - based data management systems , whether ﬂat - ﬁle or relational , are especially problematic in an archaeolo - 130 J . DAVID SCHLOEN gical context . This is because conventional class - based systems are not well - suited to representing the variety and complexity of archaeological data , as a number of researchers have pointed out ( e . g . , Ryan , 1992 ) . Unlike the business data for which most database applications are designed , archaeological data are spatially orga - nized , temporally sequenced , and highly variable . It is these distinctive features of archaeological data which call for an unconventional database design for both the underlying data structure and the user interface . First , the all - important spatial organization of archaeological items is awkward to represent using a conventional tabular format . To be sure , grid coordinates may be treated as numeric variables for which values are entered in a column of the appropriate table , but there are many observed spatial relationships that are not usually recorded in terms of precise coordinates . Potsherds and other small ﬁnds , for example , are often not pinpointed on a plan but are simply recorded as being contained within a particular debris layer , and this “containment” relationship is all that needs to be represented in the database . Similarly , architectural subunits such as walls and ﬂoors should be represented in the computer as parts of larger structures . Such relationships can , of course , be stored , in one way or another , via table columns ; but among class - based recording systems there is no standardized way to represent all of the spatial relationships of interest . Furthermore , any kind of rapid visual inspection of the spatial properties of the data is difﬁcult to accom - plish because the primary representation of spatial relationships is tabular and not graphical . It is equally difﬁcult to represent the temporal sequence of archaeological items in a class - based system . As with spatial relationships , the temporal order of the deposition and destruction of features and layers can , with some effort , be stored in table columns . But it is not easy to decipher complex stratigraphic relation - ships which are displayed only as a set of alphanumeric values ; moreover , there is little connection between stratigraphic information stored in this way and standard diagrams , such as the “Harris Matrix , ” which represent the same thing ( Harris , 1989 ) . The same could be said of spatial information that is stored in a tabular format and is also presented in plans and section drawings . Even if site plans and stratigraphic diagrams are computerized with the aid of drafting software , as is increasingly done , the tabular and graphical representations of the same spatial or temporal data are not related in any uniform manner , and it is frequently more difﬁcult than it should be to use the computer to produce , for example , dynamically updated phase plans or color - coded distribution maps of archaeological items . Spatial and stratigraphic relationships among archaeological items can be regarded as extrinsic attributes . In contrast to these , one might think that the intrinsic attributes describing the items themselves are easily represented in a class - based system . This would be true were it not for the fact that archaeological data are highly variable ; that is , the items observed in a typical excavation may fall into a wide variety of different classes and exhibit many idiosyncrasies or subtypes . In traditional paper - based recording systems , and in class - based computer systems ARCHAEOLOGICAL DATA MODELS 131 that mimic them , a limited number of relatively broad classes is deﬁned to encom - pass all of this variation . These classes correspond to a few different paper forms or database tables that contain all of the information which is to be recorded in the computer – recorded , that is , in the form of discrete variables and values , as opposed to free - form notes . The main problem here is that all descriptions of a given class of item must follow a rigidly prescribed format . Once a table has been set up for a given class of data , the variables ( table columns ) which are available to describe items in that class are permanently ﬁxed . It is true that most database software permits new columns to be added to a table , but the repeated restructuring of database tables is usually not feasible ; moreover , adding a column affects all of the items ( rows ) in the table , not just the few for which an extra variable is desired . It is true that a class - based database system can be made more ﬂexible by multiplying tables ; that is , by deﬁning more classes and subclasses , each with its own prescribed set of variables . But to capture archaeological data fully in all of its variability will often require a very large number of tables and a correspondingly complex and unwieldy database . In practice , then , information which does not ﬁt into an existing , fairly limited set of tables tends to be relegated to free - form notes or “memo ﬁelds . ” But these notes , even if they are stored in a computer , are of limited use for later computer - aided retrieval and analysis because the information contained in them is not represented in terms of rigorously deﬁned variables and values that can be automatically identiﬁed and matched with one another . The disadvantages of free - form notes in archaeology have long been recognized ( see , e . g . , Richards , 1986 , p . 54 ) , but little progress has been made in replacing them with more structured representations . Unfortunately , “strictly typed” class - based data management systems are nearly universal in archaeology today , not for any archaeological reason but largely because readily available relational database management software tends to encourage this approach . Examples of such software include familiar names like dBase , Paradox , and Access for PC - based applications , and DB2 or Oracle on larger computers . In the same category we can also include Geographical Infor - mation System ( GIS ) software like ArcView and MapInfo , which have become popular among archaeologists in recent years and include similar kinds of relational database features . To be sure , commercially available RDBMS software does not actually require a class - based data model , but in most business applications and in the standard working practice that has been derived from them , relational tables tend to be equated with particular classes of data in the manner described above . But it is the rigidity of the prevailing class - based data model , in which a predeter - mined set of attributes is prescribed for each of a limited set of predetermined classes , which prevents the automated merging or joint querying of data from multiple projects , each of which might employ a different typology for recording archaeological observations . This is because accomplishing such a combination of datasets requires not just the speciﬁcation of individual semantic equivalences 132 J . DAVID SCHLOEN Figure 3 . Item - based data model . between item attributes , but translations of the entire class structure of each dataset in terms of the class structures of every other dataset that is being considered . 4 . The Hierarchical Item - based Data Model An item - based data model , by contrast , makes the automated combination of multiple archaeological datasets much easier . In an item - based database system the fundamental structural component is not the predeﬁned class of items but rather the abstract archaeological item itself as a unit of observation with which any number of descriptive variables may be associated . A “class” is thus not a ﬁxed structural component of the database but merely an ad hoc grouping of items based on a particular set of query criteria . The building blocks of the database are the individual items themselves , whose speciﬁc attributes the archaeologist deﬁnes by associating each item with a potentially unique set of variable - value pairs and with any relevant images , documents , or other resources ( Figure 3 ) . For this reason an item - based database can be easily adapted and extended as needed by archae - ologists themselves , without special programming , by permitting them to add new variables and values to the pool of available attributes and to rename or delete these as necessary . Similarly , the description of any item can be changed by associating different variable - value pairs with it without affecting any other items . Indeed , in an item - based database system it is easy to assign multiple sets of variable - value pairs to any item , representing distinct and even conﬂicting observations made by different persons or at different times . A full description of any item , no matter how atypical , can be achieved simply by attaching appropriate variable - value pairs to it , thereby minimizing the need for ad hoc prose descriptions that are stored as ARCHAEOLOGICAL DATA MODELS 133 unstandardized free - form notes ( although such notes may also be associated with each item , of course ) . In an item - based database , therefore , the information produced by an excavation or survey project is not represented as a collection of rigid tables corresponding to a limited set of classes , but is represented instead as a large collection of inde - pendent data elements which correspond to the individual archaeological items to be described . Every separately registered ﬁnd becomes an independent item in the dataset , whether it be a layer , feature , or smaller ﬁnd . Each such item may then be described by a unique set of any number of variables together with their associated values for that item . New variables and new categorical ( i . e . , nominal or ordinal ) values may be deﬁned individually by the investigator at any time as new subtypes or unusual ﬁnds appear , without the need to restructure tables or create new tables . An important advantage of the item - based data model is that a clear separation is maintained between the relatively primary attribution of descriptive variables to potentially unique individual items , on the one hand , versus the multitude of possible secondary and overlapping classiﬁcations of those items , deﬁned according to investigators’ changing interests and assumptions , on the other . This approach therefore respects the tremendous variability of archaeological data , because researchers might want to create hundreds if not thousands of overlapping classiﬁcations of the many items observed in any large excavation . In this way the item - based model takes into account the special characteristics of archaeolo - gical data . But most importantly from the point of view of electronic publication , whenever one wishes to combine datasets derived from separate projects this can be done automatically after an initial and quite straightforward speciﬁcation of the individual equivalences between attributes originating from the different projects . Somewhat similar kinds of item - based design have been advocated by other archaeologists ( e . g . , Andresen and Madsen , 1992 , discussed in more detail below ) , but the data model outlined here is much more radically item - based , with a simpler and more abstract structure than has been used elsewhere . Furthermore , it is a hierarchical item - based data model because all of the individual items in the data - base are organized into a hierarchical “tree” that represents the spatial containment relationships among the various units of observation ( Figure 4 ) . Of course , spatial hierarchy is only one possible view of the extrinsic relationships among archae - ological items , but it is the most comprehensive and inclusive view , in the sense that every archaeological observation may be located at some place in a spatial hierarchy . In addition , because a tree structure is self - replicating and has the same properties recursively at all levels , the spatial hierarchy of archaeological items is inﬁnitely extensible in both directions , both macroscopically and microscopically . This means that a hierarchical item - based data model can easily accommodate data from multiple artifacts , sites , and regions on all spatial scales , and from both excavation and survey projects , using the same simple design of independently linked items - with - their - attributes . 134 J . DAVID SCHLOEN Figure 4 . Schematic diagram of hierarchical item - based data model . Note that the concept of an archaeological item is completely generalizable here . A unit of observation encompassing an archaeological site as a whole would be represented as a single item with its own description in the form of associated variable - value pairs , images , and documents . Indeed , an entire geographical region could be represented as a single item that has its own position in the hierarchy and spatially contains a number of archaeological sites , represented as lower - level “child” items . Each site in turn contains sub - sites ( e . g . , excavation areas ) , strati - graphic units ( features and layers ) , small ﬁnds ( artifacts and ecofacts ) , and artifact features or components , in a descending spatial hierarchy . Thus the basic spatial relationship – “this is found within that” – is represented simply and consist - ently at every level of detail , from the broadest region of interest to the smallest aspect of an individual ﬁnd . Furthermore , the comprehensive spatial tree of inde - pendent archaeological items itself serves as the primary interface for entering and displaying information and is the principal means of navigating among the large number of items in a typical archaeological dataset . This kind of interface also has the advantage of being familiar to many computer users because of the use of hierarchical trees in Microsoft Windows and other operating systems for organizing computer ﬁles into folders and sub - folders . An important point to remember about this hierarchical item - based data model is that because of its abstract structure it provides robust standardization in terms of a basic framework consisting of a tree of items with their attributes , but it does not force standardization in terms of content . It is left to the creator of each dataset to determine the arrangement and labeling of the items in the tree , the ARCHAEOLOGICAL DATA MODELS 135 names of variables and values , and the association of items with variable - value pairs , images , documents , and other information . What is more , the hierarch - ical item - based data model is especially suitable for archaeological purposes . First , the hierarchical tree structure has an obvious archaeological interpretation in terms of spatial containment , and thus is intuitively grasped by any archae - ologist . Secondly , the ﬂexible item - with - its - attributes data structure can capture the idiosyncrasies of highly variable archaeological data in a way that class - based data models cannot . Finally , the open - ended extensibility of this data model facil - itates the electronic publication of archaeological data ( understood as multi - source data dissemination and automated data integration ) . Electronic publication on the Web or elsewhere will be of limited value in archaeology unless its intended audience can easily view and analyze published data in full detail using visual interfaces and complex queries , with the goal of testing investigators’ interpret - ations and combining data from disparate sources to permit more broadly based retrieval and analysis . There is a long history in archaeology of creating localized special - purpose datasets in order to test speciﬁc hypotheses or construct partic - ular models , but what is needed to enhance future research is a tool that will permit rapid , efﬁcient , and open - ended “exploratory data analyses” on broader spatial and temporal scales . In this way patterns in the data may be detected that currently go unnoticed , and patterns that are found may be explored further with a speed and rigor hitherto impossible . The achievement of such beneﬁts is what makes the adoption of a ﬂexible yet standardized archaeological data model so desirable . 5 . An Archaeological Markup Language ( ArchaeoML ) Archaeological publication on the Web can be greatly enhanced by the adop - tion of a hierarchical item - based data model , but this data model must ﬁrst be expressed in a standardized , platform - independent format ; i . e . , in terms of a speciﬁc XML markup scheme . I have proposed an “Archaeological Markup Language” ( ArchaeoML ) which provides a set of XML element types ( “tags” ) that can be used to represent any archaeological dataset , making it possible to create distributed , dynamically integrated archaeological Web publications of the kind described above ( see http : / / www - oi . uchicago . edu for further information about ArchaeoML ) . The construction of ArchaeoML was greatly simpliﬁed by the fact that the hierarchical item - based model is similar to the native structure of XML itself . An XML document consists of a hierarchical tree of abstract “elements” ( like the abstract archaeological “items” discussed above ) which has been serial - ized into lines of tagged Unicode text for delivery over the Internet . This means that an archaeological dataset which uses the hierarchical item - based data model ( or has been converted to it from an existing class - based format ) can be directly represented using the basic XML structure of nested elements . 136 J . DAVID SCHLOEN Figure 5 . INFRA spatial containment “tree” view . Software of various kinds can be developed that makes use of the ArchaeoML format for different purposes . One such purpose is to create XML documents which conform to the ArchaeoML speciﬁcation , either by converting datasets from existing class - based formats or by providing complete archaeological data manage - ment systems that use the hierarchical item - based data model from the outset and can save information directly in the ArchaeoML format . Another main purpose is to supply various interfaces for viewing datasets that are stored as XML documents in the ArchaeoML format . Java software is currently being developed that can create and view ArchaeoML datasets . ( See http : / / www - oi . uchicago . edu for the latest version of the XML Document Type Deﬁnition in which ArchaeoML is deﬁned , and for the latest version of the accompanying Java software and sample XML documents . ) This Java software is closely based on existing Microsoft Windows software for archae - ological data management that I have developed over the past several years using the hierarchical item - based data model . In what follows , therefore , the main features of the Java software and its user interface design will be illustrated from this existing Windows application , which is named INFRA ( an acronym for “Inte - grated Facility for Research in Archaeology” ) . INFRA is a working , ﬁeld - tested implementation of the hierarchical item - based data model and thus illustrates quite well the various practical design issues involved in creating an integrative , extens - ARCHAEOLOGICAL DATA MODELS 137 Figure 6 . INFRA temporal sequence “Harris Matrix” view . ible framework for storing and retrieving archaeological information . Note also that despite the advent of Java and XML , there will continue to be a role for oper - ating system - speciﬁc RDBMS software like this to provide the necessary speed and efﬁciency for creating and maintaining large archaeological datasets – datasets which can then be converted into XML documents as needed and published on the Web . 6 . An Integrated Facility for Research in Archaeology ( INFRA ) INFRA was developed using the Borland “Delphi” object - oriented rapid applic - ation development tool and various third - party object - oriented software compo - nents , with data storage and retrieval implemented via the Borland Database Engine using interlinked relational tables to represent “items , ” “variables , ” “values , ” “classes , ” etc . ( see http : / / www - oi . uchicago . edu for a description of INFRA’s relational table structure ) . The basic design was ﬁrst conceived in 1989 and it has been implemented since then in increasingly powerful versions , ﬁrst for DOS , then Windows 3 . 1 , and now for 32 - bit Windows ( 95 / 98 / NT ) . The Java version that is currently under development will have a similar user interface . In addition to a primary tree diagram showing the spatial containment rela - tionships among archaeological items ( Figure 5 ) , other diagrammatic interfaces 138 J . DAVID SCHLOEN are used to represent other kinds of inter - item relationship . These are shown in separate window “panes” or “frames” beside the tree pane . Like spatial containment the temporal sequence of archaeological items is readily represented in an item - based data model ( Figure 6 ) , although instead of linking items together into a hierarchical tree this involves linking items to form a stratigraphic sequence diagram of the kind developed in the 1970s by Edward Harris and now used by many archaeologists . As Harris ( 1989 ) points out , there are only three types of stratigraphic relationship in archaeology : ( 1 ) superposition , which he indicates by a single vertical line between two items ; ( 2 ) correlation between two parts of a once - whole feature or layer , indicated by a horizontal double line between two items ; and ( 3 ) no direct relationship , indicated by the absence of a direct link between two items . When a “Harris Matrix” has been worked out , the resulting sequence diagram is a complete and compact represen - tation of the essential stratigraphic relationships among all of the items ( provided that the diagram is understood as a ﬂowchart of stratigraphic events rather than as a model of direct physical relationships , with which it is sometimes confused ) . Still another kind of inter - item relationship is spatial adjacency or conjoinment . This is represented using an undirected “network” diagram that shows which items directly touch others ( Figure 7 ) . The containment tree , Harris Matrix , and network diagram are all , in mathematical terms , node - link “graphs” which represent various complementary views of the dataset , neatly encapsulating the extrinsic relation - ships among units of archaeological observation that are difﬁcult to represent in conventional class - based data management systems . These three types of inter - item relationship are complementary but they are also quite distinct , and three different types of graph are required to represent them without confusion . For example , the stratigraphic sequence – the temporal succession of various events of construction , deposition , and destruction – is only indirectly related to the observed spatial relationships among items , from which it is inferred . For this reason the tree diagram ( representing the spatial hierarchy of all items in the database ) and the Harris Matrix diagram ( representing the temporal sequence of events that produced the features and layers observed in a given excavation area ) are quite independent of one another . Similarly , a tree showing spatial hierarchy usually cannot capture all of the spatial adjacency or conjoinment relationships that may need to be recorded because these often cross - cut the containment hierarchy as the investigator has deﬁned it . Rather than trying to make a single diagram capture all inter - item relationships , therefore , it is better to “divide and conquer” by using a few simple graph types and permitting a given dataset item to appear in any number of them . In all of these schematic graphical representations the visual style of the symbol shown beside the text label of each item can be made to reﬂect the user - deﬁned class of items to which it belongs ( e . g . , a red circle for ceramic artifacts vs . a blue square for lithics , or perhaps more meaningful bitmapped icons created by the user ) . This permits rapid visual identiﬁcation of speciﬁc items and highlights ARCHAEOLOGICAL DATA MODELS 139 Figure 7 . INFRA spatial adjacency “network” view . patterns in the data that might otherwise be missed . The use of these kinds of diagrammatic interfaces as a means of navigating through archaeological datasets is a fairly obvious idea , and has also been advocated , for example , by Ryan ( 1995 ) . The user interface can be greatly simpliﬁed and made more intuitive by using them ( note that for all three types of inter - item relationship mentioned above a simple diagram is the only means needed for entering and displaying this information ) . 1 INFRA can use its various graphical views of inter - item relationships in queries that determine which items belong to a given class ; thus computer - aided selec - tion of archaeological items may readily be extended to consider their extrinsic as well as intrinsic attributes . In this way , a given class of items can be retrieved according to easily deﬁned but quite complex criteria , because any combination of the variable - value pairs used to represent an item’s intrinsic attributes , together with the extrinsic spatial and temporal relationships represented in schematic diagrams , may be used in data retrieval . For example , one might wish to select all artifacts of a certain type which are found within a particular kind of architectural feature that also contains artifacts of a second type and that occurs stratigraphically after a certain kind of deposit . Similarly , “phase plans” of contemporaneous items can be generated automatically , reﬂecting current stratigraphic interpretations as these have been entered via a Harris - style sequence diagram . INFRA uses the sequence 140 J . DAVID SCHLOEN diagram to select automatically the items that are to be drawn together on a single plan or in the same color . In general , INFRA’s query facility is a central component of the software because it is the vehicle by which the potentially huge assortment of information in an archaeological database may be ﬁltered into named classes of items for display and analysis in a variety of forms . Each set of user - deﬁned class criteria is given a meaningful name by the user and may be saved for repeated use , together with the list of items retrieved the last time a query was executed in order to ﬁnd the items that match those criteria . The resulting set of items may then be used in the creation of customized reports , statistical graphs , tables , and composite plans which contain data pertaining only to that class of items . This approach provides maximum ﬂexibility because classes are deﬁned not as ﬁxed tabular templates into which items must be inserted irrevocably in the course of primary data entry , but simply as dynamic groupings of items matching user - deﬁned query criteria which may be created , named , saved , and then used at any time to retrieve groups of related items based on their intrinsic and extrinsic attributes . Another important view of database items is provided by a map interface , also shown in a separate window pane beside the primary tree view . Mapping data in the form of vector “shapes” ( points , lines , or polygons ) can be imported in various GIS and CAD ﬁle formats or traced directly within the map view . INFRA uses GIS techniques to manipulate these map shapes , which are associated with indi - vidual items and may be combined , displayed , and analyzed using a variety of spatial analysis and spatial query functions . Here , too , an item - based approach is helpful . This is because the vector shapes which represent each region , site , sub - site , feature , layer , or small ﬁnd that is drawn on a map or site plan are necessarily associated with an individual item in the dataset , in addition to that item’s variables , images , and documents . As a result , descriptions and photographs of any item that is drawn on a map can be displayed simply by clicking on the relevant area of the map . Conversely , items such as sites , features , layers , and small ﬁnds may be mapped selectively , according to their intrinsic attributes , using various colors and ﬁll patterns . This makes it easy to generate distribution maps . Map shapes can also be displayed over top of georeferenced raster images ( e . g . , aerial or satellite photographs ) , which is quite useful in certain circumstances , including “heads - up” digitizing of scanned plans . Vertical section drawings are linked to top - plans by drawing an abstract section line on the plan and then clicking on this line to open a separate window for viewing the associated archaeological section . This provides a convenient way to keep track of the numerous individual drawings that accumulate in an archaeological project . After map shapes have been imported or entered for a series of items nested one within another at different levels of the spatial hierarchy ( e . g . , regions , sites , excavation areas , grid - squares , features , layers , and artifacts ) , the archaeologist can easily create and view composite plans at various levels of spatial detail and can navigate through the dataset by “drilling down” from one ARCHAEOLOGICAL DATA MODELS 141 Figure 8 . INFRA “image” view . level of the spatial hierarchy to another , clicking on individual items in a map to call up their associated variable - value descriptions , documents , and images . The image view ( Figure 8 ) uses raster images instead of vector shapes . Raster images ( e . g . , scanned photographs ) can be imported in a wide variety of ﬁle formats ; furthermore , image ﬁles may be converted from one format to another at any time and compressed , if necessary , to save space . ( Raster image compression is a useful feature in an archaeological data management system because of the large number of photographs needed to document a typical excavation and the large size of uncompressed image ﬁles . ) INFRA’s image view goes beyond simply displaying scanned photographs or illustrations of individual items . The archaeologist can mark “hotspots” on an image to establish links to items which are shown in the image , or to vector maps , documents , and other images . Panning , zooming , and clicking on raster images therefore constitutes another mode of navigation through the large quantity of information contained in a typical archaeological dataset . This method is useful as a supplement to the map view and might even replace it in circumstances where a detailed photograph is more helpful than a schematic map . In addition to establishing links from an individual image to multiple items ( e . g . , as a means of annotating or cross - referencing a photograph or prose report ) , a single item can itself be linked conversely to any number of raster images . Thus , 142 J . DAVID SCHLOEN Figure 9 . INFRA “document” view . for example , multiple photographs of the same artifact or textual descriptions by different persons can be organized and retrieved efﬁciently . Still another view of database items is supplied by a hypertext wordpro - cessing document interface ( Figure 9 ) wherein summaries and interpretations can be written that contain embedded links to item descriptions , photographs , maps , and so on . Here the investigator can compose anything from brief notes to a full report discussing the results of the archaeological project . Because this document interface is tightly integrated into the data management software , it too supplies a dynamically updated view of the current state of the dataset and provides an alternative means of navigating through it . Navigation is accomplished by using “hyperlinked” key - words or phrases ; e . g . , highlighted layer and feature labels , artifact numbers , photograph or map references , etc . Clicking on one of these calls up a window that displays the relevant description , map , or image . Conversely , suitably formatted variable - value descriptions , stratigraphic diagrams , plans , photographs , and statistical graphs can be generated automatically and inserted into the document to speed up production of the report . The document’s direct links to archaeological data not only assist the investig - ator in composing his or her report , but researchers who use the dataset thereafter will be able to move instantly from the investigator’s interpretations to the observa - tions on which they are based . Although documents may be printed out or exported from a dataset in a ﬁle format suitable for further editing and print publication , ARCHAEOLOGICAL DATA MODELS 143 the documents stored in the dataset could themselves constitute the primary form of a project’s ﬁnal report , in which case the dataset as a whole would serve as the complete publication , disseminated electronically via the World Wide Web . This is an important feature because as Internet technology becomes increasingly widespread , expensive printed editions of archaeological reports will eventually become less necessary and less feasible . Finally , it is possible to generate a familiar table view of selected classes of items , showing their variables and values as table columns and grid cells . Such tables are not ﬁxed structural components of the dataset , however , as in class - based systems . The user deﬁnes a “table proﬁle” indicating which variables to include in the table and in what order they should appear , and the table is constructed from the underlying item - based data structure . A given tabular view may be printed out or saved as a separate ﬁle ( as can any of the other INFRA views ) ; this provides a quick way to create ad hoc reports . Data may even be entered and modiﬁed directly in a tabular format , although the item - based hierarchy remains the most convenient and ﬂexible interface for manipulating archaeological information . INFRA can also generate two - and three - dimensional statistical graphs to assist in data analysis , including pie charts , histograms , box - and - whisker plots , scat - tergrams , and regression lines . Features such as these which permit easy visual display and analysis of archaeological data are not mere window - dressing , for one of the great beneﬁts of current information technology is its ability to facilitate context - sensitive “exploratory data analysis , ” which is now widely recognized as holding more promise for archaeological interpretation than the older emphasis on “conﬁrmatory data analysis” ( Shennan , 1988 , 22ff ; Lock , 1995 ) . INFRA can calculate basic descriptive statistics ( e . g . , frequency , sum , mean , median , variance , standard deviation , and various correlation and similarity coefﬁcients ) , and these statistics may themselves be exported in tabular form for further analysis . In addi - tion , the user can export tables of raw data in various ﬁle formats – with automatic conversion of nominal and ordinal values to numeric codes , if desired – in order to facilitate more advanced statistical analyses . It is worth emphasizing again that INFRA and the data model that it implements prescribe no rigid format or particular terminology for recording archaeological information . The archaeologist can create and label individual items , variables , and values as needed , in a manner that is appropriate for the project at hand , and can associate items with one another in a variety of spatial and temporal ( or “stratigraphic” ) conﬁgurations . Initially , this approach demands a higher degree of conceptual abstraction , yet it actually corresponds better to observed archaeolo - gical entities in the real world , which do not manifest themselves in the form of tidy classes of material but as idiosyncratic individual items . Moreover , the abstraction entailed in working with a few generic concepts such as “item” and “variable , ” and with a few graphically represented spatial and temporal relationships , permits both ﬂexible customization from the archaeologist’s perspective and rigorous stand - ardization in terms of the underlying data structure . Most importantly , because 144 J . DAVID SCHLOEN of this standardization the task of combining datasets from different projects is quite easily accomplished by grafting in ( via “cut - and - paste” or mouse “drag - drop” operations ) the spatial tree of one dataset as a new branch of the spatial tree of a second dataset , and then deﬁning equivalences ( again via “drag - drop” ) between the two original sets of variables and values . The archaeologist is not forced to turn to a programmer to map one rigid and idiosyncratic table structure onto another because the comparison between different datasets is done at a more basic level , between individual items and their attributes . The end result of such a combination is a comprehensive view of the constituent datasets which preserves the standard underlying structure of a simple item - based hierarchy but which also reﬂects the naming conventions and recording systems of the individual projects whose data are incorporated within it . INFRA’s hierarchical item - based design therefore permits both a high degree of individual customization or ﬂexibility in recording archaeological data and sufﬁcient underlying standardization or rigor to make it easy to combine datasets from different projects . Furthermore , because of its abstractness , simplicity , and generality , this data model provides not only ﬂexibility and rigor but also the open - ended extensibility of a self - replicating structure , providing a uniform interface for manipulating information from any number of excavated or surveyed sites in a consistent and easily understood manner . These features are useful both for project - speciﬁc data management and for electronic publication of archaeological data in general , a kind of publication which ought to entail seamless data integration as well as efﬁcient data dissemination , as was argued above . INFRA is only one implementation of the item - based data model advocated in this article , although it demonstrates what the author believes is the best approach to representing both the intrinsic attributes and the extrinsic interrelationships of archaeological items in a straightforward and standardized fashion . In its speciﬁc features it also demonstrates the beneﬁts of an item - based design for integrating very tightly , within a single software application , an array of powerful yet easy - to - use functions that have been tailored for archaeological use . In summary , these functions include : ( 1 ) raster image storage , compression , and annotation ; ( 2 ) GIS - style map viewing and spatial query features ; ( 3 ) statistical aggregation of data , displayed in various sorts of graphs and tabulations ; ( 4 ) editing of hypertext docu - ments that can contain numerous links to other information ; ( 5 ) the ability to execute complex queries that employ both intrinsic attributes and extrinsic relation - ships among items , and to save the resulting lists of selected items as named classes that can serve as ﬁlters in the creation of reports , graphs , tables , and composite plans ; ( 6 ) the ability to design ad hoc tabular views of the database and to save them as tables or print them out , thus supplementing a variety of built - in standardized reports ; and ( 7 ) the ability to import tabular data and convert it into an item - based hierarchy , and also to export various views of the data for further analysis in a variety of ﬁle formats . ARCHAEOLOGICAL DATA MODELS 145 Again , however , the most important practical beneﬁts of the software design underlying INFRA and the related Java application now being developed will be fully realized only when a hierarchical item - based data model becomes the basis of a mode of electronic publication in which data from disparate projects may be easily combined . Electronic publication of archaeological data , and Web publication in particular , ought to facilitate comprehensive retrieval and analysis together with universal access , in keeping with the technology - driven trend towards the “democratization” of archaeological knowledge ( Huggett , 1995 ) . INFRA was therefore designed from the beginning to serve not only as a general - purpose data management system but also as a means of facilitating electronic publication . In its existing Windows version it can save information as XML documents using the ArchaeoML markup scheme discussed above , and it can also automatically convert existing class - based datasets to this hierarchical item - based format . Furthermore , the related Java software now under development uses the same kind of interface to view and analyze ArchaeoML documents within the Web environment . 7 . INFRA versus IDEA It is useful to compare INFRA , and thus the hierarchical item - based data model , to a somewhat similar archaeological data management system which has been created quite independently by Jens Andresen and Torsten Madsen of the Institute of Anthropology and Archaeology of the University of Aarhus in Denmark . In recent years , Andresen and Madsen have produced the “Integrated Database for Excavation Analysis” ( IDEA ) , a Windows application that was developed using Microsoft Access ( Andresen and Madsen , 1992 , 1994 , 1996a , b ) . An IDEA data - base consists of 78 abstractly deﬁned and internally linked tables . There are ﬁve core tables representing “deposits” ( or “layers” ; i . e . , observed stratigraphic units ) , “ﬁnds” ( i . e . , movable objects ) , “constructs” ( higher - order inferred structures or associations of deposits and / or ﬁnds ) , “photos” ( raster images ) , and “drawings” ( vector graphics ) . Each of these tables is linked , via still more tables , to all of the other core tables . In addition , there is a table of “classes” ( categories of ﬁnds ) that is linked to tables which store the names of the speciﬁc variables and values that belong to each class , and there are still other tables which connect these classes , variables , and values to individual ﬁnds . There is also a table of “transforma - tions” that is linked to “ﬁnds” and describes what transformation processes , if any , individual objects have undergone . Andresen and Madsen have achieved an impressive degree of abstraction and generality in their design of IDEA , and it is instructive to compare it to INFRA , with which it shares some striking similarities as well as major differences . The chief similarity lies in the use of internal pointers or “identiﬁcation numbers” to connect individual items with their associated variables and values , rather than following the conventional class - based approach of relating an item to its variables and values by constructing a row in a ﬁxed - format table in which each variable is 146 J . DAVID SCHLOEN represented by a different column ( see Figure 2 ) . One advantage of this approach is that the textual information ( i . e . , an alphanumeric string ) that represents a given variable name or a given nominal or ordinal value is stored only once in the data - base . All references to variable or value names are done by means of numeric pointers , which take up much less space . This eliminates the redundant storage of constantly duplicated textual information that is characteristic of many data - base management systems , and it reduces the risk of data - entry error involved in repeatedly typing the same alphanumeric string . It also makes it possible to customize the description of a given item by linking it , via numeric pointers , to a unique set of variables and values . IDEA is not as radically item - based as INFRA , however , and this leads to important differences between the two systems in terms of their data structures and user interfaces . For one thing , IDEA conceptually distinguishes “deposits , ” “ﬁnds , ” and “constructs” rather than generalizing the concept of an archaeological “item” to any level of spatial and stratigraphic detail , as INFRA does . These distinctions are a fundamental feature of IDEA’s data structure but they are inevitably somewhat arbitrary . They are also unnecessary , in my view , as part of the basic structure of an archaeological dataset , although in many cases they may provide a useful way of classifying archaeological evidence . The question of whether a particular layer or feature should be regarded as a unitary physical “deposit” or an inferred “construct” consisting of other elements is itself often a matter of interpretation , as Andresen and Madsen admit ( 1994 , p . 7 ) . Similarly , the fragments of a broken or disarticulated artifact will sometimes be treated as a single “ﬁnd , ” while in other cases the investigator may prefer to treat each fragment as a separate ﬁnd that is part of a larger “construct . ” Indeed , it can be argued that all archaeological observations are interpretive constructs , at some level , which reﬂect the investigator’s implicit or explicit choices about how to group together more basic components – even though such constructs may well be considered “objective” if they are used and interpreted uniformly within a given research community . INFRA therefore employs only the generic concept of an archaeological “item , ” which encompasses both higher - order ( more subjective ) and lower - order ( less disputable ) constructs or inferences . Every item has its place in some spatial scale of observations , each such scale being dependent on human interpretation to some degree . On the broadest level is the demarcation of geographical regions and subregions of interest ( which are not necessarily self - evident but are often simply the product of inherited conventions or perhaps are deﬁned explicitly on theoretical grounds for the purposes of a particular project ) . On the next level are the smaller spatial entities that happen to have been recognized and interpreted as archaeological sites , and within them are the arbitrarily gridded excavation areas themselves ; and so on down to those items that have been individually distin - guished as features , layers , and small ﬁnds – all of which are inevitably classiﬁed or typologized not in an inherently “natural” or ﬁnal way , but rather for some inter - pretive purpose . Keeping in mind the variety of possible observational conventions ARCHAEOLOGICAL DATA MODELS 147 used by archaeologists , INFRA is designed to permit complete ﬂexibility in the spatial , stratigraphic , and typological organization of archaeological data . Thus it is entirely up to the user to identify and label the individual items in an INFRA data - base , to construct a meaningful tree diagram representing their spatial hierarchy , to draw the Harris Matrix diagrams representing the sequences of stratigraphic events that produced their present conﬁguration , and to name and choose the intrinsic variables and values that are associated with them . This approach is not only more ﬂexible but also conceptually and practically simpler than the alternative . By collapsing into a single collection of “items” what IDEA separates structurally as “deposits , ” “ﬁnds , ” and “constructs , ” the archae - ologist avoids the unnecessary complexity of employing three concepts where one would sufﬁce , and is also spared the task of deﬁning numerous “many - to - many” relationships among three separate types of items . This complexity increases the difﬁculty of learning and using the system , especially since extrinsic spatial and stratigraphic relationships among database items are represented alphanumerically in IDEA rather than graphically , as they are in INFRA . But a simple diagrammatic interface is made possible by the fact that each item in an INFRA database has the same generic properties and can be manipulated in the same way as every other item , whatever it might represent in substantive terms . Thus each item is described in a uniform manner by attaching to it an appropriate set of variable - value pairs , raster images , vector shapes , and hypertext documents . Each item takes its place in the hierarchical spatial tree in the same way , as an entity that is “contained in” some other item and in turn “contains” its descendant items . Each item may also be placed in a sequence diagram , in which its relative position is shown within a temporal sequence of related items – not just at the level of unitary features and layers but at any level of spatial detail . This generic uniformity and the corresponding open - ended extensibility of INFRA’s self - replicating structure greatly simpliﬁes its user interface and makes it easy to learn and to use . Any database structure that is less generic than INFRA’s radically item - based structure does not as easily permit spatial extension in order to include multiple excavated or surveyed sites . An IDEA database , for example , although it entails a high degree of abstraction , is still inherently oriented to single sites . Its prescribed structure of deposits , ﬁnds , and constructs lacks the built - in extensibility of INFRA in both macroscopic and microscopic directions . Of course , in IDEA one could treat multi - site regions as “constructs” composed of other “constructs” ( sites and sub - sites ) , which are themselves ultimately composed of unitary “deposits” and “ﬁnds , ” but the software does not facilitate this kind of spatial extension . Moreover , spatial and stratigraphic relationships are not presented diagrammatically , in such a way that many relationships may be viewed at once . Instead , they are entered and displayed alphanumerically as textual strings in a series of input ﬁelds . It is there - fore difﬁcult to grasp these relationships by visual inspection . Most importantly , there is no primary hierarchy required and highlighted by IDEA which connects , in a simple and consistent way , diverse spatially nested units such as regions , sites , 148 J . DAVID SCHLOEN sub - sites , and architectural units , on the one hand , with individual layers , features , small ﬁnds , and parts of ﬁnds . The lack of prominence of such an overall hierarchy is quite intentional , however , because Andresen and Madsen ( 1992 , p . 49ff ) have criticized the use of rigid hierarchical structures as the exclusive means of representing archaeological relationships ( cf . Carver , 1985 ) . Over the years , a number of hierarchically struc - tured archaeological database systems have been developed that are perhaps rightly criticized for imposing an excessively particularistic and inﬂexible organization on the data . But this is not a failing of the hierarchical modeling of spatial relation - ships in itself ; indeed , it is hard to imagine an archaeological situation for which some sort of description in terms of spatial hierarchy would not be both possible and desirable . The problem lies in the rigidity of existing hierarchically structured databases and their neglect of non - hierarchical extrinsic relationships among items . Yet these defects may be remedied if the hierarchical spatial tree is seen as only one possible view of the dataset , as it is in INFRA , and if there is no requirement that certain designated classes of data ( artifacts , features , architectural structures , etc . ) be represented on predetermined spatial levels . What is needed , then , is not the neglect of spatial hierarchy , but rather the ability freely to construct a hierarchy of generic items that may be deﬁned with complete ﬂexibility by each investigator . It is true , of course , as Andresen and Madsen emphasize , that there are important non - hierarchical relationships among archaeological items which ought to be represented systematically in a computerized data management system . One of the most innovative features of IDEA is its capability to describe a variety of extrinsic relationships using standardized “structures” other than the conventional hierarchical structure ( Andresen and Madsen , 1996b , p . 10 ) . These non - hierarchical structures include : ( 1 ) the simple set of equal items ; ( 2 ) the linear series of items ( e . g . , a temporal sequence ) ; ( 3 ) the undirected web or network of items ; ( 4 ) the directed web without loops ; and ( 5 ) the directed web with loops . The most common non - hierarchical relationship in archaeology is the stratigraphic sequence , which is represented graphically by a “directed web without loops” ( such as the Harris Matrix ) rather than by a hierarchical tree . For this reason , INFRA uses Harris - style temporal sequence diagrams to provide an alternative view of inter - item relationships that is quite independent of the spatial hierarchy view . Nevertheless , in INFRA the spatial tree remains the primary means of navigating through the dataset , not just because hierarchical relationships are readily under - stood and widely employed by archaeologists , but also because a spatial hierarchy provides the only comprehensive framework within which every item of interest ﬁnds its place . Furthermore , aside from the “directed web without loops , ” which is exempliﬁed in the Harris Matrix , the only non - hierarchical structure that needs to be standardized in archaeological database software is the “undirected web” of “conjoined” items , which is discussed below . Three of the ﬁve non - hierarchical structures supported by IDEA are therefore unnecessary . The “directed web with loops” has little or no archaeological relevance , as Andresen and Madsen have ARCHAEOLOGICAL DATA MODELS 149 noted ( 1994 , p . 44 ) . The “set” structure of similar items is trivially implemented via any database system’s query and retrieval capability . Finally , the linear “series” is merely the simplest case of the “directed web without loops” ; thus , for example , any temporal sequence can be represented by a Harris diagram , which need not have branches but may take a purely linear form . It seems , then , that Andresen and Madsen have exaggerated both the diversity and the importance of non - hierarchical relationships vis - à - vis the basic spatial hierarchy . Aside from stratigraphic sequences and other kinds of temporal series , which are readily represented using Harris Matrix diagrams , the only type of non - hierarchical relationship that is at all common in archaeology is the relation - ship between one item and another item that it “joins” or “ﬁts together with . ” As Andresen and Madsen point out , this kind of relationship is best represented graphically as a link in an “undirected web” or open network of links between nodes . Archaeological items that are interrelated in this way are often fragments of an originally intact object such as a ceramic vessel or a lithic core . In some cases , a hierarchical spatial relationship might be used to represent this kind of fragmentation , identifying the various fragments in the spatial tree as descendant items of a node that represents the original object . It is desirable , however , to have a systematic way of representing the “joins” relationship more speciﬁcally , so that such relationships can be used in queries . Furthermore , fragments of a single object often become scattered among separate layers and so appear in quite different branches of the spatial tree , and this makes necessary a non - hierarchical means of cross - referencing spatially separated items . Also , simply showing such fragments as an undifferentiated set of hierarchical spatial descendants does not represent the precise sequence of joins adequately on a fragment - to - fragment level , in the way that a network diagram does ( i . e . , by identifying which fragments directly join an intervening fragment that directly joins still other fragments ) . In INFRA , once again , the spatial adjacency or “joins” relationship is shown graphically via an independent view mode , as with stratigraphic sequences . Such graphs are created by placing joined items in various locations on a drawing surface and then drawing direct and indirect links among them . INFRA therefore demonstrates that non - hierarchical extrinsic relationships may be represented quite readily in a general - purpose archaeological database system without sacriﬁcing the beneﬁts of having a primary spatial hierarchy that provides a simple and extensible means of organizing all of the items in the database . By doing without such a hierarchy as a fundamental feature of both its data structure and its user interface , IDEA lacks easy spatial extensibility . Furthermore , although it exhibits an impressive degree of abstraction , IDEA’s fundamental structure of interconnected deposits , ﬁnds , and constructs is still insufﬁciently general , in my opinion . As a result , it is unnecessarily complex and thus difﬁcult to learn and to use . The same lack of generality effectively conﬁnes the scope of an IDEA database to a single excavation project or site . But in that case , one wonders why the software has been designed as a generic “meta - database” system that each user 150 J . DAVID SCHLOEN must customize for his or her project . The effort required to customize IDEA for a particular project could be employed in constructing a tailor - made relational or ﬂat - ﬁle database system , using readily available commercial software , that would have many if not all of the useful features of IDEA . Unless a general - purpose archaeological database system is designed in such a way as to allow the seamless merging of disparate datasets from multiple sites – thus making computer - aided querying and analysis possible on a more comprehensive regional level – there is little advantage for the archaeologist in learning abstract principles of database design and in mastering an unfamiliar interface in order to use it . In spite of the criticisms of IDEA voiced here , it is clear that Andresen and Madsen’s work marks an important advance in terms of conceptual analysis and technical sophistication over conventional approaches to archaeological database design . Over the years , many archaeological database management systems have been devised , but surprisingly little attention has been devoted to the fundamental issues that Andresen and Madsen have addressed . There are very few published examples of the kind of ﬂexible and user - customizable database structure that they advocate and that INFRA implements in a rather different way . One suspects that this is because the vast majority of archaeologists , as end - users of computerized database systems , have been content with project - speciﬁc software which more - or - less imitates familiar paper - based records . At its best , such custom - written software even permits the kind of detailed recording of extrinsic hierarchical and non - hierarchical relationships that Andresen and Madsen have made the centerpiece of IDEA . Satisfaction with current practice is therefore understandable , because impressive gains in data - handling productivity and efﬁciency have been provided by even quite simple ﬂat - ﬁle database systems , and few archaeologists have a clear perception of how much more is to be gained by the leap of abstraction that Andresen and Madsen have championed . 8 . Conclusion In general , the archaeological publication paradigm proposed in this article depends on the translation of archaeological datasets into hierarchical item - based structures ( using ArchaeoML or some similar markup scheme ) which will then be accessible from any XML - capable browser running on any computer platform ( e . g . , Windows , Macintosh , or UNIX ) . By using such a structure archaeological datasets may be viewed or queried in any combination , simultaneously drawing on a variety of different Web sites , while maintaining a consistent user interface . This is possible because each published dataset is delivered as a subtree that can be dynamically integrated into an overall spatial hierarchy which may then be viewed as a seamless whole by the archaeologist . To implement this paradigm , however , we need widespread adoption of a simple , ﬂexible , open - ended , and thus easily standardized archaeological data model , because this would facilitate truly useful forms of electronically published ARCHAEOLOGICAL DATA MODELS 151 archaeological data . Current attempts to create “digital archives” consisting of miscellaneous batches of raw project data ( e . g . , Eiteljorg , 1995 ) , or to create Web - based catalogues of archaeological datasets with limited search - and - retrieval capabilities ( Richards , 1997 ) – although valuable in their own right as a means of preserving and of making such data available in digital form – are not an adequate form of electronic publication . Such archives and catalogues will make archaeolo - gical information more accessible and ensure its preservation , but researchers are still faced with many different database structures and can therefore make efﬁcient use of the data only on a project - speciﬁc level . With the advent of XML and Java much more sophisticated forms of electronic publication are now feasible , and the time is ripe to begin exploiting these new tools for the beneﬁt of archaeological research . Note 1 Computer programs exist which aid in constructing a Harris Matrix diagram on the basis of alphanumeric input of spatial relationships ( e . g . , in the “Bonn Archaeological Statistics Package” ) . In INFRA , however , the user draws the Harris Matrix directly on screen by dragging items from the tree pane and dropping them into the matrix , regardless of how the diagram has been composed initially ; thus the diagram itself serves as the primary means of entering and representing stratigraphic information . References Andersen , J . and T . Madsen . “Data Structures for Excavation Recording : A Case of Complex Infor - mation Management” . In Sites & Monuments , National Archaeological Records . Ed . C . Larsen , Copenhagen : National Museum of Denmark , 1992 , pp . 49 – 67 . Andersen , J . and T . Madsen . IDEA 1 . 0 Manual . KARK Nyhedsbrev 1994 : 4 . Moesgård : Institute for Prehistoric Archaeology , 1994 . Andersen , J . and T . Madsen . “Dynamic Classiﬁcation and Description” . Idea , Archeologia e Calcolatori 7 ( 1996a ) , 591 – 602 ( III International Symposium on Computing and Archaeology ) . Andersen , J . and T . Madsen . “IDEA – The Integrated Database for Excavation Analysis” . In Interfa - cing the Past : Computer Applications and Quantitative Methods in Archaeology 1995 . Analecta Praehistorica Leidensia 28 . Ed . H . Kamermans and K . Fennema , University of Leiden , 1996b , pp . 3 – 14 . Bosak , J . XML , Java , and the Future of the Web , 1997 . http : / / sunsite . unc . edu / pub / sun - info / standards / xml / why / xmlapps . htm Bray , T . , J . Paoli and C . M . Sperberg - Mcqueen . Extensible Markup Language ( XML ) 1 . 0 : W3C recommendation 10 - Feb - 98 . http : / / www . w3 . org / TR / 1998 / REC - xml - 19980210 Burnard , L . “Analysing Information for Database Design : An Introduction for Archaeologists” . Eds . Ross et al . , 1991 , pp . 99 – 109 . Carver , M . “The Friendly User” . In Current Issues in Archaeological Computing . BAR International Series 271 . Ed . M . Cooper and J . Richards . Oxford : British Archaeological Reports , 1985 , pp . 47 – 61 . Eiteljorg , H . “The Archaeological Data Archive Project” . Eds . Huggett and Ryan , 1995 , pp . 245 – 247 . Harris , E . C . Principles of Archaeological Stratigraphy , 2d ed . New York : Academic Press , 1989 . Huggett , J . and N . Ryan ( Ed . ) . Computer Applications and Quantitative Methods in Archaeology 1994 . BAR International Series 600 . Oxford : British Archaeological Reports , 1995 . 152 J . DAVID SCHLOEN Huggett , J . Democracy , “Data and Archaeological Knowledge” . Eds . Huggett and Ryan , 1995 , pp . 23 – 26 . Lock , G . “Archaeological Computing , archaeological Theory , and Moves towards Contextualism” . Eds . Huggett and Ryan , 1995 , pp . 13 – 18 . Microsoft Corporation . XML : A Technical Perspective , 1998 . http : / / www . microsoft . com / xml / articles / xmlwhite . asp Richards , J . D . “Standardising the Record” . In Current Issues in Archaeological Computing . BAR International Series 271 . Eds . M . Cooper and J . Richards , Oxford : British Archaeological Reports , 1985 , pp . 93 – 102 . Richards , J . D . “Computers in Archaeological Theory and Practice” . Science and Archaeology , 28 ( 1986 ) , 51 – 55 . Richards , J . D . “Preservation and Re - use of Digital Data : The Role of the Archaeology Data Service” . Antiquity 71 ( 1997 ) , pp 1057 – 1059 . Ross , S . , J . Moffett and J . Henderson ( ed . ) . Computing for Archaeologists . Oxford : Oxford University Committee for Archaeology , 1991 . Ryan , N . “Beyond the Relational Database : Managing the Variety and Complexity of Archaeolo - gical Data” . In Computer applications and quantitative methods in archaeology 1991 . BAR International Series 577 . Eds . G . Lock and J . Moffett , Oxford : British Archaeological Reports , pp . 1 – 6 . Ryan , N . “The Excavation Archive as Hyperdocument ? ” Eds . Huggett and Ryan , 1995 , pp . 211 – 220 . Shennan , S . Quantifying Archaeology . New York : Academic Press , 1988 . Smith , D . “Database Fundamentals for Archaeologists” . Eds . Ross et al . , 1991 , 111 – 125 . Stanek , W . R . “Structuring Data with XML” . PC Magazine ( May 26 , 1998 ) , pp . 229 – 238 . Tsichritzis , D . C . and F . H . Lochovsky . Data Models . Englewood Cliffs , New Jersey : Prentice - Hall , 1982 .