You’re Where ? Prove it ! Towards Trusted Indoor Location Estimation of Mobile Devices Jacob T . Biehl biehl @ fxpal . com Adam J . Lee adamlee @ cs . pitt . edu Gerry Filby ﬁlby @ fxpal . com Matthew Cooper cooper @ fxpal . com FX Palo Alto Laboratory , Inc . Department of Computer Science 3174 Porter Drive University of Pittsburgh Palo Alto , CA , USA Pittsburgh , PA , USA ABSTRACT Location - enabled applications now permeate the mobile com - puting landscape . As technologies like Bluetooth Low En - ergy ( BLE ) and Apple’s iBeacon protocols begin to see widespread adoption , we will no doubt see a proliferation of indoor location enabled application experiences . While not essential to each of these applications , many will require that the location of the device be true and veriﬁable . In this paper , we present LocAssure , a new framework for trusted indoor location estimation . The system leverages existing technolo - gies like BLE and iBeacons , making the solution practical and compatible with technologies that are already in use to - day . In this work , we describe our system , situate it within a broad location assurance taxonomy , describe the protocols that enable trusted localization in our system , and provide an analysis of early deployment and use characteristics . Through developer APIs , LocAssure can provide critical security sup - port for a broad range of indoor location applications . Author Keywords Indoor Location , Secure Location , Location Services , Location - Based Access Control ACM Classiﬁcation Keywords C . 2 . 4 Computer - Communication Networks : Distributed Sys - tems— Distributed Applications ; K . 6 . 5 Management of Com - puting and Information Systems : Security and Protection INTRODUCTION A long - standing UbiComp research problem has been fast and accurate determination of indoor location . A variety of hardware and software techniques have been created and , es - pecially in recent years , solutions have been proposed that are both reliable and easy to deploy [ 2 , 3 , 4 ] . Many of these technologies enable everyday devices like smartphones and tablets to determine their indoor position . In fact , technolo - gies like Apple’s iBeacon framework [ 13 ] are beginning to see large adoption , deployment , and use . As a result , a tech - nology foundation is being laid for an explosion of indoor location - enabled applications . Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page . Copyrights for components of this work owned by others than the author ( s ) must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , topostonserversortoredistributetolists , requirespriorspeciﬁcpermission and / or a fee . Request permissions from Permissions @ acm . org . UbiComp ’15 , September 7 - 11 , 2015 , Osaka , Japan . Copyright is held by the owner / author ( s ) . Publication rights licensed to ACM . ACM 978 - 1 - 4503 - 3574 - 4 / 15 / 09 . . . $ 15 . 00 . http : / / dx . doi . org / 10 . 1145 / 2750858 . 2804284 For a broad class of applications , location provides context to assist or enhance the user’s experience . These include points of interest applications , mapping tools , and social pres - ence sharing applications . While an inaccurate or manipu - lated location would impact the usefulness of these applica - tions , it would not be harmful from the perspective of the service provider . However , there are many other applications in which the accuracy and trustworthiness of the location is integral to the application itself . These include room access , inventory control , and document access solutions whose de - cisions to permit or deny access to physical or virtual ob - jects have a contextual dimension that includes the requesting user’s physical location . There has been a signiﬁcant amount of past research that has focused on trusted localization . However , much of this work has explored point solutions . For instance , solutions have been developed to provide anonymous but veriﬁable location check - ins for location - based services [ 5 , 19 ] , context - based proofs of co - presence that piggyback on existing infrastruc - ture [ 16 ] , and systems for creating and verifying secure proofs of ( coarse ) location in multi - stakeholder WiFi or cellular en - vironments [ 15 ] . By contrast , our goal in this paper is to develop a holistic approach to enable immediate or retroac - tive proofs of indoor location supporting a ( tunable ) variety of assumptions regarding client - side adversarial behavior and client trust in the location - based service . Towards this goal , we propose a system called LocAssure that provides a broad set of security and privacy affordances while still being compatible with existing , off the shelf devices . In doing so , we make the following technical contributions : • Taxonomy . We identify several orthogonal dimensions along which location - based services can vary with corre - sponding security , privacy , or infrastructure implications . Speciﬁcally , we articulate several models of secure indoor localization by varying ( i ) whether the client or service reaps the beneﬁt of location context , ( ii ) the level of trust that location - based services place in their clients , ( iii ) the level of anonymity that clients expect when using location - based services , and ( iv ) whether proofs of location are dis - closed immediately or retroactively . • Infrastructure . To service the location models identiﬁed by our above exploration , we develop a novel beacon - based infrastructure that uses BLE signals to provide highly ac - curate , room - level localization with support for a range of security and privacy assurances . This framework is com - patible with a wide variety of existing hardware ( e . g . , An - 909 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN droid / iOS tablets and smartphones ) and location / proximity technologies ( e . g . , iBeacon ) . • Protocols . We develop a suite of protocols for support - ing high - assurance proofs of location within our beaconing infrastructure . Our basic protocol requires neither client - side cryptography nor any modiﬁcation to standard bea - coning techniques . Higher assurance protocols providing , e . g . , retroactive proofs of location or client traceability re - quire only minimal client interactions and cryptographic assumptions , ensuring efﬁciency and ease of use . • Analysis . We carry out sensitivity analysis experiments and security analyses of our protocols to demonstrate how our solution performs across a variety of deployment condi - tions and under a range of security and privacy assump - tions . RELATED WORK We consider related work from several areas . Many re - searchers in the UbiComp space have studied techniques for providing a range of indoor localization services . Technolo - gies like ultrasonic sound [ 9 ] , infrared [ 23 ] , RFID [ 11 ] , and coded light [ 7 ] transmissions have been used . Unfortunately , client localization using these technologies requires special hardware not typically available on , e . g . , smartphones or tablets . Our work differs from these prior efforts by enabling the production of unforgeable proofs of ﬁne - grained , indoor location on unmodiﬁed , commodity devices . There is also a wealth of work on indoor location and navi - gation based on Wi - Fi and Bluetooth received signal strength measurements . Our focus here is on location at a granularity of rooms rather than precise location . The starting point for our room - level classiﬁcation system is the WiFi - based work presented in [ 3 ] . Here we deploy a system variant using BLE received signal strength ( RSSI ) information in combination . Many systems use BLE beacons to establish proximity [ 13 ] . The beacons we describe here can also be deployed this way although in our experience , we ﬁnd using RSSI measure - ments from multiple beacons to establish the location of mo - bile devices to be more robust . Redpin [ 4 ] and RADAR [ 2 ] are two established WiFi - based methods for matching RSSI measurements to training data for indoor localization that can also be applied at room - level granularity . The architecture that we detail below can incorporate any location classiﬁca - tion approach that provides either an absolute ( x , y ) or dis - crete room - level location . We have built upon the approach in [ 3 ] because of its high accuracy and efﬁciency that allow the option to deploy classiﬁcation on mobile devices . In [ 15 ] , the authors also examined the design space and de - vised a set of goals for systems that provide location proofs while preserving user anonymity to end applications . They designed a Wi - Fi based system that used group signature schemes with symmetric - key encryption . It also allows for the proactive collection of location proofs . The approach re - lies on additional secure communication between the client and one or more access points to produce a location proof . Our approach does not require modiﬁcations to the BLE bea - cons’ normal operation . [ 22 ] presents another system for pro - viding location proofs using Wi - Fi APs using an interactive protocol . This scheme uses Wi - Fi to provide a proximity proof , but for cell towers , it could establish a location ( via triangulation ) . This system trades off revealing user identity with preventing the sharing of a location proof between users . Again , the system presented in this paper uses a discrete set of locations rather than proximity and multiple BLE beacons to establish the location proof . Other mobile device technologies have also been used . [ 16 ] presents a client - based system by which mobile de - vices passively exchange cryptographic keys with one an - other . Batches of keys are uploaded to a central service , and overlap between two sets of keys establishes a proof of co - location for two or more users ( as opposed to proving pres - ence at some physical location ) . [ 5 ] presents a private “check in” protocol for systems like Foursquare . Proximity is estab - lished at locations displaying frequently changing QR codes . Clients take pictures to extract cryptographic material used to produce a proof of proximity . [ 19 ] presents another secure lo - cation check - in service using NFC . These check in protocols provide coarse ( i . e . , building level ) proofs location with vari - ous security and privacy guarantees . By contrast , our work provides the ability to produce unforgeable proofs of ﬁne - grained ( i . e . , room level ) location under a variety of threat models . [ 18 ] presents Zone - IT , which is a Bluetooth ( classic ) sys - tem that uses beacons to communicate policies to mobile devices that control their functionality . For example , it can disable phones’ calling ( and ringing ) functionality in a spe - ciﬁc location . It leverages established cryptographic meth - ods to prevent attacks that can take control of users’ mobile devices . [ 20 ] presents Loc - Auth , which is a similar system that used attribute - based encryption based on BLE beacons . Here , Bluetooth is used as the communication channel for an authentication ( login ) scheme that combines location , user identity , and application permission information . In contrast , we use BLE beacons for both location classiﬁcation based on RSSI measurements and location proof generation based on modiﬁcation of the beacon advertisement . Our approach re - quires neither auxiliary communication with the beacons nor any alteration of the beacons’ standard operation . INFRASTRUCTURE The LocAssure system consists of ﬁve main components : a deployment of cloud - connected beacons , a client service for devices , a location classiﬁcation engine ( LCE ) , a central server , and a cloud beacon agent ( CBA ) . Figure 1 provides an overview diagram of these components , and we discuss each in detail below . Cloud - connected secure beacons Like many other indoor location technologies , location esti - mates are determined through the collection of signal strength measurements from ﬁxed beaconing devices . While measure - ments from a variety of radios can be used [ 1 , 21 ] , our current system relies on Bluetooth Low Energy devices to maintain compatibility across a wide - range of existing devices . Shown in Figure 2 , our secure beacons are comprised of two key pieces of hardware a Bluetooth Low Energy radio 910 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN Central Server Key Issuer Key Validator Location Classification Engine ( when classification is server - based ) Cloud Beacon Agent Beacon instructions ( e . g . set of < beacon ID , UUID , major ID , minor ID > ) Beacon Cloud - Connected Secure Beacons Beacon Beacon … In advertisement : UUID à static for deployment major ID à unique for each beacon , per deployment minor ID à rotating according to security protocol IP NETWORK / TLS CONNECTION IP NETWORK OVER WIFI / TLS CONNECTION iBEACONADVERTISEMENTS Client Device Service Scanning Operations Location Classification Engine ( when classification is local ) Beacon scan readings ( e . g . set of < UUID , major ID , minor ID , RSSI > ) IP NETWORK / TLS CONNECTION Classified location and result of location proof Third - Party Web / Cloud Services and Applications API requests for device location , if continuous location is authorized IP NETWORK / TLS CONNECTION Client Applications Clients Request location Location information Figure 1 . An overview of the LocAssure infrastructure . ( BlueGiga BLE112 ) and a WiFi enabled SoC called Elec - tricImp [ 6 ] . The ElectricImp communicates securely with a Cloud Beacon agent ( CBA ) that allows its software and func - tionality to be updated at regular intervals . The ElectricImp device also controls the state of the Bluetooth radio through an ICT bus connection . The device is powered by four AA 1 . 5V batteries that are power regulated to 3V output . Under normal use , this should power the beacon for at least a year . The cloud beacon operates in two modes : beacon mode and update mode . In beacon mode the ElectricImp is placed into sleep state and the Bluetooth radio is programmed to wake every 2000ms to transmit an iBeacon [ 13 ] compatible adver - tisement . This advertisement contains three main segments : a UUID that associates the device to speciﬁc services or capa - bilities , major ID , and minor ID . The UUID is used to identify the beacon as a LocAssure beacon . The major ID is used to uniquely identify each beacon . This ID is used by the location classiﬁcation engine along with the received signal strength of the beacon to determine a device’s location . Finally , the minor ID is used to provide cryptographic material used by the location authority ( discussed in further detail in the Se - cure Proofs of Location section ) . In update mode , which occurs at ﬁxed , but conﬁgurable inter - vals , the ElectricImp connects to the CBA to download new beaconing assignments . In this state , all the parameters of the iBeacon advertisement can be updated . When a LocAssure beacon is deployed this operation normally conﬁgures a new minor ID which is a new unique key provided by the location authority . Client service for devices A simple service runs on client devices that collect BLE sig - nal measurements . We have an implementation of this ser - vice for Apple iOS 8 , Android 4 . 3 + , and Windows 10 operat - ing systems . Each implementation varies in how it automates scan collection . However , each provides the basic function - ality of periodically capturing and recording nearby location advertisements . These records include the UUID , major ID , and minor ID along with a measurement of the received sig - nal strength ( RSSI ) of the advertisement . iOS supports a limited set of use cases where background exe - cution is permitted . The iBeacon proximity / ranging function - ality is one such case . iOS 8 allows continuous monitoring for proximity to a known set of beacon regions that are deﬁned as an individual or set of UUIDs . Once the iOS device is re - ceiving iBeacon advertising packets over BLE an in region event is forwarded to the LocAssure client service , which has previously registered for such notiﬁcations . Once the device is in range of the beacons , the client service can initiate con - tinuous ranging to the beacons even when the application is in the background state . Ranging consists of a RSSI , UUID , major ID , and minor ID value for each visible beacon . The Android and Windows implementations are more straightforward . A background service is set to scan peri - odically for known UUIDs . If found , the service records the beacon’s RSSI , UUID , major ID , and minor ID . The service can adjust the frequency in which it scans . This enables the application to adjust how often it provides location updates . Once a set of scan records are collected , the client service provides this information to the location classiﬁcation engine ( LCE ) . The LCE can perform classiﬁcations on the client de - vice ( local ) , or the client can send the scan information to a server - based instance of the LCE . As we discuss in the Se - 911 SESSION : INDOOR LOCALIZATION Figure 2 . The LocAssure beacon . The device contains both a Bluetooth Low Energy Radio ( left ) and a WiFi SoC controller ( right ) . cure Proofs of Location section , a client - only implementation provides the ability for the client’s location to be determined without disclosing it to third - parties ( maintain location pri - vacy ) while using a cloud - based LCE allows the computation to be ofﬂoaded and shared across multiple services . Location classiﬁcation engine ( LCE ) There have been many techniques proposed for performing indoor localization using received RF signals . The demands of the application drive the selection , and ultimately , the com - plexity of the underlying localization technique . For instance , for building level access , a simple deterministic approach is sufﬁcient ( e . g . proximity to the BLE beacon ) . The techniques we use are optimized for accurate localization at the room level . We believe this balances the ability to provide the nec - essary ﬁner - grained controls ( e . g . , controlling access to docu - ments in an ofﬁce ) with understandability and ease of use for administrators and users . The location classiﬁcation techniques that we use are based on the ensemble learning method of boosting [ 8 , 10 ] . In con - trast to more common matching methods such as [ 4 ] , boost - ing provides similar classiﬁcation accuracy without requiring the storage of a search data structure that grows with the train - ing set size . Further , boosting performs most of the compu - tation in ofﬂine training , allowing for classiﬁcation runtime performance to be orders of magnitude faster compared to matching approaches [ 3 ] . The classiﬁcation engine seeks to provide location relative to a discrete spatial quantization , or more generally rooms ( e . g . , personal ofﬁce ) or locations of interest ( e . g . , near a land - mark in a large space ) . For each discrete location , a binary classiﬁer is constructed that outputs a score representing the probability that the RSSI scan vector S was observed in that room / location : F room ( S ) = (cid:88) m α m h m ( S ) Each per - room classiﬁer combines “weak learners” , h m ac - cording to the scalar weights α m . The weak learners are de - cision stumps that compare a scalar feature to a threshold θ m : h m ( s ) = (cid:26) 1 X m ≥ θ m 0 otherwise In training , the thresholds θ m are tuned to minimize error . We deﬁne the feature vector comprised of elements X m that is computed from each RSSI vector S below . Given the observed RSSI vectors , the set of unique pairwise differences ( margins ) between the vectors’ elements is com - puted . For an environment with B total beacons , the resulting margin feature vectors have size 0 . 5 · B · ( B − 1 ) . Intuitively , these features express coarse order information for the pairs of beacons . The RSSI vector S ∈ R B is transformed into a margin feature vector with elements : X m = S ( a m ) − S ( b m ) for a m , b m ∈ { 1 , . . . , B } . Missing RSSI values for speciﬁc beacons in the training set are set to a nominal value , R min to indicate they were not visible to the mobile client . Thus , the fact that speciﬁc beacons are not visible at speciﬁc locations is incorporated into the features . The margin features computed from the training scans form the input to classiﬁer training . Each scalar margin feature cor - responds to a weak learner ( h m ) available for inclusion in any per - room classiﬁer F room ( S ) . The training procedure identi - ﬁes a location - speciﬁc set of weak learners that best discrim - inates that location from all others . The weak learners and their relative weights ( m in the equation above ) for each per - location classiﬁer are learned in a greedy iterative procedure that optimizes error using a per - sample weighting over the training data [ 10 ] . For location determination , a one versus all formulation is used . The estimated room is simply the maximum scoring room among the set of per - room classiﬁers when applied to a test scan S test : room ∗ ( S test ) = argmax room F room ( S test ) Only the required set of RSSI differences that were selected in classiﬁer training are computed . These differences are com - pared to the thresholds ( θ m ) and then combined linearly . Central server and cloud beacon agent The central LocAssure server is a trusted entity that is respon - sible for coordinating the state of the beacons , performing location classiﬁcation ( when not performed on the client de - vice ) , verifying proofs of location , and providing third - party applications an API to leverage location information . As described above , each beacon’s state ( e . g . , what it adver - tises to clients ) can be changed . For each location deploy - ment , the central server makes a periodic call to the cloud beacon agent ( CBA ) to set each beacon’s UUID , major ID , and minor ID values . The central server ensures that a unique minor ID is set for each beacon , at each deployment location . As we discuss in more detail in the next section , a rotating minor ID is used as part of the location proof protocol . The central server generates and maintains a list of current mi - nor / major ID pairs and , with a location determination , com - pares keys as part of the proof of location when scans are submitted for location veriﬁcation . 912 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN A third - party API is also provided by the central server . With a unique API access key , external web applications can make REST - style requests for a device’s location . SECURE PROOFS OF LOCATION We now describe several dimensions whose variation alters the requirements placed upon a secure localization service . To enable applications supporting many settings along these dimensions , we next describe the threat model assumed in this paper , and then specify the protocols that we have devel - oped to build unforgeable location proofs in these settings . Dimensions of Localization By considering the needs of common location - aware applica - tions , we have identiﬁed the following four dimensions of se - cure localization that guided the development of LocAssure . • Contextual Benefactor . In some applications , the client is the only expected benefactor of the use of location con - text ( e . g . , awareness applications describing events near the user’s present location ) . In others , the service may also beneﬁt from the use of client context ( e . g . , physical / digital access control systems ) . • Client Threat Model . There are several levels at which a location - based service can place trust in the clients using the system . Clients may be trusted to report their loca - tion faithfully ; this is useful in , e . g . , POI applications that require client location to process requests that have no se - curity implications . It may be the case that clients are not fully trusted , and may try to replay contextual measure - ments to appear as if they are located in a prior location ; e . g . , a user may launch a replay attack from home to ap - pear as if they are in their ofﬁce in an attempt to access on - site resources . Finally , clients may be untrusted by the location - based service . These clients may collude in an at - tempt to carry out wormhole attacks [ 12 ] in which a device or user in one location relays contextual measurements to a device or user in another location to defeat location - based protections . • Client Expectation of Privacy . In some cases , clients may agree to remain identiﬁable to a location - based service ; e . g . , this is a common assumption in physical access con - trol systems where user accountability is required . In other cases , clients may wish to mask their identity from the ser - vice ; e . g . , a POI service has little reason to know the iden - tity of its requesters . • Time of Proof Disclosure . For most location - based appli - cations , proofs of location will be disclosed immediately . For others , however , it may be the case that retroactive proofs of location are required . In the remainder of this paper , we will use an abbreviated no - tation to describe combinations of choices from these dimen - sions . For example , a physical access control service for per - sonal ofﬁces would likely operate within the S - R - I - I setting : the service is the primary contextual benefactor , the client may be expected to launch replay attacks against the service , the client agrees to remain identiﬁable to the service , and the proof of location is to be disclosed immediately . Trusted Replay Untrusted Identiﬁable Immediate (cid:88) (cid:88) (cid:88) Retroactive (cid:88) (cid:88) (cid:88) Masked Immediate (cid:88) (cid:88) Retroactive (cid:88) (cid:88) Table 1 . Our contributions . Shaded cells indicate settings of primary interest , while check marks indicate settings in which our proposed pro - tocols can be used . In this paper , we present several conﬁgurations of LocAssure that support indoor localization applications along several of the above dimensions . Table 1 shows a summary of our con - tributions within the space parameterized above , which will be elaborated upon throughout this section . Note that we fo - cus primarily on situations in which the client is either com - pletely trusted by the location service ( * - T - * - * ) or in which the client is untrusted but identiﬁable ( S - R / U - I - * ) , as these parameterize a large number of interesting location - based ap - plications for the workplace ( e . g . , controlling access to physi - cal or virtual resources , location - based personalization , etc . ) . While the S - U - M - * settings are interesting , we leave these to future work , as the classes of applications supported within these settings ( e . g . , location - based , delayed - spend , anony - mous coupons ) are not directly applicable to the workplace environments that are the focus of this paper . Threat Model We now describe the threat model assumed in the design of LocAssure , and provide details about the protocol extensions that we have developed to counter these threats . Recall that LocAssure is a distributed system consisting of ﬁve key ( classes of ) entities : the central server , a network of cloud connected secure beacons , a cloud beacon agent that is used to control these beacons , a location classiﬁcation en - gine that determines a device’s location , and device client ser - vices . Additionally , there are third - party location - enabled ap - plications / services serviced by the LocAssure API . We now describe our assumptions regarding these entities . The central server communicates regularly with both client device services ( to collect scans , and in some cases carry out client localization ) , and the cloud beacon agent ( to manage the network of smart beacons ) . All communication with the server takes place over TLS - protected connections to ensure that trafﬁc is protected against replay , reorder , modiﬁcation , and observation attacks . It is assumed that the central server correctly classiﬁes client locations using the LCE described above . Clients may or may not be willing to disclose their identity to the central server . The cloud beacon agent is responsible for asynchronously managing the network of smart beacons on behalf of the central server . Server - to - agent communications are TLS - protected , and the cloud agent will only accept beacon control messages from the central server . Cloud - connected secure beacons periodically establish bidi - rectional communication with the cloud beacon agent to update their conﬁgurations , and also periodically broad - cast iBeacon - compatible advertisements that are observed by 913 SESSION : INDOOR LOCALIZATION Scan Client Server [ 𝑡𝑠 , 𝑙𝑜𝑐 ] 𝑘 + , - 𝑅 Classify Figure 3 . Basic protocol . client applications . All communications between the cloud agent and ElectricImp SoC running on each beacon are TLS protected , and beacons will only accept control messages from the agent . The beacon is trusted to adhere to any con - ﬁguration changes mediated by the agent , although incorrect behavior is easily observable . Client device services collect BLE advertisements in order to localize ( either unilaterally , or with server assistance ) and may use the determined location either on the client device or in conjunction with a location - enabled application / service . The degree to which the central server and location - enabled applications trust a client may vary as described above . We assume that each client device has a unique public key ( k c ) and private key ( k − 1 c ) pair , and that private keys are not shared between clients . This is typical in organizations that maintain a certiﬁcate authority to manage employees’ digital identi - ties and enable non - repudiable services like digitally - signed email or timecards . Location - enabled applications make use of client device lo - cations classiﬁed by LocAssure to provide services to client applications . Clients may or may not wish to disclose their identity to these applications , and applications may have varying levels of trust in clients . The levels of trust assumed here parameterize the type of location proof that is to be pro - duced by the client application in conjunction with the Lo - cAssure central server . Location - Based Services Supported by LocAssure Recall from the Infrastructure section that localization within LocAssure is based upon RSSI values associated with BLE advertisements transmitted by a network of beacons that are tightly coupled to the LocAssure server . To determine their room - level location , a client application carries out a 15 - second scan that generates a report containing a set of (cid:104) UUID , major ID , minor ID , RSSI (cid:105) tuples . These tuples are then fed into a classiﬁer to determine the locations of the client . In the event that the classiﬁer is run on the client , LocAssure can provide location services to applications in any C - * - * - * setting : since the client classiﬁes their own location , this suppresses the Client Threat Model and Client Expectation of Privacy dimensions , and clients can use locally - classiﬁed locations immediately or store them for retroactive reference . In the event that the location classiﬁcation engine is run on the server ( c . f . , Figure 3 ) , LocAssure can provide location services to applications in any of the S - T - M - * settings . Since the client device is fully trusted by the central server in this setting , scan reports can be disclosed either immediately or retroactively to allow the server to classify the position of a Scan Client Server Validate Signature Classify Figure 4 . Basic protocol with client signatures for identiﬁability . masked client . The addition of a digital signature binding a scan report to a registered user identity ( c . f . , Figure 4 ) allows LocAssure to service applications in the S - T - I - * settings . Additional Protections The relatively static nature of scan reports implies that the baseline variant of LocAssure cannot provide location ser - vices to applications in the S - R - * - * or S - U - * - * settings , as clients can easily replay old reports or collude to carry out wormhole attacks . We now describe two enhancements to LocAssure aimed at overcoming this limitation . Preventing Replay Attacks Replay attacks against LocAssure are made possible due to the relative stability of the BLE infrastructure visible at a given location over time . As a result , the (cid:104) UUID , major ID , minor ID , RSSI (cid:105) tuples comprising a location report are also relatively stable and easily replayed by miscreant users wish - ing to forge their current location . To combat these attacks , we must increase the entropy of these reports to make replay and context guessing attacks [ 17 ] more difﬁcult to carry out . We thus modiﬁed our system to randomly perturb the BLE advertisements transmitted by our beacons . The iBeacon - compatible advertisements transmitted by our beacons con - tain a ﬁxed iBeacon preﬁx , a 128 - bit UUID , a 16 - bit major ID , and a 16 - bit minor ID . Since altering the UUID trans - mitted by a given beacon would have the effect of confusing mobile apps attempting to leverage iBeacon functionality , and the location classiﬁcation engine is already leveraging the 16 - bit major ID , we instead perturb the 16 - bit minor ID of the advertisement . Recall from the Infrastructure Section , above , that the LocAssure server asynchronously updates beacons on a conﬁgurable basis ( typically every two minutes in our deployment ) . As part of this update process , the LocAssure computes a randomized code to be placed in the minor ID ﬁeld on a per - beacon basis according to the following for - mula : HMAC − SHA1 ( mk , mac i , ts ) [ 1 · · · 16 ] The above extracts the ﬁrst 16 - bits of the output of the HMAC digest of a 160 - bit master key known only to the LocAs - sure , the MAC address of a particular beacon , and the cur - rent timestamp . Each beacon thus receives a new , unique , and cryptographically - randomized minor ID at each update cycle . Although the strength of protection afforded by this randomized minor is dependent on the frequency of updates and the number of beacons seen in a given location report , 914 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN NFC Client Server 𝑛 [ 𝐶𝑙𝑖𝑒𝑛𝑡 , 𝑛 ] 𝑘 + , - 𝑡𝑖𝑐𝑘𝑒𝑡 = [ 𝑁𝐹𝐶 , 𝐶𝑙𝑖𝑒𝑛𝑡 , 𝑡𝑠 , 𝑛 ] 𝐾 5 , - Validate signature & timing Scan Validate ticket Validate signature Classify 𝑡𝑖𝑐𝑘𝑒𝑡 , [ 𝐶𝑙𝑖𝑒𝑛𝑡 , 𝑅 ] 𝑘 + , - [ 𝐶𝑙𝑖𝑒𝑛𝑡 , 𝑡𝑠 , 𝑙𝑜𝑐 ] 𝑘 8 , - Figure 5 . NFC - based protocol to protect against wormhole attacks . we will see in the Analysis section that this simple mecha - nism is a key building block in providing unforgeable proofs of location in the S - R - * - * and S - U - * - * settings . Preventing Tunneling and Collusion Note that even with the randomized minor IDs described above , it is possible for an off - site entity to collude with an on - site entity to create a forged location proof : the on - site entity can simply create a location report and forward it to the off - site entity , who can then forward it to the LocAssure server to forge a proof of location . To combat this , we must create a binding between the device requesting a proof of location , and the physical space containing the target ( ﬁne - grained ) location . Figure 5 describes a protocol similar to that described in [ 19 ] that creates this binding via the use of NFC . To enable the use of this protocol , the LocAssure infrastructure must con - tain an additional ( coarse ) deployment of NFC - equipped sta - tions that can be used to localize a device to a region within a building . The NFC station ﬁrst transmits a random nonce to the client , who signs and returns the nonce to the NFC sta - tion . The NFC station checks ( i ) the validity of the signature and ( ii ) that the time taken by the client to generate the sig - nature is small enough to preclude wormhole attacks to an off - site signer ( e . g . , < 8ms ) . The NFC station then generates a coarse location ticket for the client that includes the iden - tity of the NFC station , the client identity , the random nonce , and the timestamp at which the ticket was generated , which proves that the device was present at the coarse location of the NFC station at the speciﬁed timestamp . The client device can send the location ticket and a loca - tion report to the LocAssure server , which can validate the ticket to ensure that the device whose coarse presence was proved via NFC matches the device that signed the location report that will be used to classify a ﬁne - grained location . As we will see in the Analysis Section , the combination of this mechanism and the randomized addressing scheme de - scribed above enables the successful construction of unforge - able proofs of location in the S - U - I - * settings . We note that the deployment density of NFC stations required by this pro - tocol will be dictated by the number of resources bound by these more stringent location requirements , and the physical locations of these resources . ANALYSIS We now explore the impact of beacon density on the accuracy of our classiﬁers and the entropy provided by our randomized advertisement approach , and assess the security guarantees of the protocols proposed in this paper . Beacon Density Analysis As detailed above , the strength of protection provided by our scheme depends in part on the number of beacons that are visible in a location . To better gauge this parameter , we have deployed 35 BLE beacons , one each per location of interest , in a portion of our ofﬁce depicted in Figure 6 . Each beacon’s location is indicated by a blue dot . Note that the deployment includes sub - room locations in an open space that is divided into a 3x3 grid with 2 . 5 m spacing . We consider a total of 23 rooms , most of which are 9 m 2 square ofﬁces . The hallways are 1 . 5 m wide , and the deployment also includes a confer - ence room and kitchen ( upper left ) . We collected several sets of statistics to better ground param - eters governing the strength of our security protections . The dataset that we assembled was collected using an Android mobile war drive , and contains 20 scans per location for a to - tal of 695 scans . To collect the scans , the phone was placed in a static location in the center of each room . Using all of the BLE beacons for classiﬁcation , we achieved an accuracy of Figure 6 . A map showing locations considered in our initial deployment . Blue dots indicate a BLE beacon . Each beacon location corresponds to a location considered for classiﬁcation . 915 SESSION : INDOOR LOCALIZATION Figure 7 . Location classiﬁcation accuracy ( y - axis ) versus the number of deployed BLE beacons ( x - axis ) . 93 % in a three fold cross validation experiment . Simply using the map of Figure 6 and estimating the client device’s location as the location corresponding to the BLE beacon with highest RSSI in each test scan produces a classiﬁcation accuracy of 59 % in our deployment . On average , 29 . 81 beacons were visible in the scans taken from each location ( s . d . = 3 . 17 , min = 23 . 2 ) . These numbers provide a reference set of parameters for security analysis . Despite the low cost of the beacons employed , we recognize that our deployment is dense , and thus simulated a lower spa - tial beacon density by pruning beacons from the data set and repeating the analysis . For this we greedily removed bea - cons based on their spatial locations so as to minimize the average distance between the centroid of each location and any remaining beacon . The simple idea is to maintain spatial coverage over a range of beacon densities . Figure 7 shows the 3 - fold cross validation performance variation as the num - ber of beacons available to the LCE is varied to illustrate this tradeoff . The plots show precision ( red ) , recall ( green ) , and the F1 - score . These measures are averaged over all rooms to provide a comprehensive view of performance . Note that accuracy is computed for room classiﬁcation over the whole dataset . Although the measures are close , we note that the precision is generally slightly higher than recall suggesting the LCE produces very slightly more false negative than false positive errors . Using the same simulation approach , we re - computed statis - tics for the number of visible beacons per location . Here again , we average the number of visible beacons per - scan , per - location . We then compute ﬁnal statistics over the set of locations . The results as the number of available beacons is varied are shown in Figure 8 in which the mean and minimum values are depicted by green and blue bars , respectively . Figure 8 . The average ( green ) and minimum ( blue ) number of beacons visible per scan as the number of BLE beacons deployed ( x - axis ) is var - ied . Security Analysis We now describe how the protocols proposed in this paper can protect against replay , context - guessing , and wormhole attacks , and address the combinations of protocols that can be used to produce unforgeable proofs of indoor location in the settings parameterized by the location taxonomy outlined earlier in this paper . Replay and Context - Guessing Attacks Cryptographically varying the minor IDs advertised by the network of smart beacons provides sufﬁcient entropy to pro - tect against replay and context - guessing attacks . In particu - lar , the collision - resistance property of the underlying cryp - tographic hash function ( SHA1 ) used by LocAssure ensures that all minor numbers will change at each update , which pre - vents naive attacks that simply replay old scan reports . As shown in Figure 7 , achieving > 90 % accuracy in LocAs - sure within our building requires a network of at least 26 smart beacons . Under these circumstances , Figure 8 shows that a mean of 21 beacons ( minimum of 15 ) are visible any given location . This means that a scan report will contain a mean of 336 ( minimum of 240 ) bits that randomize at each beacon update . The pre - image resistance property of the un - derlying cryptographic hash function used by LocAssure en - sures that the master key used to randomize the minor num - bers cannot be discovered by observing the sequences of mi - nor numbers advertised by LocAssure beacons . Without this master key , new minor numbers cannot be predicted in a sys - tematic manner . As a result , context - guessing attacks will succeed with an average probability of 1 / 2 336 ( minimum of 1 / 2 240 ) . Wormhole Attacks The combination of randomized minor numbers and NFC de - vice localization is sufﬁcient to prevent wormhole attacks in which an individual on - site colludes with an adversary off - site to create a forged proof of location . We speciﬁcally do 916 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN Trusted Replay Untrusted Identiﬁable Immediate BS RS RNS Retroactive BS RS RNS Masked Immediate B BR Retroactive B BR Table 2 . Protocol coverage . not address collusion between two on - site individuals ; these individuals would be capable of defeating collusion controls by simply temporarily sharing devices ( similarly to lending keys to bypass physical access controls ) or physically collud - ing by occupying the same physical location . We consider addressing this threat beyond the scope of the current paper and leave it to future work . Provided that clients do not share private keys—a reason - able assumption if these keys are used for purposes outside of LocAssure , e . g . , signing purchase orders—the ﬁrst two mes - sages of the protocol described in Figure 5 create a binding between the client and a ( coarse ) physical space : the nonce n is unpredictable and the signature generated by the client must be returned within a time window that precludes col - lusion with an off - site adversary . The ticket returned by the NFC station ( message 3 ) then binds the client identity to the NFC station’s coarse location at the time ts . During the client’s request for a proof of location ( message 4 ) , the Lo - cAssure server can ensure that the client signing the location request matches the client identity in the NFC ticket . If the timestamp in the ticket is recent and the scan report gener - ated by the client has accurate minor numbers , the client can be assured to be coarsely on - site and observing recent BLE advertisements , so a ﬁne - grained location can be classiﬁed and returned by LocAssure ( message 5 ) . Scenario Coverage Table 2 summarizes the scenarios in which LocAssure can create unforgeable proofs of ﬁne - grained , indoor location us - ing the protocols described in this paper . In this table , B denotes the base beaconing protocol ( no randomization ) , R denotes the randomized beaconing protocol , N denotes the NFC protocol , and S denotes the variants of these protocols that include client signatures on localization requests . In the S - T - * - * settings , the base protocol can be used to localize clients , as clients are trusted not to replay , context guess , or collude . If client identiﬁablity is required , client signatures should be used ( as in Figure 4 ) , otherwise these can be omit - ted to allow clients to remain masked ( as in Figure 3 ) . In the S - R - * - * settings , the addition of randomized minors will ensure that replay and context guessing attacks can be pre - vented as discussed above ; signatures can , again , be used if client identiﬁability is required . Finally , the S - U - I - * settings can be addressed by using randomized minors in conjunction with our NFC - based protocol , as discussed above . In all set - tings , location proofs contain a signed timestamp indicating their time of issuance by LocAssure ; as such , they can be used either immediately or retroactively . DISCUSSION The LocAssure infrastructure and security protocols , when combined with our analysis of feasibility and performance , demonstrate a robust and practical system for assured indoor localization . While this work is not the ﬁrst to address se - cure indoor localization , we believe our approach is the ﬁrst that provides a holistic approach that enables immediate or retroactive proofs of location while supporting a deployment - tunable variety of assumptions , which include varying client - side adversarial behavior and client trust . In addition , with API access provided to third - party applications , we believe LocAssure is a major step forward in providing a platform to support a wide variety of applications that leverage secure indoor localization . As illustrated by Tables 1 and 2 , many different applications can be supported by LocAssure . In a workplace setting , Lo - cAssure could enable many new forms of access control to virtual assets like digital documents . Document viewing ap - plications that leverage LocAssure could provide ﬁne - grain controls over not only who has access to a document , but also where documents can be viewed . For instance , viewing of personnel documents could be restricted to individuals in Hu - man Resources and only when they are in their assigned of - ﬁces . Access from open spaces , like break rooms , could be prevented . Such controls could prove valuable as more and more documents are viewed and managed on mobile phones and tablets . Beyond virtual access control , LocAssure could enable new applications for physical access control . For instance , when coupled with a network - enabled door lock , LocAssure could enable ofﬁce owners to provide access to other colleague with the assurance that the colleague can only access the ofﬁce when he or she is physically present . There are also simi - lar applications of LocAssure to asset control and inventory management . While these applications demonstrate new opportunities en - abled by LocAssure , it is important to point out that limita - tions exist . One burdensome limitation comes from the un - derlying location classiﬁcation technique . While it is high in accuracy , deployment requires that a ﬁngerprint be collected from each room / location in which the system is expected to classify . The indoor location research community has pro - posed several methods for reducing this burden , including modeling the ﬁngerprints [ 14 ] and crowd sourced , interactive labeling of ground truth [ 4 ] . Fingerprinting could be avoided altogether if location preci - sion constraints are relaxed . Speciﬁcally , the location classi - ﬁcation could simply be a function of receiving advertising packets from n required beacons . Thus , if a device is within range of the required beacons the location proof protocols above could still apply . However , location would be coarse , and the system could only restrict access to zones or portions of a location ( e . g . , a particular wing or ﬂoor of a building ) . Tables 1 and 2 also illustrate that there are some use cases not supported by the LocAssure system . Particularly , situations where the client device is untrusted and needs to stay anony - 917 SESSION : INDOOR LOCALIZATION mous cannot be supported under the current set of protocols . While a few application cases may exist in this space ( e . g . , anonymous , but fair coupons or transit fare ) , we believe that the majority of useful applications across a variety of use con - texts require some element of client identity . Beyond location assurance , identity is typically requisite for access lists , at - tribute identiﬁcation , audit trails , and more . Thus , identity is often a constraint of the application , not just the location sys - tem used . However , our system could likely be extended us - ing privacy - friendly cryptographic techniques ( e . g . , as in [ 5 ] ) , rather than the pervasively deployed public key cryptography techniques used in this paper . Finally , we acknowledge that LocAssure has a large technol - ogy footprint . Speciﬁcally , a large number of beacons must be deployed to support a high degree of location certainty and to provide a high degree of cryptographic strength for some of the extension protocols proposed . Despite this , we believe the advantage of being able to work with off - the - shelf end - user devices ( e . g . , Android , iOS , and Windows phones and tablets ) provides a signiﬁcant advantage over lighter , custom hardware solutions . CONCLUSIONS AND FUTURE WORK Location is becoming a driving component in many mod - ern mobile computing applications . To be truly successful , a large number of these applications require that the location of the client device be trusted . In this work , we present Lo - cAssure , a system that provides a broad set of security and privacy affordances for secure location estimation . Further , the system that we propose is compatible with existing and popular location technologies and protocols ( e . g . , Bluetooth low energy and Apple iBeacon ) . In this paper , we have provided a multifaceted exploration of secure location , including providing a taxonomy that break down security , privacy , and infrastructure across several prac - tical dimensions , we demonstrated a location infrastructure designed to support many of these different dimensions , we describe and prove effective security protocols on top of our proposed infrastructure , and ﬁnally we show how the pro - tocols and infrastructure perform in a representative deploy - ment . Our work also serves as a starting point for several future di - rections . First , we intend to deploy LocAssure more broadly , exploring how the system performs across different physical conﬁgurations and beacon densities . We also look to ex - plore deployments where location accuracy , and thereby lo - cation assurance , varies within the deployment . For instance , a deployment where some “secure” rooms have high location resolution and security affordances , while other less secure rooms provide relaxed location and security controls . Finally , we plan to explore the utility of LocAssure through the devel - opment of several applications , which include physical access control and document security . REFERENCES 1 . Aparicio , S . , Perez , J . , Bernardos , A . , and Casar , J . A fusion method based on bluetooth and wlan technologies for indoor location . In Multisensor Fusion and Integration for Intelligent Systems , 2008 . MFI 2008 . IEEE International Conference on ( Aug 2008 ) , 487 – 491 . 2 . Bahl , P . , and Padmanabhan , V . Radar : an in - building rf - based user location and tracking system . In INFOCOM 2000 . Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies . Proceedings . IEEE , vol . 2 ( 2000 ) , 775 – 784 vol . 2 . 3 . Biehl , J . T . , Cooper , M . , Filby , G . , and Kratz , S . Loco : A ready - to - deploy framework for efﬁcient room localization using wi - ﬁ . In Proceedings of the 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing , UbiComp ’14 , ACM ( New York , NY , USA , 2014 ) , 183 – 187 . 4 . Bolliger , P . Redpin - adaptive , zero - conﬁguration indoor localization through user collaboration . In Proceedings of the First ACM International Workshop on Mobile Entity Localization and Tracking in GPS - less Environments , MELT ’08 , ACM ( New York , NY , USA , 2008 ) , 55 – 60 . 5 . Carbunar , B . , Sion , R . , Potharaju , R . , and Ehsan , M . The shy mayor : Private badges in geosocial networks . In Proceedings of the 10th International Conference on Applied Cryptography and Network Security , ACNS’12 , Springer - Verlag ( Berlin , Heidelberg , 2012 ) , 436 – 454 . 6 . ElectricImp . http : / / electricimp . com / . 7 . Fan , M . , Liu , Q . , Tang , H . , and Chiu , P . Hiﬁ : Hide and ﬁnd digital content associated with physical objects via coded light . In Proceedings of the 15th Workshop on Mobile Computing Systems and Applications , HotMobile ’14 , ACM ( New York , NY , USA , 2014 ) , 6 : 1 – 6 : 6 . 8 . Freund , Y . , and Schapire , R . E . A decision - theoretic generalization of on - line learning and an application to boosting . In Proceedings of the Second European Conference on Computational Learning Theory , EuroCOLT ’95 , Springer - Verlag ( London , UK , UK , 1995 ) , 23 – 37 . 9 . Harter , A . , Hopper , A . , Steggles , P . , Ward , A . , and Webster , P . The anatomy of a contextaware application . Wireless Networks 8 , 2 / 3 ( 2002 ) , 187 – 197 . 10 . Hastie , T . , Tibshirani , R . , and Friedman , J . The Elements of Statistical Learning . Springer , 2001 . 11 . Hightower , J . , Want , R . , and Borriello , G . Spoton : An indoor 3d location sensing technology based on rf signal strength . Tech . Rep . UW CSE 00 - 02 - 02 , University of Washington , Department of Computer Science and Engineering , 2000 . 12 . Hu , Y . - C . , Perrig , A . , and Johnson , D . Wormhole attacks in wireless networks . Selected Areas in Communications , IEEE Journal on 24 , 2 ( Feb 2006 ) , 370 – 380 . 13 . iBeacon for Developers . https : / / developer . apple . com / ibeacon / . 918 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN 14 . Li , L . , Shen , G . , Zhao , C . , Moscibroda , T . , Lin , J . - H . , and Zhao , F . Experiencing and handling the diversity in data density and environmental locality in an indoor positioning service . In Proceedings of the 20th Annual International Conference on Mobile Computing and Networking , MobiCom ’14 , ACM ( New York , NY , USA , 2014 ) , 459 – 470 . 15 . Luo , W . , and Hengartner , U . Proving your location without giving up your privacy . In Proceedings of the Eleventh Workshop on Mobile Computing Systems & # 38 ; Applications , HotMobile ’10 , ACM ( New York , NY , USA , 2010 ) , 7 – 12 . 16 . Manweiler , J . , Scudellari , R . , and Cox , L . P . Smile : Encounter - based trust for mobile social services . In Proceedings of the 16th ACM Conference on Computer and Communications Security , CCS ’09 , ACM ( New York , NY , USA , 2009 ) , 246 – 255 . 17 . Miettinen , M . , Asokan , N . , Koushanfar , F . , Nguyen , T . D . , Rios , J . , Sadeghi , A . - R . , Sobhani , M . , and Yellapantula , S . I know where you are : Proofs of presence resilient to malicious provers . In Proceedings of the 10th ACM Symposium on Information , Computer and Communications Security , ASIA CCS ’15 , ACM ( New York , NY , USA , 2015 ) , 567 – 577 . 18 . Moors , T . , Mei , M . , and Salim , A . one - it : Using short range communication to control mobile device functionality . Journal of Personal and Ubiquitous Computing ( 2008 ) . 19 . Polakis , I . , Volanis , S . , Athanasopoulos , E . , and Markatos , E . P . The man who was there : Validating check - ins in location - based services . In Proceedings of the 29th Annual Computer Security Applications Conference , ACSAC ’13 , ACM ( New York , NY , USA , 2013 ) , 19 – 28 . 20 . Portnoi , M . , and Shen , C . C . Loc - auth : Location - enabled authentication through attribute - based encryption . In International Conference on Computing , Networking and Communications ( ICNC 2015 ) ( 2015 ) . 21 . Rodrigues , M . , Vieira , L . , and Campos , M . Fingerprinting - based radio localization in indoor environments using multiple wireless technologies . In Personal Indoor and Mobile Radio Communications ( PIMRC ) , 2011 IEEE 22nd International Symposium on ( Sept 2011 ) , 1203 – 1207 . 22 . Saroiu , S . , and Wolman , A . Enabling new mobile applications with location proofs . In Proceedings of the 10th Workshop on Mobile Computing Systems and Applications , HotMobile ’09 , ACM ( New York , NY , USA , 2009 ) , 3 : 1 – 3 : 6 . 23 . Want , R . , Hopper , A . , Falc˜ao , V . , and Gibbons , J . The active badge location system . ACM Trans . Inf . Syst . 10 , 1 ( Jan . 1992 ) , 91 – 102 . 919 SESSION : INDOOR LOCALIZATION