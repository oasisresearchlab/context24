This work is licensed under a Creative Commons Attribution - NonCommercial - Share Alike 4 . 0 International License . https : / / creativecommons . org / licenses / by - nc - sa / 4 . 0 / An Ontology of Computational Tools for Design Activities While able to automatically generate and optimise designs for variables provided by a designer , today’s computational design tools do not specialise in the earlier , more tacit tasks such as gathering and sorting disparate information or generating hypotheses and identifying novel directions . This paper presents a review of computational technologies that could potentially play a role in these early stage design activities . Using a framework that deconstructs design activities into algorithms and mechanisms , an ontology of computational tools related to these activities was created . Computational mechanisms such as neural networks and stochastic algorithms were found to provide features that could allow for discovering and linking new information together in order to provoke the often unexpected inspiration that can guide designs in the latter phases of development . computational design tools ; creativity support ; early design process Introduction Since the mid - twentieth century , computation has become increasingly intertwined with design , from abstracting the craft of the design process into models that use a more algorithmic logic ( Alexander , 1966 ) , to the development of automated Computer Aided Design ( CAD ) software that explores and optimises the range of different values a set of design variables could have ( Papanikolaou , 2012 ) . The paradigms of computation used in the design process have changed dramatically throughout the development of CAD technologies . Early tools such as Pro / ENGINEER allowed engineers to set clear parameters and relationships between a database of features , requiring designers to explicitly plan and describe their ‘design intent’ . In comparison , direct modeling CAD systems such as Autodesk Fusion 360 allow designers to edit the geometry of their designs through interacting directly with it , enabling designers to integrate more of their implicit intuition into their creations ( Tornincasa & Di Monaco , 2010 ) . Today advanced computation techniques are starting to automate some of these more human tasks ; elements in databases can be recombined to create an almost endless variety of alternatives , solutions can be optimised to a set of input variables using genetic algorithms , and evaluative systems can derive inferences and insights from data using statistical models ( Sjoberg , Beorkrem & Ellinger , 2017 ) . How can these new mechanisms of computation play a role in the tools used in the design process ? This paper will review a range of CAD tools and computing technologies and suggest how they might relate to the design process now and in the future . Establishing the opportunities and challenges of integrating computational tools into the early stages of the design process , we describe an approach through which to analyse the traditions present in both computational technologies and the design process . We then offer an ontology of computational tools for design , considering the capabilities of these tools by reviewing several case studies that offer new technical approaches as part of their creative process . Highlighting a few of these computational tools , we conclude by considering how they might be applied to tools fitting the early phases of the creative process . A computational epistemological framework for analysing the design process CAD tools available today specialize in the automatic generation and optimisation of the values for a set of variables defined by the designer and related through an explicitly understood and code - able algorithmic logic ( Loukissas , 2012 ) . In comparison to this very structured affordance of computational design tools , the meandering ad hoc experiments carried out in the early creative process appear abstract and loosely defined ( Mitchell , 1993 ; Schön , 1983 ) . These discrepancies highlight the challenges—and opportunities—of applying computation in the early stage of the design process . However , if we consider some of the fundamental attributes of both computation and design tools , these two worlds are closer than we might imagine at first glance . The concept of a tool need not be a specific technical instrument ; tools can be any physical , digital , or conceptual mechanism that enhance our design abilities ( McCullough , 1998 ) . And while many design tools used today are computational in the modern sense of being digital , computation can more broadly be considered as a logical process of calculating and an algorithm can be defined as a set of instructions ( Algorithm , n . d . ) . A computational design tool can therefore be considered to be an aid that uses a logical set of instructions that act as a mechanism through which something can be calculated . As other researchers have proposed ( Michel , 2007 ) , the design process—even the ad hoc abstract early stages—can also be considered to consist of conceptual tools using somewhat logical mechanisms . Can these conceptual design tools then be mapped to mechanisms in computational tools ? Since the nature of computation requires discrete information , considering design as even a semi - structured process allows us to tackle this idea of intertwining the philosophies and technologies of computation more closely with the creative process and translate it into computationally - inspired tools . As McCullough ( 1998 ) writes , our use of computers “ought not to be so much for automating tasks as for abstracting craft” . How might we abstract the craft of design ? Taking inspiration from the ‘three levels of analysis’ models used to describe perception in cognitive psychology ( McClamrock , 1991 ) , a framework for how we might take a more computational epistemological view of the design process is as follows : • Design activities : This level of the framework identifies ‘what’ is being carried out in the design process ; the higher - level activities in which the overall problem or goal is described but not the underlying structures for how it might be achieved . As a designer , you might consider : “The goal of this [ design activity e . g . mood board development ] is to use [ inputs e . g . extreme design themes ] to generate [ outputs e . g . extreme concept mood boards ] . . . ” • Design algorithms : This level describes ‘how’ the design activities will be achieved by breaking down the activities into a series of specific tasks . These tasks describe single actions that can be carried out but do not detail the exact mechanisms that will be executed , i . e . the procedural instructions to be followed to generate the design , like Sol LeWitt’s Instructional Art ( 1967 ) . A designer might add to the above sentence by considering : “ . . . using [ design knowledge , e . g . situational understanding ] and [ specific processes , e . g . image search ] …” • Design mechanisms : This level describes ‘what’ will be used to execute the algorithmic devices ; the low level substrates and mechanisms ( physical or digital ) that will perform the tasks in the design activities . These do not necessarily relate to one specific task and may therefore be relevant to many design activities . A designer might add to the above sentence by considering : “ . . . with [ specific media , e . g . fashion magazines , and tools , e . g . Pintrest ] ” We believe this framework could be an instructive and generative approach for developing an ontology of the computational tools in the design process . We would argue that this framework is already used , at least implicitly , by others who have written about tools and the design process . Spier ( 1970 ) gives examples of tools used for a certain function : “The use of an artifact is direct and immediate and may be profitably distinguishable from function . The use of a pencil is to make marks on suitable surfaces ; its function is to communicate ideas and sentiments . ” We would postulate that Spier’s tool can be modeled using the above framework ; the tool ( or design mechanism ) , for example a pencil , then executes a certain use ( or task within a design algorithm ) , such as making marks , which contributes to the overall function ( or design activity ) of communicating ideas . The following sections will use this framework to review the design activities and algorithms present in the creative process , and identify a range of computational tools that are the design mechanisms that can be used in these activities . Defining the design activities in the early creative process As discussed above , this paper is concerned with the role of computational tools in the early stage of the design process . But what are the early phases of the creative process and , applying the above approach , what are the design activities often used in these phases ? A brief review of the literature There has been much research into defining the many phases and activities of the design process ; Dubberly ( 2004 ) diligently collected a staggering 88 of them . This is partly due to the fact that design can have many meanings . While the term design used to focus on the aesthetics of an industrially produced artifact ( McCullough , 1998 ) , it gained more of an understanding as a methodology for objectively managing change in a system ( Simon , 1969 ) . This design methods movement expanded the definition of design and the design process to include the activities of design research and idea generation ( Michel , 2007 ) , not just the production of an artifact . However , as this plethora of different approaches shows and as commented on by Wynn and Clarkson ( 2005 ) : “there is no single model which is agreed to provide a satisfactory description of the design process [ and ] no ‘silver bullet’ method which can be universally applied to achieve process improvement . ” In this paper , we do not propose to redefine that work ; here we briefly describe the model that aligns best with our own position—that design is a process with the ability to produce designed artifacts—and the framework described above . Despite this lack of agreement , the many attempts to review and synthesise the different models of the design process into an overarching taxonomy ( Mendel , 2012 ; Wynn & Clarkson , 2005 ; Design Council , 2007 ) generally divide the overall design process into four phases—discover , reframe and define , envision and develop , and create and deliver—that are often concurrent and cyclical ( Lawson , 2006 ; Schön , 1983 ; Blessing , 1994 ) . The discovery phase builds from initial hunches to collect diverse information and designers use their intuition to structure the often disparate data to reveal patterns and gather insights . In the reframe and define phase , designers take this information and use their imagination to juxtapose it in non - obvious ways to “reveal new salience , relationships , and meanings” ( Mendel , 2012 ) . These are the opportunity areas which are the focal points for envisioning new designs , i . e . the creative brief to guide the next phases . Potential solutions or concepts are generated and evaluated in the next envision and develop phases , converging from many extreme envisionings to a few more concrete forms and final solutions in the final create and deliver phase . Throughout these phases , designers change from considering concrete information to more abstract interpretations then back ( Fulton Suri , 2008 ) . Especially in the early phases that focus on design research and idea generation , designers bridge “the space in - between research and concept” ( Robinson in Dubberly & Evanson , 2008 ) . Moving between analysis and synthesis , designers use abductive reasoning to translate models about what the current situation is into a preferred future of ‘what could be’ through creating and playing with abstract concepts ( Steinfeld , 2017 ) . This focus on more abstract interpretations in the early phases of the creative process may help to explain why there are fewer computational tools available to aid designers . Taking Gero’s ( 1990 ) definition that design “can be modeled using variables and decisions made about what values should be taken by these variables” , we can suggest that it is in these first two phases that the ‘variables’ of the design are defined . They are where new information is discovered or synthesised in new ways ; the creative leap that crystallises the essence of a design idea that then inspires a designer’s imagination and creates variables to guide them throughout the rest of the project ( Fulton Suri , 2008 ; Pahl & Beitz , 1996 , in Wynn & Clarkson , 2005 ) . These are the more tacit , human - driven moments of the design process where dreaming and playful exploration are used to “liberate thinking from old habits so as to break through to the Aha ! moment of inspiration” ( Schneiderman , 2007 ) . The latter stages which assign values to these newly defined variables involve a more well - bounded deductive process that is much better suited to the currently available computational tools that can iteratively test huge numbers of different values for those variables ( Steinfeld , 2017 ; Papanikolaou , 2012 ) . In comparison , the early phases contain these more tacit activities , such as collecting diverse information and reframing it in novel ways , that are not , as yet , served by many computational tools . Bernal , Haymaker & Eastman ( 2015 ) showed this dearth of computational tools in the activities in the early phases of the design process in Figure 1 shown below ( modified to include the four design process phases ) , underlining our premise and the need for this review of technologies that could inform future CAD tools in this space . Figure 1 : Bernal et al . ( 2015 ) diagram of human and computational tools available for the ‘actions’ in the design process with additional coloured bands added to show the four overlapping design phases The design activities in discovery and reframe / define So , returning to the approach described above , what are the activities , algorithms and mechanisms that are relevant to these early phases of discovery and define / reframe ? This next section will attempt to identify some of the activities present in these first two phases and parts of the algorithms that are related to them . Figure 2 is a collection of the activities and algorithms within the discover and reframe / define phases of the design process referred to in the literature . Figure 2 : A review of the design activities and algorithms present in the discovery and reframe / define phases ( activities in bold , algorithms in italics ) Figure 2 cont . Summarising the above list , some of the main design activities and parts of design algorithms related to the discover and reframe / define phases are described in Table 1 below . This list of activities and algorithms is not proposed to be exhaustive ; we agree that defining a design process by an overly structuralist philosophy of prescribed activities can actually be restrictive to creativity due to the lack of generality in their application ( Wynn & Clarkson , 2005 ; Finke , Ward & Smith , 1992 ; Schneiderman , 2007 ) , especially in the more bricolage approach to activity selection often carried out by designers in the early stages . These design activities and algorithms are merely ‘primary generators’ ( Darke , 1979 ) ; not a complete list of all possible options that could be analysed , but more a guiding structure for categories of the ontology of design mechanisms described in the following section , from which new ideas for computational design tools can be inspired . Design phase Design activity Design algorithm tasks Discover Gather disparate information • Use initial insights to find related information • Think about the initial insights and information in different contexts • Create divergence through finding associations , abstractions and analogies Sort information • Collect information in a way that allows easy analysis and comparison , e . g . annotating , tagging and database structures • Decompose information into related attributes / categories • Use the structure and categories to look for patterns or inspire questions Reframe / define Generate hypotheses • Present and recompose information in many representations ( word / image ) to create stories for possible design alternatives • Allow for ambiguity in these hypotheses to encourage multiple interpretations Identify novel directions • Use analogy or different contexts to interpret the information in new ways • Recombine / mutate / substitute the information in new ways to create wildly unexpected inferences and moments of illumination Table 1 : A summary of the main design activities and parts of design algorithms related to the discover and reframe / define phases An ontology of computational mechanisms for the early phases of design Drawing inspiration from several real world design projects , this section reviews the computational tools—or design mechanisms—that can be used to implement and execute the algorithms in the design activities described in Table 1 above . Examples of tools used in the discovery phase Design activity : Gather disparate information Design algorithm : Use initial insights to find related information The beginning of the discover phase involves understanding and organising the information related to a design situation . Today’s very parametric CAD tools such as SolidWorks do not provide the cognitive support of helping search for and highlight new information the designer might not have thought of ( Bernal et al , 2015 ) . Even tools that automatically generate and optimise designs such as Autodesk Dreamcatcher are limited to the target variables defined by the designer . The computational technology that designers often use to help them in this design task of finding information related to their initial prompt is in the form of the now ubiquitous semantic search engines . Technologies such as Google automatically filling in our search field inputs to Amazon Echo understanding what we are asking her use the machine learning and statistics technique of dimensionality reduction ( Barysevich , 2017 ) . In this technique , a database that uses many dimensions to connect all of the information is abstracted down into a smaller , more manageable set of key features using either linear or non - linear mapping ; not dissimilar to the tasks that designers do when trying to understand the information related to their project in order to learn from related fields ( Finke et al , 1992 ; Mendel , 2012 ) . A tool available to execute these operations on a corpus of text , and one that forms the basis of many Natural Language Processing tools , is word2vec ( www . tensorflow . org / tutorials / word2vec ) ( Mikolov et al , 2013 ) . Words in the corpus are assigned a number based on their connection to others , forming a meaningful vector that can be used to compare words in different contexts and find similarities through the direction and location of that vector . A similar strategy can be used to compare images , with a popular algorithm being t - SNE ( Maaten & Hinton , 2008 ) ; Figure 3 shows how sketches from the Moon Drawing project can be sorted into similar styles ( McDonald , 2016 ) . Taking this further , Yossarian ( www . yossarian . co ) is a metaphorical search engine that helps designers find more diverse information related to their initial hunches . It returns diverse interpretations of the initial word and image based on a ‘metaphorical distance’ requested by the designer . The details of the technology are not public , but we postulate it does this by adding a factor to change the distance or direction in the vector mathematics connecting the entities in the database ( Figure 4 ) . Working with poet Helen Mort to help provide her inspiration to write a poem a day ( “Helen Mort’s poetry challenge with Yossarian” , 2015 ) , Yossarian allowed Mort to more quickly connect diverse themes , a crucial part of the early creative process ( Minissale , 2013 ) . This computational mechanism of dimensionality reduction with a vectorising factor to extend the metaphorical search capabilities could therefore potentially help designers find unexpected information in their search activities , leading to more novel design solutions . Figure 3 ( left ) : Kyle MacDonald’s representation of Golan Levin and David Newbury’s Moon Drawing’s project Figure 4 ( right ) : Yossarian metaphorical search engine Design algorithms : Think about the initial insights and information in different contexts & Create divergence through finding associations , abstractions and analogies Traditional CAD tools often have a very structured way of automating certain actions , using procedural knowledge and design language that is either pre - defined or user prescribed and focuses on geometric relationships ( Bernal et al , 2015 ) , e . g . the automatic patterning of a shape in tools such as SolidWorks or Adobe Illustrator . This means these tools do not currently have the ability to integrate analogical information into their operations ; an important feature to allow for divergent thought and idea generation ( Gero & Maher , 1993 ) . The computational mechanisms that could allow that to happen are the deep learning neural networks prevalent in image and language processing tools such as IBM cognitive system Watson . ‘Living Sculpture’ by SOFTLab is a project that used these tools to broaden the perspective of the initial information considered by the designers , specifically to help explore and identify the trends in the materials , shapes and colours that Gaudi used in his work to inspire their creative process during the development of a new sculpture ( Lewis , 2017a ) . Feeding hundreds of tagged images of Gaudi’s work , Barcelona and its general culture into the deep learning neural networks in Watson’s Visual Recognition tool taught the system how to recognise the components of those images that ‘looked’ Gaudi - esque and those that didn’t . The system could then compare them to other unrelated images in the database to see if there were any similarities , e . g . it recognised that many of the Gaudi images had depictions of spiders in them . Similarly , documentation around Gaudi and his work—such as biographies , historical articles and song lyrics—were fed into Watson’s AlchemyLanguage tool which also used neural networks to analyse the text and identify the most prevalent keywords and concepts related to Gaudi’s work but also more broadly from nature , design and Catalan culture . The tools in Watson’s cognitive system undoubtedly include machine learning techniques such as convolutional ( CNN ) and recurrent ( RNN ) neural networks . CNNs are useful for image recognition as , after ‘learning’ patterns from a large training set of tagged images , they can distinguish parts of images related to different categories . RNNs use feedback systems to help them continually learn about the information they are training on and modify the patterns they are seeing , making them very good at parsing and generating new text . We posit that this project used a combination of these computational mechanisms to identify several general categories of object types within the original database of images and text , such as ‘waves’ , ‘arches’ , and evidently ‘spiders’ etc . Some of these categories would have been very obvious to any designers familiar with the work of Gaudi , but Watson also helped identify less immediately apparent but very inspiring connections such as the forms , materiality and colours of ‘crabs’ , ‘shells’ and ‘candy’ ( Wiltz , 2017 ) . The similarity of SOFTLab’s work to these elements in Gaudi’s designs can be seen in Figure 5 below . SOFTLab designer Michael Szivos described how Watson’s cognitive tools helped them to carry out the tasks they normally do without computers in the early conceptual design stage of a project such as “look at references and try to extract fundamental ideas that we then re - translate into a specific project” ( Lewis , 2017b ) . Integrating these computational mechanisms of CNNs and RNNs into design tools could help designers to not only expand the initial information they were exploring but also quickly parse it to identify both expected and unexpected findings . Figure 5 : Gaudi’s Casa Batlló ( left ) and SOFTLab’s Living Sculpture ( right ) showing similar iridescent patterns Design activity : Sort information Design algorithm : Collect information in a way that allows easy analysis and comparison , e . g . annotating , tagging and database structures Tools to aid the tagging ( or coding ) , sorting and analysis of information collected during research in a design project , such as ATLAS . ti and NVivo , fall under the field of computer - assisted qualitative data analysis software ( CAQDAS ) . While allowing researchers to search within their datasets and pull out common themes , these tools have a limited ability to automate the very manual coding process ( Saldana , 2009 ) . The computational mechanisms described above only require some of the data they analyse to be tagged . A subset of these mechanisms called unsupervised learning algorithms help to automate this process ; tools that use CNNs and RNNs , such as the Clarifai application ( www . clarifai . com ) , can learn from a training set of data to automatically tag a wider corpus of images or video and understand the categories present . Overlapping coding with other stages of the research process can help generate new hypotheses ( Eisenhardt , 1989 ) . What if the tools that helped us code the research could also inspire new ideas ? An interesting development of this technique was created by Fito Segrera in The Treachery of [ Soft ] Images ( 2016 ) ; a homage to Magritte’s painting of similar name where an image of a pipe is described as not being a pipe ( Figure 6 ) . Here , images found on the internet are put through a neural network that labels them , sometimes with humorous—and potentially very inspiring— misinterpretations . Figure 6 : A still from Fito Segrera’s installation The Treachery of [ Soft ] Images ( 2016 ) Design algorithms : Decompose information into related attributes / categories & Use the structure and categories to look for patterns or inspire q’s Traditional CAD systems such as SolidWorks often require a design to be decomposed into its underlying attributes in order to relate them to each other . However , the operational affordances of these tools are only capable of considering the underlying geometries of shapes , e . g . specifying the points which make up a curve , and then relating and storing them parametrically ( Tornincasa & Di Monaco , 2010 ) ; the decomposition required in the early design process requires different computational mechanisms to identify attributes , find patterns and inspire related categories . As with several of the projects and mechanisms described above , it is the combination of CNNs with a dimensionality reduction algorithm that can help decompose and structure the text and image - based information that is used early in the design process . One such tool is t - SNE ( Olah , 2014 ) which allows an image to be assigned a numerical description associated to the different categories that it is related to . This numerical description can then be compared to others and the images grouped on their visual and contextual similarities ( as Karpathy ( n . d . ) has shown in Figure 7 ) . Taking this further , McDonald ( 2016 ) has used t - SNE to place all of the underlying categories of the images in a database next to each other , showing what objects are often found in similar contexts despite being visually different , e . g . pill bottle , band aid and lipstick are all grouped very closely due to them being found in bathrooms ( Figure 8 ) . These tasks—understanding the underlying attributes of images and sorting them based on their classifications—are currently very human - based ; integrating this computational mechanism into a design tool could help designers more quickly structure their research into constructive categories . Figure 7 ( left ) : Andrej Karpathy’s visualisation of the similarity of images Figure 8 ( right ) : Kyle McDonald’s representation of the similarities of image categories Examples of tools used in the reframe / define phase Design activity : Generate hypotheses Design algorithms : Present and recompose information in many representations ( word / image ) to create stories for possible design alternatives & Allow for ambiguity in these hypotheses to encourage multiple interpretations In the early phases where ideas are being defined , designers often imagine how the information collected in the discovery phase could be considered and recombined in new ways to inform future design solutions . For many years , creative writers and artists have used design mechanisms that provoke ambiguity or absurdity to help them to generate new possibilities for their work ( Gaver & Dunne , 1999 ) . For example , Dadaist artist Tristan Tzara used chance in his method “How to make a Dadaist poem” , which included cutting up words from a newspaper and mixing them up in a bag ( Dorin , 2013 ) , using randomness as a way to access the subconscious . Accessing the higher powers through the I Ching , the ancient Chinese method of interpreting a divination text through the random generation of hexagram numbers by throwing sticks or dice , has also been used to inspire creative paths for artists such as John Cage and Philip K Dick ( Mountfort , 2016 ) . More recently , the mechanisms that have made these processes more computational have been story generator algorithms ( Gervás , 2012 ) . The simplest of these takes a predefined structure of a short story or letter or plot and randomly assigns nouns , verbs , adjectives etc . provided by the user into appropriate places ( https : / / www . plot - generator . org . uk / ) . Despite being so simple and often generating ridiculous , unrefined compositions , the ambiguity provided by this structured approach creates very unexpected and inspiring juxtapositions of concepts and themes . Taking this further , the short film Sunspring actually created a machine learning algorithm to generate the structure and content of the script from scratch ( Newitz , 2016 ) . Similar to the text parsing mechanisms described above , a RNN was trained using a corpus of dozens of sci - fi screenplays and learned to imitate the structure and style of sentences and whole paragraphs used in such a context . Applying these technologies to the design process , these combinatorial mechanisms could also be used to “trigger unpredictable inferences” in the early phases of the design process ( Bernal et al , 2015 ) . Inspired by similar tools that use chance such as Eno and Schmidt’s ( 1975 ) Oblique Strategies , we developed a website ( www . excluded - for - review . com ) that uses a stochastic mechanism to recombine variables related to the designer’s research into a creative prompt sentence , e . g . “Design [ an object , a website , an image , etc . ] inspired by [ cameras , fashion , healthcare , etc . ] that is [ approachable , contrasting , responsive etc . ] through [ personas , layouts , textures , etc . ] using [ foam , paint , collage , etc . ] ” ( paper authors , date ) . Relating this task of recomposing information in new ways to images , much can be learned from the field of data visualisation ( Tufte & Robins , 1997 ) . CAQDAS systems integrate some simple visualisation features but are limited in the creative explorations that designers require in these early phases ( Bhowmick , 2006 ) . Data visualization artists such as Jared Tarbell have created tools that explore more creative ways of representing data using computational processes that randomize the fonts , sizes and positions of text and images ( Figures 9 , 10 and 11 ) . These computational mechanisms could be useful in helping designers juxtapose unexpected concepts from their research ; helping them intuitively ‘find’ the elements that inspire them , like gazing at Leonardo’s paint stained wall that inspired deliberate accidents ( Turner , 2011 ) but with more purposeful information embedded in it . These visualisations could even be a more immersive experience as CAD systems that integrate virtual and augmented reality technologies become more readily available ( Arnowitz , Morse & Greenberg , 2017 ) . Figure 9 : Cylinder Image Display by Jared Tarbell ( http : / / www . levitated . net / daily / levCylinderImageDisplay . html ) Figure 10 ( left ) : Text Space by Jared Tarbell ( http : / / www . levitated . net / daily / levTextSpace . html ) Figure 11 ( right ) : Emotion Fractal by Jared Tarbell ( http : / / www . levitated . net / daily / levEmotionFractal . html ) Design activity : Identify novel directions Design algorithms : Use analogy or different contexts to interpret the information in new ways & Recombine / mutate / substitute the information in new ways to create wildly unexpected inferences and moments of illumination Once all of the diverse information related to the designer’s initial ideas has been collected , and categories have been identified and presented in novel ways , it must all be synthesised into original ideas that can guide the design as it is developed . These new ideas often come from reframing and recombining or mutating the original information and categories into new contexts or interpretations ( Gero & Maher , 1993 ) . Despite the real - time manipulation and generation that direct modelling and generative CAD tools such as Autodesk Fusion 360 and Autodesk Dreamcatcher respectively offer , they merely present a range of options that hope to provoke the ‘Aha’ moment of inspiration ; the human designer is still needed when engaging with these tools to think critically about what is being designed and ‘nudge’ the algorithm in the preferred direction ( Bernal et al , 2015 ; Bruner , 2016 ) . The lack of 100 percent accuracy in the predictions generated by the computational mechanisms discussed above can actually help with provoking a more inspiring range of design ideas related to the information collected in the discovery phase . Running a CNN in real time while sketching a picture allows the computer to offer many speculative guesses as to what you are drawing ; like a game of Pictionary . Google’s Quick , Draw ! App ( https : / / quickdraw . withgoogle . com / ) is such a mechanism ( Figure 12 ) that could be a useful tool for prompting unexpected inferences . As the system continually provides guesses of even incomplete images , the user is presented with a range of interpretations not associated to the initial intent of the drawing . This is not an unfamiliar activity in the design process ; a designer’s colleagues may see a half drawn or scribbled sketch and interpret it as something different to the designer’s original intent , often inspiring a new idea for their design ( Stacey , Eckert & McFadzean , 1999 ) . Taking this idea further , the AutoDraw app ( https : / / www . autodraw . com / ) guesses what the user might be drawing and then uses CNN to find many different illustrations of a similar context from a database ( Figure 13 ) . Again , this offers the designer an interesting real time interpretation of the information they are inputting into the system . Adding RNN to this mechanism , as in Magenta’s sketch - rnn demo ( https : / / magenta . tensorflow . org / sketch - rnn - demo ) , allows these alternative illustrations to be generated from the actual sketch that the user draws , not just replaced with a separate image ( Figure 14 ) . Figure 12 : Google’s Quick , Draw ! app showing interpretation of a cat sketch also as a spider , airplane , campfire , etc . Figure 13 : AutoDraw suggesting alternative illustrations for a sketch of a dolphin Figure 14 : Magenta’s sketch - rnn generating sketches of a dog from an initial basic sketch A more advanced version of these sketching tools are the style transfer algorithms like Google’s DeepDream that have become popular in the last few years ( Steinfeld , 2017 ) . In these “design by example” mechanisms , CNNs are used to detect the set of context and style features in different images and a feedback technique is used to slowly change the style features of one so that the difference between the two images is reduced ( Tejani , 2016 ) . McDonald ( 2016 ) has explored this technique extensively , transforming an image of Marylin Monroe and Mount Fuji into versions that could have been painted by all of the artists throughout history ( Figure 15 ) . Refining this technology , Korsten and Flores ( 2016 ) ‘learned’ the style of 17 th century master painted Rembrandt and generated a completely new artwork in his style . Integrating more of the user’s input as to which areas should be ‘transferred’ between images , Champandard ( 2016 ) uses the idea of analogy to demark areas that have certain categories in the style image , e . g . marking a tree with brown pixels . The user then ‘paints’ a sketch of a new composition using the same colour scheme , and the CNN transfers the style learned from that section of the style image to only those areas of the new composition ( Figure 16 ) . What is exciting about these computational mechanisms is that these techniques are not unfamiliar to artists , who have been learning , integrating and modifying other artist ' s styles for centuries . While not achieving the standards that a professional artist would , these algorithms provide enough of an idea of what one image in another style would be like—similar to the analogies that designers often apply in their early experiments ( Hey , Linsey , Agogino & Wood , 2008 ) —to inspire the aesthetics and ‘feeling’ of the design that they will develop . Figure 15 ( left ) : Kyle McDonald’s style transfer studies ( see more at www . kylemcdonald . net / stylestudies / ) Figure 16 ( right ) : Alex Champandard’s analogy style transfer examples , ( a ) Original painting by Renoir , ( b ) semantic annotations , ( c ) desired layout , ( d ) generated output . Conclusion The CAD tools available to designers today specialise in manipulating and automatically generating optimised designs for a set of pre - defined variables , i . e . they are proficient at the latter phases of the design process where concrete forms and final solutions are envisioned and developed . These tools require very explicit descriptions of a design and as such are not suited to the more abstract , tacit activities present in the early discovery and reframe phases of the design process . This paper presented a review of computational technologies that could potentially play a role in these early stage design activities . By considering the computation of algorithms as the execution of a set of instructions , we proposed a framework through which to construct a logic for the activities in the early phases of the design process . Deconstructing design activities into tasks in a design algorithm and then mechanisms through which these tasks could be executed allowed these conceptual tools of design to be mapped to relevant computational mechanisms . From this ontology , we can suggest some key computational mechanisms that could contribute to the development of computational tools applicable to the early phases of the design process . In the discover phase , the activities involved gathering and sorting disparate information . Machine learning algorithms such as CNNs , RNNs and dimensionality reduction techniques are excellent computational mechanisms to parse and categorise the initial information that a designer inputs into a design tool , such as their design research notes , interview transcripts or even inspirational images . Integrating factors that allow for a looser connection between the classification of the data can help the system to search for more analogous information , extending the range of material that the designer can be inspired by . In the reframe / define phase , the activities focused on generating hypotheses and identifying novel directions . Here we suggest that computational mechanisms using stochastic processes to juxtapose the information from the discover phase in new ways , e . g . using visualisation tools that play with the position , size and style of the text and images , could help designers to imagine unfamiliar concepts and novel design ideas . CNNs and RNNs used in story generators and style transfer algorithms can also be used to generate new design ‘prompts’ for designers to consider and hopefully be inspired by . Concluding with a few design principles for the development of future CAD tools , we recommend the inclusion of features that allow for discovering and linking new information together and the provision of new interfaces that can provoke a designer’s intuition and generate unexpected inspiration to guide designs in the latter phases of development . We hope that this review can offer suggestions for how we might develop CAD tools that are more appropriate to the early phases of the design process ; tools that focus on inspiring , rather than shaping or rationalizing . References Alexander , C . ( 1966 ) . From a Set of Forces to a Form . In Kepes , G . ( Ed . ) . The man - made object ( pp . 96 - 107 ) , New York : G . Braziller . Algorithm ( n . d . ) In Oxford Dictionaries , Retrieved from https : / / en . oxforddictionaries . com / definition / algorithm Arnowitz , E . , Morse , C . & Greenberg , D . P . ( 2017 , November ) . vSpline : Physical Design and the Perception of Scale in Virtual Reality . In ACADIA 2017 : DISCIPLINES & DISRUPTION ( Proceedings of the 37th Annual Conference of the Association for Computer Aided Design in Architecture ) , pp . 552 - 561 Barysevich , A . “Your Keywords Are Not What You Think They Are” SEO Powersuite , February 28th , 2017 . https : / / www . link - assistant . com / news / keyword - refinements . html Bernal , M . , Haymaker , J . R . , & Eastman , C . ( 2015 ) . On the role of computational support for designers in action . Design Studies , 41 , 163 - 182 . Blessing LTM ( 1994 ) A process - based approach to computer - supported engineering design . PhD thesis , University of Twente , The Netherlands Bhowmick , T . ( 2006 ) . Building an exploratory visual analysis tool for qualitative researchers . Proceedings of AutoCarto , Vancouver , WA . Bruner , J . ( 2016 , September 12th ) “Artificial intelligence and the future of design” Retrieved from https : / / www . oreilly . com / ideas / artificial - intelligence - and - the - future - of - design Council , D . ( 2007 ) . Eleven lessons : Managing design in eleven global companies - desk research report . Design Council . Champandard , A . J . ( 2016 ) . Semantic style transfer and turning two - bit doodles into fine artworks . arXiv preprint arXiv : 1603 . 01768 . Darke J ( 1979 ) The primary generator and the design process . Design Studies , 1 ( 1 ) : 36 – 44 Dorin , A . ( 2013 , July ) . Aesthetic selection and the stochastic basis of art , design and interactive evolutionary computation . In Proceedings of the 15th annual conference on Genetic and evolutionary computation ( pp . 311 - 318 ) . ACM . Dubberly , H . ( 2004 ) . How do you design . A Compendium of Models . Dubberly , H . , & Evenson , S . ( 2008 ) . On modeling The analysis - systhesis bridge model . interactions , 15 ( 2 ) , 57 - 61 . Eisenhardt , K . M . ( 1989 ) . Building theories from case study research . Academy of management review , 14 ( 4 ) , 532 - 550 . Eno , B . , & Schmidt , P . ( 1975 ) . Oblique strategies : Over one hundred worthwhile dilemmas . Finke , R . A . , Ward , T . B . , & Smith , S . M . ( 1992 ) . Creative cognition : Theory , research , and applications . Fulton Suri , J . ( 2008 ) . Informing our intuition : Design research for radical innovation . Rotman Magazine , 52 - 57 . Gaver , W . , & Dunne , A . ( 1999 , May ) . Projected realities : conceptual design for cultural effect . (cid:1) In Proceedings of the SIGCHI conference on Human Factors in Computing Systems ( pp . 600 - 607 ) . ACM . Gero , J . S . ( 1990 ) . Design prototypes : a knowledge representation schema for design . AI magazine , 11 ( 4 ) , 26 . Gero , J . S . , & Maher , M . L . ( Eds . ) . ( 1993 ) . Modeling creativity and knowledge - based creative design . Psychology Press . Gervás , P . ( 2012 ) . Story generator algorithms . The Living Handbook of Narratology . Hamburg : Universidade de Hamburgo . Disponível em : http : / / www . lhn . uni - hamburg . de / article / story - generator - algorithms Acesso em , 19 . “Helen Mort’s poetry challenge with Yossarian” , Yossarian Lives . June 1st , 2015 . http : / / blog . yossarianlives . com / post / 120437413305 / helen - morts - poetry - challenge - with - yossarian Hey , J . , Linsey , J . , Agogino , A . M . , & Wood , K . L . ( 2008 ) . Analogies and metaphors in creative design . International Journal of Engineering Education , 24 ( 2 ) , 283 . Kalogerakis , E . , Chaudhuri , S . , Koller , D . , & Koltun , V . ( 2012 ) . A probabilistic model for component - based shape synthesis . ACM Transactions on Graphics ( TOG ) , 31 ( 4 ) , 55 . Karpathy , A . ( n . d . ) “t - SNE visualization of CNN codes” Retrieved from http : / / cs . stanford . edu / people / karpathy / cnnembed / Korsten , B , . & Flores , E . ( 2016 ) " The Next Rembrandt . " J . Walter Thompson Amsterdam . Retrieved from www . nextrembrandt . com Lawson , B . ( 2006 ) . How designers think : The design process demystified . Routledge . Lewis , K . “The First Thinking Sculpture : Inspired by Gaudi , created with Watson” IBM Internet of Things . February 28th , 2017a . https : / / www . ibm . com / blogs / internet - of - things / first - thinking - sculpture / Lewis , K . “Using creativity to frame new technologies in a positive way” IBM Internet of Things . March 1st , 2017b . https : / / www . ibm . com / blogs / internet - of - things / creativity - watson / LeWitt , S . ( 1967 ) . Paragraphs on conceptual art . Artforum , 5 ( 10 ) , 79 - 83 . Loukissas , Y . A . ( 2012 ) . Co - designers : cultures of computer simulation in architecture . Routledge . Maaten , L . V . D . , & Hinton , G . ( 2008 ) . Visualizing data using t - SNE . Journal of Machine Learning Research , 9 ( Nov ) , 2579 - 2605 . McDonald , K . ( 2016 , October 7th ) “A Return to Machine Learning . ” Retrieved from https : / / medium . com / @ kcimc / a - return - to - machine - learning - 2de3728558eb McClamrock , R . ( 1991 ) . Marr ' s three levels : A re - evaluation . Minds and Machines , 1 ( 2 ) McCullough , M . ( 1998 ) . Abstracting craft : The practiced digital hand . MIT press . Mendel , J . ( 2012 ) . A taxonomy of models used in the design process . interactions , 19 ( 1 ) , 81 - 85 . Mikolov , T . , Sutskever , I . , Chen , K . , Corrado , G . S . , & Dean , J . ( 2013 ) . Distributed representations of words and phrases and their compositionality . In Advances in neural information processing systems ( pp . 3111 - 3119 ) . Michel , R . ( 2007 ) . Design research now . Essays and Selected Projects , London . Minissale , G . ( 2013 ) . The psychology of contemporary art . Cambridge University Press . Mitchell , W . J . ( 1993 ) . A computational view of design creativity . In Gero , J . S . , & Maher , M . L . ( Eds . ) . Modeling creativity and knowledge - based creative design , ( pp . 25 - 42 ) , Psychology Press . Mountfort , P . ( 2016 ) . The I Ching and Philip K . Dick ' s The Man in the High Castle . Science Fiction Studies , 43 ( 2 ) , 287 - 309 . Newitz , A . “Movie written by algorithm turns out to be hilarious and intense” Ars Technica . June 9th , 2016 . https : / / arstechnica . com / gaming / 2016 / 06 / an - ai - wrote - this - movie - and - its - strangely - moving / Olah , C . ( 2014 , October 9th ) “Visualizing MNIST : An Exploration of Dimensionality Reduction” Retrieved from http : / / colah . github . io / posts / 2014 - 10 - Visualizing - MNIST / Papanikolaou , D . , ( 2012 ) . Changing Forms , Changing Processes . In Kara , H . et al . ( Eds . ) , Interdisciplinary Design : New Lessons from Architecture and Engineering , ( pp . 106 - 114 ) , ACTAR Press Ryan , G . W . , & Bernard , H . R . ( 2003 ) . Techniques to identify themes . Field methods , 15 ( 1 ) , 85 - 109 . Saldana , J . ( 2009 ) . An introduction to codes and coding . The coding manual for qualitative researchers , 1 - 31 . Schneiderman , B . ( 2007 ) . Creativity support tools : Accelerating discovery and innovation . Communications of the ACM , 50 ( 12 ) , 20 - 32 . Schön , D . A . ( 1983 ) . The reflective practitioner : How professionals think in action ( Vol . 5126 ) . Basic books . Segrera , F . ( 2016 ) “The Trechery of [ Soft ] Images” Retrieved from http : / / fii . to / pages / the - treachery - of - soft - images . html Simon , H . A . ( 1969 ) . The sciences of the artiﬁcial . Cambridge , MA . Sjoberg , C . , Beorkrem , C . , Ellinger , J . ( 2017 , November ) . Emergent Syntax : Machine Learning for the Curation of Design Solution Space . In ACADIA 2017 : DISCIPLINES & DISRUPTION ( Proceedings of the 37th Annual Conference of the Association for Computer Aided Design in Architecture ) , pp . 552 - 561 Spier , R . F . ( 1970 ) . From the hand of man : primitive and preindustrial technologies . Houghton Mifflin Company , Boston Stacey , M . K . , Eckert , C . M . , & McFadzean , J . ( 1999 , August ) . Sketch interpretation in design communication . In Proceedings of the 12th International Conference on Engineering Design ( Vol . 2 , pp . 923 - 928 ) . Steinfeld , K . ( 2017 , November ) . Dreams May Come . In ACADIA 2017 : DISCIPLINES & DISRUPTION ( Proceedings of the 37th Annual Conference of the Association for Computer Aided Design in Architecture ) , pp . 590 - 599 Tejani , S . “Artistic Style Transfer with Deep Neural Networks” From Bits to Brains . December 27th , 2016 . https : / / shafeentejani . github . io / 2016 - 12 - 27 / style - transfer / Tornincasa , S . , & Di Monaco , F . ( 2010 , September ) . The future and the evolution of CAD . In Proceedings of the 14th international research / expert conference : trends in the development of machinery and associated technology ( pp . 11 - 18 ) . Tufte , E . R . , & Robins , D . ( 1997 ) . Visual explanations . Turner , C . “The deliberate accident in art” Tate . January 1st , 2011 . http : / / www . tate . org . uk / context - comment / articles / deliberate - accident - art Wiltz , C . “IBM Watson Helps Create Sculpture Inspired by Gaudi” Design News . March 1st , 2017 . https : / / www . designnews . com / design - hardware - software / ibm - watson - helps - create - sculpture - inspired - gaudi / 147823998856397 Wynn , D . , & Clarkson , J . ( 2005 ) . Models of designing . In Design process improvement ( pp . 34 - 59 ) . Springer London .