, m ~ " ~ 96 APRIL U s e r Customization of a W o r d P r o c e s s o r 13 - 18 , 1996 Stanley R . Page Novell Incorporated 1555 N Technology Way Orem , UT 84057 USA + 1 801 222 7016 stanp @ novell . com Todd J . Johnsgard Novell Incorporated 1555 N Technology Way Orem , UT 84057 + 1 801 222 5112 tjohnsgard @ novell . com ABSTRACT The purpose of the study was to identify the customization changes users typically make to their word processor . Ninety - two percent of the participants customized their software in some way . Participants who used the software most heavily also did the most customization ( p < . 05 ) . Most of the customization was done to facilitate the participants ' work practices . The most common changes involved providing easier access to custom or often - used functionality . Button Bars seemed to provide an easy and effective means for participants to customize access to the functionality they wanted . Few participants customized the visual appearance of the interface . Keywords Adaptability , adaptable , customization , customize , tailor INTRODUCTION It is common for commercial software to allow user customization . Users are allowed to add ruler bars , change menus , add custom macros and applications to menus and button bars , and rearrange elements on the screen . The theory is that customization makes users more productive because they can tailor the software to their work practice . However , do users really make use of customization options ? What kinds of customization do users want to do ? Do Users Customize ? R Jsson [ 8 ] did extensive research on users of a text - editor . She found that programmers made extensive use of customization features ( reassigning keys and writing macros ) but secretaries did not . She also found that the amount of experience with the editor and text - editors in general was a good predictor of the amount of customization done . Permission to make digital / hard copies of all or part of this material for personal or classroom use is granted without fee provided that the copies are not made or distributed for profit or commercial advantage , the copy - fight notice , the title of the publication and its date appear , and notice is given that copyright is by permission of the ACM , Inc . To copy otherwise , to republish , to post on servers or to redistribute to lists , requires specific permission and / or fee . CHI 96 Vancouver , BC Canada © 1996 ACM 0 - 89791 - 777 - 4 / 96 / 04 . . $ 3 . 50 Uhl Albert Intel Corporation 734 E Utah Valley Dr American Fork , UT 84003 + 1 801 763 2242 uhl _ albert @ ccm . ut . intel . com C . Dennis Allen Customer Satisfaction by Design 810 Skylake Dr Woodland Hills , UT 84653 + 1 801 423 1599 cdennisa @ aol . com Mackay [ 5 ] found that users did not take advantage of the customization features of software as often or successfully as they could , and she identified some of the triggers and barriers to customization . The three most commonly cited reasons for customizing software were that users : 1 ) noticed their own repeated patterns and wanted to customize to match those patterns , 2 ) wanted to fix or stop something that was annoying or slow , and 3 ) wanted to retrofit new versions of software to make them work as they did in the previous version . The most often mentioned barriers to customizing software were lack of time followed by how difficult the software was to customize . Oppermann and Simm [ 7 ] studied the use of customization features in word - processing , spreadsheet , database , and drawing applications . About one - half of the users stated that they had tried some of the customization options . They made changes to preference settings ( e . g . changed display measurements from inches to cm ) and created styles . A few users recorded macros and made modifications to the menus when these options were available . They indicated that customization options made their work easier and saved time . However , many users said that they simply made changes out of curiosity or for fun . Successful Customization Customization is a key element of many types of applications . Trigg , Moran and Halasz [ 9 ] described the importance of customization in the design of an information structuring application called NoteCards . HyperCard [ 10 ] was one of the first commercial products designed to make it easy for users to create customized applications . Jones [ 1 ] found that customization was one of four major recurring themes among users of different styles of e - mail systems . MacLean , Carter , L0vstrand , and Moran [ 6 ] were able to establish a successful " tailoring culture " within an organization . They first developed a software system that was easy to customize . Then , they " seeded " the novice users ' systems with sample custom tools built by expert peers . They also provided ways to share customization files through e - mail . Providing simple tools and a support system of experts 340 APRIL 13 - 18 , 1996 CH ~ 9 ~ for helping with customization made it possible for the novice users to become proficient at customizing their software . Others have found that customization can be successful when the proper formal and informal support is in place . Krogs ~ eter , Oppermann , and Thomas [ 3 ] designed a successful automated system that analyzed user actions in a spreadsheet application and suggested ways of customizing the interface to make their work easier . Mackay [ 4 ] found that users spontaneously shared customization files within their organization . Gantt and Nardi [ 2 ] found that informal experts naturally emerged who helped co - workers customize their systems . Participants Potential participants were drawn from the WordPerf ? ct 6 . 0a for Windows soRware registration database . They were called and told that we were doing a study of general use of word processors and asked whether they were willing to participate . They were not told that software customization was the focus of the study . A total of 101 participants from across the United States completed the study . Participants matched the distribution of users in our fourteen top market segments . For example , if the government industry accounted for 19 % of our sales we collected 19 % of our data from government sites . METHODS The purpose of the current study was to identify the customization features used in a commercial word - processing application ( WordPerfect 6 . 0a for Windows ) . This infbrmation will help software developers make informed decisions about how successful they have been in providing customization features , what aspects of the interface users want to customize , and how to provide an optimal set of functionalities by default . Although we did not control for user characteristics we noticed several interesting demographics about our sample population : • Computer experience of the participants ranged from " one year or less " to " ten years or more " with 57 . 4 % having ten or more years of computer experience • Experience with word processors went from " one year or less " to " ten years or more " with 40 . 6 % of the participants having ten or more years experience . _ File Edit V _ iew [ nsert Layout T _ ools Graphics Ta _ ble ' ~ L¢indow Help Button Bar Power Bar Ruler Bar I I Menu Bar Reveal Codes Status Bar Figure 1 . Application window with all interface tools showing . The Button Bar , Power Bar , and Status Bar were showing by default when users started the application . Reveal Codes and the Ruler Bar were hidden at startup . 341 C ~ ' iJ 96 APRIL 13 - 18 , 1996 Table 1 . Purposes for Interface tools included in the study and descriptions of their customization options . interface Tool Menu Bar Button Bar Purpose Provides access to most of the features and functions in WordPerfect . Offers quick access to common features . Customization Options Contents and order . Position , contents , order , labels ( text , icon , text and icon ) , font , font size , and whether or not displayed . Power Bar Offers a quick way of performing common tasks . Contents , order , and whether or not displayed . Ruler Bar Displays margins , tab settings , and other formatting Appearance and whether or not displayed . information . Reveal Codes Displays the codes that WordPerfect inserts for every Whether or not displayed . formatting feature used in a document . Status Bar Displays document information , such as the type of font . Contents , order , appearance , and font . • The age of the participants varied from " under 25 years of age " to " over 65 years of age " with 50 . 5 % falling between the ages of 40 and 54 . • The gender breakdown of the participants was 55 . 4 % female and 44 . 6 % male . The job categories listed by the participants covered a broad spectrum and included : Administrative Assistant ( 13 . 9 % ) , Secretary / Data Entry ( 18 . 8 % ) , Manager ( 11 . 9 % ) , Educator / Trainer ( 10 . 9 % ) , Programmer / MIS ( 9 . 9 % ) , Engineer ( 6 . 9 % ) , Consultant ( 5 % ) , and Sales / Marketing ( 4 % ) . Data Collected One type of data we collected was how participants customized the interface elements of the software . Figure 1 shows the interface tools within the application window . Table 1 defines each of the interface tools and describes their customization Options . We also collected data about the amount of work participants did in the software along with their use of styles and macros for 28 days . A style is a collection of font attributes and other text formatting properties ( such as justification ) that can be reused and applied to several areas of text . Macros can record and play back a series of actions to perform repetitive t , ~ , ks quickly . A questionnaire was used to collect data about user characteristics . The questionnaire contained 31 questions in the following categories : experience levels , organizational characteristics , WordPerfect usage , documentation and training , interface preferences , personal characteristics , comfort with computers , system characteristics , and work characteristics . Procedure Participants performed the study on their own IBM - compatible computers running WordPerfect 6 . 0a for Windows . Participants received a diskette in the mail and ran a macro on the disk which presented them with the questionnaire . After 28 days the software customization and usage files were copied from their hard disk . The disks were mailed back to us for analysis . There were three types of files on the disks : 1 ) questionnaire responses , 2 ) software and macro usage files , and 3 ) customization configuration files . We analyzed the responses from the questionnaire and were able to re - create each participant ' s WordPerfect configuration with the obtained customization files . Screen shots were generated based upon the configuration files and compared against the default configuration to assess the amount of customization performed . FINDINGS A surprising 92 % of the participants in this study did some form of customization of the software . The maximum number of changes made by a participant was 54 . The mean was 9 . 1 . Eighty - six percent made changes to their general preferences settings ( e . g . , number of minutes between automatic file backups ) . Sixty - three percent made use of custom functionality in macros . Seventy - seven percent customized the software interface ( primarily through the customizable Button Bar ) to add or change access to their functionality . Tests of effects were run to compare the level of customization to the user characteristics captured in the questionnaire . There was no significant correlation between the level of customization and user characteristics including 342 APRIL i3 - 18 , 1996 CH | 96 - " " ~ , _ ~ - ~ : ~ computer experience , job title , education , age , gender , or learning method . the display of their document than easy access to those functions . The only significant variable found was the relationship between the amount of customization and how much the software was used ( p < . 05 ) . The more the software was used , the higher the level of customization . We identified five categories of customization activities from the data collected : 1 ) customizing functionality , 2 ) ct , stomizing access to interface tools , 3 ) customizing access to functionality , 4 ) customizing visual appearance , and 5 ) setting general preferences . Findings in each of these categories are described below . Customizing the Functionality Because macros allow users to automate a series of steps they are a primary means for creating custom functionality . Sixty - three percent of the participants used macros . These macros included some that shipped with the application , macros that participants had created for themselves previously , or macros that others had created and shared with them . The use of macros suggests that participants want custom functionality that more directly supports their work . The application contained a " macro recorder " that allowed participants to capture or record a series of actions ( such as keystrokes and mouse clicks ) and play them back at will . Sixteen percent of the participants created their own macros using the macro recorder during the 28 days of the study . The mean number of macros created was nine . One participant recorded 25 macros . Styles was another feature that allowed users to create custom functionality . Styles in WordPerfect provide a way to format similar types of text , such as headings and lists . Thirty - three percent of the participants made use of the styles functionality . Table 2 . Percentages of users making customization changes to the display of interface tools . . . . . . . . . Display of Tools Showed Ruler Bar Percent 25 % Removed Button Bar 16 % Showed Reveal Codes 4 % Removed Power Bar 2 % Removed Status Bar ! : ~ l i , 0 % As shown in Table 3 , the button bar was positioned at the top of the application window by default and most users ( 78 % ) left it there . Over half of those who moved the bar moved it to the left side of the window . Only one person positioned the button bar as a floating palette ( separate window that overlaps the application window ) . Table 3 . Percentages of users positioning the Button Bar at various window locations . Position of Button Bar Percent ii Top of Window ( Default ) ii 78 % Left Side of Window 12 % Bottom of Window 5 % Right Side of Window 4 % Floating palette 1 % Customizing Access to Interface Tools Figure 1 shows the various interface tools that were available for display in the product . When participants started the application the Button Bar , Power Bar , and Status Bar were displayed by default . The Ruler Bar and Reveal Codes were hidden by default° Table 2 lists the permanent changes that participants made to the display of the interface tools . Twenty - five percent of the participants changed their preference settings to always display the Ruler Bar . The Ruler Bar provides an easy way to visually check and make changes to document margins and tab settings . Sixteen percent of the users removed the Button Bar . The Button Bar provided quick and easy access to functionality that was also available through the pull - down menus . Presumably these individuals preferred to have more room for Customizing Access to Functionality The Button Bar was the most customizable of the available interface tools . It allows users to add buttons for virtually any feature of the product . Users can also add buttons for running macros or launching other applications . Buttons can be removed , spaces can be added to form groups of buttons , and the order of buttons can be changed . Seventy - seven percent of the users did something to customize their Button Bar . The Button Bar is an ideal customization tool because it is easy to customize and makes the desired functionality visible and accessible , Table 4 shows the types of customizations made to the button bar . The high number of users who customized the Button Bar show that users want easy access to functions that are important to them . The fact that 44 % of the users removed buttons that were on the bar by default suggests that better defaults could have been chosen by the designers . 343 CN ] 9 ~ APRIL 13 - 18 , 1996 Table 4 . Button Bar . Button Bar Customization Added buttons for new features Removed buttons 44 % Re - arranged the buttons 39 % Percentage of users customizing options on the Percent 55 % Added buttons for macros or applicat ! on _ s 16 % The application allowed customization of the pull - down menus , but only 4 % of the participants made any changes to them . Two percent added specific macros to their pull - down menus . That few participants made changes to the menus suggests that they are more concerned about surfacing desired functionality than reorganizing it . Customizing Visual Appearance Changes made to the appearance of buttons on the Button Bar are shown in Table 5 . Most users ( 83 % ) did not change the a ~ ~ earance of the buttons from the default of text and icon . Some of those who changed the buttons to display text only did so in order to fit more buttons on the screen to provide quick access to more fimctions ( Figure 2 ) . It is interesting to note that many applications currently display an icon - only view of the buttons on their button bars , but only five percent of the participants in this study set their buttons that way . This data suggests that people prefer text only to icon only . General Preferences General preferences allowed participants to customize a number of elements of the software such as where documents are stored by default , the amount of time between automatic backup of files , and how graphics and other elements are displayed on the screen . Eighty - six percent of the participants made changes to their general preference settings . The most interesting changes were to the " Minutes Between Backups " and the " Zoom Percentage . " The program contains a feature that automatically saves backup copies of the file the participant is working on . The " Minutes Between Backups " setting controls how frequently these backups are made . The default setting on " Minutes Between Backups " was ten minutes . Thirty - seven percent of the participants changed this setting . Seventy - six percent of those making a change reduced the amount of time between backups ( mode = 5 minutes ) . It appears that because of the importance of documents , participants want the security of frequent backups in case something goes wrong . Table 5 . Percentages of users customizing the visual appearance of buttons on the Button Bar . Appearance of Buttons on Button Bar Percent Text and Icon ( Default ) 83 % Text Only 12 % Icon Only 5 % Made Text Larger on Buttons 6 % Made Text Smaller on Buttons 1 % The " Zoom Percentage " controls the size of the text on the screen without changing the size on the printed page . The default setting was " 100 % . " Fifteen percent of the participants changed the zoom setting . Most of these participants set the zoom slightly larger ( mean = 117 % ) . One of the zoom setting options was " Margin Width " which set the zoom display to the largest possible setting while still displaying all the text between the side margins . Since most of the changed zoom percentage settings were not rounded numbers ( i . e . 133 , 119 , 107 , etc . ) it is probable that they were set with the " Margin Width " option . It appears that these participants wanted the text to be as large as possible on the screen without having to scroll horizontally to see their text . CONCLUSIONS We have shown that 92 % of word processing users customize their software . We think this unexpectedly high number is due primarily to two things : 1 ) Work needs . Users who most heavily use their systems have the highest levels of customization . These users seem to customize to facilitate Figure 2 . Button Bar with text - only buttons to allow room for multiple - rows of buttons . 344 APRIL 13 - 18 , 1996 C ~ " ~ ~ their work . 2 ) Ease of customization . Customization features that were simple to adapt ( like the Button Bar ) tended to have higher incidences of tailoring . In this study we identified five types of software customization : customizing functionality , access to interface tools , access to functionality , visual appearance , and general preferences . Here is an overview of their usage : The greatest proportion of participants customized the general preferences of the software , with 86 % of the participants making some change . + The second greatest proportion of participants made changes by adding software functionality , with 63 % using macros and 16 % recording macros . ° The third greatest proportion of participants made changes by giving more direct access to needed functionality . Fifty - five percent of the participants accomplished this by putting new buttons on the Button Bar . Sixteen percent put macros on their Button Bar + + The fourth largest proportion of participants tailored their system by changing which interface tools were displayed , with 25 % of participants displaying the Ruler Bar . ° The category of customization with the smallest proportion of participants making changes is visual appearance , with fewer than 15 % of the participants making any type of change . Mackay 5 states that her " data support the idea that users ' satisfice ' rather than optimize . " They do the minimum necessary to get by . We found that participants who used the software heavily also did a lot of customization . So , rather than being " too busy " to bother customizing , our data suggest tr , at users with high levels of product use adapt the software to complete tasks more easily . That only 4 % of the participants in this study modified the menu bar , suggests that users are making required functionality more visible rather than reorganizing it . Optimize default settings for casual users . Since infrequent or casual users do less tailoring of their software default settings must be optimized for these users . Future Research • In this study we concentrated on learning what users customize in their word processor . We would like to follow up this study with research aimed at learning more about why users customize their software and what we can do to facilitate customization . The Button Bar proved to be an effective tool for customization . Additional studies should be done to compare alternative methods and tools for customization to identify those that are most effective . Finally , studying the patterns of users ' customization should help us move our adaptable systems to self adapting ones ; systems that will accurately anticipate the customers ' work and respond by providing the appropriate tools and services . To this end we need to continue to study when , why , and how users tailor software to accomplish their work . ACKNOWLEDGMENTS Nolan Larsen provided management support and encouragement on the project . Robert Bailey provided guidance on the survey and study design . Don Griffes did most of the programming of the tools to capture the data . Grant Johnson tested , refined , and integrated the data collection tools . Susan Zeller - Smith created the user documentation . Jennifer Pugmire helped with the survey and statistical analysis of the data . Chris Andrews and Karen Beus helped with the questionnaire and provided the market segmentation data used to select participants . Deirdre Calhoun edited the final version of the paper . Recommendations • Expect users to customize the software . Our pre - existing belief was that few users customize their software . The data from this study suggests that most users want to tailor the software to fit their needs . Make customization easy . To meet the needs of the many users who adapt their software , customization features need to be simple , easy , and fast to use . Make customization fit the work . Since tailoring is driven by need , customization features need to be designed to maintain users ' work flow and rhythm . This requires that the customization features become an integral part of the system and its user interface ; moving between task and customization activities needs to be as seamless as possible . REFERENCES 1 . Jones , S . , Bock , G . , and Brassard , A . Using electronic mail : Themes across three user interface paradigms . ACM SIGCHI Bulletin ( 1990 ) 21 , 45 - 48 . . Gantt , M . and Nardi , B . A . Gardeners and gurus : Patterns of cooperation among CAD users . In Proceedings of CHl ' 92 Conference on Human Factors in Computing Systems ( Monterey , California , May 3 - 7 , 1992 ) , ACM SIGCHI , pp . 107 - 117 . . Krogsaeter , M . , Oppermann , R . , and Thomas , C . G . A user interface integrating adaptability and adaptivity . In Oppermann , R . ( Editor ) , Adaptive User Support : Ergonomie Design of Manually and Automatically Adaptable Software , Hillsdale , N J : Lawrence Erlbaum ' Associates , 1994 , pp . 97 - 125 . 345 ' C ~ | 9 ~ APRIL 13 - 18 , 1996 4 . Mackay , W . E . Patterns of sharing customizable 7 . software . In Proceedings of the Conference on Computer - Supported Cooperative Work ( Los Angeles , California , October 7 - 10 , 1990 ) , ACM SIGCHI & SIGOIS , pp . 209 - 221 . Oppermann , R . and Simm , H . Adaptability : user - initiated individualization . In Oppermann , R . ( Editor ) , Adaptive User Support : Ergonomic Design of Manually and Automatically Adaptable Software , Hillsdale , N J : Lawrence Erlbaum Associates , 1994 , pp . 14 - 64 . 5 . Mackay , W . E . Triggers and barriers to customizing 8 . software . In Proceedings of CHI ' 91 Conference on Human Factors in Computing Systems ( New Orleans , Louisiana , April 27 - May 2 , 1991 ) , ACM SIGCHI , pp . 153 - 160 . 6 . MacLean , A . , Carter , K . , LOvstrand , L , and Moran , T . User - tailorability systems : Pressing the issues with buttons . In Proceedings of CHI ' 90 Conference on Human Factors in Computing Systems ( Seattle , Washington , April 1 - 5 , 1990 ) , ACM SIGCHI , pp . 175 - 182 . . 10 . Rosson , M . B . The effects of experience on learning , using , and evaluating a text - editor . Human Factors ( 1984 ) 26 , 463 - 475 . Trigg , R . H . , Moran , T . P . , and Halasz , F . G . Adaptability and tailorability in NoteCards . Proceedings of lFIP INTERACT ' 87 : Human - Computer Interaction ( 1987 ) , 723 - 728 . Williams , Gregg . HyperCard : HyperCard extends the Macintosh user interface and makes everybody a programmer . Byte ( December 1987 ) 12 , 109 - 117 . 346