Location Corroborations by Mobile Devices Without Traces Yaron Kanza AT & T Labs - Research Bedminster , NJ , USA kanza @ research . att . com ABSTRACT A location corroboration of a person is a proof , in the form of a digital record , indicating that this person was at a particu - lar place at a given time . That is , given a user u , a location l and a time t , a location corroboration is a certiﬁed evidence that u was at location l at time t . Such corroborations can be used in legal procedures , help solving personal disputes or enable services that rely on knowing with certainty the location of a user at a given time . A corroboration without traces means that the user location is not stored in any pub - lic server or in any other public entity , to protect the user privacy . In this paper we present the problem of produc - ing a location corroboration without traces , using a mobile device , and we discuss possible solutions to it . CCS Concepts • Security and privacy → Privacy - preserving protocols ; • Information systems → Location based services ; Keywords Location proof , digital corroboration , location privacy , mo - bile device , short - range communication 1 . INTRODUCTION Occasionally , people need to provide an account of their whereabouts , as an alibi in legal procedures , for business purposes , to solve domestic disputes , or for various other reasons . In some cases , the ability to provide an indisputable proof of their location at a given time or have an undeniable alibi , can profoundly change people’s life , e . g . , saving them from serving time in jail , losing their job or getting divorced . Given a pair of location l and time t , a location corrobo - ration is a reliable evidence , in the form of a digital record , asserting that user u was at l ( or near l ) at time t . Tra - ditionally , people relay on human witnesses to testify that they were seen at a particular location , at a given time . But relaying on human witnesses is often problematic . First , Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page . Copyrights for components of this work owned by others than the author ( s ) must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , topostonserversortoredistributetolists , requirespriorspeciﬁcpermission and / or a fee . Request permissions from permissions @ acm . org . SIGSPATIAL’16 , October 31 - November 03 , 2016 , Burlingame , CA , USA c (cid:13) 2016 Copyright held by the owner / author ( s ) . Publication rights licensed to ACM . ISBN 978 - 1 - 4503 - 4589 - 7 / 16 / 10 . . . $ 15 . 00 DOI : http : / / dx . doi . org / 10 . 1145 / 2996913 . 2997010 witnesses are not always available . Secondly , some people are considered unreliable , may not have a vivid memory of the person who needs the alibi or may be biased due to their prior relationships with the person who requests their tes - timony . Thirdly , people may not be willing to provide an alibi , unless forced to do so by a court order , especially in small personal disputes . Yet , even when there is a human testimony to the presence of someone at some location , an independent digital evidence could strengthen the claim . The following example illustrates a potential use of a lo - cation corroboration . Example 1 . Alice is receiving a notiﬁcation , by her smart - phone , about a large purchase with her credit card , and then she notices that the card has been lost or stolen . Immedi - ately , she creates a location corroboration as a testimonial evidence that at the time of the purchase she was elsewhere , i . e . , not at the location of the purchase . Then , she sends the corroboration to the credit - card company . The corrob - oration asserts that the purchase is fraudulent , so based on it the company can discard the purchase record , or credit Alice for the amount that was charged . In Example 1 , an ad hoc location corroboration is created and sent to a veriﬁer . However , there are cases where a corroboration is needed for a time in the past . To support such cases , corroborations should be created regularly , not for a particular purpose . Then , when needed , a suitable corroboration is used . Example 2 . Alice sees in her credit - card report that the card was used in Dallas two weeks ago , although she was in Seattle on that day . By providing a corroboration that she was in Seattle on the day of the purchase , Alice can easily prove that the purchase is fraudulent . In examples 1 and 2 and in similar cases , it is beneﬁcial for people to have access to a system that can issue trustwor - thy location corroborations . Since people nowadays almost always carry their smartphone with them , it is eﬀective to use smartphones to produce location corroborations . But for location corroborations to be useful , the following two properties should be guaranteed . • The location corroboration should be reliable , in the sense that the user should not be able to fake it . • To protect the user privacy , the location of the user should not be revealed to anyone , unless necessary as part of the proof procedure . In this paper we discuss these two requirements—reliability and privacy . We illustrate the diﬃculties that may rise and show how to to cope with them . 2 . PROBLEM DEFINITION Given a user u , a mobile device ( e . g . , smartphone ) d , a location l and a time t , a location corroboration using the mobile device requires the following . 1 . Associating the user u with the device d at time t . 2 . Associating the device d with the place l at time t . That is , when using a mobile device to produce a location corroboration , ﬁrst , the device needs to verify the identity of the user who carries it ( the user - device association ) . Then , the device should produce a trustworthy evidence of the lo - cation , i . e . , an evidence that cannot be forged , at least not in a reasonable time when using common technology ( the device - location association ) . The user - device association can be carried out using bio - metric methods , such as ﬁngerprint , voice or face recogni - tion , the way people type [ 4 , 11 ] or their gait [ 2 ] . This area has been studied extensively [ 17 ] , and we do not elaborate further , since this is not the focus of this study . The question we study is how to establish the device - location association . We refer to the time when the cor - roboration is created as the creation time , and to the time when it is being used for a proof as the veriﬁcation time . We partition the involved data into two types—private and public . Private data are created by the user device and are not sent to anyone , except , perhaps , at the veriﬁcation time . Public data are revealed to public entities such as servers or network access points , typically at the creation time . For a corroboration system to be descent , the following two conditions should be satisﬁed . Reliability : Given a user id u id of user u , a location l and a time t , if user u was not at l or near l at time t , it should be infeasible to create a corroboration that associates u id with the pair ( l , t ) of location l and time t . If a corroboration was created for u id , at location l and time t , a veriﬁer can check that indeed the corroboration refers to u id , l and t . Privacy : An adversary who sees public data of users should not be able to infer any association of a user to a location and time . The problem of location corroborations without traces is how to create reliable location corroborations without caus - ing a breach of privacy . 3 . LOCALIZED CORROBORATOR To achieve reliability , it is essential not to rely on GPS lo - cations , because users can fake GPS readings of their smart - phones ( there are several apps for that in App Store and in Google Play ) , and the global positioning system is vulner - able to spooﬁng [ 16 ] . Hence , a na¨ıve method that merely records the GPS locations of the smartphone is unreliable . Accordingly , our solution relies on using corroborators that ( 1 ) have a known stationary location , and ( 2 ) are only accessible using short - range communication . That is , a lo - calized corroborator is a server that has a known location , and that can only be accessed by the mobile device from a short range , e . g . , a cell tower , a wireless access point ( Wi - Fi , Bluetooth , ZigBee ) , an optical access point ( based on infrared light ) , etc . When the user device is connected to the localized corroborator , it means that the device is near the location of the corroborator—a few meters in the case of a Bluetooth , ZigBee or infrared sensor ; dozens of meters for Wi - Fi ; and a few kilometers for a cellular tower . The ques - tion is how to use such a corroborator correctly , to achieve reliability and without causing a privacy breach . To illus - trate the diﬃculty , we present two incorrect corroboration schemes , and explain why they are unreliable or cause a privacy breach . Unreliable Scheme . Consider a localized corroborator that sends to near users ( using short - range communication ) a cryptographically signed message containing the location and the time . Such signed message can be created using a public - key cryptosystem—only the owner of the private key can sign the message , while any veriﬁer can check using the public key that the message was created by the owner of the private key . This scheme , however , is unreliable because a user ˆ u who is near the corroborator can receive a signed message and forward it to a remote user u . It means that when u holds a signed message relating to location l and time t , there is no guarantee that u was near l at time t . Privacy Breach . Consider a corroboration scheme where the user id is sent to the localized corroborator , and the cor - roborator cryptographically signs it . In such a solution , if the corroborator signs an association of the user id and the location using its private key , only a holder of the private key can produce the corroboration . Such a corroboration scheme , however , reveals the identity and the location of the user to the corroborator . Hence , it causes a privacy breach . The user may send to the corroborator an encrypted id or a pseudonym . But if an adversary sees many corroborations that are associated with the same user , this may allow him to infer the identity of the user , by seeing location traces , i . e . , places the user visited , and in particular , frequently vis - ited places . This causes a privacy breach because location traces of users reveal a lot of information , and may expose the home location and the identity of a user [ 7 , 9 ] . So , to protect the user privacy , it is imperative that the user loca - tion could not be inferred from the information stored about her in public entities . This requires avoiding storing a user id in diﬀerent places the user has visited , or even storing in some place some pseudonym ( a fake identiﬁer ) with the locations the user has visited . Also sending the user identi - ﬁer or the pseudonym to a server , without storing it there , may cause a privacy breach , since this is vulnerable to a “man in the middle” attack , if the adversary can intercept the communication with the localized corroborator . Thus , we assume that the corroborator follows the corrob - orator scheme , however , it is untrusted , in the sense that the information it contains may be revealed to an adversary . 4 . CRYPTOGRAPHIC TOOLS We use in our scheme the following two cryptographic tools : one - way cryptographic hash function and public - key encryption scheme . A one - way cryptographic hash function h is a hash function that maps any arbitrary string ( a mes - sage of any length ) to a sequence of a ﬁxed number of bits ( message digest ) , such that when given h ( x ) for any arbi - trary message x , it is infeasible to invert the computation and reveal x . We also assume that given h ( x ) and x , it is infeasible to ﬁnd y (cid:54) = x such that h ( x ) = h ( y ) . The MD5 algorithm [ 13 ] was used as such a function in the past , and the SHA ( Secure Hash Algorithm ) family , including SHA - 2 and SHA - 3 , are commonly used nowadays . In a public - key cryptographic system , there are a pair of a public key , known to all , and a private key , known just to its holder . For encryption , a message is encrypted using the public key , so that only the holder of the private key could decrypt it . For authentication , only the key holder can encrypt a message , using the private key , and any user can decrypt it , and know that it has been signed by the holder of the private key . RSA [ 14 ] is a well - known widely - used public - key cryptosystem . We also use bitwise XOR in the scheme . The bitwise XOR s 1 ⊕ s 2 of two sequences of n bits , s 1 = b 11 · · · b 1 n and s 2 = b 21 · · · b 2 n , is the sequence b 11 ⊕ b 21 · · · b 1 n ⊕ b 2 n , where bit i in the result is the XOR of bit i of s 1 and bit i of s 2 . 5 . CORROBORATION SCHEME We present now a corroboration scheme that uses a local - ized corroborator to generate a location corroboration . We assume that the corroborator has a unique pair of a private key and a public key , as part of a public - key cryptosystem , and also the client application has such a pair of keys . Initially , the user is identiﬁed by the device , and a bio - metric id b id is issued . Then , the app on the device creates a user id u id = ( b id , t , Enc ( b id , t ) ) by signing with its private key the biometric id and the creation time . This is used to assert that the user was recognized by the device at time t . Such a user id prevents from other people to create the cor - roboration on behalf of the user , because the signed message combines the biometric id of the user and the creation time of the corroboration . The scheme has the following steps . 1 . The user is identiﬁed , a biometric id b id is issued , and a user id u id = ( b id , t , Enc ( b id , t ) ) is created , where t is the creation time , and Enc ( b id , t ) is encryption using the private key of the application . 2 . The user device creates a proof id . The proof id is a large random number with the same number of bits as the user id . It is used as a cryptographic nonce . 3 . The user sends to the localized corroborator a message digest of a bitwise XOR of the user id and the proof id , e . g . , using the SHA - 3 algorithm , or some other public cryptographic hash function . 4 . The corroborator concatenates its id , its location , the current time and the message digest it received from the user , signs that using its private key , and sends the signed message with its id to the user . Proof creation . The localized - corroborator scheme is presented in Fig . 1 . The user creates a random proof id p id whose number of bits is equal to the number of bits in u id , combines it with the user id u id using bitwise XOR , and applies a cryptographic hash function h such as SHA - 3 on the result , producing h ( u id ⊕ p id ) . It sends the hashed value to the corroborator . The corroborator creates a con - catenation of its id c id , its location l , the current time t and the received hash value . The result is encrypted us - ing the private key of the corroborator . Finally , c id and P = Enc ( c id (cid:107) l (cid:107) t (cid:107) h ( u id ⊕ p id ) ) are sent to the user . Figure 1 : Creating a location corroboration using a localized corroborator . Veriﬁcation . To prove it location to a veriﬁer , the user provides c id and the proof P to the veriﬁer . Using c id , the veriﬁer gets the public key of the corroborator and decrypts the proof , getting Dec ( P ) = ( c id , l , t , m digest ) . This provides the location l , the time t and the digest m digest . Now , to complete the proof , the user provides its user id u id and its proof id p id . The veriﬁer checks that indeed the provided user id is the identiﬁer of the user , i . e . , that it contains the biometric id of the user , and the creation time , signed correctly ; and it validates the claim by testing that when applying the function h on the XOR of u id and p id ( recall that h is public ) , holds h ( u id ⊕ p id ) = m digest . Privacy . To show that the method does not reveal the user location , we consider three cases . First , consider an adversary that sees the message digest m digest . Even when ﬁnding x such that h ( x ) = m digest , without knowing p id , not even a single bit of the user id is revealed . If the ad - versary tries a preimage attack , even when knowing p id and h , it is infeasible to ﬁnd a value x such that h ( u id ⊕ x ) = h ( u id ⊕ p id ) . Furthermore , even if such a value is discov - ered , there may still be a diﬀerent user id u (cid:48) id such that h ( u (cid:48) id ⊕ x ) = h ( u id ⊕ p id ) , because the hash function may map two diﬀerent messages to the same digest . The second case is of an attacker that sees the proof P . This is similar to the ﬁrst case , because , as claimed earlier , it is infeasible to associate the extracted message digest m digest with a speciﬁc user after the XOR of the user id with p id . The third case is when an attacker sees many location corroborations , from one or more corroborators . In each corroboration the value h ( u id ⊕ p id ) is unique , because it is generated by digesting a completely diﬀerent message . So , there is no way to associate proofs of the same user to one another . This prevents knowing who the user is based on places the user frequently visits or based on some other pat - terns in visited locations . Reliability . Next , we need to show that the proof is trustworthy , in the sense that the user cannot fake it . Since Enc ( c id (cid:107) l (cid:107) t (cid:107) h ( u id ⊕ p id ) ) is encrypted using the private key of the corroborator , the user cannot generate it with - out breaking the public - key cryptosystem . Even if a user u receives from some other user u (cid:48) the value p id and a corrob - oration Enc ( c id (cid:107) l (cid:107) t (cid:107) h ( u (cid:48) id ⊕ p id ) ) , it would still be im - practical to ﬁnd a value x such that h ( u id ⊕ x ) = h ( u (cid:48) id ⊕ p id ) . So , the user cannot use a proof that was created with the id of another user . Comments : ( 1 ) There are cases where devices transmit their identiﬁer unconcealed to some nearby server , e . g . , many devices expose their MAC address to Wi - Fi access points near them . This can be avoided or mitigated by using a dynamic MAC address [ 8 ] . ( 2 ) People may not always know beforehand that they need a corroboration , and may be aware of the need only hours or days after the event . To cope with that , the system may create the corroborations automatically , say every two hours . Since the location of the user is not stored in any pub - lic component of the system , creating more corroborations does not increase the ability to associate visited locations to one another or the risk of having a privacy breach . 6 . RELATED WORK The growing popularity and the rising economical impor - tance of location - based services has raised the need for loca - tion veriﬁcation , where a service can verify the truthfulness of provided locations . Several papers studied this problem and presented methods for users to prove that the location they report is genuine [ 1 , 3 , 10 , 12 ] . Saroiu and Wolman [ 15 ] introduced the concept of location proof and provided a method for users to gain a proof from a near cell tower or Wi - Fi access point ; however , their method reveals the user identity to the proof creator , causing a privacy breach . Leakage of personally identiﬁable information via online social networks has been noticed to be a severe problem , since personally - identiﬁable information can be linked with actions of the user withing the social networking applica - tion [ 5 , 6 ] . Thus , it is imperative to prevent a privacy breach when producing location corroborations . Unlike the location - proof schemes in the papers above our corroboration scheme ( 1 ) does not store location information in any public entity , and ( 2 ) the user controls the use of the corroboration , because the corroboration is meaningless without the proof id p id , which only the user holds . 7 . CONCLUSION Every so often , people are required to prove where they were at a particular time . In some cases they need a digital location corroboration due to the lack of a human witness that can support their claim regarding their location at a given time ; and in other cases they may need to strengthen a statement of a human witness , by providing an independent testimony of their whereabouts . The ability to easily and reliably provide a location cor - roboration may have implications not just on legal matters . For example , it may also allow businesses to advertize them - selves by oﬀering beneﬁts to people who would visit their site and provide a digital proof of that . In some types of sport such as ultra marathon and ultra - distance bike rid - ing , location corroborations will assist participants proving the validity of their records . Note that in such examples , users decide voluntarily which information to reveal . They do not need to allow some entity ( organization or company ) to track them and constantly record their location . In this paper , we presented the problem of issuing loca - tion corroboration without traces , using mobile devices . We explained how to create an indisputable evidence that a par - ticular user was at a speciﬁc place at a given time . We show that this can be done without storing the location of the user at any public entity , to protect user privacy . 8 . REFERENCES [ 1 ] J . T . Biehl , A . J . Lee , G . Filby , and M . Cooper . You’re where ? prove it ! : Towards trusted indoor location estimation of mobile devices . In Proc . of the 2015 ACM International Joint Conf . on Pervasive and Ubiquitous Computing , pages 909 – 919 , 2015 . [ 2 ] D . Gafurov , K . Helkala , and T . Søndrol . Biometric gait authentication using accelerometer sensor . Journal of computers , 1 ( 7 ) : 51 – 59 , 2006 . [ 3 ] W . He , X . Liu , and M . Ren . Location cheating : A security challenge to location - based social network services . In Proc . of the 2011 31st International Conf . on Distributed Computing Systems , pages 740 – 749 . IEEE Computer Society , 2011 . [ 4 ] R . Joyce and G . Gupta . Identity authentication based on keystroke latencies . Commun . ACM , 33 ( 2 ) : 168 – 176 , 1990 . [ 5 ] B . Krishnamurthy and C . E . Wills . Characterizing privacy in online social networks . In Proc . of the 1 st ACM Workshop on Online Social Networks , pages 37 – 42 , 2008 . [ 6 ] B . Krishnamurthy and C . E . Wills . On the leakage of personally identiﬁable information via online social networks . In Proc . of the 2 nd ACM Workshop on Online Social Networks , pages 7 – 12 . ACM , 2009 . [ 7 ] J . Krumm . Inference attacks on location tracks . In International Conf . on Pervasive Computing , pages 127 – 143 . Springer , 2007 . [ 8 ] M . Lei , X . Hong , and S . V . Vrbsky . Protecting location privacy with dynamic mac address exchanging in wireless networks . In IEEE GLOBECOM 2007 - IEEE Global Telecommunications Conference , pages 49 – 53 . IEEE , 2007 . [ 9 ] J . Mahmud , J . Nichols , and C . Drews . Home location identiﬁcation of twitter users . ACM Trans . Intell . Syst . Technol . , 5 ( 3 ) : 47 : 1 – 47 : 21 , 2014 . [ 10 ] M . Miettinen , N . Asokan , F . Koushanfar , T . D . Nguyen , J . Rios , A . - R . Sadeghi , M . Sobhani , and S . Yellapantula . I know where you are : Proofs of presence resilient to malicious provers . In Proc . of the 10th ACM Symposium on Information , Computer and Communications Security , pages 567 – 577 . ACM , 2015 . [ 11 ] F . Monrose and A . D . Rubin . Keystroke dynamics as a biometric for authentication . Future Generation computer systems , 16 ( 4 ) : 351 – 359 , 2000 . [ 12 ] I . Polakis , S . Volanis , E . Athanasopoulos , and E . P . Markatos . The man who was there : Validating check - ins in location - based services . In Proc . of the 29th Annual Computer Security Applications Conference , pages 19 – 28 . ACM , 2013 . [ 13 ] R . Rivest . The MD5 message - digest algorithm , 1992 . [ 14 ] R . L . Rivest , A . Shamir , and L . Adleman . A method for obtaining digital signatures and public - key cryptosystems . Commun . ACM , 21 ( 2 ) : 120 – 126 , 1978 . [ 15 ] S . Saroiu and A . Wolman . Enabling new mobile applications with location proofs . In Proc . of the 10th Workshop on Mobile Computing Systems and Applications , pages 3 : 1 – 3 : 6 . ACM , 2009 . [ 16 ] J . S . Warner and R . G . Johnston . A simple demonstration that the global positioning system ( GPS ) is vulnerable to spooﬁng . Journal of Security Administration , 25 ( 2 ) : 19 – 27 , 2002 . [ 17 ] J . Wayman , A . Jain , D . Maltoni , and D . Maio . An introduction to biometric authentication systems . Springer , 2005 .