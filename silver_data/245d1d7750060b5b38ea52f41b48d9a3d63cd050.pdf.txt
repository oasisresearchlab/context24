12 Empowering End Users to Customize their Smart Environments : Model , Composition Paradigms , and Domain - Speciﬁc Tools GIUSEPPE DESOLDA and CARMELO ARDITO , Universit ` a di Bari Aldo Moro MARISTELLA MATERA , Politecnico di Milano Research on the Internet of Things ( IoT ) has devoted many efforts to technological aspects . Little social and practical beneﬁts have emerged so far . IoT devices , so - called smart objects , are becoming even more pervasive and social , leading to the need to provide non - technical users with innovative interaction strategies for controlling their behavior . In other words , the opportunities offered by IoT can be ampliﬁed if new approaches are conceived to enable non - technical users to be directly involved in “composing” their smart objects by synchronizing their behavior . To fulﬁll this goal , this article introduces a model that includes new operators for deﬁning rules combining multiple events and conditions exposed by smart objects , and for deﬁning temporal and spatial constraints on rule activation . The article also presents the results of an elicitation study that was conducted to identify possible visual paradigms for expressing composition rules . Prototypes implementing the resulting visual paradigms were compared during a controlled experiment and the one that resulted most relevant for our goals was used in a study that involved home - automation experts . Finally , the article discusses some design implications that came out from the performed studies and presents the architecture of a platform supporting rule deﬁnition and execution . CCS Concepts : (cid:2) Information systems → Mashups ; (cid:2) Software and its engineering → Integrated and visual development environments ; Visual languages ; (cid:2) Human - centered computing → User studies Additional Key Words and Phrases : End - User Development ( EUD ) , Internet of Things ( IoT ) , End - User Empowerment , Task - Automation Platforms ACM Reference Format : Giuseppe Desolda , Carmelo Ardito , and Maristella Matera . 2017 . Empowering end users to customize their smart environments : Model , composition paradigms and domain - speciﬁc tools . ACM Trans . Comput . - Hum . Interact . 24 , 2 , Article 12 ( April 2017 ) , 52 pages . DOI : http : / / dx . doi . org / 10 . 1145 / 3057859 1 . INTRODUCTION Technological advances we are confronting today are inﬂuencing society . End users can now exploit powerful , pervasive devices that offer several features , especially con - nectivity and sensors , and host the execution of multiple applications that until a few years ago were totally out of the users’ reach . In addition , the Internet of Things ( IoT ) facilitates the creation of ecosystems of heterogeneous and distributed services that enable the access through the Internet to functionality and data provided by physical This research is partially funded by the Italian project SHELL ( Shared Interoperable Home Ecosystems for a Green , ComfortabLe , and Safe Living – CTN01 00128 111357 ) . Authors’ addresses : G . Desolda and C . Ardito , Dipartimento di Informatica , Universit ` a di Bari Aldo Moro , via Orabona , 4 , 70125 Bari ( Italy ) ; emails : { giuseppe . desolda , carmelo . ardito } @ uniba . it ; M . Matera , Politecnico di Milano , Dipartimento di Elettronica , Informazione e Bioigegneria , Piazza Leonardo da Vinci , 32 , 20133 Milano ( Italy ) ; email : maristella . matera @ polimi . it . Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies show this notice on the ﬁrst page or initial screen of a display along with the full citation . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , to republish , to post on servers , to redistribute to lists , or to use any component of this work in other works requires prior speciﬁc permission and / or a fee . Permissions may be requested from Publications Dept . , ACM , Inc . , 2 Penn Plaza , Suite 701 , New York , NY 10121 - 0701 USA , fax + 1 ( 212 ) 869 - 0481 , or permissions @ acm . org . c (cid:2) 2017 ACM 1073 - 0516 / 2017 / 04 - ART12 $ 15 . 00 DOI : http : / / dx . doi . org / 10 . 1145 / 3057859 ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 2 G . Desolda et al . devices equipped with electronics , sensors and actuators , and embedded software – the so - called smart objects [ Atzori et al . 2010 ] . Smart objects can foster important changes in our lives as they are increasingly pervading the environments we live in . If enabled to exploit the abundance of the re - lated resources ( the object functionality , the produced data , the related applications ) , end users could compose the different “behaviors” exposed by the surrounding envi - ronment to accommodate their everyday needs . However , while research on IoT has devoted many efforts to the technological aspects characterizing smart objects , little social , and practical beneﬁts have emerged so far . Programming the behavior of smart objects is currently an opportunity for professional developers only , as it requires the use of scripting languages that can also vary depending on the underlying hardware . Another aspect is that often the available objects expose a very speciﬁc functionality that does not result in useful services able to accommodate users’ needs . The openings offered by IoT can be ampliﬁed by means of new approaches that , based on high - level abstractions and adequate interaction paradigms , involve directly non - technical users in conﬁguring the behavior of their smart objects . End users pos - sess the domain knowledge required to build applications that can support their tasks . The new technology scenario increases the end users’ attitude towards the new de - vices and applications , and fuels their desire to participate in the creation of applica - tions to satisfy the “long tail” of speciﬁc – and sometimes unexpected – needs [ Daniel et al . 2011 ; Fischer 2009 ] . End users are therefore the most suitable stakeholders to specify how the available resources should be exploited to create new valuable ser - vices . To accommodate this vision , End - User Development ( EUD ) paradigms support - ing smart - object composition are needed . Indeed , as largely recognized in the literature [ Ardito et al . 2012a ; Costabile et al . 2007 ; Fischer et al . 2004 ; Fogli and Piccinno 2013 ; Lieberman et al . 2006a ] , EUD methodologies ﬁt very well the requirement of letting users customize their systems to support personal , situational needs . By smart - object composition , we mean synchronizing the behavior of multiple objects to create new , added - value services . We indeed believe that it is not relevant to pro - vide end users with very speciﬁc applications governing the behavior of single objects . Rather , end users should be empowered to take advantage of ecosystems of interopera - ble smart objects and services [ Barricelli and Valtolina 2015 ] , by letting them combine ﬂexibly , i . e . , according to their situational needs , the behavior of different smart objects . Some recently proposed tools support non - technical users to conﬁgure smart object behavior . Many of them , however , consist of pre - packaged solutions , e . g . , vendor - and device - speciﬁc apps for remotely controlling single smart objects that cannot be eas - ily adapted to the requirements deriving from speciﬁc domains and contexts of use . So - called Task - Automation ( TA ) tools [ Coronado and Iglesias 2016 ] , to combine social services , data sources , and sensors , are also gaining momentum . They have become popular as they offer very easy and intuitive paradigms to synchronize the behavior of objects and applications [ Lucci and Patern ` o 2015 ] . Through Web editors , users can syn - chronize the behavior of smart objects by either graphically sketching the interaction among the objects , for example , by means of graphs that represent how events and data parameters propagate among the different objects to achieve their synchronization , or by deﬁning event - condition - action ( ECA ) rules [ Pane et al . 2001 ] , a paradigm largely used for the speciﬁcation of active systems ( see , for example , Ceri et al . [ 2007 ] and Daniel et al . [ 2008 ] ) , which in the IoT domain can be fruitfully exploited to express how and when some object behaviors have to be activated in reaction to detected events . Despite the popularity of such tools , their graphical notations for rule speciﬁcation do not match the mental model of most users [ Wajid et al . 2011 ] . Research on Web mashup composition paradigms [ Daniel and Matera 2014 ] – a ﬁeld that has many aspects in common with smart object composition – showed that graph - based notations ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 3 are suitable for programmers ; instead , fundamental issues concerning the conceptual understanding of such notations arise with laypeople , as they do not think about “connecting” services [ Namoun et al . 2010b ; Zang and Rosson 2008 ] . Another limiting factor is that the expressive power of the ECA rules that can be speciﬁed through current tools is limited to very simple synchronized behaviors . For example , in Barricelli and Valtolina [ 2015 ] , authors discuss the importance of temporal and spatial conditions to create ECA rules that better satisfy users’ needs . Specifying temporal conditions also emerged as an important requirement in home automation , to schedule rules for appliance activation [ Rode et al . 2004 ] . Some of the available TA tools allow the deﬁnition of such spatial and temporal conditions , but only by means of workarounds , for example , by considering additional events to monitor the system time , or by creating ﬁlters on smart device data ( e . g . , in Zapier ) . Obviously , such workarounds complicate the rule creation , thus resulting into a scarce adoption of the available tools , especially by non - technical users , or in their adoption only for very simple tasks . We believe there are numerous opportunities for research and development in the area of EUD for smart object composition . Many research challenges are related to tech - nical aspects , concerning , for example , the interoperability of different smart objects and devices , the heterogeneity of data formats , the necessity to connect in real - time to network interfaces , and the scalability of the proposed systems . Our research recognizes the importance of these technical aspects , but purposely focuses on a different facet , which is more related to the possibility for the end users , especially non - programmers , to make sense of the advances of IoT technology . The ultimate goal of our research is indeed to provide end users with interactive tools that could allow them to cus - tomize smart spaces without being forced to get acquainted with technology issues . We indeed believe that a user - centered design of IoT platforms , as the one described in this article , is fundamental to identify abstractions and metaphors that can help even non - technical users to take advantage of the available IoT capabilities . This article concentrates speciﬁcally on this aspect . 1 . 1 . Contributions In our previous work , we deﬁned paradigms and related platforms for the EUD of Web mashups . In particular , we investigated how data provided by Web APIs could be integrated into uniﬁed visualizations [ Desolda 2015 ; Desolda et al . 2016 ] , and how such visualizations could be synchronized at the presentation level by means of an event - driven technique [ Cappiello et al . 2015 ; Cappiello et al . 2011 ] . Through visual editors , end users were enabled to build interactive Web applications synchronizing the behavior of different visual components . Inspired by our previous work , in this article , we concentrate on a special class of tools , the TA tools [ Coronado and Iglesias 2016 ] , which revisits the mashup paradigm to synchronize different smart objects and any resources that can generate events or can be activated by the occurrence of events . TA tools exploit an event - driven , publish - subscribe composition of the involved resources , a technique that already proved successful for the composition of Web APIs within Web mashups [ Cappiello et al . 2015 ; Daniel et al . 2007 ] . As a new contribution , in this article we show how , thanks to adequate notations and usable user interfaces ( UIs ) designed by involving a sample of users , the event - driven synchronization of services and smart objects can be mastered by non - technical users . The contribution of this article is therefore articulated along the following issues : — Speciﬁcation of Task - Automation ( TA ) rules . We analyzed the most common TA tools . We identiﬁed the pros and cons of their composition paradigms ; thus , we conceived some new operators for rule speciﬁcation that can extend the expressive power of ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 4 G . Desolda et al . currently supported ECA rules . In this article , we present a model that speciﬁes how these new operators can be exploited in the creation of ECA rules . — EUD paradigms for task automation . With the help of end users involved in an elicitation study , we identiﬁed how ECA rules , extended with the new operators , can be speciﬁed through visual notations that were considered adequate by the end users themselves . Three different visual paradigms emerged , that we then compared in a controlled experiment conducted to investigate their usability . We further validated the best - evaluated paradigm with the help of a group of home - automation experts . We report on the results of the studies and discuss some design implications . — Reference architecture . In order to foster the replicability of our approach , we present the architecture of the platform that we exploited to build the prototypes imple - menting the visual paradigms analyzed in our studies . Illustrating the platform architecture also allows us to show how we solved the problem of supporting domain - speciﬁcity , i . e . , the capability of the platform to adapt to requirements characterizing speciﬁc domains [ Casati 2011 ] . Given the intrinsic ﬂexibility of the tool , which is favored by the decoupling of the UI from the other layers , different user skills and competences can be easily accommodated by “plugging - in” different UIs with dif - ferent composition metaphors . We exploited such ﬂexibility to generate the three prototypes assessed in the comparative and validation studies , each one offering a different composition metaphor . — Lightweight integration of resources . The main challenge of the proposed composition paradigm is not the deﬁnition of a new service synchronization technique ; rather , based on existing technologies , our approach especially aims to promote abstractions that ( 1 ) capture and simplify the most salient technology aspects of smart objects , making them suitable for end users ; and ( 2 ) can be handled by lightweight Web architectures , making them easily accessible in any environment where they are needed and through different devices . This lightweight paradigm could have a lim - ited coverage with respect to the immense capability offered by IoT technology . We , however , do not consider it as a weakness with respect to the goals of our research , as we purposely tried to ﬁlter out , through a user - centered design , those aspects that can really help end users make sense of IoT technology . 1 . 2 . Article Organization The article is organized as follows . Section 2 introduces some background concepts by referring to related work and clariﬁes the rationale of our research . Section 3 illustrates the main elements of the model we propose for the speciﬁcation of ECA rules . Section 4 and Section 5 , respectively , describe the elicitation study , conducted to identify visual paradigms for ECA rule speciﬁcation , and the three prototypes that we implemented on the basis of the identiﬁed visual paradigms . Section 6 reports the comparative study conducted to assess both user performance and satisfaction for the three prototypes ; threats of validity for the comparative study are discussed , also highlighting under which conditions study results can be exploited in other contexts . Section 7 describes a further validation study in which experts in IoT and home automation were asked to use the prototype that in the comparative study resulted as the most promising . Section 8 discusses the design implications resulting from the overall study . Section 9 illustrates a reference architecture that we adopted for the development of a platform prototype . Finally , Section 10 draws our conclusions and outlines our future work . 2 . RATIONALE AND BACKGROUND The IoT idea emerged in 2009 when Kevin Ashton and his team at MIT’s Auto - ID Center coined this term to describe a system where the Internet is connected to the physical ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 5 world via ubiquitous sensors . 1 In the following years , thanks to a wide spreading of low - cost integrated technologies with sensors and actuators , it became possible to easily build the so - called smart objects , i . e . , the building blocks of the IoT . A smart object is a device equipped with embedded software that is typically con - nected to the Internet [ Atzori et al . 2010 ] . It exploits sensors to “feel” the environment and / or actuators to communicate with the environment . Examples of sensors are those measuring light intensity , the physical pressure of an object , and also air humidity . Ac - tuators can be light and sound emitters , electric valves , motor servos , relays , and the like . According to the classiﬁcation proposed in Barricelli and Valtolina [ 2015 ] , smart objects can be classiﬁed as settled , if they are installed in a ﬁxed position ( e . g . , an IP Camera in a room ) or mobile if their position can change as in the case of wearable devices ( e . g . , smart bracelets that measure steps and heart rate ) ; as asynchronous or synchronous depending on the modality for sending and receiving data ; for either in - dividual or collective use , if they communicate data only to the owner , for example , the alcohol gas sensors that alert home owners in case of danger , or if they provide data to groups of users , for example , the air pollution stations that provide air quality data to the citizens of a given geographical area . Many domains are taking advantage of IoT technology , for example , healthcare , smart homes , industry , smart cities , agriculture , vehicles , smart buildings , retail , fac - tories , oil & gas . Each one exploits different types of smart objects [ Atzori et al . 2010 ] . About 18 . 2 billion smart objects were produced by the end of 2015 . Cisco’s forecasting estimates that more than 50 billion smart objects will be deployed by 2020 . 2 Given the rapid spread of such technology , a number of research lines are emerging to address this problem space , which differ for the strategies used to take into account end users and technologies according to the sphere of activity and users’ skills . Among the most prominent , workﬂow design tools and business rules engines address the problem of ECA rule design and management from a technical perspective . Such platforms have traditionally supported the deﬁnition of ECA rules for the design of active systems [ Casati et al . 2001 ; Jennifer and Stefano 1996 ] . They are now receiving interest also in relation to the design of IoT systems . Platforms like JBoss Drools [ Red Hat 2016 ] , OpenRules [ OpenRules 2016 ] , and IBM WebSphereJRules [ IBM 2016 ] support the management of rules . In these platforms , programming the behavior of IoT systems consists in specifying the ﬂow of data produced by different devices , and how events captured from this ﬂow have to trigger actions that progressively change the state of the whole system . In some cases , 3 such platforms offer mechanisms to ease rule programming , such as diagrammatic notations , decision tables , or helper codes to avoid syntactic errors . Still , these paradigms are effective for expert information system designers and programmers , while they require technical competences that are not generally mastered by non - programmers . For example , graph - based notations ask the designers to deal with concepts like data ﬂow , parameter passing , or even to identify the sequence of actions . Certainly , such engines can cover complex , critical requirements . However , we believe that an innovative aspect in IoT would be to empower non - expert users to make sense of IoT . With this respect , an intuitive rule speciﬁcation paradigm needs to be identiﬁed . Also , the multiple , complex features supported by business rule engines need to be ﬁltered out , as very often they go well beyond the actual needs of “casual” programmers and non - technical users . We do not want to argue that complexity , and all the related technical requirements , have to be discarded . We instead 1 http : / / www . rﬁdjournal . com / articles / view ? 4986 . 2 http : / / newsroom . cisco . com / feature - content ? type = webcontent & articleId = 1208342 . 3 See , for example , tools like Talend Open Studio ( https : / / www . talend . com / products / talend - open - studio ) , and Waylay . io ( http : / / http : / / www . waylay . io / ) . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 6 G . Desolda et al . aim to promote the right level of simplicity and expressiveness , which can allow the non - technical end users to operate on the IoT . More on the side of this class of end users , the composition paradigms adopted in many mashup tools break new ground by offering easy - to - use control metaphors and lightweight platforms , mainly deployed on the Web , for the composition of heteroge - neous resources ( e . g . , Web APIs , data sources , interactive widgets ) and the execution of the resulting applications [ Daniel and Matera 2014 ] . Recently , also the mashup paradigm has been revisited to move the focus from pure service composition to TA : Resource composition addresses not only Web APIs but also services controlling smart objects , which can be synchronized to deﬁne active behaviors in smart spaces . Some of such tools adopt wired notations , thus keeping a composition paradigm similar to the tools dedicated to workﬂow designers . Other tools then follow the trend of simplifying as much as possible the deﬁnition of automation tasks , in some cases proposing collec - tions of ready - to - use “recipes . ” These tools are gaining momentum , as their simplicity and immediateness look appealing for the masses [ Coronado and Iglesias 2016 ] . Our research addresses this speciﬁc segment of systems , which includes popular tools , such as IFTTT , Zapier , and Atooma , which currently best encounters the skills of inexperienced users [ Lucci and Patern ` o 2015 ] . In the sequel of this section , after a brief explanation of the motivations to adopt a mashup approach for the EUD of IoT systems , we will review and classify works that fall within the category of mashup tools for TA – TA tools for short . 2 . 1 . EUD for IoT by Means of the Mashup Paradigm The rapid spread of smart objects and their strong heterogeneity are presenting im - portant challenges , which are not exclusively related to the technology involved , but rather to methodologies and systems that let the end users make sense of this promis - ing technology [ Tetteroo et al . 2013 ] . IoT is intrinsically about people [ Burnett and Kulesza 2015 ] , as its ultimate goal is to improve people experiences in their living and working environments . IoT can achieve deeper , more meaningful , and faster insights if the user is placed at the center of systems that include ambient and personal sen - sors , pervasive devices , and communicative tools [ Tetteroo et al . 2015 ] . One relevant challenge , scarcely approached so far in the literature , is therefore related to the deﬁ - nition of adequate paradigms to compose different resources , i . e . , paradigms based on adequate interfaces that allow end users to customize technology to their needs . EUD ﬁts very well the problem of customizing systems to support the user’s personal , context - speciﬁc , and situational needs [ Lieberman et al . 2006b ] . EUD goes beyond conventional methodologies for the design of interactive systems since its goal is to provide end users with tools to compose the applications they use or to create brand new ones . Some works in the literature propose composition techniques based on EUD practices , which allow non - technical users to compose smart objects [ Bellucci et al . 2014a ; Bellucci et al . 2014b ] . Thanks to IoT technology , smart objects can indeed be accessed as services , as they are often provided with a URI that identiﬁes them on the Internet and are published by exploiting traditional service technologies ( e . g . , RESTful ) that enable capturing events and running actions remotely . The problems of composing smart objects can be therefore considered as a special case of Web service mashup . In the case of service mashups , the platforms implementing an event - driven , publish - subscribe approach , such as the one described in Cappiello et al . [ 2011 ] , synchronize Web APIs , so that the events produced by / on a service ( e . g . , selection of a displayed data item ) trigger operations of other services ( e . g . , a search based on the selected word ) . This paradigm suits very well the need of synchronizing the behavior of smart objects [ Ghiani et al . 2015 ] . However , very often tools exploiting it are oriented to developers , ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 7 while there is a lack of approaches exploiting notations and metaphors adequate for non - technical users . The approach proposed in this article takes advantage of our previous experience in the design of mashup platforms [ Ardito et al . 2014a ; Ardito et al . 2014c ; Desolda et al . 2016 ] . The composition paradigm previously deﬁned , which supported the synchroniza - tion of service functionality and the integration of data , has been purposely extended to cover also the synchronization of smart object behaviors . As smart objects are ac - cessible and programmable through Web services , the new extensions mainly privilege event - driven synchronization by means of ECA rules , a composition technique that we previously experimented for the composition of Web APIs through client - side , light - weight mashup approaches [ Ardito et al . 2012b ; Cappiello et al . 2015 ; Cappiello et al . 2011 ] . The new extensions are also in line with recently proposed TA tools ( see next sec - tion ) . However , as illustrated next in this article , these extensions propose a richer set of operators for the deﬁnition of ECA rules , and especially introduce a visual paradigm that tries to accommodate the user mental model , as it was elicited with the help of a sample of end users . 2 . 2 . Task - Automation Tools Event - driven architectures have been studied since many years to address the design of active systems in different ﬁelds , from active databases , to workﬂow design , and context - aware applications [ Eisenhauer et al . 2009 ] . They can be applied anytime the involved components of a system have to be orchestrated depending on the production , detection , and consumption of some events . In this architectural pattern , the design and management of ECA rules have a fundamental role . These rules allow the speciﬁcation of active behavior by means of events indicating a signal triggering the invocation of the rule , a condition that can determine the activation of an action , and the action that consists in an operation acting on data or functions also exposed . Recently , different Web tools have revisited the ECA rule paradigm to address the problem of TA . In particular , they support the deﬁnition of ECA rules to synchronize the behavior of smart objects and services [ Coronado and Iglesias 2016 ; Fogli et al . 2016a ] . Table I summarizes the main characteristics of the most popular tools for ECA rule speciﬁcation . Many of these tools are designed for non - technical people and offer wizard procedures that guide users during the composition process . One of the most popular is IFTTT ( If This Then That ) , a free Web platform that , by means of a wizard - based composition paradigm , allows end users to create simple chains of conditional statements called “recipes” [ IFTTT 2016 ] . Each recipe consists of ( 1 ) a service that IFTTT tracks to detect if a speciﬁc event is triggered ( e . g . , the position of an Android Device is within a speciﬁc area ) and ( 2 ) another service that reacts to the triggered event by executing a speciﬁc action ( e . g . , switch on the smart Coffee Maker ) . Other tools also exploit wizard procedures . elastic . io provides a catalogue of Web services primarily oriented to business aspects ( e . g . , Magento , SAP ) and allows the registration of custom services , for example , to access and control smart objects ; wizard procedures assist the users in the deﬁnition of dataﬂow chains among both pre - deﬁned and custom services [ GMBH 2016 ] . Zapier enables the composition of both Web services and smart objects . It proposes a wizard to specify one event and one action in a “basic rule , ” which can be later extended with further events and actions [ Inc . 2016b ] . The addition of ﬁlters on the triggering event to further control rule activation is also possible . For example , if in a rule the event is the creation of a new tweet , a ﬁlter on the tweet text can limit the activation of the rule to the occurrence of the only tweets that contain speciﬁc words . itDuzzit is a Web tool with a composition paradigm very similar to Zapier , but its rules can contain only one trigger and one action [ LLC 2016 ] . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 8 G . Desolda et al . Table I . Task - Automation Tools and Their Characteristics . The Uppercase “S” in the Rule Type Column Indicates That the Tool Supports the Speciﬁcation of Multiple Triggers or Actions in the Rule Name Service type Compositionparadigm License Executiondevice Targetusers Rule type Atooma Device functions Web services Smart objects Wizard FreePaying Mobile Non - technical IF TriggerS DO ActionS AutomateIt Devices functions Item selection FreePaying Mobile Non - technical IF TriggerS THEN ActionS Bip . io Web services Custom Wired FreePaying PC Non - technical Complex process Context - Dependent Authoring Web services Smart objects Item selection Researchproject PC Non - technical IF TriggerS THEN ActionS Elastic . io Web services Custom Wizard Paying PC Non - technical Dataﬂow chain service - > service IFTTT Web services Smart objects Wizard Free PC Mobile Non - technical IF Trigger THEN Action itDuzzit Web services Wizard FreePaying PC Non - technical IF Trigger THEN Action Node - RED Web services Smart objects Custom Wiredprogramming Free PC Technical Complex process Spacebrew Web services Smart objects Custom Wiredprogramming Free PC Non - technical Publishers - > Subscribers Tasker Devices functions Wizard FreePaying Mobile Technical IF TriggerS THEN ActionS We Wired Web Web services Smart objects Item selection FreePaying PC Non - technical When TriggerS THEN ActionS WigWag Smart objects Wizard Paying PC Mobile Non - technical When TriggerS THEN ActionS Zapier Web service Custom Wizard FreePaying PC Non - technical IF Trigger THEN ActionS Zipato Smart objects Buildingblocks Paying PC Mobile Technical Complex process The wizard approach is also exploited by WigWag , a commercial Web tool speciﬁcally designed for automation of smart environments [ Inc . 2016a ] . WigWag is also available as mobile app . Other types of composition paradigms have been proposed . For example , in We Wired Web rule , creation occurs in a Web page , vertically divided into two panels dedicated to the speciﬁcation of the elements composing a rule : Triggering events can be deﬁned in the left - hand panel and actions in the right - hand panel [ Apiant 2016 ] . As in Zapier , ﬁlters can be used in the speciﬁcation of triggering events . A different approach is provided by Bip . io , which exploits the graph metaphor for wiring Web services represented as nodes [ wot . io 2016 ] . When nodes representing Web services are connected by means of arrows , assisting procedures guide users in deﬁning trigger and action properties . A graph - based representation is also adopted in Node - RED , a Web tool for composing both smart objects and Web services [ JS _ Foundation 2016 ] . Unlike Bip . io , Node - RED is meant for professional users since it also supports advanced rule customization by means of nodes representing control statements , func - tions written in JavaScript , and debug procedures . Spacebrew offers a mix of the paradigms implemented in We Wired Web and Node - RED [ Group 2016 ] . It supports rule creation in a workspace vertically divided in two parts , the left - hand panel for the conﬁguration of the services publishing the events and the right - hand panel for the conﬁguration of services providing actions in response to events . Such services can be connected in a wired fashion . A paradigm more suitable for non - technical users is the one implemented in Zipato , a web tool that provides ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 9 typical programming language constructs ( e . g . , when - then , while , if , logical operators ) in form of graphical widgets that can be combined to create TA rules [ Zipato 2016 ] . Some TA services can also be run on mobile devices , as in the case of Atooma , an Android app for the composition of device functions , Web services , and smart objects connected to a mobile device [ Atooma 2016 ] . The rule composition follows an If - Do paradigm . Multiple triggers and actions can be included in each rule . Moreover , ﬁlters can be deﬁned as in Zapier . Other similar Android apps are AutomateIt and Tasker , which support the creation of rules limited to the composition of apps and functions available on mobile devices [ EU 2016 ; Ltd 2016 ] . In line with our goals , the ECCE toolkit [ Bellucci et al . 2014b ] aims to support the deﬁnition of “ecologies” of smart objects . This work especially focuses on the way smart objects can connect to a server , so that an ecology of such objects can be set - up and managed . An XML - based language is used for describing the properties of single smart objects . Based on this language , the corresponding code to handle the smart objects behavior is generated on the platform server . Then , the behavior of single “connected” devices can be synchronized by means of a Web interface addressing the end user expertise . The synchronization consists in coupling some events generated by one object to the operations exposed by other objects . The speciﬁcation of further conditions to constrain the rule activation is not supported . Manipulation of physical objects was also investigated as a programming paradigm to deﬁne smart object behaviors . For example , AutoHAN implements a new paradigm for interaction with abstract functions of home appliances through special cubes that act as “one - button remote controls . ” Each cube is devoted to a function , for example , Play / Pause , and the users can associate such functions by holding one face of a cube against the front of an appliance ( e . g . , the Play / Pause cube can be associated with a VCR or a DVD player ) . The expressive power of the language is realized through the composition of these functions . It is achieved by placing two or more cubes next to each other , and instructing AutoHAN to store the conﬁguration of Cubes . Such conﬁguration can then be used to schedule home - automation processes . Another system , SiteView , exploits the manipulation of physical objects for creating ECA rules [ Beckmann and Dey 2003 ] . Conditions are expressed by locating physical objects corresponding to rule conditions in a “condition composer area” ; actions are programmed by placing physical objects , representing , for example , appliances , in a “world - in - miniature area , ” which is a small - scale picture of the active environment . In addition , the users can see a rule representation in a “rule display” and can simulate the rule results in an “environment display . ” A diverse use of user - deﬁned event - action rules is illustrated in Ghiani et al . [ 2015 ] . An authoring tool supports the development of context - aware cross - device UIs through the creation of rules in which different types of events can activate actions indicating how the UI should adapt to the detected context . The tools described above cover several relevant aspects of TA . However , in relation to the composition paradigm , which represents the main aspect addressed by this work , their potential beneﬁts are still limited [ Barricelli and Valtolina 2015 ] . On the one hand , tools like IFTTT , elastic . io , Zapier , and itDuzzit address the skills of non - technical users , but they only assist users in the creation of “basic” rules , i . e . , rules that synchronize one event with an action and do not include any additional conditions for rule activation . This is also true for some research works illustrated in literature . For example , the approaches reported in Kubitza and Schmidt [ 2015 ] and Zancanaro et al . [ 2015 ] allow the reuse of pre - deﬁned “recipes” or “schemas of digital experiences . ” New rules can be deﬁned by only modifying and adapting pre - deﬁned rules . Thus , end users are not allowed to deﬁne their own rules , which can be needed if the pre - deﬁned ones do not accommodate their situational , even unexpected needs . On the other hand , tools ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 10 G . Desolda et al . like Node - RED allow one to create more complex rules , but they also require advanced skills . Finding a tradeoff to mediate these two extremes is the challenge that we address in this article by focusing on the following aspects : —Rule speciﬁcation must include logical operators to combine triggering events and actions exposed by multiple services and objects . This would accommodate the need for programming the composition of multiple resources . Some platforms ( for exam - ple , Atooma ) already support the OR combination of multiple events . In line with these approaches , we also think that , in order to express composite behaviors , end users must be enabled to deﬁne combinations of multiple events and actions . Logical operators can allow them to express such combinations . —The speciﬁcation of temporal and spatial constraints must be possible . As discussed in Barricelli and Valtolina [ 2015 ] , existing tools ( e . g . , itDuzzit ) do support the speci - ﬁcation of such constraints , but only as ﬁlters on the data generated by the services that trigger events . This could not be simple for non - technical users , who are forced to understand what output is generated by the services . In addition , if the services involved in the rule do not return timestamp data , temporal constraints cannot be expressed . These are the reasons why we aim to propose mechanisms for temporal and spatial constraints to be deﬁned on parameters characterizing the context in which the rule is executed ( spatial constraint ) and regardless of the service times - tamp ( temporal constraint ) . —If on the one hand the use of logical operators and the speciﬁcation of temporal and spatial conditions would introduce some cognitive overhead , on the other hand usable composition paradigms , increasing the users’ awareness of what the surrounding environment offers and how composite behaviors of the available objects and services can be achieved , could alleviate the resulting complexity . The following sections will illustrate how , by means of user studies , we identiﬁed some design implications leading to the deﬁnition of usable composition paradigms . 3 . MODEL FOR RULE CREATION TA platforms allow one to synchronize the behavior of Web services and smart objects by specifying chains of conditional statements for triggering actions that change the status of coupled resources . Such chains are usually called “rules” as they are actually based on ECA rules , but different names are also used , e . g . , “recipes” in IFTTT , “Zaps” in Zapier , “Duzzit” in itDuzzit . Although speciﬁed according to a different syntax , the rules adhere to the common schema : cause ( s ) ⇒ effect ( s ) where the causes are the events triggered by some services and the effects are the actions performed by the same or by other services . In relation to the speciﬁcation of rules , our research aims to identify the right tradeoff between simplicity and expressiveness , which can allow the end users to operate on the IoT . By analyzing the available TA platforms , we observed that they effectively cover several aspects of IoT . However , their composition paradigms are very complex and with an abundant expressiveness that goes well beyond the needs of end users , or very simple but not expressive enough . Most of such platforms do not permit ( for example , in IFTTT ) or make it difﬁcult ( for example , in Node - RED ) to specify multiple events and actions . Similar difﬁculties arise when specifying temporal or spatial constraints , e . g . , to deﬁne the following behavior : “If I’m in Rome and I post an image on Instagram between 8 . 00 and 11 . 00 a . m . , post the same picture also on Twitter and Tumblr . ” The need to deﬁne temporal and spatial conditions in ECA rules was recently discussed in ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 11 Fig . 1 . Example of causes and effects in a rule . Barricelli and Valtolina [ 2015 ] , and also emerged as requirements in home - automation systems to schedule rule for appliance activation [ Rode et al . 2004 ] . In order to identify composition paradigms able to guide users in the deﬁnition of articulated rules , we wanted to elicit the end - user mental model , which is an aspect scarcely explored in the ﬁeld of TA [ Ur et al . 2014 ] . As the seed of our investigation , we were inspired by the 5W model , which is adopted in several domains , such as journalism and customer analysis , and more in general in problem solving , to analyze the complete story about a fact . It suggests describing a fact by answering the following questions : — Who did it ? — What happened ? — When did it take place ? — Where did it take place ? — Why did it happen ? These questions can help formulate rules with rich conditions ; especially they can guide the users to express temporal and spatial elements . We therefore adopted the 5W model in an elicitation study aimed at identifying , with the help of users , a notation for the speciﬁcation of TA rules that would feature the tradeoff between simplicity and expressiveness that we mentioned above . In particular , the model , which we called Rule _ 5W , would guide users in identifying the elements that are essential for creating rich rules for smart object composition . In the Rule _ 5W model ( see Figure 1 ) , “Who” is replaced by “Which” for specifying the services involved in a rule . “What” indicates the triggered events , as well as the actions to be activated . “When” and “Where” refer to the speciﬁcation of , respectively , temporal and spatial conditions for triggering events and performing actions . Finally , “Why” is used for reporting a short description to explain the rule behavior to a human reader , e . g . , other users with whom the rule is possibly shared . 4 . ELICITATION STUDY Driven by the main goal of our research , i . e . , providing end users , even without technical skills in computer programming , with interactive tools to customize smart spaces , we carried out an elicitation study to identify adequate visual composition mechanisms . In this study , starting from the identiﬁed Rule _ 5W model , we asked participants to propose , in terms of Which , What , When , Where , and Why , how they would specify in a rule event - action relationships between different services . This study , and the consequent identiﬁcation of composition mechanisms , can be considered the ﬁrst step to design an EUD platform for IoT . Indeed , we wanted to assess in which measure ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 12 G . Desolda et al . and under which assumptions the IoT technology could be mastered by non - technical users . We wanted , in particular , to understand whether and how the deﬁnition of synchronization rules involving the invocation of web services , the use of logic operator , and the speciﬁcation of temporal and spatial constraints , could be mastered by users who do not have any knowledge about all these technical concepts . The leading question of the study , therefore , was “How to specify events and actions in a rule by answering to the Which , What , When , Where , and Why questions ? ” Different techniques can be used to elicit system solutions but few were those inves - tigated to understand programming in domestic environments . An example was the “Fuzzy Felt Ethnography” technique proposed in Rode et al . [ 2004 ] aiming to elicit the programming patterns of domestic appliance . In particular , a felt board , divided into four sections with a set of felt icons representing appliances , is used as data gathering tool . Such board support designers to understand programming of domestic appliances , distinguishing between program actions at future times and macro creation to facili - tate repeated tasks . Since the goal of this phase in our research was to elicit techniques to create ECA rules for smart environments , which is more general than the domestic environments , we exploited a different technique . In particular , the study followed a rig - orous procedure , based on carefully selected materials , questionnaires , and tasks to be performed . In order to collect as much as possible signiﬁcant ideas properly discussed among participants , we required them to work in groups , according to the partners technique presented in Morris et al . [ 2014 ] . This consists in performing several focus groups involving participants , i . e . , partners , enabling them to fruitfully build upon one another’s ideas , carefully analyzing the proposed ideas , to stimulate more reﬂection and discussion and elicit diverse opinions about possible designs . Therefore , our focus groups went beyond pure elicitation , already including some co - creation activities , sim - ilar to what was done in Marquardt et al . [ 2012 ] and Voida et al . [ 2005 ] . However , even if our participants ( i . e . , Computer Science students ) had some experience in system design , we could not expect that they would came out with a complete and successful design proposal . Thus , we adopted a scenario - based design . Scenarios help designers to maintain an orientation towards perspective users and their actual needs [ Rosson and Carroll 2003 ] . As described later in this paper , the results of the study showed that this organization enabled participants to provide novel and elaborated ideas about the UI and interaction mechanisms . In order to avoid participants being forced to “tell what they don’t have to tell , ” we did not require groups to produce a minimum number of proposals for accomplishing the assigned tasks or to reach a goal . Finally , participants were encouraged to demonstrate their ideas by sketching paper prototypes . At the end of the focus groups , participants ﬁlled in online questionnaires . The study protocol was preliminarily assessed by involving two groups of four participants each . It is worth noting that we purposely did not contextualize the identiﬁcation of the visual notation in a speciﬁc domain . First of all , we wanted to identify “generic” inter - active mechanisms that would be adequate for non - programmers and especially ensure a reasonable level of expressiveness . Our approach to the deﬁnition of EUD paradigms and tools indeed promotes the deﬁnition of generic platforms that , however , can be easily adapted to be domain - speciﬁc . As we will discuss in Section 9 , it is possible to deﬁne a platform organization so that visual notations and interactive paradigms can be easily adapted to the requirements characterizing speciﬁc end - users’ communities , identiﬁed through dedicated ethnographic studies to be conducted after the deployment of the generic platform . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 13 4 . 1 . Participants The elicitation study involved a total of 25 participants ( 6 female ) , randomly divided into 6 groups ( from 3 to 5 participants ) , aged between 20 and 43 years ( ¯ x = 23 . 7 , SD = 5 . 06 ) . The participants were recruited from the third - year students of the Bachelor degree in Computer Science . They had no experience with tools for deﬁning TA rules or for managing IoT elements . All of them had a PC and a mobile device ; only six participants ( ¯ x = 23 . 7 , SD = 5 . 06 ) had one or more smart objects . 4 . 2 . Procedure The study was performed by two HCI researchers on two consecutive days in a uni - versity laboratory . It consisted of six sessions , one for each group . Three sessions took place the ﬁrst day . In every session , the group sat around a table . One of the two HCI researchers gave a 10 - minute presentation to introduce participants to the addressed domain , by illustrating daily - life and working situations in which a tool for deﬁning the behavior of Web services and objects could be useful . To avoid any bias in the participants’ proposals , possible solutions or tools were not shown . The group was provided with blank paper sheets and markers for sketching their proposals . Each participant was also provided with a paper sheet reporting the two tasks to be performed . The two following tasks asked participants to propose a UI and interaction mechanisms as a response to the leading question of the study : ( 1 ) How to deﬁne a task - automation rule by using the system that you want to pro - pose ? For example , how to program the system so that each post published on my Facebook wall is also posted on Twitter ? Or so that every time the alarm clock is switched - off the roll - up shutters are opened ? ( 2 ) How to include further conditions on rule activation ? For example , how to program the system so that each post published on my Facebook or Instagram wall is also posted on Twitter ? Or so that every time the alarm clock is switched - off the shutters are opened and the coffee machine is switched on ? After reading aloud and commenting the ﬁrst task , the researcher asked participants to reason about and discuss how they would perform the activities reported in the exam - ple . He also highlighted that the elements involved in the rules ( services , things , condi - tions ) can be described by specifying four aspects , i . e . , Which , What , Where , and When , while the purpose of the rule can be described by answering to the Why statement . The researcher stimulated participants to elaborate new interaction ideas , which were also expressed by sketching new paper prototypes . He also encouraged the discussion of positive and negative aspects of the suggested solutions . The same procedure was repeated for the second task , during which participants revised the sketches produced for the ﬁrst task , in order to address the new requirements . The second researcher took notes . Each session was also audio - video taped . At the end of the session , participants ﬁlled in a questionnaire composed of 18 questions . Thirteen questions aimed to collect participants’ demographic data , and determine their expertise with programming , mobile devices , smart objects , and Web services . Two questions investigated participants’ understanding of and comfort with study procedure and proposed tasks . One question addressed the perceived useful - ness of TA tools . The last two questions addressed the pros and cons of the ideas the participants suggested during the study . 4 . 3 . Data Collection The data analyzed in the study were collected by reviewing the following : ( 1 ) the set of notes taken by the researchers in the study sessions ; ( 2 ) the video recorded during the ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 14 G . Desolda et al . sessions ; ( 3 ) the sketches drawn during the sessions ; ( 4 ) the answers participants gave to the online questionnaire . The two researchers transcribed their notes and the audios , and independently double - checked 65 % of the material . The initial reliability value was 81 % ; thus , the researchers discussed the differences and reached a full agreement . The transcripts were analyzed through a thematic analysis following a semantic approach . Themes were identiﬁed within the explicit or surface meaning of the data [ Braun and Clarke 2006b ] . The two open questions of the online questionnaire , related to the advantages and disadvantages of participants’ proposals , were analyzed through the afﬁnity dia - gram technique proposed in Rogers et al . [ 2015 ] . 4 . 4 . Results from the Proposed User Interface Sketches The six groups elaborated a total of nine UI sketches , complemented with comments explaining how to interact with them . A design team , composed of the two HCI re - searchers who participated in the study and an interaction designer , analyzed the sketches . In order to understand important details on how the sketches were created , video recordings were analyzed . Some sketches had several features in common , thus the design team managed their integration in a unique design proposal also taking into account interaction principles and usability criteria . Eventually , the three differ - ent proposals described below emerged and gave rise to the three prototypes described in Section 5 . The ﬁrst design proposal came from the contributions by groups G1 , G3 , G4 , and G6 . G1 envisioned the workspace for deﬁning and representing the rule vertically divided in two sides : events on the left , actions on the right . Services representing events and actions are displayed in a menu available at the most left side of the screen and are dragged in the appropriate workspace side . Every time a service is dropped in the workspace , a wizard procedure is presented in a pop - up window to guide users in deﬁning service details by answering the What , When , and Where questions . At the end of the wizard , the new event or action is displayed as a box , labeled with an identifying name and icon , and placed at the bottom of other events / actions previously created , if any . A similar proposal also originated from G3 ; the main difference is that when a service is added in the workspace , it is immediately represented as a large box divided in three areas for specifying the type of event / action , and the temporal and the spatial constraints ( see Figure 2 ) . After the parameterization , the box can be minimized . The second design proposal was conceived according to the input of G4 . They con - ceived the rule creation into two main steps : The ﬁrst one is the creation of a basic rule with only an event and an action ; the second step consists in adding further events and actions . The rule is visualized in a workspace where the events are placed on the left side and the actions on the right side . Two buttons , “Add an event” and “Add an action , ” allow users to add further events and actions , as also suggested by G6 participants . The third design proposal is completely different from the previous ones . It is based on a graph metaphor and it was proposed by G3 and G5 . Nodes represent services and arrows between nodes indicate event / action relationships . In particular , given two nodes connected by an arrow , the staring node is the rule event , whereas the ﬁnal node is the action . G3 and G5 proposed two different solutions to specify event and action details ; G5 suggested a button in each node ( see Figure 3 ) , whereas G3 a wizard procedure automatically activated when the arrow ( i . e . , the relationship ) between nodes is drawn . 4 . 5 . Results From the Online Questionnaire Data The analysis of the online questionnaires referring to demographic data , experience in using IT technology , and in programming provided the participants’ characterization ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 15 Fig . 2 . A design proposal sketched by G3 . Fig . 3 . A design proposal sketched by G5 . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 16 G . Desolda et al . already reported in Section 4 . 1 . The usefulness of composing services and smart objects was rated 6 . 09 out of 7 . Regarding the advantages expressed in the open questions , par - ticipants reported that ( i ) TA performed through their solutions save time and reduce errors ; ( ii ) their solutions can be exploited by non - technical users ; ( iii ) it is useful to add constraints based on time and spatial conditions ; ( iv ) it is interesting to create rules for performing powerful TA . Concerning the disadvantages , participants commented on the limited possibilities of conﬁguring useful smart environments because of the currently poor spreading of smart objects and on the lack of device interoperability due to protocol heterogeneity . 5 . IMPLEMENTED PROTOTYPES Based on the three main designs emerged during the elicitation study , we developed three interactive prototypes : EFESTO - Free , EFESTO - Wizard , and EFESTO - Wired , abbreviated to E - Free , E - Wizard , and E - Wired , respectively . EFESTO is the name of the mashup platform proposed by the authors in their previous works ( e . g . , Ardito et al . [ 2014b ] , Ardito et al . [ 2014c ] , and Desolda et al . [ 2016 ] ) . EFESTO was used as the basis for the implementation of the three prototypes as the EUD paradigms for smart object composition can exploit the EFESTO layers for service invocation . The three prototypes share some design choices : —In the UI , the terms events and actions are used instead of causes and effects , respec - tively , because they are the most adopted terms in IoT and TA domains . —In principle , rule events can be chained by means of AND and OR logical operators ; however , in order to avoid complex logical expressions , all the events in a rule are in either AND or OR , depending on the operator used for connecting the ﬁrst two events . —Actions can be chained only by the AND logical operator , otherwise it would not be possible for the system to disambiguate which action has to be performed . In other words , if the event conditions are fulﬁlled , all the speciﬁed actions are executed . —Both events and actions are speciﬁed by answering the Rule _ 5W questions , Which , What , When , Where , and Why . In particular , the answer to the Why question is meant to provide a title brieﬂy describing the rule ( e . g . , “Synchronize my social posts” in Figure 1 ) , which can be useful when rules are shared with other users . —Spatial constraints can be deﬁned only if the smart device provides its GPS position ; temporal constraints can be always deﬁned because the prototypes compare the user - deﬁned temporal conditions with the user account timestamp instead of the device timestamp , which could not be always provided by the device . The prototypes were developed as Web applications using the Java Spring frame - work . 4 Their UIs were programmed by using Thymeleaf , 5 a Java HTML5 template engine , and the Bootstrap 6 front - end framework . The use of Bootstrap allowed us to build responsive UIs , which adapt their layout to the device on which they are run ( e . g . , PCs , smartphone , tablet ) . To create nodes and edges in the E - Wired prototype , a speciﬁc JavaScript plugin was used . All the prototypes have been deployed on a virtual machine created in the Windows Azure cloud platform ( 4 core , 8GB RAM , Windows Server 2012 ) . We devoted particular attention to the smart objects and services made available in our prototypes . We indeed wanted to propose realistic scenarios for rule creation , 4 https : / / spring . io / . 5 http : / / www . thymeleaf . org / . 6 http : / / getbootstrap . com / . 7 https : / / github . com / Rodsevich / JointTooledViewPlugin . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 17 Fig . 4 . E - Free : the interface for rule creation . comparable to the ones supported by the existing and most popular tools . A set of services available in IFTTT was therefore selected by analyzing the 20 most popular IFTTT recipes . The services and smart objects used in these rules were then registered in our prototypes , together with their events and actions . The three prototypes are described in the rest of this section . 5 . 1 . E - Free The ﬁrst prototype is called E - Free because of the few limitations the users encounter in the rule deﬁnition process . As an example of interaction with E - Free , in the following a user , who we suppose is female , creates a rule to automatically turn on the coffee machine and roll - up the shutters when her smart bracelet detects that she has just woken up or the smart alarm clock rings . In order to create this rule , the user clicks the “New Rule” button in the navigation bar ( Figure 4 , circle 1 ) and the “Creating Rule” interface appears . The UI shows the main area in which a rule is deﬁned . The left side is for specifying the triggering events , and the right side is to deﬁne the actions to be activated by the selected services . A wizard procedure , activated by the green “ + ” button highlighted by circle 2 in Figure 4 , guides the users in deﬁning the events . The wizard sequentially shows some pop - up windows in which the service , the events , and the conditions are speciﬁed . The ﬁrst wizard step is to deﬁne an event in terms of Which is the service to be monitored for detecting the triggering event ( Figure 5 ( a ) ) . The second step asks for What service event has to be monitored ( Figure 5 ( b ) ) . The last step allows the deﬁnition of When and Where the event has to be triggered ( Figure 5 ( c ) ) . The speciﬁcation of When and Where conditions is optional . At the end of the wizard procedure , the event is deﬁned and its summary appears under the “Events” area ( Figure 5 ( d ) , circle 1 ) . In the example of Figure 5 ( d ) , the user has speciﬁed that the triggering event is the “Just Awake” condition of her “Bracelet” object . Actions can be deﬁned by clicking on the green “ + ” button highlighted by circle 3 in Figure 5 ( d ) . The button activates a wizard procedure that guides the user in the deﬁnition of an action in terms of Which service will execute the action as a consequence of the event ( s ) , What action the service has to perform , and When and Where the action can be performed . In E - Free , users may either deﬁne ﬁrst all the events and then the actions , or deﬁne ﬁrst a basic rule including one event and one action and then include new events and new actions . Events and actions can be added or removed at any time . Further events can be added by clicking one of the two green “ + ” buttons labeled And / Or ( Figure 5 ( d ) , circle 2 ) . Choosing the “And” button starts the deﬁnition of a new event that will cause the execution of the rule action ( s ) if all conditions of all events are satisﬁed . The “Or” ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 18 G . Desolda et al . Fig . 5 . E - Free wizard procedure for specifying events : ( a ) the wizard ﬁrst asks to select the service that will activate the event ; ( b ) as second step , the event is selected among those offered by the chosen service ; ( c ) temporal and spatial constraints are deﬁned ; ( d ) the event has been deﬁned and the user can deﬁne further events or actions . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 19 Fig . 6 . E - Free : example of rule including two events and two actions . button determines the deﬁnition of a new event that will cause the execution of the rule action ( s ) , if the conditions of at least one event are satisﬁed . Once the rule is created , it can be saved by entering a short description ( the Why in the Rule _ 5W model ) . Figure 6 shows the example rule created by the user : As soon as the smart Bracelet detects that the user has woken up OR when the Alarm Clock rings , the Coffee _ Machine is turned on and the Roll - up Shutter is opened . 5 . 2 . E - Wizard With respect to E - Free , E - Wizard implements the same UI but it also offers a wizard procedure that guides users in event and action speciﬁcation . As ﬁrst step , once the “New Rule” button is clicked , users are compelled to follow a wizard procedure to create a “basic rule” composed of one event and one action . Then , they can add further events and actions . This should facilitate the rule creation , because users can incrementally extend and adapt the rule to their needs . Even if the two paradigms appear very similar , in E - Free the user can freely compose the rule by adding events and actions at any moment and in no particular order . In E - Wizard , rule creation is more under the control of the system . This paradigm is also similar to the one proposed by IFTTT . However , in IFTTT the combination of multiple events and actions , as wells as temporal and spatial conditions are not allowed . We found it worth investigating the differences in the two paradigms ( free vs . incremental ) , thus we implemented both E - Free and E - Wizard . In E - Wizard , the ﬁrst step is clicking the “Create Rule” button in the navigation bar . A wizard procedure starts by informing users what to do to create the basic rule . Then , it continues as in E - Free to guide the deﬁnition of an event in terms of Which , What , When , and Where . Having deﬁned the Event , the wizard procedure , without returning to the main screen , continues with the deﬁnition of the Action . At the end , the interface in Figure 7 ( identical to the E - Free interface ) shows the rule that has just been created . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 20 G . Desolda et al . Fig . 7 . E - Wizard : example of “basic rule” including one event and one action . Fig . 8 . E - Wired : example of rule including one event and one action . From now on , the user might continue by adding further events or actions as she would do with E - Free . 5 . 3 . E - Wired The E - Wired interaction paradigm is based on the graph metaphor : Nodes represent services involved in a rule , whereas directed edges , i . e . , arrows , represent cause – effect relationships between services . As reported in Figure 8 , the E - Wired UI has two main areas . The sidebar on the left provides the list of all the available services : Web services are light - yellow , whereas smart objects are light - green . In the workspace area , the user builds the rule . She ﬁrst selects one of the services in the left sidebar , which is added ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 21 Fig . 9 . E - Wired : deﬁnition of ( a ) event parameters and ( b ) action parameters . to the workspace and represented as a box augmented with two small circles , light - blue and purple , which represent the connection points for the arrows representing cause – effect relationships . In the example illustrated in Figure 8 , a Bracelet and a Coffee _ machine have been added into the workspace to provide the answer to the Which . The two objects have been connected by drawing an arrow from the purple circle of the Bracelet , whose events have to be monitored , to the light - blue circle of the Coffee _ machine that will execute the actions . As soon as the arrow is drawn , two pop - up windows in sequence allow the user to specify the parameters of the Event ( Figure 9 ( a ) ) and of the Action ( Figure 9 ( b ) ) in terms of What , When , and Where . The “Create Rule” button of the second pop - up window permits to save the rule , also specifying Why , i . e . , a title shortly describing the rule . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 22 G . Desolda et al . 6 . COMPARING THE PROTOTYPES We carried out an experimental study , in order to understand if and how different composition paradigms might affect the deﬁnition of TA rules that include elements of the Rule _ 5W model . We compared our prototypes with IFTTT , which was chosen as baseline for three main reasons . First , it is widely acknowledged that IFTTT is one of the most representative tools for the class of TA systems [ Coronado and Iglesias 2016 ] . IFTTT is also considered one of the most popular tools for non - programmers , and indeed it was used as baseline in other comparative studies focusing on EUD paradigms for task automation ( see , for example , Cabitza et al . [ 2016 ] and Lucci and Patern ` o [ 2015 ] ) . Second , even though more powerful TA tools offer visual composition mechanisms , sometimes they also require programming skills to accomplish speciﬁc tasks . For example , Node - RED offers a wired visual paradigm ; however , temporal and spatial constraints within rules have to be deﬁned by writing JavaScript code . Since our target users are non - programmers , we exploited our E - Wired prototype as it can be considered a representative of the class of wire - based TA tools ( a class that we wanted to include in the comparison ) and at the same time does not require writing code for rule speciﬁcation . Third , we had to ﬁnd a reasonable balance among number of tools , tasks , and session duration . Therefore , we could not consider as baseline more than one tool . Further analyses were carried out by comparing only the three EFESTO systems . The reason for this second comparison is that we wanted to assess performances and satisfaction of users with the deﬁnition of more expressive rules , which is al - lowed by our prototype but not by IFTTT or by other TA tools without requiring some coding . 6 . 1 . Participants and Study Design Since the target users of the experimented applications are mainly non - technical users , i . e . , persons without technical skills in computer programming or Computer Science , we recruited both technical and non - technical users . In particular , 40 participants ( 27 males , 13 females ) were recruited among the students of the second and third year of Computer Science ( n = 27 ) , Business ( n = 10 ) , and Physiotherapy ( n = 3 ) Bachelor degree courses of the University of Bari . The mean age was 23 . 38 years ( SD = 2 . 75 , min = 18 , max = 30 ) . We considered the 27 Computer Science students as technical users because they had experience with computer programming . The other 13 students were considered non - technical because they did have neither a Computer Science background nor any experience with computer programming . This mixed sam - pling has been necessary also because we wanted to verify which of the experimented tools provide a composition paradigm ﬁtting the mental model of both technical and non - technical users . The recruitment started 2 weeks before the study execution and it was performed via email . Participants were rewarded with an 8GB USB memory stick . Two research questions guided the study : —RQ1 ) What is the difference between the considered systems in terms of user perfor - mance in creating rules ? —RQ2 ) What is the difference between the considered systems in terms of user satisfaction ? To answer these research questions , we performed a controlled experiment adopting a within - subject design , with system as an independent variable and four within - subject factors : E - Free , E - Wizard , E - Wired , and IFTTT . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 23 Table II . Rule Schemas Used to Design the Tasks Rule schema Rule structure Constraints RS1 event ⇒ action RS2 event1 OR event2 ⇒ action RS3 event ⇒ action Temporal and spatial constraints RS4 event1 OR event2 ⇒ action AND action2 Temporal and spatial constraints Table III . The Eight Experimental Tasks Used in the Comparative Study . Tasks Labeled with ∗ Cannot be Performed with IFTTT Rule schema Task ID Task statement RS1 T1 If I post a picture on Instagram , then post the same picture on Twitter . T2 If my Android device battery drops below 15 % , then send a notiﬁcation on my Android Wear . RS2 T3 If I post a picture on Instagram OR Flickr , then post the same picture on Twitter . T4 If my Android Device battery drops below 15 % OR my Android device connects to any Wi - Fi network , then send a notiﬁcation to my Android Wear . RS3 T5 ∗ If I post a text on Twitter geo - localized in Milan between 8 and 12 a . m . , then create a Google Drive document having as its name the tweet id and as its content the tweet text . T6 ∗ If my Android Wear changes position to the address of my home between 7 and 11 p . m . , then switch - on the home air conditioners setting 25 ◦ C as temperature . RS4 T7 ∗ If I post on Instagram or Flickr a picture geo - localized in Rome between 8 and 12 a . m . , then post the same picture on Twitter AND Tumblr with the same geo - localization data . T8 ∗ If between 7 and 8 a . m . my Android Wear changes to the address of my home OR my smart alarm clock rings , then switch - on the coffee machine and open the roll - up shutter of my bedroom . 6 . 2 . Tasks The tasks executed during the comparative study required participants to create rules for the composition of Web services and smart objects . As reported in Table II , four rule schemas ( RS ) were considered to guide the deﬁnition of tasks with different complexity . RS1 refers to the simplest rule , characterized by one event and one action , without temporal or spatial constraints . The other rule schemas introduce different operators and constraints . RS2 represents rules with multiple events combined with the OR operator . Tasks based on the RS2 schema can be performed with IFTTT . In fact , the RS2 schema ( e v entl 1 OR e v ent 2 ⇒ action ) is logically equivalent to two rules ( e v ent 1 ⇒ action ) and ( e v ent 2 ⇒ action ) . Thus , to accomplish RS2 tasks with IFTTT participants had to create two rules . Tasks based on RS3 and RS4 schemas were not performed with IFTTT , because logical operators on actions and temporal and spatial constraints are not allowed . For each rule schema , two tasks were deﬁned : One required the composition of Web services , the other required the composition of smart objects . Thus , every participant performed eight tasks with each system , except for IFTTT , for which they performed only the four tasks allowed by this tool . Each participant performed 28 tasks , for a total of 40 users × 28 tasks = 1 , 120 trials . The deﬁned tasks , with their short identiﬁcation ( Task ID ) , are reported in Table III . To improve the external validity of the study , all ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 24 G . Desolda et al . Fig . 10 . Comparative study setting . the tasks required the inclusion of Web services and smart objects used in the most popular rules created by the IFTTT community . Four out of the eight proposed tasks required the parameterization of events and / or actions . 6 . 3 . Procedure The study took place in a quiet university room where the study apparatus was in - stalled . Two HCI experts were involved : one acted as observer , the other as facilitator . A laptop with a 15inch display provided with an external mouse was available . The observation of the user interaction with the systems was facilitated by an external monitor that duplicated the laptop screen ( see Figure 10 ) . The comparative study lasted 10 days . Four participants were individually observed each day . Every partic - ipant followed the same procedure . First , they were introduced to the study purpose and what they had to do . Nobody refused to participate in the study . Participants were asked to sign a consent form . The participants were provided with a booklet composed of four pages . Each page reported three training and eight experimental tasks to be performed with one of the compared systems . Only four experimental tasks were reported on the IFTTT page , namely those supported by this system . To avoid carry - over effect , the booklet pages , as well as the experimental tasks on each page were ordered to have the system test order counterbalanced across the participants , and the task set order counterbalanced across the experimental conditions , both according to a Latin Square design . The facilitator introduced the ﬁrst system , i . e . , the one reported on the ﬁrst page of the participant booklet , and demonstrated the creation of a rule based on the RS4 schema , being this the most complete one . The demonstration did not involve services used in the experimental tasks . Then , the participants were invited to perform the three training tasks , possibly asking the facilitator for help . After the training , the participants had to execute the experimental tasks alone . They had to read aloud the task text and then start the rule creation . At the end of each task execution , participants had to tick a checkbox associated to the task statement , in ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 25 order to indicate if , in their opinion , the created rule fulﬁlled the task requests or not . At the end of all the experimental tasks , they ﬁlled in an online questionnaire about the system they had used . Before repeating the same procedure with the next system , the participants were invited to relax for 5 minutes . A paper questionnaire was administered at the end of the participant’s session . It asked to rank the four systems on the basis of their usefulness , completeness , and ease of use and to vote for the best system . This procedure was preliminarily assessed by a pilot study involving three participants . 6 . 4 . Data Collection Different types of data , both quantitative and qualitative , were collected to evaluate respectively user performances and user preferences . Regarding user performances , all the interactions were audio - video recorded by using a screen - capture tool . Notes were taken by the observers on signiﬁcant behavior or externalized comments . The two researchers transcribed their notes and performed an audio - video analysis of the screen - capture records . As a result , they built an excel ﬁle reporting for each task performed by each user the following data : user ID ( from 1 to 40 ) , user experience ( technical – non - technical ) , system name , task ID ( T1 – T8 ) , task schema ( RS1 , RS2 , RS3 , RS4 ) , type of service ( Web service – smart - object ) , time ( in seconds ) , clicks , number of errors ( from 0 to n ) , type of error , user perception about rule correctness ( right – wrong ) . Then , they independently double - checked such data . The initial reliability value was 94 % , thus the researchers discussed the differences and reached a full agreement . Regarding user preferences , online and paper questionnaires were administered during the study . The online questionnaire addressed two main dimensions : satisfaction with system and satisfaction with created rules . The former was assessed through a semantic - differential scale that required participants to judge the system on 12 pairs of adjectives describing satisfaction in using the system . Participants could modulate their evaluation on 7 points ( after recoding of reversed items 1 = very negative , 7 = positive ) . Such tool for measuring user satisfaction with system was already used in some previous similar studies of ours ( see , for example , De Angeli et al . [ 2003 ] ) and was designed with the involvement of an experimental psychologist working in the HCI ﬁeld . The latter was assessed directly by a Likert - type item asking participants to express their gratiﬁcation on a 7 point - scale ( from “not at all” to “very much” ) and indirectly by a percentage estimation of the number of tasks accomplished correctly . The paper questionnaire asked participants to rank experimented systems along three dimensions , i . e . , completeness , easiness , and usefulness . 6 . 5 . Results on User Performance In order to answer to the ﬁrst research question , namely if there is any difference in terms of user performance when creating rules with the different interaction paradigms , we structured our analyses along ﬁve dimensions . The ﬁrst dimension , Rule Complexity Impact , compared the systems along different rule schemas implying different levels of complexity . The second dimension , Type of Service Impact , aimed to understand , for each system , if and how the type of service ( Web service vs . smart object ) affects user performance . The third dimension , User Expertise Impact , refers to the effect of the user expertise ( technical vs . non - technical ) on the user performance . The fourth dimension , User Gender Impact , refers to the effect of gender ( male vs . female ) on the user performance . The ﬁfth dimension , Expressiveness of rule repre - sentation , aims to evaluate if the way in which rules under creation are represented helps users understand and perceive correctly the effect of their composition actions , ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 26 G . Desolda et al . and if there are differences among the four systems . This analysis actually addressed both performance and satisfaction : The wrong perception of the created rule not only impacts users’ satisfaction but can also generate errors . The variables time , clicks , and error severity were used in the ﬁrst four analysis dimensions . Time is the number of seconds the participant took to execute a task ; we considered as task starting point the moment when the participant ﬁnished reading aloud the task statement . The ending point was the moment when the participant saved the rule . The variable Clicks refers to the number of clicks . It was calculated by analyzing the system logs . Error severity is an index that indicates the seriousness of the task errors . A rate was assigned to each error depending on its severity . In particular , triangulating the notes and video analysis , three different types of error rates were identiﬁed . The ﬁrst type is about wrong events or actions in a rule . The second error type is related to wrong parameters in the speciﬁcation of events and actions . The last error type is about using a wrong logical operator ( AND instead of OR ) to connect the events . A different score was assigned to each type of errors , respectively 3 , 2 , and 1 ( 3 is the most serious ) . The error rate of a speciﬁc task execution was thus calculated as sum of the scores of all the errors observed in a screen snapshot showing the ﬁnal rule . The ﬁnal error severity index was calculated as ratio between the sum of the error rates and the number of errors ( 0 was assigned in case of no errors ) . One - way repeated measures ANOVAs ( all Greenhouse – Geisser corrected ) with post - hoc pairwise comparisons ( Bonferroni corrected ) were adopted in the ﬁrst analysis that addressed the role of different rule schemas . In Sections 6 . 5 . 1 , we report in detail the analyses of data related to this dimension . By means of tables , for each system , we report mean ( ¯x ) and standard deviation ( SD ) of the dependent variables , the results of the ANOVA tests ( p - values below . 05 indicate a signiﬁcant difference ) , and the results of the Post - hoc tests . The latter highlights the couples of systems for which a statistically signiﬁcant difference exists ( e . g . , E - Free – E - Wired ( p = . 019 ) indicates that the ﬁrst system performed better than the second one ) . Log transformations were needed to achieve a normal data distribution ( assessed with Shapiro – Wilk test ) . However , the tables report the original data , without log - transformation , to better show the real system performances . For the second , third , and fourth analyses , paired - sample t - tests were performed : In the related tables , reported in Section 6 . 5 . 2 , 6 . 5 . 3 , and 6 . 5 . 4 , respectively , the column t - test reports test results ( a signiﬁcant difference exists when p - value < . 05 ) . Last , chi - square tests were applied to data in the ﬁfth analysis , as shown in Sec - tion 6 . 5 . 5 . 6 . 5 . 1 . RuleComplexityImpact . A detailed comparison among the systems was performed to analyze if and how the rule schema ( RS1 , RS2 , RS3 , and RS4 ) affects the dependent variables . Table IV shows that there was a signiﬁcant difference among the systems in the time to create an RS1 rule , i . e . , a rule not requiring either logical operators not even temporal and spatial constraints . In particular , IFTTT required more time than E - Free and E - Wizard , while there are no signiﬁcant differences between E - Wired and IFTTT . Regarding clicks , signiﬁcant differences emerged : E - Wired required less clicks than E - Free and E - Wizard . IFTTT required less clicks than E - Free . No differences emerged for the error severity . A possible explanation of the two EFESTO systems advantage over IFTTT for the time variable can be ascribed to the different organization of the wizard procedure for selecting events , actions , and their parameters . In order to deﬁne a rule , IFTTT requires passing through every single step , even when some elements do not need to be speciﬁed for a rule under deﬁnition . For example , even if actions do not need the ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 27 Table IV . Performances in Task Execution Time , Clicks , and Error Severity of all the Systems Along Rule Schema RS1 Time Clicks Error severity System ¯x SD ¯x SD ¯x SD R u l e S c h e m a 1 E - Free 33 . 82 15 . 84 13 . 27 4 . 63 . 00 . 00 E - Wizard 35 . 20 17 . 78 12 . 23 4 . 22 . 05 . 35 E - Wired 38 . 06 21 . 27 10 . 61 3 . 36 . 06 . 24 IFTTT 46 . 22 24 . 91 11 . 14 2 . 77 . 00 . 00 ANOVAtest F ( 2 . 771 , 218 . 879 ) = 7 . 725 p < . 000 partial η 2 = . 098 F ( 2 . 798 , 221 . 023 ) = 7 . 275 p < . 000 partial η 2 = . 084 F ( 1 . 702 , 134 . 442 ) = 1 . 953 p = . 152 partial η 2 = . 024 Post - hoc E - Free – IFTTT ( p = . 001 ) E - Wizard – IFTTT ( p = . 002 ) E - Wired – E - Free ( p < . 000 ) IFTTT – E - Free ( p = . 010 ) E - Wired – E - Wizard ( p = . 044 ) – Table V . Performances in Task Execution time , Clicks , and Error Severity of all the Systems Along Rule Schema RS2 Time Clicks Error severity System ¯x SD ¯x SD ¯x SD R u l e S c h e m a 2 E - Free 61 . 39 27 . 64 19 . 62 7 . 04 . 18 . 56 E - Wizard 66 . 86 29 . 21 18 . 23 6 . 21 . 24 . 73 E - Wired 78 . 63 42 . 78 23 . 61 12 . 82 . 05 . 21 IFTTT 100 . 69 40 . 42 24 . 42 4 . 87 . 05 . 35 ANOVAtest F ( 2 . 532 , 200 . 065 ) = 32 . 508 p < . 000 partial η 2 = . 292 F ( 2 . 714 , 211 . 689 ) = 21 . 365 p < . 000 partial η 2 = . 215 F ( 2 . 350 , 185 . 658 ) = 2 . 842 p = . 052 partial η 2 = . 035 Post - hoc E - Free – E - Wired ( p < . 000 ) E - Free – IFTTT ( p < . 000 ) E - Wizard – IFTTT ( p < . 000 ) E - Wired – IFTTT ( p < . 000 ) E - Free – E - Wired ( p = . 007 ) E - Free – IFTTT ( p < . 000 ) E - Wizard – E - Wired ( p < . 000 ) E - Wizard – IFTTT ( p < . 000 ) – speciﬁcation of parameters , as it happens in one of the two RS1 rules , the users have to pass anyway through the page dedicated to parameter deﬁnition . More than a critical problem , this could be considered a hint for designers of similar tool . The time gap between IFTTT and the EFESTO systems , already evident in RS1 tasks , is even more accentuated in RS2 tasks that required the use of the OR logical operator between two events ( Table V ) . It is not uncommon that a user needs to activate the same action as reaction to different events ; in this situation , the paradigms of the EFESTO systems are more efﬁcient than IFTTT that , as it does not support logical operators , requires the deﬁnition of two rules to perform RS2 tasks . E - Free , E - Wizard , and E - Wired were then compared along the RS3 and RS4 tasks to determine which paradigm is most suitable for managing rules that also include logical operators and temporal and spatial constraints ( see Table VI and Table VII , respectively ) . IFTTT was not considered because it does not support these features . There were signiﬁcant differences in the time to create a rule . In particular , post - hoc analysis revealed that participants were faster with E - Free and E - Wizard than with E - Wired . With respect to clicks , it emerged that E - Wired requires a number of clicks signiﬁcantly higher than E - Wizard . In terms of error severity , the only signiﬁcant difference emerged in RS3 tasks : Participants performed less severe errors using E - Wizard than using E - Wired . The video analysis of the user interaction highlighted that participants spent more time with E - Wired because of the rule graph representation . Drag & drop of the nodes ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 28 G . Desolda et al . Table VI . Performances in Task Execution time , Clicks , and Error Severity of the EFESTO Systems Along Rule Schema RS3 Table VII . Performances in Task Execution time , Clicks , and Error Severity of the EFESTO Systems Along Rule Schema RS4 Time Clicks Error severity System ¯x SD ¯x SD ¯x SD R u l e S c h e m a 4 E - Free 122 . 32 47 . 31 41 . 31 13 . 40 . 41 . 80 E - Wizard 147 . 36 76 . 79 39 . 57 13 . 54 . 51 . 90 E - Wired 198 . 93 85 . 78 57 . 61 28 . 89 . 59 . 73 ANOVA test F ( 1 . 760 , 139 . 017 ) = 33 . 726 p < . 000 partial η 2 = . 299 F ( 1 . 854 , 146 . 494 ) = 20 . 671 p < . 000 partial η 2 = . 207 F ( 1 . 893 , 149 . 566 ) = 1 . 132 p = . 323 partial η 2 = . 014 Post - hoc E - Free – E - Wired ( p < . 000 ) E - Wizard – E - Wired ( p < . 000 ) E - Free – E - Wired ( p < . 000 ) E - Wizard – E - Wired ( p < . 000 ) – Table VIII . Performances in Task Execution time , Clicks , and Error Severity of the Four Systems Along the Type of Service . Tests Labeled with ∗ are Statistically Signiﬁcant representing services and deﬁnition of the relationships by arrow drawing was time consuming . 6 . 5 . 2 . TypeofServiceImpact . For each system , we investigated if there were statistical differences in performing tasks with different types of resources , i . e . , Web service and smart object ( see Table VIII ) . Time and clicks values were signiﬁcantly different in favor of smart objects for all systems . A possible reason can be the number of events and actions exposed by smart objects , which , in general , is lower than the number of events and actions exposed by ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 29 Table IX . Performances in Task Execution Time , Clicks , and Error Severity of the Four Systems Along the User Expertise . Tests Labeled with ∗ are Statistically Signiﬁcant Web services . As also observed in Lucci and Patern ` o [ 2015 ] , an excessive number of service elements to choose from can make it difﬁcult to identify the right one . Fur - thermore , the parameterization of events is typically more complex in Web services . About the error severity , there was a statistical difference in favor of smart objects only in E - Free . Even in this case , the reason could be related to the greater complexity of parameterization in Web services . 6 . 5 . 3 . UserExpertiseImpact . We compared , for each system , the performance of techni - cal users vs . non - technical users . As shown in Table IX , the only signiﬁcant difference regards the error severity of E - Wizard that is in favor of non - technical users . However , since the error severity value is very low in both cases , we can safely assume that E - Wizard does not speciﬁcally lead the users to perform important errors . No differences emerged in terms of time and clicks . Thus , the EFESTO system paradigms , as well as the one implemented in IFTTT , seem to ﬁt the mental model of non - technical users since they do not affect their performances . This result conﬁrms that the elicitation study ( see Section 4 ) helped us identify paradigms that can be exploited also by non - technical users , despite the use of logical operators and temporal and spatial constrains that represent the step forward compared to the existing TA systems analyzed in Section 2 . 2 . 6 . 5 . 4 . User Gender Impact . Gender is considered an issue relevant in EUD research , especially in the smart environment [ Blackwell et al . 2009 ] . In order to assess the gender effect on the evaluated systems , we also compared the performance of male vs . female participants . As shown in Table X , no signiﬁcant differences emerged from this analysis . 6 . 5 . 5 . ExpressivenessofRuleRepresentation . An important feature of TA systems is the capability of communicating to the user if the created rule , statically visualized on the computer display , will generate the expected service behavior when executed on actual objects and services . In fact , one of the limitations of current TA systems is the limited debugging possibilities [ Coutaz and Crowley 2015 ] . This aspect was investigated by means of two dichotomous variables : perceived rule correctness ( right – wrong ) and actual rule correctness ( right – wrong ) . The value of the former was explicitly stated by participants , who , for each task , ticked a check - box indicating if the created rule fulﬁlled or not the task requests . The actual rule ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 30 G . Desolda et al . Table X . Performances in Task Execution time , Clicks , and Error Severity of the Four Systems Along the User Gender . Tests Labeled with ∗ are Statistically Signiﬁcant Table XI . Participants’ Perception of the Created Rule Correctness correctness value was indicated by the two HCI researchers , who examined the cre - ated rule through the screen snapshots . For each system , chi - square tests were applied on the two dichotomous variables . There was a statistically signiﬁcant association between perceived rule correctness and actual rule correctness in E - Free , E - Wizard , and E - Wired ( X 2E - Free ( 1 ) = 46 . 506 , p < . 000 ; X 2E - Wizard ( 1 ) = 39 . 811 , p < . 000 ; X 2E - Wired ( 1 ) = 20 . 080 , p < . 000 ) , with a moderately strong association in all cases ( ϕ E - Free = 0 . 381 , p < . 000 ; ϕ E - Wizard = 0 . 250 , p < . 000 ; ϕ E - Wired = 0 . 353 , p < . 000 ) . No statistical difference emerged in IFTTT ( X 2IFTTT ( 1 ) = . 121 , p = . 728 ) . Table XI summarizes and offers a different perspective on the results of this anal - ysis . The Correctly perceived column reports , for each system , the number of rules participants correctly declared to fulﬁll ( As right column ) or not ( As wrong ) the task requests . The Total column , calculated as sum of the two previous columns , indicates the number of rules participants correctly perceived . Percentage , calculated on a total of 320 rules for the three EFESTO versions and 160 for IFTTT , is reported in the % column . Similarly , the Wrongly perceived column reports the same information related to the rules wrongly perceived by participants . Triangulating the chi - square test results with the data reported in Table XI , we can assert that the EFESTO systems offer more adequate rule representation . The chi - square test revealed that no association exists between the two variables in the case of IFTTT , thus indicating that its rule representation generates a wrong user perception , even if it has the lowest percentage of wrongly perceived rules ( 6 . 9 % ) . This contrasting result is explained by observing that participants were never able to identify wrong rules : The two wrong rules were never recognized and the nine rules perceived as wrong were right ( 100 % of failures ) . This is the main cause of the weak association between the two dichotomous variables . To identify the source of this problem , we considered ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 31 Table XII . Inﬂuence of Participant Background ( Technical vs . Non - Technical ) on the Perception of the Created Rule Correctness E - Wizard that , although very similar to IFTTT , does not suffer this problem . In fact , 12 out of 30 wrong rules ( 40 % of failures ) were perceived correctly . IFTTT proposes a similar wizard as in E - Wizard with the same service names , events , and actions . The very difference between these two systems is in the rule representation . E - Wizard shows the rule in a horizontal panel , with events on the left and actions on the right ( see Figure 7 ) ; this representation is used both at creation time and when the rule has been saved , according to a “What You See Is What You Get” ( WYSIWYG ) approach . IFTTT shows , at creation time , the rule elements in a scrolling page , where they appear in sequence as soon they are deﬁned ; when the rule is saved , it is shown as a text that summarizes its features in natural language . We were also interested in investigating if the participants’ background affected their ability to evaluate rule correctness . Thus , the analysis has been executed considering the two different participant samples , i . e . , technical vs . non - technical . In the case of technical users , there was a statistically signiﬁcant association between perceived rule correctness and actual rule correctness in E - Free , E - Wizard , and E - Wired ( X 2E - Free ( 1 ) = 33 . 252 , p < . 000 ; X 2E - Wizard ( 1 ) = 9 . 896 , p = . 002 ; X 2E - Wired ( 1 ) = 48 . 756 , p < . 000 ) with a moderately strong association ( ϕ E - Free = 0 . 392 , p < . 000 , ϕ E - Wizard = 0 . 214 , p = . 002 , ϕ E - Wired = 0 . 475 , p < . 000 ) . No statistical difference emerged in IFTTT ( X 2IFTTT ( 1 ) = . 049 , p = . 825 ) . In the case of non - technical users , there was a statistically signiﬁcant association between perceived rule correctness and actual rule correctness in E - Free and E - Wizard ( X 2E - Free ( 1 ) = 13 . 505 , p < . 000 ; X 2E - Wizard ( 1 ) = 12 . 486 , p < . 000 ) with a moderately strong association between the variables ( ϕ E - Free = 0 . 360 , p < . 000 , ϕ E - Wizard = 0 . 346 , p < . 000 , ϕ E - Wired = 0 . 475 , p < . 000 ) . No statistical difference emerged in E - Wired and IFTTT ( X 2E - Wired ( 1 ) = 1 . 878 , p = . 171 , X 2IFTTT ( 1 ) = . 085 , p = . 771 ) . Table XII reports participants’ performance in determining rule correctness , with a distinction between technical and non - technical users . The main evidence is that the E - Wired rule representation , based on a graph metaphor , is not correctly interpreted by non - technical users , who are not acquainted with a language typical of the Computer Science domain . 6 . 6 . Results on User Satisfaction User satisfaction was assessed by means of two types of questionnaires . The ﬁrst one was an online questionnaire ﬁlled in by participants after the use of each system . The second one was a paper questionnaire administered at the end of the participant’s session ; it asked to rank the four systems on the basis of their usefulness , completeness , and easiness , and to vote for the best system . 6 . 6 . 1 . UserSatisfactionwithSystemandwithCreatedRules . The online questionnaire ad - dressed two main dimensions : satisfaction with system and satisfaction with cre - ated rules . One - way repeated measures ANOVAs ( all Greenhouse – Geisser corrected ) ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 32 G . Desolda et al . Table XIII . User Satisfaction Results ( the Highest x Value is the Best ) Satisfaction with system Satisfaction with created rules System ¯x SD ¯x SD E - Free 5 . 81 . 89 488 . 50 167 . 095 E - Wizard 5 . 70 . 86 485 . 75 485 . 69 E - Wired 4 . 55 1 . 14 425 . 75 184 . 97 IFTTT 5 . 73 . 98 526 . 00 155 . 13 ANOVA test F ( 2 . 806 , 109 . 423 ) = 19 . 897 p < . 000 partial η 2 = . 339 F ( 2 . 868 , 2374835 ) = 3 . 387 p = . 022 partial η 2 = . 080 Post - hoc E - Free – E - Wired ( p < . 000 ) E - Wizard – E - Wired ( p < . 000 ) IFTTT – E - Wired ( p < . 000 ) IFTTT – E - Wired ( p = . 031 ) Table XIV . User Satisfaction Results : Technical vs . Non - Technical ( the Highest x Value is the Best ) with post - hoc pairwise comparisons ( Bonferroni corrected ) were adopted to determine whether there were statistically signiﬁcant differences in these two dimensions . User satisfaction with system was addressed through a semantic - differential scale that required participants to judge the system on 12 pairs of adjectives describing satis - faction in using the system . The questionnaire had a high level of internal consistency , as determined by a Cronbach’s alpha of . 940 . The index of user satisfaction with system was computed averaging the scores for the 12 items . User satisfaction with created rules was assessed directly by a Likert - type item asking participants to express their gratiﬁcation on a 7 point - scale ( from “not at all” to “very much” ) and indirectly by a percentage estimation of the number of tasks accomplished correctly . The two variables are highly correlated ( r = . 498 , p < . 000 ) , thus indicating that the more tasks participants think they accomplished correctly , the more satisﬁed they are with system performance . Consequently , the ﬁnal index of user satisfaction with created rules was computed multiplying the two scores . Table XIII shows that E - Free , E - Wizard , and IFTTT were the systems most preferred by participants . About satisfaction with created rules a signiﬁcant difference emerged only between IFTTT and E - Wired . Therefore , E - Wired in general was perceived as the worst one . We also investigated if the participants’ expertise and gender affected their sat - isfaction with system and with created rules . Paired - sample t - tests were executed considering technical vs . non - technical and male vs . female . In case of participants’ expertise , with respect to the Satisfaction with system , the average values reported in Table XIV show that there is a positive attitude of technical users towards using IFTTT , while non - technical users prefer E - Free . There is only one ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 33 Table XV . User Satisfaction Results : Male vs . Female ( the Highest x Value is the Best ) Table XVI . User Preference in Terms of Completeness , Easiness , and Usefulness ( the Lowest x Value is the Best ) Completeness Easiness Usefulness System ¯x SD ¯x SD ¯x SD E - Free 1 . 85 . 95 1 . 80 . 91 1 . 62 . 93 E - Wizard 2 . 50 . 96 2 . 45 . 86 2 . 10 . 90 E - Wired 2 . 88 1 . 16 3 . 25 1 . 01 3 . 20 . 97 IFTTT 2 . 78 1 . 14 2 . 50 1 . 20 3 . 10 . 81 Kendall’s test Kendall’s W = . 128 χ 2 ( 3 ) = 15 . 33 p = . 002 Kendall’s W = . 211 χ 2 ( 3 ) = 25 . 32 p < . 000 Kendall’s W = . 357 χ 2 ( 3 ) = 42 . 895 p < . 000 Post - hoc E - Free – E - Wired ( p = . 001 ) E - Free – E - Wizard ( p = . 023 ) E - Free – IFTTT ( p = . 001 ) E - Free – E - Wired ( p < . 000 ) E - Free – E - Wizard ( p = . 011 ) E - Free – IFTTT ( p = . 019 ) E - Wizard – E - Wired ( p = . 003 ) IFTTT - E - Wired ( p = . 022 ) E - Free – E - Wired ( p < . 000 ) E - Free – E - Wizard ( p = . 042 ) E - Free – IFTTT ( p < . 000 ) E - Wizard – E - Wired ( p < . 000 ) Wizard – IFTTT ( p < . 000 ) signiﬁcant difference between technical and non - technical users : The latter are more satisﬁed with the E - Wizard system . The same trend emerged in the Satisfaction with created rules , even if no signiﬁcant differences were highlighted . In case of participants’ gender , no differences emerged in any case ( Table XV ) . 6 . 6 . 2 . UserRankingofSystemsalongCompleteness , Easiness , andUsefulness . Participants were asked to rank the four systems along three dimensions , i . e . , completeness , eas - iness , and usefulness . As shown in Table XVI , rankings were signiﬁcant in all the cases ( see the Kendall’s W coefﬁcient reported in the Test row of the table ) . Wilcoxon signed - rank tests were used as post - hoc tests to determine which scores were signif - icant . E - Free resulted as the favorite system in all the three dimensions , followed by E - Wizard , IFTTT , and , last , E - Wired . We also investigated if the participants’ background and gender affected the rank along the three dimensions . For each system , Wilcoxon signed - rank tests were executed with respect to each dimension , comparing technical vs . non - technical as well as male vs . female participants . As conﬁrmed by data and tests reported in Tables XVII and Table VIII , neither participants’ background nor gender do affect their ranking of the experimented systems . About voting the best system , the result is E - Free = 27 , E - Wizard = 8 , IFTTT = 3 , and E - Wired = 2 . Voting results are in line with the user preferences expressed in the three rankings . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 34 G . Desolda et al . Table XVII . User Ranking Along Completeness , Easiness , and Usefulness : Technical vs . Non - Technical ( the Lowest x Value is the Best ) Table XVIII . User Ranking Along Completeness , Easiness , and Usefulness : Male vs . Female ( the Lowest x Value is the Best ) 6 . 7 . Threats to Validity We now analyze some issues that may have threatened the validity of the comparative study , also to highlight under which conditions the study design offers beneﬁts that can be exploited in other contexts , and under which circumstances it might fail . 6 . 7 . 1 . InternalValidity . Internal validity can be threatened by some hidden factors com - promising the achieved conclusions : — Learning effect . In our experiment , this factor was minimized by counterbalancing the systems and the experimental tasks order across the systems , both according to a Latin Square design . — Subject experience . It was alleviated by the fact that none of the subjects had any experience with the experimented tools , as well as with TA tools in general . — Subject - expectancy effects . Students are not the best participants for a user study due to the subject - expectancy effect they can produce , i . e . , a form of reactivity that occurs when a research subject expects a given result and therefore unconsciously affects the outcome . We mitigated this effect by masking details that can produce bias . In particular , we presented the experiment to the participants in a way that suggests that we had no stake in the outcome . For example , we introduced all the ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 35 experimental tools as already available web sites that we wanted to observe during the creation of TA rules by users ; furthermore , in order to foster the credibility of this aspect , we developed our tools with a professional look - and - feel and we deployed them on a remote Web server , so that the participants had to connect to a remote URL to them , similarly to IFTTT . — Method authorship . We eliminated the biases that different facilitators running the experiment could introduce , as we had the same instructor for every session of the study . In this way , we avoided any variability in the initial training as well as in the way users had been observed . — Information exchange . Since the study took place over 10 days , it is difﬁcult to be certain whether the involved subjects did not exchange any information . However , participants were recruited from different classes and during exams period thus , for many of them , it was difﬁcult to know each other and to communicate . The participants were asked to return all the material ( e . g . , the booklet ) at the end of each session . We asked participants coming from the same classes and that typically study and travel together to perform the test in the same session . — Understandability of the material . A pilot study with further three participants was carried out to assess the understandability of experiment procedures and materials . 6 . 7 . 2 . ExternalValidity . External validity refers to the possible approximation of truth of conclusions in the attempt to generalize the results of the study in different contexts . With this respect , the main threats of our study are as follows : — Users age and domain experience . Since the study participants were young students not experienced with IoT and TA tools , we have to take into account two potential limitations of the study results . The ﬁrst one is the participants’ age that limits the prediction of the tools beneﬁts to older people . Thus , we can safely accept the experiment results for digital natives [ Prensky 2001 ] but further studies have to be carried out including older people . The second potential limitation is related to the participants’ domain experience : In fact , they had not experience with IoT technology , as well as with TA tools . We intentionally recruited inexperienced young people because we aimed to experiment the composition paradigm with users that would potentially adopt such tools in the next years , without affecting results on composition paradigms usability evaluation due to prior users’ knowledge of other tools and IoT technologies . However , this crite - rion can limit the generalizability of our results to end users of smart environments that can have different behaviors and needs . This is the reason why , as described in Section 7 , we also performed a validation of EFESTO - Free by involving end users expert in the conﬁguration of home - automation systems . — Tasks complexity . The tasks used for the study took inspiration from the most popular rules created by the IFTTT community . We also extended some tasks in order to accommodate more complex and real user’s needs , by including temporal and spatial constraint , as well as logical operators . The possibility to consider tasks that are more complex was limited by the experimented tools . Thus , the results obtained and the design indications proposed are valid for a particular class of tasks , i . e . , simple ECA rules that include logical operators and temporal and spatial constraints . — Comparison with other tools . In the comparative experiment , we considered only IFTTT as baseline because the main goal of our comparison was to observe the limits and advantages of the conceived EFESTO paradigms with respect to a tool that is mature and popular among non - technical users . However , as reported in Section 2 . 2 , different TA tools are available other than IFTTT and we have no evidence about the advantages of E - Free with respect to these tools . This is the reason why we are going to perform new controlled experiments including other relevant tools . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 36 G . Desolda et al . 6 . 7 . 3 . ConstructValidity . Construct validity might have been inﬂuenced by the measures that we applied in the quantitative analysis and by the reliability of the questionnaire . We alleviated the ﬁrst threat by adopting measures , such as efﬁciency ( e . g . , time to complete a task ) , that are commonly employed in user studies [ Dix et al . 2003 ] . The reliability of the questionnaire was tested by applying the Cronbach test to each set of closed questions intended to measure subjective variables . As reported in the previous section , the value obtained ( . 940 ) was higher than the acceptable minimum threshold ( > 0 . 70 ) [ Maxwell 2002 ] . 6 . 7 . 4 . Conclusion Validity . Conclusion validity refers to the validity of the statistical tests applied . In our study , this was alleviated by applying the most common tests that are employed in the empirical software engineering ﬁeld [ Juristo and Moreno 2010 ] . 7 . STUDY WITH HOME - AUTOMATION EXPERTS After the comparison of the three prototypes , we performed a further study to take into account the perspective of domain experts on how to improve TA tools in the home - automation domain . We also evaluated if E - Free and the underlying Rule _ 5W could represent a valid proposal in this direction . To this aim , we validated the E - Free prototype with 15 experts of both IoT and home automation . E - Free was chosen because in the comparative study it outperformed the other prototypes in terms of participants’ performances and satisfaction . The new study consisted of two phases . The ﬁrst one was a utilization study to eval - uate user performances and satisfaction with E - Free . This ﬁrst phase then fostered a discussion that during the second phase was held in a focus group session : Utterances , comments , and hints were gathered from the participants about usability and function - alities of a TA tool in general , and about the adoption of E - Free in the home - automation domain . 7 . 1 . Participants and Design We were able to recruit a total of 15 participants ( 9 female ) , aged between 25 and 34 years ( ¯x = 28 . 8 , SD = 2 . 42 ) . More speciﬁcally , participants were 14 construction engineers and 1 biomedical engineer . They were concluding at the “Politecnico di Mi - lano” University an advanced ( Post - Master ) training course on smart technologies in smart environments . The course , titled “Home Automation and Technology for Living Environments , ” was organized over 15 months ( 2 . 400 hours ) and included a phase of coaching and project work in a company of the home - automation sector . The course is part of the SHELL Project – Cluster Smart Living Technologies . 8 Participants were rewarded with a 8GB USB memory stick . In the ﬁrst utilization study , each participant was asked to complete two training tasks and three experimental tasks . In order to propose tasks that would be signiﬁcant , engaging , and able to stimulate home - automation end users , we involved a domain expert . First , we asked the expert to use E - Free to perform some tasks ( some of them were those of the comparative study ) . Then , he was required to select the tasks , among those just performed , that could be actually useful in the home - automation domain . He was also invited to design further signiﬁcant domain tasks . At the end , the three following tasks were produced : ( 1 ) If my Android Wear changes position to the address of my home between 8 and 10 p . m . , then switch - on the home air conditioning and set 25 ◦ C as temperature . ( 2 ) If my smart bracelet detects that I’m waking - up between 7 and 8 a . m . or my smart alarm clock rings , then open the roll - up shutters and switch - on the coffee maker . 8 http : / / shell . smartlivingtech . it / . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 37 ( 3 ) If my car changes position to the address of my home and I push the button of my Android Wear , then open the garage door and switch - on the boiler . The ﬁrst two tasks were taken from the comparative study because they were very similar to some tasks proposed by the expert ; the third one was completely new . To evaluate user satisfaction , the same questionnaire of the comparative experiment , integrated with the SUS statements [ Brooke 1996 ] , was administered after the tasks execution . We introduced the SUS statements because it is highly reliable [ Bangor et al . 2008 ] , technology agnostic , and effective also for evaluating usability of modern technology [ Brooke 2013 ] . The utilization study was followed up by two focus groups ( seven participants in the ﬁrst group ) . Participants were stimulated to discuss the following topics : ( 1 ) Which scenarios in home - automation environments can beneﬁt from the use of E – Free . The goal was to identify speciﬁc and real situations so that future research on TA tools applied to home automation can be more focused and driven by realistic scenarios . ( 2 ) Which aspects of UI and interaction can be improved . The goal was to identify interface and interaction aspects that can impact on system usability . ( 3 ) Which functionalities should be included / removed to make E - Free more compliant to real contexts . The goal was to identify functionalities , possibly independent from a speciﬁc composition paradigm , that foster the adoption of TA tools in real contexts . 7 . 2 . Procedure The entire study took place in a quiet and isolated room at the Politecnico di Milano campus , where we installed the study apparatus ( a laptop and a web camera ) 30 min - utes before the start . Two HCI researchers were involved in the study . In particular , during the utilization study , one ( facilitator ) was in charge of introducing users to the study and following them during the tasks accomplishment ; the second one ( observer ) took notes . During the focus groups , instead , one ( facilitator ) was in charge of stimu - lating the discussion , the second one ( observer ) took notes . The entire study lasted 1 day ( about 8 hours ) . During the utilization study , each participant interacted for about 10 minutes for a total of 4 hours ( breaks included ) . They all followed the same procedure . First , each participant was asked to sign a consent form . Then , the facilitator showed a quick introduction about the use of E - Free . Then , the participant was provided with a list of two training tasks during which they could ask for help , and three main tasks to be performed alone . At the end , participants ﬁlled in the online questionnaire . For the focus group session , in order not to have a too large group , we split par - ticipants in two separate groups . Both the HCI researchers participated in the focus groups . Participants sat around a table and were provided with pencil and sheets in order to sketch their ideas . Each focus group lasted about 1 hour and was video recorded . 7 . 3 . Data Collection & Analysis During the utilization study , we collected quantitative and qualitative data . Quantita - tive data regarded user performances measured through time and number of clicks to perform tasks . Qualitative data regarded user satisfaction measured through a ques - tionnaire that included all questions already used during the comparative study and the 10 statements of the SUS questionnaire . During the focus groups , the observer took notes about the discussion ; video and audio of the discussion were also recorded . The set of collected notes was extended by video and audio analysis , performed by two researchers that transcribed videos and ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 38 G . Desolda et al . audios and independently double - checked some 85 % of the material . The initial relia - bility value was 80 % , thus the researchers discussed the differences and reached a full agreement . The transcripts were analyzed by thematic analysis following a semantic approach . Themes were identiﬁed within the explicit or surface meaning of the data [ Braun and Clarke 2006a ] . 7 . 4 . Results of the Utilization Study Even if the actual goal of the utilization study was to introduce participants to the use of a TA tool to foster the discussion in the following focus group , during this phase we also collected data about user performances and satisfaction . Regarding user performances , the average time participants spent for each task was 115 seconds ( SD = 53 . 25 ) , while the average number of clicks was 25 ( SD = 11 . 58 ) . Because the tasks were similar but not identical to those assigned in the comparative study , it is not possible to derive further information through the comparison of user performance in the two studies . Regarding qualitative data , the questionnaire results allowed us to measure two particular aspects , i . e . , User satisfaction with system ( ¯x = 5 . 58 , SD = 0 . 72 ) and User satisfaction with created rules ( ¯x = 566 . 67 , SD = 93 . 63 ) . Being user satisfaction less dependent by tasks than user performances , a t - test has been used to compare the sat - isfaction results between the utilization and the comparative study . The test demon - strated that no statistical differences emerged for the User satisfaction with system ( t ( 53 ) = . 8954 , p = . 3746 ) and the User satisfaction with created rules ( t ( 53 ) = 1 . 7085 , p = . 0934 ) . These results are encouraging as they highlight that also expert users , who are typically more demanding with respect to the adopted technology and also like to have full control on it , were satisﬁed in using E - Free for the accomplishments of tasks typical of their domain . The user satisfaction was also evaluated by means of the 10 SUS questions , which gave us a more general indication about the perceived system usability and learnability . The SUS global score was 73 . 1 / 100 ( SD = 13 . 8 ) , which is higher than the average SUS scores ( 69 . 5 ) of one thousand studies reported in Bangor et al . [ 2009 ] . In addition , according to Lewis and Sauro [ 2009 ] , we split the overall SUS score into two factors , i . e . , System Learnability ( considering statements # 4 and # 10 ) and System Usability ( all the other statements ) . The System Learnability score was 68 . 1 ( SD = 22 . 6 ) , whereas the System Usability score was 74 . 3 ( SD = 13 . 9 ) . According to the SUS adjective rating scales [ Bangor et al . 2009 ] , both the scores can be considered a very good result . Besides providing an objective indication about the usability and learnability of the tested system , SUS results can be used as benchmarks in the comparison of further TA tools similar to E - Free . 7 . 5 . Results of the Focus Groups Through the discussion on scenarios we aimed to identify realistic home - automation tasks that could beneﬁt from the use of our TA tool . Such scenarios would be fundamental for customizing the general methodology and the prototypes to the home - automation domain . During the thematic analysis , we identiﬁed the following categories of new emerged elements ( examples of possible rules suggested by the participants are provided ) : — Security . “IF my position is far from my house THEN activate the system alarm” ; “IF a thief enters the house THEN switch on TV and lights” ; “IF the time is between 09 p . m . and 06 p . m . THEN keep close the garage door and all the house doors . ” ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 39 — Home assistance . “IF my smart bracelet detects an anomalous heartbeat THEN send a message to my cardiologist” ; “IF a proper device detects that an elderly falls down THEN send a message to his sons . ” — Education for children . “IF the time is between 07 p . m . and 07 a . m . THEN disable the TV in the children room . ” — Energy optimization . This was one of the most intriguing categories . In fact , today the sources of green energy installed at home cannot send back to the energy factory the surplus of produced energy , which is wasted , this because the energy networks are built to have only a main direction , i . e . , from the factory to the houses . A system like E - Free can allow a smarter setting of energy production and consumption , for example , a rule like “IF the energy production is more than the energy used in the home at a certain moment THEN switch on the washing machine . ” In addition , this energy optimization can be set at different granularity levels . For example , in a building with different apartments , the administrator can create rules to transfer / sell the surplus energy of some houses to other houses . The same logic could be adopted by the energy factory on a large scale and systems like E - free make easier its management . The second part of the focus groups was about usability problems as we also wanted to improve the usability of our tools taking into account the perspective of real users . No critical problems emerged , but the participants highlighted different aspects that could be improved . For example , users should be helped in the deﬁnition of spatial constraints by an auto - complete function ( as in Google Maps ) or by using a map ; it should be possible to specify more details in the deﬁnition of temporal constraints , e . g . , as in Google Calendar , a greater variety in deﬁning recurring events / actions ( all days , certain days , weekly , etc . ) should be allowed ; icons should be used also for events and actions to make more clear their meaning . Finally , through the focus group we wanted to identify new functional requirements that , independent of a speciﬁc composition paradigm , could facilitate the adoption of TA platforms in the home - automation domain . Interesting missing functionalities were highlighted . In the following , we list those that we consider important for TA tools and also generalizable to further domains – not only home automation : — Meta - rules would allow users to deﬁne rules that control rules . For example , a user can have different states that determine different rules activation , e . g . , at home , out of home , in travel , at work . Each status can be associated with the activation / deactivation of a set of rules . A meta - rule can be “IF my status is IN TRAVEL ( e . g . , from a date to another date of my calendar ) , activate rules X , Y , and deactivate rules Z , W . ” — Warning mechanisms would alert users about possible dangerous rules . For example , if a rule set the opening of the house doors , users should be alerted for the behavior that can cause the involuntary opening of doors . — Rule debug would help users to simulate and foresee rule behavior under different conditions . — Rules conﬂict identiﬁcation would support users of a smart environment ( e . g . , wife , husband , and children ) to identify the rules that affect the same smart objects and that can create potential conﬂicts ( e . g . , two rules created by the wife and the husband to switch on / off the washing machine but with different conﬂicting conditions ) . — Service recommendations would be important to guide the rule composition , helping users be aware of useful services that they could not know . — Different complexity levels would accommodate different user skills and attitudes . For example , an advanced modality should be available for skilled users to allow a more powerful rule customization ( e . g . , more detailed conditions or more expressive logic connections ) . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 40 G . Desolda et al . — Multiple object management would allow users to manage multiple instances of the same objects in each account . E - Free , as well as most TA tools , typically allow managing only one smart object per account . — Access management policies would allow deﬁning restrictions on the object access by the home users . For example , children should not access the conﬁguration of smart cooking , garage doors , and in general those smart objects dangerous for them or for the home security . Summing up , home - automation experts found E - Free and the Rule _ 5W model sat - isfactory for accomplishing their conﬁguration activities . In particular , questionnaire results and focus group discussions conﬁrmed the usefulness also for expert users of temporal and spatial constraints , which are the characterizing feature introduced by the Rule _ 5W model . Furthermore , experts provided valuable hints for identifying interesting directions for our research . 8 . SUMMARY OF RESULTS AND DESIGN IMPLICATIONS The comparative study allowed us to identify some characteristics that composition paradigms for TA tools should feature to be adequate for end users who are not experts in programming . It also allowed us to assess the adequateness of the Rule _ 5W model . The successive validation study conﬁrmed the usefulness and adequateness of the E - Free composition paradigm and of the Rule _ 5W model and it also showed that they are valid with respect to the skills of expert users . Additionally , the validation study allowed us to identify further features that can satisfy the needs and preferences of home - automation experts . In the following , we summarize the main ﬁndings of the studies and discuss some design implications . Expressive power does not downgrade user performance and satisfaction . In relation to the user performance assessed in the comparative study , E - Free clearly emerged as the most promising composition paradigm . In particular , when using E - Free for creating rules , the users always took signiﬁcantly less time than when using the other systems . This was true for simple rules ( RS1 , RS2 ) as well as for more expressive rules ( RS3 , RS4 ) exploiting the extra - elements introduced by the Rule _ 5W model . It is exactly rule expressivity that helped us identify the lacks of the other composition paradigms . For example , IFTTT does not support the occurrence in a rule of multiple events . IFTTT was indeed conceived for creating very simple rules , not allowing the inclusion of logical operators for concatenating multiple events and actions and of conditions to constraint rule activation . In IFTTT , composite behavior can be achieved through the creation of multiple rules , each one focusing on one single event and one single action . This modus operandi negatively impacts on the user performances . We are aware that the simplicity of IFTTT rules is a fundamental factor for the success of this platform . However , we believe that more expressive composition paradigms , as the ones that can be deﬁned on top of our Rule _ 5W model , are fundamental to empower end users to create meaningful services . The comparative study also allowed us to understand that end users can master more complex rules if adequate interaction paradigms are provided . In particular , the study highlighted that E - Free is the system that the users preferred most along all the satisfaction dimensions ( results achieved , completeness , ease of use , and use - fulness ) . Moreover , the comparison between technical and non - technical users along performance and satisfaction in general highlighted that the interaction with all the four systems is not inﬂuenced by the user expertise . The lack of signiﬁcant differences between the two groups enforces our belief that more expressive paradigms still result adequate for non - technical users , even if the speciﬁcation of rules is more complex . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 41 Wired paradigms downgrade user performance and satisfaction – even for technical users . The comparative study revealed that wired paradigms , as the one implemented in the E - Wired prototype , downgrade both user performance and satisfaction . This re - sult is in line with some ﬁndings already reported in literature . Wired paradigms have been largely used in the ﬁeld of Web services and smart object composition [ Blackstock and Lea 2012 ; Guinard et al . 2011 ; JS _ Foundation 2016 ] . Graphs are good candidates to represent the ﬂow of parameters ( the edges ) that are generated by events to trigger the activation of different services and objects ( the nodes ) . This notation ﬁts very well the mental model of expert programmers , who are used to adopt graphs for repre - senting the semantics of programs . In addition , wired notations are fruitfully used to support the tailoring of component - based applications at run - time [ Wulf et al . 2008 ] . However , this notation introduces severe problems when non - expert users need to pro - gram web - service behaviors [ Namoun et al . 2010a ] . In our study , we also found that the performance with E - Wired was not inﬂuenced by the user expertise as there are no signiﬁcant differences between technical and non - technical users . We can say there - fore that even technical users , who should be acquainted with wired notations , perform better and are more satisﬁed if using other interaction paradigms . Rules under creation need adequate representations highlighting the composing ele - ments . Another relevant result regarding the user performance is that the rule repre - sentation in IFTTT induces the users to judge as wrong rules that instead are correct . In other words , users are not in control of the rule deﬁnition task . The study reported in Cabitza et al . [ 2016 ] already highlighted the need for clear descriptions , to let users understand the effect of their created rules without being forced to activate them on real objects . As already discussed in Section 6 . 5 . 4 , to identify possible reasons of the low performance of IFTTT , we compared step by step the E - Wizard and the IFTTT paradigm . We purposely kept E - Wizard similar to IFTTT , as we wanted to analyze the impact of the new operators . In both the systems , the rule elements are incrementally visualized as soon as they are selected or deﬁned . The only difference between the two paradigms is a “synthesis” of the created rule expressed in natural language that IFTTT displays at the end of the process . We already planned further studies to assess whether this is the element that actually downgrades the expressiveness of rule rep - resentation . However , our hypothesis is that ( i ) the synthesis forces the users to jump to a rule representation that is different from the one adopted during rule creation , and ( ii ) the new representation does not highlight adequately the details of events and actions that the users specify during rule creation . Not imposing any speciﬁc order on the composition steps improves user’s performance and satisfaction . The improved performance and the higher satisfaction of E - Free emerged in the comparative study are due to the very difference of this paradigm with respect to the others : The freedom that it leaves to the users , who can deﬁne events and actions without being forced to follow a speciﬁc order . This ﬁnding is coherent with the results of the study discussed in Lucci and Patern ` o [ 2015 ] : By comparing some TA tools , the study highlighted that the composition paradigm should not impose any temporal constraint regarding what to specify ﬁrst . In addition to this result , in our study , we observed that the absence of constraints on the order of element speciﬁcation allows the user to explore “freely” the available elements , and this , in turn , improves their understanding of what elements can be composed and how , and their performance . In other words , even if it can appear as a paradox , the absence of constraints helps users be in control . It is worth noticing that in the comparative study a slightly higher preference for IFTTT emerged for non - technical users . The observation of participants during the study made evident that non - technical users are more acquainted with wizard ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 42 G . Desolda et al . procedures , which are , for example , used for installing software or conﬁguring ser - vices . Therefore , they did not get disturbed by the extra steps needed to conﬁgure a rule with IFTTT , being them aware that wizards sometimes propose steps that are useless in a speciﬁc situation and that can be simply skipped without inﬂuencing the correctness of the ﬁnal result . Offering assistance mechanisms can reduce the occurrence of errors . In order to facil - itate rule deﬁnition , assistance mechanisms can be used to guide users in discovering elements made available by the platform and help them deﬁne sound and correct rules . As emerged from the validation study involving home - automation experts , users would appreciate having a set of pre - deﬁned rules , and also meta - rules corresponding to typ - ical scenarios of use . In other words , especially when users need to repeatedly deﬁne similar rules , they could beneﬁt from the availability of pre - deﬁned system conﬁgura - tions , which can then be customized according to the actual situational needs . Also , users would beneﬁt from recommendations helping them discover the services that can be exploited for rule deﬁnition . These ﬁndings are in line with some choices at the basis of the IFTTT paradigm , which offers pre - conﬁgured recipes . As already discussed in the previous sections , these pre - deﬁned recipes especially determined the IFTTT success . The ﬁndings are also in line with the results of previous studies on mashup composition paradigms , which showed that users ﬁnd helpful any kind of assistance that the system is able to provide during the composition process [ Cappiello et al . 2011 ; Namoun et al . 2010b ] . Expert users , probably due to their awareness of the consequences of wrong rule deﬁnition , also highlighted the need to be assisted by debugging mechanisms to identify errors and possible rules conﬂicts . This aspect was also recently discussed in other independent studies ( see , for example , Fogli et al . [ 2016b ] ) . Meta - design can help adopting proper abstractions hiding technical details . When comparing the user performances along the type of services ( smart object vs . Web ser - vice ) , we found that the number of parameters to be set up for Web services negatively inﬂuences the user performance and satisfaction . This is in line with some ﬁndings re - ported in Lucci and Patern ` o [ 2015 ] , where the authors state that an excessive number of service properties to choose from makes it difﬁcult to identify the right one . With this respect , we believe that a meta - design approach can help pre - conﬁguring the resources to be composed by the end users , so that to avoid unnecessary complexity . Meta - design indeed prescribes involving domain and / or technology experts to customize the system for its initial use by the end users [ Ardito et al . 2014b ; Cabitza et al . 2014a , 2014b ; Fischer et al . 2004 ] . In a smart - object composition scenario , domain experts can exploit their domain knowledge to select those properties of objects and Web services that are really useful for the end users [ Cabitza et al . 2014b ] . Expert programmers can then deﬁne techniques for accessing services , based on adequate “adapters” and service de - scriptors that provide the logic to mediate between the whole set of properties natively provided by the resources and the set of properties to be exposed to the end users . Supporting different complexity levels could accommodate the attitudes and prefer - ences of different classes of users . Another ingredient emerged in the validation study relates to accommodating different users’ skills and attitudes and also varying compo - sition contexts . Different “composition styles” can be offered to reﬂect different users’ needs and skills . For example , as discussed above , users should be provided with totally pre - deﬁned rule conﬁgurations , or at the other extreme should be enabled to deﬁne by themselves , even by writing code , articulated conditions , and logic connections between different services . This is in line with previous , well - known ﬁndings reported in litera - ture , which say that users should be provided with different abstraction levels [ Green and Petre 1996 ] to ensure a “gentle slope of difﬁculty” [ Lieberman et al . 2006b ] . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 43 Supporting domain speciﬁcity can help accommodate variable user needs . The re - sults of the comparative study indicate that E - Free is the most suitable composition paradigm . However , since notations are adequate if they really meet the characteristics and the background of the end users , we believe that it is important to rely on ﬂexible platform architectures that can be easily adapted to address varying needs . In other words , it is important to foster domain - speciﬁcity , a quality that is fundamental in EUD platforms [ Casati 2011 ] . In order to allow end users to understand the possibilities of - fered by the platform and to make sense of the services and objects that are available for composition , it is indeed important to restrict the platform to a well - deﬁned do - main , represented through adequate notations the users are comfortable with . As we will illustrate in Section 9 , to address this requirement , TA platforms should privilege separation of concerns . The interaction layer , which manages the visual composition of rules by end users , should be kept independent of the other platform components . Through the adoption of different interaction paradigms is therefore possible to accom - modate the needs and the background of speciﬁc users’ communities . 9 . PLATFORM ARCHITECTURE In this section , we illustrate the organization of the platform that we designed for the deﬁnition and execution of ECA rules 9 and that facilitated the generation of the prototypes exploited during the user studies . By presenting the platform architecture , we aim to facilitate the replicability of our studies and to show how an adequate organization of TA platforms can enable customizability with respect to varying users and usage domains . In our research , building prototypes offering different composition paradigms was facilitated by the modularity of our platform , and especially by the decoupling between the interaction layer and the other platform modules . Software design patterns , ﬁrst of all the MVC ( Model - View - Controller ) , already address this separation of concerns . In our work , however , the emphasis is not on programming practices to facilitate the development and maintenance of an interactive system ; rather we want to stress the possibility to adapt easily the composition paradigm offered by the platform , to comply with domain - speciﬁc requirements . It is indeed important to restrict the platform to a well - deﬁned domain the user is comfortable with . That is , it is important to develop a general platform that can be , however , easily customized as far as the provided composition metaphor is concerned [ Ardito et al . 2014b ] . 9 . 1 . Platform Organization The platform inherits some modules for service invocation and management already developed in the EFESTO mashup framework [ Desolda et al . 2016 ] . The focus of the new implementation , which we will call E - 5W in the sequel , is , however , on the Rule Engine . As reported in Figure 11 , the E - 5W platform is organized in three layers , each one managing a separate aspect . The Interaction Layer is the system client that manages the UI through which the users can create task - automation rules . In addition , it implements two modules , the Service Builder and the Rule Generator . The ﬁrst one is in charge of materializing in the UI the list of attributes of registered services , as resulting from the Service Descriptor repository . Thus , it is invoked each time users need to add an event or an action to the rule . The UI layer is in principle agnostic to the registered services ; to build the visualization of available services , the Service Builder requests to the Service 9 A demo video , showing the prototype at work for the deﬁnition of task automation rules , is available at https : / / www . dropbox . com / s / nb4v1v6ompe9vey / EFESTO - Free . mp4 ? dl = 0 . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 44 G . Desolda et al . Fig . 11 . Overall organization of the platform architecture and structure of the rule engine . Engine the JSON ﬁle containing the list of available services , each of them described by attributes like name , events , actions , and thumbnail URL . The Rule Generator is an interpreter that translates the user visual actions for rule creation into a JSON speciﬁcation that describes the rule in terms of events , actions , logical operators , and spatial and temporal constraints ( see Figure 12 ) . It is worth remarking that the when part of the rule is codiﬁed according to the syntax provided by Quartz Job Scheduler , 10 a job scheduling JAVA library implemented in our platform to manage the rule scheduling . At the server side , the Logic Layer manages rules and services by means of , respec - tively , the Rule Engine and the Service Engine modules . The ﬁrst one receives the rule 10 https : / / www . quartz - scheduler . org / . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 45 Fig . 12 . ( a ) JSON descriptor of a rule with two causes and two actions and ( b ) its graphical representation in the E - Free system . Fig . 13 . Event - driven paradigm for service coupling deﬁnition and rule execution . JSON ﬁle from the client ( from the Rule Generator module ) and instantiates the rule object based on a publish - subscribe , event - action model [ Cappiello et al . 2015 ; Cappiello et al . 2011 ] ( see Figure 13 ) . This model is natively managed and handled by a Java Spring class . 11 Each rule object is characterized by a set of Publisher services , each of 11 ThreadPoolTaskScheduler ( http : / / docs . spring . io / spring - framework / docs / current / javadoc - api / org / springfra mework / scheduling / concurrent / ThreadPoolTaskScheduler . html ) . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 46 G . Desolda et al . them associated with an event that can be complemented with temporal and spatial constraints , and by a set of Subscriber services , each of them associated to an action that can be complemented with temporal and spatial constraints . Moreover , details about the logical operators used among events or actions are stored in the rule object . The Rule Engine acts as an event bus that mediates the communication between the different components . Components are decoupled : They do not need to be explic - itly aware of each other or be blocked waiting for events from other components . The Rule Engine checks every N minutes ( 3 minutes of sample rate in our systems ) if the publisher events are triggered ( all of them or just one of them depending on the log - ical operator chosen , respectively , AND or OR ) . This check is performed by a listener associated to the rule . If the events are triggered , the Rule Engine controls if there are temporal and spatial constraints on the events and , in case , if they are satisﬁed . If the events meet all the conditions , the Rule Engine runs all the subscribed actions associ - ated with the rule or schedules the action execution according to the when constraint ( see Figure 13 ) . It is worth noting that the current platform prototype provides a default sample rate that can be also customized by the users when they conﬁgure their proﬁle . We , however , adopt a more speciﬁc policy to manage the execution of rules that require checking events in speciﬁc time intervals . In this case , the sample rate is not the one deﬁned by default ( or by the user ) , but it is deﬁned automatically taking into account the time interval speciﬁed in the rule . In this way , we also optimize the exploita - tion of resources , since rule checks are performed only in a pertinent time interval , avoiding useless checks out of that interval . Similar strategies are adopted for other sensible cases , e . g . , precise - time constraints or multiple events with multiple time in - tervals . In all these cases , the rule engine identiﬁes pertinent time intervals for rule checking . The Service Layer is located at the server side and stores service and rule descriptors by using JSON ﬁles . A service descriptor contains all the information useful to query an API and contributes to decouple the registered services from the rest of the platform . It is created when a new object is added into the platform . For the implementation of the current prototype , we decided to consider only the RESTful technology since it is widely adopted by the majority of Web API and smart object providers . However , different technology can be easily accommodated as the EFESTO service layer [ Desolda et al . 2016 ] is structured so that different types of adapters can be plugged in to manage the access to different API technologies . Alternatively , without developing further adapters , it is possible to adopt a dedicated middleware , as , for example , Azure IoT Suite , 12 to mediate the access to additional service technologies [ Li et al . 2015 ] . The platform is indeed open and each layer can be also implemented by external services . An example of service descriptor is provided in Figure 14 . It is divided into two main sections : header and body . The attributes name and url in the header specify , respectively , the service name and the API documentation URL . The body section includes a set of attributes ( appID , appSecret , restUri , redirectUri , tokenExpiredCode , authentication ) that the Service Engine uses to invoke the API . Moreover , the functions JSON array contains a list of events and actions , each of them characterized by the attributes type , name , path , method , and response , which are respectively the type of function ( event or action ) , the event / action name displayed to the users in the UI , the event / action path chained to the restUri URL to invoke the event / action , the type of API call ( e . g . , GET , POST ) , and the provider response format ( e . g . , JSON , XML ) . 12 https : / / www . microsoft . com / en / server - cloud / internet - of - things / azure - iot - suite . aspx . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 47 Fig . 14 . Service descriptor of the bracelet smart object . 9 . 2 . Layer Decoupling for Domain - Speciﬁcity The three layers illustrated above are strongly separated from each other , thus each element of the visual paradigm , the policy for rule management , and the service tech - nology as well can be modiﬁed without impacting on the others . In particular , the separation of the UI layer from the other two layers allowed us to develop the three different E - 5W composition paradigms by acting exclusively at the Interaction level . All the applications , however , exploit the same Logic and Service Layers . This separa - tion of concerns also enables the deﬁnition of multiple front - ends addressing different execution platforms , i . e . , different devices . The interaction layer , indeed , mainly acts as an interpreter of models that specify the rules . As already discussed in Ardito et al . [ 2014b ] and Cappiello et al . [ 2015 ] , such logic can be replicated also in form of apps running on mobile devices . This feature is in line with the ﬁndings reported in Cabitza et al . [ 2016 ] , which highlight the need of multi - platform ( i . e . , Web - based , Android , iOS ) tools supporting EUD for IoT . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 48 G . Desolda et al . 10 . CONCLUSIONS In this article , we presented our perspective on the EUD for the IoT , by showing how the deﬁnition of rich rules for smart object composition can be mastered by end users . This perspective mainly derived from user studies in which we analyzed the performance and satisfaction of a sample of users interacting with three prototypes of task - automation systems that we developed , and with IFTTT , one of the most popular platforms freely available online . Our prototypes are grounded on a new model for rule speciﬁcation that includes a rich set of operators for coupling multiple events and deﬁning temporal and spatial constraints on rule activation . Such prototypes take advantage of the experience that we gained in the last years in the development of EUD platforms for the mashup of heterogeneous Web resources . Smart object composition , indeed , has several commonalities with Web API mashups , being smart objects very often controlled and conﬁgured through remote Web services . The ﬁndings of the performed studies highlighted some features of composition paradigms that have to suit the expertise of end users . We also gained useful in - sights on how to organize a supporting composition platform so that to privilege the adaptability of the adopted interaction paradigm to accommodate domain - speciﬁc re - quirements . Although the study allowed us to identify a candidate paradigm among those analyzed , we are aware that this paradigm cannot be considered the only pos - sible solution , and that it would require adaptations when adopted in speciﬁc usage domains . With this respect , our current work is devoted to analyze the advantages and the limits of the best - evaluated composition paradigm in Home Automation and Am - bient Assisted Living ( AAL ) scenarios . As reported in this paper , we already conducted some preliminary studies with home - automation experts . Inspired by the results of the focus group results performed with home - automation experts , we are planning longi - tudinal and ﬁeld studies with other users’ categories , e . g . , non - frail elderly who need to be supported in an independent lifestyle and health preservation . Of course , we are aware that many aspects need to be considered to achieve full - ﬂedged platforms for the EUD of IoT systems . Besides introducing more sophisticated strategies for rule execution ( e . g . , managing rule execution at “relative time” with respect to the occurrence of past events ) , we want more in general to focus on the interoperability of connected devices . This is a problem that now limits the diffusion of IoT systems , and that is the object of many research projects . We are now investigating the adoption of ontologies to deﬁne a common ground for the communication among heterogeneous devices . We are also investigating different approaches for the detection and processing of events from sensor data , an aspect that is fundamental for the robustness of the platform . With this respect , we are considering pros and cons of Complex Event Processing engines versus speciﬁc data stream query languages . As far as the composition paradigm is concerned , we plan to further develop the E - Free prototype by taking into account the suggestions coming from the conducted user studies . We also want to improve the user control on rule execution . We will therefore focus on the visualization of the data generated and consumed by the different objects . The aim is to let the users understand , thus control , the system behavior ( i . e . , “what happens if I deﬁne a given rule” ) , to , in turn , improve the overall understanding of the rule deﬁnition process . To extend the capability of the platform to support EUD , we are also planning to introduce collaboration features , to let different stakeholder to cooperate for the deﬁni - tion of a smart space . These features are very interesting in domains that require the involvement of different stakeholders , such as the AAL for non - frail elderly we are cur - rently focusing on . In our past research , we already deﬁned a collaborative composition paradigm and some architectural extensions for the EFESTO platform [ Ardito et al . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 49 2014a ; Matera et al . 2013 ] . We will revise the achieved results to deﬁne customizations that are sensible to the speciﬁc domain . Our future work will also consider the addition and the initial conﬁguration of new objects into smart environments by non - technical users . Actually , our current prototype requires the intervention of expert programmers to deﬁne JSON - based object descrip - tors . We would like to understand whether EUD practices would ( at least partially ) enable non - technical users to perform this activity . This implies the identiﬁcation of a “component model , ” i . e . , a set of conceptual elements abstracting the underlying tech - nology , which can mediate between the technical features to be addressed to program smart objects ( the components ) and the interaction layer supporting the customization of objects by means of high - level constructs . Finally , it would be very interesting exploring alternative paradigms to allow users to conﬁgure smart object by means of their physicality , thus designing mechanisms based on object proximity as well as on hand and body gestures . ACKNOWLEDGMENTS We are grateful to Prof . Maria Francesca Costabile for her valuable and constant support . We also thank Prof . Rosa Lanzilotti for providing useful suggestions about the experimental study . Finally , we deeply thank the students of the SHELL post - master program for the hints they were able to provide for improving the composition paradigm . REFERENCES Apiant Inc . 2016 . We wired web . Retrieved from https : / / wewiredweb . com / . C . Ardito , P . Bottoni , M . F . Costabile , G . Desolda , M . Matera , and M . Picozzi . 2014a . Creation and use of service - based distributed interactive workspaces . Journal of Visual Languages & Computing 25 , 6 , 717 – 726 . C . Ardito , P . Buono , M . F . Costabile , R . Lanzilotti , and A . Piccinno . 2012a . End users as co - designers of their own tools and products . Journal of Visual Languages & Computing 23 , 2 , 78 – 90 . C . Ardito , M . F . Costabile , G . Desolda , R . Lanzilotti , M . Matera , A . Piccinno , and M . Picozzi . 2014b . User - driven visual composition of service - based interactive spaces . Journal of Visual Languages & Computing 25 , 4 , 278 – 296 . C . Ardito , M . F . Costabile , G . Desolda , R . Lanzilotti , M . Matera , and M . Picozzi . 2014c . Visual composition of data sources by end users . In Proceedings of the International Conference on Advanced Visual Interfaces ( AVI’14 ) . ACM , New York , NY , 257 – 260 . C . Ardito , M . F . Costabile , G . Desolda , M . Matera , A . Piccinno , and M . Picozzi . 2012b . Composition of situational interactive spaces by end users : A case for cultural heritage . In Proceedings of the Nordic Conference on Human - Computer Interaction ( NordiCHI’12 ) . ACM , New York , NY , 79 – 88 . Atooma . 2016 . Atooma mobile app . Retrieved from https : / / www . atooma . com / . L . Atzori , A . Iera , and G . Morabito . 2010 . The internet of things : A survey . International Journal of Computer and Computer Networks 54 , 15 , 2787 – 2805 . A . Bangor , P . Kortum , and J . Miller . 2008 . The system usability scale ( SUS ) : An empirical evaluation . International Journal of Human - Computer Interaction 24 , 6 , 574 – 594 . A . Bangor , P . Kortum , andJ . Miller . 2009 . DeterminingwhatindividualSUSscoresmean : Addinganadjective rating scale . Journal of Usability Studies 4 , 3 , 114 – 123 . B . R . Barricelli and S . Valtolina . 2015 . Designing for end - user development in the internet of things . In International Symposium on End - User Development ( IS - EUD’15 ) , Lecture Notes in Computer Science , Vol . 9083 , Cham , P . D´ıaz , V . Pipek , C . Ardito , C . Jensen , I . Aedo and A . Boden ( Eds . ) . Springer , 9 – 24 . C . Beckmann and A . Dey . 2003 . Siteview : Tangibly programming active environments with predictive visu - alization . In Adjunt Proceedings of the Conference on Ubiquitous Computing ( UbiComp’03 ) . 167 – 168 . Available at : http : / / www . ubicomp . org / ubicomp2003 / adjunct _ proceedings / proceedings . pdf . A . Bellucci , I . Aedo , and P . D´ıaz . 2014a . ECCE toolkit : Prototyping ubicomp device ecologies . In Proceedings of the International Conference on Advanced Visual Interfaces ( AVI’14 ) . ACM , New York , NY , 339 – 340 . A . Bellucci , P . D´ıaz , I . Aedo , and A . Malizia . 2014b . Prototyping device ecologies : physical to digital and vicev - ersa . In Proceedings of the International Conference on Tangible , Embedded and Embodied Interaction ( TEI’14 ) . ACM , New York , NY , 373 – 376 . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 50 G . Desolda et al . M . Blackstock and R . Lea . 2012 . IoT mashups with the WoTKit . In Proceedings of the Conference on the Internet of Things ( IOT’12 ) . IEEE Xplore , 159 – 166 . A . F . Blackwell , J . A . Rode , and E . F . Toye . 2009 . How do we program the home ? Gender , attention investment , and the psychology of programming at home . Interantional Journal of Human - Computer Studies 67 , 4 , 324 – 341 . V . Braun and V . Clarke . 2006a . Using thematic analysis Psychology Qualitative Research in Psychology 3 , 2 , 77 – 101 . V . Braun and V . Clarke . 2006b . Using thematic analysis in psychology . Qualitative Research in Psychology 3 , 2 , 77 – 101 . J . Brooke . 1996 . SUS - A quick and dirty usability scale . Usability Evaluation in Industry 189 ( 194 ) , 4 – 7 . J . Brooke . 2013 . SUS : A retrospective . Journal of Usability Studies 8 , 2 , 29 – 40 . M . Burnett and T . Kulesza . 2015 . End - user development in internet of things : We the people . In Proceedings of the Workshop on End User Development in the Internet of Things Era - CHI’15 ( EUDITE’15 ) . F . Cabitza , D . Fogli , R . Lanzilotti , and A . Piccinno . 2016 . Rule - based tools for the conﬁguration of ambient intelligence systems : A comparative user study . Multimedia Tools and Applications 75 ( 248 ) , 1 – 21 . F . Cabitza , D . Fogli , and A . Piccinno . 2014a . “Each to his own” : Distinguishing activities , roles and artifacts in EUD practices . In Smart Organizations and Smart Artifacts , Lecture Notes in Information Systems and Organisation , Vol . 7 , Cham , L . Caporarello , B . Di Martino and M . Martinez ( Eds . ) . Springer , 193 – 205 . F . Cabitza , D . Fogli , and A . Piccinno . 2014b . Fostering participation and co - evolution in sentient multimedia systems . Journal of Visual Languages & Computing 25 , 6 , 684 – 694 . C . Cappiello , M . Matera , and M . Picozzi . 2015 . A UI - Centric approach for the end - user development of multidevice mashups . ACM Transactions on the Web 9 , 3 , 1 – 40 . C . Cappiello , M . Matera , M . Picozzi , G . Sprega , D . Barbagallo , and C . Francalanci . 2011 . DashMash : A mashup environment for end user development . In Web Engineering ( ICWE’11 ) , Lecture Notes in Com - puter Science , Vol . 6757 , S . Auer , O . D´ıaz and G . Papadopoulos ( Eds . ) . Springer , Berlin , 152 – 166 . F . Casati . 2011 . How end - user development will save composition technologies from their continuing failures . In Proceedings of the International Symposium on End - User Development ( Is - EUD’11 ) , Lecture Notes in Computer Science , Vol . 6654 , M . F . Costabile , Y . Dittrich , G . Fischer and A . Piccinno ( Eds . ) . Springer , Berlin , 4 – 6 . F . Casati , S . Castano , and M . Fugini . 2001 . Managing workﬂow authorization constraints through active database technology . Information Systems Frontiers 3 , 3 , 319 – 338 . S . Ceri , F . Daniel , M . Matera , and F . M . Facca . 2007 . Model - driven development of context - aware web applications . ACM Transactions on Internet Technology 7 , 1 , 2 . M . Coronado and C . A . Iglesias . 2016 . Task automation services : Automation for the masses . IEEE Internet Computing 20 , 1 , 52 – 58 . M . F . Costabile , D . Fogli , P . Mussio , and A . Piccinno . 2007 . Visual interactive systems for end - user devel - opment : A model - based design methodology . IEEE Transactions on Systems , Man , and Cybernetics - Part A : Systems and Humans 37 , 6 , 1029 – 1046 . J . Coutaz and J . L . Crowley . 2015 . Learning about end - user development for smart homes by eating our own dog food . In Proceedings of the Workshop on End User Development in the Internet of Things Era - CHI’15 ( EUDITE’15 ) . F . Daniel and M . Matera . 2014 . Mashups - Concepts , Models and Architectures . Springer . F . Daniel , M . Matera , and G . Pozzi . 2008 . Managing runtime adaptivity through active rules : The bellerofonte framework . Journal of Web Engineering 7 , 3 , 179 – 199 . F . Daniel , M . Matera , and M . Weiss . 2011 . Next in mashup development : User - created apps on the web . IT Professional Magazine 13 , 5 , 22 . F . Daniel , J . Yu , B . Benatallah , F . Casati , M . Matera , and R . Saint - Paul . 2007 . Understanding UI integration : A survey of problems , technologies , and opportunities . IEEE Internet Computing 11 , 3 , 59 – 66 . A . De Angeli , M . Matera , M . F . Costabile , F . Garzotto , and P . Paolini . 2003 . On the advantages of a systematic inspection for evaluating hypermedia usability . International Journal of Human – Computer Interaction 15 , 3 , 315 – 335 . G . Desolda . 2015 . Enhancing workspace composition by exploiting linked open data as a polymorphic data source . In Intelligent Interactive Multimedia Systems and Services ( KES - IIMSS’15 ) , Smart Innovation , Systems and Technologies , Vol . 40 , Cham , E . Damiani , J . R . Howlett , C . L . Jain , L . Gallo and G . De Pietro ( Eds . ) . Springer , 97 – 108 . G . Desolda , C . Ardito , and M . Matera . 2016 . EFESTO : A platform for the end - user development of interactive workspaces for data exploration . In Rapid Mashup Development Tools ( ICWE’15 ) , Communications in Computer and Information Science , Vol . 591 , F . Daniel and C . Pautasso ( Eds . ) . Springer , 63 – 81 . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . Empowering End Users to Customize their Smart Environments 12 : 51 A . Dix , J . E . Finlay , G . D . Abowd , and R . Beale . 2003 . Human - Computer Interaction ( 3rd Edition ) . Prentice - Hall , Inc . G . Eisenhauer , M . Wolf , H . Abbasi , and K . Schwan . 2009 . Event - based systems : Opportunities and challenges at exascale . In Proceedings of the ACM International Conference on Distributed Event - Based Systems ( DEBS’09 ) . ACM , New York , NY , 1 – 10 . Crafty Apps EU . 2016 . Tasker . Retrieved from http : / / tasker . dinglisch . net / index . html . G . Fischer . 2009 . End - user development and meta - design : Foundations for cultures of participation . In Proceedings of the International Symposium on End - User Development ( Is - EUD’09 ) , Lecture Notes in Computer Science , Vol . 5435 , V . Pipek , M . B . Rosson , B . De Ruyter , and V . Wulf ( Eds . ) . Springer , Berlin , 3 – 14 . G . Fischer , E . Giaccardi , Y . Ye , A . Sutcliffe , and N . Mehandjiev . 2004 . Meta - design : A manifesto for end - user development . Communications of the ACM 47 , 9 , 33 – 37 . D . Fogli , R . Lanzilotti , and A . Piccinno . 2016a . End - user development tools for the smart home : A system - atic literature review . In Distributed , Ambient and Pervasive Interactions ( DAPI’16 ) , Lecture Notes in Computer Science , Vol . 9749 , Cham , N . Streitz and P . Markopoulos ( Eds . ) . Springer , 69 – 79 . D . Fogli , R . Lanzilotti , A . Piccinno , and P . Tosi . 2016b . AmI @ Home : A game - based collaborative system for smart home conﬁguration . In Proceedings of the International Conference on Advanced Visual Interfaces ( AVI’16 ) . ACM , New York , NY , 308 – 309 . D . Fogli and A . Piccinno . 2013 . Co - evolution of end - user developers and systems in multi - tiered proxy design problems . In End - User Development ( Is - EUD’13 ) , Lecture Notes in Computer Science , Vol . 7897 , Y . Dittrich , M . Burnett , A . Mørch and D . Redmiles ( Eds . ) . Springer , Berlin , 153 – 168 . G . Ghiani , M . Manca , and F . Patern ` o . 2015 . Authoring context - dependent cross - device user interfaces based on trigger / action rules . In Proceedings of the International Conference on Mobile and Ubiquitous Multi - media ( MUM’15 ) . ACM , New York , NY , 313 – 322 . elastic . io GMBH . 2016 . elastic . io . Retrieved from http : / / www . elastic . io / . T . R . G . Green and M . Petre . 1996 . Usability analysis of visual programming environments : A “cognitive dimensions” framework . Journal of Visual Languages & Computing 7 , 2 , 131 – 174 . LAB at Rockwell Group . 2016 . Spacebrew . Retrieved from http : / / docs . spacebrew . cc / . D . Guinard , V . Trifa , F . Mattern , and E . Wilde . 2011 . From the internet of things to the web of things : Resource - oriented architecture and best practices . In Architecting the Internet of Things , Berlin , D . Uckelmann , M . Harrison and F . Michahelles ( Eds . ) . Springer , 97 – 129 . IBM . 2016 . WebSphereJRules . Retrieved from https : / / www - 01 . ibm . com / software / integration / business - rule - management / jrules - family / . IFTTT . 2016 . IFTTT . Retrieved from https : / / ifttt . com / . WigWag Inc . 2016 . WigWag Smart Home . Retrieved from http : / / www . wigwag . com / . Zapier Inc . 2016 . Zapier . Retrieved from https : / / zapier . com / . W . Jennifer and C . Stefano . 1996 . Active Database Systems : Triggers and Rules for Advanced Database Processing . Morgan Kaufmann . JS _ Foundation . 2016 . Node - RED . Retrieved from http : / / nodered . org / . N . Juristo and A . M . Moreno . 2010 . Basics of Software Engineering Experimentation . Springer . T . Kubitza and A . Schmidt . 2015 . Towards a toolkit for the rapid creation of smart environments . In In - ternational Symposium on End - User Development ( IS - EUD’15 ) , Lecture Notes in Computer Science , Vol . 9083 , Cham , P . D´ıaz , V . Pipek , C . Ardito , C . Jensen , I . Aedo and A . Boden ( Eds . ) . Springer , 230 – 235 . J . Lewis and J . Sauro . 2009 . The factor structure of the system usability scale . In Human Centered Design ( HCD’09 ) , M . Kurosu ( Ed . ) , Lecture notes in computer science , Vol . 5619 . Springer , Berlin , 94 – 103 . S . Li , L . Xu , and S . Zhao . 2015 . The internet of things : A survey . Information Systems Frontiers 17 , 2 , 243 – 259 . H . Lieberman , F . Patern ` o , M . Klann , and V . Wulf . 2006a . End - user development : An emerging paradigm . In End User Development , Human - Computer Interaction Series , Vol . 9 , H . Lieberman , F . Patern ` o and V . Wulf ( Eds . ) . Springer , The Netherlands , 1 – 8 . H . Lieberman , F . Patern ` o , and V . Wulf . 2006b . End User Development . Springer . Itrios LLC . 2016 . itDuzzit . Retrieved from http : / / cloud . itduzzit . com / . SmarterApps Ltd . 2016 . AutomateIt - Smart Automation . Retrieved from http : / / automateitapp . com / . G . Lucci and F . Patern ` o . 2015 . Analysing how users prefer to model contextual event - action behaviours in their smartphones . In Proceedings of the International Symposium on End - User Development ( IS - EUD’15 ) , Lecture Notes in Computer Science , Vol . 9083 , Cham , P . D´ıaz , V . Pipek , C . Ardito , C . Jensen , I . Aedo and A . Boden ( Eds . ) . Springer , 186 – 191 . ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 . 12 : 52 G . Desolda et al . N . Marquardt , K . Hinckley , and S . Greenberg . 2012 . Cross - device interaction via micro - mobility and f - formations . In Proceedings of the ACM Symposium on User Interface Software and Technology ( UIST’12 ) . ACM , New York , NY , 13 – 22 . M . Matera , M . Picozzi , M . Pini , and M . Tonazzo . 2013 . PEUDOM : A mashup platform for the end user de - velopment of common information spaces . In Web Engineering - ICWE 2013 . Lecture Notes in Computer Science , Vol . 7977 . Springer , 494 – 497 . K . Maxwell . 2002 . Applied Statistics for Software Managers . Prentice Hall . M . R . Morris , A . Danielescu , S . Drucker , D . Fisher , B . Lee , M . C . Schraefel , and J . O . Wobbrock . 2014 . Reducing legacy bias in gesture elicitation studies . Interactions 21 , 3 , 40 – 45 . A . Namoun , T . Nestler , and A . Angeli . 2010a . Conceptual and usability issues in the composable web of software services . In International Conference on Web Engineering - ICWE 2010 Workshops - Revised Selected Papers , Lecture Notes in Computer Science , Vol . 6385 , F . Daniel and F . M . Facca ( Eds . ) . Springer , Berlin , 396 – 407 . A . Namoun , T . Nestler , and A . De Angeli . 2010b . Service composition for non - programmers : Prospects , problems , anddesignrecommendations . In ProceedingsoftheIEEEEuropeanConferenceonWebServices ( ECOWS’10 ) . IEEE Computer Society , Washington , DC , 123 – 130 . OpenRules , Inc . 2016 . OpenRules Business Rules - Time to Excel . Retrieved from http : / / openrules . com / ruleengine . htm . J . F . Pane , C . A . Ratanamahatana , and B . A . Myers . 2001 . Studying the language and structure in non - programmers’ solutions to programming problems . International Journal of Human - Computer Studies 54 , 2 , 237 – 264 . M . Prensky . 2001 . Digital natives , digital immigrants part 1 . On the Horizon 9 , 5 , 1 – 6 . Red Hat Inc . 2016 . Drools . Retrieved from http : / / www . drools . org / . J . A . Rode , E . F . Toye , andA . F . Blackwell . 2004 . Thefuzzyfeltethnography—understandingtheprogramming patterns of domestic appliances . Personal Ubiquitous Comput . 8 , 3 – 4 , 161 – 176 . Y . Rogers , H . Sharp , and J . Preece . 2015 . Interaction Design : Beyond Human - Computer Interaction . Wiley . M . B . Rosson and J . M . Carroll . 2003 . Scenario - based design . In The Human - computer Interaction Handbook , A . J . Julie and S . Andrew ( Eds . ) . L . Erlbaum Associates Inc . , 1032 – 1050 . D . Tetteroo , P . Markopoulos , S . Valtolina , F . Patern ` o , V . Pipek , and M . Burnett . 2015 . End - user development in the internet of things era . In Proceedings of the CHI’15 Extended Abstracts on Human Factors in Computing Systems ( EUDITE’15 ) . ACM , New York , NY , 2405 – 2408 . D . Tetteroo , I . Soute , and P . Markopoulos . 2013 . Five key challenges in end - user development for tangible and embodied interaction . In Proceedings of the ACM International Conference on Multimodal Interaction ( ICMI’13 ) . ACM , New York , NY , 247 – 254 . B . Ur , E . Mcmanus , M . P . Y . Ho , and M . L . Littman . 2014 . Practical trigger - action programming in the smart home . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( CHI’14 ) . ACM , New York , NY , 803 – 812 . S . Voida , M . Podlaseck , R . Kjeldsen , and C . Pinhanez . 2005 . A study on the manipulation of 2D objects in a projector / camera - based augmented reality environment . In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems ( CHI’05 ) . ACM , New York , NY , 611 – 620 . U . Wajid , A . Namoun , and N . Mehandjiev . 2011 . Alternative representations for end user composition of service - based systems . In End - User Development ( Is - EUD’11 ) , Lecture Notes in Computer Science , Vol . 6654 , M . F . Costabile , Y . Dittrich , G . Fischer and A . Piccinno ( Eds . ) , Springer , Berlin , 53 – 66 . wot . io . 2016 . Bip . io . Retrieved from https : / / bip . io / . V . Wulf , V . Pipek , and M . Won . 2008 . Component - based tailorability : Enabling highly ﬂexible software applications . International Journal of Human - Computer Studies 66 , 1 , 1 – 22 . M . Zancanaro , E . Not , D . Petrelli , M . Marshall , T . Van Dijk , M . Risseeuw , D . Van Dijk , A . Venturini , D . Cavada , and T . Kubitza . 2015 . Recipes for tangible and embodied visit experiences . In Proceedings of the Museums and the Web Conference ( MW’15 ) . Museums and the Web . N . Zang and M . B . Rosson . 2008 . What’s in a mashup ? And why ? Studying the perceptions of web - active end users . In Proceedings of the IEEE Symposium on Visual Languages and Human - Centric Computing ( VLHCC’08 ) , IEEE Computer Society , Washington , DC , 31 – 38 . Zipato . 2016 . Zipato . Retrieved from https : / / www . zipato . com / . Received April 2016 ; revised January 2017 ; accepted January 2017 ACM Transactions on Computer - Human Interaction , Vol . 24 , No . 2 , Article 12 , Publication date : April 2017 .