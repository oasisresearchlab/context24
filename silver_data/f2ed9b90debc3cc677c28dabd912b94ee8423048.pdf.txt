Celebrating diversity : Extending the World - Wide Web for cooperative work Richard Bentley , Thilo Horstmann , Klaas Sikkel German National Research Centre for Computer Science ( GMD FIT . CSCW ) ( [ bentley , t . horstmann , sikkel ] @ gmd . de ) Abstract : Despite the growth of interest in the field of CSCW , and the increasingly large number of systems which have been developed , it is still the case that few systems have been adopted for widespread use . To gain such adoption involves migrating systems which currently exist as research prototypes out of the laboratory and into the wider environment , requiring developers to address problems such as diversity in computer architectures—problems often not within the remit of research projects . The work described here is addressing such problems by extending a system which has already gained widespread adoption—namely the World - Wide Web—to provide basic facilities for inter - and intra - organisational cooperative work . Introduction It is now seven years since Jonathan Grudin wrote his classic paper on the failure of cooperative systems ( Grudin 1988 ) . Since that time , the level of interest in the field of CSCW has greatly increased , and an ever - expanding number of systems have been developed with the goal of supporting cooperative activity . These efforts have led to a greater understanding of the complexity of group work , and the implications of this complexity , in terms of the flexibility required of supporting systems , have driven much of the recent work in the field . Despite these advances , however , it is still the case that few cooperative systems are in widespread use , and most exist only as laboratory - based prototypes . 2 This situation is problematic for CSCW which emphasises the need to develop cooperative systems for their contexts of use . It is hard to assess with any degree of confidence the effectiveness or otherwise of the models and mechanisms employed when systems are not introduced , used or evaluated in their domains of application ( Bannon 1994 , Twidale et al . 1994 ) . Such deployment is certainly not trivial , as the diversity of machines , networks , levels of expertise , organisational concerns and so on which characterise an application domain are a far cry from the homogeneity of the average research laboratory , and yet it is this very diversity which makes cooperative work ‘situated’ and ‘contextualised’ . This suggests that a priority for cooperative systems development should be the eventual deployment in the domain of application , and that rather than ignoring problems of heterogeneity in such domains , these problems should be a central focus of the system design . This paper discusses a project at GMD which has such a focus . The “Basic Support for Cooperative Work” project ( BSCW ) is concerned with developing a set of basic facilities to support information sharing and activity awareness across the Internet . Our target user groups are organisations taking part in research and development projects involving a number of partners , possibly in different countries , who need to share and exchange information and engage in different forms of collaboration . Such organisations are characterised by heterogeneity , in terms of resources and computing infrastructures , user knowledge and expertise , and organisational concerns and procedures . Our focus is on explicitly recognising and supporting this heterogeneity by augmenting existing environments , rather than seeking to develop and deploy systems based on proprietary architectures which assume standardised practices . The focus of the BSCW project is therefore integration ; integration with existing systems and resources , and integration with existing work practice and procedure . To address the former , we are developing a collection of applications and tools that extend the World - Wide Web ( Berners - Lee et al . 1994 ) —a system already in widespread use and integrated with users’ environments . To address the latter , we are providing systems which make as few assumptions as possible regarding the activities being supported , and thus provide a medium for different forms of work rather than a mechanism for structuring that work ( Bentley and Dourish 1995 ) . We will illustrate both of these forms of integration to support diversity by describing one of the tools we have developed—namely , the BSCW shared workspace . The following section discusses in more detail the need to move cooperative systems out of the laboratory and into the field , and the problems this poses for developers in terms of integration with existing environments . We then describe our approach , which is attempting to address these problems by augmentation , rather than development of proprietary architectures and mechanisms . Subsequently , we explain our focus on information sharing and activity awareness as key areas for support , and show how such support underpins many of the forms of cooperative systems that are currently being constructed . The BSCW shared workspace is described to show how the cooperation facilities we are developing integrate with 3 the different systems and methods of working found in our target domain . We conclude with our plans for future development . Moving out of the laboratory Most of the cooperative systems which have been developed have been constructed in laboratories as research prototypes . This is unsurprising , as cooperative systems place novel requirements on underlying technology such as distributed systems and databases ( Rodden et al . 1992 ) , and many of the mechanisms already developed to support multi - user interaction do not address issues of cooperation , awareness and so on . The lack of suitable mechanisms to support cooperation has focused much of the work in the field on development of more appropriate techniques to address issues such as floor management , locking and data distribution , resulting in a range of experimental systems , ‘concept demonstrators’ and the like , which are tailored for the particular issues being investigated ( Bentley 1994 ) . The proprietary and incompatible system architectures which have resulted and the esoteric hardware and software configurations upon which many are developed inhibits the deployment of existing systems in their application domains . Although it might be argued that the problems would be addressed by a re - implementation of the systems , and that such problems are ‘implementation concerns , not research’ , it is our contention that the problems with deploying existing system prototypes in the field prevent , to a great extent , assessment of the effectiveness of the very models , concepts and mechanisms that these systems have been designed to investigate . The principal tenet of CSCW is that systems intended to support cooperative work need to be sensitive to the context in which they will be used . If we are to take this requirement seriously , it follows that at some stage in their development systems must be situated in their domains of application , and that this should be a focus for development projects . This is supported by recent calls for CSCW systems to be designed so that they can be examined in use ( Bannon 1994 ) , and for a shift towards more situated methods of system evaluation ( Twidale et al . 1994 , Randall 1993 ) . Addressing these concerns requires a migration of CSCW systems out of the laboratory and into the field . Such a migration is however fraught with difficulties . An obvious problem is the consequences of system ‘failure’ , both in terms of system reliability and the failure to effectively support the cooperation taking place . Even the most trivial problem with a system could mean loss of time and money in many domains of application , and in some domains the impact of such problems are potentially much worse . ( See for example the report on the introduction of an ambulance dispatch system , which exhibited a lack of reliability and failed to support necessary cooperation between control room operators—Page et al . 1993 ) . Such issues concerning system failure only become relevant , however , if we are in a position to deploy our systems in the first place . As we have pointed out , this is very rarely the case , as there is a huge 4 distinction between an exploratory prototype , developed in a research laboratory to investigate particular models or techniques , and a system that is suitable for introduction into an environment characterised by diverse systems , architectures , user requirements and organisational concerns . Ensuring system ‘reliability’ is a difficult and expensive process , but even after this process there are many ways in which systems can ‘fail’ . For example Bowers ( 1994 ) describes the introduction of a number of commercial CSCW products into an organisation within the UK central government . He gives examples of problems such as application incompatibility ( it was not possible to cut and paste text between particular applications ) , lack of resonation with existing work practice ( paper forms could not be duplicated by electronic ones as the fields the form software produced were not big enough ) and the different attitudes , levels of trust and requirements for support of the different users . Although Bowers is at pains to point out that his account should not be read as “another failure story” , it is clear that his analysis has many implications for the introduction of CSCW technology in the field . One interpretation of Bowers’ and others’ studies ( see for example Orlikowski 1992 , Dourish et al . 1992 ) is that systems must recognise and support the diversity within the environments in which they will be situated if they are to be used 1 . This implies that systems should integrate smoothly with the systems , applications and practices which are already in place . Unfortunately adapting systems developed as research prototypes to function in a heterogeneous environment and integrated with existing tools and practices is outside the remit and beyond the resources of most research projects . The exploratory and evolutionary approaches to design often employed , combined with a focus on particular issues , leads to system prototypes which require huge effort to transform them into applications that are suitable for deployment . We are trying to address the problems of introduction and assessment of systems into their contexts of use by shifting the development focus . Rather than concentrate on investigating a particular model or representation , we are promoting as our primary goal the integration of a set of basic facilities to support cooperative working with existing environments ; in other words , the ‘celebration of diversity’ , rather than prescribing homogeneity . We see this approach as complementing more exploratory investigations , and hope that in combination with these , we will be able to better assess the effectiveness of models and techniques that are being developed . We are constructing a number of tools which augment existing environments to support continued use of systems and methods of working that are already in place . One of these tools is a shared workspace system which extends the World - Wide Web architecture with cooperation - aware facilities . Before describing the support 1 . We do not enter here into the debate regarding the relationship between the introduction of new technology and the evolutionary or purposeful “re - engineering” of work practice . It is assumed that , for the purposes of gaining feedback on the suitability of particular mechanisms to support cooperation , issues of work re - engineering or re - design are secondary to actual deployment and use of our prototype systems . See Hughes et al . ( 1995 ) for an overview of this debate . 5 our shared workspace provides for diversity , it is useful to examine existing work in the area of cooperative information sharing , so we can ground the discussion that follows . Cooperation through information sharing The sharing of information is a central concern in CSCW , and underpins many of the types of applications which are currently under investigation . Technologies that support Workflow , meeting scheduling , collaborative authoring and so on all rely , at least in part , on some kind of information system which supports browsing and updating of information by multiple users . Of particular concern to CSCW is the means by which awareness of the activities of other users can be captured , propagated and represented , so that participants can understand these activities , providing a context in which their own activities are situated ( Dourish and Bellotti 1992 ) . It is this notion of providing awareness mechanisms to establish and maintain a common context that sets CSCW applications apart from more traditional multi - user information applications such as database systems ( Rodden et al . 1992 ) . The issues surrounding the provision of synchronous awareness to participants , that is , information about what people are doing now , have received a great deal of attention . Studies of synchronous document production ( e . g . Posner and Baecker 1992 ) , collaborative drawing ( e . g . Tang 1991 ) and so on have educated us to some of the needs of users engaged in this form of cooperative work . Indeed , much activity in the commercial arena is focusing on providing real - time audio and video communication facilities integrated with information sharing tools , and a number of applications have recently become available 2 . It has been noted that many group interactions may unfold over days , weeks or even longer ( Grudin 1988 ) , so it is perhaps surprising that much less work has been carried out regarding the needs of users engaged in asynchronous cooperative work . Such needs include the ability to access past events and activities and to trace the series of interactions which have contributed to the present state of affairs . Current user interface technology makes intensive use of colour and icons which signal that items of information have changed ( as in , for example , the DIVA virtual office environment—Sohlenkamp and Chwelos 1994 ) . However , this approach gives no help in determining the rationale for why such changes occurred or the context in which they took place , and awareness of these issues is crucial if participants are to judge the implications for their own activities ( Schmidt and Bannon 1992 ) . Email remains one of the most effective computing technologies to support asynchronous cooperative work , such as exchanging and co - authoring document drafts ( Beck and Bellotti 1993 ) . 2 Intel’s ProShareTM , Collabra’s CollabraShareTM and Trax Software’s TeamTalkTM , for example . ( All trademarks in this paper are acknowledged per product on their first appearance in the text and not noted thereafter . ) 6 The general need to support information sharing and awareness facilities has led some researchers to suggest that specialised services are needed which handle the sharing requirements of a variety of cooperative systems . Trevor et al . ( 1994 ) , for example , describe such a service based on object adapters which handles issues such as concurrent access , update - propagation and so on , on top of a collaboration - transparent distributed object system . While such a shared information service does seem to have a number of advantages , not least of which is the integration of tools and exchange of information in a common format , this approach requires adoption of a standard , distributed platform by all participants who wish to use such tools . Although such platforms are under development ( ANSA 1989 , OMG 1991 ) , the standardisation process will need some time before they can be adopted for general use . This approach is targeted specifically at supporting applications that might be developed in the future , rather than the realities of current user environments . There is certainly a need for better mechanisms to support information sharing with both synchronous and asynchronous awareness . This is a conclusion drawn by Bowers whose study of CSCW application deployment was discussed in the last section . Bowers highlights the problems users had with maintaining awareness of other users’ activities with the ‘CSCW Network’ that was introduced , and the effects of this on their own work : “The applications installed on the Network did not always incorporate mechanisms for alerting users to relevant events , and when they did , the mechanisms were not always informative . Accordingly , users often reported problems to do with their ‘awareness’ of what was happening on the Network and what the current state of their work was” ( Bowers 1994 : page 297 ) We have therefore developed the BSCW shared workspace system with an intent to support information sharing and better facilities to promote awareness . Instead of developing a general service to support the development of future applications , like Trevor et al . ( 1994 ) , we have taken the complementary approach of integrating our system with applications already in use . In the next section we describe how we have developed the shared workspace as an extension to the World - Wide Web , and highlight the support this offers for diversity in existing systems and applications . We go on to show how our workspace system also supports diversity in terms of different methods of working and organisational procedures . Information sharing and the World - Wide Web We are concerned with providing facilities to support cooperation between partners engaged in research and development projects . Given the emphasis of our approach on the extension of existing technology , this suggests that we should focus on the Internet as the only generally accessible and currently available enabling technology which is already in use in our application domain . Access to the Internet may however be facilitated by a variety of different platforms , networks , applications and protocols , and our users may have access to a wide diversity of resources . 7 The World - Wide Web ( WWW ) is a collection of systems , languages and so on which has been designed to support , rather than replace , the diversity that currently exists . WWW is an addressing system , network protocol , mark - up language and a client - server architecture that provides means for browsing , retrieving and making available information via the Internet . The development of sophisticated programs for viewing and searching information , the support many of these ‘clients’ provide for existing methods of data transfer like Gopher and FTP , and the ease with which new information can be made available have all contributed to a huge increase in the number of users and the general level of traffic on the Internet . The large user - base which the WWW has already gained makes it a prime target for extension to support collaboration . Indeed , a number of projects have already been started attempting to augment the WWW with conferencing facilities , voting systems , information filtering and so on . We believe that the WWW has attracted such a large user - base because of its support for multiple platforms , protocols and applications . We examine this support for heterogeneity in the next section and look at the problems with extending the WWW for cooperative information sharing and awareness . WWW and support for diversity There are now available a number of sophisticated WWW client programs , such as Mosaic and Netscape TM , offering graphical user interfaces and implementations which run on different platforms . Besides this cross - platform support , these clients allow users to continue using applications and tools that already exist on their machines . Providing support for such ‘helper applications’ is important for a number of reasons : • Users and organisations may have already invested a lot of time and effort in gaining expertise with existing applications . • Existing applications may provide functionality that users particularly like or is needed in order to carry out aspects of the work . • A limited set of applications may be available or mandated / approved for use in the organisation . • A large amount of important information may already exist which is stored in formats that are specific to particular application programs . As well as supporting different platforms and application programs , the system also supports different activities and user requirements : • Casual browsing of information and following of links to related material , introducing the possibility for serendipitous discoveries . • Regular checking of information that is updated from time to time , such as the reading of news groups . • More purposeful searching for information , such as product descriptions , for immediate viewing or saving for later examination . • Making organisational or personal information available to other consumers . 8 These characteristics contrast with those of many systems that have been developed to investigate models and mechanisms to support cooperative work . The range of incompatible applications and architectures which now exist are , to a large extent , unsuitable for integration with existing applications . In addition the flexibility of the WWW in terms of the different activities the system supports allows users with different requirements and levels of expertise to use the system successfully . This provision of a flexible medium , and the level of integration with existing systems , provides a firm base for developing collaboration technology for the context of use . Extending the WWW for cooperative sharing and awareness A number of systems are now commercially available to support electronic mail and applications to support synchronous video conferencing and the like are becoming available . But there is little support as yet for tools which support information sharing and activity awareness . Our focus on this area is therefore appropriate , and our selection of the WWW as a suitable platform allows integration of the tools we provide with existing mail and conferencing facilities . The tools we have developed in our first version of the shared workspace have been driven by an assessment of the lack of support provided by the WWW for the following services , which we feel underpin the development of a cooperative shared information space : • Addition of electronic documents to a single , shared space • Embodiment of users to determine who is doing what • Capture and recording of user activities within the shared space • Notification of activities to support awareness Addition of electronic documents : Current available WWW applications do not support the transmission of documents between client machines and servers . Presently the only means of making documents available is to store them in directories accessible to a local WWW server . This requires each organisation wishing to make information available to run their own server , and prohibits document retrieval , editing , and writing back to a remote file store . 3 Embodiment of users : Embodiment is necessary as the relevance for a user of an ‘event’ or an activity with respect to the shared workspace may heavily depend on who is the source . More generally , embodiment is necessary in cooperative systems to promote an awareness of the activities of other users , in order to determine the impact of these activities on your own working context . The 3 . Alternatively , one can think about using a standard FTP file server as a document store which can be accessed by Web clients for reading , and by standard FTP clients for sending documents ( as is currently common practice in many research projects ) . However , this results in different tools for interacting with the same shaerd space , and constrains the document store to all the limitations of FTP . 9 current state of the art in WWW gives little help for determining who is doing what 4 . Capture and recording of user activities : To provide facilities for synchronous and asynchronous awareness requires details of user activities within the workspace . Current logging mechanisms are provided purely to assist system administrators in maintaining WWW servers ; the information stored is oriented towards system - specific details and does not relate to the context in which it was produced . In order to provide users with appropriate information about workspace activities one needs a clear concept of what has to be recorded . Notification of activities : There are no built - in mechanisms for signalling changes . A particular problem is providing synchronous notifications , as the client - server architecture does not allow servers to contact executing clients to notify changes or cause them to reload a page of information which becomes out of date . A number of approaches to providing extensions to the WWW to support synchronous , or ‘peer - peer’ communication , have been reported ( see for example Frivold et al . 1994 , Woo and Rees 1994 ) , but these solutions tend to rely on particular platform and software configurations . Much of the development of the BSCW shared workspace has focused on these issues , in order to provide support for cooperation , and retain the advantages of the WWW platform in terms of support for diverse systems and applications . In the next section , we discuss the solutions we have adopted . We show how the choice of solution has been informed by the need to support another form of diversity ; that is , diversity of working practice , opportunistic and dynamic methods of working , and organisational procedures and concerns . The BSCW shared workspace Our current prototype of the BSCW shared workspace is essentially a central store for information that can be accessed over the Internet , and is augmented with basic facilities to support collaboration - aware information sharing . The design of the workspace is based upon the principles outlined above ; ( 1 ) usable in heterogeneous environments , ( 2 ) building on what is already there , rather than constructing something new , and ( 3 ) providing support for activities and practices which makes as few assumptions as possible about the nature of those activities and the way that people cooperate . The shared workspace is implemented as an extension to World - Wide Web client and server software , but to ensure compatibility with existing systems we have not 4 . Even to compute the identity of a remote user is problematic , since the current authentication mechanisms are crude . Some mechanisms rely on the installation of special client software ( an ‘ident daemon’ ) which is available on only a few platforms . 10 modified the client and server code itself ; rather , the additional server functionality has been realised through the Common Gateway Interface ( CGI ) provided for this purpose . All client functionality has been coded as stand - alone ‘helper applications’ which have been compiled to run on Sun ( SunOS and Solaris ) , PC ( Windows ) and Macintosh platforms . As a result , the system can be set up with minimal effort for groups of users , provided that everybody has an arbitrary ( form - supporting ) WWW client for one of the above platforms . Group members may use a variety of platforms but everybody can access the workspace and move objects to and from the local environment 5 . Moreover , a new participant can browse through a workspace ( if she has access permission ) and retrieve documents prior to having installed any additional software locally . Our helper applications that provide additional workspace functionality can be retrieved from the workspace ; thus the usual installation process of having to get , compile and configure the software before you can actually see what it does has been reversed . First experiences show that this lowers the threshold in getting people to use the system considerably . To access a workspace users log in using a simple password scheme . Views on the workspace are dynamically - generated WWW pages , and different views give users means to browse the workspace , add and retrieve documents , get information on documents and other users , find out about recent ‘interesting’ events and set personal preferences as to what is interesting . These facilities extend the WWW to address the issues discussed in the previous section , to provide a platform for cooperation which supports diverse systems and applications . Our solutions have been driven by the need to also support diversity in work practice and cooperation . To illustrate this approach , we now describe two specific examples of support provided by the BSCW shared workspace . Manipulating documents in the shared space Users can retrieve documents both for reading and for editing . In the latter case , the BSCW shared workspace provides a ‘policy - free’ approach to controlling access , so it is possible for many users to retrieve the same document for editing in parallel . Here we recognise that there are many different ways for groups to cooperatively edit a document , and we purposefully avoid prescribing one particular approach by embedding a specific access protocols . Instead , we recognise that social protocols are often used to negotiate access in such situations , and we should support these protocols rather than introduce new ones . 5 . A problem that we cannot solve , of course , is that not all application software , such as word processors and the like , will run on all platforms . But if a conversion program exists for the different data formats that applications use , appropriate helpers can be installed to convert different formats automatically . 11 Consider the following example , where Dik , Klaas and Thilo are cooperatively preparing a conference paper . Klaas requests the current version of the paper from the workspace for editing . The document is currently being edited , however , as far as the workspace server is informed . The system answers with the page shown in Figure 1 , which informs Klaas of the current situation . Perhaps Klaas did not know that his colleagues are working on the paper . In that case he might want to contact Thilo or Dik by whatever communication channel is most convenient . But it could also be that they have agreed to work on different sections , and there really isn’t a conflict . Or perhaps Thilo has some technical problem and cannot edit the document now , so he asked Klaas to carry on with it . The point is that the system has no way of knowing what occurs outside it ; rather than enforce some standardised practice , our approach is intended to support diversity and fluid transition in working styles . Figure 1 Supporting social ‘mechanisms’ of interaction This recognition that cooperation occurs both within and around a system gives a new emphasis to the support required . Rather than controlling and coordinating the interaction internally , our system attempts to support external social processes . Of course , such processes can break down ; misunderstandings can occur , and users 12 can ( inadvertently or purposefully ) act in conflict with social agreements . However , rather than implying a need for control , this suggests the role of the system should be to promote awareness of the current situation , and to ensure recoverability should social protocols break down . Thus we seek to provide a medium which supports diverse forms of activity , rather than a mechanism which attempts to control and regulate that activity . ( See Bentley and Dourish 1995 for an elaboration of these issues ) . Therefore our solutions to the problems of adding documents to a workspace , user embodiment and awareness have been flavoured by this emphasis on support for existing methods of working and social negotiation . To retrieve a document for editing , users can ‘check - out’ the document from the workspace . This action does not force the document to be checked - in at a later date , or prohibit ‘overwriting’ a document which has not been checked - out ; it merely allows the system to inform other users of the current situation . When documents are added to a workspace , the system preserves old versions rather than overwriting them . Thus should social protocols break down and ‘true’ inconsistency arise—that is , inconsistency from the users’ rather than the system’s point of view—the system provides means to recover . Notification of activities and events This emphasis on supporting existing practices and methods of working is carried through to the facilities the workspace provides to support event notification . A characteristic of many alerting mechanisms is a focus on signalling ‘something’ has happened , but not giving information on how important that something might be . In Bowers’ study , for example , he shows how such an alert mechanism provided by a conferencing tool disrupted the work , as users stopped what they were doing every time the system beeped ( Bowers 1994 ) . It is obvious that a more relevance - based awareness service would be useful , but it is not so clear how such a service can be provided . Following our line of thought , the relevance of an event for a user may depend on activities , responsibilities and so on both within and outside the system , and the system requires help if it is to effectively determine what should and should not be notified . A very crude service is provided by the ‘what’s new’ view of the workspace , listing recent additions , deletions and modifications of documents and workspace participants . In addition , users can indicate ‘interests’ in particular documents , activities and so on , which the system uses to determine the relevance of events for each user . For example , Figure 2 shows a page generated by the shared workspace which allows a user to register interests in a particular document , and configure how different activities concerning the document should be notified . The current system supports notification using electronic mail and / or indicators the next time a workspace page is retrieved . Which notification method is more appropriate is up to the user . 13 Figure 2 Registration of interests The support for event notification via regular e - mail is another vital aspect of connecting the workspace with the regular working environment . If it were not present , shared workspace event notification would be a ‘stand alone’ application in the sense that awareness of other users’ activities would only be notified upon entry to the workspace . One can think of various ways to signal events into the outside world , but the prime advantage of email is that it simply uses an already existing , widespread communication infrastructure . The basic mechanisms we have developed for the BSCW shared workspace are intended to support diversity across a broad spectrum of areas . Our integration with the WWW architecture addresses issues of diversity of systems and applications ; 14 our emphasis on supporting social protocols and work practice outside the system addresses issues of diversity of methods of working and organisational procedures . The following section discusses how we will build on these principles to develop more powerful facilities to support cooperative work . The future for BSCW Our immediate intentions are to assess the simple prototype system described above when it is integrated with a number of existing environments . We are engaged in an iterative approach to development , with an emphasis that intermediate versions of our tools are usable products . In this respect we follow Twidale et al . ( 1993 ) , who discuss the development of a system to support collaboration amongst software designers . The first version of their system was designed with a minimal set of features , with the emphasis on ensuring that the designers in their target user group could found the features useful before extra functionality was added . Similarly , in extending the tools developed in the BSCW project , we will take into account the experiences gained in practical use with the initial releases . The initial version of the BSCW shared workspace is currently being used to draft a research project proposal . The user groups 6 in this project will apply the workspace in a series of field trials . To complement this bottom - up approach we are also exploring a number of more powerful tools and facilities to support cooperation . While the WWW architecture affords a great deal of potential for basic collaboration facilities , the limitations of its client - server model , communications protocol and document mark - up language prohibit investigation of more advanced user interfaces and support for awareness . To this end , we are developing a WWW client and server which use the CORBA standard ( OMG 1991 ) to support peer - peer level communication , allowing servers to initiate contact with our client to provide a more synchronous and richer notification mechanism within the workspace itself . A more detailed discussion of the facilities we are investigating can be found in ( Bentley and Dourish 1995 ) . Although the approach we are taking with this development is more exploratory , it is still a requirement that our more advanced system is integrated with users’ current environments . To this end , our new client will support the communications protocol used by existing WWW clients to allow integration with existing servers , and our augmented server will support both existing protocols and that described by the CORBA standard . In addition to these activities , we are investigating tools for flexible workspace management , access , and automatic translation of documents between application formats . 6 . A “network of excellence” and an ESPRIT basic research project , international consortia in the fields of space research and chemical industry and an ISO standards committee . 15 The proposed extensions are , of course , tentative . The characteristics of the final system will be shaped by the experiences we gain from evaluation of initial versions of the system in use . Although we have a range of possible extensions in mind , if feedback from our user groups takes our work in a different direction then we will focus our efforts accordingly . If such were to happen , it would prove the strength of our approach to developing usable CSCW systems , which address users’ real needs for support . Conclusions To develop more usable CSCW systems necessitates analysing systems in their contexts of use . This requires systems which recognise and support diversity in current environments , in terms of existing technology , working practices , and organisational concerns . This poses a range of problems when cooperative systems are developed as exploratory prototypes in laboratories , where issues of heterogeneity are rarely addressed . We have described a project where assessment of systems in use is a goal , and therefore supporting diversity is a central theme . Our approach has been to augment the World - Wide Web with basic facilities for cooperative work , allowing continued use of different systems and flexible support for different work practice . Extension of these mechanisms will be informed by trials of our initial versions to support real activities in our application domain . We see this approach as vital if we are to develop more sophisticated systems , and construct CSCW applications that are more effective in supporting cooperative work . Acknowledgements The BSCW workspace was implemented by Bernd Pollak . Paul Dourish , David England and Peter Hoschka gave helpful comments on earlier drafts of this paper . References ANSA ( 1989 ) : ANSA : An Engineer’s Introduction to the Architecture , Projects Management Limited , Poseidon House , Castle Park , Cambridge , CB3 0RD , UK , November 1989 . Bannon , L . ( 1994 ) : Use , design and evaluation : steps towards an integration , in Proceedings of the International Workshop on the Design of CSCW and Groupware systems , in D . Shapiro et al . ( eds ) , The Design of Computer Supported Cooperative Work and Groupware Systems , Elsevier Science , Amsterdam , 1994 . Beck , E . and Bellotti , V . ( 1993 ) : Informed opportunism as strategy : Supporting coordination in collaborative writing , in Proceedings of ECSCW’93 , Milan , Kluwer Academic Publishers , 13 - 17 Sept . 1993 , pp 233 - 248 . 16 Bentley , R . ( 1994 ) : Flexible architectures for CSCW system support , position paper for CSCW’94 architecture workshop , to appear in the SIGOIS Bulletin . Bentley , R . and Dourish , P . ( 1995 ) : Medium versus mechanism : Supporting collaboration through customisation , paper submitted to ECSCW’95 , Stockholm . Berners - Lee , T . , Cailliau , R . , Luotonen , A . , Frystyck Nielsen , H . and Secret , A . ( 1994 ) : The World - Wide Web , in Communications of the ACM , 37 ( 8 ) , August 1994 , pp . 76 - 82 . Bowers , J . ( 1994 ) : The work to make the network work : Studying CSCW in action , in Proceedings of CSCW’94 , Chapel Hill , ACM Press , 22 - 26 Oct . 1994 , pp 287 - 298 . Dourish , P . and Bellotti , V . ( 1992 ) : Awareness and coordination in shared workspaces , in Proceedings of CSCW’92 , Toronto , ACM Press , 31 Oct . - 4 Nov . 1992 , pp 107 - 114 . Dourish , P . , Bellotti , V . , Mackay , W . , and Ma , C . ( 1993 ) : Information and context : Lessons from a study of two shared information systems , in Proceedings of COOCS’93 , Milpetas , California , 1 - 4 Nov . 1993 , pp 42 - 51 . Frivold , T . , Lang , R . and Fong , M . ( 1994 ) : Extending WWW for synchronous collaboration , in Proceedings of the Second International WWW Conference , Chicago , available on - line from http : / / www . ncsa . uiuc . edu / SDG / IT94 / Proceedings / CSCW / frivold / frivold . html Grudin , J . ( 1988 ) : Why CSCW applications fail : problems in the design and evaluation of organisational interfaces , in Proceedings of CSCW’88 , Portland , ACM Press , Sept . 1988 , pp 85 - 93 . Hughes , J . , Randall , D . and Rouncefield , M . ( 1995 ) : Business Process Re - engineering and Ethnomethodologically - informed ethnography , paper submitted to ECSCW’95 , Stockholm . OMG ( 1991 ) , The Common Object Request Broker : Architecture and Specification , Object Management Group , document number 1991 . 12 . 1 , Revision 1 . 1 , December 1991 . Orlikowski , W . ( 1992 ) : Learning from Notes : Organizational issues in groupware implementation , in Proceedings of CSCW’92 , Toronto , ACM Press , 31 Oct . - 4 Nov . 1992 , pp 362 - 369 . Page , D . , Williams , P . and Boyd , D . ( 1993 ) : Report of the Inquiry into the London Ambulance Service , ISBN . 0 905133 70 6 , Communications Directorate , South West Thames Regional Health Authority , London , Feb . 1993 . Randall , D . ( 1993 ) : Perspective on evaluation : Putting your money where your mouth is , presented at the UK CSCW SIG , September 1993 . Rodden , T . , Blair , G . and Mariani , J . ( 1992 ) : Supporting cooperative applications , in Computer Supported Cooperative Work , 1 , 1992 , pp 41 - 67 . Schmidt , K . and Bannon , L . ( 1992 ) : Taking CSCW seriously : supporting articulation work , in CSCW : an International Journal , 1 , 1 - 2 , pp 7 - 40 , 1992 . Sohlenkamp , M . and Chwelos , G . ( 1994 ) : Integrating communication , cooperation and awareness : the DIVA virtual office system , in Proceedings of CSCW’94 , Chapel Hill , ACM Press , 22 - 26 Oct . 1994 , pp 331 - 343 . Tang , J . ( 1991 ) : Findings from observational studies of collaborative work , in Int . J . Man - machine Studies , 34 , pp 143 - 160 , 1991 . Trevor , J , Rodden , T . and Mariani , J . ( 1994 ) : The use of adapters to support cooperative sharing , in Proceedings of CSCW’94 , Chapel Hill , ACM Press , 22 - 26 Oct . 1994 , pp 219 - 230 . Twidale , M . , Rodden , T . and Sommerville , I . ( 1993 ) : The Designer’s Notepad : Supporting and understanding cooperative design , in Proceedings of ECSCW’93 , Milan , Kluwer Academic Publishers , 13 - 17 Sept . 1993 , pp 93 - 108 . Twidale , M . , Randall , D . and Bentley , R . ( 1994 ) : Situated evaluation for cooperative systems , in Proceedings of CSCW’94 , Chapel Hill , ACM Press , 22 - 26 Oct . 1994 , pp 441 - 452 . Woo , T . and Rees , M . ( 1994 ) : A synchronous collaboration tool for the World - Wide Web , in Proceedings of the Second International WWW Conference , Chicago , available on - line from http : / / www . ncsa . uiuc . edu / SDG / IT94 / Proceedings / CSCW / rees / SynColTol . html