Continuous Time Individual - Level Models of Infectious Disease : EpiILMCT Waleed Almutiry Qassim University Vineetha Warriyar K V Uinversity of Calgary Rob Deardon University of Calgary Abstract This paper describes the R package EpiILMCT , which allows users to study the spread of infectious disease using continuous time individual level models ( ILMs ) . The package provides tools for simulation from continuous time ILMs that are based on either spatial demographic , contact network , or a combination of both of them , and for the graphical summarization of epidemics . Model ﬁtting is carried out within a Bayesian Markov Chain Monte Carlo ( MCMC ) framework . The continuous time ILMs can be implemented within either susceptible - infected - removed ( SIR ) or susceptible - infected - notiﬁed - removed ( SINR ) compartmental frameworks . As infectious disease data is often partially observed , data uncertainties in the form of missing infection times - and in some situations missing removal times - are accounted for using data augmentation techniques . The package is illustrated using both simulated and an experimental data set on the spread of the tomato spotted wilt virus ( TSWV ) disease . Keywords : EpiILMCT , infectious disease , individual level modelling , spatial models , con - tact networks , R . 1 . Introduction Innovative mathematical and mechanistic approaches to the modelling of infectious dis - eases are continuing to emerge in the literature . These can be used to understand the spread of disease through a population - whether homogeneous or heterogeneous - and enable researchers to construct predictive models to develop control strategies to disrupt disease transmission . For example , Deardon et al . ( 2010 ) introduced a class of discrete time individual - level models ( ILMs ) which incorporate population heterogeneities by modelling the transmission of disease given various individual - level risk factors . The general frame - work of ILMs have already been successfully applied to a broad range of epidemic data , eg . , the 2001 UK foot - and - mouth outbreak ( Deardon et al . 2010 ; Deeth and Deardon 2016 ; Malik et al . 2016 ) , tomato spotted wilt virus ( TSWV ) disease ( Pokharel and Deardon 2014 , 2016 ) , the spread of 1 - 18 - 4 genotype of the porcine reproductive and respiratory syndrome a r X i v : 2006 . 00135v1 [ s t a t . A P ] 30 M a y 2020 2 Continuous Time ILMs of Infectious Disease : EpiILMCT in Ontario swine herds ( Kwong et al . 2013 ) , and inﬂuenza transmission within households in Hong Kong during 2008 to 2009 and 2009 to 2010 ( Malik et al . 2014 ) . Equivalent contin - uous time ILMs which capture the complex interactions between susceptible and infected individuals through spatial and contact networks can also be considered . The inference and ﬁtting of such models is generally considered within a Bayesian framework using Markov chain Monte Carlo ( MCMC ) . However , infectious disease epidemiologists have previously found it diﬃcult to apply these individual - level models to real life problems . This is due to a dearth of readily available software products . The applicability of the aforesaid continuous time ILMs is implemented in an R ( R Core Team 2019 ) package , EpiILMCT ( Almutiry et al . 2020 ) and is avail - able from Comprehensive R Archive Network ( CRAN ) at https : / / CRAN . R - project . org / package = EpiILMCT . In this article , we describe the package , EpiILMCT which allows users to simulate and ﬁt epidemic data using distance - and / or network - based models ( Bifolchi et al . 2013 ; Deardon et al . 2010 ; Jewell et al . 2009 ) , and can also incorporate risk factors associated with both susceptible and infectious individuals . EpiILMCT also uses data aug - mentation techniques to carry out inference when the infection and / or removal times are unknown or censored , as is usually the case . To the extent of our knowledge , this feature is not available in any existing R packages that permit epidemic data analysis and mod - elling . Tools for the graphical summarization of epidemic data sets and outcomes are also provided . The statistical inferences made in EpiILMCT are set in a Bayesian framework and are carried out using Markov Chain Monte Carlo ( MCMC ) . The main aim here is to provide a fast implementation of continuous time ILMs under diﬀerent epidemic modelling frameworks . Because of the computationally intensive nature of MCMC for such models , we have coded functions , including MCMC , in Fortran to speed up computation . There are several R packages that permit a range of diﬀerent modelling tools that allow for ﬁtting spatial - temporal epidemic data . For example , the packages splancs ( Rowlingson and Diggle 2017 ) , and lgcp ( Taylor et al . 2013 , 2015 ) provides methods for analyzing epidemic data as spatial and space - time point patterns . Also , the package surveillance ( Meyer et al . 2017 ) implements a spatio - temporal point process model for epidemic data through the function twinstim . Other packages ﬁt a range of autocorrelation regression spatio - temporal models ( e . g . , CARBayesST ( Lee et al . 2018 ) , spdep ( Bivand et al . 2013 ; Bivand and Piras 2015 ) , and spTimer ( Bakar and Sahu 2017 , 2015 ) ) . Further packages are mentioned in the Handling and Analyzing Spatio - Temporal Data CRAN task view ( Pebesma 2018 ) . The R Epidemics Consortium ( 2018 ) provides further useful resources for disease outbreak analysis related R software packages . However , in each case , the functionality ( e . g . , models available ) of the packages above is quite diﬀerent to that of EpiILMCT . The models of the EpiILMCT package are “mechanis - tic” in that they attempt to more directly model the mechanisms of transmission between individuals . Speciﬁcally , they take into account the spatial interactions between individuals with diﬀering disease status ( e . g . , susceptible , infected , notiﬁed , removed ) at continuous Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 3 time points of the epidemic process . Those spatial interactions between susceptible and infectious individuals are incorporated as distance - based eﬀects on the infectivity rate of individuals through an infection kernel function ( power - law or Cauchy ) . The infectivity rates can also depend upon various susceptibility and transmissibility covariates at the individual level . Additionally , and of key importance , none of the aforementioned pack - ages account for uncertainty in the event times using Bayesian data augmentation MCMC method . There are several R packages that provide for the visualization , simulation and modelling the spread of epidemics through networks . The package EpiModel ( Jenness et al . 2018 ) allows epidemic simulation from mathematical models of infectious disease through stochas - tic contact networks based on exponential - family random graph models ( ERGMs ) . Some packages assume observed contact network or networks when ﬁtting the speciﬁed model ; for example , ergm ( Handcock et al . 2017 ; Hunter et al . 2008 ) , Bergm ( Caimo and Friel 2014 ) , and hergm ( Schweinberger et al . 2018 ) . Those packages implement Bayesian analyses for ﬁtting exponential - family transmission network models to observed contact network data . A recently developed package , epinet ( Groendyke and Welch 2018 ) , allows users to infer transmission networks from time - series epidemic data by modelling the contact network using a generalization of the ERGMs . This package make use of time - series epidemic data as the input assuming unknown contact network in their functionality , and producing pa - rameter estimates of the epidemic model as well as the contact and transmission networks . The transmission model can contain various covariates that captures important features ( summary statistics ) of the contact network as well as epidemic transmission . However , once again these packages have diﬀerent approaches to that implemented in EpiILMCT . We focus here on incorporating a contact network as a covariate in the imple - mented ILMs in EpiILMCT . The response in the ILMs is the event ( e . g . , infection ) time , rather than the transmission network ( the transmission network can be inferred later via posterior predictive simulation , of course , but we do not address this here ) . This is diﬀerent to epinet , for example , which models the transmission network directly . The EpiILMCT package allows for any pre - user speciﬁed contact networks , including various special cases such as spatial or random unweighted ( binary ) ( un ) directed contact networks or weighted contact network . As both spatio - temporal and contact network - based mechanisms can be key to under - standing the dynamics of infectious disease spread , the ILMs in EpiILMCT allow for the incorporation of both contact network and distance - based eﬀects jointly in the infectiv - ity rate of individuals . None of the aforementioned packages have this feature in their functionalities . The use of individual level data in more mechanistic epidemic models has been implemented in only a few other R packages . The most established of these is surveillance ( Salmon et al . 2016 ; Meyer et al . 2017 ) , a package for temporal and spatio - temporal disease modelling . It provides tools for outbreak detection in routinely collected surveillance data , as well as 4 Continuous Time ILMs of Infectious Disease : EpiILMCT a range of models for infectious disease data . The most closely related model in surveil - lance to those of EpiILMCT is the additive endemic - epidemic multivariate temporal point process model . These models are implemented in the twinSIR function for modelling the susceptible - infectious - recovered ( SIR ) event history of a ﬁxed population in continuous time using individual level data . However , not only is the underlying model framework diﬀerent to that considered in the EpiILMCT package , but the twinSIR function does not allow for uncertainty in event times to be taken into account via data augmentation techniques . The function does not allow for only the epidemic terms of the model to be con - sidered , as can be done in EpiILMCT ; both endemic ( e . g . , seasonal ) and epidemic terms must be included in the analysis . In addition , the distance kernel used in the epidemic part of the twinSIR function is represented by a linear combination of non - negative basis functions and is thus diﬀerent from the distance kernels used in the EpiILMCT package . The EpiILM package ( Warriyar KV and Deardon 2018 ) that has recently been made avail - able in R , provides similar utility to EpiILMCT , but for discrete - time ILMs . The models it contains provide options to include susceptible individual covariate information , as well as a choice to describe population heterogeneity . However , the package is limited to discrete - time distance - based or network - based infection kernels and requires known event histories ( i . e . , there is no data augmentation feature ) . As stated previously , inference for the models of EpiILMCT is carried out in a Bayesian MCMC framework . Although there are packages available in R to implement MCMC algorithms such as MCMCpack ( Martin et al . 2011 ) and adaptMCMC ( Scheidegger 2018 ) , all are based on random walk Metropolis - Hastings ( M - H ) algorithm . The data augmented MCMC algorithm used in the EpiILMCT package to ﬁt various models uses random walk and independence sampler ( within Gibbs ) steps within a M - H algorithm . The independence sampler algorithm in our package appears to be essential for updating the missing data eﬃciently ( event times and infectious periods ) , and the authors having not found it possible to achieve well - mixing MCMC chains if purely random walk M - H algorithms are used ( even if tuned adaptedly ) . Our main purpose of developing this package is to make the use of continuous time ILMs available to epidemiologists and statisticians , through R , one of the most commonly used statistical software packages . Overall , EpiILMCT oﬀers greatly increased ﬂexibility for analyzing complex disease data . The remainder of this paper is laid out as follows . In the next section , we describe the general continuous individual - level model implemented in EpiILMCT . We also discuss the diﬀerent infection kernel functions implemented in the package . Sections 3 and 4 discuss the functions contained within the package and the un - derlying Bayesian inference , respectively . Section 5 illustrates the application of EpiILMCT to simulated and real data , while Section 6 concludes the paper with a short summary of the software package and its implications . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 5 2 . Model The EpiILMCT package allows for the implementation of continuous time equivalents , and extensions , of the discrete - time individual - level models ( ILMs ) of Deardon et al . ( 2010 ) . The compartmental frameworks considered are the susceptible - infectious - removed ( SIR ) and susceptible - infectious - notiﬁed - removed ( SIN R ) . In both frameworks , each individual is assumed to be in one of these states at any point in time , t ∈ R + . In the SIR framework , infected individuals transition between states , susceptible to infectious and from infectious to removed . Individuals are assumed to be in the susceptible ( S ) state until they become infected at which point they become immediately infectious ( I ) , then being able to transmit the disease for the duration of their infectious periods before entering the removed ( R ) state . In the SIN R framework , infectious individuals are assumed to move from the infectious state ( I ) to a notiﬁed ( N ) state . The latter represents a state in which individuals have been identiﬁed as having the disease , and may be subjected to various restrictions ( e . g . , government - imposed movement constraints in the 2001 UK Foot - and - Mouth disease ( FMD ) outbreak ) . The N - state infectivity rate is often assumed to be lower than that of I - state . As infectious individuals enter the R - state , they are removed from the infectious population ( e . g . , because of recovery and acquired immunity , death or quarantine ) and from thereon play no role in transmitting the disease . A full epidemic history consists of all transition event times for all individuals , and deﬁnes the state of all individuals at each point in time . For example for the SIN R framework , S ( t ) , I ( t ) , N ( t ) and R ( t ) at time t for t ∈ [ 0 , t obs ] is deﬁned by all infection , notiﬁcation and removal times . Here , t obs is the maximum removal time ; i . e . , the time that the last notiﬁed individual enters the removed state . We assume that each susceptible individual j at time t has an infectivity rate 1 with a given infectious individual i : λ ij ( t ) = (cid:26) λ − ij ( t ) i ∈ I ( t ) , j ∈ S ( t ) λ + ij ( t ) i ∈ N ( t ) , j ∈ S ( t ) , ( 1 ) where λ − ij ( t ) = Ω S ( j ) Ω T ( i ) κ ( i , j ) λ + ij ( t ) = γ Ω S ( j ) Ω T ( i ) κ ( i , j ) , γ > 0 , where Ω S ( j ) and Ω T ( i ) are the susceptibility and transmissibility functions , respectively . They are deﬁned as : Ω S ( j ) = SX φ . j and Ω T ( i ) = TZ ξ . i , φ , ξ > 0 , where S and T are the ( coeﬃcient ) parameter vectors of the susceptibility and transmissi - bility covariates with sizes equal to the number of susceptibility ( p S ) and transmissibility 1 Note that , technically the infectivity rates are conditioned upon the past epidemic history , so might be written λ ij ( t | H t ) where H t is the epidemic history up to time t . However , for the sake of brevity and simplicity we have dropped the conditioning from the notation . 6 Continuous Time ILMs of Infectious Disease : EpiILMCT ( p T ) covariates , respectively ; X φ . j and Z ξ . i are the j th and i th columns of the susceptibility and transmissibility risk factor matrices X φ ∈ R + p S × n and Z ξ ∈ R + p T × n , respectively ; and φ and ξ are vectors of the power parameters of the susceptibility and transmissibility func - tions with sizes equal to p S and p T , respectively . Note that , X φ and Z ξ are constrained to be positive . These power parameters allow for non - linearity between the susceptibility and transmissibility risk factors and the infection rate ( Deardon et al . 2010 ) . The notiﬁcation eﬀect parameter γ is used to measure the risk of infection after notiﬁcation that can be reduced or increased depending on the disease type . For example , the transmissibility has been observed to increase after symptoms in SARS ( Pitzer et al . 2007 ) , whereas , it can be lower for the 2001 UK FMD ( Jewell et al . 2009 ) . The latter stated this eﬀect parameter in their general model as a control measure parameter that accounts only the reduction in the risk of infection . In the case of γ = 1 , notiﬁcation has no eﬀect on infectivity . So , the total rate of infectivity of each susceptible individual j at time t is given by : λ j ( t ) =   (cid:88) i ∈N − ( t ) λ − ij ( t ) + (cid:88) i ∈N + ( t ) λ + ij ( t )   + (cid:15) ( j , t ) , ( 2 ) where N − ( t ) is the set of infectious individuals at time t who have been infected but have not reached the notiﬁed state ; and N + ( t ) is the corresponding set for notiﬁed individuals ( Jewell et al . 2009 ) . The nomenclature is the same for the SIR framework , but without the N ( t ) state , there is not need to compartmentalize infectious individuals into pre - and post - notiﬁcation sets . Therefore , the total rate of infectivity of each susceptible individual j at time t is given by : λ j ( t ) =   (cid:88) i ∈I ( t ) λ − ij ( t )   + (cid:15) ( j , t ) , ( 3 ) where I ( t ) is the set of infectious individuals at time t ( i . e . , they have been infected , but not yet removed ) . The infectivity rate λ j ( t ) also contains a spark function that is denoted by (cid:15) ( j , t ) which allows for random infections otherwise unexplained by the model . This might represent , for example , the infection of a susceptible individual from a source outside of the observed population . In this model , we ﬁx the spark term (cid:15) ( j , t ) such that (cid:15) ( j , t ) = (cid:15) ; (cid:15) ≥ 0 . The infection kernel κ ( i , j ) represents shared risk factors between pairs of infected and susceptible individuals . In the EpiILMCT package we consider three kernel types : distance - based , network - based , and combined distance and network - based . Two sub - types of distance - based kernel are also considered : Cauchy and power - law . The infection kernel functions are given in Table 1 . In the distance - based ILMs , the kernel function is based on the dis - tances d ij between individuals generally , but not always , spatial Euclidean distance . In the Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 7 Model Kernel type Kernel function Distance - based ILMs Power - law κ ( i , j ) = d − β ij , β > 0 Cauchy κ ( i , j ) = β d 2 ij + β 2 , β > 0 Network - based ILMs Unweighted , undirected κ ( i , j ) = c ij , c ij = 0 or 1 Weighted κ ( i , j ) = w ij , w ij ∈ [ 0 , ∞ ) Power - law κ ( i , j ) = d − β 1 ij + β 2 c ij Combined distance and network - based ILMs κ ( i , j ) = d − β 1 ij + β 2 w ij Cauchy κ ( i , j ) = β 1 ( d 2 ij + β 21 ) + β 2 c ij κ ( i , j ) = β 1 ( d 2 ij + β 21 ) + β 2 w ij , β 1 , β 2 > 0 Table 1 : Types of kernel functions that are applied in the EpiILMCT package for ﬁtting continuous time ILMs . network - based ILMs , the kernel function is based on the connections between individuals in a contact network that are represented by binary connections c ij = 0 or 1 , or weighted connections w ij ∈ [ 0 , ∞ ) . In the combined ILMs the kernel consists of a linear function of both . 2 . 1 . Likelihood function We label the m infected individuals i = 1 , 2 , . . . , m with corresponding infection ( I i ) and removal ( R i ) times such that I 1 ≤ I 2 ≤ · · · ≤ I m . The N − m individuals who remain uninfected after t obs are labeled i = m + 1 , m + 2 , . . . , N with I i = R i = ∞ . We then denote infection and removal time vectors for the population as I = { I 1 , . . . , I m } and R = { R 1 , . . . , R m } , respectively . We assume that infectious periods follow a gamma dis - tribution with a ﬁxed shape δ a and rate δ b , δ = ( δ a , δ b ) ( Jewell et al . 2009 ) . The likelihood function can be divided into two independent components : the infectious and the removed components . As we assumed earlier that each susceptible individual j has a total infectivity rate λ j ( I j ) ( their total speciﬁc infectious pressure ) at the time of being infected ( I j ) from infectious individuals i ∈ I ( I j ) , the infectious component under the SIR continuous time 8 Continuous Time ILMs of Infectious Disease : EpiILMCT ILMs can be written as : L 1 = m (cid:89) j = 2   (cid:15) + (cid:88) i : I i < I j ≤ R i λ − ij ( I j )   × exp   − (cid:90) t obs I 1   (cid:88) i ∈S ( u ) (cid:15) + (cid:88) i ∈I ( u ) (cid:88) j ∈S ( u ) λ − ij ( u − I i )   du   where the product term represents the total speciﬁc infectious pressure that each infected individual receives from infectious individuals at the time of being infected , and the expo - nential integral represents the total person - to - person infectious pressure during the course of the epidemic . The removed component then contains the contribution of the infectious periods to the likelihood function via their densities . As the infectious period of an infected individual i ( D i = R i − I i ) is independent of others , the removed component is simply : L 2 = m (cid:89) i = 1 f ( D i ; δ ) The likelihood function of the general SIR continuous time ILMs can then be formed by combining the infectious and removal parts given as follows : L ( I , R | θ ) = L 1 × L 2 = m (cid:89) j = 2   (cid:15) + (cid:88) i : I i < I j ≤ R i λ − ij ( I j )   exp   − m (cid:88) i = 1   N (cid:88) j = 1 ( ( R i ∧ I j ) − ( I i ∧ I j ) ) λ − ij ( I j )     × exp (cid:32) − (cid:15) N (cid:88) i = 1 [ ( t obs ∧ I i ) − I 1 ] (cid:33) m (cid:89) i = 1 f ( D i ; δ ) δ > 0 , ( 4 ) where the wedge symbol ∧ denotes the minimum operator ; θ is the vector of unknown parameters ; f ( · ; δ ) indicates the density of the infectious period distribution ; and D i is the infectious period of infected individual i deﬁned as D i = R i − I i . The integral in Equation 4 , which represents the total person - to - person infectious pressure through the course of the epidemic , can be written as the double sum in the lower equation ( Britton and O’Neill 2002 ; Jewell et al . 2009 ) . The integral is transformed by discretizing it into a sum over the successive events of the epidemic and is substituted by the double sum . The likelihood function of the general SIN R continuous time ILMs can be formed in a very similar manner ( see Appendix A ) . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 9 Function Usage contactnet Generates undirected unweighted ( binary ) contact net - work matrices from spatial ( powerlaw , or Cauchy ) , or random , network models . plot . contactnet Provides plot of a contact network of class ‘contactnet’ . datagen Generates epidemics from distance / network - based indi - vidual level models . as . epidat Generates objects of class ‘datagen’ that contain the individual event history of an epidemic along with other individual level information . plot . datagen Provides diﬀerent plots summarizing an epidemic of class ‘datagen’ . epictmcmc Runs a Bayesian data augmented MCMC algorithm for ﬁtting speciﬁed models ( SIR or SIN R ) . print . epictmcmc Prints the contents of ‘epictmcmc’ object to the console . summary . epictmcmc Summary method for ‘epictmcmc’ objects . plot . epictmcmc Plots the output of ‘epictmcmc’ object . loglikelihoodepiILM Calculates the log likelihood for a given compartmental framework and kernel type of the continuous time ILMs . Table 2 : Description of functions and their usages in the EpiILMCT package . 3 . Contents of the EpiILMCT package The EpiILMCT package can be used to simulate and graphically summarize epidemics , and , for a given model , carry out Bayesian inference and calculate log - likelihood . Most of the main package functions are written in Fortran 95 ( called from within the R wrapper ) , since they are computationally intensive tasks . The functions contained in the package are reviewed in Table 2 . 3 . 1 . Contact network Various types of contact network can be considered . First , we consider unweighted ( binary ) contact networks which can be directed or undirected . In an undirected unweighted contact network , each pair of individuals share the same symmetric connection such that c ij = c ji for i (cid:54) = j ; i , j = 1 , . . . , N ; and each network is deﬁned by (cid:0) N 2 (cid:1) elements where c ij = 1 if a connection exists between individuals i and j , and 0 otherwise . In a directed unweighted 10 Continuous Time ILMs of Infectious Disease : EpiILMCT contact network , it is not necessary for individuals to share the same symmetrical relation - ship so that c ij (cid:54) = c ji for i (cid:54) = j ; i , j = 1 , . . . , N . This leads to a non - symmetric contact network matrix . Weighted contact networks can also be considered in the EpiILMCT pack - age in which the connections between individuals are not described as present or absent but are weighted according to their strength . These too can be directed or undirected . A function ( contactnet ) is included to generate undirected unweighted contact networks . It can simulate both spatial networks where connections are more likely to occur between individuals closer in space ( “spatial contact networks” ) , as well as random contact net - works . The function contactnet has three available options ( " powerlaw " , " Cauchy " , and " random " ) for the network model , where the ﬁrst two options simulate spatial contact net - works in which the probability of connections between individuals are based on required XY coordinate input . The inclusion of the two options " powerlaw " and " Cauchy " in the argument type is to allow the user to choose between two commonly assumed spatial forms to describe the underlying population . For example , the power - law network model is taken from Bifolchi et al . ( 2013 ) who use this network to test how well purely spatial power - law ILMs can approximate disease spread through networks . The Cauchy model was used by Jewell et al . ( 2009 ) to model the 2001 UK foot - and - mouth outbreak in Cumbria ; they found this kernel the most appropriate for predicting transmission of these tested . We now describe the three model options in detail . First , in the power - law contact network model of Bifolchi et al . ( 2013 ) the probability of a connection between individual i and j is given by : p ( c ij = 1 ) = 1 − e − ν ( d − β ij ) , ν , β > 0 , where d ij is the Euclidean distance between individuals i and j ; β is the spatial parameter ; and ν is the scale parameter . Under the Cauchy contact network model , as used in Jewell et al . ( 2009 ) , the probability of a connection between individual i and j is given by : p ( c ij = 1 ) = 1 − e − β / ( d 2 ij + β 2 ) , β > 0 , where d ij is the Euclidean distance between individuals i and j ; and β is the spatial parameter . Finally , under the random contact network model , the probability of a connection is simply generated from a Bernoulli distribution with probability equal to β . Let us now consider some examples . To create the above undirected unweighted contact networks , the function requires the network model to be speciﬁed ( " powerlaw " , " Cauchy " , or " random " ) via the type argument . If " powerlaw " or " Cauchy " are selected , the XY coordinates of individuals ( location ) have to be speciﬁed through the argument location . The function contactnet produces a list which includes the contact network matrix in a class , ‘contactnet’ . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 11 To obtain a plot of the contact network , we introduce an S3 method plot . contactnet func - tion , which uses as its input an object of the class ‘contactnet’ . The plot . contactnet function uses code internal to EpiILMCT for the layout when plotting power - law or Cauchy network models , but depends on the package igraph ( Csardi and Nepusz 2006 ) when plot - ting random network model . The following code generates the three types of contact networks for a population of 50 individuals , with a uniformly distributed spatial layout for the spatial network models . R > library ( " EpiILMCT " ) R > set . seed ( 12345 ) R > loc < - matrix ( cbind ( runif ( 50 , 0 , 10 ) , runif ( 50 , 0 , 10 ) ) , ncol = 2 , + nrow = 50 ) R > net1 < - contactnet ( type = " powerlaw " , location = loc , beta = 1 . 5 , + nu = 0 . 5 ) R > net2 < - contactnet ( type = " Cauchy " , location = loc , beta = 0 . 5 ) R > net3 < - contactnet ( type = " random " , num . id = 50 , beta = 0 . 08 ) R > par ( mfrow = c ( 2 , 2 ) ) R > plot ( net1 ) R > plot ( net2 ) R > plot ( net3 , xlab = " ( random ) " , vertex . color = " red " , vertex . size = 20 , + edge . color = " black " , vertex . label . cex = 0 . 5 , + vertex . label . color = " black " ) A realization of the three networks for a given population is shown in Figure 1 . Note the underlying spatial layout of the nodes is the same for both spatial network models . 3 . 2 . Epidemic simulation The function datagen allows the user to generate epidemics from the continuous time ILMs under the SIR or SIN R compartmental frameworks . Which framework is to be used is speciﬁed through the type argument . Each infected individual in a simulated epidemic has an infection life history deﬁned by their time of infection and the length of time spent in the infectious state . We assume the conditional intensity functions stay constant between events , such that the time to the next infection , given that the last infection occurred at time t , follows W j ∼ Exp ( λ j ( t ) ) . Here , W j represents the “waiting time” for susceptible individual j becoming infected . Under the SIR framework , and using the chosen distribution of the infectious period , an epidemic is simulated starting with a randomly chosen initial infected individual k at time I 1 = 0 , or with initial infected individual ( s ) speciﬁed via the argument initialepi . This argument requires a vector or matrix containing the id number ( s ) , removal time ( s ) , infec - 12 Continuous Time ILMs of Infectious Disease : EpiILMCT ( powerlaw ) ( Cauchy ) ( random ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 Figure 1 : Examples of the three undirected unweighted ( binary ) contact network models generated for the same population . Red dots represent nodes with size corresponding to their degree ( number of edges ) . tious period ( s ) and infection time ( s ) of the infected individual ( s ) . At time I s , the waiting time until infection for susceptible individual j is then drawn from W j ∼ Exp ( λ j ( I s ) ) . The individual with the minimum W is taken as the next infected individual and assigned an infection time I s + 1 = I s + min ( W ) ; an infection period D j ( generated from f ( D j ; δ ) ) ; and a removal time R s + 1 = I s + 1 + D j . The process is repeated until no infectives remain in the population or I s + 1 > t max , where t max is the time at where the epidemic simulation is set to end . t max can be then speciﬁed via the option tmax . Under the SIN R framework , each infected individual is considered to have an incubation period comprising the time from infection to notiﬁcation , and a delay period comprising the time from notiﬁcation to removal . Together the incubation and delay periods constitute the infectious period . An epidemic is simulated in the same manner described above for the SIR framework , except that the infection period is replaced by incubation and delay periods D ( inc ) and D ( delay ) ( generated from f ( D ( inc ) j ; δ ( inc ) ) and f ( D ( delay ) j ; δ ( delay ) ) , respectively ) ; and notiﬁcation and removal times are assigned as N s + 1 = I s + 1 + D ( inc ) j and R s + 1 = N s + 1 + D ( delay ) j , respectively . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 13 In this function , the infectious , incubation and delay periods are assumed to follow either exponential or gamma distributions . These distributions can be speciﬁed through the delta argument . Under the SIR framework , delta is a vector containing the shape and rate parameters of a gamma distribution , whereas under the SIN R framework it is a 2 × 2 matrix where each row represents the parameters of the incubation and delay period distributions . Note that - as is often done - an exponential distribution can be assigned to any of these distributions by setting shape parameter equal to one . The epidemic data structure output of the datagen function is used throughout the Epi - ILMCT package . Under an SIR ILM , it returns a matrix with four columns representing : the id numbers of the individuals , removal times , infectious periods , and infection times . Under an SIN R ILM , it returns a matrix with six columns : the id numbers of the indi - viduals , removal times , delay periods , notiﬁcation times , incubation periods , and infection times . Uninfected individuals are assigned inﬁnity values ( Inf ) for both their removal and infection times . Epidemic data from other modelling packages can be extracted and modiﬁed to be used in EpiILMCT . For example , we show how this can be done using the individual level models from the surveillance package in Appendix B . The choice of kernel function κ ( i , j ) is speciﬁed using the kerneltype argument . This takes one of three options : " distance " for distance - based , " network " for network - based , or " both " for distance and network - based . The appropriate kernel matrix must also be provided via the kernelmatrix argument . If " distance " is chosen as the kerneltype , the user must choose a spatial kernel ( " powerlaw " or " Cauchy " ) through the distancekernel argument . The distance matrix can be obtained from XY coordinate data using the dist function from the stats package ( R Core Team 2019 ) . Otherwise the distance matrix can be speciﬁed by the user . Other arguments in the datagen function require the data and coeﬃcient parameters for the susceptibility and transmissibility risk factors as explained in Section 2 . We deﬁne an object of class ‘datagen’ to take a list of values needed for the use of other functions , such as , plot . datagen and epictmcmc . This list contains : type , kerneltype , epidat ( event times ) , location ( XY coordinates of individuals ) , and network ( contact network matrix ) . In the case of setting the kerneltype to " distance " , a NULL value will be assigned to the network option . The package has also a separate function as . epidat that generates an object of class ‘datagen’ for a given epidemic data set ( Appendix B contains a brief example of using this function ) . The package also contains an S3 method plot . datagen function , which illustrates disease spread through the epidemic timeline . This function can be used for either distance - based or network - based ILMs . The object of this function has to be of class ‘datagen’ . If the plottype argument is set to " history " , the function produces epidemic curves of infection and removal times . Example plots are shown in Figure 3 . Conversely , setting this argument to " propagation " produces plots of the epidemic propagation over time . With the latter option , exactly which plots are output varies by kernel . With the network 14 Continuous Time ILMs of Infectious Disease : EpiILMCT kernel , the function plots all the connections between individuals and overlays these with the epidemic pathway direction over time . This path direction consists of directed edges from all infectious individuals connected to a given newly infected individual i with infection time I i ( one per plot ) . Thus , this produces directed networks showing possible pathways of the disease propagation . With the distance kernel , the function plots the spatial epidemic dispersion over time . It shows the changes in the individual status that related to the chosen compartmental framework . To avoid displaying too many plots , the time . index argument allows user to obtain propagation plots at speciﬁc infection time points rather than at every infection time . 4 . Bayesian inference Prior distributions of the model parameters are selected from one of three options : gamma , positive half normal or uniform distribution . Then , Metropolis - Hastings MCMC is per - formed to estimate the joint posterior of the model parameters and latent variables ( the latter if various event times are assumed unknown ) . This is achieved using the function epictmcmc . The parameters of the susceptibility and transmissibility functions , infec - tion kernel and spark term ( collectively denoted θ ) are updated using the random - walk proposals . The user is required to tune the proposal variances to achieve good mixing properties . Thus , the user must provide a vector of initial values , a prior distribution ( " gamma " , " uniform " , or " halfnormal " ) , the prior parameters , and the variance of the normal proposal distribution for each parameter as shown in Figure 2 . In case of running multiple MCMC chains , the user should provide a vector of initial values of the model parameters . Note that , setting the variance of the normal proposal distribution to zero ﬁxes a parameter at its initial value . This option allows the user to ﬁx such a parameter in the model while updating others ( i . e . , conditioning on the parameters ) . Using the datatype argument , the epictmcmc function allows for three scenarios in terms of event time uncertainty : " known epidemic " can be used to model a fully observed epidemic with known infection and removal times ; " known removal " can be used to model a partially observed epidemic where the infection times are unknown ; and " unknown removal " can be used to model a partially observed epidemic where removal and infection times are unknown . The latter option is only available for the SIN R continuous time ILMs where notiﬁcation times are assumed correctly known . When the datatype argument is set to " known epidemic " , the infectious periods are ﬁxed by default . When infection times are unknown , the rate ( s ) of the infectious , incubation and / or delay period distributions are assigned gamma prior distributions with shape a and rate b . Thus , the rate parameters have conditional distributions with a standard form following the gamma distribution . For the SIR continuous time ILMs , this is as follows : δ | θ , I , R ∼ Γ ( m + a δ , M + b δ ) , Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 15 where δ is the rate of the infectious period distribution ; M = (cid:80) mi = 1 ( R i − I i ) ; and a δ and b δ are the prior parameters of the infectious period rate . For the SIN R continuous time ILMs , the distribution of the incubation rate and delay parameters are as follows : δ ( inc ) | θ , I , N , R ∼ Γ ( m + a δ ( inc ) , M inc + b δ ( inc ) ) , where δ ( inc ) is the rate of the incubation period distribution ; M inc = (cid:80) mi = 1 ( N i − I i ) ; and a δ ( inc ) and b δ ( inc ) are the prior parameters of incubation period rate ; and δ ( delay ) | θ , I , N , R ∼ Γ ( m + a δ ( delay ) , M delay + b δ ( delay ) ) , where δ ( delay ) is the rate of the delay period distribution ; M delay = (cid:80) mi = 1 ( R i − N i ) ; and a δ ( delay ) and b δ ( delay ) are the prior parameters of delay period rate . A Gibbs update ( i . e . , sampling from the conditional posterior distribution ) is used for the infectious period rate ( for the SIR continuous time ILMs ) or the incubation and / or delay period rates ( for the SIN R continuous time ILMs ) . The required information for each period distribution are entered via the delta argument . We assume each period type follows a gamma distribution with ﬁxed shape and unknown rate . Thus , to update the rate parameter of each period we specify delta , a list containing a vector of the ﬁxed shape value ( s ) , a vector ( matrix ) of the initial values of the rate ( s ) , and a vector ( matrix ) for the parameters of the prior distribution of the rate parameter ( s ) . In the case of incubation and delay periods being estimated , the input of the initial values is a 2 × nchains matrix , and the prior parameters is a 2 × 2 matrix where each row contains the required information for each period rate . An independence sampler is then used to update the infection times / infectious periods ( for the SIR continuous time ILMs ) , or the infection times / incubation periods and / or the removal times / delay periods ( for the SIN R continuous time ILMs ) . For the SIR continuous time ILMs , the i th infection time I i is updated by generating an infectious period D ∗ i from a gamma proposal distribution such that D ∗ i ∼ Γ ( a , b ) . Then , the new infection time is the diﬀerence between the observed removal time and the new infectious period of the i th individual . The same procedure is used for updating the missing event times , infectious periods and corresponding parameters for the SIN R continuous time ILMs . The parameter values of the gamma proposal distribution could be provided through the periodproposal argument . If they are not provided , the parameters of the gamma proposal distribution are then based on the ﬁxed shape and updated rate values from the argument delta . Computationally , it may be more eﬃcient to apply a block update for the periods and event times . This can be implemented using the blockupdate argument , which requires that the user speciﬁes m ( assuming removal and infection times are known for the ﬁrst m individuals ) , and the size of each block . The epictmcmc function allows for sampling from multiple MCMC chains . This is done by providing the number of chains to be run via the option nchains . Additionally , multiple 16 Continuous Time ILMs of Infectious Disease : EpiILMCT Figure 2 : A diagram of the input structure for the arguments control . sus , control . trans , kernel . par , spark . par , gamma . par and delta in the function epictmcmc . chains can be run in parallel by setting parallel = TRUE . This implies the use of the parLapply function from the parallel package ( R Core Team 2019 ) . The number of cores to be used is set to the minimum of the number of chains and the available cores on the user’s computer . Note that , if parallel is set to FALSE and nchains > 1 , multiple MCMC chains are run sequentially . When parallel is set to TRUE , the clusterSetRNGStream function from the parallel package ( R Core Team 2019 ) is used to distribute the setting seed value by the set . seed function ( R Core Team 2019 ) to each core to reproduce the same results , otherwise each core sets its seed value from the current seed of the master process . The output of this function is an object of class ‘epictmcmc’ . There are S3 methods : print . epictmcmc , summary . epictmcmc and plot . epictmcmc that depend on the coda package ( Plummer et al . 2006 ) . The latter function has a plottype argument to specify which samples need to be plotted . This argument has three options : " parameter " to pro - duce trace plots of the posterior distributions of the model parameters , and " inf . times " ( " rem . times " ) to produce plots of the average posterior and 95 % CI of the unobserved Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 17 infection ( removal ) times when datatype set to " known removal " ( " unknown removal " ) . The S3 plot . epictmcmc method has the same options as the plot . mcmc function in the coda package , for example , start , thin , and density . The class ‘epictmcmc’ contains the MCMC samples of the model parameters and the missing information ( if datatype is not set to " known epidemic " ) as an mcmc matrix , and other useful information to be used in other functions , such as the above S3 methods . So standard summary methods from coda , such as summary . mcmc and plot . mcmc , can be employed using these MCMC samples as inputs . Posterior predictive checks of the ﬁtted model can be performed using the datagen function . This requires that the user supplies the model parameter values with a combined sample of the MCMC model parameter outputs . If desired , the simulation can be constrained to the ﬁrst m infected individuals and their event times . This can be achieved by appending this information to the initialepi option . 5 . Examples 5 . 1 . Simulated network - based epidemic In this section , we illustrate the EpiILMCT package by ﬁtting a simple SIR network - based continuous time ILM to a simulated epidemic . We consider an isolated population of 50 individuals distributed uniformly in an area of 10 × 10 units . We also consider a binary susceptibility covariate z which can be thought as being , say , an individual’s treatment or vaccination status . Thus , the infectivity rate given in Equation 3 becomes : λ j ( t ) = ( α 0 + α 1 z j ) (cid:88) i ∈I ( t ) c ij , α 0 , α 1 > 0 , where the susceptibility function Ω S ( j ) = α 0 + α 1 z j ; there are no transmissibility covariates Ω T ( i ) = 1 ; and (cid:15) = 0 . First , let us simulate the XY coordinates of individuals and the binary covariate z as follows : R > set . seed ( 91938 ) R > loc < - matrix ( cbind ( runif ( 50 , 0 , 10 ) , runif ( 50 , 0 , 10 ) ) , ncol = 2 , + nrow = 50 ) R > cov < - cbind ( rep ( 1 , 50 ) , rbinom ( 50 , 1 , 0 . 5 ) ) To simulate the epidemic , we generate a contact network using the contactnet function . Here , we use the power - law contact network model with β = 1 . 8 and ν = 1 , as illustrated in the following code : R > net < - contactnet ( type = " powerlaw " , location = loc , beta = 1 . 8 , + nu = 1 ) 18 Continuous Time ILMs of Infectious Disease : EpiILMCT Figure 4 shows the contact network ( grey lines ) . The epidemic is then generated using the datagen function . Here , the epidemic is initialized with a randomly chosen infectious individual ; then generated by providing the function with the contact network matrix , the susceptibility covariate and the following parameter values : α 0 = 0 . 08 , α 1 = 0 . 5 , and D i ∼ Γ ( 4 , δ = 2 ) . This is coded as follows : R > epi < - datagen ( type = " SIR " , kerneltype = " network " , + kernelmatrix = net , suspar = c ( 0 . 08 , 0 . 5 ) , delta = c ( 4 , 2 ) , + suscov = cov ) The object epi is stored in the data ﬁle NetworkData as a class ‘datagen’ , along with the susceptibility covariate ( cov ) , available in the EpiILMCT package . R > data ( " NetworkData " , package = " EpiILMCT " ) R > class ( NetworkData [ [ 1 ] ] ) [ 1 ] " datagen " R > names ( NetworkData [ [ 1 ] ] ) [ 1 ] " type " " kerneltype " " epidat " " location " " network " R > head ( NetworkData [ [ 1 ] ] $ epidat ) id . individual rem . time inf . period inf . time [ 1 , ] 50 1 . 526078 1 . 5260782 0 . 0000000 [ 2 , ] 16 2 . 612491 1 . 9933013 0 . 6191893 [ 3 , ] 5 2 . 394094 1 . 6567882 0 . 7373061 [ 4 , ] 45 3 . 169602 2 . 2370141 0 . 9325876 [ 5 , ] 44 1 . 805656 0 . 5661341 1 . 2395222 [ 6 , ] 19 1 . 737867 0 . 4576725 1 . 2801945 To illustrate the propagation of the epidemic , we set the argument plottype to " propagation " . To limit the number of plots , we assign the time . index option to be a vector containing time points for plots to be generated as shown in the following code : R > plot ( NetworkData [ [ 1 ] ] , plottype = " propagation " , + time . index = seq _ len ( 6 ) ) We can also produce density plots of the infection and removal times , and a plot of the infectious periods , by specifying the argument plottype to " history " as shown in the following code : Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 19 R > plot ( NetworkData [ [ 1 ] ] , plottype = " history " ) Figure 3 shows the densities of the infection and removal times , and the infectious periods ; while Figure 4 shows the epidemic propagation plot . 0 1 2 3 4 5 6 0 . 0 0 . 1 0 . 2 0 . 3 Epidemic curve of the infection times Infection times D en s i t y 2 4 6 8 10 0 . 00 0 . 05 0 . 10 0 . 15 0 . 20 Epidemic curve of the removal times Removal times D en s i t y 0 5 10 15 20 25 30 0 2 4 6 The epidemic time - lines history Time points e v en t t i m e s Figure 3 : The epidemic curves of the infection and removal times for the epidemic that was generated using the simple network - based continuous time ILM . The red shaded area in the third plot represent the infectious periods . To illustrate ﬁtting continuous time ILMs to data , we analyze the epidemic using the epictmcmc function . This is done under two observation scenarios : " known epidemic " and " known removal " . For the former analysis , we assign Γ ( 1 , 0 . 1 ) gamma prior distributions to the model parameters α 0 and α 1 and use normal MCMC proposals with variances equal to 0 . 5 and 1 , respectively . As we have two susceptibility parameters , the argument control . sus is then a list that contains : 1 ) a list of a vector of initial values of α 0 and α 1 , and a 2 × 4 matrix in which each row represents the required information for updating each parameter ; and 2 ) a 50 × 2 matrix of the covariates representing the unity intercept and the binary covariate z . Now , we run the MCMC using the epictmcmc function for sampling a single chain of 150 , 000 iterations using the following code : R > set . seed ( 91938 ) 20 Continuous Time ILMs of Infectious Disease : EpiILMCT 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 1 ) x y 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 2 ) x y 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 3 ) x y 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 4 ) x y 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 5 ) x y 0 2 4 6 8 10 0 2 4 6 8 10 Infection time ( 6 ) x y susceptible newly - infected infectious removed Figure 4 : The directed pathway network of the generated epidemic over its time - line using the simple network - based ILMs . R > suscov < - list ( NULL ) R > suscov [ [ 1 ] ] < - list ( c ( 0 . 01 , 0 . 1 ) , + matrix ( c ( " gamma " , " gamma " , 1 , 1 , 0 . 1 , 0 . 1 , 0 . 5 , 1 ) , ncol = 4 , nrow = 2 ) ) R > suscov [ [ 2 ] ] < - NetworkData [ [ 2 ] ] R > mcmc1 < - epictmcmc ( object = NetworkData [ [ 1 ] ] , datatype = " known epidemic " , + nsim = 150000 , control . sus = suscov ) The estimates of the model parameters can be obtained through the S3 summary function of epictmcmc . The posterior means and 95 % credible intervals of these parameters can be obtained via the following command : R > summary ( mcmc1 , start = 10000 , thin = 10 ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Model : SIR network - based continuous - time ILM Method : Markov chain Monte Carlo ( MCMC ) Data assumption : fully observed epidemic Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 21 number . chains : 1 chains number . iteration : 140000 iterations number . parameter : 2 parameters * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 1 . Empirical mean and standard deviation for each variable , plus standard error of the mean : Mean SD Naive SE Time - series SE Alpha _ s [ 1 ] 0 . 0850579 0 . 0268504 0 . 000226919 0 . 000298624 Alpha _ s [ 2 ] 0 . 5082012 0 . 1290994 0 . 001091050 0 . 001179665 2 . Quantiles for each variable : 2 . 5 % 25 % 50 % 75 % 97 . 5 % Alpha _ s [ 1 ] 0 . 0417253 0 . 0655198 0 . 0824374 0 . 101868 0 . 143758 Alpha _ s [ 2 ] 0 . 2856068 0 . 4163682 0 . 4982712 0 . 587971 0 . 789077 3 . Empirical mean , standard deviation , and quantiles for the log likelihood , Mean SD Naive SE Time - series SE - 55 . 8040938 1 . 0188095 0 . 0086102 0 . 0104071 2 . 5 % 25 % 50 % 75 % 97 . 5 % - 58 . 5949 - 56 . 1864 - 55 . 4943 - 55 . 0810 - 54 . 8118 4 . acceptance . rate : Alpha _ s [ 1 ] Alpha _ s [ 2 ] 0 . 112361 0 . 222748 The MCMC trace plots for the model parameters can be produced using the S3 method plot . epictmcmc . R > plot ( mcmc1 , plottype = " parameter " , start = 10000 , thin = 10 , + density = FALSE ) Figure 5 shows the MCMC trace plots for the model parameters α 0 and α 1 . We observe a posterior mean of ˆ α 1 = 0 . 508 with 95 % credible ( percentile ) interval ( 0 . 286 , 0 . 789 ) and a posterior mean of ˆ α 0 = 0 . 085 with 95 % credible interval ( 0 . 042 , 0 . 144 ) . We also observed well - mixed MCMC chains for both model parameters . The computation time for running the above MCMC code was 16 seconds on an Apple MacBook Pro with i5 - core Intel 2 . 4 GHz processors with 8 GB of RAM . For the known removal times analysis , EpiILMCT uses data augmented MCMC to infer infection times and the infectious period rate . Here , we assume that the infectious period follows a gamma distribution with shape 4 and unknown rate parameter δ ; so D i ∼ Γ ( 4 , δ ) . Here , we also include a spark term (cid:15) . This is not strictly necessary but tends to improve MCMC mixing . We assigned gamma prior distribution Γ ( 4 , 2 ) for δ and an exponential prior distribution with rate 0 . 01 for (cid:15) . 22 Continuous Time ILMs of Infectious Disease : EpiILMCT 20000 80000 140000 0 . 05 0 . 10 0 . 15 0 . 20 Iterations Trace of Alpha _ s [ 1 ] 20000 80000 140000 0 . 2 0 . 4 0 . 6 0 . 8 1 . 0 Iterations Trace of Alpha _ s [ 2 ] Figure 5 : The MCMC chains of the posterior distributions of the model parameters ﬁt - ting the simulated epidemic using the network - based continuous time ILM assuming fully observed epidemic . We can then run the MCMC using the epictmcmc function for sampling a single chain of 150 , 000 iterations using the following code : R > set . seed ( 91938 ) R > suscov < - list ( NULL ) R > suscov [ [ 1 ] ] < - list ( c ( 0 . 01 , 0 . 1 ) , matrix ( c ( " gamma " , " gamma " , 1 , 1 , 0 . 1 , + 0 . 1 , 0 . 2 , 0 . 8 ) , ncol = 4 , nrow = 2 ) ) R > suscov [ [ 2 ] ] < - NetworkData [ [ 2 ] ] R > spark < - list ( 0 . 01 , c ( " gamma " , 1 , 0 . 01 , 0 . 1 ) ) R > mcmc11 < - epictmcmc ( object = NetworkData [ [ 1 ] ] , datatype = " known removal " , + nsim = 150000 , control . sus = suscov , spark . par = spark , delta = list ( 4 , + 2 , c ( 4 , 2 ) ) ) The computation time for the above code on the aforementioned machine was 201 seconds . Figure 6 shows typical MCMC trace plots for the model parameters α 0 , α 1 , (cid:15) , and δ . Well - mixed MCMC chains are observed for all the model parameters . As the posterior samples of the model parameters are stored in the epictmcmc object as an ‘mcmc’ object of the type used in the coda package , the standard summary methods from coda can be employed , inserting mcmc1 $ parameter . samples as the input of this function . This is illustrated in the following command : R > summary ( window ( mcmc11 $ parameter . samples , start = 10000 , thin = 10 ) ) Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 23 Iterations = 10000 : 150000 Thinning interval = 10 Number of chains = 1 Sample size per chain = 14001 1 . Empirical mean and standard deviation for each variable , plus standard error of the mean : Mean SD Naive SE Time - series SE Alpha _ s [ 1 ] 0 . 05717 0 . 03497 0 . 0002955 0 . 0004005 Alpha _ s [ 2 ] 0 . 42976 0 . 14320 0 . 0012102 0 . 0015706 Spark 0 . 03742 0 . 02001 0 . 0001691 0 . 0002553 Infectious period rate 2 . 64673 0 . 49444 0 . 0041786 0 . 0074440 2 . Quantiles for each variable : 2 . 5 % 25 % 50 % 75 % 97 . 5 % Alpha _ s [ 1 ] 0 . 004402 0 . 03059 0 . 05322 0 . 07817 0 . 13770 Alpha _ s [ 2 ] 0 . 189793 0 . 32899 0 . 41698 0 . 51633 0 . 75099 Spark 0 . 004977 0 . 02246 0 . 03548 0 . 04999 0 . 08208 Infectious period rate 1 . 821692 2 . 29301 2 . 59927 2 . 94168 3 . 73862 Thus , the posterior means and 95 % credible intervals of the model parameters are as follows : ˆ α 0 = 0 . 057 ( 0 . 004 , 0 . 138 ) , ˆ α 1 = 0 . 430 ( 0 . 190 , 0 . 751 ) , ˆ (cid:15) = 0 . 037 ( 0 . 005 , 0 . 082 ) , and ˆ δ = 2 . 647 ( 1 . 822 , 3 . 739 ) . The infection times are also well - approximated ( see Figure 7 ) . Figures 6 and 7 are produced using the following code : R > plot ( mcmc11 , plottype = " parameter " , start = 10000 , thin = 10 , density = + FALSE ) R > plot ( mcmc11 , epi = NetworkData [ [ 1 ] ] , plottype = " inf . times " , start = + 10000 , thin = 10 ) R > lines ( NetworkData [ [ 1 ] ] $ epidat [ , 4 ] , type = " l " , col = " blue " ) To check the ﬁt of the model , we consider the posterior predictive distribution of four statis - tics . Speciﬁcally , we consider : T 1 , the total number of infected individuals ; T 2 , the average removal time ; T 3 , the variance of the removal times ; and T 4 , the length of the epidemic . Here , we simulate 10 , 000 epidemics based on random draws of the model parameters from the MCMC output ( excluding burnin ) of the known removal times analysis ( i . e . , unknown infection times ) . We condition our simulation on the ﬁrst ten infected individuals , then calculated the four statistics for each simulation . This simulation procedure is implemented in parallel using the future _ lapply function from the future . apply package ( Bengtsson 2019 ) as follows : R > set . seed ( 524837 ) R > mb < - sample ( seq ( 10000 , 150000 ) , 10000 ) 24 Continuous Time ILMs of Infectious Disease : EpiILMCT 20000 60000 100000 140000 0 . 00 0 . 10 0 . 20 Iterations Trace of Alpha _ s [ 1 ] 20000 60000 100000 140000 0 . 2 0 . 4 0 . 6 0 . 8 1 . 0 1 . 2 Iterations Trace of Alpha _ s [ 2 ] 20000 60000 100000 140000 0 . 00 0 . 04 0 . 08 0 . 12 Iterations Trace of Spark 20000 60000 100000 140000 2 3 4 5 Iterations Trace of Infectious period rate Figure 6 : The MCMC chains of the posterior distributions of the model parameters for ﬁtting the simulated epidemic using the network - based continuous time ILM assuming partially observed epidemic ( unknown infection times ) . R > posterior . pred < - function ( x ) { + epi < - datagen ( type = " SIR " , kerneltype = " network " , kernelmatrix = + NetworkData [ [ 1 ] ] $ network , initialepi = + matrix ( NetworkData [ [ 1 ] ] $ epidat [ 1 : 10 , ] , ncol = 4 , nrow = 10 ) , + suspar = c ( mcmc11 $ parameter . samples [ x , 1 ] , + mcmc11 $ parameter . samples [ x , 2 ] ) , spark = + mcmc11 $ parameter . samples [ x , 3 ] , delta = c ( 4 , + mcmc11 $ parameter . samples [ x , 4 ] ) , suscov = NetworkData [ [ 2 ] ] ) $ epidat + numinf < - sum ( epi [ , 2 ] ! = Inf ) + muremtime < - mean ( epi [ 1 : numinf , 2 ] ) + varremtime < - var ( epi [ 1 : numinf , 2 ] ) + lengthepi < - max ( epi [ 1 : numinf , 2 ] ) + result < - c ( numinf , muremtime , varremtime , lengthepi ) + return ( result ) + } R > library ( " future . apply " ) Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 25 0 5 10 15 20 25 30 0 2 4 6 The average posterior and 95 % CI of the infection times Index I n f e c t i on t i m e s Removal times Average posterior of infection times 95 % CI Figure 7 : The posterior means and 95 % credible intervals of the infection times for ﬁtting the simulated epidemic using the network - based continuous time ILM assuming partially observed epidemic ( unknown infection times ) . The black line represent the observed re - moval times , solid red line represent the posterior means , dotted red lines represent the 95 % credible interval , and the blue line represents the observed infection times . R > plan ( multiprocess , workers = 4 ) # # Parallelize using R > datmcmc < - future _ lapply ( mb , FUN = posterior . pred , future . seed = TRUE ) R > summary . results < - sapply ( datmcmc , unlist , simplify = TRUE ) The posterior predictive distributions of the four statistics are shown in Figure 8 . We can see that each distribution captures the observed statistics well . 5 . 2 . Case study : Tomato spotted wilt virus ( TSWV ) data We further illustrate the EpiILMCT package by analyzing the TSWV data as described in Hughes et al . ( 1997 ) and analyzed with spatial ILMs by Pokharel and Deardon ( 2014 , 2016 ) . These data represent the results of an experiment designed to study the spread of the disease amongst 520 pepper plants raised in a greenhouse . Plants were evenly distributed across a 10 × 26 meter area as shown in Figure 9 . The experiment began on 26 Continuous Time ILMs of Infectious Disease : EpiILMCT The number of infected individuals F r equen cy 15 20 25 30 35 40 45 50 0 200 600 1000 1400 The average of the removal times F r equen cy 4 6 8 10 0 500 1000 1500 2000 2500 The variance of the removal times F r equen cy 0 10 20 30 40 50 60 0 1000 3000 5000 The length of epidemics F r equen cy 5 10 15 20 25 30 0 500 1 5 00 2500 Figure 8 : The posterior predictive distributions of four statistics : The number of infected individuals , the average removal times , the variance of removal times , and the length of epidemic for ﬁtting partially observed epidemic ( unknown infection times ) using network - based continuous time ILM . The red vertical lines represent the observed statistic values and the solid and dotted blue vertical lines represents the posterior predictive means and 95 % credible intervals of the four statistics . May 26 , 1993 and ﬁnished on August 16 , 1993 . Plants were checked for the disease every 14 days , and ultimately 327 were infected . Following Pokharel and Deardon ( 2014 , 2016 ) these observation points are recorded to t = 1 , 2 , . . . , 7 . We set the initial infection time to t = 2 in line with the original data set . We here analyze the epidemic under two data availability scenarios . First , we assume that the event times of the TSWV disease are fully observed . Here , the infectious period was ﬁxed at three time points ( 42 days ) following Pokharel and Deardon ( 2014 , 2016 ) . Additionally , the last observed time point was at t = 7 . Second , we assume the epidemic is partially observed . Speciﬁcally , we assume that the infection and removal times are unknown , and treat the reported infection times as the notiﬁed time points . This entails considerable uncertainty and makes the MCMC analysis much more time consuming ( more than 13 times longer than the computation time of the ﬁrst analysis ) , because it is necessary Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 27 to estimate both incubation and delay periods along with the infection and removal times . The data is stored in the data ﬁle tswv , available in the EpiILMCT package . It contains a list of the TSWV epidemic data set for the two compartmental frameworks ( SIR and SIN R ) structured as a ‘datagen’ class . 0 5 10 15 20 25 2 4 6 8 10 X Y Figure 9 : A grid plot of the XY coordinates of plants of TSWV data . The red plots represent infected plants at the end of the disease . The following code shows how the TSWV data set can be extracted and the associated Euclidean distance matrix built . R > data ( " tswv " , package = " EpiILMCT " ) R > names ( tswv ) [ 1 ] " tswvsir " " tswvsinr " R > plot ( tswv $ tswvsir $ location , col = " gray " , pch = 19 ) R > k1 < - sum ( tswv $ tswvsir $ epidat [ , 2 ] ! = Inf ) R > points ( tswv $ tswvsir $ location [ tswv $ tswvsir $ epidat [ 1 : k1 , 1 ] , ] , col = " red " , + pch = 19 ) Following Pokharel and Deardon ( 2014 , 2016 ) , we implement the distance - based continuous time ILM with power - law kernel and without susceptibility and transmissibility covariates . For the ﬁrst analysis , an SIR distance - based continuous time ILM is used where the 28 Continuous Time ILMs of Infectious Disease : EpiILMCT infectivity rate given in Equation 3 becomes : λ j ( t ) =   α (cid:88) i ∈I ( t ) d − β ij   , α , β > 0 . To perform the MCMC , the epictmcmc function should be used with datatype set to " known epidemic " . Here , we assume exponential prior distributions with rate 0 . 01 for the model parameters α and β ; and we request 150 , 000 MCMC samples . The code to achieve this is as follows : R > covsus < - list ( NULL ) R > covsus [ [ 1 ] ] < - list ( 0 . 02 , c ( " gamma " , 1 , 0 . 01 , 0 . 01 ) ) R > covsus [ [ 2 ] ] < - rep ( 1 , length ( tswv $ tswvsir $ epidat [ , 1 ] ) ) R > kernel1 < - list ( 2 , c ( " gamma " , 1 , 0 . 01 , 0 . 1 ) ) R > set . seed ( 524837 ) R > tswv . full . observed < - epictmcmc ( object = tswv $ tswvsir , distancekernel = + " powerlaw " , datatype = " known epidemic " , nsim = 150000 , control . sus = + covsus , kernel . par = kernel1 ) R > plot ( tswv . full . observed , plottype = " parameter " , start = 10000 , thin = 10 , + density = FALSE ) Figure 10 shows the resulting MCMC chains for the model parameters with a burn - in of 10 , 000 iterations and thinning interval of 10 . The posterior mean of α and β were ˆ α = 0 . 012 and ˆ β = 1 . 306 , with 95 % credible intervals of ( 0 . 007 , 0 . 017 ) and ( 0 . 973 , 1 . 592 ) , respectively . The estimates of ˆ α and ˆ β are consistent with those of Pokharel and Deardon ( 2014 , 2016 ) . The above epictmcmc function had a run time of one hour on an Apple MacBook Pro with i5 - core Intel 2 . 4 GHz processors with 8 GB of RAM . In the second analysis ( i . e . , where infection and removal times are treated as unknown ) , we assume notiﬁed times were observed for all infected individuals . Consequently , an SIN R distance - based continuous time ILM is used where the infectivity rate given in Equation 2 becomes : λ j ( t ) =   α (cid:88) i ∈N − ( t ) d − β ij   + γ   α (cid:88) i ∈N + ( t ) d − β ij   . We here assume the risk of infection does not reduce after notiﬁcation , and set the notiﬁ - cation eﬀect parameter to γ = 1 . The infectious period here is divided into the incubation and delay periods . We assume the total infectious period to be within three time points ( 42 days ) following Pokharel and Deardon ( 2014 , 2016 ) ; Brown et al . ( 2005 ) . Thus , we assumed the incubation periods to follow an exponential distribution such that D ( inc ) i ∼ Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 29 20000 80000 140000 0 . 005 0 . 010 0 . 015 0 . 020 Iterations Trace of Alpha _ s [ 1 ] 20000 80000 140000 0 . 8 1 . 0 1 . 2 1 . 4 1 . 6 1 . 8 Iterations Trace of Spatial parameter Figure 10 : The MCMC chains of the posterior distributions of the model parameter α and β for ﬁtting the fully observed TSWV data using the SIR distance - based continuous time ILM . Exp ( δ ( inc ) ) with initial value of δ ( inc ) = 1 , whereas the delay periods is assumed to follow a gamma distribution such that D ( delay ) i ∼ Γ ( 10 , δ ( delay ) ) with initial value of δ ( delay ) = 5 . We assign gamma prior distributions for both rates such that δ ( inc ) ∼ Γ ( 10 , 10 ) and δ ( delay ) ∼ Γ ( 60 , 12 ) . These choices are to cover the support of our assumptions about the infectious periods . For simplicity , we assume the infection time of the ﬁrst infected plant is known . We set its incubation period to one time point . We assign exponential prior distributions with rate 0 . 01 to the model parameters α and β . To perform the MCMC , we use the epictmcmc function with type and datatype set to " SINR " and " unknown removal " , respectively . At each iteration , the infection and removal times are updated in blocks of 10 randomly selected individuals ( blockupdate ) . For faster implementation , we run the epictmcmc function in parallel to obtain 50 , 000 samples from four MCMC chains with four diﬀerent sets of initial values of the model parameters and seed values . To do so , we set the argument nchains = 4 and set parallel = TRUE . The number of cores to be used depends on the minimum number of the available cores and the number of chains ( nchains ) . The following code was run using the four available cores of an Apple iMac with i5 - core Intel 2 . 4 GHz processors and 8 GB of RAM . R > covsus < - list ( NULL ) R > covsus [ [ 1 ] ] < - list ( NULL ) R > covsus [ [ 1 ] ] [ [ 1 ] ] < - c ( 0 . 02 , 0 . 1 , 1 . 5 , 3 ) R > covsus [ [ 1 ] ] [ [ 2 ] ] < - c ( " gamma " , 1 , 0 . 01 , 0 . 01 ) R > covsus [ [ 2 ] ] < - rep ( 1 , length ( tswv $ tswvsir $ epidat [ , 1 ] ) ) 30 Continuous Time ILMs of Infectious Disease : EpiILMCT R > kernel1 < - list ( c ( 0 . 1 , 5 , 1 , 10 ) , c ( " gamma " , 1 , 0 . 01 , 0 . 1 ) ) R > delta1 < - list ( NULL ) R > delta1 [ [ 1 ] ] < - c ( 1 , 10 ) R > delta1 [ [ 2 ] ] < - matrix ( c ( 10 , 5 , 1 , 0 . 5 , 15 , 2 , 1 , 15 ) , ncol = 4 , nrow = 2 ) R > delta1 [ [ 3 ] ] < - matrix ( c ( 10 , 60 , 10 , 12 ) , ncol = 2 , nrow = 2 ) R > set . seed ( 524837 ) R > tswv . unknown . remov . infect1 < - epictmcmc ( object = tswv $ tswvsinr , + distancekernel = " powerlaw " , datatype = " unknown removal " , blockupdate = + c ( 1 , 10 ) , nsim = 50000 , nchains = 4 , parallel = TRUE , control . sus = + covsus , kernel . par = kernel1 , delta = delta1 ) Figure 11 shows the MCMC trace plots and Gelman - Rubin convergence diagnostic plots for the model parameters α , β , δ ( inc ) and δ ( delay ) with a burn - in of 5 , 000 iterations removed and a thinning interval of 10 for the four MCMC chains . Figure 11 can be produced using the following code : R > layout ( matrix ( c ( 5 , 1 , 6 , 2 , 7 , 3 , 8 , 4 ) , ncol = 2 , byrow = T ) ) R > m1 < - window ( tswv . unknown . remov . infect1 $ parameter . samples [ [ 1 ] ] , start = + 5000 ) R > m2 < - window ( tswv . unknown . remov . infect1 $ parameter . samples [ [ 2 ] ] , start = + 5000 ) R > m3 < - window ( tswv . unknown . remov . infect1 $ parameter . samples [ [ 3 ] ] , start = + 5000 ) R > m4 < - window ( tswv . unknown . remov . infect1 $ parameter . samples [ [ 4 ] ] , start = + 5000 ) R > gelman . plot ( mcmc . list ( m1 , m2 , m3 , m4 ) , auto . layout = FALSE ) R > plot ( tswv . unknown . remov . infect1 , plottype = " parameter " , start = 5000 , + thin = 10 , density = FALSE , smooth = FALSE , auto . layout = FALSE ) The posterior means and 95 % credible intervals of these parameters are given in Table 3 . The MCMC chains show good mixing with both trace and Gelman - Rubin plots suggesting convergence . Figures 12 and 13 show the posterior means and 95 % credible intervals of the infection and removal times . Theses ﬁgures can be produced using the following commands : R > plot ( tswv . unknown . remov . infect1 , epi = tswv $ tswvsinr , plottype = + " inf . times " , start = 5000 , thin = 10 ) R > plot ( tswv . unknown . remov . infect1 , epi = tswv $ tswvsinr , plottype = + " rem . times " , start = 5000 , thin = 10 ) Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 31 Using the summary function of the object tswv . unknown . remov . infect1 , the posterior means ( 95 % CIs ) of the incubation and delay periods were found to be 0 . 320 ( 0 . 242 , 0 . 414 ) and 1 . 082 ( 0 . 957 , 1 . 224 ) observation time points , respectively , indicating an average infec - tious period of 19 . 628 days ( 1 . 402 time points ) . Note that , infection and removal times are updated here in blocks of 10 ( via the blockupdate argument ) for reasons of computational eﬃciency . The epictmcmc function had a run time of 9 . 51 hours using the parallel method with 4 cores , but this was computationally much more eﬃcient than if single updates were used ( ≈ 124 hours , calculated based on ten MCMC iterations ) . α β δ ( inc ) δ ( delay ) Mean 0 . 043 2 . 037 2 . 992 9 . 139 95 % CI ( 0 . 034 , 0 . 051 ) ( 1 . 780 , 2 . 275 ) ( 2 . 264 , 3 . 874 ) ( 8 . 046 , 10 . 292 ) Table 3 : The posterior means and 95 % credible intervals ( CIs ) of the model parameters , with a burn - in of 5 , 000 iterations and thinning interval of 10 for each of the four MCMC chains , for ﬁtting the TSWV using the SINR distance - based continuous time ILM under the assumption of unknown removal and infection times . 6 . Conclusion This paper introduces the R software package EpiILMCT , which facilitates the use of a broad range of continuous time ILMs under two compartmental frameworks ( SIR and SIN R ) . It also allows for the analysis of partially observed infectious diseases data , achieved using data augmented MCMC within a Bayesian framework . We illustrated the package by ﬁtting continuous time ILMs on simulated and real epidemic data . The paper did not cover all functionality of the package . For instance , we did not illustrate incorporat - ing both distance and network in the kernel function , or allowing for nonlinearity between the susceptibility and transmissibility risk factors and the infection rate . However , im - plementation of such facets is simple . Additional functionality that was not covered in Sections 5 can be found via help ( package = " EpiILMCT " ) . Also , it is possible to use EpiILMCT to test the eﬃcacy of disease control strategies ( eg . vaccination or culling ) via simulation study . This can be done by simulating epidemics in small time steps and then manipulating infection and / or removal times according to a given control policy , before simulating the next step of the epidemic simulation conditional upon the manipulated epidemic history just determined . We illustrate this via a simple ring - culling strategy in Appendix C . In terms of future developments , the authors intend to expand the modelling frame - work to allow for latent periods ( i . e . , susceptible - exposed - infectious - removed ( SEIR ) and 32 Continuous Time ILMs of Infectious Disease : EpiILMCT 10000 20000 30000 40000 50000 1 . 0 1 . 6 last iteration in chain s h r i n k f a c t o r median 97 . 5 % Alpha _ s [ 1 ] 10000 20000 30000 40000 50000 1 . 0 1 . 4 last iteration in chain s h r i n k f a c t o r median 97 . 5 % Spatial parameter 10000 20000 30000 40000 50000 1 . 0 1 . 4 last iteration in chain s h r i n k f a c t o r median 97 . 5 % Incubation period rate 10000 20000 30000 40000 50000 1 . 0 1 . 4 1 . 8 last iteration in chain s h r i n k f a c t o r median 97 . 5 % Delay period rate 10000 20000 30000 40000 50000 0 . 03 0 . 06 Iterations Trace of Alpha _ s [ 1 ] 10000 20000 30000 40000 50000 1 . 6 2 . 2 Iterations Trace of Spatial parameter 10000 20000 30000 40000 50000 2 . 0 4 . 0 Iterations Trace of Incubation period rate 10000 20000 30000 40000 50000 7 9 11 Iterations Trace of Delay period rate Figure 11 : The four MCMC chains ( left ) and Gelman - Rubin convergence diagnostic ( right ) plots of the posterior distributions of the model parameters α , β , δ ( inc ) and δ ( delay ) for ﬁtting the partially observed TSWV data ( unknown infection and removal times ) using the SINR distance - based continuous time ILM . susceptible - exposed - infectious - notiﬁed - removed ( SEIN R ) ) . This would be useful for many disease systems in which the time between infection ( exposure ) and infectiousness cannot be reasonably ignored . Additionally , expanding the compartmental frameworks to allow for reinfection would also be useful for diseases such as inﬂuenza . That is , we could allow for frameworks : susceptible - infectious - susceptible ( SIS ) , susceptible - exposed - infectious - susceptible ( SEIS ) , etc . Another development could involve incorporating more data uncertainty into the analyses , especially under the network - based model , is an option for future development of this Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 33 0 50 100 150 200 250 300 1 2 3 4 5 6 7 The average posterior and 95 % CI of the infection times Index I n f e c t i on t i m e s Notification times Average posterior of infection times 95 % CI Figure 12 : The posterior means ( solid red line ) and 95 % credible intervals ( dotted red lines ) of the infection times for ﬁtting the partially observed TSWV data ( unknown infection and removal times ) using the SINR distance - based continuous time ILM . The black line represents the observed notiﬁcation times . package EpiILMCT . For example , networks are often only partially observed . However , the data augmentation could easily make the computation time for data analyses prohibitive . Various strategies for mitigating this might be available . For example , approximate forms of inference such as Gaussian process emulation ( Pokharel and Deardon 2016 ) , approximate Bayesian computation ( Beaumont et al . 2009 ) , machine learning based model classiﬁcation ( Pokharel and Deardon 2014 ) , data - sampled likelihood approximation ( Malik et al . 2016 ) , or data - aggregation ( Deeth and Deardon 2016 ) could all prove useful for overcoming these computational issues . Finally , it would be possible to extend our modelling framework to allow for multiple , interacting disease strains or pathogens ( Romanescu and Deardon 2016 ) . Acknowledgments This work was funded by the Ontario Ministry of Agriculture , Food and Rural Aﬀairs 34 Continuous Time ILMs of Infectious Disease : EpiILMCT 0 50 100 150 200 250 300 2 4 6 8 10 The average posterior and 95 % CI of the removal times Index R e m o v a l t i m e s Notification times Average posterior of removal times 95 % CI Figure 13 : The posterior means ( solid red line ) and 95 % credible intervals ( dotted red lines ) of the removal times for ﬁtting the partially observed TSWV data ( unknown infection and removal times ) using the SINR distance - based continuous time ILM . The black line represents the observed notiﬁcation times . ( OMAFRA ) , and the Natural Sciences and Engineering Research Council of Canada ( NSERC ) . Almutiry was also funded by Qassim University through the Saudi Arabian Cultural Bu - reau in Canada . Warriyar was funded by the University of Calgary Eyes High Post Doctoral Scholarship scheme . We thank the editor and referees for their valuable suggestions and comments , which greatly improved both the software package and this manuscript . References Almutiry W , Warriyar K V V , Deardon R ( 2020 ) . EpiILMCT : Continuous Time Distance - Based and Network - Based Individual Level Models for Epidemics . R package version 1 . 1 . 6 , URL https : / / CRAN . R - project . org / package = EpiILMCT . Bakar KS , Sahu SK ( 2015 ) . “ spTimer : Spatio - Temporal Bayesian Modeling Using R . ” Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 35 Journal of Statistical Software , 63 ( 15 ) , 1 – 32 . URL http : / / www . jstatsoft . org / v63 / i15 . Bakar KS , Sahu SK ( 2017 ) . spTimer : Spatio - Temporal Bayesian Modeling Using R . R package version 3 . 0 - 1 , URL https : / / CRAN . R - project . org / package = spTimer . Beaumont MA , Cornuet JM , Marin JM , Robert CP ( 2009 ) . “Adaptive Approximate Bayesian Computation . ” Biometrika , 96 ( 4 ) , 983 – 990 . Bengtsson H ( 2019 ) . future . apply : Apply Function to Elements in Parallel using Futures . R package version 1 . 2 . 0 , URL https : / / CRAN . R - project . org / package = future . apply . Bifolchi N , Deardon R , Feng Z ( 2013 ) . “Spatial Approximations of Network - Based Indi - vidual Level Infectious Disease Models . ” Spatial and Spatio - temporal Epidemiology , 6 , 59 – 70 . Bivand R , Hauke J , Kossowski T ( 2013 ) . “Computing the Jacobian in Gaussian Spatial Autoregressive Models : An Illustrated Comparison of Available Methods . ” Geographical Analysis , 45 ( 2 ) , 150 – 179 . Bivand R , Piras G ( 2015 ) . “Comparing Implementations of Estimation Methods for Spatial Econometrics . ” Journal of Statistical Software , 63 ( 18 ) , 1 – 36 . URL https : / / www . jstatsoft . org / v63 / i18 / . Britton T , O’Neill PD ( 2002 ) . “Bayesian Inference for Stochastic Epidemics in Populations with Random Social Structure . ” Scandinavian Journal of Statistics , 29 ( 3 ) , 375 – 390 . Brown S , Csinos A , D´ıaz - P´erez J , Gitaitis R , LaHue S , Lewis J , Martinez N , McPherson R , Mullis S , Nischwitz C , et al . ( 2005 ) . “Tospoviruses in Solanaceae and Other Crops in The Coastal Plain of Georgia . ” The University of Georgia College of Agriculture and Environmental Sciences , Research Report , 704 , 19 . Caimo A , Friel N ( 2014 ) . “ Bergm : Bayesian Exponential Random Graphs in R . ” Journal of Statistical Software , 61 ( 2 ) , 1 – 25 . URL http : / / www . jstatsoft . org / v61 / i02 / . Csardi G , Nepusz T ( 2006 ) . “The igraph Software Package for Complex Network Research . ” InterJournal , Complex Systems , 1695 . URL http : / / igraph . org . Deardon R , Brooks SP , Grenfell BT , Keeling MJ , Tildesley MJ , Savill NJ , Shaw DJ , Wool - house ME ( 2010 ) . “Inference for Individual - Level Models of Infectious Diseases in Large Populations . ” Statistica Sinica , 20 ( 1 ) , 239 . Deeth LE , Deardon R ( 2016 ) . “Spatial Data Aggregation for Spatio - Temporal Individual - Level Models of Infectious Disease Transmission . ” Spatial and Spatio - temporal Epidemi - ology , 17 , 95 – 104 . 36 Continuous Time ILMs of Infectious Disease : EpiILMCT Groendyke C , Welch D ( 2018 ) . “ epinet : An R Package to Analyze Epidemics Spread across Contact Networks . ” Journal of Statistical Software , 83 ( 11 ) , 1 – 22 . doi : 10 . 18637 / jss . v083 . i11 . Handcock MS , Hunter DR , Butts CT , Goodreau SM , Krivitsky PN , Morris M ( 2017 ) . ergm : Fit , Simulate and Diagnose Exponential - Family Models for Networks . The Statnet Project ( http : / / www . statnet . org ) . R package version 3 . 8 . 0 , URL https : / / CRAN . R - project . org / package = ergm . H¨ohle M , Meyer S , Paul M ( 2018 ) . surveillance : Temporal and Spatio - Temporal Modeling and Monitoring of Epidemic Phenomena . R package version 1 . 16 . 0 , URL https : / / CRAN . R - project . org / package = surveillance . Hughes G , McRoberts N , Madden LV , Nelson SC ( 1997 ) . “Validating Mathematical Models of Plant - Disease Progress in Space and Time . ” Mathematical Medicine and Biology : A Journal of the Institute of Mathematics and Its Applications , 14 ( 2 ) , 85 – 112 . Hunter DR , Handcock MS , Butts CT , Goodreau SM , Morris M ( 2008 ) . “ ergm : A Package to Fit , Simulate and Diagnose Exponential - Family Models for Networks . ” Journal of Statistical Software , 24 ( 3 ) , 1 – 29 . Jenness SM , Goodreau SM , Morris M ( 2018 ) . “ EpiModel : An R Package for Mathematical Modeling of Infectious Disease over Networks . ” Journal of Statistical Software , 84 ( 8 ) , 1 – 47 . doi : 10 . 18637 / jss . v084 . i08 . Jewell CP , Kypraios T , Neal P , Roberts GO , et al . ( 2009 ) . “Bayesian Analysis for Emerging Infectious Diseases . ” Bayesian Analysis , 4 ( 3 ) , 465 – 496 . Kwong GP , Poljak Z , Deardon R , Dewey CE ( 2013 ) . “Bayesian Analysis of Risk Factors for Infection with A Genotype of Porcine Reproductive and Respiratory Syndrome Virus in Ontario Swine Herds Using Monitoring Data . ” Preventive Veterinary Medicine , 110 ( 3 - 4 ) , 405 – 417 . Lee D , Rushworth A , Napier G ( 2018 ) . “Spatio - Temporal Areal Unit Modeling in R with Conditional Autoregressive Priors Using the CARBayesST Package . ” Journal of Statis - tical Software , 84 ( 9 ) , 1 – 39 . doi : 10 . 18637 / jss . v084 . i09 . Malik R , Deardon R , Kwong GP ( 2016 ) . “Parameterizing Spatial Models of Infectious Dis - ease Transmission that Incorporate Infection Time Uncertainty Using Sampling - Based Likelihood Approximations . ” PloS One , 11 ( 1 ) , e0146253 . Malik R , Deardon R , Kwong GP , Cowling BJ ( 2014 ) . “Individual - Level Modeling of the Spread of Inﬂuenza within Households . ” Journal of Applied Statistics , 41 ( 7 ) , 1578 – 1592 . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 37 Martin AD , Quinn KM , Park JH ( 2011 ) . “ MCMCpack : Markov Chain Monte Carlo in R . ” Journal of Statistical Software , 42 ( 9 ) , 22 . URL http : / / www . jstatsoft . org / v42 / i09 / . Meyer S , Held L , H¨ohle M ( 2017 ) . “Spatio - Temporal Analysis of Epidemic Phenomena Using the R Package surveillance . ” Journal of Statistical Software , 77 ( 11 ) , 1 – 55 . doi : 10 . 18637 / jss . v077 . i11 . Pebesma E ( 2018 ) . CRAN Task View : Handling and Analyzing Spatio - Temporal Data . Version 2018 - 04 - 20 , URL https : / / CRAN . R - project . org / view = SpatioTemporal . Pitzer VE , Leung GM , Lipsitch M ( 2007 ) . “Estimating Variability in the Transmission of Severe Acute Respiratory Syndrome to Household Contacts in Hong Kong , China . ” American Journal of Epidemiology , 166 ( 3 ) , 355 – 363 . Plummer M , Best N , Cowles K , Vines K ( 2006 ) . “CODA : Convergence Diagnosis and Output Analysis for MCMC . ” R News , 6 ( 1 ) , 7 – 11 . URL https : / / journal . r - project . org / archive / . Pokharel G , Deardon R ( 2014 ) . “Supervised Learning and Prediction of Spatial Epidemics . ” Spatial and Spatio - temporal Epidemiology , 11 , 59 – 77 . Pokharel G , Deardon R ( 2016 ) . “Gaussian Process Emulators for Spatial Individual - Level Models of Infectious Disease . ” Canadian Journal of Statistics , 44 ( 4 ) , 480 – 501 . R Epidemics Consortium ( 2018 ) . “Released Projects and Packages . ” Retrieved 2018 - 03 - 28 from http : / / www . repidemicsconsortium . org / projects / . R Core Team ( 2019 ) . R : A Language and Environment for Statistical Computing . R Foun - dation for Statistical Computing , Vienna , Austria . URL https : / / www . R - project . org / . Romanescu R , Deardon R ( 2016 ) . “Modeling Two Strains of Disease via Aggregate - level Infectivity Curves . ” Journal of Mathematical Biology , 72 ( 5 ) , 1195 – 1224 . Rowlingson B , Diggle P ( 2017 ) . splancs : Spatial and Space - Time Point Pattern Analysis . R package version 2 . 01 - 40 , URL https : / / CRAN . R - project . org / package = splancs . Salmon M , Schumacher D , H¨ohle M ( 2016 ) . “Monitoring Count Time Series in R : Aber - ration Detection in Public Health Surveillance . ” Journal of Statistical Software , 70 ( 10 ) , 1 – 35 . doi : 10 . 18637 / jss . v070 . i10 . Scheidegger A ( 2018 ) . adpatMCMC : Implementation of a Generic Adaptive Monte Carlo Markov Chain Sampler . R package version 1 . 3 , URL https : / / CRAN . R - project . org / package = adaptMCMC . 38 Continuous Time ILMs of Infectious Disease : EpiILMCT Schweinberger M , Handcock M , Luna P ( 2018 ) . hergm : Hierarchical Exponential - Family Random Graph Models with Local Dependence . R package version 3 . 2 - 0 , URL https : / / CRAN . R - project . org / package = hergm . Taylor BM , Davies TM , Rowlingson BS , Diggle PJ ( 2013 ) . “ lgcp : An R Package for Inference with Spatial and Spatio - Temporal Log - Gaussian Cox Processes . ” Journal of Statistical Software , 52 ( 4 ) , 1 – 40 . URL http : / / www . jstatsoft . org / v52 / i04 / . Taylor BM , Davies TM , Rowlingson BS , Diggle PJ ( 2015 ) . “Bayesian Inference and Data Augmentation Schemes for Spatial , Spatiotemporal and Multivariate Log - Gaussian Cox Processes in R . ” Journal of Statistical Software , 63 ( 7 ) , 1 – 48 . URL http : / / www . jstatsoft . org / v63 / i07 / . Warriyar KV V , Deardon R ( 2018 ) . EpiILM : Spatial and Network Based Individual Level Models for Epidemics . R package version 1 . 4 . 2 , URL https : / / CRAN . R - project . org / package = EpiILM . Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 39 A . The likelihood function of the general SIN R continuous time ILMs : L ( I , N , R | θ ) = m (cid:89) j = 2   (cid:15) + (cid:88) i : I i < I j ≤ N i λ − ij ( I j ) + (cid:88) i : N i < I j ≤ R i λ + ij ( I j )   × exp   − (cid:90) t obs I 1   (cid:88) i ∈S ( u ) (cid:15) + (cid:88) i ∈I ( u ) (cid:88) j ∈S ( u ) λ − ij ( u − I i ) + (cid:88) i ∈N ( u ) (cid:88) j ∈S ( u ) λ + ij ( u − I i )   du   × m (cid:89) i = 1 f ( D ( inc ) i ; δ ( inc ) ) m (cid:89) i = 1 f ( D ( delay ) i ; δ ( delay ) ) = m (cid:89) j = 2   (cid:15) + (cid:88) i : I i < I j ≤ N i λ − ij ( I j ) + (cid:88) i : N i < I j ≤ R i λ + ij ( I j )   × exp   − m (cid:88) i = 1   N (cid:88) j = 1 ( ( t obs ∧ N i ∧ I j ) − ( I i ∧ I j ) ) λ − ij ( I j )     × exp   − m (cid:88) i = 1   N (cid:88) j = 1 ( ( t obs ∧ R i ∧ I j ) − ( I i ∧ I j ) ) − ( ( t obs ∧ N i ∧ I j ) − ( I i ∧ I j ) ) λ + ij ( I j )     × exp (cid:32) − (cid:15) N (cid:88) i = 1 [ ( t obs ∧ I i ) − I 1 ] (cid:33) × m (cid:89) i = 1 f ( D ( inc ) i ; δ ( inc ) ) m (cid:89) i = 1 f ( D ( delay ) i ; δ ( delay ) ) δ ( inc ) , δ ( delay ) > 0 , ( 5 ) where the wedge symbol ∧ denotes the minimum operator ; and D inci and D delayi are the incubation and delay periods such that D inci = N i − I i and D delayi = R i − N i , respectively . 40 Continuous Time ILMs of Infectious Disease : EpiILMCT B . R code for extracting individual level data from surveillance Here , we illustrate the extraction of individual level data from the surveillance package for use in the EpiILMCT package . We consider the toy data set ( fooepidata ) representing a population of 100 individuals that is used in the twinSIR examples of the surveillance package ( H¨ohle et al . 2018 ) . The data can be found in surveillance via data ( " fooepidata " , package = " surveillance " ) . R > library ( " surveillance " ) R > data ( " fooepidata " ) R > names ( fooepidata ) [ 1 ] " BLOCK " " id " " start " " stop " " atRiskY " " event " " Revent " [ 8 ] " x " " y " " z1 " " z2 " " B1 " " B2 " The fooepidata event history consists of 178 time BLOCK s of 100 rows , where each row describes the state of individual id during the corresponding time interval ( start , stop ) . R > head ( fooepidata , n = 5 ) BLOCK id start stop atRiskY event Revent x y 1 1 1 0 0 . 6970682 1 0 0 1 . 262954285 0 . 7818592 246 1 2 0 0 . 6970682 1 0 0 - 0 . 326233361 - 0 . 7767766 369 1 3 0 0 . 6970682 1 0 0 1 . 329799263 - 0 . 6159899 612 1 4 0 0 . 6970682 1 0 0 1 . 272429321 0 . 0465803 760 1 5 0 0 . 6970682 1 0 0 0 . 414641434 - 1 . 1303858 z1 z2 B1 B2 1 0 0 . 0000000 0 0 246 1 0 . 6931472 0 0 369 0 1 . 0986123 0 0 612 1 1 . 3862944 0 0 760 1 1 . 6094379 0 0 [ . . . . ] The start and stop variables represent the start and end of interval time points ( in con - tinuous time ) that indicate the waiting time between consequence event times ( infection and removal times ) . The binary variables event and Revent are used to indicate the oc - currence of newly infected or removed individuals at the stop time of each time interval ( BLOCK ) , respectively . Thus , the stop time is taken to be the infection or removal times of the infected or removed individuals in each time interval . The coordinates of individuals is represented in columns x and y . The fooepidata data set contains also endemic and Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 41 epidemic covariates . Endemic covariates are represented by the columns named z1 and z2 ( the exact interpretation of these covariates is not given ) . Epidemic covariates are repre - sented by the columns named B1 and B2 , and they indicate the count of currently infective individuals for each individual within , and greater than one unit distance , respectively . See ( help ( epidata , package = " surveillance " ) ) for more details about the data structure . From this data set , we extract only the event times and XY coordinates of each individual , ignoring the purely spatial epidemic covariates which are directly modelled by the distance kernel in EpiILMCT . R > epi < - summary ( fooepidata ) $ byID R > loc < - summary ( fooepidata ) $ coordinates R > epi [ is . na ( epi ) ] < - Inf R > epi < - transform ( epi , period = ifelse ( is . infinite ( time . I ) , 0 , time . R - + time . I ) ) R > epi $ id < - as . integer ( as . character ( epi $ id ) ) R > epidat < - as . matrix ( epi [ c ( " id " , " time . R " , " period " , " time . I " ) ] ) R > library ( " EpiILMCT " ) R > epi < - as . epidat ( type = " SIR " , kerneltype = " distance " , inf . time = + epidat [ , 4 ] , rem . time = epidat [ , 2 ] , id . individual = epidat [ , 1 ] , + location = loc ) The object epi of class ‘datagen’ can be now used in the EpiILMCT package using the model given in Equation 3 without covariates through the following code : R > set . seed ( 101 ) R > sus . par < - list ( NULL ) R > sus . par [ [ 1 ] ] < - list ( 0 . 1 , c ( " gamma " , 1 , 0 . 001 , 0 . 005 ) ) R > sus . par [ [ 2 ] ] < - matrix ( rep ( 1 , length ( epi $ epidat [ , 1 ] ) ) , ncol = 1 ) R > kernel < - list ( 0 . 1 , c ( " gamma " , 1 , 0 . 001 , 0 . 1 ) ) R > spark < - list ( 0 . 1 , c ( " gamma " , 1 , 0 . 001 , 0 . 05 ) ) R > mcmc1 < - epictmcmc ( object = epi , distancekernel = " powerlaw " , datatype = + " known epidemic " , nsim = 50000 , control . sus = sus . par , kernel . par = + kernel , spark . par = spark ) We include the spark term here to best model the endemic component used in the twinSIR model . The inclusion of the spark term also allows for the fact that there are no infectious individuals during times intervals ( BLOCK ) of the epidemic . The infection of individuals in these periods is captured by the endemic part in twinSIR function . Without incorporating the spark term in the epictmcmc function , a zero likelihood will re - sult , preventing the successful ﬁtting of the model to the data . To get the output estimates of the model parameters , we used the S3 method summary . epictmcmc as follows : 42 Continuous Time ILMs of Infectious Disease : EpiILMCT R > summary ( mcmc1 , start = 1000 ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Model : SIR distance - based continuous - time ILM Method : Markov chain Monte Carlo ( MCMC ) Data assumption : fully observed epidemic number . chains : 1 chains number . iteration : 49000 iterations number . parameter : 3 parameters * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 1 . Empirical mean and standard deviation for each variable , plus standard error of the mean : Mean SD Naive SE Time - series SE Alpha _ s [ 1 ] 0 . 00889042 0 . 00110553 4 . 99425e - 06 1 . 54972e - 05 Spark 0 . 00778819 0 . 00436839 1 . 97342e - 05 6 . 85098e - 05 Spatial parameter 0 . 94175614 0 . 18258926 8 . 24846e - 04 3 . 82173e - 03 2 . Quantiles for each variable : 2 . 5 % 25 % 50 % 75 % 97 . 5 % Alpha _ s [ 1 ] 0 . 00686125 0 . 00811098 0 . 00884201 0 . 00962789 0 . 0111386 Spark 0 . 00131269 0 . 00452088 0 . 00718377 0 . 01034424 0 . 0180864 Spatial parameter 0 . 54032375 0 . 82833931 0 . 95593444 1 . 07000331 1 . 2615483 3 . Empirical mean , standard deviation , and quantiles for the log likelihood , Mean SD Naive SE Time - series SE - 2 . 30176e + 02 1 . 23456e + 00 5 . 57714e - 03 2 . 00104e - 02 2 . 5 % 25 % 50 % 75 % 97 . 5 % - 233 . 367 - 230 . 757 - 229 . 854 - 229 . 263 - 228 . 752 4 . acceptance . rate : Alpha _ s [ 1 ] Spark Spatial parameter 0 . 253945 0 . 169543 0 . 810156 We also demonstrate the modelling of these data using twinSIR function with no endemic covariates . However , a baseline term ( baseline hazard rate ) will be included in this case in the endemic component to represent the background rate of infection in the population , as explained in the note Section in help ( twinSIR , package = " surveillance " ) . The following code illustrates the use of twinSIR in analyzing this data set . R > fit1 < - twinSIR ( ~ B1 + B2 , data = fooepidata ) R > summary ( fit1 ) Call : twinSIR ( formula = ~ B1 + B2 , data = fooepidata ) Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 43 Coefficients : Estimate Std . Error z value Pr ( > | z | ) B1 0 . 023960 0 . 004208 5 . 693 1 . 25e - 08 * * * B2 0 . 003395 0 . 001119 3 . 034 0 . 00241 * * cox ( logbaseline ) - 6 . 010580 0 . 659257 - 9 . 117 < 2e - 16 * * * - - - Signif . codes : 0 ' * * * ' 0 . 001 ' * * ' 0 . 01 ' * ' 0 . 05 ' . ' 0 . 1 ' ' 1 Total number of infections : 88 One - sided AIC : 474 . 05 Log - likelihood : - 235 . 2 Number of log - likelihood evaluations : 26 The posterior means of the ILM parameters ( α , β ) are 0 . 009 and 0 . 945 , respectively . Figure 14 shows the ILM power - law distance kernel function under the posterior mean , along with the distance function suggested by the MLEs of the model parameters from the twinSIR analysis . We can see broad agreement , although the step function assumption of the twinSIR seems less reasonable than the continuous decay of the ILM kernel for short distances ( < 1 distance unit ) . 44 Continuous Time ILMs of Infectious Disease : EpiILMCT 0 1 2 3 4 5 0 . 00 0 . 02 0 . 04 0 . 06 0 . 08 0 . 10 Distance D i s t an c e k e r ne l Figure 14 : The marginal posterior distribution of the distance kernels . Black line represent the spatial terms of the surveillance package , and red line represents the distance kernel function of the EpiILMCT package . C . R code for implementing ring - based control strategy Here , we illustrate the use of the EpiILMCT package in testing the eﬃcacy of a ring - based control strategy for mitigating the spread of disease . We consider an example in which an infectious disease is transmitted between 625 individuals located in a square area of 50 × 50 units . These individuals could be thought to represent farms or trees , say . We implement control measures upon all individuals within a circle of r radius of newly infected individuals . This control strategy essentially places these individuals in the removed set . These measures could be thought to represent vaccination or quarantine , but here we assume it is a culling strategy . To illustrate we ﬁrst simulate the XY coordinates of individuals from a uniform distribution . This is done as follows : R > library ( " EpiILMCT " ) R > set . seed ( 101 ) R > n < - 625 Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 45 R > loc < - matrix ( cbind ( runif ( n , 0 , 50 ) , runif ( n , 0 , 50 ) ) , ncol = 2 , nrow = n ) We assume that the epidemic starts with an initial infected individual k = 386 , who has an infection time I 1 = 0 and an infectious period of 3 days . We then implement the culling pol - icy within an epidemic simulation study using the datagen command to simulate epidemics in a speciﬁed small time steps ( e . g . , a day at a time ) . This is done by setting the option tmax , and starting each new simulation step with initially infected and removed individuals set according to the epidemic history , and the culling policy implemented at the current time step . This is done using the initialepi option . We build a control . strategy function to implement the above culling policy using an SIR distance - based continuous time ILM with power - law kernel and no covariates , in which the infectivity rate given in Equation 3 becomes : λ j ( t ) =   α (cid:88) i ∈I ( t ) d − β ij   , α , β > 0 , with infectious periods assumed to follow a gamma distribution such that γ i ∼ Γ ( 6 , δ ) . R > control . strategy < - function ( init . epi , location , inf . time , par . sus , + par . ker , delt , cov . sus = NULL , radius ) { + n < - length ( location [ , 1 ] ) + tss < - init . epi + cov1 < - cov . sus + dis < - as . matrix ( dist ( location ) ) + for ( i in 2 : length ( inf . time ) ) { + mn < - sum ( tss [ , 4 ] < = inf . time [ i - 1 ] ) + initial1 < - matrix ( tss [ 1 : mn , ] , ncol = 4 , nrow = mn ) + tss1 < - datagen ( type = " SIR " , kerneltype = " distance " , + kernelmatrix = location , distancekernel = " powerlaw " , + initialepi = initial1 , tmax = inf . time [ i ] , suspar = par . sus , + transpar = NULL , kernel . par = par . ker , delta = delt , + transcov = NULL , suscov = cov1 ) + tss < - tss1 $ epidat + newlyinfected < - tss [ which ( tss [ , 4 ] > inf . time [ i - 1 ] & + tss [ , 4 ] < = inf . time [ i ] ) , 1 ] + num . infected < - sum ( tss [ , 2 ] ! = Inf ) + uninfected < - tss [ ( num . infected + 1 ) : n , 1 ] + # All individuals within the ring of a radius ( radius ) of + # the newly infected are removed : + for ( j in 1 : length ( newlyinfected ) ) { + mk < - as . integer ( which ( dis [ newlyinfected [ j ] , uninfected ] < + radius ) ) 46 Continuous Time ILMs of Infectious Disease : EpiILMCT + if ( length ( mk ) > 0 ) { + cov1 [ uninfected [ mk ] , ] = 0 + } + } + } + list ( tss1 , cov1 ) + } Let us assume we have estimates of the model parameters as ˆ α = 1 . 5 , ˆ β = 4 , and ˆ δ = 2 . Using these estimates , we test the above function for eight values of the radius of the culling policy , and obtain 32 replicated epidemics for each radius setting . The code to achieve this is as follows : R > id . init < - 386 R > inf . period . init < - 3 R > kl < - which ( seq _ len ( 625 ) ! = id . init ) R > init . epi < - rbind ( c ( 386 , inf . period . init , inf . period . init , 0 ) , + cbind ( kl , rep ( Inf , 624 ) , rep ( 0 , 624 ) , rep ( Inf , 624 ) ) ) R > rr < - seq _ len ( 8 ) R > inf . time < - seq ( 0 , 30 , by = 1 ) R > par . sus < - 1 . 5 R > par . ker < - 4 . 0 R > delt < - c ( 6 , 2 ) R > sus . cov < - matrix ( rep ( 1 , 625 ) , ncol = 1 ) R > ninfected < - matrix ( 0 , ncol = 32 , nrow = length ( rr ) ) R > numb . culled < - matrix ( 0 , ncol = 32 , nrow = length ( rr ) ) R > len . infection < - matrix ( 0 , ncol = 32 , nrow = length ( rr ) ) R > for ( i in 1 : length ( rr ) ) { + for ( j in 1 : 32 ) { + epi . cont < - control . strategy ( init . epi , location = loc , inf . time , + par . sus , par . ker , delt , cov . sus = sus . cov , radius = rr [ i ] ) + ninfected [ i , j ] < - sum ( epi . cont [ [ 1 ] ] $ epidat [ , 2 ] ! = Inf ) + numb . culled [ i , j ] < - n - apply ( epi . cont [ [ 2 ] ] , 2 , sum ) + len . infection [ i , j ] < - max ( epi . cont [ [ 1 ] ] $ epidat [ 1 : ninfected [ i , j ] , + 2 ] ) - min ( epi . cont [ [ 1 ] ] $ epidat [ 1 : ninfected [ i , j ] , 4 ] ) + } + } The output of the above loops is an 8 × 32 matrices of the number of infected and culled individuals and the length of epidemics for the radius set . We then use the function apply from the base package ( R Core Team 2019 ) to get the average of each summary at each radius , and plot them versus radius using the following code : Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 47 R > plot ( rr , apply ( ninfected , 1 , mean ) , type = " o " , ylab = " Number of + individuals " , xlab = " radius " , ylim = c ( 0 , n ) , pch = 19 ) R > lines ( rr , apply ( numb . culled , 1 , mean ) , type = " o " , pch = 19 , col = " red " ) R > legend ( " topright " , c ( " Average number of infected individuals " , " Average + number of culled individuals " ) , col = c ( " black " , " red " ) , lty = c ( 1 , 1 ) , + pch = c ( 19 , 19 ) ) R > plot ( rr , apply ( len . infection , 1 , mean ) , type = " o " , ylab = " Length of + epidemic " , xlab = " radius " , pch = 19 ) Figure 15 shows the average number of infected and culled individuals at each radius . We can see that the number of infected individuals tends to decrease dramatically as the radius of the ring increases , levelling oﬀ once we have to get around r = 5 units . However , the number of culled individuals also increases quite dramatically with increasing the radius of the ring , also levelling oﬀ around r = 7 units . We can also see from Figure 16 increasing the radius r tends to decrease the length of the epidemic . l l l l l l l l 1 2 3 4 5 6 7 8 0 100 200 300 400 500 600 radius N u m be r o f i nd i v i dua l s l l l l l l l l l l Average number of infected individuals Average number of culled individuals Figure 15 : The average number of infected ( black ) and culled ( red ) individuals at each radius . Of course , the control . strategy function can be easily modiﬁed to impose other control strategies . For example , instead of culling within a time step as in the case here , we could allow for ( stochastic ) delays between infection and culling for surrounding individuals , or allow for only a probability of failure regarding each cull or vaccination event . 48 Continuous Time ILMs of Infectious Disease : EpiILMCT l l l l l l l l 1 2 3 4 5 6 7 8 26 27 28 29 30 31 32 33 radius Leng t h o f ep i de m i c Figure 16 : The average length of epidemics at each radius . D . Comparing the computation times of running diﬀerent models Here , we compare the eﬀect of population size and the number of infected individuals on the computation time for running the epictmcmc function . We considered ﬁve popula - tion sizes ( 50 , 250 , 450 , 650 and 850 individuals ) , and generated three diﬀerent epidemics using SIR distance - based continuous time ILMs , via the datagen function , resulting in diﬀerent numbers of infected individuals . These epidemics are categorized into three levels as : small , medium , large deﬁned as epidemics in which the number of infected individuals are less than 25 % , between 25 % and 50 % , or greater than 50 % of the population , respec - tively . Then , we run the epictmcmc three times assuming datatype = " known epidemic " , " known removal " with single chain , and " known removal " with three chains , updating the infection times in blocks of size ﬁve . Figure 17 shows the computation times in hours for running the epictmcmc function on the above epidemics to obtain 150 , 000 MCMC samples . The computation times were approximated on the basis of running ten iterations , as our concern here is just to see to estimate the eﬀect of population size and number of infected individuals upon computation time . We observed strong correlation between the population sizes and number of infected individuals in all of the considered analysis scenarios . We see that under the fully observed epidemic assumption ( datatype = " known epidemic " ) , the function epictmcmc can be performed in reasonable time for all scenarios . However , Waleed Almutiry , Vineetha Warriyar K V , Rob Deardon 49 datatype = " known epidemic " The size of the number of infected C o m pu t a t i on t i m e ( i n hou r s ) small Medium Large 0 1 2 3 4 5 6 7 datatype = " known removal " single chain The size of the number of infected C o m pu t a t i on t i m e ( i n hou r s ) small Medium Large 0 500 1000 1500 datatype = " known removal " three chains The size of the number of infected C o m pu t a t i on t i m e ( i n ho u r s ) small Medium Large 0 50 100 150 200 population size = 50 population size = 250 population size = 450 population size = 650 population size = 850 Figure 17 : Approximated computation times of running the epictmcmc function for ﬁt - ting diﬀerent epidemic data sets , with diﬀerent population sizes and number of infected individuals , using SIR distance - based continuous time ILMs under three scenarios : fully observed epidemics , partially observed epidemics with a single MCMC chain , and three MCMC chains . computation time becomes an issue for partially observed epidemics ( datatype = " known removal " ) when updating the infection times in turn in a single chain . Larger epidemics with larger population sizes were estimated to take more than four weeks to obtain 150 , 000 MCMC samples . Computation time is greatly reduced by running epictmcmc over multiple chains and updating infection times in blocks of size ﬁve . For example , with an epidemic in a population of size was 850 individuals , and almost all of individuals infected , the com - putation time was reduced from approximately 1548 hours ( ≈ 65 days ) to 157 hours ( ≈ 7 days ) . 50 Continuous Time ILMs of Infectious Disease : EpiILMCT Aﬃliation : Waleed Almutiry Department of Mathematics College of Science and Arts in Ar Rass Qassim University Qassim , Saudi Arabia E - mail : wkmtierie @ qu . edu . sa Vineetha Warriyar K V Sport Injury Prevention Research Centre Faculty of Kinesiology University of Calgary Calgary , AB Canada E - mail : vineethawarriyar . kod @ ucalgary . ca Rob Deardon Faculty of Veterinary Medicine Department of Mathematics and Statistics University of Calgary Calgary , AB Canada E - mail : robert . deardon @ ucalgary . ca URL : http : / / people . ucalgary . ca / ~ robert . deardon /