Five Key Challenges in End - User Development for Tangible and Embodied Interaction Daniel Tetteroo , Iris Soute , Panos Markopoulos Eindhoven University of Technology Den Dolech 2 5612 AZ Eindhoven { d . tetteroo , i . a . c . soute , p . markopoulos } @ tue . nl ABSTRACT As tangible and embodied systems are making the transition from the labs to everyday life , there is a growth in the applications related research and design work in this field . We argue that the potential of these technologies can be even further leveraged by enabling domain experts such as teachers , therapists and home owners to act as end - user developers in order to modify and create content for their tangible interactive systems . However , there are important issues that need to be addressed if we want to enable these end users to act as developers . In this paper we identify five key challenges for meta - designers in enabling end - users to develop for tangible and embodied interaction . Categories and Subject Descriptors H . 5 . 2 [ Information Interfaces and Presentation ] : User Interfaces . K . 4 . 3 [ Computers and Society ] : Organizational impacts – Reengineering . Keywords Tangible interaction ; embodied interaction ; end - user development ; meta - design ; research agenda 1 . INTRODUCTION A growing trend that can be observed in the field of Human Computer Interaction ( HCI ) is the adaptation and personalization of interactive devices [ 9 ] . Coming from the ultimately impersonal mainframe systems of the 60’s , interactive devices have developed into personal artifacts that are deeply integrated in users’ lives . However , this trend of personalization puts ever more pressure on developers and designers of interactive systems . No longer do users accept one - size - fits - all solutions , instead they demand and expect personalized interaction . Despite the sophistication and prevalence of user centered design methods , it is increasingly problematic for developers to fully anticipate the needs of users at design time . Consequently , it has been proposed that end - users themselves should be enabled create and adapt systems to their liking , in order to satisfy their personal needs [ 20 ] . This approach brings about a transformation to the role of the user , who assumes an increasing number of responsibilities traditionally intended for developers , and an increasing number of tasks typically carried out by professional programmers . The technology and practices that can support this transformation have traditionally occupied the field of end - user development ( EUD ) . EUD can take different forms , ranging from simply specifying parameter values , to recording and packaging repetitive interactions in macros , to creating completely new content and system behaviors using scripts , models like spreadsheets , or even full blown programming languages [ 23 ] . Traditionally restricted to software systems , these trends are bound to be extended to Tangible and Embedded Interfaces ( TEI ) , systems that blend interactive computing with the physical world , where tangible objects and wearable computing devices give a physical and embodied dimension to interaction . To achieve deployment in real life settings , TEI , even more than traditional user interfaces , depend on the input of users to be adapted to their body , their physical environment , their personal needs , context , and subjective preferences . TEIs are gradually making the transition from a topic of research , to a technology that can be put to use in a wide variety of application areas including education , healthcare , and games . Almost two decades have elapsed since Fitzmaurice , Ishii and Buxton first explored the idea of graspable user interfaces [ 11 ] . Whereas then explorations required sophisticated engineering effort to set up a demonstration or a simple system to test with users , technologies such as Phidgets [ 14 ] , Arduino [ 3 ] , Max MSP and . NET gadgeteer [ 31 ] have empowered a much larger and less technology savvy population of students , designers , and amateur enthusiast to create their own TEI technologies , to explore the ergonomic and aesthetic aspects of TEI’s . Explorations of this kind are starting to reach the market with several commercial technologies now being available , such as the Sifteo cubes [ 22 ] and the TagTiles board [ 30 ] , that allow the development of TEI’s . In many ways , the field of TEI is at a similar state of affairs as the Graphical User Interfaces were in the mid - eighties , with the appearance of some first commercial products and the appearance of toolkits ( e . g . , Xtk ) and libraries ( e . g . , Xlib ) that could package reusable solutions and hide complexity from the developer . Technologies that democratize the development of TEI even further are growing in popularity , enabling the application of TEI in different domains such as education , physical therapies , and digital homes . We argue that this potential can be even further leveraged by enabling domain experts in these fields ( such as teachers , therapists and home owners ) to act as End - User Developers in order to modify and create content for their tangible interactive systems . As we are concerned with the diffusion of TEI technologies beyond informatics experts and research labs , end - user developers are seen here as individuals who cannot be assumed to be trained programmers . Further , as professionals their role , activities , and tasks are not related directly to software development . Rather they can be assumed to be experts in a particular professional domain , who stand to benefit from the adaptation or creation of software to facilitate others . For example , we might consider educators Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . Request permissions from permissions @ acm . org . ICMI’13 , December 9 – 12 , 2013 , Sydney , Australia . Copyright © 2013 ACM 978 - 1 - 4503 - 2129 - 7 / 13 / 12… $ 15 . 00 . http : / / dx . doi . org / 10 . 1145 / 2522848 . 2522887 247 ainteb TdbtaRe InathTre 2 Indaliouaud Apspppnbte Fbdptrpepsbinpthtoaac Ineutee ( mth adapting system ndividual learne echnology as pa by technology , et This paper discu design and deve broader context angible interfac Rather than jus end - user develop n the remainder authors , from w hink , should be TEI . We illustra esearch in the f embodied interac 2 . DEFININ n their definiti describe the end - a general definit ines of research of over - generaliz use of compute administrator an users , but the ro differs greatly . A lot of EUD res primary tasks in spreadsheets ) , i . e paper is on end primary school professionals ha necessary for cre but their functi echnology devel Furthermore we between the ‘end development act person who uses raditional view professional dev end - user develop personal use . stakeholders tha broader . For exa ntended for cla primary school , w he robot , in ord o the needs of although teacher activities , they ar create . n this example education . These users ( their clien echnology prov example are po meta - ) developer heory [ 8 ] . ms to education ers , health wor art of an individ tc . usses the key issu elop their own T than that of ta ces are used to st ‘programmin pment for tangibl of this paper , w which we identi considered by d ate these key iss fields of end - us ction , as well as NG END - U ion of end - use - user as ‘ simply tion is certainly in end - user pro zation . After all , er technology b nd a primary sch ole of compute search in the pas nvolve the use e . so - called infor d - users that are teachers and ave high doma eating , adapting on does not tr loper / programm think that for EU d - user’ in the se tivities , and the the product of w on end - user velopers create a pers modify an However , in at are involved ample , a technol assroom use . S where the teache er to accommod individual pupi rs are clearly in re not the clients e , our end - user e professionals nts , i . e . pupils ) ; vider , the teach ositioned on a rs to users , as h nal content an rkers facilitating dualized health ues facing end u TEI solutions . N angible program o perform prog ng with tangibl le interactive sys we discuss two ca ify five key ch designers of EUD sues with examp er development from our own re SERS r programming any computer u y useful in bridg ogramming , it al , there is a great between , for ex hool teacher . B er technology in st has focused on of computer s rmation workers e non - informati rehabilitation t ain specific ex g , and personaliz raditionally inc er . UD a distinction ense of the pers e ‘end - user’ in these developm development i a technical envir nd create softwa many cases t in this proces logy provider se uch a robot is ers modify and c date the robot’s ils in their clas nvolved in end - u s or end - users of developers are adapt technolog as is visualized hers and the st a continuum th has been propose nd the needs g patients to u regime supporte users who wish Note that this is mming ( i . e . whe gramming tasks es’ , we consid stems . ases studies by th hallenges that , w D technologies f ples from releva and tangible an esearch . g Ko et al . [ 1 user’ . Whilst suc ging the differe lso carries the ri t difference in th xample , a syste Both are comput n their professio n end - users who software ( such . The focus of th ion workers , e . therapists . Suc xpertise which zing technologie lude the role n needs to be mad son who perform the sense of th ent activities . Th is one in whic ronment in whic are for their ow the spectrum ss will be muc ells a small rob purchased by create software f training program sses . In this cas user developme f the products the e professionals gy for their en d in Figure 1 . Th tudents from th hat ranges fro ed in meta - desig of use ed to s a ere s ) . der he we for ant nd 7 ] ch ent sk he em ter on ose as his . g . ch is es , of de ms he he ch ch wn of ch bot a for ms se , ent ey in nd - he his om gn Figurebroade Below , illustratthe tech arise fr 2 . 1 R The fi supportupper e TagTra rehabili more T trainingthat ar providicreate t physicaexercispatient - to man while th Figur Let us of our e 1 : An exampl er spectrum . , we describe tw te our end - user . hnology that was rom the case . Rehabilitati irst case conce ting arm - hand tr extremities . A t ainer platform itation training . TagTile boards a g exercises . Tag re capable of ing visual and au their own exerc al objects with ses using the re - centred training nipulate one or he platform prov re 2 : A patient consider a real e case studies : To le of end - user o cases from our Each case descr s used and touch ion training erns the use o raining for patien therapist at a re [ 28 ] to pro The TagTrainer and software to c Tile boards are i f recognizing udio feedback ( s cises for the plat h RFID tags a elevant software g content . Exerc more tangible o vides feedback o exercising with example of end - oday’s patient i development a r own research t ribes a typical us hes upon the cha g of tangible inte nts with impairm ehabilitation clin ovide her pat r platform consis create , modify an interactive table RFID - tagged o see Figure 2 ) . Th tform by adorni and by progra e application , a cises usually requ objects in a par on their performa h the TagTraine - user developme s recovering fro as part of a that se scenario , allenges that eraction for ment of their nic uses the tients with sts of one or nd playback etop surfaces objects and herapists can ing arbitrary amming the allowing for uire patients rticular way , ance . er system . ent from one om a stroke , 248 and wants to train in handling his wallet and money . Since the therapist wants to provide patient - centred training , she decides to use the patient’s own wallet for the exercise . She quickly adjusts an already existing training exercise to work with the patient’s wallet and to better fit his skill level . Finally , within minutes the patient is able to train handling money with his own wallet , while receiving feedback from the system on his performance . While facing the ‘regular’ challenges related to EUD , the therapist in this case faces a number of additional challenges . Firstly , the amount of time that the therapist can spend on the modification of a training exercise is extremely limited . Therapists are paid for patient treatment , and the more time therapists spend on auxiliary tasks like training preparation , the less time remains available for treating patients . Additionally , in contrast to the traditional notion of EUD , in which a user creates software mainly for her own purpose , the product of the therapist’s creation is not used by herself , but by her patients . This requires her creation to not only have therapeutic value , but also to offer sufficiently understandable interactive qualities such that is usable by her patient . Another challenge that the therapist faces is to incorporate a patient’s personal objects in the exercises that she creates . Rather than drawing from a static collection of pre - defined objects , the therapist needs to be able to incorporate any physical object into the software she’s creating . 2 . 2 Interactive game design The second example comes from our research in supporting the design of outdoor games for children . The RaPIDO platform [ 27 ] consists of a set of interactive player devices ( see Figure 3 ) that can provide light , audio and vibration feedback . Furthermore , the units can measure their relative distance to other units and can detect RFID tagged objects . Children can take these devices outdoors to play outdoor games , similar to tag and hide - and - seek , though now enhanced by interactive technology . Currently , games have been designed by interaction designers and evaluated with children [ 26 ] . Eventually , these games could be designed and implemented by , for example , scout leaders . What follows is an example scenario of how this could unfold : every Friday evening a group of children attend their scout meeting . For each meeting the scout leaders come up with activities to do . Figure 3 : RaPIDO units Today , the scout leaders want to create a capture - the - flag type of game . The game is to be played in teams of three players , and the players must search the woods for objects that have been hidden by the scout leaders . Therefore , the scout leaders program the units in such a way that each group receives a unit that will help the group find the hidden objects . Furthermore , the scout leaders program another set of units as the objects that must be found . These units they hide in the woods . The hidden units broadcast a signal that , when the searching units are within range , will pick up . The searching units will show a color according to the distance they are from the hidden units : the color goes from red through orange and yellow to green , based on the distance to the hidden units . This way , the children can ' navigate ' their way to the hidden units . As in the case of TagTrainer , in this context the scout leaders have to face the ' regular ' end - user programming challenges . But again , additional challenges that specifically relate to the context of TEI come into play . For example , the software runs on the units , on the embedded processor , which makes it typically difficult to debug the code . Furthermore , the units can communicate with each other ( using XBee processors ) . When creating games , a challenge for the scout leaders is to correctly identify which unit to address , or , when larger games are built , to add units . 3 . FIVE KEY CHALLENGES Based on literature and the cases we have described in the previous section , we identify five key challenges for researchers and meta - designers of end - user extensible tangible and embodied systems : 1 . Integrating the virtual with the physical 2 . Manufacturing physical artifacts 3 . Supporting end - users in designing interactivity 4 . Anticipating for non - information workers 5 . EUD within a social - technical context The first three challenges are matters that are specific to the domain of tangible and embodied interaction and in which , we argue , meta - designers should support end - user developers . The latter two challenges are of a more general EUD nature , but carry special importance for the domain of tangible and embodied interaction . 3 . 1 Integrating the virtual with the physical Shaer and Jacob stated that one of the most fundamental challenges to the developers of Tangible User Interfaces ( TUIs ) is the conceptual integration of the virtual and the physical [ 25 ] . Whilst this is the case for professional developers , for end - users this challenge is even greater , since they are already challenged by ( software ) development in general . In this sense , end - user development of tangible systems goes even beyond that of purely digital information systems , since end - users might be enabled to modify and extend a system in a physical sense as well as in a digital sense . For example , the TagTrainer system can be digitally extended by designing new training exercises that demand patients to manipulate physical objects in a particular way . However , therapists may also choose to incorporate the use of new physical objects that are particularly suitable for a given patient , hereby extending the system in a physical sense . The challenge here lies in the conceptual and technical integration of these physical objects with the system’s software . Conceptually , therapists need to be able to understand how the physical properties of objects can be leveraged in the training exercises that they design . For example , if a patient’s task is to manipulate an object placed on a surface through wrist rotation , the difficulty of the task heavily depends on the physical object that is used . A cube needs to be lifted before it can be turned , whilst a ball can simply be rolled towards its target orientation . The conception of the exercise and the manipulation of physical objects fall within the range of expertise of therapists ; however , mapping such conceptions to manipulations of objects that are possible to register / sense reliably with the target technology and effecting this mapping , is a typical design or engineering task they cannot be assumed to be ready for . End - user 249 development platforms need to provide appropriate support to make such a task accessible to non - experts . Beyond the conceptual challenge , there is also a technical challenge in systems that can be physically extended . Since tangible interactive systems are all about the interplay between the physical and a digital environment , allowing these systems to be modified or extended implies that these systems need to support end - users in linking these environments . Continuing from the previous example , if a therapist wants to use a new physical object for a therapy exercise , a model of this physical artifact somehow needs to be incorporated in the digital environment . Only by having some knowledge about the new physical object , the system can provide an appropriate response to a patient manipulating the object . Figure 4 : RFID tags for the TagTrainer system Ullmer and Ishii [ 29 ] identified the coupling of physical representations to underlying digital information and computational models as a key characteristic of TEIs . They describe two methods for coupling tangible objects with the underlying digital information space : static binding , in which the coupling is defined at design time , and dynamic binding , in which the coupling may be changed ( by the end - user ) through the interface itself . In the case of end - user development , only the latter allows for true physical extensibility of interactive systems . The level of modeling that is required for this can be kept to a minimum , for example by introducing an intermediate layer that abstracts away from some of the physical properties of artifacts and simplifies the integration of these artifacts with the software . For example , the TagTrainer system uses a limited set of colored RFID - tags that can be attached to physical artifacts ( see Figure 4 ) . Each tag - color is uniquely identifiable by the system , and through strategically attaching tags to parts of physical objects ; the system is able to recognize for example the rotation or position of an object . Thus , while preserving the physical properties of objects in their interaction with users , the colored tag - system greatly simplifies the mapping between the spatial states of these objects and their logical states in the software . The challenge for meta - designers is to support end - users to extend virtual environments with physical artifacts . Furthermore , meta - designers should enable end - users to conceptually integrate these objects in their programs . 3 . 2 Manufacturing physical artifacts Tangible and embodied systems are inherently physical . Therefore , on top of the challenges that arise from programming software , in the case of tangible systems the construction of the hardware and the inherent embedded electro - technical problems are increasing the challenge . Several toolkits and platforms have been created to facilitate constructing prototypes that support physical interaction , with the aim to lower the barrier to of prototyping new concepts [ 15 ] . Switcharoo [ 4 ] is a prototyping tool that lets designers rapidly explore both form and interactivity of new products . The same makers present the Calder toolkit [ 19 ] : a set of reusable input and output components that can be linked both wired as well as wireless to create an interactive physical interface . Both Switcharoo and the Calder system need to be tethered to a computer to control the interactivity . Phidgets [ 14 ] are commercially available “building blocks” for easy composition of sensing and controlling technologies . A variety of components is available and also the Phidgets can be programmed using a wide selection of software languages and , like Switcheroo and the Calder system , Phidgets need a direct connection to a computer . Similar to Phidgets are Arduinos : “Arduino is an open - source electronics prototyping platform based on flexible , easy - to - use hardware and software . It’s intended for artists , designers , hobbyists , and anyone interested in creating interactive objects or environments” [ 3 ] . Arduinos have a microprocessor on board and offer multiple input and output channels to attach any type of sensor or actuator . Designers , with limited electrical engineering and / or software skills , can relatively quickly put together a hardware and software combination to prototype simple , interactive behavior . Furthermore , the creation of customized physical artifacts is facilitated by recent advances in technology for production methods such as 3 - D printing and computer - aided milling . A trend in the upcoming of so - called maker communities [ 7 ] and fab - labs [ 12 ] has facilitated a broader participation of non - technical users in the engineering of interactive systems . These communities provide end - users with the means to learn and master the skills and tools that are required to engage in the design , modification and production of ( interactive ) physical artifacts . Still , the level of engineering skills and effort required to construct interactive applications using these platforms and tools is beyond what we can expect from , for example , physiotherapists and scout leaders as an add - on to their main tasks . For example , experiences with the RaPIDO platform indicate that even for university students with relevant technical expertise it takes up to two or three weeks to create a working prototype application . 1 1 It should be noted here that often claims are made about prototyping at much shorter times . E . g . , [ 14 ] suggest that a camera can be prototyped within a couple of hours using the . NET gadgeteer platform . We note that each platform allows for the easy creation of some canonical interactions that are direct extensions to available components . Typically though , designers and engineers need invest some more effort to map concepts slightly out of the normative uses of the platform to what it can support . 250 Our end - users do not have this time , nor is creating these applications of primary interest to the domain in which they are experts . Therefore , we argue that we need dedicated , integrated EUD hardware / software toolkits that even further lower the threshold for engaging in the creation and deployment of interactive artifacts . For example , the RaPIDO platform is specifically targeted at the design of outdoor games . It offers dedicated , portable , hardware that offers a wide range of interaction possibilities . Though it is possible to extend the platform with additional electronic components , it is not necessary to do so to start creating games . In addition , RaPIDO provides a software API that offers an abstract layer to hide the typical embedded software issues from the end - user . One of the learning barriers that Ko et al . [ 18 ] have identified is the understanding barrier , i . e . the difficulty to relate a program ' s external behavior to the end - user ' s own expectations . Furthermore , Ko et al . identified the information barrier : the difficulty end - users have to observe a program ' s internal behavior . Both barriers affect the ability of end - users to track down errors and debug their code . We argue that these issues will aggravate in the case of EUD hardware toolkits ; typically the software will run on an embedded system and will be more difficult to trace . Furthermore , errors can originate not only from the software but also from the hardware , a distinction that arguably is difficult to make for an end - user . To make things worse , debugging is a complex mental activity that is mastered with experience . Thus , the challenge we identify for meta - designers is to acknowledge that end - users will want to create interactive artifacts , but do not possess the necessary skills to create dedicated , interactive hardware . Meta - designers should provide end - users with integrated software and hardware tools that support the skill level of the end - users . Furthermore , meta - designers should pay particular attention to supporting debugging of the embedded software and hardware . 3 . 3 Supporting end - users in designing interactivity If we want to support end - users in the development of interactive systems that are also used by others ( e . g . a therapist’s patients , a teacher’s pupils ) , we need not only to ensure that they are able to create something that works , but also that the interactive qualities of their creation make it usable by others . Interaction design has been studied extensively , to the extent that interaction designers nowadays have at their disposal a plethora of dedicated tools , frameworks and guidelines that ensure the interactive quality of their creations . For example , Google has published an extensive design guide for developers of Android applications [ 13 ] . Such guides can aid even non - professional designers of user - interfaces to ensure a certain level of quality . However , given the diversity of tangible and embodied systems , guidelines that are applicable beyond a very narrow application domain do not yet exist . Neither have these guidelines been tried out and established with wide user bases , as is the case for graphical user - interfaces and most certainly they are not aimed at end - users . In short , there is currently no design guidance regarding techniques that are known to work for end - user developers creating their own solutions . Experiences from the author’s studies illustrate the need to support end - users in the design of interactivity . For example , a therapist working with TagTrainer designed an exercise in which a mug had to be placed on a target area displayed on the TagTile board . When a patient correctly placed the mug on the board , the target area would light up in green to confirm the patient’s action . However , the area that would light up was completely covered by the mug and hence the patient did not receive feedback about his correct action . Another example was observed in a game - designer programming a game on the RaPIDO platform . For the game , she wanted to convey to players the number of steps they were allowed to take . The game - designer decided to indicate the number of steps by blinking the RaPIDOs’ LEDs , where each blink counted as one step . However , she had not realized during design - time that such information is volatile ; a player must be paying attention to the device to perceive the interaction and after the blinking has stopped , the information is gone . Only once the game - designer saw the outcome , she concluded that this was not the best way to convey the information to a player . Players would be interacting with other players and with their environment and thus would probably miss the blinks , which would potentially disrupt the game flow . Subsequently , the game - designer reprogrammed that part of the interaction as to more permanently represent the information . Both examples show that end - users usually are ill equipped regarding the design of interactivity as such . We argue that end - users could benefit from a style - guide ( or other forms of design guidance ) describing do ' s and don ' ts regarding the interactive behavior of tangible and embodied systems . Whereas this may be a tall order for the vast domain of end - user development , it can be a much more tractable problem when focused on the range of interactivity that a particular platform supports . Concluding , meta - designers should look further than merely offering a physical , end - user extensible system , but should also provide end - users with guidance on how to meaningfully design interactivity . In what way this exactly should be supported ( e . g . , a manual , a short course , or embedded in the tool ) should be further investigated . 3 . 4 Anticipating for non - information workers A great body of EUD research has focused on research involving information workers such as system administrators , spreadsheet users , interaction designers , scientists and software architects . The end - users in this case share a common trait in that they write programs to support their own domain specific tasks . While it has been argued that programming experience is an independent concern [ 17 ] , it is undeniable that there are differences between information workers and other end - users in the way in which they engage in EUD activities . Non - information workers , such as primary school teachers [ 5 ] , children [ 1 ] and musicians [ 16 ] have previously been studied as users of tangible interactive applications . However , little is known about their potential as developers of such systems . While attempts have been made at using tangibles as means for non - information workers to perform end - user development activities ( e . g . [ 6 ] ) , research on end - user development for tangible interactive systems remains scarce . A defining characteristic of information workers is that they spend a substantial amount of their working time in front of a computer . Often they assume the role of a programmer aiming to automate a repetitive task , or create some function fitting their extant use of technology . In contrast , non - information workers often find themselves without a computer , let alone a system supporting tangible interaction , and even finding a computer to perform EUD activities might present a barrier to them . For example , therapists 251 who participated in the TagTrainer study mentioned that for the system to be usable , the amount of time they could spend on performing EUD - related tasks had to be limited to only a couple of minutes per 30 - minute therapy session . Within this small timeframe , a complete design - , implement - and test - cycle had to be completed for each self - developed modification or addition to the system . The requirements that these constrains put upon the tools , the end - users and their organization are yet ill defined . Meta - designers should be aware of the constraints that the context in which non - information workers operate puts on EUD . Not only do they need to consider the tools that support these end - user developers , but also the context wherein these end - user developers operate . One possible research direction is to investigate whether end - user development efforts could be spread across members of a community , in order to ease the demands on individual users . 3 . 5 EUD within a social - technical context In the past , the task of end - user development has largely been addressed as an isolated phenomenon , focusing mainly on what the technical requirements are that enable end - users to become developers . For example , research focused on the design of tools , frameworks and ( programming ) techniques that facilitated development by end - users . More recently however it has been recognized that end - user development involves much more than providing an end - user with the right tools . Rather than a purely technical endeavor , EUD has its place in a socio - technical environment where issues such as learning , motivation , collaboration and organization are important determinants of its success [ 21 ] . The paradigms of meta - design [ 8 ] and cultures of participation [ 10 ] have been proposed to address this socio - technical perspective to end - user development . Meta - design theory puts the end - user developer on a spectrum with on one end the end - user , and on the other end the meta - designer of an extensible socio - technical system . Rather than treating the end - user developer as a particular species of its own , in meta - design theory users may assume and switch between multiple roles on this spectrum , depending on the context . In this theory , end - user development may become a shared effort amongst users that occupy different positions on the developer - spectrum . One of the benefits of extending EUD with social and organizational components is that it allows us to view the task of development within a wider context . For example , it gives room to study how domain specialists take up the task of EUD , how they learn in this from their peers and how exchanging the content of their creations influences the development process . Exchanging personal creations with peers also promises mutual benefits such as : avoiding double work , collaborative development of solutions that address a shared need , inspiration from others’ creations , etc . For example , experiences with the TagTrainer system show that peer - creations triggered therapists to engage in end - user development activities themselves . While the extension of EUD towards a socio - technical perspective is worthwhile for EUD in general , we think that it proves particularly useful in the case of non - information workers and tangible and embodied systems . Firstly , because it reveals the subtleties that non - information workers face when engaging in end - user development . For example , does their boss want them to do it ? How does the task fit within their regular workflow ? Where can they get answers for their questions and with what effort ? Secondly , given the context - dependent nature of tangible and embodied systems , taking into account the context in which end - users engage in development activities becomes a necessity . 4 . DISCUSSION AND CONCLUSION Tangible and embodied interaction is a technology that is making the transition from the research labs to the market . In this process its user base is expanding ; by the nature of this technology its use within different contexts needs to provide the specific form and interactivity that is suitable for the domain rather than rely on standardized and common set of interactive technologies , as has been the case for graphical user interfaces . This tight coupling of physical form and interaction with interactivity provides a broad space for exploration for interaction designers , but also requires some adaptation and design activities to be handed over to the end - user to address idiosyncratic requirements of specific application domains . This paper has argued the case for end - users who are not information technology professionals or even enthusiasts to create their own TEI solutions . Arguably , TEI systems can be beneficial for clients of these end - users , such as pupils or rehabilitation patients . To enable these end - users to take up EUD technology for TEI , research needs to be carried out . The contribution of this paper is to identify the need for EUD solutions , and to formulate the key challenges that end user developers are faced with . Although research agendas for both end - user development [ 17 ] and tangible interaction [ 2 ] have recently been proposed , neither of them address the specific research issues that come into play when EUD is applied onto tangible and embodied interaction . We argue that TEI is not just another application domain for EUD , but that it presents some major and specific challenges : Integrating the virtual with the physical , Manufacturing physical artifacts , Supporting end users in designing interactivity , Anticipating for non - information workers , and EUD within a social - technical context . We have identified and addressed these challenges in two different domains : the design of outdoor games for children and the design of tangible interactive systems for rehabilitation training . While our own solutions are domain specific , we believe that the set of challenges defined characterizes quite a broad application domain and one that is crucial for the further development of tangible and embedded interactive systems . This set of challenges is new , and unique to the development of tangible and embodied interaction for domain specific applications . While the idea of bridging the virtual and the digital runs through the whole fields of augmented reality and pervasive computing , this challenge has so far been the focus of professional designers and engineers . Handing over this challenge to non - specialized professionals whose responsibilities are not typically associated with the creation of technologies changes the nature and the difficulty of this endeavor . Similarly , providing design guidance to end users can be more feasible in other domains , e . g . to help non - information workers create their own websites , but in the domain of TEI guidance is needed as the combined design challenge in both interactivity and form giving largely exceeds that of creating documents enhanced with hyperlinks and interactive content . While non - information workers have long been engaging with creating content , e . g . in websites , animations , music , most work so far on EUD has focused on information workers . Domain experts , such as professionals in healthcare or education are primarily focused on interacting with other people , and not on using information technology . 252 The challenges discussed have not emerged before either as relevant or as necessary for the application of information technology . We argue that the potential of tangible and embodied interactive systems can be enhanced by allowing end - users to modify and create content for such systems . Yet it is hard yet to argue about the adequacy of solutions proposed and whether addressing these challenges will be shown sufficient for the successful application of end - user development approaches in different domains . Addressing these challenges requires a combination of disparate research approaches . A very important one is the creation of conceptual guidance for creating TEI solutions ; many frameworks on tangible interactive systems and tangible user interfaces have been proposed , e . g . , see [ 24 ] . Most of these frameworks have grown from the realization that tangible systems and interfaces have some distinctive and unique features , which existing frameworks were unable to address . As these have served as a focal point for discussions between researchers in this field , it is questionable whether such frameworks can provide the type of operational guidance that is needed by domain specialists acting as end - user developers . Another important research goal is to understand the organizational conditions that will enable a transformation of non - information workers to change their role as passive users to that of content creators , and eventually technology designers and developers . Creating a platform that enables such content creation is but a first step ; one that enables field deployments and case studies of this type of transformation . The main aim of this paper is to identify the key challenges in end - user development for tangible and embodied interaction . Though we cannot offer a solution to address these key challenges immediately , we can offer insights on how we think finding answers is best undertaken . The approach we suggest is a Research through Design approach [ 32 ] , meaning that we actually design and build TUI systems that can be deployed in a real context . By offering end - users these systems and observing the way they appropriate the technology in their daily practice , we will be able to generate insights on how these challenges can be addressed . In our experience this approach works best ; the systems ( such as TagTrainer and RaPIDO ) and tasks presented to end - users are so radically different compared those end - users normally work with , it is typically very hard for end - users to reflect on how these systems and tasks would impact their daily work , without the system actually being present and working . Finally , we propose that the term end - user development , that has its origin in the programming domain , is extended to encompass the design and development of all aspects of physical , interactive systems . ‘Development’ , in this sense , not only applies to the software part of such systems , but also reflects on the possibility of physical modification and extension by end - users , tasks typically associated with industrial design . We encourage meta - designers to consider the challenges that we identified in the design of such systems and to extend the body of knowledge on end - user development for tangible and embodied interaction . 5 . ACKNOWLEDGMENTS The authors acknowledge the support of the Innovation - Oriented Research Programme ‘Integral Product Creation and Realization ( IOP IPCR ) ’ of the Netherlands Ministry of Economic Affairs , Agriculture and Innovation . 6 . REFERENCES 1 . Antle , A . N . The CTI framework : informing the design of tangible systems for children . Proceedings of the 1st international conference on Tangible and embedded interaction , ACM ( 2007 ) , 195 – 202 . 2 . Antle , A . N . Knowledge gaps in hands - on tangible interaction research . Proceedings of the 14th ACM international conference on Multimodal interaction , ACM ( 2012 ) , 233 – 240 . 3 . Arduino . Arduino website . 2013 . www . arduino . cc . 4 . Avrahami , D . and Hudson , S . E . Forming interactivity : a tool for rapid prototyping of physical interactive products . Proceedings of the 4th conference on Designing interactive systems : processes , practices , methods , and techniques , ACM ( 2002 ) , 141 – 146 . 5 . Bakker , S . , van den Hoven , E . , and Eggen , B . FireFlies : supporting primary school teachers through open - ended interaction design . Proceedings of the 24th Australian Computer - Human Interaction Conference , ACM ( 2012 ) , 26 – 29 . 6 . Blackwell , A . F . and Hague , R . AutoHAN : An Architecture for Programming the Home . Proceedings of HCC’01 , IEEE Computer Society ( 2001 ) , 150 – 157 . 7 . Chorianopoulos , K . , Jaccheri , L . , and Nossum , A . S . Creative and open software engineering practices and tools in maker community projects . Proceedings of the 4th ACM SIGCHI symposium on Engineering interactive computing systems , ACM ( 2012 ) , 333 – 334 . 8 . Fischer , G . and Scharff , E . Meta - design : design for designers . Proceedings of the 3rd conference on Designing interactive systems : processes , practices , methods , and techniques , ACM ( 2000 ) , 396 – 405 . 9 . Fischer , G . User Modeling in Human - Computer Interaction . User Modeling and User - Adapted Interaction 11 , 1 - 2 ( 2001 ) , 65 – 86 . 10 . Fischer , G . End User Development and Meta - Design : Foundations for Cultures of Participation . Journal of Organizational and End User Computing 22 , 1 ( 2010 ) , 52 – 82 . 11 . Fitzmaurice , G . W . , Ishii , H . , and Buxton , W . A . S . Bricks : laying the foundations for graspable user interfaces . Proceedings of the SIGCHI Conference on Human Factors in Computing Systems , ACM Press / Addison - Wesley Publishing Co . ( 1995 ) , 442 – 449 . 12 . Gershenfeld , N . Fab : The Coming Revolution on Your Desktop - - from Personal Computers to Personal Fabrication . Basic Books , 2008 . 13 . Google . Android Design Guide . 2013 . http : / / developer . android . com / design / index . html . 14 . Greenberg , S . and Fitchett , C . Phidgets : easy development of physical interfaces through physical widgets . Proceedings of the 14th annual ACM symposium on User interface software and technology , ACM ( 2001 ) , 209 – 218 . 15 . Hodges , S . , Villar , N . , Scott , J . , and Schmidt , A . A New Era for Ubicomp Development . IEEE Pervasive Computing 11 , 1 ( 2012 ) , 5 – 9 . 16 . Jordà , S . , Geiger , G . , Alonso , M . , and Kaltenbrunner , M . The reacTable : exploring the synergy between live music performance and tabletop tangible interfaces . Proceedings of 253 the 1st international conference on Tangible and embedded interaction , ACM ( 2007 ) , 139 – 146 . 17 . Ko , A . J . , Abraham , R . , Beckwith , L . , et al . The state of the art in end - user software engineering . ACM Comput . Surv . 43 , 3 ( 2011 ) , 21 : 1 – 21 : 44 . 18 . Ko , A . J . , Myers , B . A . , and Aung , H . H . Six Learning Barriers in End - User Programming Systems . Visual Languages and Human Centric Computing , 2004 IEEE Symposium on , ( 2004 ) , 199 – 206 . 19 . Lee , J . C . , Avrahami , D . , Hudson , S . E . , Forlizzi , J . , Dietz , P . H . , and Leigh , D . The calder toolkit : wired and wireless components for rapidly prototyping interactive devices . Proceedings of the 5th conference on Designing interactive systems : processes , practices , methods , and techniques , ACM ( 2004 ) , 167 – 175 . 20 . Lieberman , H . , Paternò , F . , Klann , M . , and Wulf , V . End - User Development : An Emerging Paradigm . In H . Lieberman , F . Paternò and V . Wulf , eds . , End User Development . Springer Netherlands , Dordrecht , 2006 , 1 – 8 . 21 . Mehandjiev , N . , Sutcliffe , A . , and Lee , D . Organizational View of End - User Development . In H . Lieberman , F . Paternò and V . Wulf , eds . , End User Development . Springer Netherlands , Dordrecht , 2006 , 371 – 399 . 22 . Merrill , D . , Sun , E . , and Kalanithi , J . Sifteo cubes . Proceedings of the 2012 ACM annual conference extended abstracts on Human Factors in Computing Systems Extended Abstracts , ACM ( 2012 ) , 1015 – 1018 . 23 . Nardi , B . A . A small matter of programming : perspectives on end user computing . MIT Press , 1993 . 24 . Shaer , O . and Hornecker , E . Tangible User Interfaces : Past , Present and Future Directions . Now Publishers Inc , 2010 . 25 . Shaer , O . and Jacob , R . J . K . A specification paradigm for the design and implementation of tangible user interfaces . ACM Trans . Comput . - Hum . Interact . 16 , 4 ( 2009 ) , 20 : 1 – 20 : 39 . 26 . Soute , I . , Lagerstrom , S . , and Markopoulos , P . Rapid prototyping of outdoor games for children in an iterative design process . Proceedings of the 12th International Conference on Interaction Design and Children , ACM ( 2013 ) , 74 – 83 . 27 . Soute , I . Head Up Games : on the design , creation and evaluation of interactive outdoor games for children . 2013 . http : / / www . tue . nl / en / publication / ep / p / d / ep - uid / 283744 / . 28 . Tetteroo , D . TagTrainer : a meta - design approach to interactive rehabilitation technology . End - User Development - Fourth International Symposium , Springer ( 2013 ) . 29 . Ullmer , B . and Ishii , H . Emerging frameworks for tangible user interfaces . IBM Syst . J . 39 , 3 - 4 ( 2000 ) , 915 – 931 . 30 . Verhaegh , J . , Fontijn , W . , and Hoonhout , J . TagTiles : optimal challenge in educational electronics . Proceedings of the 1st international conference on Tangible and embedded interaction , ACM ( 2007 ) , 187 – 190 . 31 . Villar , N . , Scott , J . , Hodges , S . , Hammil , K . , and Miller , C . . NET gadgeteer : a platform for custom devices . Proceedings of the 10th international conference on Pervasive Computing , Springer - Verlag ( 2012 ) , 216 – 233 . 32 . Zimmerman , J . , Forlizzi , J . , and Evenson , S . Research through design as a method for interaction design research in HCI . Proceedings of the SIGCHI conference on Human factors in computing systems , ACM ( 2007 ) , 493 – 502 . 254