User Experience in Do - It - Yourself - Style Smart Homes Jong - bum Woo KAIST 335 Gwahak - ro , Yuseong - gu , Daejeon 305 - 701 , Korea magicianwoo @ kaist . ac . kr Youn - kyung Lim KAIST 335 Gwahak - ro , Yuseong - gu , Daejeon 305 - 701 , Korea younlim @ kaist . ac . kr ABSTRACT Do - it - yourself ( DIY ) - style smart home products enable users to create their own smart homes by installing sensors and actuators . DIY smart home products are a potential solution to current problems related to home automation products , such as inflexible user controls and high costs of installation . Although the expected user experience of DIY smart home products is different from that of previous home automation products , research on DIY smart home products is still in its early stages . In this paper , we report a 3 - week in situ observational study involving eight households . The results suggest six stages of the DIY smart home usage cycle and design implications for improving the user experience of DIY smart home products . Author Keywords Smart Home ; Do - It - Yourself ; Design ; End - User Programming ; Domestic Technology ACM Classification Keywords H . 5 . m . Information interfaces and presentation ( e . g . , HCI ) : Miscellaneous . INTRODUCTION With the development of emerging technologies for domestic environments , smart homes have received considerable research and commercial attention in the ubiquitous computing community [ 9 ] . New types of smart home products have recently been launched on the market . These products , such as Ninjablocks [ 23 ] and Twine [ 33 ] , allow users to create and modify their smart homes through do - it - yourself projects . These types of products are called do - it - yourself ( DIY ) - style smart home products [ 14 ] . Users can create smart home features using DIY smart home products by connecting various sensors ( e . g . , door - contact sensors , temperature and humidity sensors ) , actuators ( e . g . , light bulbs , sockets ) , social network services , SMS , and email . In addition , these products provide end - user programming environments , such as trigger - action programming [ 34 ] , including the IFTTT service [ 16 ] , for users who are not familiar with professional programming . For example , a user can create a smart home feature that sends an SMS message to his or her cell phone when the door opens by installing a door - contact sensor at the entrance . Because DIY smart home products are programmed and installed by the user , they provide a different experience than do previous home automation products . The users must decide what smart home features they need , where to use them and how to install and program them . DIY smart home products can be more difficult to use than previous home automation products because the user must be proactive in creating and using them . Despite these difficulties , several DIY - style smart home products [ 23 , 30 , 33 ] have been launched on the market because they are a possible solution to the problems of previous home automation systems [ 14 , 22 ] , such as inflexible user controls and high costs of installation [ 3 ] . The ultimate purpose of DIY smart home products is to allow the user to have full control of his or her smart home without additional assistance and to enable the user to customize the system to ensure that his or her personal smart home services meet his or her individual needs [ 14 ] . Moreover , DIY products do not require infrastructural changes ; thus , they are cheaper than previous home automation systems and potentially pose a low barrier to entry . Based on these differences , several research questions related to DIY smart homes can be identified : what motivates people to implement smart home features , what trial and error processes occur , and how do the benefits differ from those of previous home automation systems ? However , most of all , little is known about how DIY smart home products are used in daily life . An understanding of the user experience of DIY smart home products , such as the usage cycle and design requirements , could be used to provide a better user experience in the early stages of DIY smart home product design . Moreover , these findings will apply not only to smart home products but also to Internet of Things ( IoT ) products that similarly adopt the DIY style . In this paper , we examine how users adopt DIY smart home products for use in their daily routines based on in situ observations of users with commercial DIY smart home products . We conducted a qualitative user study to understand people’s experiences with DIY smart home products . Our objectives were to determine 1 ) what the usage stages of the DIY smart home product are and 2 ) what factors Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . Request permissions from permissions @ acm . org . UbiComp ' 15 , September 7 – 11 , 2015 , Osaka , Japan . Copyright 2015 © ACM 978 - 1 - 4503 - 3574 - 4 / 15 / 09… $ 15 . 00 . http : / / dx . doi . org / 10 . 1145 / 2750858 . 2806063 779 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN are important for improving DIY smart home products . The results of this research provide a new understanding of DIY smart home products , including the DIY smart home product usage cycle and implications for the improved design of DIY smart home products . RELATED WORKS One of the most relevant research areas related to DIY smart homes is that of end - user development ( EUD ) for smart homes [ 4 ] . EUD provides a set of tools that enable users who are not professional developers to create and modify software systems [ 19 ] . The goal of EUD for smart homes is to provide interfaces that allow inhabitants to create and modify their home environments by themselves . Several research approaches have been suggested , including the adoption of a metaphor for programming environments [ 13 , 32 ] , the adoption of tangible interfaces [ 2 , 12 , 17 ] , the provision of new types of end - user programming platforms [ 7 , 10 , 15 , 29 , 38 ] , and the use of deployable sensors [ 1 , 24 , 25 ] . User - centric research has also been conducted to understand how technology for families should be designed . Ylirisku [ 37 ] presented three web - connected artifacts and argued the possibility of using the ‘aesthetic’ of the home as a design resource to understand the relationship between individuals and their home environment . By observing three families’ use of RFID web tokens , Lee [ 18 ] found that such family technologies can be a resource that both reflects and shapes their social arrangements . In addition , user - centric smart home research has identified several weaknesses of current smart homes and has suggested several design implications thereof . Davidoff argued that end - user programming tasks do not map well to daily routines [ 6 ] . People desire control over their lives , whereas current end - user programming ultimately provides control over devices . Additionally , only 40 % of events occur in a regular manner ; routines are difficult to automate [ 5 ] . Brush found substantial barriers to the adoption of home automation products , such as the need for infrastructural changes with considerable costs and inflexibility to structural change [ 3 ] . DIY smart home products are a possible solution to these problems because they allow the user to choose the particular smart home features he or she desires and grant the user full control of the product . These products do not require high - cost infrastructure installation ; instead , they require only a few components , such as sensors and actuators , which are more affordable than home automation products . Unlike previous home automation products , DIY smart home products allow the user to proactively solve his or her complex problems and thus to fulfill his or her needs by using ubiquitous technologies [ 28 ] . Additional research on smart homes has suggested that future smart home designs will be compatible with the DIY smart home approach to the extent that these designs presume a collaborative relationship between the users and the smart home [ 14 , 22 ] . Mennickin suggested that a DIY approach is one possible direction for future smart homes to address complex home environments in which all family members’ routines are interwoven [ 22 ] . Hwang argued that the DIY - style smart home approach is needed to close the gap between smart home systems and users [ 14 ] . The DIY smart home suggested by Hwang connects the developer and users to provide a solution that enables the user to satisfy his or her dynamic needs . However , commercially available products do not provide direct support from the developer ; we use the term DIY smart home product to refer to products whose use does not require the developer ' s assistance . DIY smart home products must be installed by a user , and they have different installation stages than those of home automation products . Home automation products that are installed by a professional builder pass through four stages in the construction of a smart home : ‘initial planning , ’ ‘preparing the technical infrastructure , ’ ‘iterating until the product fits , ’ and ‘reaching ( temporary ) stability’ [ 21 ] . Unlike home automation products that are inflexible to changes once installed , users can modify DIY smart home products continuously to fit their needs . Because users install the products without the aid of a professional and then program , revise and debug the smart home features by themselves , the user experience of DIY smart home products is different from that previously observed for home automation products . In this study , we observed how users use DIY smart home products to customize their daily routines . Our focus is on the user experience with regard to how a participant proactively installs , uses , and alters a DIY smart home product , namely , aspects of the user experience that are not observed in the case of professionally installed home automation products . Based on the results of this study , we suggest a usage cycle of DIY smart home products and design implications for future smart homes . RESEARCH METHODS To achieve these goals , we chose to conduct an in situ user study with commercial DIY smart home products because previous research has shown that in situ user studies provide a wide range of findings related to the manner in which people evolve and appropriate technology within their routines [ 11 , 18 , 20 , 37 ] . Participants DIY smart home products have only recently been launched and are not yet widespread . Thus , we recruited a group of potential users who were interested in DIY smart home products . Through the local online community , we recruited households with at least one family member with a keen interest in DIY smart home products . Eight households with a total of 21 participants who lived in South Korea were recruited . The family members varied in gender and age , which enabled the observation of social interaction . The participants’ details are listed in Table 1 . 780 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN Study Toolkits We believe that using a commercial DIY smart home product was an efficient and effective means of conducting a robust study . Twine [ 33 ] and Ninjablocks [ 23 ] are the two most popular and readily available DIY smart home products . Considering the number of provided sensors / actuators and the compatibility with other services ( e . g . , SMS , email , Philips Hue [ 26 ] and Arduino ) , we selected Ninjablocks as the primary toolkit to be used in the study ( Figure 1 ) . Ninjablocks provides a programming environment that connects sensors and actuators using a trigger - action programming language . The detailed functions ( triggers and actions ) of the provided sensors and actuators are listed in Table 2 . Ninjablocks provides a trigger - action style of programming environment ( Figure 2 ) . This action takes the form of ‘if trigger , then action’ [ 34 ] , similar to that of the IFTTT service [ 16 ] . A program created using Ninjablocks is called a “ rule . ” To make a rule , the user first selects the sensor icon for a trigger and then selects one or more action icons for the reaction to the trigger . One example of a rule is that when the wireless button is pushed , the LED on the board should turn on for 10 seconds and then turn off . To implement this desired behavior , the user first selects the “when this stuff happens” tab and clicks the wireless button . Then , he or she moves to the “do these things” tab , selects the Nina’s eye icon that indicates the LED on the board , and selects the 10 - second delay icon . Finally , the user again selects the Nina’s eye icon , this time with the “off” option . After the rule is created , when the wireless button is pushed , Nina’s eye turns on for approximately 10 seconds and turns off . Depending on the user ' s needs , a rule can consist of any combination of any of the triggers and actions listed in Table 2 . Figure 1 . Study toolkits : Ninjablocks , Watts Clever wireless socket , Philips Hue , clip lamp and instruction book Participants ( gender , age , occupation ) Experience related to DIY smart home Living situation H1 H1 _ F ( male , 58 , Researcher ) None Flat . H1 _ M remained in the home most of the day , and the other members were present from night to morning . H1 _ M ( female , 60 , Housewife ) None H1 _ D ( female , 28 , Graduate student ) None H1 _ S ( male , 27 , Undergraduate ) None H2 H2 _ D2 ( female , 36 , Government employees ) None Single - family home . The father and mother of the participants lived on the second floor of the house but did not participate in the diary and interview sessions because of health issues . The other participants spoke for them . H2 _ D3 ( female , 34 , Secretary ) None H3 H3 _ M ( female , 41 , Graduate student ) 10 years of programming experience Flat . Dual - income family . The parents stayed at home from night to morning with their daughter ( female , 7 ) and son ( male , 8 ) . H3 _ F ( male , 39 , Researcher ) None H4 H4 _ F ( male , 28 , Graduate student ) 15 years of programming experience Flat . With an infant ( male , 1 ) and three cats . H4 _ M remained in the home with the infant most of the day , and H4 _ F was at home from late night to morning . H4 _ M ( female , 28 , Housewife ) 8 years of programming experience H5 H5 _ F ( male , 38 , Mechanic ) 5 years of programming experience Flat . With an infant ( male , 1 ) . H5 _ M remained in the home with the infant most of the day , and H5 _ F was at home from night to morning . H5 _ M ( female , 35 , Housewife ) None H6 H6 _ GF ( male , 64 , Researcher ) None Flat . With an infant ( male , 1 ) . H6 _ GM ( grandmother ) remained in the home with the infant most of the day , and H6 _ GF ( grandfather ) and H6 _ M were at home from night to morning . H6 _ F was at home only on the weekend . H6 _ GM ( female , 60 , Housewife ) None H6 _ M ( female , 33 , Graduate student ) 5 years of programming experience , Used Xi smart home [ 36 ] H6 _ F ( male , 37 , Office worker ) Used Xi smart home [ 36 ] H7 H7 _ F ( male , 29 , Graduate student ) 3 years of programming experience , Used Smart plug [ 27 ] Flat . All family members were at home from night to morning . H7 _ M ( female , 28 , Graduate student ) 4 years of programming experience , Used Smart plug [ 27 ] H7 _ Aunt ( female , 27 , Graduate student ) 6 years of programming experience H8 H8 _ F ( male , 36 Researcher ) None Flat . With daughter ( female , 6 ) and son ( male 4 ) . H8 _ M stayed at home with the children most of the day . H8 _ F was at home from night to morning . H8 _ M ( female , 40 , Housewife ) None Table 1 . Participants and their living situations ( F ( father ) , M ( mother ) , S ( son ) , D ( daughter ) ; for example , H1 _ F indicates the father in Household 1 ) 781 SESSION : DIY TOOLS AND STRATEGIES User Study Plan Our primary criterion for selecting the study period was the time required for participants to become familiar with the new interface of the DIY smart home system . Because we were providing a new study toolkit , we wanted to determine when this ‘first use effect’ would disappear . To this end , we conducted a pilot study with a single participant who lived alone and was interested in using DIY smart home products . A sole participant is more appropriate for observing the time required to become accustomed to the use of a DIY smart home product because there is no effect of interactions with other participants . Figure 2 . ( a ) Rule summary for 10 - second red LED ( b ) Rule details We investigated how rapidly the participant became familiar with the new interface and when the smart home rules became stable . After a week , the participant commented that she felt accustomed to the use of the new system . We also found that some rules were created for weekly events , and we wished to observe at least 2 instances of weekly routines . Therefore , we decided to conduct a 3 - week study as the main study . Because the first user study , with household 1 ( H1 ) , exhibited little difference from the pilot study , we gained further confidence in our choice of a 3 - week study period . Our research objective was to understand the usage stages and design implications of a DIY smart home product , and the results of the pilot and 1 st user studies demonstrated that a 3 - week period was efficient and effective for realizing our research aims . To triangulate the observation data , we used three different methods to observe the user experience in the main user study : semi - structured interviews ; diaries , including pictures and video recordings ; and records of the smart home rules lists created by the participants . We visited each participating family three times : on Day 1 , after one week had passed , and after three weeks had passed . During the first visit ( Day 1 ) , the moderator provided introductions and tutorials and guided the users in installing the study toolkit by themselves using the instruction book . Because Ninjablocks operates via a new interface , the participants needed instruction to learn how to use it . We wanted to use the tutorial video provided by Ninjablocks , but it is only available in English . Our participants were not familiar with English because it was not their mother tongue ; therefore , we instead provided them with a translated guide book that we prepared that contained most of the information presented in the company’s tutorial video . During the installation of the study toolkit , in some instances , the users needed the moderator’s assistance to solve a problem . The moderator ( one of the authors ) advised them only with regard to the specific problem at hand . All installation processes were video recorded . After the installation , we conducted Sensor Trigger Description Ninjablocks Time interval Detect a specific interval Temperature and humidity sensor Temperature Detect the temperature near the sensor continuously Humidity Detect the humidity near the sensor continuously Door - contact sensor Detect opening Detect the door opening Motion sensor Detect motion Detect the motion in front of the installed sensor Wireless button Detect button push Detect the pushing of the button Watts Clever remote control socket Socket on Detect the On state of the socket Socket off Detect the Off state of the socket Actuator Action Description Ninjablocks Nina’s eye Control the LED on the Ninjablocks board Email Send an email to a specified email address SMS Send a message to a specified phone number Delay Delay between actions Toggle rule Enable / disable other rules Toggle Toggle ( on / off ) a particular device state ( LED on board , remote control socket ) Philips Hue Hue Control the on / off status , brightness , saturation , and hue of the light bulb Watts Clever remote control socket Socket on Turn on the remote control socket and provide power Socket off Turn off the remote control socket and cut power Table 2 . Trigger / action descriptions 782 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN semi - structured interview sessions in which we asked about the installation process , with follow - up questions concerning , for instance , what was challenging about the installation . The first visit took approximately 90 minutes . After the first visit , we gave each participant one week to use the study toolkit freely , without diary keeping , to become accustomed to doing so . We expected that the requirement of writing in a diary might stifle motivation to use the new product ; therefore , to encourage the participants to freely use the study toolkit , we did not ask them to record diaries during the first week . Although we did not request diary keeping during this period , all of the rules that the participants created were remotely recorded via the website , and we asked detailed questions during the second visit . After one week , we visited again to conduct another interview . During the interview session , we asked how the family members had used the study toolkit during the first week . The questions addressed what rules they had created , how and why they used them , how they installed the sensors to implement the rules , which sensors and actuators remained unused , how the products had changed their lives , and what rules they could not create and why . Each interview took approximately 40 minutes . After the second visit , the participants were asked to record their daily use of the toolkit in a diary . In addition , we remotely recorded the rules created by the participants via the Ninjablocks website while the participants were using it during the diary studies . On the final visit , we asked about the users’ three weeks of experience with the DIY smart home products and the motivation for and usage of each rule in their daily lives . We asked what had changed in their daily lives with the use of the products and which rules were their favorites . Each interview took approximately 40 minutes . In the diary , we provided a guide for recording detailed experiences of toolkit usage . For example , what are the rules you created / used today ? What was the motivation for creating them ? What are any related thoughts and emotions that have changed while using these rules ? What has changed in your families’ daily lives ? We also provided a blank page for other comments . When the users created new rules , we asked them to take pictures or record videos using their smartphones . Analysis The participants recorded how their smart home products were used and how they changed their daily routines through the diary , additional photographs , and video recordings . To supplement any unclear entries in the diaries , a moderator obtained additional information through semi - structured interviews . Approximately 22 hours of interviews and video recordings , 21 diaries covering two weeks , and 99 photographs and 26 videos were collected . A total of 167 smart home rules were created over the three weeks , corresponding to 21 rules for each household on average . All interviews were recorded and transcribed . The smart home rules were reviewed based on the interview data and user diaries to analyze how these rules were applied in the users’ daily lives . We coded our data based on the initial research questions : usage scenarios , motivations , and characteristics of DIY smart home products ; influence of the families’ everyday lives ; and emergent themes . The data were analyzed using iterative processes to generate , refine , and verify the themes that emerged . We also evaluated our videos and photographs to provide visual support for the themes identified during the coding process . DIY SMART HOME PRODUCT USAGE CYCLE (cid:1) From the study results , we found that people use DIY smart home products to solve recurrent problems in their routines through iterations of the DIY smart home usage cycle ( Figure 3 ) . The DIY smart home usage cycle can be classified into six different stages : initial installation , motivation , implementation , use - through - routine , routinization , and removal . These six stages were observed in all eight households . The DIY smart home usage cycle represents the problem - solving process of DIY smart home products in the user’s daily routine . In the motivation stage , the participants looked for recurrent problems in their daily lives . In the implementation phase , they explored solutions to the problems they identified in the motivation phase , and they applied these solutions to their homes . Finally , in the use - through - routine phase , they implemented the solutions in their routines and evaluated them . The definitions and characteristics of each stage are explained below with reference to specific cases from the user study . Initial Installation The first step is for the users to install the products in their home environment . The study participants needed to connect the Ninjablocks and Philips Hue systems to their Internet ports and register the sensors and actuators on the web pages . Once this stage has been completed , the user does not need to repeat it unless and until his or her Internet connection changes . The remaining five stages occur throughout the user’s daily life . Motivation Motivation is the stage in which people identify a problem in their routines and decide to fix that problem using DIY smart home products . In most cases , the participants identified some recurrent problem in their daily activities . For example , H1 _ S encountered a problem when going to the kitchen at night . He felt that turning on the light in the dark was uncomfortable . He decided to make a rule that would automatically turn on the kitchen light upon the sensing of movement in the kitchen . “At midnight , I often wake up to get a drink of water in the kitchen . It is hard to find a light switch because it is dark . Sometimes , I bump into things . So , I think it would be better if the light would automatically turn on” ( H1 _ S’s diary ) ( all interviews are translated ) . Each family had different motivations for using DIY smart home products as a result of their particular family situations , such as fixing inconvenient routines , saving energy , caring 783 SESSION : DIY TOOLS AND STRATEGIES for children , serving health care needs , implementing security measures , facilitating communication within the family , monitoring the conditions of the indoor environment , and monitoring the smart home system . H3 and H8 live with elementary school children , and they used several rules to manage their children . H4 , H5 , and H6 live with an infant , and they are particularly concerned with the baby’s health care . The temperature and humidity of a room are difficult to measure but are critical to a child’s health . These users attempted to maintain an appropriate room temperature and humidity by automating the operation of the humidifier and heater . In some cases , they simply implemented a change in light color depending on the temperature of the room . H1 , H2 , and H7 were composed of adults , and most of the family members were home at night . These households created rules to automate inconvenient routines to facilitate relaxation after they came home from the workplace . Implementation The implementation stage is the stage in which the actual hardware installation and software programming are completed . During the implementation phase , the participants installed sensors and actuators and programmed rules . The participants then tested whether the rules worked as intended . H1 _ S attached a motion sensor next to the refrigerator to detect people approaching the kitchen . Additionally , he created a rule to check for movement between midnight and 6 : 00 am . “Sensor : motion sensor . Installation method : next to the fridge to recognize people in the kitchen . Program : from midnight to 6 : 00 a . m . When the motion sensor detects people , the Hue in the kitchen turns on for 10 seconds” ( H1 _ S’s diary ) . When motion was detected , the Philips Hue ( smart light bulb ) in the kitchen turned on for 10 seconds and then turned off . He named this rule “moving . ” The “moving” rule developed by H1 _ S used a “period” trigger such that he could only check the operation of the rule during the assigned time ( midnight to 6 : 00 am ) . Therefore , he decided to test this rule during his routine . Use - through - routine Use - through - routine is the stage in which the created rules are tested in the users’ daily routines . In this stage , the participants attempted to identify contextual problems not previously discovered in the motivation and implementation stages . In the use - through - routine stage , the participants evaluated the functioning of the rules in their daily routines . When they found a rule that was valuable , they integrated that rule into their routines . If the rule was not useful , they removed it . During this stage , the participants continuously revised the rules to adapt to their routines . They used the rules in their daily routines and identified new needs , contextual problems , and more specific objectives , which they used to revise the rules . The rules were then revised or new rules were added accordingly . H3 _ M made a rule to indicate the time for her son to go to school by changing the color of the kitchen light . In the use - through - routine stage , she found this rule to be quite useful for managing her children . Therefore , she decided to apply this system to indicate the times for other activities , such as those for her daughter to go kindergarten and for everyone to leave the house . Thus , she designed a series of rules to indicate different times in the morning : time for breakfast ( Figure 4a ) , time for her son to go to school ( Figure 4b ) , time for her daughter to go to kindergarten ( Figure 4c ) and time for everyone to leave the house ( Figure 4d ) . Figure 4 . The morning kitchen light rules designed by H3 _ M . The light color changes to four different colors to notify meaningful times : ( a ) time for breakfast , ( b ) time for the son to go to school , ( c ) time for the daughter to go to kindergarten , and ( d ) time for everyone to leave the house “At first , the light in the kitchen changed only one time to indicate the time for my son to go to school . However , when I used it , my second child ( daughter ) didn’t know the time for kindergarten . My son prepared for school , but my second child had a problem . So , I added a new rule for my daughter . After that , I added one more rule , for my husband to switch all the lights off . In this way , the rules are expanding” ( H3 _ M ) . As the number of rules increases , some rules may begin to overlap each other and cause problems in the user’s routine . The participants ensured overall rule orchestration by revising the rules to prevent possible overlapping among the rules . For this purpose , the participants returned to the implementation stage and re - designed the rules . The rule “moving” implemented by H1 _ S encountered an issue in the use - through - routine stage . The light in the kitchen was intended to turn on for 10 seconds , but instead it turned on for only 2 seconds . H1 _ S diagnosed the reason for Figure 3 . DIY smart home product usage cycle 784 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN this problem , and he found that the reason was an overlapping of two rules . One rule was named “moving” and turned the kitchen light on for 10 seconds when motion was detected in the kitchen at night . The other rule was “nighttime mood light , ” which automatically turned off the light during the night to save energy . These two rules were implemented for different reasons , but they operated during the same period , which caused an overlapping problem . H1 _ S attempted to revise the rules to achieve both values . He changed the “nighttime mood light” rule to only trigger once after midnight ; therefore , the “moving” rule was no longer interrupted by the “nighttime mood light” rule . “ ( … ) however , the lights turn off every 2 seconds , even when motion was detected . I think that it must be a clash with other rules . ( … ) The rule ‘nighttime mood light’ turns the kitchen light off after midnight , and I made this rule simply to turn off the light from midnight to 6 : 00 am . This rule then clashed with the rule ‘moving . ’ So , I changed the period of the ‘nighttime mood light’ rule to cause the light to turn off only once after midnight , so there would be no conflict after that time” ( H1 _ S’s diary ) . When the participants were managing many rules to fit their routines , they first tried to identify their own routines . Through self - reflection on their routines , they attempted to determine when family members left home and returned home and where they performed specific activities . They first tried to understand their overall routines and then revised the rules depending on these routines . These processes also helped them find opportunities to create new rules . H3 _ M knew all of the daily routines of the H3 family well . She first reviewed the overall family routine , such as the times when the family members departed and returned to the home , their expected behaviors , and what activities the DIY smart home products could support . After this review , she began to make rules for her family . “I should have thought about the family routine first and then made a rule , but I did not . So there were some rule - clashing problems . Therefore , I reviewed the family routines . What was our family’s pattern of daily life ? What rules were required for other family members ? What time does my husband come back home ? I considered these things , and I could then see new opportunities . So , I continuously made new rules for my child and husband” ( H3 _ M ) . In the use - through - routine stage , the participants discussed their opinions about the rules . One family member would make a rule , and other members would comment after they had used it . Through the iterative process of feedback and revision , the rules evolved to satisfy various family members’ needs . For example , H4 _ F made a series of rules to play the stereo when the baby awoke , regardless of whether the baby had overslept . However , H4 _ M wanted to prevent the child from oversleeping , so she wanted to change the rules to wake the baby regularly . “ ( … ) H4 _ F said that the music is not always played at 7 : 30 am . The system requires the child to wake up and move to make the motion sensor activate the stereo . I argued that the baby was frequently oversleeping , and the rule H4 _ F made was useless to prevent it . So , he made rules for two situations . When the baby woke up before 8 : 30 , the stereo was played . When the baby did not , the stereo turned on automatically to wake the baby up " ( H4 _ M’s diary ) . Some rules cannot be tested during the implementation stage , and these rules are difficult to debug even for simple errors . When the participants used such rules in their routines , these rules were checked only in a limited period . Moreover , there are many possible problems for which it is difficult to identify the real issue . H2 _ D3 made a rule to turn on the entrance light every morning , but the rule did not work as expected . This rule could be checked only once per day . If she missed that time , she could not determine what the problem was . “Oh , no . . . What’s wrong with it ? I wanted to see the rules working before I went to work , so I made three similar rules , but none worked” ( H2 _ D3’s diary ) . Some participants made rules to aid in debugging . H4 _ F made rules to send an SMS message under certain system conditions , and H7 _ M made a rule for sequential changes in lamp light color . They tried to anticipate the system status through these SMS messages and light changes . " It is better to use simple rules that notify me about what is going on now . These notifications help me to decide upon appropriate actions given the situation . This method is better for dealing with exceptional conditions” ( H4 _ F ) . Routinization Once no more revision is being performed in the use - through - routine stage , the rules remain stable in the routinization stage . During this stage , the users use the rules in their daily lives without any further changes . Most rules were well integrated with the participants’ routines in this stage ; thus , the participants commented that these rules felt like they had always been there . All participating families had at least one rule that had reached the routinization stage . “It feels like I am now accustomed to the Ninjablocks rules . I am not conscious of them , and it feels like they have always been there . Of course , the rules are not overly complicated . All of them are very simple . However , I think it is because the rules are so simple that they have merged into my home so easily and quickly . ” ( H1 _ S’s diary ) . “It is so familiar in our daily routines that I forget that the rules are running . I feel like they are part of the home . The light turns on at that time and off at this time . Sometimes during holidays , the light surprises me because I did not set it for holiday use . The rules are continuously and automatically running all the time . It is comfortable " ( H3 _ M ) . “Now it feels like the product has organically settled into the place where it is needed” ( H4 _ M diary ) . 785 SESSION : DIY TOOLS AND STRATEGIES Removal The removal stage is the stage in which rules are deleted . There are two patterns of removal . The first pattern is that a rule in the routinization stage is no longer needed in the user’s routine . H6 _ M made a rule to prevent her baby from catching cold . She installed humidity sensors to check the conditions of the baby ' s room , and she found that the humidity in the room was consistently low , which was not good for her baby ' s health . Thus , she decided to turn on the humidifier in the baby ' s room at night . After she had turned on the humidifier , the humidity level of the room remained high for several days . H6 _ M believed that the humidity level in the baby ' s room had become stable , so she moved the humidity sensor to another location and removed the related rule . " In the past week , my child caught a cold . Usually , a cold is strongly related to humidity , so I wanted to check the humidity level in the baby ' s room . I made a rule that sends me an email to alert me when the humidity is lower than 35 % . The first few times , I received the email and turned on the humidifier in the room . If I turned on the humidifier once at night , the rule did not send me any alerts . So , I learned that this is sufficient to maintain a healthy humidity level . Therefore , I removed the rule and used the sensor in other places " ( H6 _ M ) . The second pattern of removal is that a rule is found to be not as useful as it was expected to be in the motivation stage . H1 _ D made a mood lighting rule for the bathroom . She installed the humidity sensor in the restroom and changed the light to a Hue bulb . When the humidity in the bathroom was high , the lighting color changed . However , upon using this rule , she found that it was not as effective as she had hoped . Thus , she removed the rule . In such a case , the rule does not proceed to the routinization stage but rather moves directly to the removal stage ( Figure 3 ) . " I used it , but I could not tell when the lighting color changed . Moreover , sometimes it changed , but it was not as useful as I expected . So I just removed it . " ( H1 _ D ) DESIGN IMPLICATIONS Based on the DIY smart home usage cycle , we suggest several design implications for the development of DIY smart home products to improve user experiences . Support Self - reflection on Routines The motivation stage involves the process of finding problems that can be solved using DIY smart home products . All participants reflected on their problematic routines and imagined possible improved routines when attempting to develop new rules . To solve a problem , one must first understand what the real problem is . Therefore , DIY smart home products should assist in diagnosing the problems in daily routines . However , the purpose of routines is to allow people to complete their activities of daily life without attending to the details of the activities of any given moment [ 31 ] . Therefore , people often pay little attention to the chronic problems in their routines . This makes it difficult for people to identify the problems in their routines because they are accustomed to them . Enabling people to reflect on the problems in their routines will be a starting point for improving daily routines through the use of DIY smart home products . By providing a guide to routine reflection and a clear vision for improvement , the unnecessary difficulties in the DIY smart home product iteration cycle can be reduced . Technical support for identifying routines is one possible direction for self - reflection . For instance , an indoor tracking system and wearable sensors can help people to reflect on their own routines by recording their movement paths in the home and sequential behaviors that can indicate what actions they are taking during their routines . Another method may be to assist people in writing their own routine diaries by providing some fun - to - use diary designs . This diary method can be combined with the use of technical devices , as mentioned above , and this combined support system may serve as its own application in addition to the DIY smart home product . Provide Attachable and Detachable Sensors and Actuators In the implementation stage , users attach and detach sensors at various locations in the home to find places where the sensors can effectively detect the triggers associated with a particular routine . However , users are concerned about using nails and tape because they might damage elements of the home interior , such as the wallpaper . When they tested a rule , the participants in the present study used their hands to hold the sensors or used masking tape to temporarily mount them . When a rule is removed , the associated sensors and actuator must also be removed . " When we are using this product , we do not install it only one time . Other places might be more appropriate than the first spot we try . And if a rule is not good enough to use , I remove all of its sensors and actuators . It is better not to use tape to attach the sensor to the wall because it leaves a scar on the wallpaper . Maybe a clip - type attachment would be better for sensor attachment " ( H4 _ M ) . One of the advantages of DIY smart home products is that the smart home features are not set with the first installation but rather can continuously evolve with changes in the routines and values of a family . The components of a DIY smart home system , such as sensors and actuators , should provide flexible methods of attachment that do not damage the home interior to emphasize this advantage . Support Debugging through Routine In the use - through - routine stage , the participants evaluated their rules and debugged them if a rule did not work as they expected . Unlike the debugging process of computer - based programming , the debugging process for a DIY smart home product is performed simultaneously with the user’s daily routines . Therefore , the participants were obliged to address several exceptional , unexpected cases during the 786 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN implementation stage . H4 _ F was a skilled programmer , but he spent approximately one week creating a series of rules to wake his baby up in the morning . The primary reason for this extended development period was that the rules could only be tested once daily , in the morning . “Normally , it took about a week to refine a rule . Because it was not a controlled environment , I had to repeatedly apply trial and error every morning” ( H4 _ F ) . In some cases , malfunctioning rules can hamper other routines . The H1 family was interrupted in their routines by two conflicting rules at midnight , which caused the kitchen lights to blink every 2 seconds . To address these problems , H1 _ D suggested a simulation mode for the DIY smart home product rules . The simulation mode would virtually test conditions that could not be altered at will , such as time and temperature . This approach is similar to the sandbox approach , which displays to the user what would occur upon the implementation of a particular mode of automation before the user adopts the change [ 22 ] . “A period trigger can only be tested at that point in a given day . Also , temperature and humidity do not change immediately , so I couldn’t check my rules that used these triggers . What if the DIY smart home provided a simulation mode to virtually show what would happen with these rules in place , like storytelling ? I think it would help if the rules could be tested more easily , like in a preview mode . ” ( H1 _ D ) . With such a simulation mode for DIY smart homes , users could anticipate possible problems and avoid any critical problems that would disrupt their daily routines before entering the use - through - routine stage . For instance , a user could set the temperature of the room ( 25°C ) or the time ( 8 am ) in the simulation to check the operation of the rules . In addition , these simulations could check rule overlaps to allow users to revise their rules before they would disrupt their daily routines . Undo and history functions that could return a DIY smart home to a previous status would also help to prevent the disruption of daily routines by recording the historical states of the rules . Provide an Evaluation Channel for All Family Members The participants evaluated the rules during the use - through - routine stage . They shared their opinions about the rules and commented on the rules to guide their revision . In most cases , one expert user created most of the rules for the household . In some cases , the expert did not properly consider the needs of one or more other family members , so a rule had to be changed several times after this expert received other family members’ advice ( H3 , H4 , H5 , H6 , H7 , H8 ) . In the user study , there was a group of participants who did not create rules but stayed in the home almost all the time ( H1 _ M , H3 _ S , H3 _ D , H4 _ M , H5 _ M , H6 _ M , H8 _ M ) . These participants typically lived with the rules but had little knowledge concerning the DIY smart home products . In some cases , the rules did not work well , and only these participants experienced the malfunctions . However , they could not explain the problem in detail by describing the unexpected action ( s ) because they did not have sufficient knowledge of the DIY smart home products . Therefore , the other family members who made the rules did not understand how they had malfunctioned . If a DIY smart home product were to systematically support evaluation channels by , for example , recording individual comments regarding the advantages and shortcomings of the rules , users would be able to consider these aggregated opinions when making other rule . Such an evaluation channel should be able to directly record when a user experiences a problem ; this capability would help to maintain clear records and comments regarding the smart home features . By not only recording problems but also recording why a rule is satisfactory , the needs of individual family members could be more effectively considered in future . Create an Intelligible Data Flow / Process / Exchange (cid:56) hen the participants attempted to debug their rules during the use - through - routine phase , they experienced difficulty in understanding the functioning of the system . The participants mentioned that it was difficult to understand the system structure , how it worked and which parts of the program did not work . There are two possible reasons for this problem . First is the invisible wireless connection . Previous research has revealed the importance of explaining the function of a wireless connection in a home environment [ 9 , 35 ] . DIY smart home products comprise sensors , actuators , and central hubs , and they transmit data wirelessly to each other . Therefore , it is more difficult to understand which devices are activated in such a system than it is for a single appliance . Second is the abstract programming environment . DIY smart home products offer a trigger - action programming style in which the programming code is expressed as abstract visual icons , making it difficult for the user to debug because it does not show the actual process of the system . " When I am programming , I can debug by reviewing the code . However , this system displays only abstract icons . I think that the system translates these icons into other , lower - level code that precedes it . However , I did not understand the lower - level processes , so I could not identify the actual problem . It took several attempts to configure the wrong pattern . We just guessed the problem through trial and error " ( H7 _ F ) . To understand the system flow , the participants created rules for diagnostic purposes , such as sequential changes in the light color of a lamp ( H7 ) and the sending of an SMS message under specified system conditions ( H4 ) . One means of improving the intelligibility of DIY smart home systems is to visualize which sensors and actuators are activated . The sensors and actuators could have LEDs embedded on their surfaces , which could display the same color when connected and activated . This feature would help the product inform the user as to which rules are currently running using what sensors and actuators without requiring the user to look 787 SESSION : DIY TOOLS AND STRATEGIES at a smartphone or PC . Instead , the user could see the activity by looking at the individual components . In addition , DIY smart home products should schematize the data processing flow to assist in the debugging process . These schematized data flows should help the user to understand the operational processes of the rules . The participants also experienced difficulty in addressing rules overlaps . When the rules overlap , the system should clearly indicate which rule takes priority over the others . This visualization technique can also be applied in other icon - based programming environments for the debugging process . Support the Smart Augmentations to the Existing Home To install commercial home automation products , professional smart home builders assist in the installation of new infrastructure to facilitate the use of new technologies . These professionals construct a floor plan to check for furniture placement , power sources and home automation components [ 21 ] . However , DIY smart home products are not designed with the assistance of such professionals . The users must determine for themselves what infrastructure they have , what type of Internet they use , and where the power sources are located to install the sensors . This is not the first study to raise the issue of technical infrastructural problems [ 8 ] . However , with regard to a DIY smart home , this problem is more critical because the typical user is not fully knowledgeable about his or her home infrastructure . All participants in our user study experienced problems with the wireless connection to a sensor because of the unique structures of the walls of their homes . The H2 and H3 families spent considerable time determining what type of Internet services they were using during the initial installation stage . They underwent trial and error tests to determine the network status in the process of installing their products . To support such efforts , DIY smart home products could provide functionalities that could help to diagnose a home ' s internet service type and unique wall structures that could block wireless connections during the initial installation stage . Support Family Values for an Emotionally Comfortable Home According to the results of this study , some cases revealed emotional feedback to a rule because the rule had been created by another family member . H1 and H3 created rules that automated lighting conditions for another family member who returned home late at night . The participants who used these rules commented that even though it was just automated lighting , it felt like being welcomed home by another family member . " I did not expect the light to turn on , but it suddenly turned on . When it turned on , it felt like it was welcoming me ( H1 _ M : " I felt the same thing ! " ) I like this rule that feels like friends are welcoming me " ( H1 _ D ) . Moreover , H1 _ D reported that when she saw the running rule made by her father that automated the humidifier in the living room , it reminded her of her father . " At night , the humidifier operated alone in the living room . It reminded me of my dad , like a trace of my father stayed here " ( H1 _ D ) . Previous automation systems have merely attempted to improve inefficient routines . However , DIY smart homes provide value to the home through actions performed by the family as a whole , a capability not provided by previous products . Although the rules created by another family member may not be as efficient as the rules developed by professionals , they can emphasize the meaning of the home as a place that is emotionally comfortable . DIY smart homes should not only focus on efficiency but should also consider emotional aspects , such as the emotional associations of a rule created by another family member . DIY smart homes support the storage of a rule history regarding who created each rule and the recording of certain episodes of family life , thereby providing additional family memories . LIMITATIONS Our study was conducted over a 3 - week period for each family . However , long - term observations will be necessary in future work , which will help to gain an understanding of seasonal changes and changes in family values that occur as a family’s children grow . In addition , our study toolkit provided limited sensors and actuators , as listed in Table 2 . However , different sensors and actuators could potentially give rise to different user behaviors , given our discovery that the functions of DIY smart home products are strongly related to the particular sensors and actuators that are used . Future user studies with different sensors and actuators , such as an indoor location sensor , will be valuable for further DIY smart home research . CONCLUSION We believe that adopting ubiquitous computing technology in the domestic environment can assist in fulfilling user values and improving the quality of life at home . To gain a greater understanding of DIY smart home products , we conducted an in situ user study of these types of products . We discovered that the DIY smart home usage cycle consists of initial installation , motivation , implementation , use - through - routine , routinization , and removal . We suggested seven design implications to support each stage of the DIY smart home usage cycle . In our further studies , we plan to develop a prototype that addresses our design implications and evaluate the effects of this prototype on the user experience . We expect that our findings will contribute to upcoming smart home product design to improve user experiences at home . ACKNOWLEDGMENTS We would like to offer special thanks to all of the participants and to Saeyoung Rho and Mingyeong Kim , who provided remarkable support for the user study . This work was supported by the Dr . M project funded by KAIST and by the BK plus and Global PhD Fellowship program of National Research Foundation of Korea . 788 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN REFERENCES 1 . Chris Beckmann , Sunny Consolvo , and Anthony LaMarca . 2004 . Some Assembly Required : Supporting End - User Sensor Installation in Domestic Ubiquitous Computing Environments . UbiComp ’04 3205 , Chapter 7 , 107 – 124 . 2 . Alan F Blackwell and R Hague . 2001 . Designing a programming language for home automation . Proceedings of the 13th Annual Workshop of the Psychology of Programming Interest Group ( PPIG 2001 ) , April , 85 – 103 . 3 . A . J . Brush , Bongshin Lee , and Ratul Mahajan . 2011 . Home automation in the wild : challenges and opportunities . Proceedings of the SIGCHI Conference on Human Factors in Computing Systems , ACM Press , 2115 – 2124 . 4 . Remy Dautriche , Camille Lenoir , and A Demeure . 2013 . End - User - Development for Smart Homes : Relevance and Challenges . Proceedings of the Workshop “EUD for Supporting Sustainability in Maker Communities” , 4th International Symposium on End - user Development ( IS - EUD ) . 5 . Scott Davidoff , John Zimmerman , and a K Dey . 2010 . How routine learners can support family coordination . Conference on Human Factors in Computing Systems - Proceedings 4 , 2461 – 2470 . 6 . Scott Davidoff , Min Lee , Charles Yiu , John Zimmerman , and Anind Dey . 2006 . Principles of Smart Home Control . UbiComp 2006 : Ubiquitous Computing , 19 – 34 . 7 . Colin Dixon , Ratul Mahajan , Sharad Agarwal , and A . J . Brush . 2012 . An Operating System for the Home . In Proceedings of the 9th USENIX conference on Networked Systems Design and Implementation . 8 . W . Keith Edwards , Mark W . Newman , and Erika Shehan Poole . 2010 . The infrastructure problem in HCI . Proceedings of the 28th international conference on Human factors in computing systems - CHI ’10 , ACM Press , 423 . 9 . W . Keith Edwards and Revecca E Grinter . 2001 . At home with ubiquitous computing : seven challenges . Ubicomp 2001 : Ubiquitous Computing . 10 . Manuel García - Herranz , Pablo A . Haya , and Xavier Alamán . 2010 . Towards a Ubiquitous End - User Programming System for Smart Spaces . Journal of Universal Computer Science 16 , 1633 – 1649 . 11 . Clint Heyer and Margot Brereton . 2010 . Design from the everyday : continuously evolving , embedded exploratory prototypes . Proceedings of 8th ACM Conference on Designing Interactive Systems , . 12 . Michael S . Horn , Robert J . K . Jacob , College Ave , and Robert J . K . Jacob . 2007 . Designing tangible programming languages for classroom use . Proceedings of the 1st international conference on Tangible and embedded interaction - TEI ’07 , ACM Press , 159 . 13 . Jan . Humble , Andy Crabtree , Terry Hemmings , Karl - Petter Åkesson , Boriana Koleva , Tom Rodden , and Pär Hansson . 2003 . “ Playing with the Bits” User - Configuration of Ubiquitous Domestic Environments . Ubicomp2003 , 256 – 263 . 14 . Amy Hwang and Josse Hoey . 2012 . Smart home , the next generation : Closing the gap between users and technology . AAAI Fall Symposium on Gerontechnology . 15 . Amy Hwang , Michael Liu1 , Jesse Hoey and Alex Mihailidis (cid:17)(cid:3)(cid:21)(cid:19)(cid:20)(cid:22)(cid:17)(cid:3)(cid:39)(cid:44)(cid:60)(cid:3)(cid:54)(cid:80)(cid:68)(cid:85)(cid:87)(cid:3)(cid:43)(cid:82)(cid:80)(cid:72)(cid:3031)(cid:29)(cid:3)(cid:49)(cid:68)(cid:85)(cid:85)(cid:82)(cid:90)(cid:76)(cid:81)(cid:74)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3) gap between users and technology . Proceedings of the AAAI Fall Symposium . 16 . IFTTT . Retrieved from https : / / ifttt . com / 17 . Fahim Kawsar , Tatsuo Nakajima , and Kaori Fujinami . 2008 . Deploy spontaneously : supporting end - users in building and enhancing a smart home . Proceedings of the 10th international conference on Ubiquitous computing - UbiComp ' 08 ( 2008 ) . 18 . Jung - Joo Lee , Siân Lindley , Salu Ylirisku , Tim Regan , Markus Nurminen , and Giulio Jacucci . 2014 . Domestic appropriations of tokens to the web . Proceedings of the 2014 conference on Designing interactive systems - DIS ’14 , ACM Press , 53 – 62 . 19 . Henry Lieberman , Fabio Paternò , Markus Klann , and Volker Wulf . 2006 . End - User Development : An Emerging Paradigm . In End User Development SE - 1 , Henry Lieberman , Fabio Paternò and Volker Wulf ( eds . ) . Springer Netherlands , 1 – 8 . 20 . Siân E . Lindley , Richard Banks , Richard Harper , Anab Jain , Tim Regan , Abigail Sellen , and Alex S . Taylor . 2009 . Resilience in the face of innovation : Household trials with BubbleBoard . International Journal of Human - Computer Studies 67 , 2 , 154 – 164 . 21 . Sarah Mennicken and Elaine M Huang . 2012 . Hacking (cid:87)(cid:75)(cid:72)(cid:3)(cid:49)(cid:68)(cid:87)(cid:88)(cid:85)(cid:68)(cid:79)(cid:3)(cid:43)(cid:68)(cid:69)(cid:76)(cid:87)(cid:68)(cid:87)(cid:3031)(cid:29)(cid:3)(cid:36)(cid:81)(cid:3)(cid:44)(cid:81) - the - Wild Study of Smart Homes , Their Development , and the People Who Live in Them . Pervasive , 143 – 160 . 22 . Sarah Mennicken , Jo Vermeulen , and Elaine M . Em Huang . 2014 . From today’s augmented houses to tomorrow ' s smart homes . Proceedings of the 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing - UbiComp ’14 Adjunct , ACM Press , 105 – 115 . 23 . Ninjablocks . Retrieved from https : / / ninjablocks . com / 24 . Shwetak N . Patel , Sidhant Gupta , and Matthew S . Reynolds . 2010 . The design and evaluation of an end - user - deployable , whole house , contactless power consumption sensor . Proceedings of the 28th 789 SESSION : DIY TOOLS AND STRATEGIES international conference on Human factors in computing systems , 2471 – 2480 . 25 . Shwetak N . Patel , Julie A . Kientz and Sidhant Gupta . 2010 . Studying the use and utility of an indoor location tracking system for non - experts . Pervasive Computing . 26 . PhilipsHue . Retrieved February 25 , 2015 from https : / / www . meethue . com 27 . Power manager . Smart plug B310 - W2 . Retrieved June 5 , 2015 from http : / / www . powermanager . co . kr / bbs / shop _ . php ? ljs _ mo d = & ffid = 0 - 0 - 0 & page = & passover = 0 & cno = 2 & cid = & goods _ id = 1393 829810140 & search = 28 . Yvonne Rogers . 2006 . Moving on from Weiser’s Vision of Calm Computing : engaging UbiComp experiences . UbiComp 2006 Ubiquitous Computing 4206 , 404 – 421 . 29 . Shaun Salzberg . Home Maestro . Retrieved February 25 , 2015 from http : / / shaunsalzberg . com / medialab / homemaestro 30 . STACKBOX . Retrieved February 25 , 2015 from http : / / thexuan . com / 31 . Peter Tolmie , James Pycock , Tim Diggins , Allan Maclean , and Alain Karsenty . 2002 . Unremarkable computing . CHI 2002 , 399 – 406 . Retrieved August 12 , 2014 from http : / / dl . acm . org / citation . cfm ? id = 503448 32 . Khai N . Truong , Elaine M . Huang and Gregory D . Abowd . 2004 . CAMP : A magnetic poetry interface for end - user programming of capture applications for the home . UbiComp 2004 . 33 . Twine . Retrieved from http : / / supermechanical . com / twine / 34 . Blase Ur , Elyse McManus , Melwyn Pak Yong Ho , and Michael L . Littman . 2014 . Practical trigger - action programming in the smart home . Proceedings of the 32nd annual ACM conference on Human factors in computing systems - CHI ’14 , ACM Press , 803 – 812 . 35 . Jong - bum Woo and Youn - (cid:78)(cid:92)(cid:88)(cid:81)(cid:74)(cid:3)(cid:47)(cid:76)(cid:80)(cid:17)(cid:3)(cid:21)(cid:19)(cid:20)(cid:21)(cid:17)(cid:3)(cid:38)(cid:79)(cid:76)(cid:83)(cid:82)(cid:76)(cid:71)(cid:3031)(cid:29)(cid:3) An Augmentable Short - Distance Wireless Toolkit for “ Accidentally Smart Home ” Environments . Proceedings of the 2012 conference on Human Factors in Computing Systems CHI 12 , ACM , 1751 – 1754 . 36 . Xi smart home . Retrieved June 5 , 2015 from https : / / play . google . com / store / apps / details ? id = kr . co . gsc onst . xi . smarthome & hl = ko 37 . Salu Ylirisku , Siân Lindley , Giulio Jacucci , Richard Banks , Craig Stewart , Abigail Sellen , Richard Harper and Tim Regan 2013 . Designing web - connected physical artefacts for the “aesthetic” of the home . Proceedings of the SIGCHI Conference on Human Factors in Computing Systems - CHI ’13 , ACM Press , 909 . 38 . Tao Zhang and Bernd Brügge . 2004 . Empowering the user to build smart home applications . Second International Conference On Smart homes and health Telematics . 790 UBICOMP ' 15 , SEPTEMBER 7 – 11 , 2015 , OSAKA , JAPAN