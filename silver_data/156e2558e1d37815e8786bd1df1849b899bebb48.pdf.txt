A Multi - agent System for Collaborative Bookmarking Rushed Kanawati LIPN - CNRS UMR Q 7030 99 AV . J . B . Clémént 93430 Villetaneuse , France Rushed . Kanawati @ lipn . univ - paris13 . fr Maria Malek LAPI - EISTI Av . du Parc 95011 Cergy , FRance Maria . Malek @ eisti . fr ABSTRACT In this paper we describe a new distributed collaborative bookmark system , called C O W ING ( for COllaborative Web IndexING system ) . The C O W ING system is composed of a set of assistant agents , called W INGS , and a central agent that manages the user ' s organization . Each user is assisted by a Wing agent that performs two tasks : learning the user ' s strategy in classifying her / his own bookmarks and interacting with other W ING agents in order to fetch new bookmarks that match the local user information need . Categories & Subject Descriptors : General Terms : Keywords : Bookmarks , Collaborative Interface Agents , Hybrid Neural - CBR classification INTRODUCTION The most intelligent agents that browse and index sites on the World Wide Web ( the Web hereafter ) still to be humans . Consequently , an effective way to locate relevant information on the Web is to locate people who are likely to know where to find the searched information [ 11 ] . Normally , users save addresses of relevant Web sites in a bookmark directory ( or favorites list ) . Almost all Web browsers available today provide users with bookmaking facility . A major reason behind the popularity of bookmarks is their ease of use . A user ' s bookmark collection can be a valuable information source for other users . Bookmarks are valuable for two main reasons . First of all , bookmarks are often the results of tedious and hard information searching process . If users are enabled to share others bookmarks they can spare the required information searching effort . Lastly , because bookmarks are explicitly and intentionally added and organized by the user , they give precise evidences about the user information interests . By applying some collaborative filtering algorithms communities of users that share the same interests can be identified . A number of academic and industrial systems have recently tackled the problem of building collaborative or shared bookmarking systems . Systems like Mylynx ( http : / / mylynx . com ) enable users to save their bookmarks on a remote server . Users can select if they wish to make certain of their bookmarks public or keep them as a private resource . Other systems such as WebTagger [ 7 ] makes the bookmark pool sharable and searchable by a group of users . The GAB system can automatically merge different user ' s bookmark lists in a single and a seamless hierarchy [ 11 ] . Other systems allow to build and identify communities of interests by analyzing users bookmarks . Communities are manually defined in Pharos [ 2 ] , semi - automatically identified in GroupMark [ 10 ] and computationally identified in KnowledgePump [ 4 ] . Amazingly , almost all existing collaborative bookmark management systems seems to ignore major lessons learned in the last decade by the Computer Supported Collaborative Work ( CSCW ) community [ 5 , 6 , 9 ] . Almost all these systems are built according to a centralized architecture , they pay little or no attention to users privacy protection , they require active user participation and ask users to adapt to the system rather adapting the system to the users . All these are factors the reduce the usability of collaborative application by group of users [ 9 ] . In this article , we outline an original collaborative bookmarking system called CoWing ( for Collaborative Web IndexNG ) that enables an organized group of users to share their bookmark in an implicit , secure and effective way . By implicit , we mean that users are not required to do extra work to share their bookmarks pools . The only additional work to do is to define other ' s access rights on their own repositories . A role - based access control service is provided in order to ease this task . Secure sharing refers to the capacity of each user to control who knows what about her / his own bookmark collection . Finally , effectiveness is ensured by recommending users with relevant bookmarks that are computed by applying a distributed collaborative filtering algorithm . SYSTEM OVERVIEW The C O W ING system provides a group of organized users with a computerized - support that enable users to share their experiences in managing bookmark lists . The system is composed of a central C O W ING agent and a W ING agent per registered user . The C O W ING agent acts as W ING agent registry . It provides W INGS with each others addresses . In addition it provides Wing agents with a description of the users organization hierarchy . A W ING agent performs two main tasks : 1 ) assisting the associated user in classifying new bookmarks in her / his own bookmark repository and 2 ) recommending the user with bookmarks that have been added by other users , and which are relevant to the user . Each user manages her / his own hierarchy of bookmarks just as in single - user settings . However , users are required to set access rules that define which personal bookmarks or bookmark folders to share with whom . An easy to use role - based access control system is provided for that purpose . This service will not be discussed in this paper . A W ING agent observes the associated user behavior in order to learn how the user organizes her / his bookmarks . In this goal , each W ING agent implements a hybrid incremental supervised Neural / CBR ( Case - based Reasoning ) classifier [ 8 ] . The used classifier learns user’s classification policy from both positive and negative examples . For each user u , the set of positive examples is composed of the bookmarks explicitly added by the user to a given folder or bookmarks recommended by the system and accepted by the user . Negative examples are Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . AAMAS’02 , July 15 - 19 , 2002 , Bologna , Italy . Copyright 2002 ACM 1 - 58113 - 480 - 0 / 02 / 0007… $ 5 . 00 . bookmarks that are deleted , moved from one folder to another or rejected by the user after being recommended by the system . The used classifier operates either in learning mode or in classification mode . It can be switched from one mode to another at any time [ 8 ] . RECOMMENDATION COMPUTATION The bookmark recommendation computation is performed as follows . Each W ING agent maintains locally two data structures : an agenda and a folder correlation matrix ( FCM ) . The agenda is a dictionary structure where keys represents identifiers of peer W ING agents to contact and values are next contact dates . Hence Agenda [ i ] gives the next contact date with agent i . The FCM is a mXn matrix where m is the number of folders in the local repository and n the number of peer agents known to the local agent . An entry FCM [ i , j ] is a couple < f j k , cor ij > where f j k is a folder identifier maintained by user u j and cor ij is the correlation degree between the folder f j k and the folder f i k maintained by local agent . Correlation between two folders f 1 and f 2 is given by the number of bookmarks contained in folder f 2 that are classified in folder f 1 divided by the total number of bookmarks in f 2 . In the FCM matrix , an entry FCM [ i , j ] = < f j k , cor ij > is computed by taking the folder f k from the agent j repository that have the maximum correlation value with folder i belonging to the local repository . Given a W ING agent A , the bookmark recommendation process is made by executing the following algorithm : For each B agent in Agenda do If Agenda [ B ] is over then ; it is time to contact the B agent send B a bookmark request receive from B : V and ND ; V is A ' s view on B repository Agenda [ B ] = ND ; ; ND the next contact date For each f in V ; f folders in view V < i , c > = computeCorrelation ( f ) ; i is the local folder with If FCM [ i , B ] . cor < c then ; highest correlation with f FCM [ i , B ] = < f , c > ; c is correlation of i and f . If FCM [ i , B ] . cor > δ then recommend to add bookmarks in f to the local folder i ; δ is a minimum correlation ; threshold The function computeCorrelation ( line 7 in above algorithm ) finds the folder i in the local repository that have the highest correlation value with a folder f as defined above . The function proceeds as follows . For each bookmark b i in f the local neural / CBR classifier is applied . For each bookmark , the classifier responds by the identifier of a local folder . The folder that has been selected the most will be the returned folder . CONCLUSION Experiments made on synthetic data show that our approach is valid . However , we believe that some enhancements should in order to make the system operational in real work settings . One important issue concerns the cold start problem . The applied recommendation computation approach makes the hypothesis that users have organized their bookmarks in a hierarchy of folders . Each folder has some semantic sense . While lot of users do use hierarchical bookmark structures , some still using flat organization structures [ 1 ] . Another related problem is the witnessed low overlapping between different users bookmark repositories [ 3 ] . We are working on proposing solutions to these two problems . REFERENCES 1 . Abrams , D . ( 1997 ) Human Factors of Personal Web Information Spaces . MS Thesis , Department of Computer Sciences , University of Toronto , 1997 . 2 . Bouthors V . , and Dedieu O . ( 1999 ) . Pharos , a Collaborative Infrastructure for Web Knowledge Sharing . In Proceedings of the third European Conference On Research and Advanced Technology for Digital Libraries ( ECDL’99 ) Abiteboul S . , and Vercoustre A . Eds ) , LNCS No 1696 , Paris September , 1999 , pp . 215 - 233 3 . A . Cockburn , B . McKenzie . What Do Web Users Do ? An Empirical Analysis of Web Use . In International Journal on Human - Computer Studies , 2000 . 4 . Glance , N . , Arregui , D . , and Dardenne M . ( 1999 ) Making Recommender Systems Work for Organizations . In Proceedings of PAAM ' 99 , London April 1999 . 5 . Grudin , J . ( 1994 ) Groupware and Social Dynamics : Eight challenges for developers . Communication of the ACM 37 , 1 ( January 1994 ) , pp . 92 - 105 . 6 . R . Kanawati , M . Malek . Informing the design of shared bookmark systems . In proceedings of RIAO’2000 , Paris , 2000 . pp . 170 - 180 7 . R . M . Keller , S . R . Wolf ; J . R . Chen , J . L . Rabinowitz and N . Mathe . A Bookmaking Service for Organizing and Sharing URLs . In proceedings of the 6 th International Conference on the World Wide Web , Santa Clara , CA , April 1997 . 8 . M . Malek . Hybrid approaches Integrating Neural Networks and case based reasoning : from Loosely Coupled to Tightly Coupled Models . In K . P . Sankar , S . D . Tharam and S . Y . Daniel ( Eds ) Soft Computing in Case - based Reasoning . Spinger , 2000 pp . 73 - 94 9 . Markus M . L . , and Connolly , T . ( 1990 ) Why CSCW Applications Fail : Problems in the Adoption of Interdependent Work Tools . In Proceedings of the International Conference on Computer Supported Collaborative Work ( CSCW’90 ) , New York 1990 . 10 . Mathe , N . and Chen , J . R . ( 1998 ) ; Organizing and Sharing Information on the World - Wide Web using a Multi - agent System ; In proceedings of ED - MEDIA ' 98 Conference on Educational Multimedia and Hypermedia , Freiburg , Germany , June 1998 . 11 . Wittenburg , K . , Das , D . , Hill W . , and Stead L . ( 1997 ) Group Asynchronous browsing on the World Wide Web . In proceedings of the 6 th International Conference on the World Wide Web , 1999 .