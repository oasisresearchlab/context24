European Journal of Operational Research 69 ( 1993 ) 121 - 130 121 North - Holland Theory and Methodology A cutting - plane approach to the edge - weighted maximal clique problem G . Dijkhuizen and U . Faigle University of Twente , Enschede , Netherlands Received August 1990 Abstract : We investigate the computational performance of a cutting - plane algorithm for the problem of determining a maximal subclique in an edge - weighted complete graph . Our numerical results are contrasted with reports on closely related problems for which cutting - plane approaches perform well in instances of moderate size . Somewhat surprisingly , we find that our approach already in the case of n = 15 or n = 25 nodes in the underlying graph typically neither produces an integral solution nor yields a good approximation to the true optimal objective function value . This result seems to shed some doubt on the universal applicability of cuttingplane approaches as an efficient means to solve linear ( 0 , D - pro - gramming problems of moderate size . Keywords : Integer linear programming ; Cutting - plane ; Clique polytope ; Partition polytope I . Introduction It is a generally observed phenomenon that linear programming problems are ' easy ' to solve in practice even for rather large problem in - stances and even with theoretically inefficient methods like the simplex algorithm . The use of such methods , however , requires that a descrip - tion of the set of feasible solutions via a system of linear inequality restrictions be available . Many optimization problems arising in prac - tice can only abstractly be formulated as linear programming problems over polyhedra P in the sense that no linear description of P is known . Such a well - known example is the traveling sales - Correspondence to : Dr . . U . Faigle , University of Twente , P . O . Box 217 , 7500 AE Enschede , Netherlands . man problem ( TSP ) ( cf . Lawler et al . , 1985 ) . The fundamental idea for a cutting - plane algorithm to solve the linear optimization problem over P is as follows : determine a set F of inequalities that are satisfied by the vectors in P and run a linear programming algorithm relative to the set F of restrictions . This idea was first successfully imple - mented by Dantzig et al . ( 1954 ) for a TSP with n = 49 cities . They note : " A surprising empirical observation is the use of only a trivial number of the many possible restraints to solve any particu - lar problem . " The class F chosen by Dantzig et al . comprised the so - called 2 - matching and sub - tour elimination constraints , which have the property that the feasible solutions to the original problem are exactly the ( 0 , 1 ) - vectors satisfying all constraints in F . Adding the class of ' comb inequalities ' to F , Gr6tschel ( 1980 ) then solves a 0377 - 2217 / 93 / $ 06 . 00 © 1993 - Elsevier Science Publishers B . V . All rights reserved 122 G . Dijkhuizen / The edge - weighted maximal clique problem TSP with n = 120 noting that already the original class of constraints yielded a very good approxi - mation to the true optimal objective function value . Because of the good approximation for the objective function , one can try and combine a cutting - plane approach with a branch - and - bound procedure for the discrete ( 0 , 1 ) - programming problem . This way , e . g . , Padberg and Rinaldi ( 1987 ) successfully solve a TSP with n = 532 . One might expect that it is relatively straight - forward to improve a cutting - plane algorithm rel - ative to the polyhedron P by looking for new classes of valid inequalities and adding these to the old set of constraints . There is a practical difficulty : not only is it often quite involved to find a new class F ' of constraints but it appears to be also intractable to efficiently solve the asso - ciated separation problem : detect some member of F ' that is violated by a given vector x . Thus existing implementations of cutting - plane algo - rithms typically fully exploit only a relatively small class of easy to check valid inequalities while disregarding other classes completely or checking them at most heuristically . Nevertheless , when the cutting - plane approach was applied to other discrete linear ( 0 , 1 ) - pro - gramming problems , the results obtained seemed to suggest that the observation of Dantzig et al . ( 1954 ) quoted above was a general phenomenon not restricted to the TSP alone : for problem instances of moderate size , a cutting - plane algo - rithm exploiting a rather basic set of inequalities should produce either an integral and hence opti - mal solution for the original problem or at least a very good approximation to the true optimal value ( see , e . g . , Marcotorchino and Michaud , 1980 ; Reinelt , 1985 ; Wakabayashi , 1986 ; Faigle et al . , 1987 ) . It is the purpose of this note to report about a computational study on a problem where the natural cutting - plane approach performs very poorly already in very small problem instances and , doing so , seems to shed doubt on the univer - sal applicability of cutting - plane algorithms to linear ( 0 , 1 ) - programming problems . The problem we investigate is motivated by a facility location problem considered in Sp ~ ith ( 1985 ) : find a subclique of maximal weight in an edge - weighted complete graph . In spite of exten - sive use of cutting - planes our algorithm typically fails to produce ( 0 , 1 ) - solutions already for graphs with n = 15 nodes . Moreover , we illustrate with the data from Sp ~ ith ( 1985 ) for n = 25 that also the objective function value computed by the cutting - plane algorithm may be far from the true optimum ( see Section 5 below ) . We find our results even more surprising in the light of the seemingly close relationship be - tween our max - clique problem and the partition problem studied in Wakabayashi ( 1986 ) and Faigle et al . ( 1987 ) , where an edge - weighted complete graph is to be optimally partitioned into sub - cliques . In fact , many of the basic inequalities used in cutting - plane algorithms for the partition problem ( e . g . , the so - called triangle inequalities and partition inequalities in Section 2 ) are valid and facet inducing not only for the polytope associated with the partition polytope but also for the clique polytope . We discuss the theoretical background of our cutting - plane algorithm briefly in Section 2 and Section 3 restricting ourselves to those classes of facet inducing constraints that actually enter the algorithm . The algorithm itself is sketched in Section 4 . Let us finally make it clear that our primary concern in this study is not to solve the max - clique problem efficiently but to investigate the perfor - mance of a cutting - plane approach to the max - clique problem . We have , therefore , been quite generous in letting our algorithm search for pos - sibly violated cutting - planes on the one hand and have , on the other hand , not tried to combine the cutting - plane algorithm with a branch - and - bound procedure . 2 . The clique polytope and related polytopes The basic combinatorial model for the prob - lem we consider can be formulated with the help of the complete ( undirected ) graph K n = ( V , E ) with VI = n nodes and I El = ( ~ ) edges as fol - lows : Let J _ _ _ 2 E be a family of subsets of edges of K n and w : E ~ R a weight function , w extends to a linear weight function w : J ~ ~ via w ( F ) = E we e ~ F Interpreting each member F ~ , , F as a ( 0 , 1 ) - inci - G . Dijkhuizen / The edge - weighted maximal clique problem 123 dence vector in R E , / is exactly the set of vertices of its convex hull P ( f ) = { x ~ EIx = ~ _ , AF ' F , AF > O , Hence , the optimization problem max { w ( F ) l F ~ J } is equivalent to the linear programming problem max w . x s . t . x ~ ( J ) over the polytope P ( / ) . Let 2 < b < n be an integer and choose J to consist of exactly the edge sets of the non - trivial complete subgraphs K ' of K . with at most b nodes . In this ease , we call P , , ( b ) the ( b - restricted ) clique polytope of K , . It can be shown that the dimension of P . ( b ) satisfies dim P , ( b ) = ( 2 ) - 1 if b = 2 , 2 if3 < b < n . Moreover , we remark that the diameter of P , ( b ) equals 1 ( Faigle , 1987 ) . This means that each member of / can be reached in one simplex iteration from any other member . The problem , of course , lies in not knowing how to carry out such an iteration optimally relative to a weight function w . If b is fixed , optimizing over P , ( b ) is polyno - mial because K ~ has only a polynomial number of subgraphs with at most b nodes . In general , the linear optimization problem over P , ( b ) is NP - complete since it apparently generalizes the problem of finding a maximal clique in a ( not necessarily complete ) graph G on n nodes ( see Section 4 below ) . The latter is known to be NP - complete ( cf . Garey and Johnson , . 1979 ) . Linear optimization problems over closely re - lated combinatorial polytopes have been investi - gated . The b - restricted partition polytope ~ , ( b ) of Faigle , Schrader and Suletzki ( 1987 ) arises from families . 2 " of edge sets F that can be obtained as follows : partition the node set V = B © . . . GB ; ( J . . . into pairwise disjoint blocks B ; such that I B ; I < b ( i = 1 , . . . ) and let F consist of all those edges with both endpoints in the same block . The clique partitioning polytope of Wakabayashi ( 1986 ) ( see also Gr6tschel and Wakabayashi , 1989 ) corre - sponds to the polytope ~ ( n ) in our notation . The linear ordering polytope Pz is derived from the complete directed graph K ~ = ( V , / ~ ) and hence is represented in n ( n - 1 ) - dimensional space . The vertices of P ~ correspond to those / / subsets F c E ~ of cardinality t F I = ( 2 ) that con - tain no directed cycle ( Marcotorchino and Mich - aud , 1980 ; Gr6tschel , Jiinger and Reinelt , 1984 ; Jiinger , 1985 , and Reinelt , 1985 ) . The vertices of the polytope defined above can easily be interpreted as the feasible solutions for certain integer linear programming problems . The idea thereby is to formulate combinatorial prop - erties of ( 0 , 1 ) - vectors via linear inequalities that have to be also satisfied by convex combinations of those ( 0 , 1 ) - vectors . Say that three edges a , b , c ~ E ~ form a trian - gle tr ( a , b , c ) in K , if they are pairwise incident : with each tr ( a , b , c ) , we associate the triangle inequality : x a + x b - x c < 1 . ( 2 . 1 ) Note that ( 2 . 1 ) expresses a combinatorial closure concept for ( 0 , D - vectors : components corre - sponding to two sides of a triangle can only be ' 1 ' if also the third side yields ' 1 ' . Three directed edges a , b , c , ~ / ~ form an acyclic triangle atr ( a , b , c ) in / ~ n if they give rise to the following configuration : With each atr ( a , b , c ) , we associate the acyclic triangle inequality : xa + Xb - - Xc < 1 . ( 2 . 1 ' ) A directed 2 - cycle in / ~ , is a pair 2 - c ( a , b ) of 124 G . Dijkhuizen / The edge - weighted maximal clique problem oppositely directed edges , a , b E / ~ n with the same endpoints : b a We consider for each 2 - c ( a , b ) the linear restric - tion X a " ~ - X b : 1 . ( 2 . 1 . 1 ' ) Combinatorially , ( 2 . 1 . 1 ' ) precludes directed 2 - cycles in a ( 0 , 1 ) - solution and , furthermore , guar - antees an orientation between every pair of nodes , i . e . , a tournament . ( 2 . 1 ' ) bars directed cycles from that tournament . Hence it is straightforward to verify the following facts . Proposition 1 . A ( 0 , D - vector x = ( . . . , x , . . . . ) ~ o is a vertex of Pn if and only if x satisfies all linear restrictions of type ( 2 . 1 ' ) and ( 2 . 1 . 1 ' ) . Proposition 2 . A ( 0 , D - vector x = ( . . . . xa . . . . ) ~ E . is a vertex of the partition polytope Pn ( b ) if and only if x satisfies all linear restrictions of type ( 2 . 1 ) and , additionally , for all v ~ V , Exa < b - 1 . ( 2 . 2 ) uEa Note that ( 2 . 2 ) just ensures that the partition is indeed b - restricted . Clearly , every vertex of the clique polytope Pn ( b ) is in particular a vertex of the partition polytope P , ( b ) . Hence , every linear restriction that is valid for Pn ( b ) is also valid for Pn ( b ) . In order to single out the vertices of Pn ( b ) among those of Pn ( b ) , we introduce a new class of linear restrictions . If i , j , l , m ~ V are four distinct nodes of K n , then the associated Z - inequality Z ( i , j , l , m ) is Xij " ~ - Xjl - { - Xlm - - Xil - - Xjm ~ _ _ 1 ( 2 . 3 ) ( ij denotes here the edge with endpoints i and j etc . ) . l m Proposition 3 . A non - zero ( 0 , D - vector X - ~ ' ( " ' ' ' x . . . . . ) ~ En is a vertex of the clique polytope Pn ( b ) if and only if x satisfies all linear restrictions of type ( 2 . 1 ) , ( 2 . 2 ) and ( 2 . 3 ) . Proof . It is straightforward to check that each vertex of P , ( b ) satisfies ( 2 . 3 ) . Conversely , consider an arbitrary partition of V with at least two non - trivial blocks B 1 , B 2 . Let x be the associated ( 0 , 1 ) - incidence vector . We claim that x violates some Z - inequality . Indeed , we may choose distinct nodes i , j ~ B 1 and I , m ~ B 2 yielding Xij : Xlm = 1 and Xjl = Xil ~ - Xjm = 0 and thus violating Z ( i , £ l , m ) . Because a linear restriction is valid for a ( bounded ) polytope if and only if it is valid for each of its vertices , the integer linear program - ming descriptions of the foregoing pro _ . posi _ tions give approximations for the polytopes P . , P . ( b ) and P . ( b ) , where we also replace the integrality conditions x a ~ { 0 , 1 } by the trivial inequalities 0 ~ X a < : 1 . ( 2 . 4 ) Rather than solving the integer linear program relative to a given weight function , one may try to find an approximative solution to the program by solving the corresponding linear programming re - laxation implied by ( 2 . 4 ) with a standard linear programming algorithm . This simple idea appears to often produce surprisingly good results in the case of the linear ordering problem ( see , e . g . , Marcotorchino and Michaud , 1980 or Reinelt , 1985 ) and the partition problem ( see , e . g . , Wakabayashi , 1986 or Faigle et al . , 1987 ) . Not only seems the LP - relaxation to produce a very good approximation to the opti - mal objective function value of the integer LP but , in many cases , actually to yield a solution vector with integer components , which in view of Propositions 1 and 2 must then be a true optimal solution for the integer LP . When we tried to apply the same idea to the clique problem on the basis of Proposition 3 , we were not so lucky . In other words , the LP - relaxa - tion via the linear constraints ( 2 . 4 ) , ( 2 . 1 ) , ( 2 . 2 ) G . Dijkhuizen / The edge - weighted maximal clique problem 125 and ( 2 . 3 ) catches the structure of Pn ( b ) rather poorly . 3 . Facets of the clique polytope In order to obtain a better approximation of Pn ( b ) via the solution set of a suitable system of linear inequalities , we will now list some classes of valid inequalities for Pn ( b ) . The validity of these inequalities is easily verified by checking their validity on the vertices of P , ( b ) : E xe > - 1 , ( 3 . 0 . 0 ) e ~ E n xe < ( ~ ) . ( 3 . 0 . 1 ) e ~ E n Let { i 1 , . . . , i k } be a set of k distinct nodes of K ~ and define the edge sets p = { i ~ i2 , i2i3 , . . . , ik _ lik } , fi = { ili3 , i2i4 , . . . , ik - 3ik - 1 , ik _ 2ik } . Then we obtain the path inequality associated with { i 1 . . . . . i k } via x P , 1 where , as usual , x ( P ) is the sum of the variables associated with members of P . Obviously , ( 3 . 1 ) generalizes the triangle - and Z - inequalities ( k = 3 and k = 4 ) . We call a path inequality with k = 5 also a W - inequality . In a similar fashion , we associate with a 6 - ele - ment subset { il , i 2 , i3 , i4 , i5 , i 6 } of nodes the edge sets K , with both endpoints in T , we define the associated partition inequality via EXit - E Xe ~ 1 . ( 3 . 3 ) t ~ T e ~ E ( T ) In order to evaluate how closely a given inequal - ity aXx < a approximates the polyhedron P ~ ( b ) , assume that it is valid for P ~ ( b ) and consider the induced face F ( a , a ) = { x ~ P , ( b ) : aXx = a } . Recall that F ( a , a ) is a facet of P . ( b ) if dim F ( a , a ) = dim P ~ ( b ) - 1 . Facet inducing inequalities are unique ( up to scaling ) and are not implied by other valid in - equalities of P , ( b ) . In that sense , each facet in - ducing inequality may be viewed as a best possi - ble linear approximation to P ~ ( b ) Proposition 4 . The following valid inequalities are facet inducing for P . ( b ) : ( 0 ) each trivial inequality x a > O ; ( 1 ) theinequality ( 3 . 0 . 0 ) for 3 < b < n ; ( 2 ) the inequality ( 3 . 0 . 1 ) for 3 _ < b _ < n - 2 ; ( 3 ) each trivial inequality for 4 < b < _ n ; ( 4 ) each Z - inequality for 4 < b < n ; ( 5 ) each W - inequality for 4 < _ b < n , n > _ 5 ; ( 6 ) each S - inequality for 4 < b < n , n > _ _ 6 ; ( 7 ) each partition inequality for 4 < _ b < n . We will sketch a proof for the fact that Z - in - equalities are facet inducing . The analogous property for the other inequalities can be derived by similar arguments ( cf . Dijkhuizen ( 1989 ) for details ) . S = { iji 2 . . . . . i5i6 } , = { ili6 , ili3 , i2i4 , i3i5 , i4i6 } in order to obtain an S - inequality via x ( S ) - x ( S ) < 1 . ( 3 . 2 ) Note that path inequalities for k > _ 4 and S - in - equalities are generally not valid for the partition polytope Pn ( b ) . The next class of inequalities is also valid for Pn ( b ) . Let To _ V , IT 1 > _ 2 , be a subset of nodes of K n and i ~ V / T . Denoting by E ( T ) the edges of Proof of Proposition 4 . 4 . Without loss of general - ity , we consider the Z - inequality X13 - ~ - X32 q - X24 - - X12 - - X34 ~ 1 on the subset { 1 , 2 , 3 , 4 } of nodes of K n . If suf - fices to show that each ( incidence vector of an ) edge of K n can be written as a linear combina - tion of ( incidence vectors of the edge sets of ) cliques in K n comprising at most 4 nodes and satisfying the given Z - inequality with equality . Then the induced face will have dimension at least ( n ) _ 1 . Because obviously not every sub - z 126 G . Dijkhuizen / The edge - weighted maximal clique problem clique of K n yields equality , the induced face must be a facet . Consider first the case n = 4 . Then it is readily verified that each edge is a linear combination of C13 , C23 , C24 , C123 , and C1234 , where , for exam - ple , C234 denotes the ( incidence vector of ) the edge set of the clique on the subset { 2 , 3 , 4 } of nodes . If n > 4 , we let K , _ I be the complete graph on { 1 , 2 . . . . . n - 1 } and assume by induction that each edge of Kn _ 1 can be obtained as a linear combination of cliques on at most 4 nodes for which equality holds . Then we have , for instance , fin = C23 - { - C13 n - ' - C24 n - C234n , showing that also the remaining edges are repre - sentable in the desired manner . Let us remark in passing that the trivial in - equalities x e _ ~ < 1 are implied by the set of triangle inequalities and hence are not facet inducing . Moreover , it can be shown that each path in - equality with k < 6 is implied by the sets of trivial and path inequalities given in Proposition 4 . The classes listed in Proposition 4 are far from exhausting all facets of the polytope Pn ( b ) ( a sample of techniques leading to some additional classes of facets can be found in Dijkhuizen , 1989 ) . We restrict ourselves to these classes for practical reasons : we feel that these classes con - stitute a maximum of what an implementation of a cutting plane algorithm for the b - restricted clique problem can , at the current state of the art , realistically exploit . The difficulty comes from the separation prob - lem relative to a class J of linear inequalities : decide if a given vector x ~ R E violates one of the inequalities in J . Each cutting plane algo - rithm that fully exploits J must be able to solve the corresponding separation problem . Already for the case where J is the class of partition inequalities no separation algorithm with polynomial running time is known . Exhaustive search through J is not practical since J has exponential size . Hence we are unable to fully exploit these inequalities . As in Wakabayashi ( 1986 ) , we contend ourselves with a heuristic search for violated partition inequalities . 4 . A cutting - plane algorithm The max - clique problem relative to the weight vector w ~ R E and the complete graph K , = ( V , E ) on n nodes is ( CP ) max w . x s . t . x ~ ~ , ( b ) , where 2 _ < b _ < n is a given size restriction on the subcliques of K n . We will attempt to solve the linear program - ming relaxation ( LP ) below instead of ( CP ) . It follows from Proposition 3 that each optimal so - lution x * of ( LP ) is , in particular , an optimal solution of ( CP ) whenever x * has integer compo - nents . We now set F 0 . ' = class of trivial inequalities , F 1 : = the inequalities ( 3 . 0 . 0 ) and ( 3 . 0 . 1 ) , F T : = class of triangle inequalities , F z . ' = class of Z - inequalities , F w : = class of W - inequalities , F s : = class of S - inequalities , Fp : = class of partition inequalities , F : = Fo U F l u FT u Fz U Fw U Fs u F P and specify the linear programming relaxation of ( CP ) : ( LP ) max w . x s . t . x satisfies all inequalities in F . Our cutting - plane algorithm can now be sketched as follows : ( 0 ) initialize the linear program max w - x st ( LV ) \ Z , l e ~ E 0 _ < Xe _ < l ; ( 1 ) determine an optimal solution x * for ( L - P ) ; ( 2 ) if x * is the edge - incidence vector of a clique in Kn , then output the optimal solution x * of ( CP ) and STOP ; ( 3 ) search for inequalities in F that are vio - lated by x * ; ( 4 ) if search in ( 3 ) is successful , update L ( L - P ) and go to ( 1 ) ; ( 5 ) STOP ; ( no solution for ( CP ) was found ) . In our implementation of the cutting - plane algorithm , we carried out step ( 1 ) with the soft - G . Dijkhuizen / The edge - weighted maximal clique problem 127 ware package MPSX / 370 on an IBM 9370 com - puter . We execute step ( 3 ) in the following manner : we start exhaustive search through F - r until we have found MAXCUT violated triangle inequali - ties . Then we search through F z until 3 . MAX - CUT violated Z - inequalities are obtained . Only if our current solution x * satisfies all inequalities in F x u F z , we search through F w u F s for at most 5 * MAXCUT violated inequali - ties , where the parameter MAXCUT is chosen in advance dependent on the problem size n . We try to detect violated partition inequalities only if all inequalities in F x u F z U F w u F z hold for x * . Our search through Fp is not exhaustive but based on a heuristic . Thus , if the algorithm halts in step ( 5 ) , we have no guarantee that F was completely exploited . We do exploit , how - ever , all path inequalities and all S - inequalities . The update of ( L - - P ) in step ( 4 ) always retains the inequalities of F 0 U F 1 . Among the other in - equalities in the set of restrictions of the current ~ ) , those are removed that are not binding for x * . Then all inequalities found in ( 3 ) are adjoined to yield the updated set of restrictions for ( - L - P - ) . Without going into details , let us mention that the subroutines we employ in step ( 3 ) have run - ning time complexity O ( n 4 ) for F - r U F z and O ( n 6 ) for F w u F s while the heuristic for F e runs in time O ( n3 ) . This indicates that the running time of our cutting - plane algorithm quickly increases with n . For the examples we describe in Section 5 , it ranges between a few minutes ( for n = 10 ) to several hours ( n - - - 25 ) . We want to make it clear , however , that our objective in this study was not to implement a time - efficient cutting - plane algorithm for the max - clique problem but to test the feasibility of trying to solve ( CP ) via a cutting - plane approach . The only allowance for real - world time restric - tions consisted in replacing exhaustive search through the class Fp by a fast heuristic and to limit the number of iterations ( i . e . , executions of step ( 1 ) ) in the algorithm to 100 ( or 200 for the problem of Sp ~ ith , 1985 ) . 5 . Computational results In this section , we report about some of the computational results we obtained for three types of test problems : the ' classical ' max - clique prob - lem , problems with positive and negative weights on the edges and problems with only non - nega - tive weights . There is a philosophical problem about how test examples should be chosen : on the basis of random generated data or of ' real - world ' data . If the widely held belief that random problems are ' easier ' is true , we have given our algorithm a fair chance . For the classical max - clique problems , the weight function of course is predetermined while we have generated random graphs with various edge densities . For the problems on K n , the edge weights are uniformly drawn within a given range . A critical case are the data for the location problem of Spith ( 1985 ) : the original data were randomly generated ; since we took them over identically we must consider them as ' real - world ' data . The parameter MAXCUT was typically set MAXCUT = 50 forn = 10 , 75 forn = 15 , 100 for n = 20 . Table 1 n Density Problems Total Given Solved iterations Total Total Total Average TZ WS P facets 10 25 % 10 9 42 50 % 10 6 255 75 % 10 8 284 15 10 % 10 8 62 25 % 10 0 314 75 % 3 0 300 20 10 % 10 6 128 25 % 5 0 500 21 20 1 50 170 81 4 54 211 70 3 70 27 34 1 71 187 129 1 72 294 6 0 112 72 56 0 78 379 121 0 100 128 G . Dijkhuizen / The edge - weighted maximal clique problem 5 . 1 . The classical max - clique problem In the classical max - clique problem , we are given a graph G = ( I . I , E ' ) on n nodes and are to find a subclique of G of maximal cardinality . We can model this problem on Pn ( n ) by interpreting E ' as a subset of the edge set of the complete graphs K n = ( F , E ) and choosing the weight 1 for e ~ E ' , we = - M fore ~ E \ E ' , where M is ' large ' ( e . g . M = ( ~ ) ) . For our test problems we obtained the results given in Table 1 . Table 1 reports a problem as ' solved ' only if the corresponding problem ( CP ) has been solved , i . e . , only if the sequence of cutting plane relaxations ( L - P - ) produces an inte - gral optimal solution . Furthermore , an account of the total number of iterations of type ( - L - - P ) for each class of test problems is given , from which the average per test problem can easily be recov - ered . The total number of iterations is subdivided according to the types of violated constraints in - volved in the update for the next iteration ( L - P - ) . For example , for n = 10 and density 50 % of the test problems , 6 out of 10 problems were solved . The attempt to solve the 10 problems led to 225 LP ' s of type ( L - - P - ) , 170 updates involved only triangle or Z - inequalities , 81 updates used W - or S - inequalities , and 4 updates included partition inequalities . The last column of Table 1 yields a measure for the average size of ( L - P ) during the algorithm . In the cases ( n = 15 , 75 % ) and ( n = 20 , 25 % ) we stopped the test run after having observed that our algorithm had produced no solution within the set limit of 100 iterations on the first examples . 5 . 2 . Positive and negative weights We have generated random weights w e in the range - 100 < We < + 100 for 5 test examples of size n = 10 and have ap - plied the cutting plane algorithm to the parame - ter values b = 3 , 4 , 10 in each of the five exam - pies . In 12 of the resulting 15 test runs , the algorithm was able to find the optimal solution for the corresponding max - clique problem ( CP ) . The observed performance for examples of size n = 15 was drastically worse . In this case , we considered random weights in the range - 500 ~ w e ~ _ q - 500 for 5 test examples and tried to solve the max - clique problem for b = 3 , 4 , 5 . Only in 2 of the resulting 15 test runs was the algorithm success - ful ! 5 . 3 . Nonnegative weights We consider 10 test examples of size n = 10 and 10 test examples of size n = 15 . The weight range is 0 ~ _ w e ~ _ 1000 and the results are given in Table 2 . Notice again the drop in the performance of the algorithm as the problem size increases from n = 10 to n = 15 . We also tried to run the algorithm for n = 15 and Table 2 n b Problems Total Total Total Total Average solved iterations TZ WS P facets 10 3 7 126 70 48 8 30 4 9 159 117 41 1 52 5 8 151 108 39 4 78 6 9 89 79 10 0 102 7 9 72 66 6 0 109 8 8 41 39 2 0 119 9 10 29 28 1 0 105 15 3 4 116 64 52 0 47 4 3 482 246 234 2 80 5 5 781 580 201 0 78 G . Dijkhuizen / The edge - weighted maximal clique problem 129 b > 6 . In each case , however , our limit of 100 iterations was reached and hence no result was obtained . 5 . 4 . A facility location problem In Sp ~ ith ( 1985 ) a certain facility location prob - lem is modelled as follows : in the complete graph K n = ( V , E ) with nonnegative edge weights de , e ~ E , find a clique on b nodes of smallest possi - ble edge weight . If M is a strict upper bound on the de ' S we can formulate an equivalent model in our con - text . We work with the positive edge weights we = M - d e ( e ~ E ) and try to solve the problem max w • x s . t . XEPn ( b ) . Sp ~ ith ( 1985 ) gives a set of data for n = 25 ( and M = 1000 ) to which he applies a simple exchange heuristic and thus achieves optimal solutions at least for the cases b = 3 , 4 , 5 , 6 in Table 3 . When we used Sp ~ ith ' s data in our algorithm , we were not so much interested in solving the associated integer programming problems ( in fact , none was solved ) . We wanted to know how closely the objective function value of our LP - relaxation approximates the value of the true optimum . To achieve better performance , we permitted 200 iterations in each run of our algorithm . The re - sults were as in Table 3 . Analyzing our computations results , it is ap - parent that a pure cutting - plane approach to the max - clique problem is not advisable even for small instances ( enumeration of all cliques may be com - petitive in running time and offers the guarantee of finding the true optimum ) . An alternative might be to embed a cutting - plane algorithm as a subroutine in a branch - and - bound procedure . For this to be successful , the cutting - plane subroutine should be time efficient . A considerable speed - up could be achieved by basing the algorithm on the subset F ' = FoUF I UFTUF z of linear restrictions instead of F . It is interesting to note that F e seems to hardly play any role for the computation in our test problems ( the same phenomenon is observed in Wakabayashi ( 1986 ) , where only 7 examples out of a total of 24 with 12 < n < 137 make use of partition inequalities ) . Our results also suggest that the triangle and Z - inequalities are more important than the W - and S - inequalities . On the other hand , Table 3 suggests that a cutting - plane algorithm may vastly overestimate the value of the true optimum and thus not lend itself to an efficient branch - and - bound proce - dure . From a practical point of view , we feel that the ( edge - ) weighted max - clique is currently be - yond efficient exact solution methods even for very moderate problem instances . A cutting - plane approach seems to do little to improve that pic - ture . 6 . Discussion The poor performance of a cutting - plane ap - proach to the max - clique problem appears even Table 3 b TZ WS P Facets Iterations Sp ~ ith 50 100 200 3 3 5 0 85 4 18 13 0 101 5 76 51 2 112 6 147 53 0 130 7 164 36 0 187 8 164 36 0 257 9 177 23 0 361 10 189 11 0 334 11 195 5 0 401 2 945 - - 2 853 5 757 - 5 471 9 339 9 258 9 224 8 478 13 572 13 422 13 309 12 325 18379 18139 17758 16559 23 730 23 384 23 015 21025 29 932 29 224 28 718 26 235 35 798 35 295 34 705 3 1508 43185 41620 41 116 37 834 130 G . Dijkhuizen / The edge - weighted maximal clique problem more striking when contrasted with the perfor - mance of similar approaches to seemingly closely related problems . Wakabayashi ( 1986 ) has investigated the ( edge - ) weighted partition problem ( cf . Section 2 ) and based a cutting - plane algorithm on the sets of triangle and partition inequalities ( in addition to the trivial inequalities ) . In all of the 24 test problems considered with n up to 137 , the algo - rithm is able to produce the optimal ( integral ) solution . Moreover , in 17 cases already the trian - gle inequalities suffice to obtain the optimal solu - tion . Acceptable results are also achieved in Faigle , Schrader and Suletzki ( 1987 ) for the b - re - stricted partition problem with n up to 70 , where the cutting - plane method is incorporated into a branch - and - bound algorithm . For the linear ordering problem ( cf . Section 2 ) , Marcotorchino and Michaud ( 1980 ) suggest a cut - ting - plane algorithm based on the acyclic triangle and the directed 2 - cycle inequalities alone . They report about computational experience with n up to 72 and note that the cutting - plane algorithm may produce a non - integral solution - but " ce phEnom ~ ne est assez rare et ne semble passe produire dans les probl ~ mes pratiques " . A computational study of the linear ordering problems is also done in Reinelt ( 1985 ) on exam - ples with n up to 60 . The cutting - plane approach there includes in addition to triangle and directed 2 - cycle inequalities also so - called ' M6bius lad - ders ' . It is observed that in most of the cases the cutting - plane algorithm yields the optimal inte - gral solution . Moreover , only in a minority of examples , M6bius ladders are actually invoked . It is further found that the objective value of the LP - relaxation using only triangle and 2 - cycle in - equalities , in all instances furnishes a very good approximation for the true optimal objective function value . Trying to explain why our cutting - plane ap - proach to the max - clique problem fails already for small problem instances , it seems to us that the success of cutting - plane methods in general is very much problem dependent and that the max - clique problem is , in this sense , ' untractable ' even for modest problem instances . Another explanation , of course , could be that we simply have failed to detect the ' appropriate ' cutting - plane for our problem . It should be inter - esting to see if there are other classes of facet inducing inequalities for Pn ( b ) that are simple enough to be incorporated into a computationally feasible algorithm with superior performance characteristics . References Dantzig , G . B . , Fulkerson , D . R . , and Johnson , S . M . ( 1954 ) , " Solution of a large scale traveling - salesman problem " , Operations Research 2 , 393 - 410 . Dijkhuizen , G . ( 1989 ) , " Een polydrische benadering van het maximale clique probleem " , Master ' s Thesis , Faculty of Applied Mathematics , University of Twente ( in Dutch ) . Faigle , U . ( 1987 ) , " The clique polytope of a graph " , Memo - randum No . 663 , Faculty of Applied Mathematics , Univer - sity of Twente . Faigle , U . , Schrader , R . , and Suletzki , R . ( 1987 ) , " A cutting - plane algorithm for optimal graph partitioning " , Methods of Operations Research 57 , 109 - 116 . Garey , M . R . , and Johnson , D . S . ( 1979 ) , Computers and In - tractability : A Guide to the Theory of NP - completeness , Freeman , San Francisco , CA . Gr6tschel , M . ( 1980 ) , " On the symmetric travelling salesman problem : Solution of a 120 - city problem " , Mathematical Programming Studies 12 , 61 - 77 . Gr6tschel , M . , Jfinger , M . , and Reinelt , G . ( 1984 ) , " A cutting plane algorithm for the linear ordering problem " , Opera - tions Research 32 , 1195 - 1220 . Gr6tschel , M . , and Wakabayashi , Y . ( 1989 ) , " A cutting plane algorithm for a clustering problem " , Mathematical Pro - gramming B 45 , 59 - 96 . Jfinger , M . ( 1985 ) , Polyhedral Combinatorics and the Acyclic Subgraph Problem , Heldermann - Verlag , Berlin . Lawler , E . L . , Lenstra , J . K . , Rinnoy Kan , A . H . G . , and Shmoys , D . B . ( 1985 ) , The Traveling Salesman Problem - A Guided Tour of Combinatorial Optimization , John Wiley , Chich - ester . Marcotorchino , J . F . , and Michaud , P . ( 1980 ) , " Optimization en analyse des donn6es relationnelles " , in : E . Diday , L . Lebart , J . P . Pages and R . Tomassone ( eds . ) , Data Analysis and Informatics , North Holland , Amsterdam , 655 - 670 . Padberg , M . , and Rinaldi , G . ( 1987 ) , " Optimization of a 532 - city symmetric travelling salesman problem by branch and cut " , Operations Research Letters 6 , 1 - 7 . Reinelt , G . ( 1985 ) , The Linear Ordering Problem : Algorithms and Applications , Heldermann - Verlag , Berlin . Sp ~ ith , H . ( 1985 ) , " Heuristic determining cliques of given cadinality and with minimal cost within weighted complete graphs " , Zeitschrift fiir Operations Research 29 , 125 - 131 . Wakabayashi , Y . ( 1986 ) , " Aggregation of binary relations : Algorithmic and polyhedral investigations " , Doctoral Dis - sertation , University of Augsburg .