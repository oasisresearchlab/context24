Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 1 of 17 Applications of Random Networks Complex Networks CSYS / MATH 303 , Spring , 2011 Prof . Peter Dodds Department of Mathematics & Statistics Center for Complex Systems Vermont Advanced Computing Center University of Vermont Licensed under the Creative Commons Attribution - NonCommercial - ShareAlike 3 . 0 License . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 2 of 17 Outline Analysis of real networks How to build revisited Motifs References Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 3 of 17 More on building random networks I Problem : How much of a real network’s structure is non - random ? I Key elephant in the room : the degree distribution P k . I First observe departure of P k from a Poisson distribution . I Next : measure the departure of a real network with a degree frequency N k from a random network with the same degree frequency . I Degree frequency N k = observed frequency of degrees for a real network . I What we now need to do : Create an ensemble of random networks with degree frequency N k and then compare . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 5 of 17 Building random networks : Stubs Phase 1 : I Idea : start with a soup of unconnected nodes with stubs ( half - edges ) : I Randomly select stubs ( not nodes ! ) and connect them . I Must have an even number of stubs . I Initially allow self - and repeat connections . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 6 of 17 Building random networks : First rewiring Phase 2 : I Now ﬁnd any ( A ) self - loops and ( B ) repeat edges and randomly rewire them . ( A ) ( B ) I Being careful : we can’t change the degree of any node , so we can’t simply move links around . I Simplest solution : randomly rewire two edges at a time . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 7 of 17 General random rewiring algorithm 1 1 i 3 i 4 i 2 e 2 e i I Randomly choose two edges . ( Or choose problem edge and a random edge ) I Check to make sure edges are disjoint . i 3 i 4 i 2 1 e’ 2 i e’ 1 I Rewire one end of each edge . I Node degrees do not change . I Works if e 1 is a self - loop or repeated edge . I Same as ﬁnding on / off / on / off 4 - cycles . and rotating them . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 8 of 17 Sampling random networks Phase 2 : I Use rewiring algorithm to remove all self and repeat loops . Phase 3 : I Randomize network wiring by applying rewiring algorithm liberally . I Rule of thumb : # Rewirings ’ 10 × # edges [ 1 ] . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 9 of 17 Random sampling I Problem with only joining up stubs is failure to randomly sample from all possible networks . I Example from Milo et al . ( 2003 ) [ 1 ] : 3 1 configuration 90 configurations 0 0 . 5 1 0 0 . 5 1 % fr e q u e n c y o f o cc u r r e n c e 0 0 . 5 1 switching algorithm go with the winners matching algorithm ( c ) ( a ) ( b ) FIG . 2 : Uniformity tests of the three algorithms on a toy net - work . Panels ( a ) and ( b ) depict the two types of topologies of the 91 random networks studied , one of them like ( a ) and 90 like ( b ) . Panel ( c ) shows the frequency with which each con - ﬁguration is sampled by our three algorithms . 100000 graphs were generated with each algorithm , and the ﬁgure shows the fraction of graphs of each type generated . If sampling were uniform , each should appear with probability 191 , which is indicated by the dotted lines . The go - with - the - winners and switching algorithms sample uniformly within sampling er - ror , passing both the Kolmogorov – Smirnoﬀ and Lillie Gaus - sian tests . The matching algorithm under - samples the unique conﬁguration ( a ) . network . The network consists of an out - hub with ten outgoing edges , an in - hub with ten incoming edges , and ten nodes with one incoming edge and one outgoing edge each . Given this degree sequence , there are just two dis - tinct networktopologieswith no multiple edges , as shown in Fig . 2a and 2b . There is only a single way to form the network in 2a , but there are 90 diﬀerent ways to form 2b . We generated 100000 random networks using each of the 3 methods described here and the results are sum - marized in Fig . 2c . As the ﬁgure shows , the matching algorithm introduces a bias , undersampling the conﬁgu - ration of Fig . 2a . This is a result of the dynamics of the algorithm , which favors the creation of edges between hubs . The switching and go - with - the - winners algorithms on the other hand sample the conﬁgurations uniformly , generating each graph an equal number of times within the measurement error on our calculations . The go - with - the - winners algorithm truly samples the ensemble uni - formly but is far less eﬃcient than the two other meth - ods . The results given here indicate that the switching algorithm produces essentially identical results while be - ing a good deal faster . The matching algorithm is faster still but samples in a measurably biased way . Now consider the study of network motifs . We are in - terested in knowing when particular subgraphs or motifs appear signiﬁcantly more or less often in a real - worldnet - work than would be expected on the basis of chance , and we can answer this question by comparing motif counts to random graphs . Some results for the case of the “feed - forward loop” motif [ 16 , 17 ] are given in Table I . In this case the densities of motifs in the real - world networks are many standard deviations away from random , which suggests that any of the present algorithms is adequate for generating suitable random graphs to act as a null model , although the go - with - the - winners and switching algorithms , while slower , are clearly more satisfactory theoretically . The matching algorithm was measurably nonuniform for our toy example above , but seems to give better results on the real - world problem . Overall , our results appear to argue in favor of us - ing the switching method , with the go - with - the - winners method ﬁnding limited use as a check on the accuracy of sampling . Accuracy checks are also supplied by analyti - cal estimates for subgraph numbers [ 11 ] . IV . CONCLUSIONS In this paper we have compared three algorithms for generating random graphs with prescribed degree se - quences and no multiple edges or self - edges . Two of the three have been used previously , but suﬀer from nonuni - formity in their sampling properties , while the third , a method based on the “go with the winners” Monte Carlo procedure , is new and provably samples uniformly but is quite slow . Of the two older algorithms , we show that one , which we call the “matching” algorithm , has measurable deviations from uniformity when compared 3 1 configuration 90 configurations 0 0 . 5 1 0 0 . 5 1 % fr e qu e n c y o f o cc u rr e n ce 0 0 . 5 1 switching algorithm go with the winners matching algorithm ( c ) ( a ) ( b ) FIG . 2 : Uniformitytestsofthethreealgorithmsonatoynet - work . Panels ( a ) and ( b ) depictthetwotypesoftopologiesof the91randomnetworksstudied , oneofthemlike ( a ) and90 like ( b ) . Panel ( c ) showsthefrequencywithwhicheachcon - ﬁgurationissampledbyourthreealgorithms . 100000graphs weregeneratedwitheachalgorithm , andtheﬁgureshowsthe fractionofgraphsofeachtypegenerated . Ifsamplingwere uniform , each should appear with probability 191 , which is indicatedbythedottedlines . Thego - with - the - winnersand switchingalgorithms sampleuniformlywithinsampling er - ror , passingboththeKolmogorov – SmirnoﬀandLillieGaus - siantests . Thematchingalgorithmunder - samplestheunique conﬁguration ( a ) . network . Thenetworkconsistsofanout - hubwithten outgoingedges , anin - hubwithtenincomingedges , and tennodeswithoneincomingedgeandoneoutgoingedgeeach . Giventhisdegreesequence , therearejusttwodis - tinctnetworktopologieswithnomultipleedges , asshown inFig . 2aand2b . Thereisonlyasinglewaytoformthe networkin2a , butthereare90diﬀerentwaystoform2b . Wegenerated100000randomnetworksusingeachof the3methodsdescribedhereandtheresultsaresum - marizedinFig . 2c . Astheﬁgureshows , thematching algorithmintroducesabias , undersamplingtheconﬁgu - rationofFig . 2a . Thisisaresultofthedynamicsofthe algorithm , which favors the creation of edges between hubs . Theswitchingandgo - with - the - winnersalgorithms ontheotherhandsampletheconﬁgurationsuniformly , generatingeachgraphanequalnumberoftimeswithinthemeasurementerroronourcalculations . Thego - with - the - winners algorithmtruly samples the ensemble uni - formlybutisfarlesseﬃcientthanthetwoothermeth - ods . Theresultsgivenhereindicatethattheswitching algorithmproducesessentiallyidenticalresultswhilebe - ingagooddealfaster . Thematchingalgorithmisfaster stillbutsamplesinameasurablybiasedway . Nowconsiderthestudyofnetworkmotifs . Wearein - terestedinknowingwhenparticularsubgraphsormotifsappearsigniﬁcantlymoreorlessofteninareal - worldnet - workthanwouldbeexpectedonthebasisofchance , and wecananswerthisquestionbycomparingmotifcountstorandomgraphs . Someresultsforthecaseofthe“feed - forwardloop”motif [ 16 , 17 ] aregiveninTableI . Inthis case the densities of motifs in the real - worldnetworks aremanystandarddeviationsawayfromrandom , which suggeststhatanyofthepresentalgorithmsisadequateforgeneratingsuitablerandomgraphstoactasanullmodel , althoughthego - with - the - winnersandswitching algorithms , while slower , are clearly more satisfactory theoretically . Thematchingalgorithmwasmeasurably nonuniformforourtoyexampleabove , butseemstogive betterresultsonthereal - worldproblem . Overall , our results appear to argue in favor of us - ingtheswitchingmethod , withthego - with - the - winners methodﬁndinglimiteduseasacheckontheaccuracyofsampling . Accuracychecksarealsosuppliedbyanalyti - calestimatesforsubgraphnumbers [ 11 ] . IV . CONCLUSIONS Inthispaperwehavecomparedthreealgorithmsfor generating random graphs with prescribed degree se - quencesandnomultipleedgesorself - edges . Twoofthe threehavebeenusedpreviously , butsuﬀerfromnonuni - formityintheirsamplingproperties , whilethethird , a methodbasedonthe“gowiththewinners”MonteCarlo procedure , isnew andprovablysamplesuniformly but is quite slow . Of the two older algorithms , we show thatone , whichwecallthe“matching”algorithm , has measurabledeviationsfromuniformitywhencompared Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 10 of 17 Sampling random networks I What if we have P k instead of N k ? I Must now create nodes before start of the construction algorithm . I Generate N nodes by sampling from degree distribution P k . I Easy to do exactly numerically since k is discrete . I Note : not all P k will always give nodes that can be wired together . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 12 of 17 Network motifs I Idea of motifs [ 2 ] introduced by Shen - Orr , Alon et al . in 2002 . I Looked at gene expression within full context of transcriptional regulation networks . I Speciﬁc example of Escherichia coli . I Directed network with 577 interactions ( edges ) and 424 operons ( nodes ) . I Used network randomization to produce ensemble of alternate networks with same degree frequency N k . I Looked for certain subnetworks ( motifs ) that appeared more or less often than expected Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 13 of 17 Network motifs letter 64 nature genetics • volume 31 • may 2002 Network motifs in the transcriptional regulation network of Escherichia coli Shai S . Shen - Orr 1 , Ron Milo 2 , Shmoolik Mangan 1 & Uri Alon 1 , 2 1 Department of Molecular Cell Biology , 2 Department of Physics of Complex Systems , Weizmann Institute of Science , Rehovot 76100 , Israel . Correspondence should be addressed to U . A . ( e - mail : urialon @ wisemail . weizmann . ac . il ) . Little is known about the design principles 1 – 10 of transcrip - tional regulation networks that control gene expression in cells . Recent advances in data collection and analysis 2 , 11 , 12 , however , are generating unprecedented amounts of informa - tion about gene regulation networks . To understand these complex wiring diagrams 1 – 10 , 13 , we sought to break down such networks into basic building blocks 2 . We generalize the notion of motifs , widely used for sequence analysis , to the level of networks . We deﬁne ‘network motifs’ as patterns of intercon - nections that recur in many different parts of a network at fre - quencies much higher than those found in randomized networks . We applied new algorithms for systematically detecting network motifs to one of the best - characterized reg - ulation networks , that of direct transcriptional interactions in Escherichia coli 3 , 6 . We ﬁnd that much of the network is com - posed of repeated appearances of three highly signiﬁcant motifs . Each network motif has a speciﬁc function in determin - ing gene expression , such as generating temporal expression programs and governing the responses to ﬂuctuating external signals . The motif structure also allows an easily interpretable view of the entire known transcriptional network of the organ - ism . This approach may help deﬁne the basic computational elements of other biological networks . We compiled a data set of direct transcriptional interactions between transcription factors and the operons they regulate ( an operon is a group of contiguous genes that are transcribed into a single mRNA molecule ) . This database contains 577 interac - tions and 424 operons ( involving 116 transcription factors ) ; it was formed on the basis of on an existing database ( Regu - lonDB ) 3 , 14 . We enhanced RegulonDB by an extensive literature search , adding 35 new transcription factors , including alterna - tive ! - factors ( subunits of RNA polymerase that confer recogni - tion of speciﬁc promoter sequences ) . The data set consists of established interactions in which a transcription factor directly binds a regulatory site . The transcriptional network can be represented as a directed graph , in which each node represents an operon and edges repre - sent direct transcriptional interactions . Each edge is directed Published online : 22 April 2002 , DOI : 10 . 1038 / ng881 single input module ( SIM ) X n feedforward loop Z X Y dense overlapping regulons ( DOR ) Z 1 Z 2 . . . Z m Z 3 Z 4 X 1 X 2 . . . X n X 3 X Z 1 Z 2 . . . Z n nha R f i s a l k A k a t G dp s o s m C nha A p r o P ada r po S o xy R i h f l r p hn s r cs A c r p ft s Q A Z X 1 X 2 X 3 X n X n Y crp araC araBAD argR a r g C B H a r g D a r g E a r g F a r g I Fig . 1 Network motifs found in the E . coli transcriptional regulation network . Symbols representing the motifs are also shown . a , Feedforward loop : a tran - scription factor X regulates a second transcription factor Y , and both jointly regulate one or more operons Z 1 . . . Z n . b , Example of a feedforward loop ( L - ara - binose utilization ) . c , SIM motif : a single transcription factor , X , regulates a set of operons Z 1 . . . Z n . X is usually autoregulatory . All regulations are of the same sign . No other transcription factor regulates the operons . d , Example of a SIM system ( arginine biosynthesis ) . e , DOR motif : a set of operons Z 1 . . . Z m are each regulated by a combination of a set of input transcription factors , X 1 . . . X n . DORs are deﬁned by an algorithm that detects dense regions of connections , with a high ratio of connections to transcription factors . f , Example of a DOR ( stationary phase response ) . a b c d e f © 2002 N a t u r e P ub li s h i ng G r oup h tt p : / / g e n e t i cs . n a t u r e . c o m from X and a delayed one through Y . If the activation ofX is tran - sient , Y cannot reach the level needed to signiﬁcantly activate Z , and the input signal is not transduced through the circuit . Only when X signals for a long enough time so that Y levels can build up will Z be activated ( Fig . 2 a ) . Once X is deactivated , Z shuts down rapidly . This kind of behavior can be useful for making decisions based on ﬂuctuating external signals . The SIM motif is found in systems of genes that function sto - chiometrically to form a protein assembly ( such as ﬂagella ) or a metabolic pathway ( such as amino - acid biosynthesis ) . In these cases , it is useful that the activities of the operons are determined by a single transcription factor , so that their proportions at steady state can be ﬁxed . In addition , mathematical analysis sug - gests that SIMs can show a detailed temporal program of expres - sion resulting from differences in the activation thresholds of the different genes ( Fig . 2 b ) . Built into this design is a pattern in which the ﬁrst gene activated is the last one to be deactivated . Such temporal ordering can be useful in processes that require several stages to complete . This type of mechanism may explain the experimentally observed temporal program in the expression of ﬂagella biosynthesis genes 18 . The motifs allow a representation of the E . coli transcriptional network ( Fig . 3 ) in a compact , modular form ( for an image of the full network , see Web Fig . A online ) . By using symbols to represent the different motifs ( Fig . 1 ) , the network is broken down to its basic building blocks . A single layer of DORs connects most of the transcription factors to their effector operons . Feedforward loops and SIMs often occur at the outputs of these DORs . The DORs are interconnected by the global transcription factors , which typically control many genes in one DOR and few genes in several DORs . An important step in visualizing the network was to allow each global transcription factor to appear multiple times , whenever it is an input to a structure . This reduces the complexity of the inter - connections while preserving all the information . There are few long cascades 3 , usually involving ! - factors , such as cas - cades of depth 5 in the ﬂagella and nitrogen systems . Over 70 % of the operons are connected to the DORs ; the rest of the operons are in small disjoint systems . Most disjoint systems have only 1 to 3 operons . The remaining disjoint systems have up to 25 operons and show many SIMs and feedforward loops . A notable feature of the overall organi - zation is the large degree of overlap within DORs between the short cascades that control most operons . The layer of DORs may therefore represent the core of the computa - tion carried out by the transcriptional network . Cycles such as feedback loops are an important feature of regulatory networks . Transcriptional feedback loops occur in various organisms , such as the genetic switch in " - phage 5 . In the E . coli data set , there are no examples of feedback loops of direct transcriptional interactions , except for auto - regulatory loops 3 . However , the absence of feedback loops is not statistically signiﬁcant , as over 80 % of the randomized networks also have no feedback loops ( Table 1 ) . The many regulatory feedbacks loops in the organism are carried out at the post - transcriptional level . We considered only transcription interactions speciﬁcally manifested by transcription factors that bind regulatory sites 3 , 14 . This transcriptional network can be thought of as the ‘slow’ part of the cellular regulation network ( time scale of minutes ) . An additional layer of faster interactions , which include interactions between proteins ( often subsecond timescale ) , contributes to the full regulatory behavior and will probably introduce additional network motifs . Characterization of additional transcriptional interactions may change the present motif assignment for spe - ciﬁc systems . However , our conclusions regarding the high fre - quencies of feedforward loops , SIMs and overlapping regulation compared with randomized networks are insensitive to the addi - tion or removal of interactions from the data set . These features are still highly signiﬁcant , even when 25 % of the connections in the E . coli network are removed or rearranged at random . The concept of homology between genes based on sequence motifs has been crucial for understanding the function of uncharacterized genes . Likewise , the notion of similarity between connectivity patterns in networks , based on network motifs , may be helpful in gaining insight into the dynamic behavior of newly identiﬁed gene circuits . The present analysis may serve as a guideline for experimental study of the functions of the motifs . It would be useful to determine whether the net - work motifs found in E . coli can characterize the transcriptional networks of other cell types . In higher eukaryotes , for example , there will be many more regulators affecting each gene , and addi - tional types of circuits may be found . The ﬁndings presented here also raise the possibility that motifs can be deﬁned in other biological networks 7 , such as signal transduction , metabolic 19 and neuron connectivity networks . letter 66 nature genetics • volume 31 • may 2002 Fig . 2 Dynamic features of the coherent feedforward loop and SIM motifs . a , Consider a coherent feedforward loop circuit with an ‘AND - gate’ – like control of the output operon Z . This circuit can reject rapid variations in the activity of the input X , and respond only to persistent activation proﬁles . This is because Y needs to integrate the input X over time to pass the activation threshold for Z ( thin line ) . A similar rejection of rapid ﬂuctuations can be achieved by a cascade , X # Y # Z ; however , the cascade has a slower shut - down than the feedforward loop ( thin red line in the Z dynamics panel ) . b , Dynamics of the SIM motif . This motif can show a temporal program of expression accord - ing to a hierarchy of activation thresholds of the genes . When the activity of X , the master activator , rises and falls with time , the genes with the lowest threshold are activated earliest and deactivated lat - est . Time is in units of protein lifetimes , or of cell cycles in the case of long - lived proteins . a b © 2002 N a t u r e P ub li s h i ng G r oup h tt p : / / g e n e t i cs . n a t u r e . c o m I Z only turns on in response to sustained activity in X . I Turning off X rapidly turns off Z . I Analogy to elevator doors . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 14 of 17 Network motifs letter 64 nature genetics • volume 31 • may 2002 Network motifs in the transcriptional regulation network of Escherichia coli Shai S . Shen - Orr 1 , Ron Milo 2 , Shmoolik Mangan 1 & Uri Alon 1 , 2 1 Department of Molecular Cell Biology , 2 Department of Physics of Complex Systems , Weizmann Institute of Science , Rehovot 76100 , Israel . Correspondence should be addressed to U . A . ( e - mail : urialon @ wisemail . weizmann . ac . il ) . Little is known about the design principles 1 – 10 of transcrip - tional regulation networks that control gene expression in cells . Recent advances in data collection and analysis 2 , 11 , 12 , however , are generating unprecedented amounts of informa - tion about gene regulation networks . To understand these complex wiring diagrams 1 – 10 , 13 , we sought to break down such networks into basic building blocks 2 . We generalize the notion of motifs , widely used for sequence analysis , to the level of networks . We deﬁne ‘network motifs’ as patterns of intercon - nections that recur in many different parts of a network at fre - quencies much higher than those found in randomized networks . We applied new algorithms for systematically detecting network motifs to one of the best - characterized reg - ulation networks , that of direct transcriptional interactions in Escherichia coli 3 , 6 . We ﬁnd that much of the network is com - posed of repeated appearances of three highly signiﬁcant motifs . Each network motif has a speciﬁc function in determin - ing gene expression , such as generating temporal expression programs and governing the responses to ﬂuctuating external signals . The motif structure also allows an easily interpretable view of the entire known transcriptional network of the organ - ism . This approach may help deﬁne the basic computational elements of other biological networks . We compiled a data set of direct transcriptional interactions between transcription factors and the operons they regulate ( an operon is a group of contiguous genes that are transcribed into a single mRNA molecule ) . This database contains 577 interac - tions and 424 operons ( involving 116 transcription factors ) ; it was formed on the basis of on an existing database ( Regu - lonDB ) 3 , 14 . We enhanced RegulonDB by an extensive literature search , adding 35 new transcription factors , including alterna - tive ! - factors ( subunits of RNA polymerase that confer recogni - tion of speciﬁc promoter sequences ) . The data set consists of established interactions in which a transcription factor directly binds a regulatory site . The transcriptional network can be represented as a directed graph , in which each node represents an operon and edges repre - sent direct transcriptional interactions . Each edge is directed Published online : 22 April 2002 , DOI : 10 . 1038 / ng881 single input module ( SIM ) X n feedforward loop Z X Y dense overlapping regulons ( DOR ) Z 1 Z 2 . . . Z m Z 3 Z 4 X 1 X 2 . . . X n X 3 X Z 1 Z 2 . . . Z n nh a R f i s a l k A k a t G dp s o s m C nha A p r o P ad a r p o S o x y R i h f l r p hn s r c s A c r p ft s Q A Z X 1 X 2 X 3 X n X n Y crp araC araBAD argR a r g C B H a r g D a r g E a r g F a r g I Fig . 1 Network motifs found in the E . coli transcriptional regulation network . Symbols representing the motifs are also shown . a , Feedforward loop : a tran - scription factor X regulates a second transcription factor Y , and both jointly regulate one or more operons Z 1 . . . Z n . b , Example of a feedforward loop ( L - ara - binose utilization ) . c , SIM motif : a single transcription factor , X , regulates a set of operons Z 1 . . . Z n . X is usually autoregulatory . All regulations are of the same sign . No other transcription factor regulates the operons . d , Example of a SIM system ( arginine biosynthesis ) . e , DOR motif : a set of operons Z 1 . . . Z m are each regulated by a combination of a set of input transcription factors , X 1 . . . X n . DORs are deﬁned by an algorithm that detects dense regions of connections , with a high ratio of connections to transcription factors . f , Example of a DOR ( stationary phase response ) . a b c d e f © 2002 N a t u r e P ub li s h i n g G r oup h t t p : / / g e n e t i cs . n a t u r e . c o m I Master switch . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 15 of 17 Network motifs letter 64 nature genetics • volume 31 • may 2002 Network motifs in the transcriptional regulation network of Escherichia coli Shai S . Shen - Orr 1 , Ron Milo 2 , Shmoolik Mangan 1 & Uri Alon 1 , 2 1 Department of Molecular Cell Biology , 2 Department of Physics of Complex Systems , Weizmann Institute of Science , Rehovot 76100 , Israel . Correspondence should be addressed to U . A . ( e - mail : urialon @ wisemail . weizmann . ac . il ) . Little is known about the design principles 1 – 10 of transcrip - tional regulation networks that control gene expression in cells . Recent advances in data collection and analysis 2 , 11 , 12 , however , are generating unprecedented amounts of informa - tion about gene regulation networks . To understand these complex wiring diagrams 1 – 10 , 13 , we sought to break down such networks into basic building blocks 2 . We generalize the notion of motifs , widely used for sequence analysis , to the level of networks . We deﬁne ‘network motifs’ as patterns of intercon - nections that recur in many different parts of a network at fre - quencies much higher than those found in randomized networks . We applied new algorithms for systematically detecting network motifs to one of the best - characterized reg - ulation networks , that of direct transcriptional interactions in Escherichia coli 3 , 6 . We ﬁnd that much of the network is com - posed of repeated appearances of three highly signiﬁcant motifs . Each network motif has a speciﬁc function in determin - ing gene expression , such as generating temporal expression programs and governing the responses to ﬂuctuating external signals . The motif structure also allows an easily interpretable view of the entire known transcriptional network of the organ - ism . This approach may help deﬁne the basic computational elements of other biological networks . We compiled a data set of direct transcriptional interactions between transcription factors and the operons they regulate ( an operon is a group of contiguous genes that are transcribed into a single mRNA molecule ) . This database contains 577 interac - tions and 424 operons ( involving 116 transcription factors ) ; it was formed on the basis of on an existing database ( Regu - lonDB ) 3 , 14 . We enhanced RegulonDB by an extensive literature search , adding 35 new transcription factors , including alterna - tive ! - factors ( subunits of RNA polymerase that confer recogni - tion of speciﬁc promoter sequences ) . The data set consists of established interactions in which a transcription factor directly binds a regulatory site . The transcriptional network can be represented as a directed graph , in which each node represents an operon and edges repre - sent direct transcriptional interactions . Each edge is directed Published online : 22 April 2002 , DOI : 10 . 1038 / ng881 single input module ( SIM ) X n feedforward loop Z X Y dense overlapping regulons ( DOR ) Z 1 Z 2 . . . Z m Z 3 Z 4 X 1 X 2 . . . X n X 3 X Z 1 Z 2 . . . Z n nha R f i s a l k A k a t G dp s o s m C nha A p r o P ada r po S o xy R i h f l r p hn s r cs A c r p ft s Q A Z X 1 X 2 X 3 X n X n Y crp araC araBAD argR a r g C B H a r g D a r g E a r g F a r g I Fig . 1 Network motifs found in the E . coli transcriptional regulation network . Symbols representing the motifs are also shown . a , Feedforward loop : a tran - scription factor X regulates a second transcription factor Y , and both jointly regulate one or more operons Z 1 . . . Z n . b , Example of a feedforward loop ( L - ara - binose utilization ) . c , SIM motif : a single transcription factor , X , regulates a set of operons Z 1 . . . Z n . X is usually autoregulatory . All regulations are of the same sign . No other transcription factor regulates the operons . d , Example of a SIM system ( arginine biosynthesis ) . e , DOR motif : a set of operons Z 1 . . . Z m are each regulated by a combination of a set of input transcription factors , X 1 . . . X n . DORs are deﬁned by an algorithm that detects dense regions of connections , with a high ratio of connections to transcription factors . f , Example of a DOR ( stationary phase response ) . a b c d e f © 2002 N a t u r e P ub li s h i ng G r oup h tt p : / / g e n e t i cs . n a t u r e . c o m Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 16 of 17 Network motifs I Note : selection of motifs to test is reasonable but nevertheless ad - hoc . I For more , see work carried out by Wiggins et al . at Columbia . Applications of Random Networks Analysis of real networks Howtobuildrevisited Motifs References 17 of 17 References I [ 1 ] R . Milo , N . Kashtan , S . Itzkovitz , M . E . J . Newman , and U . Alon . On the uniform generation of random graphs with prescribed degree sequences , 2003 . pdf ( (cid:1) ) [ 2 ] S . S . Shen - Orr , R . Milo , S . Mangan , and U . Alon . Network motifs in the transcriptional regulation network of Escherichia coli . Nature Genetics , pages 64 – 68 , 2002 . pdf ( (cid:1) )