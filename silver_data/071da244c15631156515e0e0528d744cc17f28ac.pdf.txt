CHI 2001 • 31 MARCH - 5 APRIL Demonsbafions CPN / Tools : Revisiting the Desktop Metaphor with Post - WlMP Interaction Techniques Michel Beaudouin - Lafon , Wendy E . Mackay , Peter Andersen , Paul Janecek , Mads Jensen , Michael Lassen , Kasper Lund , Kjeld Mortensen , Stephanie Munck , Katrine Ravn , Anne Ratzer , SCren Christensen and Kurt Jensen Department of Computer Science - University of Aarhus IT - Parken - Aabogade 34 8200 Aarhus N - Denmark cpn2000 @ daimi . au . dk - http : / / www . daimi . au . dk / CPnets ABSTRACT CPN / Tools is an editor and simulator of Coloured Petri Nets that uses post - WlMP interaction techniques , including bi - manual interaction , toolglasses and marking menus and a new metaphor for managing the workspace . It challenges traditional ideas about user interfaces , getting rid of pull - down menus , scrollbars , and even selection , while providing the same or greater functionality than current GUIs . This demo presents the first version of CPN / Tools . KEYWORDS : Post - WlMP interaction , instrumental interaction , Coloured Petri Nets . THE CPN / Tools INTERFACE The CPN / Tools interface requires a traditional mouse and keyboard , plus a trackball ( or other locator ) for the non - dominant hand . CPN / Tools integrates the six following interaction techniques , none of which require the concept of selection . They are all contextual , i . e . the object of interest is specified as part of the interaction . Direct manipulation , i . e . clicking and dragging objects , is used for frequent operations such as moving objects , panning the content of a view and editing text . When a tool is held in the fight hand , e . g . , after having selected it in a floating palette , direct manipulation actions are still available via a long click , i . e . pressing the mouse button , waiting for 200ms until the cursor changes , and then either dragging or releasing the mouse button . The visual feedback makes it easy for users to understand this multiplexing of tools in the right hand . Bi - manual manipulation is a variant of direct manipulation that involves using both hands for a single task . It is used to resize objects such as windows and objects within windows and to zoom the contents of a document . The interaction is similar to holding an object with two hands and stretching or shrinking it . © Copyright on this material is held by the Author ( s ) . Marking menus are radial , contextual menus that appear when clicking the right button of the mouse on an object . They offer faster selection than traditional linear menus 5 . Keyboard input is used only for editing text . Some navigation commands are available at the keyboard to make it easier to edit several inscriptions in a row without having to move the hands from the keyboard . Keyboard modifiers and shortcuts are not necessary since most of the interaction is carried out with the two hands on the mouse and trackball . Floating palettes contain sets of tools represented by buttons . Clicking on a tool button switches the cursor to that tool ; the user effectively holds the tool in his or her hand . Clicking on an object with the tool in hand applies the tool to that object . In many current interfaces , the system automatically switches to a " select " tool after the user creates an object . CPN / Tools avoids this by getting rid of the notion of selection . The user can move any object , even with a tool in hand , by using a long mouse click ( 200ms ) . This is like keeping your ( physical ) pencil in your hand , while moving an eraser out of the way , and then writing . Toolglasses , like floating palettes , contain a set of tools represented by buttons . Unlike floating palettes , they are semi - transparent and are moved with the left hand 4 . A tool is applied to an object with a click - through action . The toolglass disappears whenever the tool requires a drag , as when creating an arc . This prevents the toolglass from getting in the way and makes it easier to pan the document with the left hand if the target position is not visible . Toolglass can be turned into floating palettes and vice versa , using the fight button of the trackball . Our user studies have shown that no single technique is best in all situations . Rather , each emphasizes a different but common pattern of use , by using a different syntax : • object - then - command : point at the object of interest , then select the command from a contextual marking menu . This works well when applying multiple commands to a single object ; • command - then - object : select a command by clicking a tool in a floating palette , then apply the tool to one or anyone , anywhere . 11 Demons ~ afions CHI 2001 • 31 MARCH - 5 APRIL more objects of interest . This works well when applying the same command to different objects ; • command - and - object : select the command and the object simultaneously , by clicking through a toolglass or moving it directly . This works well when the work is driven by the structure of the application objects , such as working around a cycle in a Petri net . The Workspace Manager The left part of the screen is called the index and contains a hierarchical list of objects ( toolglasses , floating palettes and Petri net modules ) that can be dragged into the workspace with either hand . The workspace occupies the rest of the screen and contains window - like objects called binders . Binders contain pages , each equivalent to a window in a traditional environment . Each page has a tab similar to those found in tabbed dialogs . Clicking the tab brings that page to the front of the binder . A page can be dragged to a different binder or to the workspace with either hand by dragging its tab . Binders reduce the number of windows on the screen and the time spent organizing them . Pages and binders do not have scrollbars . If the contents of a page are too large , they can be panned with the left button of the trackball , even while the right hand is using the mouse to move an object or invoke a command with a marking menu . Resizing a binder and zooming the contents of a page uses direct bi - manual interaction . Laying out Objects Horizontal and vertical magnetic guidelines facilitate aligning objects . Guidelines are first - class objects created via tools from palettes , toolglasses or marking menus . Guidelines are displayed as dashed lines and are magnetic . Moving an object near a guideline causes the object to snap to the guideline . Objects can be removed from a guideline by clicking and dragging them away from the guideline . Moving the guideline moves all the objects that are snapped to it , thus maintaining the alignment . An object can be snapped to both a horizontal and a vertical guideline , and manipulated simultaneously . Editing Attributes The tools to edit the graphical attributes of the CPN elements are grouped in several categories within a palette / toolglass : color swatches , lines with different thicknesses and dash patterns , and user - defined styles . The first three categories are fairly standard and are not described further . Each tool in the last category is initially a style picker . Applying it to an object copies the object ' s attributes into the tool and transforms the tool into a style dropper . Applying a style dropper to an object assigns the tool ' s attributes to that object . Applying a style dropper to the background of the workspace empties it and turns it into a style picker . Style pickers and style droppers make it very easy and efficient for users to define the styles they use most often and apply them to objects in the diagram . CONCLUSION The CPN / Tools interface has no menu bars , no pull - down menus , no scrollbars , no dialog boxes and no notion of selection . Instead , it uses a unique combination of floating palettes , toolglasses and hierarchical marking menus , a novel windowing model based on pages and binders , and several new interaction techniques such as magnetic guidelines to align objects and bi - manual interaction to manipulate objects . Integrating these interaction techniques together in a consistent way in a single tool proved quite challe , nging . To our knowledge , this had never been done before . We used a highly participatory design process , involving the users throughout the design 6 . We based the design on instrumental interaction 1 and defined three design principles to help make the interface both simple and powerful 2 . We implemented the system from scratch 3 , using OpenGL for rendering . CPN / Tools is already in use by a small group of CPN designers for production work . Future versions will be available more widely , for free . We hope this work will foster further research in post - WIMP interaction in order to revisit and reinvent desktop interfaces . ACKNOWLEDGMENTS This work is supported by the University of Aarhus , the Danish Centre for IT Research ( CIT ) , Hewlett - Packard and Microsoft Research . REFERENCES 1 . Beaudouin - Lafon , M . Instrumental Interaction : An Interaction Model for Designing Post - WIMP User Interfaces . In Proc . Human Factors in Computing Systems , CHI ' 2000 , ACM Press , 2000 , p . 446 - 453 . 2 . Beaudouin - Lafon , M . & Mackay , W . Reification , Polymorphism and Reuse : Three Principles for Designing Visual Interfaces . In Proc . Confi ; rence on Advanced Visual Interfaces , AVI 2000 , Palermo , Italy , May 2000 , p . 102 - 109 . Beaudouin - Lafon , M . & Lassen , M . The Architecture and Implementation of a Post - WIMP Graphical Application . In Proc . ACM Symposium on User Interface Software and Technology , UIST 2000 , San Diego , CA , Nov 2000 , ACM Press , 2000 , p . 191 - 190 . Bier , E . , Stone , M . , Pier , K . , Buxton , W . , De Rose , T . Toolglass and Magic Lenses : the See - Through Interface . In Proc . ACM SIGGRAPH , ACM Press , 1993 , p . 73 - 80 . Kurtenbach , G . & Buxton , W . User Learning and Performance with Marking Menus . In Proc . Human Factors in Computing Systems , CHr94 , ACM , 1994 , p . 258 - 264 . Mackay , W . , Ratzer , A . & Janecek , P . Video Artifacts for Design : Bridging the Gap between Abstraction and Detail . In Proc . ACM Conference on Designing Interactive Systems , DIS 2000 , New York , August 2000 , ACM Press , 2000 , pp . 72 - 82 . 3 . 4 . 5 . 6 . 12 ( : HI 2001